
mathEval.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0001688a  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000448  00802000  0001688a  0001691e  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000386  00802448  00802448  00016d66  2**0
                  ALLOC
  3 .debug_aranges 00000140  00000000  00000000  00016d66  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_pubnames 000001c7  00000000  00000000  00016ea6  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00002d29  00000000  00000000  0001706d  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000cca  00000000  00000000  00019d96  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00002620  00000000  00000000  0001aa60  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000260  00000000  00000000  0001d080  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    0000164d  00000000  00000000  0001d2e0  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00001cc2  00000000  00000000  0001e92d  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000820  00000000  00000000  000205ef  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 2b 07 	jmp	0xe56	; 0xe56 <__ctors_end>
       4:	0c 94 5c 07 	jmp	0xeb8	; 0xeb8 <__bad_interrupt>
       8:	0c 94 8a 25 	jmp	0x4b14	; 0x4b14 <__vector_2>
       c:	0c 94 c8 25 	jmp	0x4b90	; 0x4b90 <__vector_3>
      10:	0c 94 6a 29 	jmp	0x52d4	; 0x52d4 <__vector_4>
      14:	0c 94 a8 29 	jmp	0x5350	; 0x5350 <__vector_5>
      18:	0c 94 6f 49 	jmp	0x92de	; 0x92de <__vector_6>
      1c:	0c 94 ba 49 	jmp	0x9374	; 0x9374 <__vector_7>
      20:	0c 94 05 4a 	jmp	0x940a	; 0x940a <__vector_8>
      24:	0c 94 50 4a 	jmp	0x94a0	; 0x94a0 <__vector_9>
      28:	0c 94 5c 07 	jmp	0xeb8	; 0xeb8 <__bad_interrupt>
      2c:	0c 94 5c 07 	jmp	0xeb8	; 0xeb8 <__bad_interrupt>
      30:	0c 94 5c 07 	jmp	0xeb8	; 0xeb8 <__bad_interrupt>
      34:	0c 94 5c 07 	jmp	0xeb8	; 0xeb8 <__bad_interrupt>
      38:	0c 94 97 51 	jmp	0xa32e	; 0xa32e <__vector_14>
      3c:	0c 94 9d 50 	jmp	0xa13a	; 0xa13a <__vector_15>
      40:	0c 94 ab 50 	jmp	0xa156	; 0xa156 <__vector_16>
      44:	0c 94 e6 50 	jmp	0xa1cc	; 0xa1cc <__vector_17>
      48:	0c 94 21 51 	jmp	0xa242	; 0xa242 <__vector_18>
      4c:	0c 94 5c 51 	jmp	0xa2b8	; 0xa2b8 <__vector_19>
      50:	0c 94 48 52 	jmp	0xa490	; 0xa490 <__vector_20>
      54:	0c 94 5c 07 	jmp	0xeb8	; 0xeb8 <__bad_interrupt>
      58:	0c 94 d2 51 	jmp	0xa3a4	; 0xa3a4 <__vector_22>
      5c:	0c 94 0d 52 	jmp	0xa41a	; 0xa41a <__vector_23>
      60:	0c 94 6a 2e 	jmp	0x5cd4	; 0x5cd4 <__vector_24>
      64:	0c 94 f1 3d 	jmp	0x7be2	; 0x7be2 <__vector_25>
      68:	0c 94 27 3e 	jmp	0x7c4e	; 0x7c4e <__vector_26>
      6c:	0c 94 5c 07 	jmp	0xeb8	; 0xeb8 <__bad_interrupt>
      70:	0c 94 5d 3e 	jmp	0x7cba	; 0x7cba <__vector_28>
      74:	0c 94 93 3e 	jmp	0x7d26	; 0x7d26 <__vector_29>
      78:	0c 94 5c 07 	jmp	0xeb8	; 0xeb8 <__bad_interrupt>
      7c:	0c 94 5c 07 	jmp	0xeb8	; 0xeb8 <__bad_interrupt>
      80:	0c 94 5c 07 	jmp	0xeb8	; 0xeb8 <__bad_interrupt>
      84:	0c 94 5c 07 	jmp	0xeb8	; 0xeb8 <__bad_interrupt>
      88:	0c 94 0e 25 	jmp	0x4a1c	; 0x4a1c <__vector_34>
      8c:	0c 94 4c 25 	jmp	0x4a98	; 0x4a98 <__vector_35>
      90:	0c 94 5c 07 	jmp	0xeb8	; 0xeb8 <__bad_interrupt>
      94:	0c 94 5c 07 	jmp	0xeb8	; 0xeb8 <__bad_interrupt>
      98:	0c 94 5c 07 	jmp	0xeb8	; 0xeb8 <__bad_interrupt>
      9c:	0c 94 5c 07 	jmp	0xeb8	; 0xeb8 <__bad_interrupt>
      a0:	0c 94 5c 07 	jmp	0xeb8	; 0xeb8 <__bad_interrupt>
      a4:	0c 94 5c 07 	jmp	0xeb8	; 0xeb8 <__bad_interrupt>
      a8:	0c 94 5c 07 	jmp	0xeb8	; 0xeb8 <__bad_interrupt>
      ac:	0c 94 82 26 	jmp	0x4d04	; 0x4d04 <__vector_43>
      b0:	0c 94 c0 26 	jmp	0x4d80	; 0x4d80 <__vector_44>
      b4:	0c 94 5c 07 	jmp	0xeb8	; 0xeb8 <__bad_interrupt>
      b8:	0c 94 5c 07 	jmp	0xeb8	; 0xeb8 <__bad_interrupt>
      bc:	0c 94 47 55 	jmp	0xaa8e	; 0xaa8e <__vector_47>
      c0:	0c 94 5c 07 	jmp	0xeb8	; 0xeb8 <__bad_interrupt>
      c4:	0c 94 5b 54 	jmp	0xa8b6	; 0xa8b6 <__vector_49>
      c8:	0c 94 96 54 	jmp	0xa92c	; 0xa92c <__vector_50>
      cc:	0c 94 d1 54 	jmp	0xa9a2	; 0xa9a2 <__vector_51>
      d0:	0c 94 0c 55 	jmp	0xaa18	; 0xaa18 <__vector_52>
      d4:	0c 94 f8 55 	jmp	0xabf0	; 0xabf0 <__vector_53>
      d8:	0c 94 5c 07 	jmp	0xeb8	; 0xeb8 <__bad_interrupt>
      dc:	0c 94 82 55 	jmp	0xab04	; 0xab04 <__vector_55>
      e0:	0c 94 bd 55 	jmp	0xab7a	; 0xab7a <__vector_56>
      e4:	0c 94 da 2e 	jmp	0x5db4	; 0x5db4 <__vector_57>
      e8:	0c 94 a1 3f 	jmp	0x7f42	; 0x7f42 <__vector_58>
      ec:	0c 94 d7 3f 	jmp	0x7fae	; 0x7fae <__vector_59>
      f0:	0c 94 5c 07 	jmp	0xeb8	; 0xeb8 <__bad_interrupt>
      f4:	0c 94 0d 40 	jmp	0x801a	; 0x801a <__vector_61>
      f8:	0c 94 43 40 	jmp	0x8086	; 0x8086 <__vector_62>
      fc:	0c 94 5c 07 	jmp	0xeb8	; 0xeb8 <__bad_interrupt>
     100:	0c 94 06 26 	jmp	0x4c0c	; 0x4c0c <__vector_64>
     104:	0c 94 44 26 	jmp	0x4c88	; 0x4c88 <__vector_65>
     108:	0c 94 92 24 	jmp	0x4924	; 0x4924 <__vector_66>
     10c:	0c 94 d0 24 	jmp	0x49a0	; 0x49a0 <__vector_67>
     110:	0c 94 5c 07 	jmp	0xeb8	; 0xeb8 <__bad_interrupt>
     114:	0c 94 5c 07 	jmp	0xeb8	; 0xeb8 <__bad_interrupt>
     118:	0c 94 5c 07 	jmp	0xeb8	; 0xeb8 <__bad_interrupt>
     11c:	0c 94 5c 07 	jmp	0xeb8	; 0xeb8 <__bad_interrupt>
     120:	0c 94 5c 07 	jmp	0xeb8	; 0xeb8 <__bad_interrupt>
     124:	0c 94 5c 07 	jmp	0xeb8	; 0xeb8 <__bad_interrupt>
     128:	0c 94 5c 07 	jmp	0xeb8	; 0xeb8 <__bad_interrupt>
     12c:	0c 94 5c 07 	jmp	0xeb8	; 0xeb8 <__bad_interrupt>
     130:	0c 94 5c 07 	jmp	0xeb8	; 0xeb8 <__bad_interrupt>
     134:	0c 94 6f 53 	jmp	0xa6de	; 0xa6de <__vector_77>
     138:	0c 94 5c 07 	jmp	0xeb8	; 0xeb8 <__bad_interrupt>
     13c:	0c 94 83 52 	jmp	0xa506	; 0xa506 <__vector_79>
     140:	0c 94 be 52 	jmp	0xa57c	; 0xa57c <__vector_80>
     144:	0c 94 f9 52 	jmp	0xa5f2	; 0xa5f2 <__vector_81>
     148:	0c 94 34 53 	jmp	0xa668	; 0xa668 <__vector_82>
     14c:	0c 94 20 54 	jmp	0xa840	; 0xa840 <__vector_83>
     150:	0c 94 5c 07 	jmp	0xeb8	; 0xeb8 <__bad_interrupt>
     154:	0c 94 aa 53 	jmp	0xa754	; 0xa754 <__vector_85>
     158:	0c 94 e5 53 	jmp	0xa7ca	; 0xa7ca <__vector_86>
     15c:	0c 94 a2 2e 	jmp	0x5d44	; 0x5d44 <__vector_87>
     160:	0c 94 c9 3e 	jmp	0x7d92	; 0x7d92 <__vector_88>
     164:	0c 94 ff 3e 	jmp	0x7dfe	; 0x7dfe <__vector_89>
     168:	0c 94 5c 07 	jmp	0xeb8	; 0xeb8 <__bad_interrupt>
     16c:	0c 94 35 3f 	jmp	0x7e6a	; 0x7e6a <__vector_91>
     170:	0c 94 6b 3f 	jmp	0x7ed6	; 0x7ed6 <__vector_92>
     174:	0c 94 5c 07 	jmp	0xeb8	; 0xeb8 <__bad_interrupt>
     178:	0c 94 ee 28 	jmp	0x51dc	; 0x51dc <__vector_94>
     17c:	0c 94 2c 29 	jmp	0x5258	; 0x5258 <__vector_95>
     180:	0c 94 7a 27 	jmp	0x4ef4	; 0x4ef4 <__vector_96>
     184:	0c 94 b8 27 	jmp	0x4f70	; 0x4f70 <__vector_97>
     188:	0c 94 f6 27 	jmp	0x4fec	; 0x4fec <__vector_98>
     18c:	0c 94 34 28 	jmp	0x5068	; 0x5068 <__vector_99>
     190:	0c 94 72 28 	jmp	0x50e4	; 0x50e4 <__vector_100>
     194:	0c 94 b0 28 	jmp	0x5160	; 0x5160 <__vector_101>
     198:	0c 94 5c 07 	jmp	0xeb8	; 0xeb8 <__bad_interrupt>
     19c:	0c 94 5c 07 	jmp	0xeb8	; 0xeb8 <__bad_interrupt>
     1a0:	0c 94 fe 26 	jmp	0x4dfc	; 0x4dfc <__vector_104>
     1a4:	0c 94 3c 27 	jmp	0x4e78	; 0x4e78 <__vector_105>
     1a8:	0c 94 5c 07 	jmp	0xeb8	; 0xeb8 <__bad_interrupt>
     1ac:	0c 94 5c 07 	jmp	0xeb8	; 0xeb8 <__bad_interrupt>
     1b0:	0c 94 1f 57 	jmp	0xae3e	; 0xae3e <__vector_108>
     1b4:	0c 94 5c 07 	jmp	0xeb8	; 0xeb8 <__bad_interrupt>
     1b8:	0c 94 33 56 	jmp	0xac66	; 0xac66 <__vector_110>
     1bc:	0c 94 6e 56 	jmp	0xacdc	; 0xacdc <__vector_111>
     1c0:	0c 94 a9 56 	jmp	0xad52	; 0xad52 <__vector_112>
     1c4:	0c 94 e4 56 	jmp	0xadc8	; 0xadc8 <__vector_113>
     1c8:	0c 94 d0 57 	jmp	0xafa0	; 0xafa0 <__vector_114>
     1cc:	0c 94 5c 07 	jmp	0xeb8	; 0xeb8 <__bad_interrupt>
     1d0:	0c 94 5a 57 	jmp	0xaeb4	; 0xaeb4 <__vector_116>
     1d4:	0c 94 95 57 	jmp	0xaf2a	; 0xaf2a <__vector_117>
     1d8:	0c 94 12 2f 	jmp	0x5e24	; 0x5e24 <__vector_118>
     1dc:	0c 94 79 40 	jmp	0x80f2	; 0x80f2 <__vector_119>
     1e0:	0c 94 af 40 	jmp	0x815e	; 0x815e <__vector_120>
     1e4:	0c 94 5c 07 	jmp	0xeb8	; 0xeb8 <__bad_interrupt>
     1e8:	0c 94 e5 40 	jmp	0x81ca	; 0x81ca <__vector_122>
     1ec:	0c 94 1b 41 	jmp	0x8236	; 0x8236 <__vector_123>
     1f0:	0c 94 5c 07 	jmp	0xeb8	; 0xeb8 <__bad_interrupt>
     1f4:	0f 2b       	or	r16, r31
     1f6:	14 2b       	or	r17, r20
     1f8:	19 2b       	or	r17, r25
     1fa:	21 2b       	or	r18, r17
     1fc:	26 2b       	or	r18, r22
     1fe:	2b 2b       	or	r18, r27
     200:	30 2b       	or	r19, r16
     202:	35 2b       	or	r19, r21
     204:	3a 2b       	or	r19, r26
     206:	3f 2b       	or	r19, r31
     208:	44 2b       	or	r20, r20
     20a:	49 2b       	or	r20, r25
     20c:	4e 2b       	or	r20, r30
     20e:	53 2b       	or	r21, r19
     210:	58 2b       	or	r21, r24
     212:	5d 2b       	or	r21, r29
     214:	62 2b       	or	r22, r18
     216:	67 2b       	or	r22, r23
     218:	6c 2b       	or	r22, r28
     21a:	71 2b       	or	r23, r17
     21c:	76 2b       	or	r23, r22
     21e:	7b 2b       	or	r23, r27
     220:	08 4a       	sbci	r16, 0xA8	; 168
     222:	d7 3b       	cpi	r29, 0xB7	; 183
     224:	3b ce       	rjmp	.-906    	; 0xfffffe9c <__eeprom_end+0xff7efe9c>
     226:	01 6e       	ori	r16, 0xE1	; 225
     228:	84 bc       	out	0x24, r8	; 36
     22a:	bf fd       	.word	0xfdbf	; ????
     22c:	c1 2f       	mov	r28, r17
     22e:	3d 6c       	ori	r19, 0xCD	; 205
     230:	74 31       	cpi	r23, 0x14	; 20
     232:	9a bd       	out	0x2a, r25	; 42
     234:	56 83       	std	Z+6, r21	; 0x06
     236:	3d da       	rcall	.-2950   	; 0xfffff6b2 <__eeprom_end+0xff7ef6b2>
     238:	3d 00       	.word	0x003d	; ????
     23a:	c7 7f       	andi	r28, 0xF7	; 247
     23c:	11 be       	out	0x31, r1	; 49
     23e:	d9 e4       	ldi	r29, 0x49	; 73
     240:	bb 4c       	sbci	r27, 0xCB	; 203
     242:	3e 91       	ld	r19, -X
     244:	6b aa       	std	Y+51, r6	; 0x33
     246:	aa be       	out	0x3a, r10	; 58
     248:	00 00       	nop
     24a:	00 80       	ld	r0, Z
     24c:	3f 05       	cpc	r19, r15
     24e:	a8 4c       	sbci	r26, 0xC8	; 200
     250:	cd b2       	in	r12, 0x1d	; 29
     252:	d4 4e       	sbci	r29, 0xE4	; 228
     254:	b9 38       	cpi	r27, 0x89	; 137
     256:	36 a9       	ldd	r19, Z+54	; 0x36
     258:	02 0c       	add	r0, r2
     25a:	50 b9       	out	0x00, r21	; 0
     25c:	91 86       	std	Z+9, r9	; 0x09
     25e:	88 08       	sbc	r8, r8
     260:	3c a6       	std	Y+44, r3	; 0x2c
     262:	aa aa       	std	Y+50, r10	; 0x32
     264:	2a be       	out	0x3a, r2	; 58
     266:	00 00       	nop
     268:	00 80       	ld	r0, Z
     26a:	3f 1b       	sub	r19, r31

0000026b <__c.4227>:
     26b:	1b 63 00                                            .c.

0000026e <__c.4214>:
     26e:	7c 2d 2d 2d 2d 2d 2d 2d 2d 2d 7c 2d 2d 2d 2d 2d     |---------|-----
     27e:	2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 7c 2d     --------------|-
     28e:	2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d     ----------------
     29e:	2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d     ----------------
     2ae:	2d 2d 2d 2d 2d 2d 2d 2d 2d 7c 0a 0d 00              ---------|...

000002bb <__c.4212>:
     2bb:	7c 20 43 6f 6d 6d 61 6e 64 20 7c 20 20 20 20 20     | Command |     
     2cb:	41 72 67 75 6d 65 6e 74 73 20 20 20 20 20 7c 20     Arguments     | 
     2db:	20 20 20 20 20 20 20 20 20 20 20 20 20 44 65 73                  Des
     2eb:	63 72 69 70 74 69 6f 6e 20 20 20 20 20 20 20 20     cription        
     2fb:	20 20 20 20 20 20 20 20 20 7c 0a 0d 00                       |...

00000308 <__c.4210>:
     308:	2e 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d     .---------------
     318:	2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d     ----------------
     328:	2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d     ----------------
     338:	2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d     ----------------
     348:	2d 2d 2d 2d 2d 2d 2d 2d 2d 2e 0a 0d 00              ---------....

00000355 <__c.4985>:
     355:	49 6e 76 61 6c 69 64 20 43 4d 44 0a 0d 00           Invalid CMD...

00000363 <__c.4983>:
     363:	68 65 61 64 00                                      head.

00000368 <__c.4981>:
     368:	2f 00                                               /.

0000036a <__c.4978>:
     36a:	63 64 00                                            cd.

0000036d <__c.4976>:
     36d:	6d 6b 64 69 72 00                                   mkdir.

00000373 <__c.4974>:
     373:	72 6d 64 69 72 00                                   rmdir.

00000379 <__c.4972>:
     379:	2d 72 00                                            -r.

0000037c <__c.4970>:
     37c:	72 6d 00                                            rm.

0000037f <__c.4968>:
     37f:	6c 73 00                                            ls.

00000382 <__c.4966>:
     382:	74 6f 70 00                                         top.

00000386 <__c.4964>:
     386:	64 65 76 00                                         dev.

0000038a <__c.4962>:
     38a:	73 64 6c 00                                         sdl.

0000038e <__c.4960>:
     38e:	68 65 6c 70 00                                      help.

00000393 <__c.4955>:
     393:	73 63 74 00                                         sct.

00000397 <__c.4953>:
     397:	49 6e 76 61 6c 69 64 20 6e 75 6d 62 65 72 20 6f     Invalid number o
     3a7:	66 20 74 6f 6b 65 6e 73 0a 0d 00                    f tokens...

000003b2 <__c.4951>:
     3b2:	49 6e 76 61 6c 69 64 20 74 6f 6b 65 6e 20 73 69     Invalid token si
     3c2:	7a 65 0a 0d 00                                      ze...

000003c7 <__c.4722>:
     3c7:	27 2d 2d 2d 2d 2d 2d 2d 2d 2d 27 2d 2d 2d 2d 2d     '---------'-----
     3d7:	2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 27 2d     --------------'-
     3e7:	2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d     ----------------
     3f7:	2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d     ----------------
     407:	2d 2d 2d 2d 2d 2d 2d 2d 2d 27 0a 0d 00              ---------'...

00000414 <__c.4720>:
     414:	7c 20 68 65 61 64 20 20 20 20 7c 20 3c 61 72 67     | head    | <arg
     424:	31 3e 20 20 20 20 20 20 20 20 20 20 20 20 7c 20     1>            | 
     434:	50 72 69 6e 74 73 20 61 20 66 69 6c 65 20 3c 61     Prints a file <a
     444:	72 67 31 3e 20 74 6f 20 74 68 65 20 74 65 72 6d     rg1> to the term
     454:	69 6e 61 6c 2e 20 20 20 20 7c 0a 0d 00              inal.    |...

00000461 <__c.4718>:
     461:	7c 20 74 6f 75 63 68 20 20 20 7c 20 3c 61 72 67     | touch   | <arg
     471:	31 3e 20 20 20 20 20 20 20 20 20 20 20 20 7c 20     1>            | 
     481:	43 72 65 61 74 65 20 66 69 6c 65 20 3c 61 72 67     Create file <arg
     491:	31 3e 2e 20 20 20 20 20 20 20 20 20 20 20 20 20     1>.             
     4a1:	20 20 20 20 20 20 20 20 20 7c 0a 0d 00                       |...

000004ae <__c.4716>:
     4ae:	7c 20 6d 6b 64 69 72 20 20 20 7c 20 3c 61 72 67     | mkdir   | <arg
     4be:	31 3e 20 20 20 20 20 20 20 20 20 20 20 20 7c 20     1>            | 
     4ce:	43 72 65 61 74 65 20 61 20 64 69 72 65 63 74 6f     Create a directo
     4de:	72 79 20 3c 61 72 67 31 3e 2e 20 20 20 20 20 20     ry <arg1>.      
     4ee:	20 20 20 20 20 20 20 20 20 7c 0a 0d 00                       |...

000004fb <__c.4714>:
     4fb:	7c 20 72 6d 64 69 72 20 20 20 7c 20 3c 61 72 67     | rmdir   | <arg
     50b:	31 3e 20 20 20 20 20 20 20 20 20 20 20 20 7c 20     1>            | 
     51b:	52 65 6d 6f 76 65 20 61 20 64 69 72 65 63 74 6f     Remove a directo
     52b:	72 79 2e 20 20 20 20 20 20 20 20 20 20 20 20 20     ry.             
     53b:	20 20 20 20 20 20 20 20 20 7c 0a 0d 00                       |...

00000548 <__c.4712>:
     548:	7c 20 72 6d 20 20 20 20 20 20 7c 20 3c 61 72 67     | rm      | <arg
     558:	31 3e 20 20 20 20 20 20 20 20 20 20 20 20 7c 20     1>            | 
     568:	52 65 6d 6f 76 65 20 61 20 66 69 6c 65 20 3c 61     Remove a file <a
     578:	72 67 31 3e 2e 20 20 20 20 20 20 20 20 20 20 20     rg1>.           
     588:	20 20 20 20 20 20 20 20 20 7c 0a 0d 00                       |...

00000595 <__c.4710>:
     595:	7c 20 63 64 20 20 20 20 20 20 7c 20 3c 61 72 67     | cd      | <arg
     5a5:	31 3e 20 20 20 20 20 20 20 20 20 20 20 20 7c 20     1>            | 
     5b5:	43 68 61 6e 67 65 20 74 6f 20 64 69 72 20 3c 61     Change to dir <a
     5c5:	72 67 31 3e 2e 20 20 20 20 20 20 20 20 20 20 20     rg1>.           
     5d5:	20 20 20 20 20 20 20 20 20 7c 0a 0d 00                       |...

000005e2 <__c.4708>:
     5e2:	7c 20 6c 73 20 20 20 20 20 20 7c 20 3c 61 72 67     | ls      | <arg
     5f2:	31 3e 20 20 20 20 20 20 20 20 20 20 20 20 7c 20     1>            | 
     602:	44 69 73 70 6c 61 79 73 20 74 68 65 20 63 6f 6e     Displays the con
     612:	74 65 6e 74 73 20 6f 66 20 64 69 72 20 3c 61 72     tents of dir <ar
     622:	67 31 3e 2e 20 20 20 20 20 7c 0a 0d 00              g1>.     |...

0000062f <__c.4706>:
     62f:	7c 20 74 6f 70 20 20 20 20 20 7c 20 20 20 20 20     | top     |     
     63f:	20 20 20 20 20 20 20 20 20 20 20 20 20 20 7c 20                   | 
     64f:	44 69 73 70 6c 61 79 73 20 73 79 73 74 65 6d 20     Displays system 
     65f:	73 74 61 74 69 73 74 69 63 73 2e 20 20 20 20 20     statistics.     
     66f:	20 20 20 20 20 20 20 20 20 7c 0a 0d 00                       |...

0000067c <__c.4704>:
     67c:	7c 20 64 65 76 20 20 20 20 20 7c 20 20 20 20 20     | dev     |     
     68c:	20 20 20 20 20 20 20 20 20 20 20 20 20 20 7c 20                   | 
     69c:	52 65 74 75 72 6e 73 20 61 20 6c 69 73 74 20 6f     Returns a list o
     6ac:	66 20 61 63 74 69 76 65 20 64 72 69 76 65 72 73     f active drivers
     6bc:	2e 20 20 20 20 20 20 20 20 7c 0a 0d 00              .        |...

000006c9 <__c.4702>:
     6c9:	7c 20 20 20 20 20 20 20 20 20 7c 20 20 20 20 20     |         |     
     6d9:	20 20 20 20 20 20 20 20 20 20 20 20 20 20 7c 20                   | 
     6e9:	30 2c 31 2c 32 20 28 6c 6f 77 2c 20 6d 65 64 2c     0,1,2 (low, med,
     6f9:	20 68 69 67 68 29 20 20 20 20 20 20 20 20 20 20      high)          
     709:	20 20 20 20 20 20 20 20 20 7c 0a 0d 00                       |...

00000716 <__c.4700>:
     716:	7c 20 73 64 6c 20 20 20 20 20 7c 20 3c 61 72 67     | sdl     | <arg
     726:	31 3e 20 20 20 20 20 20 20 20 20 20 20 20 7c 20     1>            | 
     736:	53 65 74 20 74 68 65 20 64 65 62 75 67 20 6c 65     Set the debug le
     746:	76 65 6c 2c 20 77 68 65 72 65 20 3c 61 72 67 31     vel, where <arg1
     756:	3e 20 3d 20 20 20 20 20 20 7c 0a 0d 00              > =      |...

00000763 <__c.4698>:
     763:	7c 2d 2d 2d 2d 2d 2d 2d 2d 2d 7c 2d 2d 2d 2d 2d     |---------|-----
     773:	2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 7c 2d     --------------|-
     783:	2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d     ----------------
     793:	2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d     ----------------
     7a3:	2d 2d 2d 2d 2d 2d 2d 2d 2d 7c 0a 0d 00              ---------|...

000007b0 <__c.4696>:
     7b0:	7c 20 43 6f 6d 6d 61 6e 64 20 7c 20 20 20 20 20     | Command |     
     7c0:	41 72 67 75 6d 65 6e 74 73 20 20 20 20 20 7c 20     Arguments     | 
     7d0:	20 20 20 20 20 20 20 20 20 20 20 20 20 44 65 73                  Des
     7e0:	63 72 69 70 74 69 6f 6e 20 20 20 20 20 20 20 20     cription        
     7f0:	20 20 20 20 20 20 20 20 20 7c 0a 0d 00                       |...

000007fd <__c.4694>:
     7fd:	2e 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d     .---------------
     80d:	2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d     ----------------
     81d:	2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d     ----------------
     82d:	2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d     ----------------
     83d:	2d 2d 2d 2d 2d 2d 2d 2d 2d 2e 0a 0d 00              ---------....

0000084a <__c.4764>:
     84a:	54 68 65 20 27 45 6e 74 65 72 27 20 62 75 74 74     The 'Enter' butt
     85a:	6f 6e 20 77 69 6c 6c 20 65 6e 61 62 6c 65 2f 64     on will enable/d
     86a:	69 73 61 62 6c 65 20 61 20 64 65 62 75 67 67 69     isable a debuggi
     87a:	6e 67 20 73 65 73 73 69 6f 6e 2e 20 50 72 65 73     ng session. Pres
     88a:	73 20 27 45 6e 74 65 72 27 20 74 6f 20 62 65 67     s 'Enter' to beg
     89a:	69 6e 2e 2e 2e 0a 0d 00                             in......

000008a2 <__c.4762>:
     8a2:	49 6e 76 61 6c 69 64 20 4c 65 76 65 6c 0a 0d 00     Invalid Level...

000008b2 <__c.4797>:
     8b2:	27 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d     '---------------
     8c2:	2d 2d 27 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d     --'-------------
     8d2:	2d 27 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 27     -'-------------'
     8e2:	2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 27 0a     --------------'.
     8f2:	0d 00                                               ..

000008f4 <__c.4792>:
     8f4:	7c 20 25 31 36 73 7c 20 25 32 64 20 20 20 20 20     | %16s| %2d     
     904:	20 20 20 20 20 20 7c 20 25 32 64 20 20 20 20 20           | %2d     
     914:	20 20 20 20 20 7c 20 25 32 64 20 20 20 20 20 20          | %2d      
     924:	20 20 20 20 20 7c 0a 0d 00                               |...

0000092d <__c.4790>:
     92d:	7c 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d     |---------------
     93d:	2d 2d 7c 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d     --|-------------
     94d:	2d 7c 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 7c     -|-------------|
     95d:	2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 7c 0a     --------------|.
     96d:	0d 00                                               ..

0000096f <__c.4788>:
     96f:	7c 20 20 20 44 72 69 76 65 72 20 4e 61 6d 65 20     |   Driver Name 
     97f:	20 20 7c 20 4d 61 6a 6f 72 20 4e 75 6d 62 65 72       | Major Number
     98f:	20 7c 20 4d 69 6e 6f 72 20 4e 75 6d 62 65 72 7c      | Minor Number|
     99f:	20 23 20 6f 66 20 48 61 6e 64 6c 65 73 20 7c 0a      # of Handles |.
     9af:	0d 00                                               ..

000009b1 <__c.4786>:
     9b1:	2e 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d     .---------------
     9c1:	2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d     ----------------
     9d1:	2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d     ----------------
     9e1:	2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2e 0a     --------------..
     9f1:	0d 00                                               ..

000009f3 <__c.4881>:
     9f3:	27 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d     '---------------
     a03:	2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 27 2d 2d 2d 2d 2d     ----------'-----
     a13:	2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 27 0a 0d 00           ----------'...

00000a21 <__c.4879>:
     a21:	7c 53 79 73 20 4c 6f 61 64 20 61 66 74 65 72 20     |Sys Load after 
     a31:	35 20 6d 69 6e 75 74 65 73 20 7c 20 25 31 32 2e     5 minutes | %12.
     a41:	31 66 25 25 20 7c 0a 0d 00                          1f%% |...

00000a4a <__c.4877>:
     a4a:	27 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d     '---------------
     a5a:	2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 27 2d 2d 2d 2d 2d     ----------'-----
     a6a:	2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 27 0a 0d 00           ----------'...

00000a78 <__c.4875>:
     a78:	7c 53 79 73 20 4c 6f 61 64 20 61 66 74 65 72 20     |Sys Load after 
     a88:	31 20 6d 69 6e 75 74 65 20 20 7c 20 25 31 32 2e     1 minute  | %12.
     a98:	31 66 25 25 20 7c 0a 0d 00                          1f%% |...

00000aa1 <__c.4873>:
     aa1:	27 2d 2d 2d 2d 2d 2d 2d 2d 2d 27 2d 2d 2d 2d 2d     '---------'-----
     ab1:	2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 27 2d 2d 2d 2d 2d     ----------'-----
     ac1:	2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 27 0a 0d 00           ----------'...

00000acf <__c.4871>:
     acf:	7c 20 20 20 20 20 20 20 20 20 7c 20 20 20 20 20     |         |     
     adf:	20 20 20 20 20 20 20 20 20 20 7c 20 25 31 32 64               | %12d
     aef:	25 25 20 7c 0a 0d 00                                %% |...

00000af6 <__c.4869>:
     af6:	7c 46 72 65 65 20 52 41 4d 20 7c 20 20 20 20 20     |Free RAM |     
     b06:	20 20 20 20 20 20 20 20 20 20 7c 20 25 31 33 64               | %13d
     b16:	20 7c 0a 0d 00                                       |...

00000b1b <__c.4867>:
     b1b:	27 2d 2d 2d 2d 2d 2d 2d 2d 2d 27 2d 2d 2d 2d 2d     '---------'-----
     b2b:	2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 27 2d 2d 2d 2d 2d     ----------'-----
     b3b:	2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 27 0a 0d 00           ----------'...

00000b49 <__c.4865>:
     b49:	7c 20 20 20 20 20 20 20 20 20 7c 20 20 20 20 20     |         |     
     b59:	20 20 20 20 20 20 20 20 20 20 7c 20 25 31 32 64               | %12d
     b69:	25 25 20 7c 0a 0d 00                                %% |...

00000b70 <__c.4863>:
     b70:	7c 55 73 65 64 20 52 41 4d 20 7c 20 20 20 20 20     |Used RAM |     
     b80:	20 20 20 20 20 20 20 20 20 20 7c 20 25 31 33 64               | %13d
     b90:	20 7c 0a 0d 00                                       |...

00000b95 <__c.4861>:
     b95:	27 2d 2d 2d 2d 2d 2d 2d 2d 2d 27 2d 2d 2d 2d 2d     '---------'-----
     ba5:	2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 27 2d 2d 2d 2d 2d     ----------'-----
     bb5:	2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 27 0a 0d 00           ----------'...

00000bc3 <__c.4859>:
     bc3:	7c 20 20 20 2e 68 65 61 70 20 7c 20 20 20 20 20     |   .heap |     
     bd3:	20 20 20 30 78 25 78 20 7c 20 25 31 33 64 20 7c        0x%x | %13d |
     be3:	0a 0d 00                                            ...

00000be6 <__c.4857>:
     be6:	7c 20 20 20 20 2e 62 73 73 20 7c 20 20 20 20 20     |    .bss |     
     bf6:	20 20 20 30 78 25 78 20 7c 20 25 31 33 64 20 7c        0x%x | %13d |
     c06:	0a 0d 00                                            ...

00000c09 <__c.4855>:
     c09:	7c 20 20 20 2e 64 61 74 61 20 7c 20 20 20 20 20     |   .data |     
     c19:	20 20 20 30 78 25 78 20 7c 20 25 31 33 64 20 7c        0x%x | %13d |
     c29:	0a 0d 00                                            ...

00000c2c <__c.4853>:
     c2c:	7c 2d 2d 2d 2d 2d 2d 2d 2d 2d 7c 2d 2d 2d 2d 2d     |---------|-----
     c3c:	2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 7c 2d 2d 2d 2d 2d     ----------|-----
     c4c:	2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 7c 0a 0d 00           ----------|...

00000c5a <__c.4851>:
     c5a:	7c 20 53 65 63 74 69 6f 6e 20 7c 20 20 20 20 41     | Section |    A
     c6a:	64 64 72 65 73 73 20 20 20 20 7c 20 20 20 53 69     ddress    |   Si
     c7a:	7a 65 20 42 79 74 65 73 20 20 7c 0a 0d 00           ze Bytes  |...

00000c88 <__c.4849>:
     c88:	2e 2d 2d 2d 2d 2d 2d 2d 2d 2d 2e 2d 2d 2d 2d 2d     .---------.-----
     c98:	2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2e 2d 2d 2d 2d 2d     ----------.-----
     ca8:	2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2e 0a 0d 00           ----------....

00000cb6 <__c.4650>:
     cb6:	0d 0a 50 72 65 73 73 20 27 45 6e 74 65 72 27 20     ..Press 'Enter' 
     cc6:	74 6f 20 72 65 73 75 6d 65 2c 20 27 71 27 20 74     to resume, 'q' t
     cd6:	6f 20 73 74 6f 70 2e 0a 0d 00                       o stop....

00000ce0 <__c.4691>:
     ce0:	25 33 64 5d 20 20 00                                %3d]  .

00000ce7 <__c.4689>:
     ce7:	25 30 33 64 5d 20 20 00                             %03d]  .

00000cef <__c.4687>:
     cef:	25 30 30 33 64 5d 20 20 00                          %003d]  .

00000cf8 <__c.4685>:
     cf8:	25 32 64 3a 00                                      %2d:.

00000cfd <__c.4683>:
     cfd:	25 30 32 64 3a 00                                   %02d:.

00000d03 <__c.4681>:
     d03:	25 32 64 3a 00                                      %2d:.

00000d08 <__c.4679>:
     d08:	25 30 32 64 3a 00                                   %02d:.

00000d0e <__c.4677>:
     d0e:	5b 25 32 64 3a 00                                   [%2d:.

00000d14 <__c.4675>:
     d14:	5b 25 30 32 64 3a 00                                [%02d:.

00000d1b <__c.3937>:
     d1b:	61 72 62 5f 73 79 73 54 69 6d 65 72 53 74 61 72     arb_sysTimerStar
     d2b:	74 20 66 61 69 6c 65 64 20 77 69 74 68 20 25 64     t failed with %d
     d3b:	2e 0a 0d 00                                         ....

00000d3f <_ZZN10SdBaseFile10make83NameEPKcPhPS1_E3__c>:
     d3f:	7c 3c 3e 5e 2b 3d 3f 2f 5b 5d 3b 2c 2a 22 5c 00     |<>^+=?/[];,*"\.

00000d4f <__c.1790>:
     d4f:	6e 61 6e 00                                         nan.

00000d53 <__c.1788>:
     d53:	69 6e 66 00 00 40 7a 10 f3 5a 00 a0 72 4e 18 09     inf..@z..Z..rN..
     d63:	00 10 a5 d4 e8 00 00 e8 76 48 17 00 00 e4 0b 54     ........vH.....T
     d73:	02 00 00 ca 9a 3b 00 00 00 e1 f5 05 00 00 80 96     .....;..........
     d83:	98 00 00 00 40 42 0f 00 00 00 a0 86 01 00 00 00     ....@B..........
     d93:	10 27 00 00 00 00 e8 03 00 00 00 00 64 00 00 00     .'..........d...
     da3:	00 00 0a 00 00 00 00 00 01 00 00 00 00 00 2c 76     ..............,v
     db3:	d8 88 dc 67 4f 08 23 df c1 df ae 59 e1 b1 b7 96     ...gO.#....Y....
     dc3:	e5 e3 e4 53 c6 3a e6 51 99 76 96 e8 e6 c2 84 26     ...S.:.Q.v.....&
     dd3:	eb 89 8c 9b 62 ed 40 7c 6f fc ef bc 9c 9f 40 f2     ....b.@|o.....@.
     de3:	ba a5 6f a5 f4 90 05 5a 2a f7 5c 93 6b 6c f9 67     ..o....Z*.\.kl.g
     df3:	6d c1 1b fc e0 e4 0d 47 fe f5 20 e6 b5 00 d0 ed     m......G.. .....
     e03:	90 2e 03 00 94 35 77 05 00 80 84 1e 08 00 00 20     .....5w........ 
     e13:	4e 0a 00 00 00 c8 0c 33 33 33 33 0f 98 6e 12 83     N......3333..n..
     e23:	11 41 ef 8d 21 14 89 3b e6 55 16 cf fe e6 db 18     .A..!..;.U......
     e33:	d1 84 4b 38 1b f7 7c 1d 90 1d a4 bb e4 24 20 32     ..K8..|......$ 2
     e43:	84 72 5e 22 81 00 c9 f1 24 ec a1 e5 3d 27 00        .r^"....$...='.

00000e52 <__ctors_start>:
     e52:	92 8e       	std	Z+26, r9	; 0x1a
     e54:	4f a7       	std	Y+47, r20	; 0x2f

00000e56 <__ctors_end>:
     e56:	11 24       	eor	r1, r1
     e58:	1f be       	out	0x3f, r1	; 63
     e5a:	cf ef       	ldi	r28, 0xFF	; 255
     e5c:	df e3       	ldi	r29, 0x3F	; 63
     e5e:	de bf       	out	0x3e, r29	; 62
     e60:	cd bf       	out	0x3d, r28	; 61
     e62:	00 e0       	ldi	r16, 0x00	; 0
     e64:	0c bf       	out	0x3c, r16	; 60
     e66:	18 be       	out	0x38, r1	; 56
     e68:	19 be       	out	0x39, r1	; 57
     e6a:	1a be       	out	0x3a, r1	; 58
     e6c:	1b be       	out	0x3b, r1	; 59

00000e6e <__do_copy_data>:
     e6e:	14 e2       	ldi	r17, 0x24	; 36
     e70:	a0 e0       	ldi	r26, 0x00	; 0
     e72:	b0 e2       	ldi	r27, 0x20	; 32
     e74:	ea e8       	ldi	r30, 0x8A	; 138
     e76:	f8 e6       	ldi	r31, 0x68	; 104
     e78:	01 e0       	ldi	r16, 0x01	; 1
     e7a:	0b bf       	out	0x3b, r16	; 59
     e7c:	02 c0       	rjmp	.+4      	; 0xe82 <__do_copy_data+0x14>
     e7e:	07 90       	elpm	r0, Z+
     e80:	0d 92       	st	X+, r0
     e82:	a8 34       	cpi	r26, 0x48	; 72
     e84:	b1 07       	cpc	r27, r17
     e86:	d9 f7       	brne	.-10     	; 0xe7e <__do_copy_data+0x10>
     e88:	1b be       	out	0x3b, r1	; 59

00000e8a <__do_clear_bss>:
     e8a:	17 e2       	ldi	r17, 0x27	; 39
     e8c:	a8 e4       	ldi	r26, 0x48	; 72
     e8e:	b4 e2       	ldi	r27, 0x24	; 36
     e90:	01 c0       	rjmp	.+2      	; 0xe94 <.do_clear_bss_start>

00000e92 <.do_clear_bss_loop>:
     e92:	1d 92       	st	X+, r1

00000e94 <.do_clear_bss_start>:
     e94:	ae 3c       	cpi	r26, 0xCE	; 206
     e96:	b1 07       	cpc	r27, r17
     e98:	e1 f7       	brne	.-8      	; 0xe92 <.do_clear_bss_loop>

00000e9a <__do_global_ctors>:
     e9a:	1e e0       	ldi	r17, 0x0E	; 14
     e9c:	c6 e5       	ldi	r28, 0x56	; 86
     e9e:	de e0       	ldi	r29, 0x0E	; 14
     ea0:	04 c0       	rjmp	.+8      	; 0xeaa <.do_global_ctors_start>

00000ea2 <.do_global_ctors_loop>:
     ea2:	22 97       	sbiw	r28, 0x02	; 2
     ea4:	fe 01       	movw	r30, r28
     ea6:	0e 94 3f b4 	call	0x1687e	; 0x1687e <__tablejump__>

00000eaa <.do_global_ctors_start>:
     eaa:	c2 35       	cpi	r28, 0x52	; 82
     eac:	d1 07       	cpc	r29, r17
     eae:	c9 f7       	brne	.-14     	; 0xea2 <.do_global_ctors_loop>
     eb0:	0e 94 e8 6f 	call	0xdfd0	; 0xdfd0 <main>
     eb4:	0c 94 bc af 	jmp	0x15f78	; 0x15f78 <exit>

00000eb8 <__bad_interrupt>:
     eb8:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000ebc <consoleClose>:

/*---------------------------------------------------------------------------*
 * Remove this particular file attached to this device
 *---------------------------------------------------------------------------*/
static t_error consoleClose( t_DEVHANDLE t_handle)
{
     ebc:	1f 93       	push	r17
     ebe:	df 93       	push	r29
     ec0:	cf 93       	push	r28
     ec2:	0f 92       	push	r0
     ec4:	0f 92       	push	r0
     ec6:	cd b7       	in	r28, 0x3d	; 61
     ec8:	de b7       	in	r29, 0x3e	; 62
     eca:	89 83       	std	Y+1, r24	; 0x01
     ecc:	9a 83       	std	Y+2, r25	; 0x02
   t_error t_err = ARB_PASSED;

   /*------------------------------------------------------------------------*
    * We are going to access global memory or a register, so perform lock
    *------------------------------------------------------------------------*/
   arb_wait( gt_consoleDev.t_rxMutex,
     ece:	80 91 48 24 	lds	r24, 0x2448
     ed2:	90 91 49 24 	lds	r25, 0x2449
     ed6:	60 e0       	ldi	r22, 0x00	; 0
     ed8:	0e 94 c3 7d 	call	0xfb86	; 0xfb86 <arb_wait>
             0);

   /*------------------------------------------------------------------------*
    * Keep track of the number of user-space applications using the driver.
    *------------------------------------------------------------------------*/
   gt_consoleDev.c_numUsers--;
     edc:	80 91 50 24 	lds	r24, 0x2450
     ee0:	81 50       	subi	r24, 0x01	; 1
     ee2:	80 93 50 24 	sts	0x2450, r24

   /*------------------------------------------------------------------------*
    * If there are no more handles attached to this driver than disable the
    * receive interrupt.
    *------------------------------------------------------------------------*/
   if( gt_consoleDev.c_numUsers == 0)
     ee6:	88 23       	and	r24, r24
     ee8:	71 f0       	breq	.+28     	; 0xf06 <consoleClose+0x4a>
   {

      t_uErr = hal_disableUartRxInt( gt_consoleDev.t_uHandle);

      if( t_uErr < 0)
     eea:	10 e0       	ldi	r17, 0x00	; 0
   }/*End if( gt_consoleDev.c_numUsers == 0)*/

   /*------------------------------------------------------------------------*
    * Release the lock
    *------------------------------------------------------------------------*/
   arb_signal( gt_consoleDev.t_rxMutex);
     eec:	80 91 48 24 	lds	r24, 0x2448
     ef0:	90 91 49 24 	lds	r25, 0x2449
     ef4:	0e 94 7c 7a 	call	0xf4f8	; 0xf4f8 <arb_signal>

   return t_err;

}/*End consoleClose*/
     ef8:	81 2f       	mov	r24, r17
     efa:	0f 90       	pop	r0
     efc:	0f 90       	pop	r0
     efe:	cf 91       	pop	r28
     f00:	df 91       	pop	r29
     f02:	1f 91       	pop	r17
     f04:	08 95       	ret
    * receive interrupt.
    *------------------------------------------------------------------------*/
   if( gt_consoleDev.c_numUsers == 0)
   {

      t_uErr = hal_disableUartRxInt( gt_consoleDev.t_uHandle);
     f06:	80 91 51 24 	lds	r24, 0x2451
     f0a:	90 91 52 24 	lds	r25, 0x2452
     f0e:	0e 94 87 41 	call	0x830e	; 0x830e <hal_disableUartRxInt>

      if( t_uErr < 0)
     f12:	87 ff       	sbrs	r24, 7
     f14:	ea cf       	rjmp	.-44     	; 0xeea <consoleClose+0x2e>
     f16:	16 ef       	ldi	r17, 0xF6	; 246
     f18:	e9 cf       	rjmp	.-46     	; 0xeec <consoleClose+0x30>

00000f1a <consoleOpen>:
   }

}/*End rxComplete*/

static t_error consoleOpen( t_DEVHANDLE t_handle)
{
     f1a:	1f 93       	push	r17
     f1c:	df 93       	push	r29
     f1e:	cf 93       	push	r28
     f20:	0f 92       	push	r0
     f22:	0f 92       	push	r0
     f24:	cd b7       	in	r28, 0x3d	; 61
     f26:	de b7       	in	r29, 0x3e	; 62
     f28:	89 83       	std	Y+1, r24	; 0x01
     f2a:	9a 83       	std	Y+2, r25	; 0x02
   t_error t_err = ARB_PASSED;

   /*------------------------------------------------------------------------*
    * We are going to access global memory or a register, so perform lock
    *------------------------------------------------------------------------*/
   arb_wait( gt_consoleDev.t_txMutex,
     f2c:	80 91 4a 24 	lds	r24, 0x244A
     f30:	90 91 4b 24 	lds	r25, 0x244B
     f34:	60 e0       	ldi	r22, 0x00	; 0
     f36:	0e 94 c3 7d 	call	0xfb86	; 0xfb86 <arb_wait>
             0);

   /*------------------------------------------------------------------------*
    * Keep track of the number of user-space applications using the driver.
    *------------------------------------------------------------------------*/
   gt_consoleDev.c_numUsers++;
     f3a:	80 91 50 24 	lds	r24, 0x2450
     f3e:	8f 5f       	subi	r24, 0xFF	; 255
     f40:	80 93 50 24 	sts	0x2450, r24

   /*------------------------------------------------------------------------*
    * If there is at least one user-space handle attached to this driver
    * than enable the receive interrupt.
    *------------------------------------------------------------------------*/
   if( gt_consoleDev.c_numUsers == 1)
     f44:	81 30       	cpi	r24, 0x01	; 1
     f46:	71 f0       	breq	.+28     	; 0xf64 <consoleOpen+0x4a>
   {

      t_uErr = hal_enableUartRxInt( gt_consoleDev.t_uHandle);

      if( t_uErr < 0)
     f48:	10 e0       	ldi	r17, 0x00	; 0
   }/*End if( gt_consoleDev.c_numUsers == 1)*/

   /*------------------------------------------------------------------------*
    * Release the lock
    *------------------------------------------------------------------------*/
   arb_signal( gt_consoleDev.t_txMutex);
     f4a:	80 91 4a 24 	lds	r24, 0x244A
     f4e:	90 91 4b 24 	lds	r25, 0x244B
     f52:	0e 94 7c 7a 	call	0xf4f8	; 0xf4f8 <arb_signal>

   return t_err;

}/*End consoleOpen*/
     f56:	81 2f       	mov	r24, r17
     f58:	0f 90       	pop	r0
     f5a:	0f 90       	pop	r0
     f5c:	cf 91       	pop	r28
     f5e:	df 91       	pop	r29
     f60:	1f 91       	pop	r17
     f62:	08 95       	ret
    * than enable the receive interrupt.
    *------------------------------------------------------------------------*/
   if( gt_consoleDev.c_numUsers == 1)
   {

      t_uErr = hal_enableUartRxInt( gt_consoleDev.t_uHandle);
     f64:	80 91 51 24 	lds	r24, 0x2451
     f68:	90 91 52 24 	lds	r25, 0x2452
     f6c:	0e 94 51 41 	call	0x82a2	; 0x82a2 <hal_enableUartRxInt>

      if( t_uErr < 0)
     f70:	87 ff       	sbrs	r24, 7
     f72:	ea cf       	rjmp	.-44     	; 0xf48 <consoleOpen+0x2e>
     f74:	16 ef       	ldi	r17, 0xF6	; 246
     f76:	e9 cf       	rjmp	.-46     	; 0xf4a <consoleOpen+0x30>

00000f78 <consoleWrite>:
}/*End consoleRead*/

static int16_t consoleWrite( t_DEVHANDLE t_handle,
                             int8_t *pc_buff,
                             uint16_t s_size)
{
     f78:	df 93       	push	r29
     f7a:	cf 93       	push	r28
     f7c:	00 d0       	rcall	.+0      	; 0xf7e <consoleWrite+0x6>
     f7e:	cd b7       	in	r28, 0x3d	; 61
     f80:	de b7       	in	r29, 0x3e	; 62
     f82:	8a 83       	std	Y+2, r24	; 0x02
     f84:	9b 83       	std	Y+3, r25	; 0x03
   /*------------------------------------------------------------------------*
    * A call to this function can occur within an interrupt, therefore 
    * mutual exclusion is performed by disabling interrupts for a brief
    * period of time.
    *------------------------------------------------------------------------*/
   HAL_BEGIN_CRITICAL();
     f86:	8f b7       	in	r24, 0x3f	; 63
     f88:	89 83       	std	Y+1, r24	; 0x01
     f8a:	f8 94       	cli

   s_numBytes = hal_uartWriteBlock( gt_consoleDev.t_uHandle,
     f8c:	80 91 51 24 	lds	r24, 0x2451
     f90:	90 91 52 24 	lds	r25, 0x2452
     f94:	0e 94 82 42 	call	0x8504	; 0x8504 <hal_uartWriteBlock>


   /*------------------------------------------------------------------------*
    * Release the lock
    *------------------------------------------------------------------------*/
   HAL_END_CRITICAL();
     f98:	99 81       	ldd	r25, Y+1	; 0x01
     f9a:	9f bf       	out	0x3f, r25	; 63
     f9c:	28 2f       	mov	r18, r24
     f9e:	33 27       	eor	r19, r19
     fa0:	27 fd       	sbrc	r18, 7
     fa2:	30 95       	com	r19

   return s_numBytes;

}/*End consoleWrite*/
     fa4:	c9 01       	movw	r24, r18
     fa6:	23 96       	adiw	r28, 0x03	; 3
     fa8:	cd bf       	out	0x3d, r28	; 61
     faa:	de bf       	out	0x3e, r29	; 62
     fac:	cf 91       	pop	r28
     fae:	df 91       	pop	r29
     fb0:	08 95       	ret

00000fb2 <consoleIoctl>:

static int32_t consoleIoctl( t_DEVHANDLE t_handle,
                             uint16_t s_command,
                             int32_t i_arguments)
{
     fb2:	cf 92       	push	r12
     fb4:	df 92       	push	r13
     fb6:	ef 92       	push	r14
     fb8:	ff 92       	push	r15
     fba:	0f 93       	push	r16
     fbc:	1f 93       	push	r17
     fbe:	df 93       	push	r29
     fc0:	cf 93       	push	r28
     fc2:	cd b7       	in	r28, 0x3d	; 61
     fc4:	de b7       	in	r29, 0x3e	; 62
     fc6:	aa 97       	sbiw	r28, 0x2a	; 42
     fc8:	cd bf       	out	0x3d, r28	; 61
     fca:	de bf       	out	0x3e, r29	; 62
     fcc:	89 a7       	std	Y+41, r24	; 0x29
     fce:	9a a7       	std	Y+42, r25	; 0x2a
     fd0:	69 01       	movw	r12, r18
     fd2:	7a 01       	movw	r14, r20
   t_consoleTokHndl *pt_tokens = NULL;
   int8_t *pc_rxBuffPtr = NULL;
   uint16_t s_size = 0;
   int8_t ac_buff[40];

   switch( (t_consoleCmd)s_command)
     fd4:	64 30       	cpi	r22, 0x04	; 4
     fd6:	09 f4       	brne	.+2      	; 0xfda <consoleIoctl+0x28>
     fd8:	d6 c1       	rjmp	.+940    	; 0x1386 <consoleIoctl+0x3d4>
     fda:	65 30       	cpi	r22, 0x05	; 5
     fdc:	10 f1       	brcs	.+68     	; 0x1022 <consoleIoctl+0x70>
     fde:	67 30       	cpi	r22, 0x07	; 7
     fe0:	09 f4       	brne	.+2      	; 0xfe4 <consoleIoctl+0x32>
     fe2:	65 c2       	rjmp	.+1226   	; 0x14ae <consoleIoctl+0x4fc>
     fe4:	68 30       	cpi	r22, 0x08	; 8
     fe6:	08 f0       	brcs	.+2      	; 0xfea <consoleIoctl+0x38>
     fe8:	92 c1       	rjmp	.+804    	; 0x130e <consoleIoctl+0x35c>
     fea:	65 30       	cpi	r22, 0x05	; 5
     fec:	09 f4       	brne	.+2      	; 0xff0 <consoleIoctl+0x3e>
     fee:	40 c2       	rjmp	.+1152   	; 0x1470 <consoleIoctl+0x4be>
     ff0:	66 30       	cpi	r22, 0x06	; 6
     ff2:	09 f4       	brne	.+2      	; 0xff6 <consoleIoctl+0x44>
     ff4:	0d c2       	rjmp	.+1050   	; 0x1410 <consoleIoctl+0x45e>
     ff6:	7d ef       	ldi	r23, 0xFD	; 253
     ff8:	e7 2e       	mov	r14, r23
     ffa:	7f ef       	ldi	r23, 0xFF	; 255
     ffc:	f7 2e       	mov	r15, r23
     ffe:	7f ef       	ldi	r23, 0xFF	; 255
    1000:	07 2f       	mov	r16, r23
    1002:	7f ef       	ldi	r23, 0xFF	; 255
    1004:	17 2f       	mov	r17, r23

   }/*End switch( (t_consoleCmd)s_command)*/

   return i_return;

}/*End consoleIoctl*/
    1006:	b7 01       	movw	r22, r14
    1008:	c8 01       	movw	r24, r16
    100a:	aa 96       	adiw	r28, 0x2a	; 42
    100c:	cd bf       	out	0x3d, r28	; 61
    100e:	de bf       	out	0x3e, r29	; 62
    1010:	cf 91       	pop	r28
    1012:	df 91       	pop	r29
    1014:	1f 91       	pop	r17
    1016:	0f 91       	pop	r16
    1018:	ff 90       	pop	r15
    101a:	ef 90       	pop	r14
    101c:	df 90       	pop	r13
    101e:	cf 90       	pop	r12
    1020:	08 95       	ret
   t_consoleTokHndl *pt_tokens = NULL;
   int8_t *pc_rxBuffPtr = NULL;
   uint16_t s_size = 0;
   int8_t ac_buff[40];

   switch( (t_consoleCmd)s_command)
    1022:	61 30       	cpi	r22, 0x01	; 1
    1024:	09 f4       	brne	.+2      	; 0x1028 <consoleIoctl+0x76>
    1026:	f0 c1       	rjmp	.+992    	; 0x1408 <consoleIoctl+0x456>
    1028:	61 30       	cpi	r22, 0x01	; 1
    102a:	08 f4       	brcc	.+2      	; 0x102e <consoleIoctl+0x7c>
    102c:	96 c1       	rjmp	.+812    	; 0x135a <consoleIoctl+0x3a8>
    102e:	62 30       	cpi	r22, 0x02	; 2
    1030:	09 f4       	brne	.+2      	; 0x1034 <consoleIoctl+0x82>
    1032:	34 c2       	rjmp	.+1128   	; 0x149c <consoleIoctl+0x4ea>
    1034:	63 30       	cpi	r22, 0x03	; 3
    1036:	f9 f6       	brne	.-66     	; 0xff6 <consoleIoctl+0x44>
      case CONSOLE_PARSE_CMD_LINE:

         /*------------------------------------------------------------------*
          * We are going to access global memory or a register, so perform lock
          *------------------------------------------------------------------*/
         arb_wait( gt_consoleDev.t_rxMutex,
    1038:	80 91 48 24 	lds	r24, 0x2448
    103c:	90 91 49 24 	lds	r25, 0x2449
    1040:	60 e0       	ldi	r22, 0x00	; 0
    1042:	0e 94 c3 7d 	call	0xfb86	; 0xfb86 <arb_wait>
                   0);

         /*------------------------------------------------------------------*
          * Grab pointer to the user-space token variable...
          *------------------------------------------------------------------*/
         pt_tokens = (t_consoleTokHndl *)((uint16_t)i_arguments);
    1046:	76 01       	movw	r14, r12

         /*------------------------------------------------------------------*
          * Wait for data to be available in the RX buffer.
          *------------------------------------------------------------------*/
         arb_wait( gt_consoleDev.t_rxBlockingSem,
    1048:	80 91 4c 24 	lds	r24, 0x244C
    104c:	90 91 4d 24 	lds	r25, 0x244D
    1050:	60 e0       	ldi	r22, 0x00	; 0
    1052:	0e 94 c3 7d 	call	0xfb86	; 0xfb86 <arb_wait>
                   0);

         /*------------------------------------------------------------------*
          * Get the head location of the RX buffer...
          *------------------------------------------------------------------*/
         pc_rxBuffPtr = utl_getBufferPtr( gt_consoleDev.t_rxBuffer);
    1056:	80 91 4e 24 	lds	r24, 0x244E
    105a:	90 91 4f 24 	lds	r25, 0x244F
    105e:	0e 94 c6 86 	call	0x10d8c	; 0x10d8c <utl_getBufferPtr>
    1062:	8c 01       	movw	r16, r24
static t_consoleError drv_parseMessage( int8_t *pc_cbuff,
                                        int8_t ac_tok[][CONSOLE_MAX_TOKEN_SIZE],
                                        uint8_t *pc_tokenCount)
{
   int8_t *pc_nextLoc      = NULL;
   int8_t c_bytesRemaining = utl_getBufferSize( gt_consoleDev.t_rxBuffer);
    1064:	80 91 4e 24 	lds	r24, 0x244E
    1068:	90 91 4f 24 	lds	r25, 0x244F
    106c:	0e 94 b2 86 	call	0x10d64	; 0x10d64 <utl_getBufferSize>
    1070:	28 2f       	mov	r18, r24
    * char. If it exits for another reason, the returned ptr will contain the
    * location of the last character in the buffer i.e. a NULL ptr, '\0', '\n',
    * or whatever is there when reaching the max size.
    *------------------------------------------------------------------------*/
   pc_nextLoc = pc_cbuff;
   (*pc_tokenCount) = 0;
    1072:	a6 01       	movw	r20, r12
    1074:	40 59       	subi	r20, 0x90	; 144
    1076:	5f 4f       	sbci	r21, 0xFF	; 255
    1078:	da 01       	movw	r26, r20
    107a:	1c 92       	st	X, r1
    107c:	f8 01       	movw	r30, r16
    107e:	90 81       	ld	r25, Z
   do
   {
      pc_nextLoc = drv_strTok( pc_nextLoc,
    1080:	da 01       	movw	r26, r20
    1082:	8c 91       	ld	r24, X
    1084:	e8 2f       	mov	r30, r24
    1086:	f0 e0       	ldi	r31, 0x00	; 0
    1088:	e2 95       	swap	r30
    108a:	f2 95       	swap	r31
    108c:	f0 7f       	andi	r31, 0xF0	; 240
    108e:	fe 27       	eor	r31, r30
    1090:	e0 7f       	andi	r30, 0xF0	; 240
    1092:	fe 27       	eor	r31, r30
    1094:	ee 0d       	add	r30, r14
    1096:	ff 1d       	adc	r31, r15

   /*------------------------------------------------------------------------*
    * Search for delimiting character, if not found stop at max string size
    * carriage return, or NULL char.
    *------------------------------------------------------------------------*/
   while( (*pc_in != CONSOLE_RETURN_CHAR)
    1098:	9d 30       	cpi	r25, 0x0D	; 13
    109a:	09 f4       	brne	.+2      	; 0x109e <consoleIoctl+0xec>
    109c:	6b c2       	rjmp	.+1238   	; 0x1574 <consoleIoctl+0x5c2>
    109e:	99 23       	and	r25, r25
    10a0:	09 f4       	brne	.+2      	; 0x10a4 <consoleIoctl+0xf2>
    10a2:	68 c2       	rjmp	.+1232   	; 0x1574 <consoleIoctl+0x5c2>
    10a4:	90 32       	cpi	r25, 0x20	; 32
    10a6:	09 f4       	brne	.+2      	; 0x10aa <consoleIoctl+0xf8>
    10a8:	64 c1       	rjmp	.+712    	; 0x1372 <consoleIoctl+0x3c0>
    10aa:	12 16       	cp	r1, r18
    10ac:	0c f0       	brlt	.+2      	; 0x10b0 <consoleIoctl+0xfe>
    10ae:	62 c2       	rjmp	.+1220   	; 0x1574 <consoleIoctl+0x5c2>
       && (*pc_in != '\0')
       && (*pc_in != c_delim)
       && (c_tokenSizeCount < *pc_bytesRemaining))
   {
      pc_out[c_tokenSizeCount] = *pc_in;
    10b0:	90 83       	st	Z, r25
      pc_in++;
    10b2:	0f 5f       	subi	r16, 0xFF	; 255
    10b4:	1f 4f       	sbci	r17, 0xFF	; 255
    10b6:	d8 01       	movw	r26, r16
    10b8:	8c 91       	ld	r24, X

   /*------------------------------------------------------------------------*
    * Search for delimiting character, if not found stop at max string size
    * carriage return, or NULL char.
    *------------------------------------------------------------------------*/
   while( (*pc_in != CONSOLE_RETURN_CHAR)
    10ba:	8d 30       	cpi	r24, 0x0D	; 13
    10bc:	09 f4       	brne	.+2      	; 0x10c0 <consoleIoctl+0x10e>
    10be:	5c c2       	rjmp	.+1208   	; 0x1578 <consoleIoctl+0x5c6>
    10c0:	88 23       	and	r24, r24
    10c2:	09 f4       	brne	.+2      	; 0x10c6 <consoleIoctl+0x114>
    10c4:	59 c2       	rjmp	.+1202   	; 0x1578 <consoleIoctl+0x5c6>
    10c6:	80 32       	cpi	r24, 0x20	; 32
    10c8:	09 f4       	brne	.+2      	; 0x10cc <consoleIoctl+0x11a>
    10ca:	84 c2       	rjmp	.+1288   	; 0x15d4 <consoleIoctl+0x622>
    10cc:	21 30       	cpi	r18, 0x01	; 1
    10ce:	09 f4       	brne	.+2      	; 0x10d2 <consoleIoctl+0x120>
    10d0:	53 c2       	rjmp	.+1190   	; 0x1578 <consoleIoctl+0x5c6>
       && (*pc_in != '\0')
       && (*pc_in != c_delim)
       && (c_tokenSizeCount < *pc_bytesRemaining))
   {
      pc_out[c_tokenSizeCount] = *pc_in;
    10d2:	81 83       	std	Z+1, r24	; 0x01
      pc_in++;
    10d4:	0f 5f       	subi	r16, 0xFF	; 255
    10d6:	1f 4f       	sbci	r17, 0xFF	; 255
    10d8:	d8 01       	movw	r26, r16
    10da:	8c 91       	ld	r24, X

   /*------------------------------------------------------------------------*
    * Search for delimiting character, if not found stop at max string size
    * carriage return, or NULL char.
    *------------------------------------------------------------------------*/
   while( (*pc_in != CONSOLE_RETURN_CHAR)
    10dc:	8d 30       	cpi	r24, 0x0D	; 13
    10de:	09 f4       	brne	.+2      	; 0x10e2 <consoleIoctl+0x130>
    10e0:	4d c2       	rjmp	.+1178   	; 0x157c <consoleIoctl+0x5ca>
    10e2:	88 23       	and	r24, r24
    10e4:	09 f4       	brne	.+2      	; 0x10e8 <consoleIoctl+0x136>
    10e6:	4a c2       	rjmp	.+1172   	; 0x157c <consoleIoctl+0x5ca>
    10e8:	80 32       	cpi	r24, 0x20	; 32
    10ea:	09 f4       	brne	.+2      	; 0x10ee <consoleIoctl+0x13c>
    10ec:	75 c2       	rjmp	.+1258   	; 0x15d8 <consoleIoctl+0x626>
    10ee:	22 30       	cpi	r18, 0x02	; 2
    10f0:	09 f4       	brne	.+2      	; 0x10f4 <consoleIoctl+0x142>
    10f2:	44 c2       	rjmp	.+1160   	; 0x157c <consoleIoctl+0x5ca>
       && (*pc_in != '\0')
       && (*pc_in != c_delim)
       && (c_tokenSizeCount < *pc_bytesRemaining))
   {
      pc_out[c_tokenSizeCount] = *pc_in;
    10f4:	82 83       	std	Z+2, r24	; 0x02
      pc_in++;
    10f6:	0f 5f       	subi	r16, 0xFF	; 255
    10f8:	1f 4f       	sbci	r17, 0xFF	; 255
    10fa:	d8 01       	movw	r26, r16
    10fc:	8c 91       	ld	r24, X

   /*------------------------------------------------------------------------*
    * Search for delimiting character, if not found stop at max string size
    * carriage return, or NULL char.
    *------------------------------------------------------------------------*/
   while( (*pc_in != CONSOLE_RETURN_CHAR)
    10fe:	8d 30       	cpi	r24, 0x0D	; 13
    1100:	09 f4       	brne	.+2      	; 0x1104 <consoleIoctl+0x152>
    1102:	3e c2       	rjmp	.+1148   	; 0x1580 <consoleIoctl+0x5ce>
    1104:	88 23       	and	r24, r24
    1106:	09 f4       	brne	.+2      	; 0x110a <consoleIoctl+0x158>
    1108:	3b c2       	rjmp	.+1142   	; 0x1580 <consoleIoctl+0x5ce>
    110a:	80 32       	cpi	r24, 0x20	; 32
    110c:	09 f4       	brne	.+2      	; 0x1110 <consoleIoctl+0x15e>
    110e:	66 c2       	rjmp	.+1228   	; 0x15dc <consoleIoctl+0x62a>
    1110:	23 30       	cpi	r18, 0x03	; 3
    1112:	09 f4       	brne	.+2      	; 0x1116 <consoleIoctl+0x164>
    1114:	35 c2       	rjmp	.+1130   	; 0x1580 <consoleIoctl+0x5ce>
       && (*pc_in != '\0')
       && (*pc_in != c_delim)
       && (c_tokenSizeCount < *pc_bytesRemaining))
   {
      pc_out[c_tokenSizeCount] = *pc_in;
    1116:	83 83       	std	Z+3, r24	; 0x03
      pc_in++;
    1118:	0f 5f       	subi	r16, 0xFF	; 255
    111a:	1f 4f       	sbci	r17, 0xFF	; 255
    111c:	d8 01       	movw	r26, r16
    111e:	8c 91       	ld	r24, X

   /*------------------------------------------------------------------------*
    * Search for delimiting character, if not found stop at max string size
    * carriage return, or NULL char.
    *------------------------------------------------------------------------*/
   while( (*pc_in != CONSOLE_RETURN_CHAR)
    1120:	8d 30       	cpi	r24, 0x0D	; 13
    1122:	09 f4       	brne	.+2      	; 0x1126 <consoleIoctl+0x174>
    1124:	2f c2       	rjmp	.+1118   	; 0x1584 <consoleIoctl+0x5d2>
    1126:	88 23       	and	r24, r24
    1128:	09 f4       	brne	.+2      	; 0x112c <consoleIoctl+0x17a>
    112a:	2c c2       	rjmp	.+1112   	; 0x1584 <consoleIoctl+0x5d2>
    112c:	80 32       	cpi	r24, 0x20	; 32
    112e:	09 f4       	brne	.+2      	; 0x1132 <consoleIoctl+0x180>
    1130:	57 c2       	rjmp	.+1198   	; 0x15e0 <consoleIoctl+0x62e>
    1132:	24 30       	cpi	r18, 0x04	; 4
    1134:	09 f4       	brne	.+2      	; 0x1138 <consoleIoctl+0x186>
    1136:	26 c2       	rjmp	.+1100   	; 0x1584 <consoleIoctl+0x5d2>
       && (*pc_in != '\0')
       && (*pc_in != c_delim)
       && (c_tokenSizeCount < *pc_bytesRemaining))
   {
      pc_out[c_tokenSizeCount] = *pc_in;
    1138:	84 83       	std	Z+4, r24	; 0x04
      pc_in++;
    113a:	0f 5f       	subi	r16, 0xFF	; 255
    113c:	1f 4f       	sbci	r17, 0xFF	; 255
    113e:	d8 01       	movw	r26, r16
    1140:	8c 91       	ld	r24, X

   /*------------------------------------------------------------------------*
    * Search for delimiting character, if not found stop at max string size
    * carriage return, or NULL char.
    *------------------------------------------------------------------------*/
   while( (*pc_in != CONSOLE_RETURN_CHAR)
    1142:	8d 30       	cpi	r24, 0x0D	; 13
    1144:	09 f4       	brne	.+2      	; 0x1148 <consoleIoctl+0x196>
    1146:	20 c2       	rjmp	.+1088   	; 0x1588 <consoleIoctl+0x5d6>
    1148:	88 23       	and	r24, r24
    114a:	09 f4       	brne	.+2      	; 0x114e <consoleIoctl+0x19c>
    114c:	1d c2       	rjmp	.+1082   	; 0x1588 <consoleIoctl+0x5d6>
    114e:	80 32       	cpi	r24, 0x20	; 32
    1150:	09 f4       	brne	.+2      	; 0x1154 <consoleIoctl+0x1a2>
    1152:	4a c2       	rjmp	.+1172   	; 0x15e8 <consoleIoctl+0x636>
    1154:	25 30       	cpi	r18, 0x05	; 5
    1156:	09 f4       	brne	.+2      	; 0x115a <consoleIoctl+0x1a8>
    1158:	17 c2       	rjmp	.+1070   	; 0x1588 <consoleIoctl+0x5d6>
       && (*pc_in != '\0')
       && (*pc_in != c_delim)
       && (c_tokenSizeCount < *pc_bytesRemaining))
   {
      pc_out[c_tokenSizeCount] = *pc_in;
    115a:	85 83       	std	Z+5, r24	; 0x05
      pc_in++;
    115c:	0f 5f       	subi	r16, 0xFF	; 255
    115e:	1f 4f       	sbci	r17, 0xFF	; 255
    1160:	d8 01       	movw	r26, r16
    1162:	8c 91       	ld	r24, X

   /*------------------------------------------------------------------------*
    * Search for delimiting character, if not found stop at max string size
    * carriage return, or NULL char.
    *------------------------------------------------------------------------*/
   while( (*pc_in != CONSOLE_RETURN_CHAR)
    1164:	8d 30       	cpi	r24, 0x0D	; 13
    1166:	09 f4       	brne	.+2      	; 0x116a <consoleIoctl+0x1b8>
    1168:	11 c2       	rjmp	.+1058   	; 0x158c <consoleIoctl+0x5da>
    116a:	88 23       	and	r24, r24
    116c:	09 f4       	brne	.+2      	; 0x1170 <consoleIoctl+0x1be>
    116e:	0e c2       	rjmp	.+1052   	; 0x158c <consoleIoctl+0x5da>
    1170:	80 32       	cpi	r24, 0x20	; 32
    1172:	09 f4       	brne	.+2      	; 0x1176 <consoleIoctl+0x1c4>
    1174:	3b c2       	rjmp	.+1142   	; 0x15ec <consoleIoctl+0x63a>
    1176:	26 30       	cpi	r18, 0x06	; 6
    1178:	09 f4       	brne	.+2      	; 0x117c <consoleIoctl+0x1ca>
    117a:	08 c2       	rjmp	.+1040   	; 0x158c <consoleIoctl+0x5da>
       && (*pc_in != '\0')
       && (*pc_in != c_delim)
       && (c_tokenSizeCount < *pc_bytesRemaining))
   {
      pc_out[c_tokenSizeCount] = *pc_in;
    117c:	86 83       	std	Z+6, r24	; 0x06
      pc_in++;
    117e:	0f 5f       	subi	r16, 0xFF	; 255
    1180:	1f 4f       	sbci	r17, 0xFF	; 255
    1182:	d8 01       	movw	r26, r16
    1184:	8c 91       	ld	r24, X

   /*------------------------------------------------------------------------*
    * Search for delimiting character, if not found stop at max string size
    * carriage return, or NULL char.
    *------------------------------------------------------------------------*/
   while( (*pc_in != CONSOLE_RETURN_CHAR)
    1186:	8d 30       	cpi	r24, 0x0D	; 13
    1188:	09 f4       	brne	.+2      	; 0x118c <consoleIoctl+0x1da>
    118a:	02 c2       	rjmp	.+1028   	; 0x1590 <consoleIoctl+0x5de>
    118c:	88 23       	and	r24, r24
    118e:	09 f4       	brne	.+2      	; 0x1192 <consoleIoctl+0x1e0>
    1190:	ff c1       	rjmp	.+1022   	; 0x1590 <consoleIoctl+0x5de>
    1192:	80 32       	cpi	r24, 0x20	; 32
    1194:	09 f4       	brne	.+2      	; 0x1198 <consoleIoctl+0x1e6>
    1196:	2c c2       	rjmp	.+1112   	; 0x15f0 <consoleIoctl+0x63e>
    1198:	27 30       	cpi	r18, 0x07	; 7
    119a:	09 f4       	brne	.+2      	; 0x119e <consoleIoctl+0x1ec>
    119c:	f9 c1       	rjmp	.+1010   	; 0x1590 <consoleIoctl+0x5de>
       && (*pc_in != '\0')
       && (*pc_in != c_delim)
       && (c_tokenSizeCount < *pc_bytesRemaining))
   {
      pc_out[c_tokenSizeCount] = *pc_in;
    119e:	87 83       	std	Z+7, r24	; 0x07
      pc_in++;
    11a0:	0f 5f       	subi	r16, 0xFF	; 255
    11a2:	1f 4f       	sbci	r17, 0xFF	; 255
    11a4:	d8 01       	movw	r26, r16
    11a6:	8c 91       	ld	r24, X

   /*------------------------------------------------------------------------*
    * Search for delimiting character, if not found stop at max string size
    * carriage return, or NULL char.
    *------------------------------------------------------------------------*/
   while( (*pc_in != CONSOLE_RETURN_CHAR)
    11a8:	8d 30       	cpi	r24, 0x0D	; 13
    11aa:	09 f4       	brne	.+2      	; 0x11ae <consoleIoctl+0x1fc>
    11ac:	f3 c1       	rjmp	.+998    	; 0x1594 <consoleIoctl+0x5e2>
    11ae:	88 23       	and	r24, r24
    11b0:	09 f4       	brne	.+2      	; 0x11b4 <consoleIoctl+0x202>
    11b2:	f0 c1       	rjmp	.+992    	; 0x1594 <consoleIoctl+0x5e2>
    11b4:	80 32       	cpi	r24, 0x20	; 32
    11b6:	09 f4       	brne	.+2      	; 0x11ba <consoleIoctl+0x208>
    11b8:	1d c2       	rjmp	.+1082   	; 0x15f4 <consoleIoctl+0x642>
    11ba:	28 30       	cpi	r18, 0x08	; 8
    11bc:	09 f4       	brne	.+2      	; 0x11c0 <consoleIoctl+0x20e>
    11be:	ea c1       	rjmp	.+980    	; 0x1594 <consoleIoctl+0x5e2>
       && (*pc_in != '\0')
       && (*pc_in != c_delim)
       && (c_tokenSizeCount < *pc_bytesRemaining))
   {
      pc_out[c_tokenSizeCount] = *pc_in;
    11c0:	80 87       	std	Z+8, r24	; 0x08
      pc_in++;
    11c2:	0f 5f       	subi	r16, 0xFF	; 255
    11c4:	1f 4f       	sbci	r17, 0xFF	; 255
    11c6:	d8 01       	movw	r26, r16
    11c8:	8c 91       	ld	r24, X

   /*------------------------------------------------------------------------*
    * Search for delimiting character, if not found stop at max string size
    * carriage return, or NULL char.
    *------------------------------------------------------------------------*/
   while( (*pc_in != CONSOLE_RETURN_CHAR)
    11ca:	8d 30       	cpi	r24, 0x0D	; 13
    11cc:	09 f4       	brne	.+2      	; 0x11d0 <consoleIoctl+0x21e>
    11ce:	e4 c1       	rjmp	.+968    	; 0x1598 <consoleIoctl+0x5e6>
    11d0:	88 23       	and	r24, r24
    11d2:	09 f4       	brne	.+2      	; 0x11d6 <consoleIoctl+0x224>
    11d4:	e1 c1       	rjmp	.+962    	; 0x1598 <consoleIoctl+0x5e6>
    11d6:	80 32       	cpi	r24, 0x20	; 32
    11d8:	09 f4       	brne	.+2      	; 0x11dc <consoleIoctl+0x22a>
    11da:	0e c2       	rjmp	.+1052   	; 0x15f8 <consoleIoctl+0x646>
    11dc:	29 30       	cpi	r18, 0x09	; 9
    11de:	09 f4       	brne	.+2      	; 0x11e2 <consoleIoctl+0x230>
    11e0:	db c1       	rjmp	.+950    	; 0x1598 <consoleIoctl+0x5e6>
       && (*pc_in != '\0')
       && (*pc_in != c_delim)
       && (c_tokenSizeCount < *pc_bytesRemaining))
   {
      pc_out[c_tokenSizeCount] = *pc_in;
    11e2:	81 87       	std	Z+9, r24	; 0x09
      pc_in++;
    11e4:	0f 5f       	subi	r16, 0xFF	; 255
    11e6:	1f 4f       	sbci	r17, 0xFF	; 255
    11e8:	d8 01       	movw	r26, r16
    11ea:	8c 91       	ld	r24, X

   /*------------------------------------------------------------------------*
    * Search for delimiting character, if not found stop at max string size
    * carriage return, or NULL char.
    *------------------------------------------------------------------------*/
   while( (*pc_in != CONSOLE_RETURN_CHAR)
    11ec:	8d 30       	cpi	r24, 0x0D	; 13
    11ee:	09 f4       	brne	.+2      	; 0x11f2 <consoleIoctl+0x240>
    11f0:	d5 c1       	rjmp	.+938    	; 0x159c <consoleIoctl+0x5ea>
    11f2:	88 23       	and	r24, r24
    11f4:	09 f4       	brne	.+2      	; 0x11f8 <consoleIoctl+0x246>
    11f6:	d2 c1       	rjmp	.+932    	; 0x159c <consoleIoctl+0x5ea>
    11f8:	80 32       	cpi	r24, 0x20	; 32
    11fa:	09 f4       	brne	.+2      	; 0x11fe <consoleIoctl+0x24c>
    11fc:	ff c1       	rjmp	.+1022   	; 0x15fc <consoleIoctl+0x64a>
    11fe:	2a 30       	cpi	r18, 0x0A	; 10
    1200:	09 f4       	brne	.+2      	; 0x1204 <consoleIoctl+0x252>
    1202:	cc c1       	rjmp	.+920    	; 0x159c <consoleIoctl+0x5ea>
       && (*pc_in != '\0')
       && (*pc_in != c_delim)
       && (c_tokenSizeCount < *pc_bytesRemaining))
   {
      pc_out[c_tokenSizeCount] = *pc_in;
    1204:	82 87       	std	Z+10, r24	; 0x0a
      pc_in++;
    1206:	0f 5f       	subi	r16, 0xFF	; 255
    1208:	1f 4f       	sbci	r17, 0xFF	; 255
    120a:	d8 01       	movw	r26, r16
    120c:	8c 91       	ld	r24, X

   /*------------------------------------------------------------------------*
    * Search for delimiting character, if not found stop at max string size
    * carriage return, or NULL char.
    *------------------------------------------------------------------------*/
   while( (*pc_in != CONSOLE_RETURN_CHAR)
    120e:	8d 30       	cpi	r24, 0x0D	; 13
    1210:	09 f4       	brne	.+2      	; 0x1214 <consoleIoctl+0x262>
    1212:	c6 c1       	rjmp	.+908    	; 0x15a0 <consoleIoctl+0x5ee>
    1214:	88 23       	and	r24, r24
    1216:	09 f4       	brne	.+2      	; 0x121a <consoleIoctl+0x268>
    1218:	c3 c1       	rjmp	.+902    	; 0x15a0 <consoleIoctl+0x5ee>
    121a:	80 32       	cpi	r24, 0x20	; 32
    121c:	09 f4       	brne	.+2      	; 0x1220 <consoleIoctl+0x26e>
    121e:	f0 c1       	rjmp	.+992    	; 0x1600 <consoleIoctl+0x64e>
    1220:	2b 30       	cpi	r18, 0x0B	; 11
    1222:	09 f4       	brne	.+2      	; 0x1226 <consoleIoctl+0x274>
    1224:	bd c1       	rjmp	.+890    	; 0x15a0 <consoleIoctl+0x5ee>
       && (*pc_in != '\0')
       && (*pc_in != c_delim)
       && (c_tokenSizeCount < *pc_bytesRemaining))
   {
      pc_out[c_tokenSizeCount] = *pc_in;
    1226:	83 87       	std	Z+11, r24	; 0x0b
      pc_in++;
    1228:	0f 5f       	subi	r16, 0xFF	; 255
    122a:	1f 4f       	sbci	r17, 0xFF	; 255
    122c:	d8 01       	movw	r26, r16
    122e:	8c 91       	ld	r24, X

   /*------------------------------------------------------------------------*
    * Search for delimiting character, if not found stop at max string size
    * carriage return, or NULL char.
    *------------------------------------------------------------------------*/
   while( (*pc_in != CONSOLE_RETURN_CHAR)
    1230:	8d 30       	cpi	r24, 0x0D	; 13
    1232:	09 f4       	brne	.+2      	; 0x1236 <consoleIoctl+0x284>
    1234:	b7 c1       	rjmp	.+878    	; 0x15a4 <consoleIoctl+0x5f2>
    1236:	88 23       	and	r24, r24
    1238:	09 f4       	brne	.+2      	; 0x123c <consoleIoctl+0x28a>
    123a:	b4 c1       	rjmp	.+872    	; 0x15a4 <consoleIoctl+0x5f2>
    123c:	80 32       	cpi	r24, 0x20	; 32
    123e:	09 f4       	brne	.+2      	; 0x1242 <consoleIoctl+0x290>
    1240:	e1 c1       	rjmp	.+962    	; 0x1604 <consoleIoctl+0x652>
    1242:	2c 30       	cpi	r18, 0x0C	; 12
    1244:	09 f4       	brne	.+2      	; 0x1248 <consoleIoctl+0x296>
    1246:	ae c1       	rjmp	.+860    	; 0x15a4 <consoleIoctl+0x5f2>
       && (*pc_in != '\0')
       && (*pc_in != c_delim)
       && (c_tokenSizeCount < *pc_bytesRemaining))
   {
      pc_out[c_tokenSizeCount] = *pc_in;
    1248:	84 87       	std	Z+12, r24	; 0x0c
      pc_in++;
    124a:	0f 5f       	subi	r16, 0xFF	; 255
    124c:	1f 4f       	sbci	r17, 0xFF	; 255
    124e:	d8 01       	movw	r26, r16
    1250:	8c 91       	ld	r24, X

   /*------------------------------------------------------------------------*
    * Search for delimiting character, if not found stop at max string size
    * carriage return, or NULL char.
    *------------------------------------------------------------------------*/
   while( (*pc_in != CONSOLE_RETURN_CHAR)
    1252:	8d 30       	cpi	r24, 0x0D	; 13
    1254:	09 f4       	brne	.+2      	; 0x1258 <consoleIoctl+0x2a6>
    1256:	90 c0       	rjmp	.+288    	; 0x1378 <consoleIoctl+0x3c6>
    1258:	88 23       	and	r24, r24
    125a:	09 f4       	brne	.+2      	; 0x125e <consoleIoctl+0x2ac>
    125c:	c3 c1       	rjmp	.+902    	; 0x15e4 <consoleIoctl+0x632>
    125e:	80 32       	cpi	r24, 0x20	; 32
    1260:	09 f4       	brne	.+2      	; 0x1264 <consoleIoctl+0x2b2>
    1262:	d2 c1       	rjmp	.+932    	; 0x1608 <consoleIoctl+0x656>
    1264:	2d 30       	cpi	r18, 0x0D	; 13
    1266:	09 f4       	brne	.+2      	; 0x126a <consoleIoctl+0x2b8>
    1268:	bd c1       	rjmp	.+890    	; 0x15e4 <consoleIoctl+0x632>
       && (*pc_in != '\0')
       && (*pc_in != c_delim)
       && (c_tokenSizeCount < *pc_bytesRemaining))
   {
      pc_out[c_tokenSizeCount] = *pc_in;
    126a:	85 87       	std	Z+13, r24	; 0x0d
      pc_in++;
    126c:	0f 5f       	subi	r16, 0xFF	; 255
    126e:	1f 4f       	sbci	r17, 0xFF	; 255
    1270:	d8 01       	movw	r26, r16
    1272:	8c 91       	ld	r24, X

   /*------------------------------------------------------------------------*
    * Search for delimiting character, if not found stop at max string size
    * carriage return, or NULL char.
    *------------------------------------------------------------------------*/
   while( (*pc_in != CONSOLE_RETURN_CHAR)
    1274:	8d 30       	cpi	r24, 0x0D	; 13
    1276:	09 f4       	brne	.+2      	; 0x127a <consoleIoctl+0x2c8>
    1278:	a9 c1       	rjmp	.+850    	; 0x15cc <consoleIoctl+0x61a>
    127a:	88 23       	and	r24, r24
    127c:	09 f4       	brne	.+2      	; 0x1280 <consoleIoctl+0x2ce>
    127e:	a6 c1       	rjmp	.+844    	; 0x15cc <consoleIoctl+0x61a>
    1280:	80 32       	cpi	r24, 0x20	; 32
    1282:	09 f4       	brne	.+2      	; 0x1286 <consoleIoctl+0x2d4>
    1284:	c5 c1       	rjmp	.+906    	; 0x1610 <consoleIoctl+0x65e>
    1286:	2e 30       	cpi	r18, 0x0E	; 14
    1288:	09 f4       	brne	.+2      	; 0x128c <consoleIoctl+0x2da>
    128a:	a0 c1       	rjmp	.+832    	; 0x15cc <consoleIoctl+0x61a>
       && (*pc_in != '\0')
       && (*pc_in != c_delim)
       && (c_tokenSizeCount < *pc_bytesRemaining))
   {
      pc_out[c_tokenSizeCount] = *pc_in;
    128c:	86 87       	std	Z+14, r24	; 0x0e
      pc_in++;
    128e:	0f 5f       	subi	r16, 0xFF	; 255
    1290:	1f 4f       	sbci	r17, 0xFF	; 255
    1292:	d8 01       	movw	r26, r16
    1294:	8c 91       	ld	r24, X

   /*------------------------------------------------------------------------*
    * Search for delimiting character, if not found stop at max string size
    * carriage return, or NULL char.
    *------------------------------------------------------------------------*/
   while( (*pc_in != CONSOLE_RETURN_CHAR)
    1296:	8d 30       	cpi	r24, 0x0D	; 13
    1298:	09 f4       	brne	.+2      	; 0x129c <consoleIoctl+0x2ea>
    129a:	9a c1       	rjmp	.+820    	; 0x15d0 <consoleIoctl+0x61e>
    129c:	88 23       	and	r24, r24
    129e:	09 f4       	brne	.+2      	; 0x12a2 <consoleIoctl+0x2f0>
    12a0:	97 c1       	rjmp	.+814    	; 0x15d0 <consoleIoctl+0x61e>
    12a2:	80 32       	cpi	r24, 0x20	; 32
    12a4:	09 f4       	brne	.+2      	; 0x12a8 <consoleIoctl+0x2f6>
    12a6:	b2 c1       	rjmp	.+868    	; 0x160c <consoleIoctl+0x65a>
    12a8:	2f 30       	cpi	r18, 0x0F	; 15
    12aa:	09 f4       	brne	.+2      	; 0x12ae <consoleIoctl+0x2fc>
    12ac:	91 c1       	rjmp	.+802    	; 0x15d0 <consoleIoctl+0x61e>
       && (*pc_in != '\0')
       && (*pc_in != c_delim)
       && (c_tokenSizeCount < *pc_bytesRemaining))
   {
      pc_out[c_tokenSizeCount] = *pc_in;
    12ae:	87 87       	std	Z+15, r24	; 0x0f
    12b0:	91 e1       	ldi	r25, 0x11	; 17
    12b2:	00 e0       	ldi	r16, 0x00	; 0
    12b4:	10 e0       	ldi	r17, 0x00	; 0
      pc_nextLoc = drv_strTok( pc_nextLoc,
                               &ac_tok[(*pc_tokenCount)][0],
                               ' ',
                               &c_bytesRemaining,
                               &c_tokenSize);
      (*pc_tokenCount)++;
    12b6:	fa 01       	movw	r30, r20
    12b8:	80 81       	ld	r24, Z
    12ba:	8f 5f       	subi	r24, 0xFF	; 255
    12bc:	80 83       	st	Z, r24
      if( (*pc_tokenCount) > CONSOLE_MAX_TOKENS)
    12be:	88 30       	cpi	r24, 0x08	; 8
    12c0:	08 f0       	brcs	.+2      	; 0x12c4 <consoleIoctl+0x312>
    12c2:	7b c1       	rjmp	.+758    	; 0x15ba <consoleIoctl+0x608>
         /*------------------------------------------------------------------*
          * Error too many tokens....
          *------------------------------------------------------------------*/
         return CONSOLE_TOO_MANY_TOKENS;
      }/*End if( (*pc_tokenCount) > CONSOLE_MAX_TOKENS)*/
      else if( c_tokenSize > CONSOLE_MAX_TOKEN_SIZE)
    12c4:	91 31       	cpi	r25, 0x11	; 17
    12c6:	09 f4       	brne	.+2      	; 0x12ca <consoleIoctl+0x318>
    12c8:	6f c1       	rjmp	.+734    	; 0x15a8 <consoleIoctl+0x5f6>

      if( t_err < 0)
         return t_err;

   }while( (*pc_nextLoc != '\n') && (*pc_nextLoc != '\0') && (pc_nextLoc != NULL)
   && (c_bytesRemaining > 0));
    12ca:	d8 01       	movw	r26, r16
    12cc:	9c 91       	ld	r25, X
    12ce:	9a 30       	cpi	r25, 0x0A	; 10
    12d0:	41 f0       	breq	.+16     	; 0x12e2 <consoleIoctl+0x330>
    12d2:	99 23       	and	r25, r25
    12d4:	31 f0       	breq	.+12     	; 0x12e2 <consoleIoctl+0x330>
    12d6:	01 15       	cp	r16, r1
    12d8:	11 05       	cpc	r17, r1
    12da:	19 f0       	breq	.+6      	; 0x12e2 <consoleIoctl+0x330>
    12dc:	12 16       	cp	r1, r18
    12de:	0c f4       	brge	.+2      	; 0x12e2 <consoleIoctl+0x330>
    12e0:	cf ce       	rjmp	.-610    	; 0x1080 <consoleIoctl+0xce>
    12e2:	ee 24       	eor	r14, r14
    12e4:	ff 24       	eor	r15, r15
    12e6:	87 01       	movw	r16, r14
         /*------------------------------------------------------------------*
          * In order to treat the buffer as if its linear (when using the ioctl
          * command 'CONSOLE_PARSE_CMD_LINE') we need to reset the pointers
          * each time we read its contents.
          *------------------------------------------------------------------*/
         ult_resetBuffer( gt_consoleDev.t_rxBuffer);
    12e8:	80 91 4e 24 	lds	r24, 0x244E
    12ec:	90 91 4f 24 	lds	r25, 0x244F
    12f0:	0e 94 7f 87 	call	0x10efe	; 0x10efe <ult_resetBuffer>

         hal_enableUartRxInt( gt_consoleDev.t_uHandle);
    12f4:	80 91 51 24 	lds	r24, 0x2451
    12f8:	90 91 52 24 	lds	r25, 0x2452
    12fc:	0e 94 51 41 	call	0x82a2	; 0x82a2 <hal_enableUartRxInt>

         /*------------------------------------------------------------------*
          * Release the lock
          *------------------------------------------------------------------*/
         arb_signal( gt_consoleDev.t_rxMutex);
    1300:	80 91 48 24 	lds	r24, 0x2448
    1304:	90 91 49 24 	lds	r25, 0x2449
    1308:	0e 94 7c 7a 	call	0xf4f8	; 0xf4f8 <arb_signal>
    130c:	7c ce       	rjmp	.-776    	; 0x1006 <consoleIoctl+0x54>
   t_consoleTokHndl *pt_tokens = NULL;
   int8_t *pc_rxBuffPtr = NULL;
   uint16_t s_size = 0;
   int8_t ac_buff[40];

   switch( (t_consoleCmd)s_command)
    130e:	68 30       	cpi	r22, 0x08	; 8
    1310:	09 f4       	brne	.+2      	; 0x1314 <consoleIoctl+0x362>
    1312:	05 c1       	rjmp	.+522    	; 0x151e <consoleIoctl+0x56c>
    1314:	69 30       	cpi	r22, 0x09	; 9
    1316:	09 f0       	breq	.+2      	; 0x131a <consoleIoctl+0x368>
    1318:	6e ce       	rjmp	.-804    	; 0xff6 <consoleIoctl+0x44>
      case CONSOLE_SET_FG_COLOR:

         /*------------------------------------------------------------------*
          * We are going to access global memory or a register, so perform lock
          *------------------------------------------------------------------*/
         arb_wait( gt_consoleDev.t_txMutex,
    131a:	80 91 4a 24 	lds	r24, 0x244A
    131e:	90 91 4b 24 	lds	r25, 0x244B
    1322:	60 e0       	ldi	r22, 0x00	; 0
    1324:	0e 94 c3 7d 	call	0xfb86	; 0xfb86 <arb_wait>
                   0);

         if( (i_arguments < CONSOLE_BLACK) || (i_arguments > CONSOLE_WHITE))
    1328:	d7 01       	movw	r26, r14
    132a:	c6 01       	movw	r24, r12
    132c:	c0 97       	sbiw	r24, 0x30	; 48
    132e:	a1 09       	sbc	r26, r1
    1330:	b1 09       	sbc	r27, r1
    1332:	08 97       	sbiw	r24, 0x08	; 8
    1334:	a1 05       	cpc	r26, r1
    1336:	b1 05       	cpc	r27, r1
    1338:	08 f4       	brcc	.+2      	; 0x133c <consoleIoctl+0x38a>
    133a:	09 c1       	rjmp	.+530    	; 0x154e <consoleIoctl+0x59c>
    133c:	89 ef       	ldi	r24, 0xF9	; 249
    133e:	e8 2e       	mov	r14, r24
    1340:	8f ef       	ldi	r24, 0xFF	; 255
    1342:	f8 2e       	mov	r15, r24
    1344:	8f ef       	ldi	r24, 0xFF	; 255
    1346:	08 2f       	mov	r16, r24
    1348:	8f ef       	ldi	r24, 0xFF	; 255
    134a:	18 2f       	mov	r17, r24
         }

         /*------------------------------------------------------------------*
          * Release the lock
          *------------------------------------------------------------------*/
         arb_signal( gt_consoleDev.t_txMutex);
    134c:	80 91 4a 24 	lds	r24, 0x244A
    1350:	90 91 4b 24 	lds	r25, 0x244B
    1354:	0e 94 7c 7a 	call	0xf4f8	; 0xf4f8 <arb_signal>
    1358:	56 ce       	rjmp	.-852    	; 0x1006 <consoleIoctl+0x54>

   switch( (t_consoleCmd)s_command)
   {
      case CONSOLE_GET_RX_BUFFER_SIZE:

         i_return = (int32_t)utl_getBufferSize( gt_consoleDev.t_rxBuffer);
    135a:	80 91 4e 24 	lds	r24, 0x244E
    135e:	90 91 4f 24 	lds	r25, 0x244F
    1362:	0e 94 b2 86 	call	0x10d64	; 0x10d64 <utl_getBufferSize>
    1366:	7c 01       	movw	r14, r24
    1368:	00 27       	eor	r16, r16
    136a:	f7 fc       	sbrc	r15, 7
    136c:	00 95       	com	r16
    136e:	10 2f       	mov	r17, r16
    1370:	4a ce       	rjmp	.-876    	; 0x1006 <consoleIoctl+0x54>

   /*------------------------------------------------------------------------*
    * Search for delimiting character, if not found stop at max string size
    * carriage return, or NULL char.
    *------------------------------------------------------------------------*/
   while( (*pc_in != CONSOLE_RETURN_CHAR)
    1372:	80 e0       	ldi	r24, 0x00	; 0
    * tokens, index the pointer to the next character so that we are starting
    * at the first character of the next token on the next call into this
    * function.
    *------------------------------------------------------------------------*/
   if( *pc_in == c_delim)
      pc_in++;
    1374:	0f 5f       	subi	r16, 0xFF	; 255
    1376:	1f 4f       	sbci	r17, 0xFF	; 255

   /*------------------------------------------------------------------------*
    * Replace 'ending' character (either c_delim, '\n', '\0' or the character
    * at (c_maxSize) with null character).
    *------------------------------------------------------------------------*/
   pc_out[c_tokenSizeCount] = '\0';
    1378:	e8 0f       	add	r30, r24
    137a:	f1 1d       	adc	r31, r1
    137c:	10 82       	st	Z, r1

   c_tokenSizeCount++;
    137e:	98 2f       	mov	r25, r24
    1380:	9f 5f       	subi	r25, 0xFF	; 255
    * Since we are extracting a token decrement *pc_maxSize by the number of
    * characters stored in pc_out. An addition 1 is subtracted for the
    * 'exit' character as well since its not included in the original s_count
    * value.
    *------------------------------------------------------------------------*/
   (*pc_bytesRemaining) = (*pc_bytesRemaining) - c_tokenSizeCount;
    1382:	29 1b       	sub	r18, r25
    1384:	98 cf       	rjmp	.-208    	; 0x12b6 <consoleIoctl+0x304>
      case CONSOLE_DISPLAY_PROMPT:

         /*------------------------------------------------------------------*
          * We are going to access global memory or a register, so perform lock
          *------------------------------------------------------------------*/
         arb_wait( gt_consoleDev.t_txMutex,
    1386:	80 91 4a 24 	lds	r24, 0x244A
    138a:	90 91 4b 24 	lds	r25, 0x244B
    138e:	60 e0       	ldi	r22, 0x00	; 0
    1390:	0e 94 c3 7d 	call	0xfb86	; 0xfb86 <arb_wait>
                   0);

         /*------------------------------------------------------------------*
          * Set the background color and repaint the entire screen
          *------------------------------------------------------------------*/
         s_size = sprintf( (char *)ac_buff, 
    1394:	ed b7       	in	r30, 0x3d	; 61
    1396:	fe b7       	in	r31, 0x3e	; 62
    1398:	3a 97       	sbiw	r30, 0x0a	; 10
    139a:	ed bf       	out	0x3d, r30	; 61
    139c:	fe bf       	out	0x3e, r31	; 62
    139e:	31 96       	adiw	r30, 0x01	; 1
    13a0:	8e 01       	movw	r16, r28
    13a2:	0f 5f       	subi	r16, 0xFF	; 255
    13a4:	1f 4f       	sbci	r17, 0xFF	; 255
    13a6:	ad b7       	in	r26, 0x3d	; 61
    13a8:	be b7       	in	r27, 0x3e	; 62
    13aa:	11 96       	adiw	r26, 0x01	; 1
    13ac:	0d 93       	st	X+, r16
    13ae:	1c 93       	st	X, r17
    13b0:	12 97       	sbiw	r26, 0x02	; 2
    13b2:	80 e0       	ldi	r24, 0x00	; 0
    13b4:	90 e2       	ldi	r25, 0x20	; 32
    13b6:	82 83       	std	Z+2, r24	; 0x02
    13b8:	93 83       	std	Z+3, r25	; 0x03
    13ba:	80 91 54 24 	lds	r24, 0x2454
    13be:	99 27       	eor	r25, r25
    13c0:	87 fd       	sbrc	r24, 7
    13c2:	90 95       	com	r25
    13c4:	84 83       	std	Z+4, r24	; 0x04
    13c6:	95 83       	std	Z+5, r25	; 0x05
    13c8:	86 e5       	ldi	r24, 0x56	; 86
    13ca:	94 e2       	ldi	r25, 0x24	; 36
    13cc:	86 83       	std	Z+6, r24	; 0x06
    13ce:	97 83       	std	Z+7, r25	; 0x07
    13d0:	80 91 55 24 	lds	r24, 0x2455
    13d4:	99 27       	eor	r25, r25
    13d6:	87 fd       	sbrc	r24, 7
    13d8:	90 95       	com	r25
    13da:	80 87       	std	Z+8, r24	; 0x08
    13dc:	91 87       	std	Z+9, r25	; 0x09
    13de:	0e 94 7a b1 	call	0x162f4	; 0x162f4 <sprintf>
    13e2:	ac 01       	movw	r20, r24
                           "\e[1;3%cm[%s]#\e[1;3%cm ",
                           gt_consoleDev.c_cmdPromptColor,
                           gt_consoleDev.ac_dirName,
                           gt_consoleDev.c_fgColor);

         hal_uartWriteBlock( gt_consoleDev.t_uHandle,
    13e4:	80 91 51 24 	lds	r24, 0x2451
    13e8:	90 91 52 24 	lds	r25, 0x2452
    13ec:	ed b7       	in	r30, 0x3d	; 61
    13ee:	fe b7       	in	r31, 0x3e	; 62
    13f0:	3a 96       	adiw	r30, 0x0a	; 10
    13f2:	ed bf       	out	0x3d, r30	; 61
    13f4:	fe bf       	out	0x3e, r31	; 62
    13f6:	b8 01       	movw	r22, r16
    13f8:	0e 94 82 42 	call	0x8504	; 0x8504 <hal_uartWriteBlock>
                             s_size);

         /*------------------------------------------------------------------*
          * Release the lock
          *------------------------------------------------------------------*/
         arb_signal( gt_consoleDev.t_txMutex);
    13fc:	80 91 4a 24 	lds	r24, 0x244A
    1400:	90 91 4b 24 	lds	r25, 0x244B
    1404:	0e 94 7c 7a 	call	0xf4f8	; 0xf4f8 <arb_signal>
    1408:	ee 24       	eor	r14, r14
    140a:	ff 24       	eor	r15, r15
    140c:	87 01       	movw	r16, r14
    140e:	fb cd       	rjmp	.-1034   	; 0x1006 <consoleIoctl+0x54>
      case CONSOLE_RESET_TERMINAL:

         /*------------------------------------------------------------------*
          * We are going to access global memory or a register, so perform lock
          *------------------------------------------------------------------*/
         arb_wait( gt_consoleDev.t_txMutex,
    1410:	80 91 4a 24 	lds	r24, 0x244A
    1414:	90 91 4b 24 	lds	r25, 0x244B
    1418:	60 e0       	ldi	r22, 0x00	; 0
    141a:	0e 94 c3 7d 	call	0xfb86	; 0xfb86 <arb_wait>
                   0);

         /*------------------------------------------------------------------*
          * Reset the terminal to its default settings...
          *------------------------------------------------------------------*/
         s_size = sprintf_P((char *)ac_buff, PSTR("\ec"));
    141e:	00 d0       	rcall	.+0      	; 0x1420 <consoleIoctl+0x46e>
    1420:	0f 92       	push	r0
    1422:	8e 01       	movw	r16, r28
    1424:	0f 5f       	subi	r16, 0xFF	; 255
    1426:	1f 4f       	sbci	r17, 0xFF	; 255
    1428:	ad b7       	in	r26, 0x3d	; 61
    142a:	be b7       	in	r27, 0x3e	; 62
    142c:	11 96       	adiw	r26, 0x01	; 1
    142e:	0d 93       	st	X+, r16
    1430:	1c 93       	st	X, r17
    1432:	12 97       	sbiw	r26, 0x02	; 2
    1434:	8b e6       	ldi	r24, 0x6B	; 107
    1436:	92 e0       	ldi	r25, 0x02	; 2
    1438:	13 96       	adiw	r26, 0x03	; 3
    143a:	8d 93       	st	X+, r24
    143c:	9c 93       	st	X, r25
    143e:	14 97       	sbiw	r26, 0x04	; 4
    1440:	0e 94 a5 b1 	call	0x1634a	; 0x1634a <sprintf_P>
    1444:	ac 01       	movw	r20, r24

         hal_uartWriteBlock( gt_consoleDev.t_uHandle,
    1446:	80 91 51 24 	lds	r24, 0x2451
    144a:	90 91 52 24 	lds	r25, 0x2452
    144e:	0f 90       	pop	r0
    1450:	0f 90       	pop	r0
    1452:	0f 90       	pop	r0
    1454:	0f 90       	pop	r0
    1456:	b8 01       	movw	r22, r16
    1458:	0e 94 82 42 	call	0x8504	; 0x8504 <hal_uartWriteBlock>
                             s_size);

         /*------------------------------------------------------------------*
          * Release the lock
          *------------------------------------------------------------------*/
         arb_signal( gt_consoleDev.t_txMutex);
    145c:	80 91 4a 24 	lds	r24, 0x244A
    1460:	90 91 4b 24 	lds	r25, 0x244B
    1464:	0e 94 7c 7a 	call	0xf4f8	; 0xf4f8 <arb_signal>
    1468:	ee 24       	eor	r14, r14
    146a:	ff 24       	eor	r15, r15
    146c:	87 01       	movw	r16, r14
    146e:	cb cd       	rjmp	.-1130   	; 0x1006 <consoleIoctl+0x54>
      case CONSOLE_SET_PROMPT:
      {
         /*------------------------------------------------------------------*
          * We are going to access global memory or a register, so perform lock
          *------------------------------------------------------------------*/
         arb_wait( gt_consoleDev.t_txMutex,
    1470:	80 91 4a 24 	lds	r24, 0x244A
    1474:	90 91 4b 24 	lds	r25, 0x244B
    1478:	60 e0       	ldi	r22, 0x00	; 0
    147a:	0e 94 c3 7d 	call	0xfb86	; 0xfb86 <arb_wait>
                   0);

         char *pc_name = (char *)((uint16_t)i_arguments);
         sprintf( gt_consoleDev.ac_dirName, "%s", pc_name);
    147e:	86 e5       	ldi	r24, 0x56	; 86
    1480:	94 e2       	ldi	r25, 0x24	; 36
    1482:	b6 01       	movw	r22, r12
    1484:	0e 94 fe b0 	call	0x161fc	; 0x161fc <strcpy>

         /*------------------------------------------------------------------*
          * Release the lock
          *------------------------------------------------------------------*/
         arb_signal( gt_consoleDev.t_txMutex);
    1488:	80 91 4a 24 	lds	r24, 0x244A
    148c:	90 91 4b 24 	lds	r25, 0x244B
    1490:	0e 94 7c 7a 	call	0xf4f8	; 0xf4f8 <arb_signal>
    1494:	ee 24       	eor	r14, r14
    1496:	ff 24       	eor	r15, r15
    1498:	87 01       	movw	r16, r14
    149a:	b5 cd       	rjmp	.-1174   	; 0x1006 <consoleIoctl+0x54>

      break;/*End case CONSOLE_GET_RX_BUFFER_SIZE:*/

      case CONSOLE_GET_BAUD_RATE:

         i_return = (int32_t)hal_uartGetBaudRate( gt_consoleDev.t_uHandle);
    149c:	80 91 51 24 	lds	r24, 0x2451
    14a0:	90 91 52 24 	lds	r25, 0x2452
    14a4:	0e 94 59 43 	call	0x86b2	; 0x86b2 <hal_uartGetBaudRate>
    14a8:	7b 01       	movw	r14, r22
    14aa:	8c 01       	movw	r16, r24
    14ac:	ac cd       	rjmp	.-1192   	; 0x1006 <consoleIoctl+0x54>
      case CONSOLE_SET_BG_COLOR:

         /*------------------------------------------------------------------*
          * We are going to access global memory or a register, so perform lock
          *------------------------------------------------------------------*/
         arb_wait( gt_consoleDev.t_txMutex,
    14ae:	80 91 4a 24 	lds	r24, 0x244A
    14b2:	90 91 4b 24 	lds	r25, 0x244B
    14b6:	60 e0       	ldi	r22, 0x00	; 0
    14b8:	0e 94 c3 7d 	call	0xfb86	; 0xfb86 <arb_wait>
                   0);

         if( (i_arguments < CONSOLE_BLACK) || (i_arguments > CONSOLE_WHITE))
    14bc:	d7 01       	movw	r26, r14
    14be:	c6 01       	movw	r24, r12
    14c0:	c0 97       	sbiw	r24, 0x30	; 48
    14c2:	a1 09       	sbc	r26, r1
    14c4:	b1 09       	sbc	r27, r1
    14c6:	08 97       	sbiw	r24, 0x08	; 8
    14c8:	a1 05       	cpc	r26, r1
    14ca:	b1 05       	cpc	r27, r1
    14cc:	08 f0       	brcs	.+2      	; 0x14d0 <consoleIoctl+0x51e>
    14ce:	36 cf       	rjmp	.-404    	; 0x133c <consoleIoctl+0x38a>
         else
         {
            /*---------------------------------------------------------------*
             * Set the background color and repaint the entire screen
             *---------------------------------------------------------------*/
            s_size = sprintf( (char *)ac_buff, 
    14d0:	00 d0       	rcall	.+0      	; 0x14d2 <consoleIoctl+0x520>
    14d2:	00 d0       	rcall	.+0      	; 0x14d4 <consoleIoctl+0x522>
    14d4:	ed b7       	in	r30, 0x3d	; 61
    14d6:	fe b7       	in	r31, 0x3e	; 62
    14d8:	31 96       	adiw	r30, 0x01	; 1
    14da:	8e 01       	movw	r16, r28
    14dc:	0f 5f       	subi	r16, 0xFF	; 255
    14de:	1f 4f       	sbci	r17, 0xFF	; 255
    14e0:	ad b7       	in	r26, 0x3d	; 61
    14e2:	be b7       	in	r27, 0x3e	; 62
    14e4:	11 96       	adiw	r26, 0x01	; 1
    14e6:	0d 93       	st	X+, r16
    14e8:	1c 93       	st	X, r17
    14ea:	12 97       	sbiw	r26, 0x02	; 2
    14ec:	87 e1       	ldi	r24, 0x17	; 23
    14ee:	90 e2       	ldi	r25, 0x20	; 32
         {
            gt_consoleDev.c_fgColor = (int8_t)i_arguments;
            /*---------------------------------------------------------------*
             * Set the foreground color...
             *---------------------------------------------------------------*/
            s_size = sprintf( (char *)ac_buff, 
    14f0:	82 83       	std	Z+2, r24	; 0x02
    14f2:	93 83       	std	Z+3, r25	; 0x03
    14f4:	c4 82       	std	Z+4, r12	; 0x04
    14f6:	15 82       	std	Z+5, r1	; 0x05
    14f8:	0e 94 7a b1 	call	0x162f4	; 0x162f4 <sprintf>
    14fc:	ac 01       	movw	r20, r24
                              "\e[1;3%cm", 
                              (char)i_arguments);

            hal_uartWriteBlock( gt_consoleDev.t_uHandle,
    14fe:	80 91 51 24 	lds	r24, 0x2451
    1502:	90 91 52 24 	lds	r25, 0x2452
    1506:	ed b7       	in	r30, 0x3d	; 61
    1508:	fe b7       	in	r31, 0x3e	; 62
    150a:	36 96       	adiw	r30, 0x06	; 6
    150c:	ed bf       	out	0x3d, r30	; 61
    150e:	fe bf       	out	0x3e, r31	; 62
    1510:	b8 01       	movw	r22, r16
    1512:	0e 94 82 42 	call	0x8504	; 0x8504 <hal_uartWriteBlock>
    1516:	ee 24       	eor	r14, r14
    1518:	ff 24       	eor	r15, r15
    151a:	87 01       	movw	r16, r14
    151c:	17 cf       	rjmp	.-466    	; 0x134c <consoleIoctl+0x39a>

      break;/*End case CONSOLE_SET_BG_COLOR:*/

      case CONSOLE_SET_PROMPT_COLOR:

         if( (i_arguments < CONSOLE_BLACK) || (i_arguments > CONSOLE_WHITE))
    151e:	da 01       	movw	r26, r20
    1520:	c9 01       	movw	r24, r18
    1522:	c0 97       	sbiw	r24, 0x30	; 48
    1524:	a1 09       	sbc	r26, r1
    1526:	b1 09       	sbc	r27, r1
    1528:	08 97       	sbiw	r24, 0x08	; 8
    152a:	a1 05       	cpc	r26, r1
    152c:	b1 05       	cpc	r27, r1
    152e:	48 f0       	brcs	.+18     	; 0x1542 <consoleIoctl+0x590>
    1530:	99 ef       	ldi	r25, 0xF9	; 249
    1532:	e9 2e       	mov	r14, r25
    1534:	9f ef       	ldi	r25, 0xFF	; 255
    1536:	f9 2e       	mov	r15, r25
    1538:	9f ef       	ldi	r25, 0xFF	; 255
    153a:	09 2f       	mov	r16, r25
    153c:	9f ef       	ldi	r25, 0xFF	; 255
    153e:	19 2f       	mov	r17, r25
    1540:	62 cd       	rjmp	.-1340   	; 0x1006 <consoleIoctl+0x54>
         {
            i_return = (int32_t)CONSOLE_INVALID_COLOR;
         }
         else
         {
            gt_consoleDev.c_cmdPromptColor = (int8_t)i_arguments;
    1542:	20 93 54 24 	sts	0x2454, r18
    1546:	ee 24       	eor	r14, r14
    1548:	ff 24       	eor	r15, r15
    154a:	87 01       	movw	r16, r14
    154c:	5c cd       	rjmp	.-1352   	; 0x1006 <consoleIoctl+0x54>
         {
            i_return = (int32_t)CONSOLE_INVALID_COLOR;
         }
         else
         {
            gt_consoleDev.c_fgColor = (int8_t)i_arguments;
    154e:	c0 92 55 24 	sts	0x2455, r12
            /*---------------------------------------------------------------*
             * Set the foreground color...
             *---------------------------------------------------------------*/
            s_size = sprintf( (char *)ac_buff, 
    1552:	00 d0       	rcall	.+0      	; 0x1554 <consoleIoctl+0x5a2>
    1554:	00 d0       	rcall	.+0      	; 0x1556 <consoleIoctl+0x5a4>
    1556:	ed b7       	in	r30, 0x3d	; 61
    1558:	fe b7       	in	r31, 0x3e	; 62
    155a:	31 96       	adiw	r30, 0x01	; 1
    155c:	8e 01       	movw	r16, r28
    155e:	0f 5f       	subi	r16, 0xFF	; 255
    1560:	1f 4f       	sbci	r17, 0xFF	; 255
    1562:	ad b7       	in	r26, 0x3d	; 61
    1564:	be b7       	in	r27, 0x3e	; 62
    1566:	11 96       	adiw	r26, 0x01	; 1
    1568:	0d 93       	st	X+, r16
    156a:	1c 93       	st	X, r17
    156c:	12 97       	sbiw	r26, 0x02	; 2
    156e:	82 e2       	ldi	r24, 0x22	; 34
    1570:	90 e2       	ldi	r25, 0x20	; 32
    1572:	be cf       	rjmp	.-132    	; 0x14f0 <consoleIoctl+0x53e>

   /*------------------------------------------------------------------------*
    * Search for delimiting character, if not found stop at max string size
    * carriage return, or NULL char.
    *------------------------------------------------------------------------*/
   while( (*pc_in != CONSOLE_RETURN_CHAR)
    1574:	80 e0       	ldi	r24, 0x00	; 0
    1576:	00 cf       	rjmp	.-512    	; 0x1378 <consoleIoctl+0x3c6>
    1578:	81 e0       	ldi	r24, 0x01	; 1
    157a:	fe ce       	rjmp	.-516    	; 0x1378 <consoleIoctl+0x3c6>
    157c:	82 e0       	ldi	r24, 0x02	; 2
    157e:	fc ce       	rjmp	.-520    	; 0x1378 <consoleIoctl+0x3c6>
    1580:	83 e0       	ldi	r24, 0x03	; 3
    1582:	fa ce       	rjmp	.-524    	; 0x1378 <consoleIoctl+0x3c6>
    1584:	84 e0       	ldi	r24, 0x04	; 4
    1586:	f8 ce       	rjmp	.-528    	; 0x1378 <consoleIoctl+0x3c6>
    1588:	85 e0       	ldi	r24, 0x05	; 5
    158a:	f6 ce       	rjmp	.-532    	; 0x1378 <consoleIoctl+0x3c6>
    158c:	86 e0       	ldi	r24, 0x06	; 6
    158e:	f4 ce       	rjmp	.-536    	; 0x1378 <consoleIoctl+0x3c6>
    1590:	87 e0       	ldi	r24, 0x07	; 7
    1592:	f2 ce       	rjmp	.-540    	; 0x1378 <consoleIoctl+0x3c6>
    1594:	88 e0       	ldi	r24, 0x08	; 8
    1596:	f0 ce       	rjmp	.-544    	; 0x1378 <consoleIoctl+0x3c6>
    1598:	89 e0       	ldi	r24, 0x09	; 9
    159a:	ee ce       	rjmp	.-548    	; 0x1378 <consoleIoctl+0x3c6>
    159c:	8a e0       	ldi	r24, 0x0A	; 10
    159e:	ec ce       	rjmp	.-552    	; 0x1378 <consoleIoctl+0x3c6>
    15a0:	8b e0       	ldi	r24, 0x0B	; 11
    15a2:	ea ce       	rjmp	.-556    	; 0x1378 <consoleIoctl+0x3c6>
    15a4:	8c e0       	ldi	r24, 0x0C	; 12
    15a6:	e8 ce       	rjmp	.-560    	; 0x1378 <consoleIoctl+0x3c6>
         /*------------------------------------------------------------------*
          * Error too many tokens....
          *------------------------------------------------------------------*/
         return CONSOLE_TOO_MANY_TOKENS;
      }/*End if( (*pc_tokenCount) > CONSOLE_MAX_TOKENS)*/
      else if( c_tokenSize > CONSOLE_MAX_TOKEN_SIZE)
    15a8:	2b ef       	ldi	r18, 0xFB	; 251
    15aa:	e2 2e       	mov	r14, r18
    15ac:	2f ef       	ldi	r18, 0xFF	; 255
    15ae:	f2 2e       	mov	r15, r18
    15b0:	2f ef       	ldi	r18, 0xFF	; 255
    15b2:	02 2f       	mov	r16, r18
    15b4:	2f ef       	ldi	r18, 0xFF	; 255
    15b6:	12 2f       	mov	r17, r18
    15b8:	97 ce       	rjmp	.-722    	; 0x12e8 <consoleIoctl+0x336>
                               &ac_tok[(*pc_tokenCount)][0],
                               ' ',
                               &c_bytesRemaining,
                               &c_tokenSize);
      (*pc_tokenCount)++;
      if( (*pc_tokenCount) > CONSOLE_MAX_TOKENS)
    15ba:	3a ef       	ldi	r19, 0xFA	; 250
    15bc:	e3 2e       	mov	r14, r19
    15be:	3f ef       	ldi	r19, 0xFF	; 255
    15c0:	f3 2e       	mov	r15, r19
    15c2:	3f ef       	ldi	r19, 0xFF	; 255
    15c4:	03 2f       	mov	r16, r19
    15c6:	3f ef       	ldi	r19, 0xFF	; 255
    15c8:	13 2f       	mov	r17, r19
    15ca:	8e ce       	rjmp	.-740    	; 0x12e8 <consoleIoctl+0x336>

   /*------------------------------------------------------------------------*
    * Search for delimiting character, if not found stop at max string size
    * carriage return, or NULL char.
    *------------------------------------------------------------------------*/
   while( (*pc_in != CONSOLE_RETURN_CHAR)
    15cc:	8e e0       	ldi	r24, 0x0E	; 14
    15ce:	d4 ce       	rjmp	.-600    	; 0x1378 <consoleIoctl+0x3c6>
    15d0:	8f e0       	ldi	r24, 0x0F	; 15
    15d2:	d2 ce       	rjmp	.-604    	; 0x1378 <consoleIoctl+0x3c6>
    15d4:	81 e0       	ldi	r24, 0x01	; 1
    15d6:	ce ce       	rjmp	.-612    	; 0x1374 <consoleIoctl+0x3c2>
    15d8:	82 e0       	ldi	r24, 0x02	; 2
    15da:	cc ce       	rjmp	.-616    	; 0x1374 <consoleIoctl+0x3c2>
    15dc:	83 e0       	ldi	r24, 0x03	; 3
    15de:	ca ce       	rjmp	.-620    	; 0x1374 <consoleIoctl+0x3c2>
    15e0:	84 e0       	ldi	r24, 0x04	; 4
    15e2:	c8 ce       	rjmp	.-624    	; 0x1374 <consoleIoctl+0x3c2>
    15e4:	8d e0       	ldi	r24, 0x0D	; 13
    15e6:	c8 ce       	rjmp	.-624    	; 0x1378 <consoleIoctl+0x3c6>
    15e8:	85 e0       	ldi	r24, 0x05	; 5
    15ea:	c4 ce       	rjmp	.-632    	; 0x1374 <consoleIoctl+0x3c2>
    15ec:	86 e0       	ldi	r24, 0x06	; 6
    15ee:	c2 ce       	rjmp	.-636    	; 0x1374 <consoleIoctl+0x3c2>
    15f0:	87 e0       	ldi	r24, 0x07	; 7
    15f2:	c0 ce       	rjmp	.-640    	; 0x1374 <consoleIoctl+0x3c2>
    15f4:	88 e0       	ldi	r24, 0x08	; 8
    15f6:	be ce       	rjmp	.-644    	; 0x1374 <consoleIoctl+0x3c2>
    15f8:	89 e0       	ldi	r24, 0x09	; 9
    15fa:	bc ce       	rjmp	.-648    	; 0x1374 <consoleIoctl+0x3c2>
    15fc:	8a e0       	ldi	r24, 0x0A	; 10
    15fe:	ba ce       	rjmp	.-652    	; 0x1374 <consoleIoctl+0x3c2>
    1600:	8b e0       	ldi	r24, 0x0B	; 11
    1602:	b8 ce       	rjmp	.-656    	; 0x1374 <consoleIoctl+0x3c2>
    1604:	8c e0       	ldi	r24, 0x0C	; 12
    1606:	b6 ce       	rjmp	.-660    	; 0x1374 <consoleIoctl+0x3c2>
    1608:	8d e0       	ldi	r24, 0x0D	; 13
    160a:	b4 ce       	rjmp	.-664    	; 0x1374 <consoleIoctl+0x3c2>
    160c:	8f e0       	ldi	r24, 0x0F	; 15
    160e:	b2 ce       	rjmp	.-668    	; 0x1374 <consoleIoctl+0x3c2>
    1610:	8e e0       	ldi	r24, 0x0E	; 14
    1612:	b0 ce       	rjmp	.-672    	; 0x1374 <consoleIoctl+0x3c2>

00001614 <consoleRead>:
}/*End consoleOpen*/

static int16_t consoleRead( t_DEVHANDLE t_handle,
                            int8_t *pc_buff,
                            uint16_t s_size)
{
    1614:	cf 92       	push	r12
    1616:	df 92       	push	r13
    1618:	ef 92       	push	r14
    161a:	ff 92       	push	r15
    161c:	0f 93       	push	r16
    161e:	1f 93       	push	r17
    1620:	df 93       	push	r29
    1622:	cf 93       	push	r28
    1624:	0f 92       	push	r0
    1626:	0f 92       	push	r0
    1628:	cd b7       	in	r28, 0x3d	; 61
    162a:	de b7       	in	r29, 0x3e	; 62
    162c:	89 83       	std	Y+1, r24	; 0x01
    162e:	9a 83       	std	Y+2, r25	; 0x02
    1630:	6b 01       	movw	r12, r22
    1632:	8a 01       	movw	r16, r20
   int16_t s_bufferLevel = 0;

   /*------------------------------------------------------------------------*
    * We are going to access global memory or a register, so perform lock
    *------------------------------------------------------------------------*/
   arb_wait( gt_consoleDev.t_rxMutex,
    1634:	80 91 48 24 	lds	r24, 0x2448
    1638:	90 91 49 24 	lds	r25, 0x2449
    163c:	60 e0       	ldi	r22, 0x00	; 0
    163e:	0e 94 c3 7d 	call	0xfb86	; 0xfb86 <arb_wait>
             0);

   /*------------------------------------------------------------------------*
    * Wait for data to be available in the RX buffer.
    *------------------------------------------------------------------------*/
   arb_wait( gt_consoleDev.t_rxBlockingSem,
    1642:	80 91 4c 24 	lds	r24, 0x244C
    1646:	90 91 4d 24 	lds	r25, 0x244D
    164a:	60 e0       	ldi	r22, 0x00	; 0
    164c:	0e 94 c3 7d 	call	0xfb86	; 0xfb86 <arb_wait>
             0);

   /*------------------------------------------------------------------------*
    * Level plus an extra NULL character.
    *------------------------------------------------------------------------*/
   s_bufferLevel = utl_getBufferFullLevel( gt_consoleDev.t_rxBuffer);
    1650:	80 91 4e 24 	lds	r24, 0x244E
    1654:	90 91 4f 24 	lds	r25, 0x244F
    1658:	0e 94 9e 86 	call	0x10d3c	; 0x10d3c <utl_getBufferFullLevel>
    165c:	7c 01       	movw	r14, r24

   /*------------------------------------------------------------------------*
    * Can the user-space buffer hold all the data plus the NULL character?
    *------------------------------------------------------------------------*/
   if( s_bufferLevel > s_size)
    165e:	08 17       	cp	r16, r24
    1660:	19 07       	cpc	r17, r25
    1662:	30 f1       	brcs	.+76     	; 0x16b0 <consoleRead+0x9c>
      arb_signal( gt_consoleDev.t_rxMutex);
      return (int16_t)ARB_READ_ERROR;

   }/*End if( s_bufferLevel > s_size)*/

   utl_readBlock( gt_consoleDev.t_rxBuffer,
    1664:	80 91 4e 24 	lds	r24, 0x244E
    1668:	90 91 4f 24 	lds	r25, 0x244F
    166c:	b6 01       	movw	r22, r12
    166e:	a7 01       	movw	r20, r14
    1670:	0e 94 0a 88 	call	0x11014	; 0x11014 <utl_readBlock>
   /*------------------------------------------------------------------------*
    * In order to treat the buffer as if its linear (when using the ioctl
    * command 'CONSOLE_PARSE_CMD_LINE') we need to reset the pointers each
    * time we read its contents.
    *------------------------------------------------------------------------*/
   ult_resetBuffer( gt_consoleDev.t_rxBuffer);
    1674:	80 91 4e 24 	lds	r24, 0x244E
    1678:	90 91 4f 24 	lds	r25, 0x244F
    167c:	0e 94 7f 87 	call	0x10efe	; 0x10efe <ult_resetBuffer>

   hal_enableUartRxInt( gt_consoleDev.t_uHandle);
    1680:	80 91 51 24 	lds	r24, 0x2451
    1684:	90 91 52 24 	lds	r25, 0x2452
    1688:	0e 94 51 41 	call	0x82a2	; 0x82a2 <hal_enableUartRxInt>

   /*------------------------------------------------------------------------*
    * Release the lock
    *------------------------------------------------------------------------*/
   arb_signal( gt_consoleDev.t_rxMutex);
    168c:	80 91 48 24 	lds	r24, 0x2448
    1690:	90 91 49 24 	lds	r25, 0x2449
    1694:	0e 94 7c 7a 	call	0xf4f8	; 0xf4f8 <arb_signal>

   return s_bufferLevel;

}/*End consoleRead*/
    1698:	c7 01       	movw	r24, r14
    169a:	0f 90       	pop	r0
    169c:	0f 90       	pop	r0
    169e:	cf 91       	pop	r28
    16a0:	df 91       	pop	r29
    16a2:	1f 91       	pop	r17
    16a4:	0f 91       	pop	r16
    16a6:	ff 90       	pop	r15
    16a8:	ef 90       	pop	r14
    16aa:	df 90       	pop	r13
    16ac:	cf 90       	pop	r12
    16ae:	08 95       	ret
   /*------------------------------------------------------------------------*
    * Can the user-space buffer hold all the data plus the NULL character?
    *------------------------------------------------------------------------*/
   if( s_bufferLevel > s_size)
   {
      ult_resetBuffer( gt_consoleDev.t_rxBuffer);
    16b0:	80 91 4e 24 	lds	r24, 0x244E
    16b4:	90 91 4f 24 	lds	r25, 0x244F
    16b8:	0e 94 7f 87 	call	0x10efe	; 0x10efe <ult_resetBuffer>

      hal_enableUartRxInt( gt_consoleDev.t_uHandle);
    16bc:	80 91 51 24 	lds	r24, 0x2451
    16c0:	90 91 52 24 	lds	r25, 0x2452
    16c4:	0e 94 51 41 	call	0x82a2	; 0x82a2 <hal_enableUartRxInt>

      /*---------------------------------------------------------------------*
       * Release the lock
       *---------------------------------------------------------------------*/
      arb_signal( gt_consoleDev.t_rxMutex);
    16c8:	80 91 48 24 	lds	r24, 0x2448
    16cc:	90 91 49 24 	lds	r25, 0x2449
    16d0:	0e 94 7c 7a 	call	0xf4f8	; 0xf4f8 <arb_signal>
    16d4:	e4 ef       	ldi	r30, 0xF4	; 244
    16d6:	ee 2e       	mov	r14, r30
    16d8:	ef ef       	ldi	r30, 0xFF	; 255
    16da:	fe 2e       	mov	r15, r30
    16dc:	dd cf       	rjmp	.-70     	; 0x1698 <consoleRead+0x84>

000016de <drv_consoleExit>:
 * Remove the device from the system
 *---------------------------------------------------------------------------*/
void drv_consoleExit( void)
{

   if( gt_consoleDev.t_rxMutex != 0) /*If created... destroy*/
    16de:	80 91 48 24 	lds	r24, 0x2448
    16e2:	90 91 49 24 	lds	r25, 0x2449
    16e6:	89 2b       	or	r24, r25
    16e8:	09 f4       	brne	.+2      	; 0x16ec <drv_consoleExit+0xe>
    16ea:	08 95       	ret
   {

      utl_destroyBuffer( gt_consoleDev.t_rxBuffer);
    16ec:	80 91 4e 24 	lds	r24, 0x244E
    16f0:	90 91 4f 24 	lds	r25, 0x244F
    16f4:	0e 94 97 87 	call	0x10f2e	; 0x10f2e <utl_destroyBuffer>
      hal_releaseUartChannel( gt_consoleDev.t_uHandle);
    16f8:	80 91 51 24 	lds	r24, 0x2451
    16fc:	90 91 52 24 	lds	r25, 0x2452
    1700:	0e 94 26 45 	call	0x8a4c	; 0x8a4c <hal_releaseUartChannel>
      arb_semaphoreDestroy( gt_consoleDev.t_rxBlockingSem);
    1704:	80 91 4c 24 	lds	r24, 0x244C
    1708:	90 91 4d 24 	lds	r25, 0x244D
    170c:	0e 94 ea 77 	call	0xefd4	; 0xefd4 <arb_semaphoreDestroy>
      arb_semaphoreDestroy( gt_consoleDev.t_rxMutex);
    1710:	80 91 48 24 	lds	r24, 0x2448
    1714:	90 91 49 24 	lds	r25, 0x2449
    1718:	0e 94 ea 77 	call	0xefd4	; 0xefd4 <arb_semaphoreDestroy>
      arb_semaphoreDestroy( gt_consoleDev.t_txMutex);
    171c:	80 91 4a 24 	lds	r24, 0x244A
    1720:	90 91 4b 24 	lds	r25, 0x244B
    1724:	0e 94 ea 77 	call	0xefd4	; 0xefd4 <arb_semaphoreDestroy>
      arb_destroyDevice( "consoleDevice0");
    1728:	8b e2       	ldi	r24, 0x2B	; 43
    172a:	90 e2       	ldi	r25, 0x20	; 32
    172c:	0e 94 0b 6e 	call	0xdc16	; 0xdc16 <arb_destroyDevice>

      memset( (void *)&gt_consoleDev, 0, sizeof( gt_consoleDev));
    1730:	8e e1       	ldi	r24, 0x1E	; 30
    1732:	e8 e4       	ldi	r30, 0x48	; 72
    1734:	f4 e2       	ldi	r31, 0x24	; 36
    1736:	df 01       	movw	r26, r30
    1738:	1d 92       	st	X+, r1
    173a:	8a 95       	dec	r24
    173c:	e9 f7       	brne	.-6      	; 0x1738 <drv_consoleExit+0x5a>
    173e:	08 95       	ret

00001740 <drv_consoleInit>:
   return t_err;

}/*End consoleClose*/

t_error drv_consoleInit( t_consoleSetup t_setup)
{
    1740:	af 92       	push	r10
    1742:	bf 92       	push	r11
    1744:	cf 92       	push	r12
    1746:	df 92       	push	r13
    1748:	ef 92       	push	r14
    174a:	ff 92       	push	r15
    174c:	0f 93       	push	r16
    174e:	1f 93       	push	r17
    1750:	df 93       	push	r29
    1752:	cf 93       	push	r28
    1754:	cd b7       	in	r28, 0x3d	; 61
    1756:	de b7       	in	r29, 0x3e	; 62
    1758:	64 97       	sbiw	r28, 0x14	; 20
    175a:	cd bf       	out	0x3d, r28	; 61
    175c:	de bf       	out	0x3e, r29	; 62
    175e:	4f 87       	std	Y+15, r20	; 0x0f
    1760:	58 8b       	std	Y+16, r21	; 0x10
    1762:	69 8b       	std	Y+17, r22	; 0x11
    1764:	7a 8b       	std	Y+18, r23	; 0x12
    1766:	8b 8b       	std	Y+19, r24	; 0x13
    1768:	9c 8b       	std	Y+20, r25	; 0x14
    176a:	08 2f       	mov	r16, r24
    176c:	cf 84       	ldd	r12, Y+15	; 0x0f
    176e:	d8 88       	ldd	r13, Y+16	; 0x10
    1770:	e9 88       	ldd	r14, Y+17	; 0x11
    1772:	fa 88       	ldd	r15, Y+18	; 0x12
   t_uartConfig t_uConf;

   /*------------------------------------------------------------------------*
    * Make sure the kernel is aware that a new device has been loaded.
    *------------------------------------------------------------------------*/
   t_err = arb_registerDevice( "consoleDevice0",
    1774:	79 2f       	mov	r23, r25
    1776:	8b e2       	ldi	r24, 0x2B	; 43
    1778:	90 e2       	ldi	r25, 0x20	; 32
    177a:	60 e0       	ldi	r22, 0x00	; 0
    177c:	4a e3       	ldi	r20, 0x3A	; 58
    177e:	50 e2       	ldi	r21, 0x20	; 32
    1780:	0e 94 84 6e 	call	0xdd08	; 0xdd08 <arb_registerDevice>
    1784:	18 2f       	mov	r17, r24
                               arb_createDevId( t_setup.c_majorNum, 0),
                               &gt_consoleDevOps);

   if( t_err < 0)
    1786:	87 fd       	sbrc	r24, 7
    1788:	8b c0       	rjmp	.+278    	; 0x18a0 <drv_consoleInit+0x160>

   /*------------------------------------------------------------------------*
    * Request a semaphore from the kernel. Since the signal port is a shared
    * resource we need to have all actions on it be mutually exclusive.
    *------------------------------------------------------------------------*/
   gt_consoleDev.t_rxMutex = arb_semaphoreCreate( MUTEX);
    178a:	82 e0       	ldi	r24, 0x02	; 2
    178c:	0e 94 61 78 	call	0xf0c2	; 0xf0c2 <arb_semaphoreCreate>
    1790:	80 93 48 24 	sts	0x2448, r24
    1794:	90 93 49 24 	sts	0x2449, r25

   if( gt_consoleDev.t_rxMutex < 0)
    1798:	80 91 48 24 	lds	r24, 0x2448
    179c:	90 91 49 24 	lds	r25, 0x2449
    17a0:	97 fd       	sbrc	r25, 7
    17a2:	75 c0       	rjmp	.+234    	; 0x188e <drv_consoleInit+0x14e>

   /*------------------------------------------------------------------------*
    * Request a semaphore from the kernel. We will use this semaphore for
    * signaling the user-space program when the RX buffer has data.
    *------------------------------------------------------------------------*/
   gt_consoleDev.t_rxBlockingSem = arb_semaphoreCreate( COUNTING);
    17a4:	80 e0       	ldi	r24, 0x00	; 0
    17a6:	0e 94 61 78 	call	0xf0c2	; 0xf0c2 <arb_semaphoreCreate>
    17aa:	80 93 4c 24 	sts	0x244C, r24
    17ae:	90 93 4d 24 	sts	0x244D, r25

   if( gt_consoleDev.t_rxBlockingSem < 0)
    17b2:	80 91 4c 24 	lds	r24, 0x244C
    17b6:	90 91 4d 24 	lds	r25, 0x244D
    17ba:	97 fd       	sbrc	r25, 7
    17bc:	80 c0       	rjmp	.+256    	; 0x18be <drv_consoleInit+0x17e>
   }/*End if( gt_consoleDev.t_rxBlockingSem < 0)*/

   /*------------------------------------------------------------------------*
    * Grab handle to console UART
    *------------------------------------------------------------------------*/
   gt_consoleDev.t_uHandle = hal_requestUartChannel( t_setup.c_uartId);
    17be:	80 2f       	mov	r24, r16
    17c0:	0e 94 c1 43 	call	0x8782	; 0x8782 <hal_requestUartChannel>
    17c4:	80 93 51 24 	sts	0x2451, r24
    17c8:	90 93 52 24 	sts	0x2452, r25
   if( gt_consoleDev.t_uHandle < 0)
    17cc:	80 91 51 24 	lds	r24, 0x2451
    17d0:	90 91 52 24 	lds	r25, 0x2452
    17d4:	97 fd       	sbrc	r25, 7
    17d6:	81 c0       	rjmp	.+258    	; 0x18da <drv_consoleInit+0x19a>
   {
      t_err = ARB_HAL_ERROR;
      goto failed4;
   }

   t_uConf.t_comMd = ASYNC;
    17d8:	19 82       	std	Y+1, r1	; 0x01
   t_uConf.t_charSz = CHAR_8BIT;
    17da:	83 e0       	ldi	r24, 0x03	; 3
    17dc:	8a 83       	std	Y+2, r24	; 0x02
   t_uConf.t_parityMd = NO_PARITY;
    17de:	1b 82       	std	Y+3, r1	; 0x03
   t_uConf.t_stopBitMd = ONE_STOP_BIT;
    17e0:	1c 82       	std	Y+4, r1	; 0x04
   t_uConf.i_baudRate = t_setup.i_baudRate;
    17e2:	cd 82       	std	Y+5, r12	; 0x05
    17e4:	de 82       	std	Y+6, r13	; 0x06
    17e6:	ef 82       	std	Y+7, r14	; 0x07
    17e8:	f8 86       	std	Y+8, r15	; 0x08
   t_uConf.b_enRxDma = false;
    17ea:	1a 86       	std	Y+10, r1	; 0x0a
   t_uConf.b_enTxDma = false;
    17ec:	19 86       	std	Y+9, r1	; 0x09
   t_uConf.pf_rxCallBack = &rxComplete;
    17ee:	83 e8       	ldi	r24, 0x83	; 131
    17f0:	9c e0       	ldi	r25, 0x0C	; 12
    17f2:	8b 87       	std	Y+11, r24	; 0x0b
    17f4:	9c 87       	std	Y+12, r25	; 0x0c
   /*------------------------------------------------------------------------*
    * By setting the tx call-back to NULL, all data transfers over the uart
    * are performed "in-place".
    *------------------------------------------------------------------------*/
   t_uConf.pf_txCallBack = NULL;
    17f6:	1d 86       	std	Y+13, r1	; 0x0d
    17f8:	1e 86       	std	Y+14, r1	; 0x0e

   /*------------------------------------------------------------------------*
    * Configure console UART
    *------------------------------------------------------------------------*/
   if( hal_configureUartChannel( gt_consoleDev.t_uHandle,
    17fa:	80 91 51 24 	lds	r24, 0x2451
    17fe:	90 91 52 24 	lds	r25, 0x2452
    1802:	aa 24       	eor	r10, r10
    1804:	f3 e0       	ldi	r31, 0x03	; 3
    1806:	bf 2e       	mov	r11, r31
    1808:	cc 24       	eor	r12, r12
    180a:	dd 24       	eor	r13, r13
    180c:	ed 80       	ldd	r14, Y+5	; 0x05
    180e:	fe 80       	ldd	r15, Y+6	; 0x06
    1810:	0f 81       	ldd	r16, Y+7	; 0x07
    1812:	18 85       	ldd	r17, Y+8	; 0x08
    1814:	20 e0       	ldi	r18, 0x00	; 0
    1816:	30 e0       	ldi	r19, 0x00	; 0
    1818:	4b 85       	ldd	r20, Y+11	; 0x0b
    181a:	5c 85       	ldd	r21, Y+12	; 0x0c
    181c:	6d 85       	ldd	r22, Y+13	; 0x0d
    181e:	7e 85       	ldd	r23, Y+14	; 0x0e
    1820:	0e 94 0c 46 	call	0x8c18	; 0x8c18 <hal_configureUartChannel>
    1824:	87 fd       	sbrc	r24, 7
    1826:	5b c0       	rjmp	.+182    	; 0x18de <drv_consoleInit+0x19e>
   /*------------------------------------------------------------------------*
    * Allocate RX buffer of size = A*B1, where A = the max number of
    * possible tokens, B = the size of each token including a terminating
    * character, and 1 byte for the character that ends the string.
    *------------------------------------------------------------------------*/
   gt_consoleDev.t_rxBuffer = utl_createBuffer( CONSOLE_MAX_TOKENS*
    1828:	81 e7       	ldi	r24, 0x71	; 113
    182a:	90 e0       	ldi	r25, 0x00	; 0
    182c:	0e 94 b8 87 	call	0x10f70	; 0x10f70 <utl_createBuffer>
    1830:	80 93 4e 24 	sts	0x244E, r24
    1834:	90 93 4f 24 	sts	0x244F, r25
   CONSOLE_MAX_TOKEN_SIZE + 1);
   if( gt_consoleDev.t_rxBuffer < 0)
    1838:	80 91 4e 24 	lds	r24, 0x244E
    183c:	90 91 4f 24 	lds	r25, 0x244F
    1840:	97 fd       	sbrc	r25, 7
    1842:	49 c0       	rjmp	.+146    	; 0x18d6 <drv_consoleInit+0x196>

   /*------------------------------------------------------------------------*
    * Request a semaphore from the kernel. Since the signal port is a shared
    * resource we need to have all actions on it be mutually exclusive.
    *------------------------------------------------------------------------*/
   gt_consoleDev.t_txMutex = arb_semaphoreCreate( MUTEX);
    1844:	82 e0       	ldi	r24, 0x02	; 2
    1846:	0e 94 61 78 	call	0xf0c2	; 0xf0c2 <arb_semaphoreCreate>
    184a:	80 93 4a 24 	sts	0x244A, r24
    184e:	90 93 4b 24 	sts	0x244B, r25

   if( gt_consoleDev.t_txMutex < 0)
    1852:	80 91 4a 24 	lds	r24, 0x244A
    1856:	90 91 4b 24 	lds	r25, 0x244B
    185a:	97 ff       	sbrs	r25, 7
    185c:	42 c0       	rjmp	.+132    	; 0x18e2 <drv_consoleInit+0x1a2>
   {
      t_err = (t_error)gt_consoleDev.t_txMutex;
    185e:	80 91 4a 24 	lds	r24, 0x244A
    1862:	90 91 4b 24 	lds	r25, 0x244B
    1866:	18 2f       	mov	r17, r24

   return ARB_PASSED;

failed6:

   utl_destroyBuffer( gt_consoleDev.t_rxBuffer);
    1868:	80 91 4e 24 	lds	r24, 0x244E
    186c:	90 91 4f 24 	lds	r25, 0x244F
    1870:	0e 94 97 87 	call	0x10f2e	; 0x10f2e <utl_destroyBuffer>

failed5:

   hal_releaseUartChannel( gt_consoleDev.t_uHandle);
    1874:	80 91 51 24 	lds	r24, 0x2451
    1878:	90 91 52 24 	lds	r25, 0x2452
    187c:	0e 94 26 45 	call	0x8a4c	; 0x8a4c <hal_releaseUartChannel>

failed4:

   arb_semaphoreDestroy( gt_consoleDev.t_rxBlockingSem);
    1880:	80 91 4c 24 	lds	r24, 0x244C
    1884:	90 91 4d 24 	lds	r25, 0x244D
    1888:	0e 94 ea 77 	call	0xefd4	; 0xefd4 <arb_semaphoreDestroy>
    188c:	1d c0       	rjmp	.+58     	; 0x18c8 <drv_consoleInit+0x188>
    *------------------------------------------------------------------------*/
   gt_consoleDev.t_rxMutex = arb_semaphoreCreate( MUTEX);

   if( gt_consoleDev.t_rxMutex < 0)
   {
      t_err = (t_error)gt_consoleDev.t_rxMutex;
    188e:	80 91 48 24 	lds	r24, 0x2448
    1892:	90 91 49 24 	lds	r25, 0x2449
    1896:	18 2f       	mov	r17, r24

   arb_semaphoreDestroy( gt_consoleDev.t_rxMutex);

failed2:

   arb_destroyDevice( "consoleDevice0");
    1898:	8b e2       	ldi	r24, 0x2B	; 43
    189a:	90 e2       	ldi	r25, 0x20	; 32
    189c:	0e 94 0b 6e 	call	0xdc16	; 0xdc16 <arb_destroyDevice>

failed1:

   return t_err;

}/*End drv_consoleInit*/
    18a0:	81 2f       	mov	r24, r17
    18a2:	64 96       	adiw	r28, 0x14	; 20
    18a4:	cd bf       	out	0x3d, r28	; 61
    18a6:	de bf       	out	0x3e, r29	; 62
    18a8:	cf 91       	pop	r28
    18aa:	df 91       	pop	r29
    18ac:	1f 91       	pop	r17
    18ae:	0f 91       	pop	r16
    18b0:	ff 90       	pop	r15
    18b2:	ef 90       	pop	r14
    18b4:	df 90       	pop	r13
    18b6:	cf 90       	pop	r12
    18b8:	bf 90       	pop	r11
    18ba:	af 90       	pop	r10
    18bc:	08 95       	ret
    *------------------------------------------------------------------------*/
   gt_consoleDev.t_rxBlockingSem = arb_semaphoreCreate( COUNTING);

   if( gt_consoleDev.t_rxBlockingSem < 0)
   {
      t_err = (t_error)gt_consoleDev.t_rxBlockingSem;
    18be:	80 91 4c 24 	lds	r24, 0x244C
    18c2:	90 91 4d 24 	lds	r25, 0x244D
    18c6:	18 2f       	mov	r17, r24

   arb_semaphoreDestroy( gt_consoleDev.t_rxBlockingSem);

failed3:

   arb_semaphoreDestroy( gt_consoleDev.t_rxMutex);
    18c8:	80 91 48 24 	lds	r24, 0x2448
    18cc:	90 91 49 24 	lds	r25, 0x2449
    18d0:	0e 94 ea 77 	call	0xefd4	; 0xefd4 <arb_semaphoreDestroy>
    18d4:	e1 cf       	rjmp	.-62     	; 0x1898 <drv_consoleInit+0x158>
    * possible tokens, B = the size of each token including a terminating
    * character, and 1 byte for the character that ends the string.
    *------------------------------------------------------------------------*/
   gt_consoleDev.t_rxBuffer = utl_createBuffer( CONSOLE_MAX_TOKENS*
   CONSOLE_MAX_TOKEN_SIZE + 1);
   if( gt_consoleDev.t_rxBuffer < 0)
    18d6:	1f ef       	ldi	r17, 0xFF	; 255
    18d8:	cd cf       	rjmp	.-102    	; 0x1874 <drv_consoleInit+0x134>

   /*------------------------------------------------------------------------*
    * Grab handle to console UART
    *------------------------------------------------------------------------*/
   gt_consoleDev.t_uHandle = hal_requestUartChannel( t_setup.c_uartId);
   if( gt_consoleDev.t_uHandle < 0)
    18da:	16 ef       	ldi	r17, 0xF6	; 246
    18dc:	d1 cf       	rjmp	.-94     	; 0x1880 <drv_consoleInit+0x140>
   t_uConf.pf_txCallBack = NULL;

   /*------------------------------------------------------------------------*
    * Configure console UART
    *------------------------------------------------------------------------*/
   if( hal_configureUartChannel( gt_consoleDev.t_uHandle,
    18de:	16 ef       	ldi	r17, 0xF6	; 246
    18e0:	c9 cf       	rjmp	.-110    	; 0x1874 <drv_consoleInit+0x134>
   }/*End if( gt_consoleDev.t_txMutex < 0)*/

   /*------------------------------------------------------------------------*
    * We don't have any users attached to this device
    *------------------------------------------------------------------------*/
   gt_consoleDev.c_numUsers = 0;
    18e2:	10 92 50 24 	sts	0x2450, r1
   /*------------------------------------------------------------------------*
    * This variable is used as a means of blocking the TX register empty
    * interrupt from sending a byte of data out of the uart interface while
    * the driver is currently receiving data over the user interface.
    *------------------------------------------------------------------------*/
   gt_consoleDev.b_rxActive = false;
    18e6:	10 92 53 24 	sts	0x2453, r1

   /*------------------------------------------------------------------------*
    * Set the default colors...
    *------------------------------------------------------------------------*/
   gt_consoleDev.c_cmdPromptColor = CONSOLE_GREEN;
    18ea:	82 e3       	ldi	r24, 0x32	; 50
    18ec:	80 93 54 24 	sts	0x2454, r24
   gt_consoleDev.c_fgColor = CONSOLE_WHITE;
    18f0:	87 e3       	ldi	r24, 0x37	; 55
    18f2:	80 93 55 24 	sts	0x2455, r24

   /*------------------------------------------------------------------------*
    * Set the default prompt working directory.
    *------------------------------------------------------------------------*/
   sprintf( gt_consoleDev.ac_dirName, "/");
    18f6:	8f e2       	ldi	r24, 0x2F	; 47
    18f8:	90 e0       	ldi	r25, 0x00	; 0
    18fa:	80 93 56 24 	sts	0x2456, r24
    18fe:	90 93 57 24 	sts	0x2457, r25
    1902:	10 e0       	ldi	r17, 0x00	; 0
    1904:	cd cf       	rjmp	.-102    	; 0x18a0 <drv_consoleInit+0x160>

00001906 <rxComplete>:
   return CONSOLE_PASSED;

}/*End usr_parseMessage*/

static void rxComplete( uint16_t s_byte)
{
    1906:	0f 93       	push	r16
    1908:	1f 93       	push	r17
    190a:	cf 93       	push	r28
    190c:	df 93       	push	r29
    190e:	8c 01       	movw	r16, r24
   uint16_t s_bufferLevel = utl_getBufferFullLevel( gt_consoleDev.t_rxBuffer);
    1910:	80 91 4e 24 	lds	r24, 0x244E
    1914:	90 91 4f 24 	lds	r25, 0x244F
    1918:	0e 94 9e 86 	call	0x10d3c	; 0x10d3c <utl_getBufferFullLevel>
    191c:	ec 01       	movw	r28, r24
   uint16_t s_bufferSize  = utl_getBufferSize( gt_consoleDev.t_rxBuffer);
    191e:	80 91 4e 24 	lds	r24, 0x244E
    1922:	90 91 4f 24 	lds	r25, 0x244F
    1926:	0e 94 b2 86 	call	0x10d64	; 0x10d64 <utl_getBufferSize>
    192a:	9c 01       	movw	r18, r24

   gt_consoleDev.b_rxActive = true;
    192c:	81 e0       	ldi	r24, 0x01	; 1
    192e:	80 93 53 24 	sts	0x2453, r24

   /*------------------------------------------------------------------------*
    * If a backspace has been entered, erase the bytes in the buffer until
    * there is no longer any more data available.
    *------------------------------------------------------------------------*/
   if( (s_byte == CONSOLE_BACKSPACE_CHAR) && (s_bufferLevel > 0))
    1932:	0f 37       	cpi	r16, 0x7F	; 127
    1934:	11 05       	cpc	r17, r1
    1936:	09 f1       	breq	.+66     	; 0x197a <rxComplete+0x74>
       * Remove the last byte in the buffer...
       *---------------------------------------------------------------------*/
      utl_buffEraseTailByte( gt_consoleDev.t_rxBuffer);

   }/*End if( (s_byte == CONSOLE_BACKSPACE_CHAR) && (s_bufferLevel > 0))*/
   else if( s_byte == CONSOLE_RETURN_CHAR)
    1938:	0d 30       	cpi	r16, 0x0D	; 13
    193a:	11 05       	cpc	r17, r1
    193c:	71 f1       	breq	.+92     	; 0x199a <rxComplete+0x94>
       *------------------------------------------------------------------*/
      arb_signal( gt_consoleDev.t_rxBlockingSem);


   }/*End else if( c_byte == CONSOLE_BACKSPACE_CHAR)*/
   else if( (s_bufferLevel < (s_bufferSize - 1)) && (s_byte !=
    193e:	21 50       	subi	r18, 0x01	; 1
    1940:	30 40       	sbci	r19, 0x00	; 0
    1942:	c2 17       	cp	r28, r18
    1944:	d3 07       	cpc	r29, r19
    1946:	a0 f4       	brcc	.+40     	; 0x1970 <rxComplete+0x6a>
    1948:	0f 37       	cpi	r16, 0x7F	; 127
    194a:	11 05       	cpc	r17, r1
    194c:	89 f0       	breq	.+34     	; 0x1970 <rxComplete+0x6a>
    194e:	0b 31       	cpi	r16, 0x1B	; 27
    1950:	11 05       	cpc	r17, r1
    1952:	71 f0       	breq	.+28     	; 0x1970 <rxComplete+0x6a>
   {

      /*---------------------------------------------------------------------*
       * Echo back received byte....
       *---------------------------------------------------------------------*/
      hal_uartWriteByte( gt_consoleDev.t_uHandle,
    1954:	80 91 51 24 	lds	r24, 0x2451
    1958:	90 91 52 24 	lds	r25, 0x2452
    195c:	60 2f       	mov	r22, r16
    195e:	0e 94 b4 41 	call	0x8368	; 0x8368 <hal_uartWriteByte>

      /*---------------------------------------------------------------------*
       * Fill RX buffer with received bytes until the buffer is full
       * leaving room for the insertion of the NULL character.
       *---------------------------------------------------------------------*/
      utl_writeByte( gt_consoleDev.t_rxBuffer,
    1962:	80 91 4e 24 	lds	r24, 0x244E
    1966:	90 91 4f 24 	lds	r25, 0x244F
    196a:	60 2f       	mov	r22, r16
    196c:	0e 94 da 86 	call	0x10db4	; 0x10db4 <utl_writeByte>
                     s_byte);

   }

}/*End rxComplete*/
    1970:	df 91       	pop	r29
    1972:	cf 91       	pop	r28
    1974:	1f 91       	pop	r17
    1976:	0f 91       	pop	r16
    1978:	08 95       	ret

   /*------------------------------------------------------------------------*
    * If a backspace has been entered, erase the bytes in the buffer until
    * there is no longer any more data available.
    *------------------------------------------------------------------------*/
   if( (s_byte == CONSOLE_BACKSPACE_CHAR) && (s_bufferLevel > 0))
    197a:	20 97       	sbiw	r28, 0x00	; 0
    197c:	01 f3       	breq	.-64     	; 0x193e <rxComplete+0x38>
   {
      /*---------------------------------------------------------------------*
       * Echo back received byte- in this case the backspace character.
       *---------------------------------------------------------------------*/
      hal_uartWriteByte( gt_consoleDev.t_uHandle,
    197e:	80 91 51 24 	lds	r24, 0x2451
    1982:	90 91 52 24 	lds	r25, 0x2452
    1986:	6f e7       	ldi	r22, 0x7F	; 127
    1988:	0e 94 b4 41 	call	0x8368	; 0x8368 <hal_uartWriteByte>
                         s_byte);

      /*---------------------------------------------------------------------*
       * Remove the last byte in the buffer...
       *---------------------------------------------------------------------*/
      utl_buffEraseTailByte( gt_consoleDev.t_rxBuffer);
    198c:	80 91 4e 24 	lds	r24, 0x244E
    1990:	90 91 4f 24 	lds	r25, 0x244F
    1994:	0e 94 4a 87 	call	0x10e94	; 0x10e94 <utl_buffEraseTailByte>
    1998:	eb cf       	rjmp	.-42     	; 0x1970 <rxComplete+0x6a>
   {

      /*---------------------------------------------------------------------*
       * Echo back received byte
       *---------------------------------------------------------------------*/
      hal_uartWriteByte( gt_consoleDev.t_uHandle,
    199a:	80 91 51 24 	lds	r24, 0x2451
    199e:	90 91 52 24 	lds	r25, 0x2452
    19a2:	6d e0       	ldi	r22, 0x0D	; 13
    19a4:	0e 94 b4 41 	call	0x8368	; 0x8368 <hal_uartWriteByte>
                         s_byte);

      /*------------------------------------------------------------------*
       * Write new line character out uart interface
       *------------------------------------------------------------------*/
      hal_uartWriteByte( gt_consoleDev.t_uHandle,
    19a8:	80 91 51 24 	lds	r24, 0x2451
    19ac:	90 91 52 24 	lds	r25, 0x2452
    19b0:	6a e0       	ldi	r22, 0x0A	; 10
    19b2:	0e 94 b4 41 	call	0x8368	; 0x8368 <hal_uartWriteByte>
                         '\n');

      gt_consoleDev.b_rxActive = false;
    19b6:	10 92 53 24 	sts	0x2453, r1

      /*------------------------------------------------------------------*
       * Disable the receive interrupt until the data has been handled.
       *------------------------------------------------------------------*/
      hal_disableUartRxInt( gt_consoleDev.t_uHandle);
    19ba:	80 91 51 24 	lds	r24, 0x2451
    19be:	90 91 52 24 	lds	r25, 0x2452
    19c2:	0e 94 87 41 	call	0x830e	; 0x830e <hal_disableUartRxInt>

      /*------------------------------------------------------------------*
       * Add a the NULL character to the end of the buffer - this is for
       * data parsing purposes only.
       *------------------------------------------------------------------*/
      utl_writeByte( gt_consoleDev.t_rxBuffer,
    19c6:	80 91 4e 24 	lds	r24, 0x244E
    19ca:	90 91 4f 24 	lds	r25, 0x244F
    19ce:	60 e0       	ldi	r22, 0x00	; 0
    19d0:	0e 94 da 86 	call	0x10db4	; 0x10db4 <utl_writeByte>

      /*------------------------------------------------------------------*
       * Signal any waiting threads that a carriage return has been
       * received.
       *------------------------------------------------------------------*/
      arb_signal( gt_consoleDev.t_rxBlockingSem);
    19d4:	80 91 4c 24 	lds	r24, 0x244C
    19d8:	90 91 4d 24 	lds	r25, 0x244D
    19dc:	0e 94 7c 7a 	call	0xf4f8	; 0xf4f8 <arb_signal>
      utl_writeByte( gt_consoleDev.t_rxBuffer,
                     s_byte);

   }

}/*End rxComplete*/
    19e0:	df 91       	pop	r29
    19e2:	cf 91       	pop	r28
    19e4:	1f 91       	pop	r17
    19e6:	0f 91       	pop	r16
    19e8:	08 95       	ret

000019ea <sdClose>:

/*---------------------------------------------------------------------------*
 * Remove this particular file attached to this device
 *---------------------------------------------------------------------------*/
t_error sdClose( t_DEVHANDLE t_dev)
{
    19ea:	0f 93       	push	r16
    19ec:	1f 93       	push	r17
    19ee:	df 93       	push	r29
    19f0:	cf 93       	push	r28
    19f2:	0f 92       	push	r0
    19f4:	0f 92       	push	r0
    19f6:	cd b7       	in	r28, 0x3d	; 61
    19f8:	de b7       	in	r29, 0x3e	; 62
    19fa:	89 83       	std	Y+1, r24	; 0x01
    19fc:	9a 83       	std	Y+2, r25	; 0x02
   t_devHandle *pt_dev = (t_devHandle *)t_dev;
    19fe:	09 81       	ldd	r16, Y+1	; 0x01
    1a00:	1a 81       	ldd	r17, Y+2	; 0x02
   bool b_status;

   /*------------------------------------------------------------------------*
    * We are going to access global memory or a register, so perform lock
    *------------------------------------------------------------------------*/
   arb_wait( gt_sdDev.t_mutex,
    1a02:	80 91 6b 24 	lds	r24, 0x246B
    1a06:	90 91 6c 24 	lds	r25, 0x246C
    1a0a:	60 e0       	ldi	r22, 0x00	; 0
    1a0c:	0e 94 c3 7d 	call	0xfb86	; 0xfb86 <arb_wait>
             0);

   gt_sdDev.c_numUsers--;
    1a10:	80 91 6f 24 	lds	r24, 0x246F
    1a14:	81 50       	subi	r24, 0x01	; 1
    1a16:	80 93 6f 24 	sts	0x246F, r24

   b_status = sd_close( pt_dev->pv_privateData);
    1a1a:	f8 01       	movw	r30, r16
    1a1c:	82 81       	ldd	r24, Z+2	; 0x02
    1a1e:	93 81       	ldd	r25, Z+3	; 0x03
    1a20:	0e 94 f5 8d 	call	0x11bea	; 0x11bea <sd_close>
   if( b_status == true)
    1a24:	88 23       	and	r24, r24
    1a26:	19 f0       	breq	.+6      	; 0x1a2e <sdClose+0x44>
   {
      pt_dev->pv_privateData = NULL;
    1a28:	f8 01       	movw	r30, r16
    1a2a:	12 82       	std	Z+2, r1	; 0x02
    1a2c:	13 82       	std	Z+3, r1	; 0x03
   }

   /*------------------------------------------------------------------------*
    * Release the lock
    *------------------------------------------------------------------------*/
   arb_signal( gt_sdDev.t_mutex);
    1a2e:	80 91 6b 24 	lds	r24, 0x246B
    1a32:	90 91 6c 24 	lds	r25, 0x246C
    1a36:	0e 94 7c 7a 	call	0xf4f8	; 0xf4f8 <arb_signal>

   return ARB_PASSED;

}/*End sdClose*/
    1a3a:	80 e0       	ldi	r24, 0x00	; 0
    1a3c:	0f 90       	pop	r0
    1a3e:	0f 90       	pop	r0
    1a40:	cf 91       	pop	r28
    1a42:	df 91       	pop	r29
    1a44:	1f 91       	pop	r17
    1a46:	0f 91       	pop	r16
    1a48:	08 95       	ret

00001a4a <sdIoctl>:
}/*End sdOpen*/

int32_t sdIoctl( t_DEVHANDLE t_dev,
                 uint16_t s_command,
                 int32_t  i_arguments)
{
    1a4a:	af 92       	push	r10
    1a4c:	bf 92       	push	r11
    1a4e:	cf 92       	push	r12
    1a50:	df 92       	push	r13
    1a52:	ef 92       	push	r14
    1a54:	ff 92       	push	r15
    1a56:	0f 93       	push	r16
    1a58:	1f 93       	push	r17
    1a5a:	df 93       	push	r29
    1a5c:	cf 93       	push	r28
    1a5e:	0f 92       	push	r0
    1a60:	0f 92       	push	r0
    1a62:	cd b7       	in	r28, 0x3d	; 61
    1a64:	de b7       	in	r29, 0x3e	; 62
    1a66:	89 83       	std	Y+1, r24	; 0x01
    1a68:	9a 83       	std	Y+2, r25	; 0x02
    1a6a:	16 2f       	mov	r17, r22
    1a6c:	69 01       	movw	r12, r18
    1a6e:	7a 01       	movw	r14, r20
   int32_t i_return = (int32_t)ARB_PASSED;
   t_devHandle *pt_dev = (t_devHandle *)t_dev;
    1a70:	a9 80       	ldd	r10, Y+1	; 0x01
    1a72:	ba 80       	ldd	r11, Y+2	; 0x02

   /*------------------------------------------------------------------------*
    * We are going to access global memory or a register, so perform lock
    *------------------------------------------------------------------------*/
   arb_wait( gt_sdDev.t_mutex,
    1a74:	80 91 6b 24 	lds	r24, 0x246B
    1a78:	90 91 6c 24 	lds	r25, 0x246C
    1a7c:	60 e0       	ldi	r22, 0x00	; 0
    1a7e:	0e 94 c3 7d 	call	0xfb86	; 0xfb86 <arb_wait>
             0);

   switch( (t_sdCmd)s_command)
    1a82:	15 30       	cpi	r17, 0x05	; 5
    1a84:	09 f4       	brne	.+2      	; 0x1a88 <sdIoctl+0x3e>
    1a86:	97 c0       	rjmp	.+302    	; 0x1bb6 <sdIoctl+0x16c>
    1a88:	16 30       	cpi	r17, 0x06	; 6
    1a8a:	40 f1       	brcs	.+80     	; 0x1adc <sdIoctl+0x92>
    1a8c:	18 30       	cpi	r17, 0x08	; 8
    1a8e:	09 f4       	brne	.+2      	; 0x1a92 <sdIoctl+0x48>
    1a90:	7d c0       	rjmp	.+250    	; 0x1b8c <sdIoctl+0x142>
    1a92:	19 30       	cpi	r17, 0x09	; 9
    1a94:	88 f5       	brcc	.+98     	; 0x1af8 <sdIoctl+0xae>
    1a96:	16 30       	cpi	r17, 0x06	; 6
    1a98:	09 f4       	brne	.+2      	; 0x1a9c <sdIoctl+0x52>
    1a9a:	68 c0       	rjmp	.+208    	; 0x1b6c <sdIoctl+0x122>
    1a9c:	17 30       	cpi	r17, 0x07	; 7
    1a9e:	09 f4       	brne	.+2      	; 0x1aa2 <sdIoctl+0x58>
    1aa0:	5f c0       	rjmp	.+190    	; 0x1b60 <sdIoctl+0x116>
    1aa2:	2b ef       	ldi	r18, 0xFB	; 251
    1aa4:	e2 2e       	mov	r14, r18
    1aa6:	2f ef       	ldi	r18, 0xFF	; 255
    1aa8:	f2 2e       	mov	r15, r18
    1aaa:	2f ef       	ldi	r18, 0xFF	; 255
    1aac:	02 2f       	mov	r16, r18
    1aae:	2f ef       	ldi	r18, 0xFF	; 255
    1ab0:	12 2f       	mov	r17, r18
   }/*End switch( (t_sdCmd)s_command)*/

   /*------------------------------------------------------------------------*
    * Release the lock
    *------------------------------------------------------------------------*/
   arb_signal( gt_sdDev.t_mutex);
    1ab2:	80 91 6b 24 	lds	r24, 0x246B
    1ab6:	90 91 6c 24 	lds	r25, 0x246C
    1aba:	0e 94 7c 7a 	call	0xf4f8	; 0xf4f8 <arb_signal>

   return i_return;

}/*End sdIoctl*/
    1abe:	b7 01       	movw	r22, r14
    1ac0:	c8 01       	movw	r24, r16
    1ac2:	0f 90       	pop	r0
    1ac4:	0f 90       	pop	r0
    1ac6:	cf 91       	pop	r28
    1ac8:	df 91       	pop	r29
    1aca:	1f 91       	pop	r17
    1acc:	0f 91       	pop	r16
    1ace:	ff 90       	pop	r15
    1ad0:	ef 90       	pop	r14
    1ad2:	df 90       	pop	r13
    1ad4:	cf 90       	pop	r12
    1ad6:	bf 90       	pop	r11
    1ad8:	af 90       	pop	r10
    1ada:	08 95       	ret
    * We are going to access global memory or a register, so perform lock
    *------------------------------------------------------------------------*/
   arb_wait( gt_sdDev.t_mutex,
             0);

   switch( (t_sdCmd)s_command)
    1adc:	12 30       	cpi	r17, 0x02	; 2
    1ade:	09 f4       	brne	.+2      	; 0x1ae2 <sdIoctl+0x98>
    1ae0:	5c c0       	rjmp	.+184    	; 0x1b9a <sdIoctl+0x150>
    1ae2:	13 30       	cpi	r17, 0x03	; 3
    1ae4:	a8 f0       	brcs	.+42     	; 0x1b10 <sdIoctl+0xc6>
    1ae6:	13 30       	cpi	r17, 0x03	; 3
    1ae8:	09 f4       	brne	.+2      	; 0x1aec <sdIoctl+0xa2>
    1aea:	47 c0       	rjmp	.+142    	; 0x1b7a <sdIoctl+0x130>
    1aec:	14 30       	cpi	r17, 0x04	; 4
    1aee:	c9 f6       	brne	.-78     	; 0x1aa2 <sdIoctl+0x58>
         i_return = sd_truncate( pt_dev->pv_privateData, 0);
      break;

      case SD_GET_SIZE:
         i_return = sd_fileSize( pt_dev->pv_privateData);
      break;
    1af0:	ee 24       	eor	r14, r14
    1af2:	ff 24       	eor	r15, r15
    1af4:	87 01       	movw	r16, r14
    1af6:	dd cf       	rjmp	.-70     	; 0x1ab2 <sdIoctl+0x68>
    * We are going to access global memory or a register, so perform lock
    *------------------------------------------------------------------------*/
   arb_wait( gt_sdDev.t_mutex,
             0);

   switch( (t_sdCmd)s_command)
    1af8:	19 30       	cpi	r17, 0x09	; 9
    1afa:	d9 f0       	breq	.+54     	; 0x1b32 <sdIoctl+0xe8>
    1afc:	1a 30       	cpi	r17, 0x0A	; 10
    1afe:	89 f6       	brne	.-94     	; 0x1aa2 <sdIoctl+0x58>
          *------------------------------------------------------------------*/
         i_return = sd_truncate( pt_dev->pv_privateData, 0);
      break;

      case SD_GET_SIZE:
         i_return = sd_fileSize( pt_dev->pv_privateData);
    1b00:	f5 01       	movw	r30, r10
    1b02:	82 81       	ldd	r24, Z+2	; 0x02
    1b04:	93 81       	ldd	r25, Z+3	; 0x03
    1b06:	0e 94 81 8e 	call	0x11d02	; 0x11d02 <sd_fileSize>
    1b0a:	7b 01       	movw	r14, r22
    1b0c:	8c 01       	movw	r16, r24
    1b0e:	d1 cf       	rjmp	.-94     	; 0x1ab2 <sdIoctl+0x68>
    * We are going to access global memory or a register, so perform lock
    *------------------------------------------------------------------------*/
   arb_wait( gt_sdDev.t_mutex,
             0);

   switch( (t_sdCmd)s_command)
    1b10:	11 23       	and	r17, r17
    1b12:	a9 f0       	breq	.+42     	; 0x1b3e <sdIoctl+0xf4>
    1b14:	11 30       	cpi	r17, 0x01	; 1
    1b16:	29 f6       	brne	.-118    	; 0x1aa2 <sdIoctl+0x58>
         if( sd_init( gt_sdDev.t_spiHndl) == false)
            i_return = (int32_t)SD_CARD_INIT_FAILED;
      break;/*End case SD_INIT:*/

      case SD_RMDASHR:
         if( sd_rmDashR( ) == false)
    1b18:	0e 94 41 8e 	call	0x11c82	; 0x11c82 <sd_rmDashR>
    1b1c:	88 23       	and	r24, r24
    1b1e:	41 f7       	brne	.-48     	; 0x1af0 <sdIoctl+0xa6>
         i_return = sd_truncate( pt_dev->pv_privateData, 0);
      break;

      case SD_GET_SIZE:
         i_return = sd_fileSize( pt_dev->pv_privateData);
      break;
    1b20:	8d ef       	ldi	r24, 0xFD	; 253
    1b22:	e8 2e       	mov	r14, r24
    1b24:	8f ef       	ldi	r24, 0xFF	; 255
    1b26:	f8 2e       	mov	r15, r24
    1b28:	8f ef       	ldi	r24, 0xFF	; 255
    1b2a:	08 2f       	mov	r16, r24
    1b2c:	8f ef       	ldi	r24, 0xFF	; 255
    1b2e:	18 2f       	mov	r17, r24
    1b30:	c0 cf       	rjmp	.-128    	; 0x1ab2 <sdIoctl+0x68>
      break;/*End case SD_RM:*/

      case SD_CD:
      {
         char *pc_filename = (char *)((uint16_t)i_arguments);
         if( sd_chdir( pc_filename) == false)
    1b32:	c6 01       	movw	r24, r12
    1b34:	0e 94 15 8e 	call	0x11c2a	; 0x11c2a <sd_chdir>
    1b38:	88 23       	and	r24, r24
    1b3a:	d1 f6       	brne	.-76     	; 0x1af0 <sdIoctl+0xa6>
    1b3c:	f1 cf       	rjmp	.-30     	; 0x1b20 <sdIoctl+0xd6>
             0);

   switch( (t_sdCmd)s_command)
   {
      case SD_INIT:
         if( sd_init( gt_sdDev.t_spiHndl) == false)
    1b3e:	80 91 6d 24 	lds	r24, 0x246D
    1b42:	90 91 6e 24 	lds	r25, 0x246E
    1b46:	0e 94 0e 8d 	call	0x11a1c	; 0x11a1c <sd_init>
    1b4a:	88 23       	and	r24, r24
    1b4c:	89 f6       	brne	.-94     	; 0x1af0 <sdIoctl+0xa6>
    1b4e:	9e ef       	ldi	r25, 0xFE	; 254
    1b50:	e9 2e       	mov	r14, r25
    1b52:	9f ef       	ldi	r25, 0xFF	; 255
    1b54:	f9 2e       	mov	r15, r25
    1b56:	9f ef       	ldi	r25, 0xFF	; 255
    1b58:	09 2f       	mov	r16, r25
    1b5a:	9f ef       	ldi	r25, 0xFF	; 255
    1b5c:	19 2f       	mov	r17, r25
    1b5e:	a9 cf       	rjmp	.-174    	; 0x1ab2 <sdIoctl+0x68>
      break;/*End  case SD_MKDIR:*/

      case SD_RMDIR:
      {
         char *pc_filename = (char *)((uint16_t)i_arguments);
         if( sd_rmdir( pc_filename) == false)
    1b60:	c6 01       	movw	r24, r12
    1b62:	0e 94 35 8e 	call	0x11c6a	; 0x11c6a <sd_rmdir>
    1b66:	88 23       	and	r24, r24
    1b68:	19 f6       	brne	.-122    	; 0x1af0 <sdIoctl+0xa6>
    1b6a:	da cf       	rjmp	.-76     	; 0x1b20 <sdIoctl+0xd6>
      break;/*End case SD_CD:*/

      case SD_MKDIR:
      {
         char *pc_filename = (char *)((uint16_t)i_arguments);
         if( sd_mkdir( pc_filename) == false)
    1b6c:	c6 01       	movw	r24, r12
    1b6e:	0e 94 1c 8e 	call	0x11c38	; 0x11c38 <sd_mkdir>
    1b72:	88 23       	and	r24, r24
    1b74:	09 f0       	breq	.+2      	; 0x1b78 <sdIoctl+0x12e>
    1b76:	bc cf       	rjmp	.-136    	; 0x1af0 <sdIoctl+0xa6>
    1b78:	d3 cf       	rjmp	.-90     	; 0x1b20 <sdIoctl+0xd6>

      case SD_REWIND:
         /*------------------------------------------------------------------*
          * Set the position of the file back to the beginning.
          *------------------------------------------------------------------*/
         sd_rewind( pt_dev->pv_privateData);
    1b7a:	f5 01       	movw	r30, r10
    1b7c:	82 81       	ldd	r24, Z+2	; 0x02
    1b7e:	93 81       	ldd	r25, Z+3	; 0x03
    1b80:	0e 94 87 8e 	call	0x11d0e	; 0x11d0e <sd_rewind>
    1b84:	ee 24       	eor	r14, r14
    1b86:	ff 24       	eor	r15, r15
    1b88:	87 01       	movw	r16, r14
    1b8a:	93 cf       	rjmp	.-218    	; 0x1ab2 <sdIoctl+0x68>
      break;/*End case SD_LS:*/

      case SD_RM:
      {
         char *pc_filename = (char *)((uint16_t)i_arguments);
         if( sd_remove( pc_filename) == false)
    1b8c:	c6 01       	movw	r24, r12
    1b8e:	0e 94 3b 8e 	call	0x11c76	; 0x11c76 <sd_remove>
    1b92:	88 23       	and	r24, r24
    1b94:	09 f0       	breq	.+2      	; 0x1b98 <sdIoctl+0x14e>
    1b96:	ac cf       	rjmp	.-168    	; 0x1af0 <sdIoctl+0xa6>
    1b98:	c3 cf       	rjmp	.-122    	; 0x1b20 <sdIoctl+0xd6>

      case SD_ERASE:
         /*------------------------------------------------------------------*
          * ERASE the contents of the file.
          *------------------------------------------------------------------*/
         i_return = sd_truncate( pt_dev->pv_privateData, 0);
    1b9a:	f5 01       	movw	r30, r10
    1b9c:	82 81       	ldd	r24, Z+2	; 0x02
    1b9e:	93 81       	ldd	r25, Z+3	; 0x03
    1ba0:	40 e0       	ldi	r20, 0x00	; 0
    1ba2:	50 e0       	ldi	r21, 0x00	; 0
    1ba4:	60 e0       	ldi	r22, 0x00	; 0
    1ba6:	70 e0       	ldi	r23, 0x00	; 0
    1ba8:	0e 94 8e 8e 	call	0x11d1c	; 0x11d1c <sd_truncate>
    1bac:	e8 2e       	mov	r14, r24
    1bae:	ff 24       	eor	r15, r15
    1bb0:	00 e0       	ldi	r16, 0x00	; 0
    1bb2:	10 e0       	ldi	r17, 0x00	; 0
    1bb4:	7e cf       	rjmp	.-260    	; 0x1ab2 <sdIoctl+0x68>
      case SD_CARD_INFO:

      break;/*End case SD_CARD_INFO:*/

      case SD_LS:
         sd_ls();
    1bb6:	0e 94 0f 8e 	call	0x11c1e	; 0x11c1e <sd_ls>
    1bba:	ee 24       	eor	r14, r14
    1bbc:	ff 24       	eor	r15, r15
    1bbe:	87 01       	movw	r16, r14
    1bc0:	78 cf       	rjmp	.-272    	; 0x1ab2 <sdIoctl+0x68>

00001bc2 <sdWrite>:
}/*End sdRead*/

static int16_t sdWrite( t_DEVHANDLE t_dev,
                        int8_t *pc_buff,
                        uint16_t s_size)
{
    1bc2:	af 92       	push	r10
    1bc4:	bf 92       	push	r11
    1bc6:	cf 92       	push	r12
    1bc8:	df 92       	push	r13
    1bca:	ef 92       	push	r14
    1bcc:	ff 92       	push	r15
    1bce:	0f 93       	push	r16
    1bd0:	1f 93       	push	r17
    1bd2:	df 93       	push	r29
    1bd4:	cf 93       	push	r28
    1bd6:	0f 92       	push	r0
    1bd8:	0f 92       	push	r0
    1bda:	cd b7       	in	r28, 0x3d	; 61
    1bdc:	de b7       	in	r29, 0x3e	; 62
    1bde:	89 83       	std	Y+1, r24	; 0x01
    1be0:	9a 83       	std	Y+2, r25	; 0x02
    1be2:	b6 2e       	mov	r11, r22
    1be4:	a7 2e       	mov	r10, r23
    1be6:	6a 01       	movw	r12, r20
   int16_t s_bufferLevel = 0;
   t_devHandle *pt_dev = (t_devHandle *)t_dev;
    1be8:	e9 80       	ldd	r14, Y+1	; 0x01
    1bea:	fa 80       	ldd	r15, Y+2	; 0x02
   uint8_t c_retries = 0;

   /*------------------------------------------------------------------------*
    * We are going to access global memory or a register, so perform lock
    *------------------------------------------------------------------------*/
   arb_wait( gt_sdDev.t_mutex,
    1bec:	80 91 6b 24 	lds	r24, 0x246B
    1bf0:	90 91 6c 24 	lds	r25, 0x246C
    1bf4:	60 e0       	ldi	r22, 0x00	; 0
    1bf6:	0e 94 c3 7d 	call	0xfb86	; 0xfb86 <arb_wait>
             0);

   if( pt_dev->pv_privateData != NULL)
    1bfa:	f7 01       	movw	r30, r14
    1bfc:	62 81       	ldd	r22, Z+2	; 0x02
    1bfe:	73 81       	ldd	r23, Z+3	; 0x03
    1c00:	61 15       	cp	r22, r1
    1c02:	71 05       	cpc	r23, r1
    1c04:	09 f4       	brne	.+2      	; 0x1c08 <sdWrite+0x46>
    1c06:	7b c0       	rjmp	.+246    	; 0x1cfe <sdWrite+0x13c>
   {
      do
      {

         s_bufferLevel = (int16_t)sd_write( gt_sdDev.t_spiHndl,
    1c08:	80 91 6d 24 	lds	r24, 0x246D
    1c0c:	90 91 6e 24 	lds	r25, 0x246E
    1c10:	4b 2d       	mov	r20, r11
    1c12:	5a 2d       	mov	r21, r10
    1c14:	96 01       	movw	r18, r12
    1c16:	0e 94 46 8e 	call	0x11c8c	; 0x11c8c <sd_write>
    1c1a:	8b 01       	movw	r16, r22
                                            pt_dev->pv_privateData,
                                            (uint8_t *)pc_buff,
                                            s_size);

         if( s_bufferLevel < 0)
    1c1c:	77 fd       	sbrc	r23, 7
    1c1e:	14 c0       	rjmp	.+40     	; 0x1c48 <sdWrite+0x86>
   }/*End if( pt_dev->pv_privateData != NULL)*/

   /*------------------------------------------------------------------------*
    * Release the lock
    *------------------------------------------------------------------------*/
   arb_signal( gt_sdDev.t_mutex);
    1c20:	80 91 6b 24 	lds	r24, 0x246B
    1c24:	90 91 6c 24 	lds	r25, 0x246C
    1c28:	0e 94 7c 7a 	call	0xf4f8	; 0xf4f8 <arb_signal>

   return s_bufferLevel;

}/*End sdWrite*/
    1c2c:	c8 01       	movw	r24, r16
    1c2e:	0f 90       	pop	r0
    1c30:	0f 90       	pop	r0
    1c32:	cf 91       	pop	r28
    1c34:	df 91       	pop	r29
    1c36:	1f 91       	pop	r17
    1c38:	0f 91       	pop	r16
    1c3a:	ff 90       	pop	r15
    1c3c:	ef 90       	pop	r14
    1c3e:	df 90       	pop	r13
    1c40:	cf 90       	pop	r12
    1c42:	bf 90       	pop	r11
    1c44:	af 90       	pop	r10
    1c46:	08 95       	ret
                                            (uint8_t *)pc_buff,
                                            s_size);

         if( s_bufferLevel < 0)
         {
            sd_init( gt_sdDev.t_spiHndl);
    1c48:	80 91 6d 24 	lds	r24, 0x246D
    1c4c:	90 91 6e 24 	lds	r25, 0x246E
    1c50:	0e 94 0e 8d 	call	0x11a1c	; 0x11a1c <sd_init>
   if( pt_dev->pv_privateData != NULL)
   {
      do
      {

         s_bufferLevel = (int16_t)sd_write( gt_sdDev.t_spiHndl,
    1c54:	80 91 6d 24 	lds	r24, 0x246D
    1c58:	90 91 6e 24 	lds	r25, 0x246E
    1c5c:	f7 01       	movw	r30, r14
    1c5e:	62 81       	ldd	r22, Z+2	; 0x02
    1c60:	73 81       	ldd	r23, Z+3	; 0x03
    1c62:	4b 2d       	mov	r20, r11
    1c64:	5a 2d       	mov	r21, r10
    1c66:	96 01       	movw	r18, r12
    1c68:	0e 94 46 8e 	call	0x11c8c	; 0x11c8c <sd_write>
    1c6c:	8b 01       	movw	r16, r22
                                            pt_dev->pv_privateData,
                                            (uint8_t *)pc_buff,
                                            s_size);

         if( s_bufferLevel < 0)
    1c6e:	77 ff       	sbrs	r23, 7
    1c70:	d7 cf       	rjmp	.-82     	; 0x1c20 <sdWrite+0x5e>
         {
            sd_init( gt_sdDev.t_spiHndl);
    1c72:	80 91 6d 24 	lds	r24, 0x246D
    1c76:	90 91 6e 24 	lds	r25, 0x246E
    1c7a:	0e 94 0e 8d 	call	0x11a1c	; 0x11a1c <sd_init>
   if( pt_dev->pv_privateData != NULL)
   {
      do
      {

         s_bufferLevel = (int16_t)sd_write( gt_sdDev.t_spiHndl,
    1c7e:	80 91 6d 24 	lds	r24, 0x246D
    1c82:	90 91 6e 24 	lds	r25, 0x246E
    1c86:	f7 01       	movw	r30, r14
    1c88:	62 81       	ldd	r22, Z+2	; 0x02
    1c8a:	73 81       	ldd	r23, Z+3	; 0x03
    1c8c:	4b 2d       	mov	r20, r11
    1c8e:	5a 2d       	mov	r21, r10
    1c90:	96 01       	movw	r18, r12
    1c92:	0e 94 46 8e 	call	0x11c8c	; 0x11c8c <sd_write>
    1c96:	8b 01       	movw	r16, r22
                                            pt_dev->pv_privateData,
                                            (uint8_t *)pc_buff,
                                            s_size);

         if( s_bufferLevel < 0)
    1c98:	77 ff       	sbrs	r23, 7
    1c9a:	c2 cf       	rjmp	.-124    	; 0x1c20 <sdWrite+0x5e>
         {
            sd_init( gt_sdDev.t_spiHndl);
    1c9c:	80 91 6d 24 	lds	r24, 0x246D
    1ca0:	90 91 6e 24 	lds	r25, 0x246E
    1ca4:	0e 94 0e 8d 	call	0x11a1c	; 0x11a1c <sd_init>
   if( pt_dev->pv_privateData != NULL)
   {
      do
      {

         s_bufferLevel = (int16_t)sd_write( gt_sdDev.t_spiHndl,
    1ca8:	80 91 6d 24 	lds	r24, 0x246D
    1cac:	90 91 6e 24 	lds	r25, 0x246E
    1cb0:	f7 01       	movw	r30, r14
    1cb2:	62 81       	ldd	r22, Z+2	; 0x02
    1cb4:	73 81       	ldd	r23, Z+3	; 0x03
    1cb6:	4b 2d       	mov	r20, r11
    1cb8:	5a 2d       	mov	r21, r10
    1cba:	96 01       	movw	r18, r12
    1cbc:	0e 94 46 8e 	call	0x11c8c	; 0x11c8c <sd_write>
    1cc0:	8b 01       	movw	r16, r22
                                            pt_dev->pv_privateData,
                                            (uint8_t *)pc_buff,
                                            s_size);

         if( s_bufferLevel < 0)
    1cc2:	77 ff       	sbrs	r23, 7
    1cc4:	ad cf       	rjmp	.-166    	; 0x1c20 <sdWrite+0x5e>
         {
            sd_init( gt_sdDev.t_spiHndl);
    1cc6:	80 91 6d 24 	lds	r24, 0x246D
    1cca:	90 91 6e 24 	lds	r25, 0x246E
    1cce:	0e 94 0e 8d 	call	0x11a1c	; 0x11a1c <sd_init>
   if( pt_dev->pv_privateData != NULL)
   {
      do
      {

         s_bufferLevel = (int16_t)sd_write( gt_sdDev.t_spiHndl,
    1cd2:	80 91 6d 24 	lds	r24, 0x246D
    1cd6:	90 91 6e 24 	lds	r25, 0x246E
    1cda:	f7 01       	movw	r30, r14
    1cdc:	62 81       	ldd	r22, Z+2	; 0x02
    1cde:	73 81       	ldd	r23, Z+3	; 0x03
    1ce0:	4b 2d       	mov	r20, r11
    1ce2:	5a 2d       	mov	r21, r10
    1ce4:	96 01       	movw	r18, r12
    1ce6:	0e 94 46 8e 	call	0x11c8c	; 0x11c8c <sd_write>
    1cea:	8b 01       	movw	r16, r22
                                            pt_dev->pv_privateData,
                                            (uint8_t *)pc_buff,
                                            s_size);

         if( s_bufferLevel < 0)
    1cec:	77 ff       	sbrs	r23, 7
    1cee:	98 cf       	rjmp	.-208    	; 0x1c20 <sdWrite+0x5e>
         {
            sd_init( gt_sdDev.t_spiHndl);
    1cf0:	80 91 6d 24 	lds	r24, 0x246D
    1cf4:	90 91 6e 24 	lds	r25, 0x246E
    1cf8:	0e 94 0e 8d 	call	0x11a1c	; 0x11a1c <sd_init>
    1cfc:	91 cf       	rjmp	.-222    	; 0x1c20 <sdWrite+0x5e>
    * We are going to access global memory or a register, so perform lock
    *------------------------------------------------------------------------*/
   arb_wait( gt_sdDev.t_mutex,
             0);

   if( pt_dev->pv_privateData != NULL)
    1cfe:	00 e0       	ldi	r16, 0x00	; 0
    1d00:	10 e0       	ldi	r17, 0x00	; 0
    1d02:	8e cf       	rjmp	.-228    	; 0x1c20 <sdWrite+0x5e>

00001d04 <sdRead>:
 * Private Function Definitions
 *---------------------------------------------------------------------------*/
static int16_t sdRead( t_DEVHANDLE t_dev,
                       int8_t *pc_buff,
                       uint16_t s_size)
{
    1d04:	af 92       	push	r10
    1d06:	bf 92       	push	r11
    1d08:	cf 92       	push	r12
    1d0a:	df 92       	push	r13
    1d0c:	ef 92       	push	r14
    1d0e:	ff 92       	push	r15
    1d10:	0f 93       	push	r16
    1d12:	1f 93       	push	r17
    1d14:	df 93       	push	r29
    1d16:	cf 93       	push	r28
    1d18:	0f 92       	push	r0
    1d1a:	0f 92       	push	r0
    1d1c:	cd b7       	in	r28, 0x3d	; 61
    1d1e:	de b7       	in	r29, 0x3e	; 62
    1d20:	89 83       	std	Y+1, r24	; 0x01
    1d22:	9a 83       	std	Y+2, r25	; 0x02
    1d24:	b6 2e       	mov	r11, r22
    1d26:	a7 2e       	mov	r10, r23
    1d28:	6a 01       	movw	r12, r20
   int16_t s_bufferLevel = 0;
   t_devHandle *pt_dev = (t_devHandle *)t_dev;
    1d2a:	e9 80       	ldd	r14, Y+1	; 0x01
    1d2c:	fa 80       	ldd	r15, Y+2	; 0x02
   uint8_t c_retries = 0;

   /*------------------------------------------------------------------------*
    * We are going to access global memory or a register, so perform lock
    *------------------------------------------------------------------------*/
   arb_wait( gt_sdDev.t_mutex,
    1d2e:	80 91 6b 24 	lds	r24, 0x246B
    1d32:	90 91 6c 24 	lds	r25, 0x246C
    1d36:	60 e0       	ldi	r22, 0x00	; 0
    1d38:	0e 94 c3 7d 	call	0xfb86	; 0xfb86 <arb_wait>
             0);

   if( pt_dev->pv_privateData != NULL)
    1d3c:	f7 01       	movw	r30, r14
    1d3e:	62 81       	ldd	r22, Z+2	; 0x02
    1d40:	73 81       	ldd	r23, Z+3	; 0x03
    1d42:	61 15       	cp	r22, r1
    1d44:	71 05       	cpc	r23, r1
    1d46:	09 f4       	brne	.+2      	; 0x1d4a <sdRead+0x46>
    1d48:	7b c0       	rjmp	.+246    	; 0x1e40 <sdRead+0x13c>
   {

      do
      {

         s_bufferLevel = (int16_t)sd_read( gt_sdDev.t_spiHndl,
    1d4a:	80 91 6d 24 	lds	r24, 0x246D
    1d4e:	90 91 6e 24 	lds	r25, 0x246E
    1d52:	4b 2d       	mov	r20, r11
    1d54:	5a 2d       	mov	r21, r10
    1d56:	96 01       	movw	r18, r12
    1d58:	0e 94 63 8e 	call	0x11cc6	; 0x11cc6 <sd_read>
    1d5c:	8b 01       	movw	r16, r22
                                           pt_dev->pv_privateData,
                                           (uint8_t *)pc_buff,
                                           s_size);

         if( s_bufferLevel < 0)
    1d5e:	77 fd       	sbrc	r23, 7
    1d60:	14 c0       	rjmp	.+40     	; 0x1d8a <sdRead+0x86>
   }/*End if( pt_dev->pv_privateData != NULL)*/

   /*------------------------------------------------------------------------*
    * Release the lock
    *------------------------------------------------------------------------*/
   arb_signal( gt_sdDev.t_mutex);
    1d62:	80 91 6b 24 	lds	r24, 0x246B
    1d66:	90 91 6c 24 	lds	r25, 0x246C
    1d6a:	0e 94 7c 7a 	call	0xf4f8	; 0xf4f8 <arb_signal>

   return s_bufferLevel;

}/*End sdRead*/
    1d6e:	c8 01       	movw	r24, r16
    1d70:	0f 90       	pop	r0
    1d72:	0f 90       	pop	r0
    1d74:	cf 91       	pop	r28
    1d76:	df 91       	pop	r29
    1d78:	1f 91       	pop	r17
    1d7a:	0f 91       	pop	r16
    1d7c:	ff 90       	pop	r15
    1d7e:	ef 90       	pop	r14
    1d80:	df 90       	pop	r13
    1d82:	cf 90       	pop	r12
    1d84:	bf 90       	pop	r11
    1d86:	af 90       	pop	r10
    1d88:	08 95       	ret
                                           (uint8_t *)pc_buff,
                                           s_size);

         if( s_bufferLevel < 0)
         {
            sd_init( gt_sdDev.t_spiHndl);
    1d8a:	80 91 6d 24 	lds	r24, 0x246D
    1d8e:	90 91 6e 24 	lds	r25, 0x246E
    1d92:	0e 94 0e 8d 	call	0x11a1c	; 0x11a1c <sd_init>
   {

      do
      {

         s_bufferLevel = (int16_t)sd_read( gt_sdDev.t_spiHndl,
    1d96:	80 91 6d 24 	lds	r24, 0x246D
    1d9a:	90 91 6e 24 	lds	r25, 0x246E
    1d9e:	f7 01       	movw	r30, r14
    1da0:	62 81       	ldd	r22, Z+2	; 0x02
    1da2:	73 81       	ldd	r23, Z+3	; 0x03
    1da4:	4b 2d       	mov	r20, r11
    1da6:	5a 2d       	mov	r21, r10
    1da8:	96 01       	movw	r18, r12
    1daa:	0e 94 63 8e 	call	0x11cc6	; 0x11cc6 <sd_read>
    1dae:	8b 01       	movw	r16, r22
                                           pt_dev->pv_privateData,
                                           (uint8_t *)pc_buff,
                                           s_size);

         if( s_bufferLevel < 0)
    1db0:	77 ff       	sbrs	r23, 7
    1db2:	d7 cf       	rjmp	.-82     	; 0x1d62 <sdRead+0x5e>
         {
            sd_init( gt_sdDev.t_spiHndl);
    1db4:	80 91 6d 24 	lds	r24, 0x246D
    1db8:	90 91 6e 24 	lds	r25, 0x246E
    1dbc:	0e 94 0e 8d 	call	0x11a1c	; 0x11a1c <sd_init>
   {

      do
      {

         s_bufferLevel = (int16_t)sd_read( gt_sdDev.t_spiHndl,
    1dc0:	80 91 6d 24 	lds	r24, 0x246D
    1dc4:	90 91 6e 24 	lds	r25, 0x246E
    1dc8:	f7 01       	movw	r30, r14
    1dca:	62 81       	ldd	r22, Z+2	; 0x02
    1dcc:	73 81       	ldd	r23, Z+3	; 0x03
    1dce:	4b 2d       	mov	r20, r11
    1dd0:	5a 2d       	mov	r21, r10
    1dd2:	96 01       	movw	r18, r12
    1dd4:	0e 94 63 8e 	call	0x11cc6	; 0x11cc6 <sd_read>
    1dd8:	8b 01       	movw	r16, r22
                                           pt_dev->pv_privateData,
                                           (uint8_t *)pc_buff,
                                           s_size);

         if( s_bufferLevel < 0)
    1dda:	77 ff       	sbrs	r23, 7
    1ddc:	c2 cf       	rjmp	.-124    	; 0x1d62 <sdRead+0x5e>
         {
            sd_init( gt_sdDev.t_spiHndl);
    1dde:	80 91 6d 24 	lds	r24, 0x246D
    1de2:	90 91 6e 24 	lds	r25, 0x246E
    1de6:	0e 94 0e 8d 	call	0x11a1c	; 0x11a1c <sd_init>
   {

      do
      {

         s_bufferLevel = (int16_t)sd_read( gt_sdDev.t_spiHndl,
    1dea:	80 91 6d 24 	lds	r24, 0x246D
    1dee:	90 91 6e 24 	lds	r25, 0x246E
    1df2:	f7 01       	movw	r30, r14
    1df4:	62 81       	ldd	r22, Z+2	; 0x02
    1df6:	73 81       	ldd	r23, Z+3	; 0x03
    1df8:	4b 2d       	mov	r20, r11
    1dfa:	5a 2d       	mov	r21, r10
    1dfc:	96 01       	movw	r18, r12
    1dfe:	0e 94 63 8e 	call	0x11cc6	; 0x11cc6 <sd_read>
    1e02:	8b 01       	movw	r16, r22
                                           pt_dev->pv_privateData,
                                           (uint8_t *)pc_buff,
                                           s_size);

         if( s_bufferLevel < 0)
    1e04:	77 ff       	sbrs	r23, 7
    1e06:	ad cf       	rjmp	.-166    	; 0x1d62 <sdRead+0x5e>
         {
            sd_init( gt_sdDev.t_spiHndl);
    1e08:	80 91 6d 24 	lds	r24, 0x246D
    1e0c:	90 91 6e 24 	lds	r25, 0x246E
    1e10:	0e 94 0e 8d 	call	0x11a1c	; 0x11a1c <sd_init>
   {

      do
      {

         s_bufferLevel = (int16_t)sd_read( gt_sdDev.t_spiHndl,
    1e14:	80 91 6d 24 	lds	r24, 0x246D
    1e18:	90 91 6e 24 	lds	r25, 0x246E
    1e1c:	f7 01       	movw	r30, r14
    1e1e:	62 81       	ldd	r22, Z+2	; 0x02
    1e20:	73 81       	ldd	r23, Z+3	; 0x03
    1e22:	4b 2d       	mov	r20, r11
    1e24:	5a 2d       	mov	r21, r10
    1e26:	96 01       	movw	r18, r12
    1e28:	0e 94 63 8e 	call	0x11cc6	; 0x11cc6 <sd_read>
    1e2c:	8b 01       	movw	r16, r22
                                           pt_dev->pv_privateData,
                                           (uint8_t *)pc_buff,
                                           s_size);

         if( s_bufferLevel < 0)
    1e2e:	77 ff       	sbrs	r23, 7
    1e30:	98 cf       	rjmp	.-208    	; 0x1d62 <sdRead+0x5e>
         {
            sd_init( gt_sdDev.t_spiHndl);
    1e32:	80 91 6d 24 	lds	r24, 0x246D
    1e36:	90 91 6e 24 	lds	r25, 0x246E
    1e3a:	0e 94 0e 8d 	call	0x11a1c	; 0x11a1c <sd_init>
    1e3e:	91 cf       	rjmp	.-222    	; 0x1d62 <sdRead+0x5e>
    * We are going to access global memory or a register, so perform lock
    *------------------------------------------------------------------------*/
   arb_wait( gt_sdDev.t_mutex,
             0);

   if( pt_dev->pv_privateData != NULL)
    1e40:	00 e0       	ldi	r16, 0x00	; 0
    1e42:	10 e0       	ldi	r17, 0x00	; 0
    1e44:	8e cf       	rjmp	.-228    	; 0x1d62 <sdRead+0x5e>

00001e46 <sdOpen>:
   return s_bufferLevel;

}/*End sdWrite*/

t_error sdOpen( t_DEVHANDLE t_dev)
{
    1e46:	0f 93       	push	r16
    1e48:	1f 93       	push	r17
    1e4a:	df 93       	push	r29
    1e4c:	cf 93       	push	r28
    1e4e:	0f 92       	push	r0
    1e50:	0f 92       	push	r0
    1e52:	cd b7       	in	r28, 0x3d	; 61
    1e54:	de b7       	in	r29, 0x3e	; 62
    1e56:	89 83       	std	Y+1, r24	; 0x01
    1e58:	9a 83       	std	Y+2, r25	; 0x02
   t_error t_err = ARB_PASSED;

   /*------------------------------------------------------------------------*
    * We are going to access global memory or a register, so perform lock
    *------------------------------------------------------------------------*/
   arb_wait( gt_sdDev.t_mutex,
    1e5a:	80 91 6b 24 	lds	r24, 0x246B
    1e5e:	90 91 6c 24 	lds	r25, 0x246C
    1e62:	60 e0       	ldi	r22, 0x00	; 0
    1e64:	0e 94 c3 7d 	call	0xfb86	; 0xfb86 <arb_wait>
             0);

   pt_dev = (t_devHandle *)t_dev;
    1e68:	89 81       	ldd	r24, Y+1	; 0x01
    1e6a:	9a 81       	ldd	r25, Y+2	; 0x02
    1e6c:	80 93 68 24 	sts	0x2468, r24
    1e70:	90 93 69 24 	sts	0x2469, r25

   if( gt_sdDev.c_numUsers == 0)
    1e74:	80 91 6f 24 	lds	r24, 0x246F
    1e78:	88 23       	and	r24, r24
    1e7a:	09 f4       	brne	.+2      	; 0x1e7e <sdOpen+0x38>
    1e7c:	40 c0       	rjmp	.+128    	; 0x1efe <sdOpen+0xb8>
         goto failed;
      }

   }/*End if( gt_sdDev.c_numUsers == 1)*/

   pc_filename = (char *)pt_dev->pv_privateData;
    1e7e:	00 91 68 24 	lds	r16, 0x2468
    1e82:	10 91 69 24 	lds	r17, 0x2469
    1e86:	f8 01       	movw	r30, r16
    1e88:	22 81       	ldd	r18, Z+2	; 0x02
    1e8a:	33 81       	ldd	r19, Z+3	; 0x03
    1e8c:	20 93 66 24 	sts	0x2466, r18
    1e90:	30 93 67 24 	sts	0x2467, r19

   if( pc_filename != NULL)
    1e94:	21 15       	cp	r18, r1
    1e96:	31 05       	cpc	r19, r1
    1e98:	e9 f0       	breq	.+58     	; 0x1ed4 <sdOpen+0x8e>
   {
      uint8_t c_flags = 0;

      if( pt_dev->c_flags & ARB_O_READ)
    1e9a:	84 81       	ldd	r24, Z+4	; 0x04
    1e9c:	68 2f       	mov	r22, r24
    1e9e:	61 70       	andi	r22, 0x01	; 1
         c_flags |= SD_FILE_READ;
      if( pt_dev->c_flags & ARB_O_WRITE)
    1ea0:	81 fd       	sbrc	r24, 1
         c_flags |= SD_FILE_WRITE;
    1ea2:	62 60       	ori	r22, 0x02	; 2
      if( pt_dev->c_flags & ARB_O_APPEND)
    1ea4:	82 fd       	sbrc	r24, 2
         c_flags |= SD_FILE_APPEND;
    1ea6:	64 60       	ori	r22, 0x04	; 4
      if( pt_dev->c_flags & ARB_O_SYNC)
    1ea8:	83 fd       	sbrc	r24, 3
         c_flags |= SD_FILE_SYNC;
    1eaa:	68 60       	ori	r22, 0x08	; 8
      if( pt_dev->c_flags & ARB_O_TRUNC)
    1eac:	84 fd       	sbrc	r24, 4
         c_flags |= SD_FILE_TRUNC;
    1eae:	60 61       	ori	r22, 0x10	; 16
      if( pt_dev->c_flags & ARB_O_AT_END)
    1eb0:	85 fd       	sbrc	r24, 5
         c_flags |= SD_FILE_AT_END;
    1eb2:	60 62       	ori	r22, 0x20	; 32
      if( pt_dev->c_flags & ARB_O_CREAT)
    1eb4:	86 fd       	sbrc	r24, 6
    1eb6:	21 c0       	rjmp	.+66     	; 0x1efa <sdOpen+0xb4>
         c_flags |= SD_FILE_CREAT;

      pt_dev->pv_privateData = sd_open( pc_filename, c_flags);
    1eb8:	c9 01       	movw	r24, r18
    1eba:	0e 94 21 8d 	call	0x11a42	; 0x11a42 <sd_open>
    1ebe:	f8 01       	movw	r30, r16
    1ec0:	82 83       	std	Z+2, r24	; 0x02
    1ec2:	93 83       	std	Z+3, r25	; 0x03
      if( pt_dev->pv_privateData == NULL)
    1ec4:	e0 91 68 24 	lds	r30, 0x2468
    1ec8:	f0 91 69 24 	lds	r31, 0x2469
    1ecc:	82 81       	ldd	r24, Z+2	; 0x02
    1ece:	93 81       	ldd	r25, Z+3	; 0x03
    1ed0:	89 2b       	or	r24, r25
    1ed2:	f1 f0       	breq	.+60     	; 0x1f10 <sdOpen+0xca>
         t_err = ARB_OPEN_ERROR;
         goto failed;
      }
   }

   gt_sdDev.c_numUsers++;
    1ed4:	80 91 6f 24 	lds	r24, 0x246F
    1ed8:	8f 5f       	subi	r24, 0xFF	; 255
    1eda:	80 93 6f 24 	sts	0x246F, r24

   /*------------------------------------------------------------------------*
    * Release the lock
    *------------------------------------------------------------------------*/
   arb_signal( gt_sdDev.t_mutex);
    1ede:	80 91 6b 24 	lds	r24, 0x246B
    1ee2:	90 91 6c 24 	lds	r25, 0x246C
    1ee6:	0e 94 7c 7a 	call	0xf4f8	; 0xf4f8 <arb_signal>
    1eea:	80 e0       	ldi	r24, 0x00	; 0
    *------------------------------------------------------------------------*/
   arb_signal( gt_sdDev.t_mutex);

   return t_err;

}/*End sdOpen*/
    1eec:	0f 90       	pop	r0
    1eee:	0f 90       	pop	r0
    1ef0:	cf 91       	pop	r28
    1ef2:	df 91       	pop	r29
    1ef4:	1f 91       	pop	r17
    1ef6:	0f 91       	pop	r16
    1ef8:	08 95       	ret
      if( pt_dev->c_flags & ARB_O_TRUNC)
         c_flags |= SD_FILE_TRUNC;
      if( pt_dev->c_flags & ARB_O_AT_END)
         c_flags |= SD_FILE_AT_END;
      if( pt_dev->c_flags & ARB_O_CREAT)
         c_flags |= SD_FILE_CREAT;
    1efa:	60 64       	ori	r22, 0x40	; 64
    1efc:	dd cf       	rjmp	.-70     	; 0x1eb8 <sdOpen+0x72>

   pt_dev = (t_devHandle *)t_dev;

   if( gt_sdDev.c_numUsers == 0)
   {
      if( sd_begin( gt_sdDev.t_spiHndl) == false)
    1efe:	80 91 6d 24 	lds	r24, 0x246D
    1f02:	90 91 6e 24 	lds	r25, 0x246E
    1f06:	0e 94 fb 8c 	call	0x119f6	; 0x119f6 <sd_begin>
    1f0a:	88 23       	and	r24, r24
    1f0c:	09 f0       	breq	.+2      	; 0x1f10 <sdOpen+0xca>
    1f0e:	b7 cf       	rjmp	.-146    	; 0x1e7e <sdOpen+0x38>
failed:

   /*------------------------------------------------------------------------*
    * Release the lock
    *------------------------------------------------------------------------*/
   arb_signal( gt_sdDev.t_mutex);
    1f10:	80 91 6b 24 	lds	r24, 0x246B
    1f14:	90 91 6c 24 	lds	r25, 0x246C
    1f18:	0e 94 7c 7a 	call	0xf4f8	; 0xf4f8 <arb_signal>
    1f1c:	80 ef       	ldi	r24, 0xF0	; 240

   return t_err;

}/*End sdOpen*/
    1f1e:	0f 90       	pop	r0
    1f20:	0f 90       	pop	r0
    1f22:	cf 91       	pop	r28
    1f24:	df 91       	pop	r29
    1f26:	1f 91       	pop	r17
    1f28:	0f 91       	pop	r16
    1f2a:	08 95       	ret

00001f2c <drv_sdExit>:
 * Remove the device from the system
 *---------------------------------------------------------------------------*/
void drv_sdExit( void)
{

   if( gt_sdDev.t_mutex != 0) /*If created... destroy*/
    1f2c:	80 91 6b 24 	lds	r24, 0x246B
    1f30:	90 91 6c 24 	lds	r25, 0x246C
    1f34:	89 2b       	or	r24, r25
    1f36:	09 f4       	brne	.+2      	; 0x1f3a <drv_sdExit+0xe>
    1f38:	08 95       	ret
   {
      arb_semaphoreDestroy( gt_sdDev.t_mutex);
    1f3a:	80 91 6b 24 	lds	r24, 0x246B
    1f3e:	90 91 6c 24 	lds	r25, 0x246C
    1f42:	0e 94 ea 77 	call	0xefd4	; 0xefd4 <arb_semaphoreDestroy>
      arb_destroyDevice( "sdDevice0");
    1f46:	84 e4       	ldi	r24, 0x44	; 68
    1f48:	90 e2       	ldi	r25, 0x20	; 32
    1f4a:	0e 94 0b 6e 	call	0xdc16	; 0xdc16 <arb_destroyDevice>
      hal_releaseSpiChannel( gt_sdDev.t_spiHndl);
    1f4e:	80 91 6d 24 	lds	r24, 0x246D
    1f52:	90 91 6e 24 	lds	r25, 0x246E
    1f56:	0e 94 10 39 	call	0x7220	; 0x7220 <hal_releaseSpiChannel>
    1f5a:	08 95       	ret

00001f5c <drv_sdInit>:
   return ARB_PASSED;

}/*End sdClose*/

t_error drv_sdInit( t_sdSetup t_setup)
{
    1f5c:	df 92       	push	r13
    1f5e:	ef 92       	push	r14
    1f60:	ff 92       	push	r15
    1f62:	0f 93       	push	r16
    1f64:	1f 93       	push	r17
    1f66:	df 93       	push	r29
    1f68:	cf 93       	push	r28
    1f6a:	cd b7       	in	r28, 0x3d	; 61
    1f6c:	de b7       	in	r29, 0x3e	; 62
    1f6e:	28 97       	sbiw	r28, 0x08	; 8
    1f70:	cd bf       	out	0x3d, r28	; 61
    1f72:	de bf       	out	0x3e, r29	; 62
    1f74:	f6 2e       	mov	r15, r22
    1f76:	e7 2e       	mov	r14, r23
    1f78:	d8 2e       	mov	r13, r24
    1f7a:	79 2f       	mov	r23, r25
   t_error t_err = ARB_PASSED;
   t_spiConfig t_sConf;
   static t_spiError t_sErr;

   memset( (void *)&gt_sdDev, 0, sizeof(t_sdDev));
    1f7c:	eb e6       	ldi	r30, 0x6B	; 107
    1f7e:	f4 e2       	ldi	r31, 0x24	; 36
    1f80:	85 e0       	ldi	r24, 0x05	; 5
    1f82:	df 01       	movw	r26, r30
    1f84:	1d 92       	st	X+, r1
    1f86:	8a 95       	dec	r24
    1f88:	e9 f7       	brne	.-6      	; 0x1f84 <drv_sdInit+0x28>

   /*------------------------------------------------------------------------*
    * Make sure the kernel is aware that a new device has been loaded.
    *------------------------------------------------------------------------*/
   t_err = arb_registerDevice( "sdDevice0",
    1f8a:	84 e4       	ldi	r24, 0x44	; 68
    1f8c:	90 e2       	ldi	r25, 0x20	; 32
    1f8e:	60 e0       	ldi	r22, 0x00	; 0
    1f90:	4e e4       	ldi	r20, 0x4E	; 78
    1f92:	50 e2       	ldi	r21, 0x20	; 32
    1f94:	0e 94 84 6e 	call	0xdd08	; 0xdd08 <arb_registerDevice>
    1f98:	18 2f       	mov	r17, r24
                               arb_createDevId( t_setup.c_majorNum,
                               0),
                               &gat_sdDevOps);

   if( t_err < 0)
    1f9a:	87 fd       	sbrc	r24, 7
    1f9c:	3c c0       	rjmp	.+120    	; 0x2016 <drv_sdInit+0xba>

   /*------------------------------------------------------------------------*
    * Request a semaphore from the kernel. Since the sd port is a shared
    * resource we need to have all actions on it be mutually exclusive.
    *------------------------------------------------------------------------*/
   gt_sdDev.t_mutex = arb_semaphoreCreate( MUTEX);
    1f9e:	82 e0       	ldi	r24, 0x02	; 2
    1fa0:	0e 94 61 78 	call	0xf0c2	; 0xf0c2 <arb_semaphoreCreate>
    1fa4:	80 93 6b 24 	sts	0x246B, r24
    1fa8:	90 93 6c 24 	sts	0x246C, r25

   if( gt_sdDev.t_mutex < 0)
    1fac:	80 91 6b 24 	lds	r24, 0x246B
    1fb0:	90 91 6c 24 	lds	r25, 0x246C
    1fb4:	97 fd       	sbrc	r25, 7
    1fb6:	3b c0       	rjmp	.+118    	; 0x202e <drv_sdInit+0xd2>

   /*------------------------------------------------------------------------*
    * Request access to the spi port required for controlling this particular
    * sd card.
    *------------------------------------------------------------------------*/
   t_sConf.b_enDma    = false;
    1fb8:	18 86       	std	Y+8, r1	; 0x08
   t_sConf.i_baudRate = 800000;     /*Set the baud rate low until initialized*/
    1fba:	80 e0       	ldi	r24, 0x00	; 0
    1fbc:	95 e3       	ldi	r25, 0x35	; 53
    1fbe:	ac e0       	ldi	r26, 0x0C	; 12
    1fc0:	b0 e0       	ldi	r27, 0x00	; 0
    1fc2:	38 2f       	mov	r19, r24
    1fc4:	8c 83       	std	Y+4, r24	; 0x04
    1fc6:	9d 83       	std	Y+5, r25	; 0x05
    1fc8:	ae 83       	std	Y+6, r26	; 0x06
    1fca:	bf 83       	std	Y+7, r27	; 0x07
   t_sConf.t_spiMd    = SPI_MODE_0;
    1fcc:	19 82       	std	Y+1, r1	; 0x01
   t_sConf.t_spiOp    = SPI_MASTER;
    1fce:	1a 82       	std	Y+2, r1	; 0x02
   t_sConf.t_spiOrder = SPI_MSB_FIRST;
    1fd0:	81 e0       	ldi	r24, 0x01	; 1
    1fd2:	8b 83       	std	Y+3, r24	; 0x03

   t_sErr = hal_configureSpiChannel( t_setup.t_spiChan,
    1fd4:	8f 2d       	mov	r24, r15
    1fd6:	00 e0       	ldi	r16, 0x00	; 0
    1fd8:	10 e0       	ldi	r17, 0x00	; 0
    1fda:	21 e0       	ldi	r18, 0x01	; 1
    1fdc:	4d 81       	ldd	r20, Y+5	; 0x05
    1fde:	5e 81       	ldd	r21, Y+6	; 0x06
    1fe0:	6f 81       	ldd	r22, Y+7	; 0x07
    1fe2:	70 e0       	ldi	r23, 0x00	; 0
    1fe4:	0e 94 6c 39 	call	0x72d8	; 0x72d8 <hal_configureSpiChannel>
    1fe8:	80 93 6a 24 	sts	0x246A, r24
                                     t_sConf);
   if( t_sErr < 0)
    1fec:	87 fd       	sbrc	r24, 7
    1fee:	29 c0       	rjmp	.+82     	; 0x2042 <drv_sdInit+0xe6>
      t_err = ARB_HAL_ERROR;
      goto failed3;

   }/*End if( t_sErr < 0)*/

   gt_sdDev.t_spiHndl = hal_requestSpiChannel( t_setup.t_spiChan,
    1ff0:	8f 2d       	mov	r24, r15
    1ff2:	60 e0       	ldi	r22, 0x00	; 0
    1ff4:	70 e0       	ldi	r23, 0x00	; 0
    1ff6:	4e 2d       	mov	r20, r14
    1ff8:	2d 2d       	mov	r18, r13
    1ffa:	0e 94 9b 37 	call	0x6f36	; 0x6f36 <hal_requestSpiChannel>
    1ffe:	80 93 6d 24 	sts	0x246D, r24
    2002:	90 93 6e 24 	sts	0x246E, r25
                                               NULL,
                                               t_setup.t_csPort,
                                               t_setup.t_csPin);
   if( gt_sdDev.t_spiHndl < 0)
    2006:	80 91 6d 24 	lds	r24, 0x246D
    200a:	90 91 6e 24 	lds	r25, 0x246E
    200e:	97 fd       	sbrc	r25, 7
    2010:	18 c0       	rjmp	.+48     	; 0x2042 <drv_sdInit+0xe6>
   }/*End if( t_sErr < 0)*/

   /*------------------------------------------------------------------------*
    * We don't have any users attached to this device
    *------------------------------------------------------------------------*/
   gt_sdDev.c_numUsers = 0;
    2012:	10 92 6f 24 	sts	0x246F, r1

failed1:

   return t_err;

}/*End drv_sdInit*/
    2016:	81 2f       	mov	r24, r17
    2018:	28 96       	adiw	r28, 0x08	; 8
    201a:	cd bf       	out	0x3d, r28	; 61
    201c:	de bf       	out	0x3e, r29	; 62
    201e:	cf 91       	pop	r28
    2020:	df 91       	pop	r29
    2022:	1f 91       	pop	r17
    2024:	0f 91       	pop	r16
    2026:	ff 90       	pop	r15
    2028:	ef 90       	pop	r14
    202a:	df 90       	pop	r13
    202c:	08 95       	ret
    *------------------------------------------------------------------------*/
   gt_sdDev.t_mutex = arb_semaphoreCreate( MUTEX);

   if( gt_sdDev.t_mutex < 0)
   {
      t_err = (t_error)gt_sdDev.t_mutex;
    202e:	80 91 6b 24 	lds	r24, 0x246B
    2032:	90 91 6c 24 	lds	r25, 0x246C
    2036:	18 2f       	mov	r17, r24

   arb_semaphoreDestroy( gt_sdDev.t_mutex);

failed2:

   arb_destroyDevice( "sdDevice0");
    2038:	84 e4       	ldi	r24, 0x44	; 68
    203a:	90 e2       	ldi	r25, 0x20	; 32
    203c:	0e 94 0b 6e 	call	0xdc16	; 0xdc16 <arb_destroyDevice>
    2040:	ea cf       	rjmp	.-44     	; 0x2016 <drv_sdInit+0xba>

   return ARB_PASSED;

failed3:

   arb_semaphoreDestroy( gt_sdDev.t_mutex);
    2042:	80 91 6b 24 	lds	r24, 0x246B
    2046:	90 91 6c 24 	lds	r25, 0x246C
    204a:	0e 94 ea 77 	call	0xefd4	; 0xefd4 <arb_semaphoreDestroy>
    204e:	16 ef       	ldi	r17, 0xF6	; 246
    2050:	f3 cf       	rjmp	.-26     	; 0x2038 <drv_sdInit+0xdc>

00002052 <signalClose>:

/*---------------------------------------------------------------------------*
 * Remove this particular file attached to this device
 *---------------------------------------------------------------------------*/
t_error signalClose( t_DEVHANDLE t_devHandle)
{
    2052:	df 93       	push	r29
    2054:	cf 93       	push	r28
    2056:	0f 92       	push	r0
    2058:	0f 92       	push	r0
    205a:	cd b7       	in	r28, 0x3d	; 61
    205c:	de b7       	in	r29, 0x3e	; 62
    205e:	89 83       	std	Y+1, r24	; 0x01
    2060:	9a 83       	std	Y+2, r25	; 0x02

   /*------------------------------------------------------------------------*
    * We are going to access global memory or a register, so perform lock
    *------------------------------------------------------------------------*/
   arb_wait( gt_signalDev.t_mutex,
    2062:	80 91 70 24 	lds	r24, 0x2470
    2066:	90 91 71 24 	lds	r25, 0x2471
    206a:	60 e0       	ldi	r22, 0x00	; 0
    206c:	0e 94 c3 7d 	call	0xfb86	; 0xfb86 <arb_wait>
             0);

   gt_signalDev.c_numUsers--;
    2070:	80 91 77 24 	lds	r24, 0x2477
    2074:	81 50       	subi	r24, 0x01	; 1
    2076:	80 93 77 24 	sts	0x2477, r24

   /*------------------------------------------------------------------------*
    * Release the lock
    *------------------------------------------------------------------------*/
   arb_signal( gt_signalDev.t_mutex);
    207a:	80 91 70 24 	lds	r24, 0x2470
    207e:	90 91 71 24 	lds	r25, 0x2471
    2082:	0e 94 7c 7a 	call	0xf4f8	; 0xf4f8 <arb_signal>

   return ARB_PASSED;

}/*End signalClose*/
    2086:	80 e0       	ldi	r24, 0x00	; 0
    2088:	0f 90       	pop	r0
    208a:	0f 90       	pop	r0
    208c:	cf 91       	pop	r28
    208e:	df 91       	pop	r29
    2090:	08 95       	ret

00002092 <signalIoctl>:
}/*End signalOpen*/

int32_t signalIoctl( t_DEVHANDLE t_devHandle,
                     uint16_t s_command,
                     int32_t  i_arguments)
{
    2092:	ef 92       	push	r14
    2094:	ff 92       	push	r15
    2096:	0f 93       	push	r16
    2098:	1f 93       	push	r17
    209a:	df 93       	push	r29
    209c:	cf 93       	push	r28
    209e:	0f 92       	push	r0
    20a0:	0f 92       	push	r0
    20a2:	cd b7       	in	r28, 0x3d	; 61
    20a4:	de b7       	in	r29, 0x3e	; 62
    20a6:	89 83       	std	Y+1, r24	; 0x01
    20a8:	9a 83       	std	Y+2, r25	; 0x02
    20aa:	16 2f       	mov	r17, r22
   int32_t i_return = (int32_t)ARB_PASSED;

   /*------------------------------------------------------------------------*
    * We are going to access global memory or a register, so perform lock
    *------------------------------------------------------------------------*/
   arb_wait( gt_signalDev.t_mutex,
    20ac:	80 91 70 24 	lds	r24, 0x2470
    20b0:	90 91 71 24 	lds	r25, 0x2471
    20b4:	60 e0       	ldi	r22, 0x00	; 0
    20b6:	0e 94 c3 7d 	call	0xfb86	; 0xfb86 <arb_wait>
             0);

   switch( (t_signalCmd)s_command)
    20ba:	15 30       	cpi	r17, 0x05	; 5
    20bc:	09 f4       	brne	.+2      	; 0x20c0 <signalIoctl+0x2e>
    20be:	b0 c1       	rjmp	.+864    	; 0x2420 <signalIoctl+0x38e>
    20c0:	16 30       	cpi	r17, 0x06	; 6
    20c2:	28 f1       	brcs	.+74     	; 0x210e <signalIoctl+0x7c>
    20c4:	18 30       	cpi	r17, 0x08	; 8
    20c6:	09 f4       	brne	.+2      	; 0x20ca <signalIoctl+0x38>
    20c8:	45 c1       	rjmp	.+650    	; 0x2354 <signalIoctl+0x2c2>
    20ca:	19 30       	cpi	r17, 0x09	; 9
    20cc:	08 f0       	brcs	.+2      	; 0x20d0 <signalIoctl+0x3e>
    20ce:	4a c0       	rjmp	.+148    	; 0x2164 <signalIoctl+0xd2>
    20d0:	16 30       	cpi	r17, 0x06	; 6
    20d2:	09 f4       	brne	.+2      	; 0x20d6 <signalIoctl+0x44>
    20d4:	1d c1       	rjmp	.+570    	; 0x2310 <signalIoctl+0x27e>
    20d6:	17 30       	cpi	r17, 0x07	; 7
    20d8:	09 f4       	brne	.+2      	; 0x20dc <signalIoctl+0x4a>
    20da:	f8 c0       	rjmp	.+496    	; 0x22cc <signalIoctl+0x23a>
    20dc:	8b ef       	ldi	r24, 0xFB	; 251
    20de:	e8 2e       	mov	r14, r24
    20e0:	8f ef       	ldi	r24, 0xFF	; 255
    20e2:	f8 2e       	mov	r15, r24
    20e4:	8f ef       	ldi	r24, 0xFF	; 255
    20e6:	08 2f       	mov	r16, r24
    20e8:	8f ef       	ldi	r24, 0xFF	; 255
    20ea:	18 2f       	mov	r17, r24
   }/*End switch( (t_signalCmd)s_command)*/

   /*------------------------------------------------------------------------*
    * Release the lock
    *------------------------------------------------------------------------*/
   arb_signal( gt_signalDev.t_mutex);
    20ec:	80 91 70 24 	lds	r24, 0x2470
    20f0:	90 91 71 24 	lds	r25, 0x2471
    20f4:	0e 94 7c 7a 	call	0xf4f8	; 0xf4f8 <arb_signal>

   return i_return;

}/*End signalIoctl*/
    20f8:	b7 01       	movw	r22, r14
    20fa:	c8 01       	movw	r24, r16
    20fc:	0f 90       	pop	r0
    20fe:	0f 90       	pop	r0
    2100:	cf 91       	pop	r28
    2102:	df 91       	pop	r29
    2104:	1f 91       	pop	r17
    2106:	0f 91       	pop	r16
    2108:	ff 90       	pop	r15
    210a:	ef 90       	pop	r14
    210c:	08 95       	ret
    * We are going to access global memory or a register, so perform lock
    *------------------------------------------------------------------------*/
   arb_wait( gt_signalDev.t_mutex,
             0);

   switch( (t_signalCmd)s_command)
    210e:	12 30       	cpi	r17, 0x02	; 2
    2110:	09 f4       	brne	.+2      	; 0x2114 <signalIoctl+0x82>
    2112:	64 c1       	rjmp	.+712    	; 0x23dc <signalIoctl+0x34a>
    2114:	13 30       	cpi	r17, 0x03	; 3
    2116:	08 f4       	brcc	.+2      	; 0x211a <signalIoctl+0x88>
    2118:	4b c0       	rjmp	.+150    	; 0x21b0 <signalIoctl+0x11e>
    211a:	13 30       	cpi	r17, 0x03	; 3
    211c:	09 f4       	brne	.+2      	; 0x2120 <signalIoctl+0x8e>
    211e:	90 c0       	rjmp	.+288    	; 0x2240 <signalIoctl+0x1ae>
    2120:	14 30       	cpi	r17, 0x04	; 4
    2122:	e1 f6       	brne	.-72     	; 0x20dc <signalIoctl+0x4a>

      break;/*End case GREEN_LED_ON:*/

      case GREEN_LED_OFF:

         hal_gpioOn( gt_signalDev.c_signalPort,
    2124:	90 91 75 24 	lds	r25, 0x2475
   static inline t_gpioError __attribute__ ( (always_inline)) hal_gpioOn(
   t_gpioPort t_port, uint8_t    c_pin)
   {
      t_gpioError t_err = GPIO_PASSED;

      switch( t_port)
    2128:	80 91 72 24 	lds	r24, 0x2472
    212c:	85 30       	cpi	r24, 0x05	; 5
    212e:	09 f4       	brne	.+2      	; 0x2132 <signalIoctl+0xa0>
    2130:	53 c6       	rjmp	.+3238   	; 0x2dd8 <signalIoctl+0xd46>
    2132:	86 30       	cpi	r24, 0x06	; 6
    2134:	08 f4       	brcc	.+2      	; 0x2138 <signalIoctl+0xa6>
    2136:	0d c2       	rjmp	.+1050   	; 0x2552 <signalIoctl+0x4c0>
    2138:	88 30       	cpi	r24, 0x08	; 8
    213a:	09 f4       	brne	.+2      	; 0x213e <signalIoctl+0xac>
    213c:	a5 c5       	rjmp	.+2890   	; 0x2c88 <signalIoctl+0xbf6>
    213e:	89 30       	cpi	r24, 0x09	; 9
    2140:	08 f0       	brcs	.+2      	; 0x2144 <signalIoctl+0xb2>
    2142:	ce c3       	rjmp	.+1948   	; 0x28e0 <signalIoctl+0x84e>
    2144:	86 30       	cpi	r24, 0x06	; 6
    2146:	09 f4       	brne	.+2      	; 0x214a <signalIoctl+0xb8>
    2148:	93 c5       	rjmp	.+2854   	; 0x2c70 <signalIoctl+0xbde>
    214a:	87 30       	cpi	r24, 0x07	; 7
    214c:	69 f5       	brne	.+90     	; 0x21a8 <signalIoctl+0x116>
         case GPIO_PORTJ:

            /*---------------------------------------------------------------*
             * Make sure the requested pin is configured as an output
             *---------------------------------------------------------------*/
            if( !(PORTJ.DIR & c_pin))
    214e:	80 91 00 07 	lds	r24, 0x0700
    2152:	89 23       	and	r24, r25
    2154:	49 f1       	breq	.+82     	; 0x21a8 <signalIoctl+0x116>
               t_err = GPIO_PIN_IS_INPUT;
            else
               PORTJ.OUTSET = c_pin;
    2156:	e0 e0       	ldi	r30, 0x00	; 0
    2158:	f7 e0       	ldi	r31, 0x07	; 7
    215a:	95 83       	std	Z+5, r25	; 0x05
    215c:	ee 24       	eor	r14, r14
    215e:	ff 24       	eor	r15, r15
    2160:	87 01       	movw	r16, r14
    2162:	c4 cf       	rjmp	.-120    	; 0x20ec <signalIoctl+0x5a>
    * We are going to access global memory or a register, so perform lock
    *------------------------------------------------------------------------*/
   arb_wait( gt_signalDev.t_mutex,
             0);

   switch( (t_signalCmd)s_command)
    2164:	1a 30       	cpi	r17, 0x0A	; 10
    2166:	09 f4       	brne	.+2      	; 0x216a <signalIoctl+0xd8>
    2168:	17 c1       	rjmp	.+558    	; 0x2398 <signalIoctl+0x306>
    216a:	1a 30       	cpi	r17, 0x0A	; 10
    216c:	08 f4       	brcc	.+2      	; 0x2170 <signalIoctl+0xde>
    216e:	46 c0       	rjmp	.+140    	; 0x21fc <signalIoctl+0x16a>
    2170:	1b 30       	cpi	r17, 0x0B	; 11
    2172:	09 f0       	breq	.+2      	; 0x2176 <signalIoctl+0xe4>
    2174:	b3 cf       	rjmp	.-154    	; 0x20dc <signalIoctl+0x4a>

      break;/*End case ALL_LEDS_OFF:*/

      case ALL_LEDS_TOGGLE:

         hal_gpioToggle( gt_signalDev.c_signalPort,
    2176:	90 91 76 24 	lds	r25, 0x2476
   static inline t_gpioError __attribute__ ( (always_inline)) hal_gpioToggle(
   t_gpioPort t_port, uint8_t    c_pin)
   {
      t_gpioError t_err = GPIO_PASSED;

      switch( t_port)
    217a:	80 91 72 24 	lds	r24, 0x2472
    217e:	85 30       	cpi	r24, 0x05	; 5
    2180:	11 f4       	brne	.+4      	; 0x2186 <signalIoctl+0xf4>
    2182:	0c 94 e7 18 	jmp	0x31ce	; 0x31ce <signalIoctl+0x113c>
    2186:	86 30       	cpi	r24, 0x06	; 6
    2188:	08 f0       	brcs	.+2      	; 0x218c <signalIoctl+0xfa>
    218a:	73 c2       	rjmp	.+1254   	; 0x2672 <signalIoctl+0x5e0>
    218c:	82 30       	cpi	r24, 0x02	; 2
    218e:	09 f4       	brne	.+2      	; 0x2192 <signalIoctl+0x100>
    2190:	37 c4       	rjmp	.+2158   	; 0x2a00 <signalIoctl+0x96e>
    2192:	83 30       	cpi	r24, 0x03	; 3
    2194:	08 f0       	brcs	.+2      	; 0x2198 <signalIoctl+0x106>
    2196:	84 c2       	rjmp	.+1288   	; 0x26a0 <signalIoctl+0x60e>
    2198:	88 23       	and	r24, r24
    219a:	11 f4       	brne	.+4      	; 0x21a0 <signalIoctl+0x10e>
    219c:	0c 94 85 18 	jmp	0x310a	; 0x310a <signalIoctl+0x1078>
    21a0:	81 30       	cpi	r24, 0x01	; 1
    21a2:	11 f4       	brne	.+4      	; 0x21a8 <signalIoctl+0x116>
    21a4:	0c 94 77 18 	jmp	0x30ee	; 0x30ee <signalIoctl+0x105c>
             * Make sure the requested pin is configured as an output
             *---------------------------------------------------------------*/
            if( !(PORTR.DIR & c_pin))
               t_err = GPIO_PIN_IS_INPUT;
            else
               PORTR.OUTTGL = c_pin;
    21a8:	ee 24       	eor	r14, r14
    21aa:	ff 24       	eor	r15, r15
    21ac:	87 01       	movw	r16, r14
    21ae:	9e cf       	rjmp	.-196    	; 0x20ec <signalIoctl+0x5a>
    * We are going to access global memory or a register, so perform lock
    *------------------------------------------------------------------------*/
   arb_wait( gt_signalDev.t_mutex,
             0);

   switch( (t_signalCmd)s_command)
    21b0:	11 23       	and	r17, r17
    21b2:	09 f4       	brne	.+2      	; 0x21b6 <signalIoctl+0x124>
    21b4:	69 c0       	rjmp	.+210    	; 0x2288 <signalIoctl+0x1f6>
    21b6:	11 30       	cpi	r17, 0x01	; 1
    21b8:	09 f0       	breq	.+2      	; 0x21bc <signalIoctl+0x12a>
    21ba:	90 cf       	rjmp	.-224    	; 0x20dc <signalIoctl+0x4a>

      break;/*End case RED_LED_ON:*/

      case RED_LED_OFF:

         hal_gpioOn( gt_signalDev.c_signalPort,
    21bc:	90 91 73 24 	lds	r25, 0x2473
   static inline t_gpioError __attribute__ ( (always_inline)) hal_gpioOn(
   t_gpioPort t_port, uint8_t    c_pin)
   {
      t_gpioError t_err = GPIO_PASSED;

      switch( t_port)
    21c0:	80 91 72 24 	lds	r24, 0x2472
    21c4:	85 30       	cpi	r24, 0x05	; 5
    21c6:	09 f4       	brne	.+2      	; 0x21ca <signalIoctl+0x138>
    21c8:	d7 c5       	rjmp	.+2990   	; 0x2d78 <signalIoctl+0xce6>
    21ca:	86 30       	cpi	r24, 0x06	; 6
    21cc:	08 f4       	brcc	.+2      	; 0x21d0 <signalIoctl+0x13e>
    21ce:	09 c2       	rjmp	.+1042   	; 0x25e2 <signalIoctl+0x550>
    21d0:	88 30       	cpi	r24, 0x08	; 8
    21d2:	09 f4       	brne	.+2      	; 0x21d6 <signalIoctl+0x144>
    21d4:	81 c4       	rjmp	.+2306   	; 0x2ad8 <signalIoctl+0xa46>
    21d6:	89 30       	cpi	r24, 0x09	; 9
    21d8:	08 f0       	brcs	.+2      	; 0x21dc <signalIoctl+0x14a>
    21da:	86 c2       	rjmp	.+1292   	; 0x26e8 <signalIoctl+0x656>
    21dc:	86 30       	cpi	r24, 0x06	; 6
    21de:	09 f4       	brne	.+2      	; 0x21e2 <signalIoctl+0x150>
    21e0:	bb c6       	rjmp	.+3446   	; 0x2f58 <signalIoctl+0xec6>
    21e2:	87 30       	cpi	r24, 0x07	; 7
    21e4:	09 f7       	brne	.-62     	; 0x21a8 <signalIoctl+0x116>
         case GPIO_PORTJ:

            /*---------------------------------------------------------------*
             * Make sure the requested pin is configured as an output
             *---------------------------------------------------------------*/
            if( !(PORTJ.DIR & c_pin))
    21e6:	80 91 00 07 	lds	r24, 0x0700
    21ea:	89 23       	and	r24, r25
    21ec:	e9 f2       	breq	.-70     	; 0x21a8 <signalIoctl+0x116>
               t_err = GPIO_PIN_IS_INPUT;
            else
               PORTJ.OUTSET = c_pin;
    21ee:	e0 e0       	ldi	r30, 0x00	; 0
    21f0:	f7 e0       	ldi	r31, 0x07	; 7
    21f2:	95 83       	std	Z+5, r25	; 0x05
    21f4:	ee 24       	eor	r14, r14
    21f6:	ff 24       	eor	r15, r15
    21f8:	87 01       	movw	r16, r14
    21fa:	78 cf       	rjmp	.-272    	; 0x20ec <signalIoctl+0x5a>

      break;/*End case YELLOW_LED_TOGGLE:*/

      case ALL_LEDS_ON:

         hal_gpioOff( gt_signalDev.c_signalPort,
    21fc:	90 91 76 24 	lds	r25, 0x2476
   t_gpioPort t_port, uint8_t    c_pin)
   {

      t_gpioError t_err = GPIO_PASSED;

      switch( t_port)
    2200:	80 91 72 24 	lds	r24, 0x2472
    2204:	85 30       	cpi	r24, 0x05	; 5
    2206:	09 f4       	brne	.+2      	; 0x220a <signalIoctl+0x178>
    2208:	97 c4       	rjmp	.+2350   	; 0x2b38 <signalIoctl+0xaa6>
    220a:	86 30       	cpi	r24, 0x06	; 6
    220c:	08 f4       	brcc	.+2      	; 0x2210 <signalIoctl+0x17e>
    220e:	19 c2       	rjmp	.+1074   	; 0x2642 <signalIoctl+0x5b0>
    2210:	88 30       	cpi	r24, 0x08	; 8
    2212:	09 f4       	brne	.+2      	; 0x2216 <signalIoctl+0x184>
    2214:	99 c5       	rjmp	.+2866   	; 0x2d48 <signalIoctl+0xcb6>
    2216:	89 30       	cpi	r24, 0x09	; 9
    2218:	08 f0       	brcs	.+2      	; 0x221c <signalIoctl+0x18a>
    221a:	aa c3       	rjmp	.+1876   	; 0x2970 <signalIoctl+0x8de>
    221c:	86 30       	cpi	r24, 0x06	; 6
    221e:	09 f4       	brne	.+2      	; 0x2222 <signalIoctl+0x190>
    2220:	87 c5       	rjmp	.+2830   	; 0x2d30 <signalIoctl+0xc9e>
    2222:	87 30       	cpi	r24, 0x07	; 7
    2224:	09 f0       	breq	.+2      	; 0x2228 <signalIoctl+0x196>
    2226:	c0 cf       	rjmp	.-128    	; 0x21a8 <signalIoctl+0x116>
         case GPIO_PORTJ:

            /*---------------------------------------------------------------*
             * Make sure the requested pin is configured as an output
             *---------------------------------------------------------------*/
            if( !(PORTJ.DIR & c_pin))
    2228:	80 91 00 07 	lds	r24, 0x0700
    222c:	89 23       	and	r24, r25
    222e:	09 f4       	brne	.+2      	; 0x2232 <signalIoctl+0x1a0>
    2230:	bb cf       	rjmp	.-138    	; 0x21a8 <signalIoctl+0x116>
               t_err = GPIO_PIN_IS_INPUT;
            else
               PORTJ.OUTCLR = c_pin;
    2232:	e0 e0       	ldi	r30, 0x00	; 0
    2234:	f7 e0       	ldi	r31, 0x07	; 7
    2236:	96 83       	std	Z+6, r25	; 0x06
    2238:	ee 24       	eor	r14, r14
    223a:	ff 24       	eor	r15, r15
    223c:	87 01       	movw	r16, r14
    223e:	56 cf       	rjmp	.-340    	; 0x20ec <signalIoctl+0x5a>

      break;/*End case RED_LED_TOGGLE:*/

      case GREEN_LED_ON:

         hal_gpioOff( gt_signalDev.c_signalPort,
    2240:	90 91 75 24 	lds	r25, 0x2475
   t_gpioPort t_port, uint8_t    c_pin)
   {

      t_gpioError t_err = GPIO_PASSED;

      switch( t_port)
    2244:	80 91 72 24 	lds	r24, 0x2472
    2248:	85 30       	cpi	r24, 0x05	; 5
    224a:	09 f4       	brne	.+2      	; 0x224e <signalIoctl+0x1bc>
    224c:	e6 c6       	rjmp	.+3532   	; 0x301a <signalIoctl+0xf88>
    224e:	86 30       	cpi	r24, 0x06	; 6
    2250:	08 f4       	brcc	.+2      	; 0x2254 <signalIoctl+0x1c2>
    2252:	af c1       	rjmp	.+862    	; 0x25b2 <signalIoctl+0x520>
    2254:	88 30       	cpi	r24, 0x08	; 8
    2256:	11 f4       	brne	.+4      	; 0x225c <signalIoctl+0x1ca>
    2258:	0c 94 03 19 	jmp	0x3206	; 0x3206 <signalIoctl+0x1174>
    225c:	89 30       	cpi	r24, 0x09	; 9
    225e:	08 f0       	brcs	.+2      	; 0x2262 <signalIoctl+0x1d0>
    2260:	bd c3       	rjmp	.+1914   	; 0x29dc <signalIoctl+0x94a>
    2262:	86 30       	cpi	r24, 0x06	; 6
    2264:	11 f4       	brne	.+4      	; 0x226a <signalIoctl+0x1d8>
    2266:	0c 94 f5 18 	jmp	0x31ea	; 0x31ea <signalIoctl+0x1158>
    226a:	87 30       	cpi	r24, 0x07	; 7
    226c:	09 f0       	breq	.+2      	; 0x2270 <signalIoctl+0x1de>
    226e:	9c cf       	rjmp	.-200    	; 0x21a8 <signalIoctl+0x116>
         case GPIO_PORTJ:

            /*---------------------------------------------------------------*
             * Make sure the requested pin is configured as an output
             *---------------------------------------------------------------*/
            if( !(PORTJ.DIR & c_pin))
    2270:	80 91 00 07 	lds	r24, 0x0700
    2274:	89 23       	and	r24, r25
    2276:	09 f4       	brne	.+2      	; 0x227a <signalIoctl+0x1e8>
    2278:	97 cf       	rjmp	.-210    	; 0x21a8 <signalIoctl+0x116>
               t_err = GPIO_PIN_IS_INPUT;
            else
               PORTJ.OUTCLR = c_pin;
    227a:	e0 e0       	ldi	r30, 0x00	; 0
    227c:	f7 e0       	ldi	r31, 0x07	; 7
    227e:	96 83       	std	Z+6, r25	; 0x06
    2280:	ee 24       	eor	r14, r14
    2282:	ff 24       	eor	r15, r15
    2284:	87 01       	movw	r16, r14
    2286:	32 cf       	rjmp	.-412    	; 0x20ec <signalIoctl+0x5a>

   switch( (t_signalCmd)s_command)
   {
      case RED_LED_ON:

         hal_gpioOff( gt_signalDev.c_signalPort,
    2288:	90 91 73 24 	lds	r25, 0x2473
   t_gpioPort t_port, uint8_t    c_pin)
   {

      t_gpioError t_err = GPIO_PASSED;

      switch( t_port)
    228c:	80 91 72 24 	lds	r24, 0x2472
    2290:	85 30       	cpi	r24, 0x05	; 5
    2292:	09 f4       	brne	.+2      	; 0x2296 <signalIoctl+0x204>
    2294:	f6 c6       	rjmp	.+3564   	; 0x3082 <signalIoctl+0xff0>
    2296:	86 30       	cpi	r24, 0x06	; 6
    2298:	08 f4       	brcc	.+2      	; 0x229c <signalIoctl+0x20a>
    229a:	13 c1       	rjmp	.+550    	; 0x24c2 <signalIoctl+0x430>
    229c:	88 30       	cpi	r24, 0x08	; 8
    229e:	09 f4       	brne	.+2      	; 0x22a2 <signalIoctl+0x210>
    22a0:	7b c4       	rjmp	.+2294   	; 0x2b98 <signalIoctl+0xb06>
    22a2:	89 30       	cpi	r24, 0x09	; 9
    22a4:	08 f0       	brcs	.+2      	; 0x22a8 <signalIoctl+0x216>
    22a6:	56 c2       	rjmp	.+1196   	; 0x2754 <signalIoctl+0x6c2>
    22a8:	86 30       	cpi	r24, 0x06	; 6
    22aa:	09 f4       	brne	.+2      	; 0x22ae <signalIoctl+0x21c>
    22ac:	35 c5       	rjmp	.+2666   	; 0x2d18 <signalIoctl+0xc86>
    22ae:	87 30       	cpi	r24, 0x07	; 7
    22b0:	09 f0       	breq	.+2      	; 0x22b4 <signalIoctl+0x222>
    22b2:	7a cf       	rjmp	.-268    	; 0x21a8 <signalIoctl+0x116>
         case GPIO_PORTJ:

            /*---------------------------------------------------------------*
             * Make sure the requested pin is configured as an output
             *---------------------------------------------------------------*/
            if( !(PORTJ.DIR & c_pin))
    22b4:	80 91 00 07 	lds	r24, 0x0700
    22b8:	89 23       	and	r24, r25
    22ba:	09 f4       	brne	.+2      	; 0x22be <signalIoctl+0x22c>
    22bc:	75 cf       	rjmp	.-278    	; 0x21a8 <signalIoctl+0x116>
               t_err = GPIO_PIN_IS_INPUT;
            else
               PORTJ.OUTCLR = c_pin;
    22be:	e0 e0       	ldi	r30, 0x00	; 0
    22c0:	f7 e0       	ldi	r31, 0x07	; 7
    22c2:	96 83       	std	Z+6, r25	; 0x06
    22c4:	ee 24       	eor	r14, r14
    22c6:	ff 24       	eor	r15, r15
    22c8:	87 01       	movw	r16, r14
    22ca:	10 cf       	rjmp	.-480    	; 0x20ec <signalIoctl+0x5a>

      break;/*End case YELLOW_LED_ON:*/

      case YELLOW_LED_OFF:

         hal_gpioOn( gt_signalDev.c_signalPort,
    22cc:	90 91 74 24 	lds	r25, 0x2474
   static inline t_gpioError __attribute__ ( (always_inline)) hal_gpioOn(
   t_gpioPort t_port, uint8_t    c_pin)
   {
      t_gpioError t_err = GPIO_PASSED;

      switch( t_port)
    22d0:	80 91 72 24 	lds	r24, 0x2472
    22d4:	85 30       	cpi	r24, 0x05	; 5
    22d6:	09 f4       	brne	.+2      	; 0x22da <signalIoctl+0x248>
    22d8:	af c5       	rjmp	.+2910   	; 0x2e38 <signalIoctl+0xda6>
    22da:	86 30       	cpi	r24, 0x06	; 6
    22dc:	08 f4       	brcc	.+2      	; 0x22e0 <signalIoctl+0x24e>
    22de:	99 c1       	rjmp	.+818    	; 0x2612 <signalIoctl+0x580>
    22e0:	88 30       	cpi	r24, 0x08	; 8
    22e2:	09 f4       	brne	.+2      	; 0x22e6 <signalIoctl+0x254>
    22e4:	91 c5       	rjmp	.+2850   	; 0x2e08 <signalIoctl+0xd76>
    22e6:	89 30       	cpi	r24, 0x09	; 9
    22e8:	08 f0       	brcs	.+2      	; 0x22ec <signalIoctl+0x25a>
    22ea:	1e c3       	rjmp	.+1596   	; 0x2928 <signalIoctl+0x896>
    22ec:	86 30       	cpi	r24, 0x06	; 6
    22ee:	09 f4       	brne	.+2      	; 0x22f2 <signalIoctl+0x260>
    22f0:	7f c5       	rjmp	.+2814   	; 0x2df0 <signalIoctl+0xd5e>
    22f2:	87 30       	cpi	r24, 0x07	; 7
    22f4:	09 f0       	breq	.+2      	; 0x22f8 <signalIoctl+0x266>
    22f6:	58 cf       	rjmp	.-336    	; 0x21a8 <signalIoctl+0x116>
         case GPIO_PORTJ:

            /*---------------------------------------------------------------*
             * Make sure the requested pin is configured as an output
             *---------------------------------------------------------------*/
            if( !(PORTJ.DIR & c_pin))
    22f8:	80 91 00 07 	lds	r24, 0x0700
    22fc:	89 23       	and	r24, r25
    22fe:	09 f4       	brne	.+2      	; 0x2302 <signalIoctl+0x270>
    2300:	53 cf       	rjmp	.-346    	; 0x21a8 <signalIoctl+0x116>
               t_err = GPIO_PIN_IS_INPUT;
            else
               PORTJ.OUTSET = c_pin;
    2302:	e0 e0       	ldi	r30, 0x00	; 0
    2304:	f7 e0       	ldi	r31, 0x07	; 7
    2306:	95 83       	std	Z+5, r25	; 0x05
    2308:	ee 24       	eor	r14, r14
    230a:	ff 24       	eor	r15, r15
    230c:	87 01       	movw	r16, r14
    230e:	ee ce       	rjmp	.-548    	; 0x20ec <signalIoctl+0x5a>

      break;/*End case GREEN_LED_TOGGLE:*/

      case YELLOW_LED_ON:

         hal_gpioOff( gt_signalDev.c_signalPort,
    2310:	90 91 74 24 	lds	r25, 0x2474
   t_gpioPort t_port, uint8_t    c_pin)
   {

      t_gpioError t_err = GPIO_PASSED;

      switch( t_port)
    2314:	80 91 72 24 	lds	r24, 0x2472
    2318:	85 30       	cpi	r24, 0x05	; 5
    231a:	09 f4       	brne	.+2      	; 0x231e <signalIoctl+0x28c>
    231c:	cd c4       	rjmp	.+2458   	; 0x2cb8 <signalIoctl+0xc26>
    231e:	86 30       	cpi	r24, 0x06	; 6
    2320:	08 f4       	brcc	.+2      	; 0x2324 <signalIoctl+0x292>
    2322:	ff c0       	rjmp	.+510    	; 0x2522 <signalIoctl+0x490>
    2324:	88 30       	cpi	r24, 0x08	; 8
    2326:	09 f4       	brne	.+2      	; 0x232a <signalIoctl+0x298>
    2328:	ef c3       	rjmp	.+2014   	; 0x2b08 <signalIoctl+0xa76>
    232a:	89 30       	cpi	r24, 0x09	; 9
    232c:	08 f0       	brcs	.+2      	; 0x2330 <signalIoctl+0x29e>
    232e:	24 c2       	rjmp	.+1096   	; 0x2778 <signalIoctl+0x6e6>
    2330:	86 30       	cpi	r24, 0x06	; 6
    2332:	09 f4       	brne	.+2      	; 0x2336 <signalIoctl+0x2a4>
    2334:	a1 c3       	rjmp	.+1858   	; 0x2a78 <signalIoctl+0x9e6>
    2336:	87 30       	cpi	r24, 0x07	; 7
    2338:	09 f0       	breq	.+2      	; 0x233c <signalIoctl+0x2aa>
    233a:	36 cf       	rjmp	.-404    	; 0x21a8 <signalIoctl+0x116>
         case GPIO_PORTJ:

            /*---------------------------------------------------------------*
             * Make sure the requested pin is configured as an output
             *---------------------------------------------------------------*/
            if( !(PORTJ.DIR & c_pin))
    233c:	80 91 00 07 	lds	r24, 0x0700
    2340:	89 23       	and	r24, r25
    2342:	09 f4       	brne	.+2      	; 0x2346 <signalIoctl+0x2b4>
    2344:	31 cf       	rjmp	.-414    	; 0x21a8 <signalIoctl+0x116>
               t_err = GPIO_PIN_IS_INPUT;
            else
               PORTJ.OUTCLR = c_pin;
    2346:	e0 e0       	ldi	r30, 0x00	; 0
    2348:	f7 e0       	ldi	r31, 0x07	; 7
    234a:	96 83       	std	Z+6, r25	; 0x06
    234c:	ee 24       	eor	r14, r14
    234e:	ff 24       	eor	r15, r15
    2350:	87 01       	movw	r16, r14
    2352:	cc ce       	rjmp	.-616    	; 0x20ec <signalIoctl+0x5a>

      break;/*End case YELLOW_LED_OFF:*/

      case YELLOW_LED_TOGGLE:

         hal_gpioToggle( gt_signalDev.c_signalPort,
    2354:	90 91 74 24 	lds	r25, 0x2474
   static inline t_gpioError __attribute__ ( (always_inline)) hal_gpioToggle(
   t_gpioPort t_port, uint8_t    c_pin)
   {
      t_gpioError t_err = GPIO_PASSED;

      switch( t_port)
    2358:	80 91 72 24 	lds	r24, 0x2472
    235c:	85 30       	cpi	r24, 0x05	; 5
    235e:	09 f4       	brne	.+2      	; 0x2362 <signalIoctl+0x2d0>
    2360:	cb c5       	rjmp	.+2966   	; 0x2ef8 <signalIoctl+0xe66>
    2362:	86 30       	cpi	r24, 0x06	; 6
    2364:	08 f4       	brcc	.+2      	; 0x2368 <signalIoctl+0x2d6>
    2366:	c5 c0       	rjmp	.+394    	; 0x24f2 <signalIoctl+0x460>
    2368:	88 30       	cpi	r24, 0x08	; 8
    236a:	09 f4       	brne	.+2      	; 0x236e <signalIoctl+0x2dc>
    236c:	ad c5       	rjmp	.+2906   	; 0x2ec8 <signalIoctl+0xe36>
    236e:	89 30       	cpi	r24, 0x09	; 9
    2370:	08 f0       	brcs	.+2      	; 0x2374 <signalIoctl+0x2e2>
    2372:	22 c3       	rjmp	.+1604   	; 0x29b8 <signalIoctl+0x926>
    2374:	86 30       	cpi	r24, 0x06	; 6
    2376:	09 f4       	brne	.+2      	; 0x237a <signalIoctl+0x2e8>
    2378:	9b c5       	rjmp	.+2870   	; 0x2eb0 <signalIoctl+0xe1e>
    237a:	87 30       	cpi	r24, 0x07	; 7
    237c:	09 f0       	breq	.+2      	; 0x2380 <signalIoctl+0x2ee>
    237e:	14 cf       	rjmp	.-472    	; 0x21a8 <signalIoctl+0x116>
         case GPIO_PORTJ:

            /*---------------------------------------------------------------*
             * Make sure the requested pin is configured as an output
             *---------------------------------------------------------------*/
            if( !(PORTJ.DIR & c_pin))
    2380:	80 91 00 07 	lds	r24, 0x0700
    2384:	89 23       	and	r24, r25
    2386:	09 f4       	brne	.+2      	; 0x238a <signalIoctl+0x2f8>
    2388:	0f cf       	rjmp	.-482    	; 0x21a8 <signalIoctl+0x116>
               t_err = GPIO_PIN_IS_INPUT;
            else
               PORTJ.OUTTGL = c_pin;
    238a:	e0 e0       	ldi	r30, 0x00	; 0
    238c:	f7 e0       	ldi	r31, 0x07	; 7
    238e:	97 83       	std	Z+7, r25	; 0x07
    2390:	ee 24       	eor	r14, r14
    2392:	ff 24       	eor	r15, r15
    2394:	87 01       	movw	r16, r14
    2396:	aa ce       	rjmp	.-684    	; 0x20ec <signalIoctl+0x5a>

      break;/*End case ALL_LEDS_ON:*/

      case ALL_LEDS_OFF:

         hal_gpioOn( gt_signalDev.c_signalPort,
    2398:	90 91 76 24 	lds	r25, 0x2476
   static inline t_gpioError __attribute__ ( (always_inline)) hal_gpioOn(
   t_gpioPort t_port, uint8_t    c_pin)
   {
      t_gpioError t_err = GPIO_PASSED;

      switch( t_port)
    239c:	80 91 72 24 	lds	r24, 0x2472
    23a0:	85 30       	cpi	r24, 0x05	; 5
    23a2:	09 f4       	brne	.+2      	; 0x23a6 <signalIoctl+0x314>
    23a4:	09 c6       	rjmp	.+3090   	; 0x2fb8 <signalIoctl+0xf26>
    23a6:	86 30       	cpi	r24, 0x06	; 6
    23a8:	08 f4       	brcc	.+2      	; 0x23ac <signalIoctl+0x31a>
    23aa:	eb c0       	rjmp	.+470    	; 0x2582 <signalIoctl+0x4f0>
    23ac:	88 30       	cpi	r24, 0x08	; 8
    23ae:	09 f4       	brne	.+2      	; 0x23b2 <signalIoctl+0x320>
    23b0:	0b c4       	rjmp	.+2070   	; 0x2bc8 <signalIoctl+0xb36>
    23b2:	89 30       	cpi	r24, 0x09	; 9
    23b4:	08 f0       	brcs	.+2      	; 0x23b8 <signalIoctl+0x326>
    23b6:	f2 c1       	rjmp	.+996    	; 0x279c <signalIoctl+0x70a>
    23b8:	86 30       	cpi	r24, 0x06	; 6
    23ba:	09 f4       	brne	.+2      	; 0x23be <signalIoctl+0x32c>
    23bc:	6d c5       	rjmp	.+2778   	; 0x2e98 <signalIoctl+0xe06>
    23be:	87 30       	cpi	r24, 0x07	; 7
    23c0:	09 f0       	breq	.+2      	; 0x23c4 <signalIoctl+0x332>
    23c2:	f2 ce       	rjmp	.-540    	; 0x21a8 <signalIoctl+0x116>
         case GPIO_PORTJ:

            /*---------------------------------------------------------------*
             * Make sure the requested pin is configured as an output
             *---------------------------------------------------------------*/
            if( !(PORTJ.DIR & c_pin))
    23c4:	80 91 00 07 	lds	r24, 0x0700
    23c8:	89 23       	and	r24, r25
    23ca:	09 f4       	brne	.+2      	; 0x23ce <signalIoctl+0x33c>
    23cc:	ed ce       	rjmp	.-550    	; 0x21a8 <signalIoctl+0x116>
               t_err = GPIO_PIN_IS_INPUT;
            else
               PORTJ.OUTSET = c_pin;
    23ce:	e0 e0       	ldi	r30, 0x00	; 0
    23d0:	f7 e0       	ldi	r31, 0x07	; 7
    23d2:	95 83       	std	Z+5, r25	; 0x05
    23d4:	ee 24       	eor	r14, r14
    23d6:	ff 24       	eor	r15, r15
    23d8:	87 01       	movw	r16, r14
    23da:	88 ce       	rjmp	.-752    	; 0x20ec <signalIoctl+0x5a>

      break;/*End case RED_LED_OFF:*/

      case RED_LED_TOGGLE:

         hal_gpioToggle( gt_signalDev.c_signalPort,
    23dc:	90 91 73 24 	lds	r25, 0x2473
   static inline t_gpioError __attribute__ ( (always_inline)) hal_gpioToggle(
   t_gpioPort t_port, uint8_t    c_pin)
   {
      t_gpioError t_err = GPIO_PASSED;

      switch( t_port)
    23e0:	80 91 72 24 	lds	r24, 0x2472
    23e4:	85 30       	cpi	r24, 0x05	; 5
    23e6:	09 f4       	brne	.+2      	; 0x23ea <signalIoctl+0x358>
    23e8:	37 c4       	rjmp	.+2158   	; 0x2c58 <signalIoctl+0xbc6>
    23ea:	86 30       	cpi	r24, 0x06	; 6
    23ec:	08 f4       	brcc	.+2      	; 0x23f0 <signalIoctl+0x35e>
    23ee:	51 c0       	rjmp	.+162    	; 0x2492 <signalIoctl+0x400>
    23f0:	88 30       	cpi	r24, 0x08	; 8
    23f2:	09 f4       	brne	.+2      	; 0x23f6 <signalIoctl+0x364>
    23f4:	39 c5       	rjmp	.+2674   	; 0x2e68 <signalIoctl+0xdd6>
    23f6:	89 30       	cpi	r24, 0x09	; 9
    23f8:	08 f0       	brcs	.+2      	; 0x23fc <signalIoctl+0x36a>
    23fa:	4e c2       	rjmp	.+1180   	; 0x2898 <signalIoctl+0x806>
    23fc:	86 30       	cpi	r24, 0x06	; 6
    23fe:	09 f4       	brne	.+2      	; 0x2402 <signalIoctl+0x370>
    2400:	27 c5       	rjmp	.+2638   	; 0x2e50 <signalIoctl+0xdbe>
    2402:	87 30       	cpi	r24, 0x07	; 7
    2404:	09 f0       	breq	.+2      	; 0x2408 <signalIoctl+0x376>
    2406:	d0 ce       	rjmp	.-608    	; 0x21a8 <signalIoctl+0x116>
         case GPIO_PORTJ:

            /*---------------------------------------------------------------*
             * Make sure the requested pin is configured as an output
             *---------------------------------------------------------------*/
            if( !(PORTJ.DIR & c_pin))
    2408:	80 91 00 07 	lds	r24, 0x0700
    240c:	89 23       	and	r24, r25
    240e:	09 f4       	brne	.+2      	; 0x2412 <signalIoctl+0x380>
    2410:	cb ce       	rjmp	.-618    	; 0x21a8 <signalIoctl+0x116>
               t_err = GPIO_PIN_IS_INPUT;
            else
               PORTJ.OUTTGL = c_pin;
    2412:	e0 e0       	ldi	r30, 0x00	; 0
    2414:	f7 e0       	ldi	r31, 0x07	; 7
    2416:	97 83       	std	Z+7, r25	; 0x07
    2418:	ee 24       	eor	r14, r14
    241a:	ff 24       	eor	r15, r15
    241c:	87 01       	movw	r16, r14
    241e:	66 ce       	rjmp	.-820    	; 0x20ec <signalIoctl+0x5a>

      break;/*End case GREEN_LED_OFF:*/

      case GREEN_LED_TOGGLE:

         hal_gpioToggle( gt_signalDev.c_signalPort,
    2420:	90 91 75 24 	lds	r25, 0x2475
   static inline t_gpioError __attribute__ ( (always_inline)) hal_gpioToggle(
   t_gpioPort t_port, uint8_t    c_pin)
   {
      t_gpioError t_err = GPIO_PASSED;

      switch( t_port)
    2424:	80 91 72 24 	lds	r24, 0x2472
    2428:	85 30       	cpi	r24, 0x05	; 5
    242a:	09 f4       	brne	.+2      	; 0x242e <signalIoctl+0x39c>
    242c:	e5 c3       	rjmp	.+1994   	; 0x2bf8 <signalIoctl+0xb66>
    242e:	86 30       	cpi	r24, 0x06	; 6
    2430:	c0 f0       	brcs	.+48     	; 0x2462 <signalIoctl+0x3d0>
    2432:	88 30       	cpi	r24, 0x08	; 8
    2434:	09 f4       	brne	.+2      	; 0x2438 <signalIoctl+0x3a6>
    2436:	77 c6       	rjmp	.+3310   	; 0x3126 <signalIoctl+0x1094>
    2438:	89 30       	cpi	r24, 0x09	; 9
    243a:	08 f0       	brcs	.+2      	; 0x243e <signalIoctl+0x3ac>
    243c:	87 c2       	rjmp	.+1294   	; 0x294c <signalIoctl+0x8ba>
    243e:	86 30       	cpi	r24, 0x06	; 6
    2440:	09 f4       	brne	.+2      	; 0x2444 <signalIoctl+0x3b2>
    2442:	8d c6       	rjmp	.+3354   	; 0x315e <signalIoctl+0x10cc>
    2444:	87 30       	cpi	r24, 0x07	; 7
    2446:	09 f0       	breq	.+2      	; 0x244a <signalIoctl+0x3b8>
    2448:	af ce       	rjmp	.-674    	; 0x21a8 <signalIoctl+0x116>
         case GPIO_PORTJ:

            /*---------------------------------------------------------------*
             * Make sure the requested pin is configured as an output
             *---------------------------------------------------------------*/
            if( !(PORTJ.DIR & c_pin))
    244a:	80 91 00 07 	lds	r24, 0x0700
    244e:	89 23       	and	r24, r25
    2450:	09 f4       	brne	.+2      	; 0x2454 <signalIoctl+0x3c2>
    2452:	aa ce       	rjmp	.-684    	; 0x21a8 <signalIoctl+0x116>
               t_err = GPIO_PIN_IS_INPUT;
            else
               PORTJ.OUTTGL = c_pin;
    2454:	e0 e0       	ldi	r30, 0x00	; 0
    2456:	f7 e0       	ldi	r31, 0x07	; 7
    2458:	97 83       	std	Z+7, r25	; 0x07
    245a:	ee 24       	eor	r14, r14
    245c:	ff 24       	eor	r15, r15
    245e:	87 01       	movw	r16, r14
    2460:	45 ce       	rjmp	.-886    	; 0x20ec <signalIoctl+0x5a>
   static inline t_gpioError __attribute__ ( (always_inline)) hal_gpioToggle(
   t_gpioPort t_port, uint8_t    c_pin)
   {
      t_gpioError t_err = GPIO_PASSED;

      switch( t_port)
    2462:	82 30       	cpi	r24, 0x02	; 2
    2464:	09 f4       	brne	.+2      	; 0x2468 <signalIoctl+0x3d6>
    2466:	e0 c3       	rjmp	.+1984   	; 0x2c28 <signalIoctl+0xb96>
    2468:	83 30       	cpi	r24, 0x03	; 3
    246a:	08 f0       	brcs	.+2      	; 0x246e <signalIoctl+0x3dc>
    246c:	a9 c1       	rjmp	.+850    	; 0x27c0 <signalIoctl+0x72e>
    246e:	88 23       	and	r24, r24
    2470:	09 f4       	brne	.+2      	; 0x2474 <signalIoctl+0x3e2>
    2472:	ce c3       	rjmp	.+1948   	; 0x2c10 <signalIoctl+0xb7e>
    2474:	81 30       	cpi	r24, 0x01	; 1
    2476:	09 f0       	breq	.+2      	; 0x247a <signalIoctl+0x3e8>
    2478:	97 ce       	rjmp	.-722    	; 0x21a8 <signalIoctl+0x116>
         case GPIO_PORTB:

            /*---------------------------------------------------------------*
             * Make sure the requested pin is configured as an output
             *---------------------------------------------------------------*/
            if( !(PORTB.DIR & c_pin))
    247a:	80 91 20 06 	lds	r24, 0x0620
    247e:	89 23       	and	r24, r25
    2480:	09 f4       	brne	.+2      	; 0x2484 <signalIoctl+0x3f2>
    2482:	92 ce       	rjmp	.-732    	; 0x21a8 <signalIoctl+0x116>
               t_err = GPIO_PIN_IS_INPUT;
            else
               PORTB.OUTTGL = c_pin;
    2484:	e0 e2       	ldi	r30, 0x20	; 32
    2486:	f6 e0       	ldi	r31, 0x06	; 6
    2488:	97 83       	std	Z+7, r25	; 0x07
    248a:	ee 24       	eor	r14, r14
    248c:	ff 24       	eor	r15, r15
    248e:	87 01       	movw	r16, r14
    2490:	2d ce       	rjmp	.-934    	; 0x20ec <signalIoctl+0x5a>
   static inline t_gpioError __attribute__ ( (always_inline)) hal_gpioToggle(
   t_gpioPort t_port, uint8_t    c_pin)
   {
      t_gpioError t_err = GPIO_PASSED;

      switch( t_port)
    2492:	82 30       	cpi	r24, 0x02	; 2
    2494:	09 f4       	brne	.+2      	; 0x2498 <signalIoctl+0x406>
    2496:	7f c6       	rjmp	.+3326   	; 0x3196 <signalIoctl+0x1104>
    2498:	83 30       	cpi	r24, 0x03	; 3
    249a:	08 f0       	brcs	.+2      	; 0x249e <signalIoctl+0x40c>
    249c:	0f c2       	rjmp	.+1054   	; 0x28bc <signalIoctl+0x82a>
    249e:	88 23       	and	r24, r24
    24a0:	09 f4       	brne	.+2      	; 0x24a4 <signalIoctl+0x412>
    24a2:	6b c6       	rjmp	.+3286   	; 0x317a <signalIoctl+0x10e8>
    24a4:	81 30       	cpi	r24, 0x01	; 1
    24a6:	09 f0       	breq	.+2      	; 0x24aa <signalIoctl+0x418>
    24a8:	7f ce       	rjmp	.-770    	; 0x21a8 <signalIoctl+0x116>
         case GPIO_PORTB:

            /*---------------------------------------------------------------*
             * Make sure the requested pin is configured as an output
             *---------------------------------------------------------------*/
            if( !(PORTB.DIR & c_pin))
    24aa:	80 91 20 06 	lds	r24, 0x0620
    24ae:	89 23       	and	r24, r25
    24b0:	09 f4       	brne	.+2      	; 0x24b4 <signalIoctl+0x422>
    24b2:	7a ce       	rjmp	.-780    	; 0x21a8 <signalIoctl+0x116>
               t_err = GPIO_PIN_IS_INPUT;
            else
               PORTB.OUTTGL = c_pin;
    24b4:	e0 e2       	ldi	r30, 0x20	; 32
    24b6:	f6 e0       	ldi	r31, 0x06	; 6
    24b8:	97 83       	std	Z+7, r25	; 0x07
    24ba:	ee 24       	eor	r14, r14
    24bc:	ff 24       	eor	r15, r15
    24be:	87 01       	movw	r16, r14
    24c0:	15 ce       	rjmp	.-982    	; 0x20ec <signalIoctl+0x5a>
   t_gpioPort t_port, uint8_t    c_pin)
   {

      t_gpioError t_err = GPIO_PASSED;

      switch( t_port)
    24c2:	82 30       	cpi	r24, 0x02	; 2
    24c4:	09 f4       	brne	.+2      	; 0x24c8 <signalIoctl+0x436>
    24c6:	f7 c5       	rjmp	.+3054   	; 0x30b6 <signalIoctl+0x1024>
    24c8:	83 30       	cpi	r24, 0x03	; 3
    24ca:	08 f0       	brcs	.+2      	; 0x24ce <signalIoctl+0x43c>
    24cc:	af c1       	rjmp	.+862    	; 0x282c <signalIoctl+0x79a>
    24ce:	88 23       	and	r24, r24
    24d0:	09 f4       	brne	.+2      	; 0x24d4 <signalIoctl+0x442>
    24d2:	e4 c5       	rjmp	.+3016   	; 0x309c <signalIoctl+0x100a>
    24d4:	81 30       	cpi	r24, 0x01	; 1
    24d6:	09 f0       	breq	.+2      	; 0x24da <signalIoctl+0x448>
    24d8:	67 ce       	rjmp	.-818    	; 0x21a8 <signalIoctl+0x116>
         case GPIO_PORTB:

            /*---------------------------------------------------------------*
             * Make sure the requested pin is configured as an output
             *---------------------------------------------------------------*/
            if( !(PORTB.DIR & c_pin))
    24da:	80 91 20 06 	lds	r24, 0x0620
    24de:	89 23       	and	r24, r25
    24e0:	09 f4       	brne	.+2      	; 0x24e4 <signalIoctl+0x452>
    24e2:	62 ce       	rjmp	.-828    	; 0x21a8 <signalIoctl+0x116>
               t_err = GPIO_PIN_IS_INPUT;
            else
               PORTB.OUTCLR = c_pin;
    24e4:	e0 e2       	ldi	r30, 0x20	; 32
    24e6:	f6 e0       	ldi	r31, 0x06	; 6
    24e8:	96 83       	std	Z+6, r25	; 0x06
    24ea:	ee 24       	eor	r14, r14
    24ec:	ff 24       	eor	r15, r15
    24ee:	87 01       	movw	r16, r14
    24f0:	fd cd       	rjmp	.-1030   	; 0x20ec <signalIoctl+0x5a>
   static inline t_gpioError __attribute__ ( (always_inline)) hal_gpioToggle(
   t_gpioPort t_port, uint8_t    c_pin)
   {
      t_gpioError t_err = GPIO_PASSED;

      switch( t_port)
    24f2:	82 30       	cpi	r24, 0x02	; 2
    24f4:	09 f4       	brne	.+2      	; 0x24f8 <signalIoctl+0x466>
    24f6:	18 c5       	rjmp	.+2608   	; 0x2f28 <signalIoctl+0xe96>
    24f8:	83 30       	cpi	r24, 0x03	; 3
    24fa:	08 f0       	brcs	.+2      	; 0x24fe <signalIoctl+0x46c>
    24fc:	73 c1       	rjmp	.+742    	; 0x27e4 <signalIoctl+0x752>
    24fe:	88 23       	and	r24, r24
    2500:	09 f4       	brne	.+2      	; 0x2504 <signalIoctl+0x472>
    2502:	06 c5       	rjmp	.+2572   	; 0x2f10 <signalIoctl+0xe7e>
    2504:	81 30       	cpi	r24, 0x01	; 1
    2506:	09 f0       	breq	.+2      	; 0x250a <signalIoctl+0x478>
    2508:	4f ce       	rjmp	.-866    	; 0x21a8 <signalIoctl+0x116>
         case GPIO_PORTB:

            /*---------------------------------------------------------------*
             * Make sure the requested pin is configured as an output
             *---------------------------------------------------------------*/
            if( !(PORTB.DIR & c_pin))
    250a:	80 91 20 06 	lds	r24, 0x0620
    250e:	89 23       	and	r24, r25
    2510:	09 f4       	brne	.+2      	; 0x2514 <signalIoctl+0x482>
    2512:	4a ce       	rjmp	.-876    	; 0x21a8 <signalIoctl+0x116>
               t_err = GPIO_PIN_IS_INPUT;
            else
               PORTB.OUTTGL = c_pin;
    2514:	e0 e2       	ldi	r30, 0x20	; 32
    2516:	f6 e0       	ldi	r31, 0x06	; 6
    2518:	97 83       	std	Z+7, r25	; 0x07
    251a:	ee 24       	eor	r14, r14
    251c:	ff 24       	eor	r15, r15
    251e:	87 01       	movw	r16, r14
    2520:	e5 cd       	rjmp	.-1078   	; 0x20ec <signalIoctl+0x5a>
   t_gpioPort t_port, uint8_t    c_pin)
   {

      t_gpioError t_err = GPIO_PASSED;

      switch( t_port)
    2522:	82 30       	cpi	r24, 0x02	; 2
    2524:	09 f4       	brne	.+2      	; 0x2528 <signalIoctl+0x496>
    2526:	40 c4       	rjmp	.+2176   	; 0x2da8 <signalIoctl+0xd16>
    2528:	83 30       	cpi	r24, 0x03	; 3
    252a:	08 f0       	brcs	.+2      	; 0x252e <signalIoctl+0x49c>
    252c:	6d c1       	rjmp	.+730    	; 0x2808 <signalIoctl+0x776>
    252e:	88 23       	and	r24, r24
    2530:	09 f4       	brne	.+2      	; 0x2534 <signalIoctl+0x4a2>
    2532:	2e c4       	rjmp	.+2140   	; 0x2d90 <signalIoctl+0xcfe>
    2534:	81 30       	cpi	r24, 0x01	; 1
    2536:	09 f0       	breq	.+2      	; 0x253a <signalIoctl+0x4a8>
    2538:	37 ce       	rjmp	.-914    	; 0x21a8 <signalIoctl+0x116>
         case GPIO_PORTB:

            /*---------------------------------------------------------------*
             * Make sure the requested pin is configured as an output
             *---------------------------------------------------------------*/
            if( !(PORTB.DIR & c_pin))
    253a:	80 91 20 06 	lds	r24, 0x0620
    253e:	89 23       	and	r24, r25
    2540:	09 f4       	brne	.+2      	; 0x2544 <signalIoctl+0x4b2>
    2542:	32 ce       	rjmp	.-924    	; 0x21a8 <signalIoctl+0x116>
               t_err = GPIO_PIN_IS_INPUT;
            else
               PORTB.OUTCLR = c_pin;
    2544:	e0 e2       	ldi	r30, 0x20	; 32
    2546:	f6 e0       	ldi	r31, 0x06	; 6
    2548:	96 83       	std	Z+6, r25	; 0x06
    254a:	ee 24       	eor	r14, r14
    254c:	ff 24       	eor	r15, r15
    254e:	87 01       	movw	r16, r14
    2550:	cd cd       	rjmp	.-1126   	; 0x20ec <signalIoctl+0x5a>
   static inline t_gpioError __attribute__ ( (always_inline)) hal_gpioOn(
   t_gpioPort t_port, uint8_t    c_pin)
   {
      t_gpioError t_err = GPIO_PASSED;

      switch( t_port)
    2552:	82 30       	cpi	r24, 0x02	; 2
    2554:	09 f4       	brne	.+2      	; 0x2558 <signalIoctl+0x4c6>
    2556:	18 c5       	rjmp	.+2608   	; 0x2f88 <signalIoctl+0xef6>
    2558:	83 30       	cpi	r24, 0x03	; 3
    255a:	08 f0       	brcs	.+2      	; 0x255e <signalIoctl+0x4cc>
    255c:	d3 c1       	rjmp	.+934    	; 0x2904 <signalIoctl+0x872>
    255e:	88 23       	and	r24, r24
    2560:	09 f4       	brne	.+2      	; 0x2564 <signalIoctl+0x4d2>
    2562:	06 c5       	rjmp	.+2572   	; 0x2f70 <signalIoctl+0xede>
    2564:	81 30       	cpi	r24, 0x01	; 1
    2566:	09 f0       	breq	.+2      	; 0x256a <signalIoctl+0x4d8>
    2568:	1f ce       	rjmp	.-962    	; 0x21a8 <signalIoctl+0x116>
         case GPIO_PORTB:

            /*---------------------------------------------------------------*
             * Make sure the requested pin is configured as an output
             *---------------------------------------------------------------*/
            if( !(PORTB.DIR & c_pin))
    256a:	80 91 20 06 	lds	r24, 0x0620
    256e:	89 23       	and	r24, r25
    2570:	09 f4       	brne	.+2      	; 0x2574 <signalIoctl+0x4e2>
    2572:	1a ce       	rjmp	.-972    	; 0x21a8 <signalIoctl+0x116>
               t_err = GPIO_PIN_IS_INPUT;
            else
               PORTB.OUTSET = c_pin;
    2574:	e0 e2       	ldi	r30, 0x20	; 32
    2576:	f6 e0       	ldi	r31, 0x06	; 6
    2578:	95 83       	std	Z+5, r25	; 0x05
    257a:	ee 24       	eor	r14, r14
    257c:	ff 24       	eor	r15, r15
    257e:	87 01       	movw	r16, r14
    2580:	b5 cd       	rjmp	.-1174   	; 0x20ec <signalIoctl+0x5a>
   static inline t_gpioError __attribute__ ( (always_inline)) hal_gpioOn(
   t_gpioPort t_port, uint8_t    c_pin)
   {
      t_gpioError t_err = GPIO_PASSED;

      switch( t_port)
    2582:	82 30       	cpi	r24, 0x02	; 2
    2584:	09 f4       	brne	.+2      	; 0x2588 <signalIoctl+0x4f6>
    2586:	30 c5       	rjmp	.+2656   	; 0x2fe8 <signalIoctl+0xf56>
    2588:	83 30       	cpi	r24, 0x03	; 3
    258a:	08 f0       	brcs	.+2      	; 0x258e <signalIoctl+0x4fc>
    258c:	73 c1       	rjmp	.+742    	; 0x2874 <signalIoctl+0x7e2>
    258e:	88 23       	and	r24, r24
    2590:	09 f4       	brne	.+2      	; 0x2594 <signalIoctl+0x502>
    2592:	1e c5       	rjmp	.+2620   	; 0x2fd0 <signalIoctl+0xf3e>
    2594:	81 30       	cpi	r24, 0x01	; 1
    2596:	09 f0       	breq	.+2      	; 0x259a <signalIoctl+0x508>
    2598:	07 ce       	rjmp	.-1010   	; 0x21a8 <signalIoctl+0x116>
         case GPIO_PORTB:

            /*---------------------------------------------------------------*
             * Make sure the requested pin is configured as an output
             *---------------------------------------------------------------*/
            if( !(PORTB.DIR & c_pin))
    259a:	80 91 20 06 	lds	r24, 0x0620
    259e:	89 23       	and	r24, r25
    25a0:	09 f4       	brne	.+2      	; 0x25a4 <signalIoctl+0x512>
    25a2:	02 ce       	rjmp	.-1020   	; 0x21a8 <signalIoctl+0x116>
               t_err = GPIO_PIN_IS_INPUT;
            else
               PORTB.OUTSET = c_pin;
    25a4:	e0 e2       	ldi	r30, 0x20	; 32
    25a6:	f6 e0       	ldi	r31, 0x06	; 6
    25a8:	95 83       	std	Z+5, r25	; 0x05
    25aa:	ee 24       	eor	r14, r14
    25ac:	ff 24       	eor	r15, r15
    25ae:	87 01       	movw	r16, r14
    25b0:	9d cd       	rjmp	.-1222   	; 0x20ec <signalIoctl+0x5a>
   t_gpioPort t_port, uint8_t    c_pin)
   {

      t_gpioError t_err = GPIO_PASSED;

      switch( t_port)
    25b2:	82 30       	cpi	r24, 0x02	; 2
    25b4:	09 f4       	brne	.+2      	; 0x25b8 <signalIoctl+0x526>
    25b6:	4b c5       	rjmp	.+2710   	; 0x304e <signalIoctl+0xfbc>
    25b8:	83 30       	cpi	r24, 0x03	; 3
    25ba:	08 f0       	brcs	.+2      	; 0x25be <signalIoctl+0x52c>
    25bc:	eb c1       	rjmp	.+982    	; 0x2994 <signalIoctl+0x902>
    25be:	88 23       	and	r24, r24
    25c0:	09 f4       	brne	.+2      	; 0x25c4 <signalIoctl+0x532>
    25c2:	38 c5       	rjmp	.+2672   	; 0x3034 <signalIoctl+0xfa2>
    25c4:	81 30       	cpi	r24, 0x01	; 1
    25c6:	09 f0       	breq	.+2      	; 0x25ca <signalIoctl+0x538>
    25c8:	ef cd       	rjmp	.-1058   	; 0x21a8 <signalIoctl+0x116>
         case GPIO_PORTB:

            /*---------------------------------------------------------------*
             * Make sure the requested pin is configured as an output
             *---------------------------------------------------------------*/
            if( !(PORTB.DIR & c_pin))
    25ca:	80 91 20 06 	lds	r24, 0x0620
    25ce:	89 23       	and	r24, r25
    25d0:	09 f4       	brne	.+2      	; 0x25d4 <signalIoctl+0x542>
    25d2:	ea cd       	rjmp	.-1068   	; 0x21a8 <signalIoctl+0x116>
               t_err = GPIO_PIN_IS_INPUT;
            else
               PORTB.OUTCLR = c_pin;
    25d4:	e0 e2       	ldi	r30, 0x20	; 32
    25d6:	f6 e0       	ldi	r31, 0x06	; 6
    25d8:	96 83       	std	Z+6, r25	; 0x06
    25da:	ee 24       	eor	r14, r14
    25dc:	ff 24       	eor	r15, r15
    25de:	87 01       	movw	r16, r14
    25e0:	85 cd       	rjmp	.-1270   	; 0x20ec <signalIoctl+0x5a>
   static inline t_gpioError __attribute__ ( (always_inline)) hal_gpioOn(
   t_gpioPort t_port, uint8_t    c_pin)
   {
      t_gpioError t_err = GPIO_PASSED;

      switch( t_port)
    25e2:	82 30       	cpi	r24, 0x02	; 2
    25e4:	09 f4       	brne	.+2      	; 0x25e8 <signalIoctl+0x556>
    25e6:	80 c3       	rjmp	.+1792   	; 0x2ce8 <signalIoctl+0xc56>
    25e8:	83 30       	cpi	r24, 0x03	; 3
    25ea:	08 f0       	brcs	.+2      	; 0x25ee <signalIoctl+0x55c>
    25ec:	31 c1       	rjmp	.+610    	; 0x2850 <signalIoctl+0x7be>
    25ee:	88 23       	and	r24, r24
    25f0:	09 f4       	brne	.+2      	; 0x25f4 <signalIoctl+0x562>
    25f2:	6e c3       	rjmp	.+1756   	; 0x2cd0 <signalIoctl+0xc3e>
    25f4:	81 30       	cpi	r24, 0x01	; 1
    25f6:	09 f0       	breq	.+2      	; 0x25fa <signalIoctl+0x568>
    25f8:	d7 cd       	rjmp	.-1106   	; 0x21a8 <signalIoctl+0x116>
         case GPIO_PORTB:

            /*---------------------------------------------------------------*
             * Make sure the requested pin is configured as an output
             *---------------------------------------------------------------*/
            if( !(PORTB.DIR & c_pin))
    25fa:	80 91 20 06 	lds	r24, 0x0620
    25fe:	89 23       	and	r24, r25
    2600:	09 f4       	brne	.+2      	; 0x2604 <signalIoctl+0x572>
    2602:	d2 cd       	rjmp	.-1116   	; 0x21a8 <signalIoctl+0x116>
               t_err = GPIO_PIN_IS_INPUT;
            else
               PORTB.OUTSET = c_pin;
    2604:	e0 e2       	ldi	r30, 0x20	; 32
    2606:	f6 e0       	ldi	r31, 0x06	; 6
    2608:	95 83       	std	Z+5, r25	; 0x05
    260a:	ee 24       	eor	r14, r14
    260c:	ff 24       	eor	r15, r15
    260e:	87 01       	movw	r16, r14
    2610:	6d cd       	rjmp	.-1318   	; 0x20ec <signalIoctl+0x5a>
   static inline t_gpioError __attribute__ ( (always_inline)) hal_gpioOn(
   t_gpioPort t_port, uint8_t    c_pin)
   {
      t_gpioError t_err = GPIO_PASSED;

      switch( t_port)
    2612:	82 30       	cpi	r24, 0x02	; 2
    2614:	09 f4       	brne	.+2      	; 0x2618 <signalIoctl+0x586>
    2616:	48 c2       	rjmp	.+1168   	; 0x2aa8 <signalIoctl+0xa16>
    2618:	83 30       	cpi	r24, 0x03	; 3
    261a:	08 f0       	brcs	.+2      	; 0x261e <signalIoctl+0x58c>
    261c:	89 c0       	rjmp	.+274    	; 0x2730 <signalIoctl+0x69e>
    261e:	88 23       	and	r24, r24
    2620:	09 f4       	brne	.+2      	; 0x2624 <signalIoctl+0x592>
    2622:	36 c2       	rjmp	.+1132   	; 0x2a90 <signalIoctl+0x9fe>
    2624:	81 30       	cpi	r24, 0x01	; 1
    2626:	09 f0       	breq	.+2      	; 0x262a <signalIoctl+0x598>
    2628:	bf cd       	rjmp	.-1154   	; 0x21a8 <signalIoctl+0x116>
         case GPIO_PORTB:

            /*---------------------------------------------------------------*
             * Make sure the requested pin is configured as an output
             *---------------------------------------------------------------*/
            if( !(PORTB.DIR & c_pin))
    262a:	80 91 20 06 	lds	r24, 0x0620
    262e:	89 23       	and	r24, r25
    2630:	09 f4       	brne	.+2      	; 0x2634 <signalIoctl+0x5a2>
    2632:	ba cd       	rjmp	.-1164   	; 0x21a8 <signalIoctl+0x116>
               t_err = GPIO_PIN_IS_INPUT;
            else
               PORTB.OUTSET = c_pin;
    2634:	e0 e2       	ldi	r30, 0x20	; 32
    2636:	f6 e0       	ldi	r31, 0x06	; 6
    2638:	95 83       	std	Z+5, r25	; 0x05
    263a:	ee 24       	eor	r14, r14
    263c:	ff 24       	eor	r15, r15
    263e:	87 01       	movw	r16, r14
    2640:	55 cd       	rjmp	.-1366   	; 0x20ec <signalIoctl+0x5a>
   t_gpioPort t_port, uint8_t    c_pin)
   {

      t_gpioError t_err = GPIO_PASSED;

      switch( t_port)
    2642:	82 30       	cpi	r24, 0x02	; 2
    2644:	09 f4       	brne	.+2      	; 0x2648 <signalIoctl+0x5b6>
    2646:	90 c2       	rjmp	.+1312   	; 0x2b68 <signalIoctl+0xad6>
    2648:	83 30       	cpi	r24, 0x03	; 3
    264a:	08 f0       	brcs	.+2      	; 0x264e <signalIoctl+0x5bc>
    264c:	5f c0       	rjmp	.+190    	; 0x270c <signalIoctl+0x67a>
    264e:	88 23       	and	r24, r24
    2650:	09 f4       	brne	.+2      	; 0x2654 <signalIoctl+0x5c2>
    2652:	7e c2       	rjmp	.+1276   	; 0x2b50 <signalIoctl+0xabe>
    2654:	81 30       	cpi	r24, 0x01	; 1
    2656:	09 f0       	breq	.+2      	; 0x265a <signalIoctl+0x5c8>
    2658:	a7 cd       	rjmp	.-1202   	; 0x21a8 <signalIoctl+0x116>
         case GPIO_PORTB:

            /*---------------------------------------------------------------*
             * Make sure the requested pin is configured as an output
             *---------------------------------------------------------------*/
            if( !(PORTB.DIR & c_pin))
    265a:	80 91 20 06 	lds	r24, 0x0620
    265e:	89 23       	and	r24, r25
    2660:	09 f4       	brne	.+2      	; 0x2664 <signalIoctl+0x5d2>
    2662:	a2 cd       	rjmp	.-1212   	; 0x21a8 <signalIoctl+0x116>
               t_err = GPIO_PIN_IS_INPUT;
            else
               PORTB.OUTCLR = c_pin;
    2664:	e0 e2       	ldi	r30, 0x20	; 32
    2666:	f6 e0       	ldi	r31, 0x06	; 6
    2668:	96 83       	std	Z+6, r25	; 0x06
    266a:	ee 24       	eor	r14, r14
    266c:	ff 24       	eor	r15, r15
    266e:	87 01       	movw	r16, r14
    2670:	3d cd       	rjmp	.-1414   	; 0x20ec <signalIoctl+0x5a>
   static inline t_gpioError __attribute__ ( (always_inline)) hal_gpioToggle(
   t_gpioPort t_port, uint8_t    c_pin)
   {
      t_gpioError t_err = GPIO_PASSED;

      switch( t_port)
    2672:	88 30       	cpi	r24, 0x08	; 8
    2674:	09 f4       	brne	.+2      	; 0x2678 <signalIoctl+0x5e6>
    2676:	d0 c1       	rjmp	.+928    	; 0x2a18 <signalIoctl+0x986>
    2678:	89 30       	cpi	r24, 0x09	; 9
    267a:	20 f5       	brcc	.+72     	; 0x26c4 <signalIoctl+0x632>
    267c:	86 30       	cpi	r24, 0x06	; 6
    267e:	09 f4       	brne	.+2      	; 0x2682 <signalIoctl+0x5f0>
    2680:	e3 c1       	rjmp	.+966    	; 0x2a48 <signalIoctl+0x9b6>
    2682:	87 30       	cpi	r24, 0x07	; 7
    2684:	09 f0       	breq	.+2      	; 0x2688 <signalIoctl+0x5f6>
    2686:	90 cd       	rjmp	.-1248   	; 0x21a8 <signalIoctl+0x116>
         case GPIO_PORTJ:

            /*---------------------------------------------------------------*
             * Make sure the requested pin is configured as an output
             *---------------------------------------------------------------*/
            if( !(PORTJ.DIR & c_pin))
    2688:	80 91 00 07 	lds	r24, 0x0700
    268c:	89 23       	and	r24, r25
    268e:	09 f4       	brne	.+2      	; 0x2692 <signalIoctl+0x600>
    2690:	8b cd       	rjmp	.-1258   	; 0x21a8 <signalIoctl+0x116>
               t_err = GPIO_PIN_IS_INPUT;
            else
               PORTJ.OUTTGL = c_pin;
    2692:	e0 e0       	ldi	r30, 0x00	; 0
    2694:	f7 e0       	ldi	r31, 0x07	; 7
    2696:	97 83       	std	Z+7, r25	; 0x07
    2698:	ee 24       	eor	r14, r14
    269a:	ff 24       	eor	r15, r15
    269c:	87 01       	movw	r16, r14
    269e:	26 cd       	rjmp	.-1460   	; 0x20ec <signalIoctl+0x5a>
   static inline t_gpioError __attribute__ ( (always_inline)) hal_gpioToggle(
   t_gpioPort t_port, uint8_t    c_pin)
   {
      t_gpioError t_err = GPIO_PASSED;

      switch( t_port)
    26a0:	83 30       	cpi	r24, 0x03	; 3
    26a2:	09 f4       	brne	.+2      	; 0x26a6 <signalIoctl+0x614>
    26a4:	c5 c1       	rjmp	.+906    	; 0x2a30 <signalIoctl+0x99e>
    26a6:	84 30       	cpi	r24, 0x04	; 4
    26a8:	09 f0       	breq	.+2      	; 0x26ac <signalIoctl+0x61a>
    26aa:	7e cd       	rjmp	.-1284   	; 0x21a8 <signalIoctl+0x116>
         case GPIO_PORTE:

            /*---------------------------------------------------------------*
             * Make sure the requested pin is configured as an output
             *---------------------------------------------------------------*/
            if( !(PORTE.DIR & c_pin))
    26ac:	80 91 80 06 	lds	r24, 0x0680
    26b0:	89 23       	and	r24, r25
    26b2:	09 f4       	brne	.+2      	; 0x26b6 <signalIoctl+0x624>
    26b4:	79 cd       	rjmp	.-1294   	; 0x21a8 <signalIoctl+0x116>
               t_err = GPIO_PIN_IS_INPUT;
            else
               PORTE.OUTTGL = c_pin;
    26b6:	e0 e8       	ldi	r30, 0x80	; 128
    26b8:	f6 e0       	ldi	r31, 0x06	; 6
    26ba:	97 83       	std	Z+7, r25	; 0x07
    26bc:	ee 24       	eor	r14, r14
    26be:	ff 24       	eor	r15, r15
    26c0:	87 01       	movw	r16, r14
    26c2:	14 cd       	rjmp	.-1496   	; 0x20ec <signalIoctl+0x5a>
   static inline t_gpioError __attribute__ ( (always_inline)) hal_gpioToggle(
   t_gpioPort t_port, uint8_t    c_pin)
   {
      t_gpioError t_err = GPIO_PASSED;

      switch( t_port)
    26c4:	89 30       	cpi	r24, 0x09	; 9
    26c6:	09 f4       	brne	.+2      	; 0x26ca <signalIoctl+0x638>
    26c8:	13 c2       	rjmp	.+1062   	; 0x2af0 <signalIoctl+0xa5e>
    26ca:	8a 30       	cpi	r24, 0x0A	; 10
    26cc:	09 f0       	breq	.+2      	; 0x26d0 <signalIoctl+0x63e>
    26ce:	6c cd       	rjmp	.-1320   	; 0x21a8 <signalIoctl+0x116>
         case GPIO_PORTR:

            /*---------------------------------------------------------------*
             * Make sure the requested pin is configured as an output
             *---------------------------------------------------------------*/
            if( !(PORTR.DIR & c_pin))
    26d0:	80 91 e0 07 	lds	r24, 0x07E0
    26d4:	89 23       	and	r24, r25
    26d6:	09 f4       	brne	.+2      	; 0x26da <signalIoctl+0x648>
    26d8:	67 cd       	rjmp	.-1330   	; 0x21a8 <signalIoctl+0x116>
               t_err = GPIO_PIN_IS_INPUT;
            else
               PORTR.OUTTGL = c_pin;
    26da:	e0 ee       	ldi	r30, 0xE0	; 224
    26dc:	f7 e0       	ldi	r31, 0x07	; 7
    26de:	97 83       	std	Z+7, r25	; 0x07
    26e0:	ee 24       	eor	r14, r14
    26e2:	ff 24       	eor	r15, r15
    26e4:	87 01       	movw	r16, r14
    26e6:	02 cd       	rjmp	.-1532   	; 0x20ec <signalIoctl+0x5a>
   static inline t_gpioError __attribute__ ( (always_inline)) hal_gpioOn(
   t_gpioPort t_port, uint8_t    c_pin)
   {
      t_gpioError t_err = GPIO_PASSED;

      switch( t_port)
    26e8:	89 30       	cpi	r24, 0x09	; 9
    26ea:	09 f4       	brne	.+2      	; 0x26ee <signalIoctl+0x65c>
    26ec:	49 c2       	rjmp	.+1170   	; 0x2b80 <signalIoctl+0xaee>
    26ee:	8a 30       	cpi	r24, 0x0A	; 10
    26f0:	09 f0       	breq	.+2      	; 0x26f4 <signalIoctl+0x662>
    26f2:	5a cd       	rjmp	.-1356   	; 0x21a8 <signalIoctl+0x116>
         case GPIO_PORTR:

            /*---------------------------------------------------------------*
             * Make sure the requested pin is configured as an output
             *---------------------------------------------------------------*/
            if( !(PORTR.DIR & c_pin))
    26f4:	80 91 e0 07 	lds	r24, 0x07E0
    26f8:	89 23       	and	r24, r25
    26fa:	09 f4       	brne	.+2      	; 0x26fe <signalIoctl+0x66c>
    26fc:	55 cd       	rjmp	.-1366   	; 0x21a8 <signalIoctl+0x116>
               t_err = GPIO_PIN_IS_INPUT;
            else
               PORTR.OUTSET = c_pin;
    26fe:	e0 ee       	ldi	r30, 0xE0	; 224
    2700:	f7 e0       	ldi	r31, 0x07	; 7
    2702:	95 83       	std	Z+5, r25	; 0x05
    2704:	ee 24       	eor	r14, r14
    2706:	ff 24       	eor	r15, r15
    2708:	87 01       	movw	r16, r14
    270a:	f0 cc       	rjmp	.-1568   	; 0x20ec <signalIoctl+0x5a>
   t_gpioPort t_port, uint8_t    c_pin)
   {

      t_gpioError t_err = GPIO_PASSED;

      switch( t_port)
    270c:	83 30       	cpi	r24, 0x03	; 3
    270e:	09 f4       	brne	.+2      	; 0x2712 <signalIoctl+0x680>
    2710:	d7 c1       	rjmp	.+942    	; 0x2ac0 <signalIoctl+0xa2e>
    2712:	84 30       	cpi	r24, 0x04	; 4
    2714:	09 f0       	breq	.+2      	; 0x2718 <signalIoctl+0x686>
    2716:	48 cd       	rjmp	.-1392   	; 0x21a8 <signalIoctl+0x116>
         case GPIO_PORTE:

            /*---------------------------------------------------------------*
             * Make sure the requested pin is configured as an output
             *---------------------------------------------------------------*/
            if( !(PORTE.DIR & c_pin))
    2718:	80 91 80 06 	lds	r24, 0x0680
    271c:	89 23       	and	r24, r25
    271e:	09 f4       	brne	.+2      	; 0x2722 <signalIoctl+0x690>
    2720:	43 cd       	rjmp	.-1402   	; 0x21a8 <signalIoctl+0x116>
               t_err = GPIO_PIN_IS_INPUT;
            else
               PORTE.OUTCLR = c_pin;
    2722:	e0 e8       	ldi	r30, 0x80	; 128
    2724:	f6 e0       	ldi	r31, 0x06	; 6
    2726:	96 83       	std	Z+6, r25	; 0x06
    2728:	ee 24       	eor	r14, r14
    272a:	ff 24       	eor	r15, r15
    272c:	87 01       	movw	r16, r14
    272e:	de cc       	rjmp	.-1604   	; 0x20ec <signalIoctl+0x5a>
   static inline t_gpioError __attribute__ ( (always_inline)) hal_gpioOn(
   t_gpioPort t_port, uint8_t    c_pin)
   {
      t_gpioError t_err = GPIO_PASSED;

      switch( t_port)
    2730:	83 30       	cpi	r24, 0x03	; 3
    2732:	09 f4       	brne	.+2      	; 0x2736 <signalIoctl+0x6a4>
    2734:	3d c2       	rjmp	.+1146   	; 0x2bb0 <signalIoctl+0xb1e>
    2736:	84 30       	cpi	r24, 0x04	; 4
    2738:	09 f0       	breq	.+2      	; 0x273c <signalIoctl+0x6aa>
    273a:	36 cd       	rjmp	.-1428   	; 0x21a8 <signalIoctl+0x116>
         case GPIO_PORTE:

            /*---------------------------------------------------------------*
             * Make sure the requested pin is configured as an output
             *---------------------------------------------------------------*/
            if( !(PORTE.DIR & c_pin))
    273c:	80 91 80 06 	lds	r24, 0x0680
    2740:	89 23       	and	r24, r25
    2742:	09 f4       	brne	.+2      	; 0x2746 <signalIoctl+0x6b4>
    2744:	31 cd       	rjmp	.-1438   	; 0x21a8 <signalIoctl+0x116>
               t_err = GPIO_PIN_IS_INPUT;
            else
               PORTE.OUTSET = c_pin;
    2746:	e0 e8       	ldi	r30, 0x80	; 128
    2748:	f6 e0       	ldi	r31, 0x06	; 6
    274a:	95 83       	std	Z+5, r25	; 0x05
    274c:	ee 24       	eor	r14, r14
    274e:	ff 24       	eor	r15, r15
    2750:	87 01       	movw	r16, r14
    2752:	cc cc       	rjmp	.-1640   	; 0x20ec <signalIoctl+0x5a>
   t_gpioPort t_port, uint8_t    c_pin)
   {

      t_gpioError t_err = GPIO_PASSED;

      switch( t_port)
    2754:	89 30       	cpi	r24, 0x09	; 9
    2756:	09 f4       	brne	.+2      	; 0x275a <signalIoctl+0x6c8>
    2758:	e3 c1       	rjmp	.+966    	; 0x2b20 <signalIoctl+0xa8e>
    275a:	8a 30       	cpi	r24, 0x0A	; 10
    275c:	09 f0       	breq	.+2      	; 0x2760 <signalIoctl+0x6ce>
    275e:	24 cd       	rjmp	.-1464   	; 0x21a8 <signalIoctl+0x116>
         case GPIO_PORTR:

            /*---------------------------------------------------------------*
             * Make sure the requested pin is configured as an output
             *---------------------------------------------------------------*/
            if( !(PORTR.DIR & c_pin))
    2760:	80 91 e0 07 	lds	r24, 0x07E0
    2764:	89 23       	and	r24, r25
    2766:	09 f4       	brne	.+2      	; 0x276a <signalIoctl+0x6d8>
    2768:	1f cd       	rjmp	.-1474   	; 0x21a8 <signalIoctl+0x116>
               t_err = GPIO_PIN_IS_INPUT;
            else
               PORTR.OUTCLR = c_pin;
    276a:	e0 ee       	ldi	r30, 0xE0	; 224
    276c:	f7 e0       	ldi	r31, 0x07	; 7
    276e:	96 83       	std	Z+6, r25	; 0x06
    2770:	ee 24       	eor	r14, r14
    2772:	ff 24       	eor	r15, r15
    2774:	87 01       	movw	r16, r14
    2776:	ba cc       	rjmp	.-1676   	; 0x20ec <signalIoctl+0x5a>
   t_gpioPort t_port, uint8_t    c_pin)
   {

      t_gpioError t_err = GPIO_PASSED;

      switch( t_port)
    2778:	89 30       	cpi	r24, 0x09	; 9
    277a:	09 f4       	brne	.+2      	; 0x277e <signalIoctl+0x6ec>
    277c:	31 c2       	rjmp	.+1122   	; 0x2be0 <signalIoctl+0xb4e>
    277e:	8a 30       	cpi	r24, 0x0A	; 10
    2780:	09 f0       	breq	.+2      	; 0x2784 <signalIoctl+0x6f2>
    2782:	12 cd       	rjmp	.-1500   	; 0x21a8 <signalIoctl+0x116>
         case GPIO_PORTR:

            /*---------------------------------------------------------------*
             * Make sure the requested pin is configured as an output
             *---------------------------------------------------------------*/
            if( !(PORTR.DIR & c_pin))
    2784:	80 91 e0 07 	lds	r24, 0x07E0
    2788:	89 23       	and	r24, r25
    278a:	09 f4       	brne	.+2      	; 0x278e <signalIoctl+0x6fc>
    278c:	0d cd       	rjmp	.-1510   	; 0x21a8 <signalIoctl+0x116>
               t_err = GPIO_PIN_IS_INPUT;
            else
               PORTR.OUTCLR = c_pin;
    278e:	e0 ee       	ldi	r30, 0xE0	; 224
    2790:	f7 e0       	ldi	r31, 0x07	; 7
    2792:	96 83       	std	Z+6, r25	; 0x06
    2794:	ee 24       	eor	r14, r14
    2796:	ff 24       	eor	r15, r15
    2798:	87 01       	movw	r16, r14
    279a:	a8 cc       	rjmp	.-1712   	; 0x20ec <signalIoctl+0x5a>
   static inline t_gpioError __attribute__ ( (always_inline)) hal_gpioOn(
   t_gpioPort t_port, uint8_t    c_pin)
   {
      t_gpioError t_err = GPIO_PASSED;

      switch( t_port)
    279c:	89 30       	cpi	r24, 0x09	; 9
    279e:	09 f4       	brne	.+2      	; 0x27a2 <signalIoctl+0x710>
    27a0:	4f c2       	rjmp	.+1182   	; 0x2c40 <signalIoctl+0xbae>
    27a2:	8a 30       	cpi	r24, 0x0A	; 10
    27a4:	09 f0       	breq	.+2      	; 0x27a8 <signalIoctl+0x716>
    27a6:	00 cd       	rjmp	.-1536   	; 0x21a8 <signalIoctl+0x116>
         case GPIO_PORTR:

            /*---------------------------------------------------------------*
             * Make sure the requested pin is configured as an output
             *---------------------------------------------------------------*/
            if( !(PORTR.DIR & c_pin))
    27a8:	80 91 e0 07 	lds	r24, 0x07E0
    27ac:	89 23       	and	r24, r25
    27ae:	09 f4       	brne	.+2      	; 0x27b2 <signalIoctl+0x720>
    27b0:	fb cc       	rjmp	.-1546   	; 0x21a8 <signalIoctl+0x116>
               t_err = GPIO_PIN_IS_INPUT;
            else
               PORTR.OUTSET = c_pin;
    27b2:	e0 ee       	ldi	r30, 0xE0	; 224
    27b4:	f7 e0       	ldi	r31, 0x07	; 7
    27b6:	95 83       	std	Z+5, r25	; 0x05
    27b8:	ee 24       	eor	r14, r14
    27ba:	ff 24       	eor	r15, r15
    27bc:	87 01       	movw	r16, r14
    27be:	96 cc       	rjmp	.-1748   	; 0x20ec <signalIoctl+0x5a>
   static inline t_gpioError __attribute__ ( (always_inline)) hal_gpioToggle(
   t_gpioPort t_port, uint8_t    c_pin)
   {
      t_gpioError t_err = GPIO_PASSED;

      switch( t_port)
    27c0:	83 30       	cpi	r24, 0x03	; 3
    27c2:	09 f4       	brne	.+2      	; 0x27c6 <signalIoctl+0x734>
    27c4:	bd c3       	rjmp	.+1914   	; 0x2f40 <signalIoctl+0xeae>
    27c6:	84 30       	cpi	r24, 0x04	; 4
    27c8:	09 f0       	breq	.+2      	; 0x27cc <signalIoctl+0x73a>
    27ca:	ee cc       	rjmp	.-1572   	; 0x21a8 <signalIoctl+0x116>
         case GPIO_PORTE:

            /*---------------------------------------------------------------*
             * Make sure the requested pin is configured as an output
             *---------------------------------------------------------------*/
            if( !(PORTE.DIR & c_pin))
    27cc:	80 91 80 06 	lds	r24, 0x0680
    27d0:	89 23       	and	r24, r25
    27d2:	09 f4       	brne	.+2      	; 0x27d6 <signalIoctl+0x744>
    27d4:	e9 cc       	rjmp	.-1582   	; 0x21a8 <signalIoctl+0x116>
               t_err = GPIO_PIN_IS_INPUT;
            else
               PORTE.OUTTGL = c_pin;
    27d6:	e0 e8       	ldi	r30, 0x80	; 128
    27d8:	f6 e0       	ldi	r31, 0x06	; 6
    27da:	97 83       	std	Z+7, r25	; 0x07
    27dc:	ee 24       	eor	r14, r14
    27de:	ff 24       	eor	r15, r15
    27e0:	87 01       	movw	r16, r14
    27e2:	84 cc       	rjmp	.-1784   	; 0x20ec <signalIoctl+0x5a>
   static inline t_gpioError __attribute__ ( (always_inline)) hal_gpioToggle(
   t_gpioPort t_port, uint8_t    c_pin)
   {
      t_gpioError t_err = GPIO_PASSED;

      switch( t_port)
    27e4:	83 30       	cpi	r24, 0x03	; 3
    27e6:	09 f4       	brne	.+2      	; 0x27ea <signalIoctl+0x758>
    27e8:	eb c2       	rjmp	.+1494   	; 0x2dc0 <signalIoctl+0xd2e>
    27ea:	84 30       	cpi	r24, 0x04	; 4
    27ec:	09 f0       	breq	.+2      	; 0x27f0 <signalIoctl+0x75e>
    27ee:	dc cc       	rjmp	.-1608   	; 0x21a8 <signalIoctl+0x116>
         case GPIO_PORTE:

            /*---------------------------------------------------------------*
             * Make sure the requested pin is configured as an output
             *---------------------------------------------------------------*/
            if( !(PORTE.DIR & c_pin))
    27f0:	80 91 80 06 	lds	r24, 0x0680
    27f4:	89 23       	and	r24, r25
    27f6:	09 f4       	brne	.+2      	; 0x27fa <signalIoctl+0x768>
    27f8:	d7 cc       	rjmp	.-1618   	; 0x21a8 <signalIoctl+0x116>
               t_err = GPIO_PIN_IS_INPUT;
            else
               PORTE.OUTTGL = c_pin;
    27fa:	e0 e8       	ldi	r30, 0x80	; 128
    27fc:	f6 e0       	ldi	r31, 0x06	; 6
    27fe:	97 83       	std	Z+7, r25	; 0x07
    2800:	ee 24       	eor	r14, r14
    2802:	ff 24       	eor	r15, r15
    2804:	87 01       	movw	r16, r14
    2806:	72 cc       	rjmp	.-1820   	; 0x20ec <signalIoctl+0x5a>
   t_gpioPort t_port, uint8_t    c_pin)
   {

      t_gpioError t_err = GPIO_PASSED;

      switch( t_port)
    2808:	83 30       	cpi	r24, 0x03	; 3
    280a:	09 f4       	brne	.+2      	; 0x280e <signalIoctl+0x77c>
    280c:	62 c4       	rjmp	.+2244   	; 0x30d2 <signalIoctl+0x1040>
    280e:	84 30       	cpi	r24, 0x04	; 4
    2810:	09 f0       	breq	.+2      	; 0x2814 <signalIoctl+0x782>
    2812:	ca cc       	rjmp	.-1644   	; 0x21a8 <signalIoctl+0x116>
         case GPIO_PORTE:

            /*---------------------------------------------------------------*
             * Make sure the requested pin is configured as an output
             *---------------------------------------------------------------*/
            if( !(PORTE.DIR & c_pin))
    2814:	80 91 80 06 	lds	r24, 0x0680
    2818:	89 23       	and	r24, r25
    281a:	09 f4       	brne	.+2      	; 0x281e <signalIoctl+0x78c>
    281c:	c5 cc       	rjmp	.-1654   	; 0x21a8 <signalIoctl+0x116>
               t_err = GPIO_PIN_IS_INPUT;
            else
               PORTE.OUTCLR = c_pin;
    281e:	e0 e8       	ldi	r30, 0x80	; 128
    2820:	f6 e0       	ldi	r31, 0x06	; 6
    2822:	96 83       	std	Z+6, r25	; 0x06
    2824:	ee 24       	eor	r14, r14
    2826:	ff 24       	eor	r15, r15
    2828:	87 01       	movw	r16, r14
    282a:	60 cc       	rjmp	.-1856   	; 0x20ec <signalIoctl+0x5a>
   t_gpioPort t_port, uint8_t    c_pin)
   {

      t_gpioError t_err = GPIO_PASSED;

      switch( t_port)
    282c:	83 30       	cpi	r24, 0x03	; 3
    282e:	09 f4       	brne	.+2      	; 0x2832 <signalIoctl+0x7a0>
    2830:	67 c2       	rjmp	.+1230   	; 0x2d00 <signalIoctl+0xc6e>
    2832:	84 30       	cpi	r24, 0x04	; 4
    2834:	09 f0       	breq	.+2      	; 0x2838 <signalIoctl+0x7a6>
    2836:	b8 cc       	rjmp	.-1680   	; 0x21a8 <signalIoctl+0x116>
         case GPIO_PORTE:

            /*---------------------------------------------------------------*
             * Make sure the requested pin is configured as an output
             *---------------------------------------------------------------*/
            if( !(PORTE.DIR & c_pin))
    2838:	80 91 80 06 	lds	r24, 0x0680
    283c:	89 23       	and	r24, r25
    283e:	09 f4       	brne	.+2      	; 0x2842 <signalIoctl+0x7b0>
    2840:	b3 cc       	rjmp	.-1690   	; 0x21a8 <signalIoctl+0x116>
               t_err = GPIO_PIN_IS_INPUT;
            else
               PORTE.OUTCLR = c_pin;
    2842:	e0 e8       	ldi	r30, 0x80	; 128
    2844:	f6 e0       	ldi	r31, 0x06	; 6
    2846:	96 83       	std	Z+6, r25	; 0x06
    2848:	ee 24       	eor	r14, r14
    284a:	ff 24       	eor	r15, r15
    284c:	87 01       	movw	r16, r14
    284e:	4e cc       	rjmp	.-1892   	; 0x20ec <signalIoctl+0x5a>
   static inline t_gpioError __attribute__ ( (always_inline)) hal_gpioOn(
   t_gpioPort t_port, uint8_t    c_pin)
   {
      t_gpioError t_err = GPIO_PASSED;

      switch( t_port)
    2850:	83 30       	cpi	r24, 0x03	; 3
    2852:	09 f4       	brne	.+2      	; 0x2856 <signalIoctl+0x7c4>
    2854:	d5 c3       	rjmp	.+1962   	; 0x3000 <signalIoctl+0xf6e>
    2856:	84 30       	cpi	r24, 0x04	; 4
    2858:	09 f0       	breq	.+2      	; 0x285c <signalIoctl+0x7ca>
    285a:	a6 cc       	rjmp	.-1716   	; 0x21a8 <signalIoctl+0x116>
         case GPIO_PORTE:

            /*---------------------------------------------------------------*
             * Make sure the requested pin is configured as an output
             *---------------------------------------------------------------*/
            if( !(PORTE.DIR & c_pin))
    285c:	80 91 80 06 	lds	r24, 0x0680
    2860:	89 23       	and	r24, r25
    2862:	09 f4       	brne	.+2      	; 0x2866 <signalIoctl+0x7d4>
    2864:	a1 cc       	rjmp	.-1726   	; 0x21a8 <signalIoctl+0x116>
               t_err = GPIO_PIN_IS_INPUT;
            else
               PORTE.OUTSET = c_pin;
    2866:	e0 e8       	ldi	r30, 0x80	; 128
    2868:	f6 e0       	ldi	r31, 0x06	; 6
    286a:	95 83       	std	Z+5, r25	; 0x05
    286c:	ee 24       	eor	r14, r14
    286e:	ff 24       	eor	r15, r15
    2870:	87 01       	movw	r16, r14
    2872:	3c cc       	rjmp	.-1928   	; 0x20ec <signalIoctl+0x5a>
   static inline t_gpioError __attribute__ ( (always_inline)) hal_gpioOn(
   t_gpioPort t_port, uint8_t    c_pin)
   {
      t_gpioError t_err = GPIO_PASSED;

      switch( t_port)
    2874:	83 30       	cpi	r24, 0x03	; 3
    2876:	09 f4       	brne	.+2      	; 0x287a <signalIoctl+0x7e8>
    2878:	03 c3       	rjmp	.+1542   	; 0x2e80 <signalIoctl+0xdee>
    287a:	84 30       	cpi	r24, 0x04	; 4
    287c:	09 f0       	breq	.+2      	; 0x2880 <signalIoctl+0x7ee>
    287e:	94 cc       	rjmp	.-1752   	; 0x21a8 <signalIoctl+0x116>
         case GPIO_PORTE:

            /*---------------------------------------------------------------*
             * Make sure the requested pin is configured as an output
             *---------------------------------------------------------------*/
            if( !(PORTE.DIR & c_pin))
    2880:	80 91 80 06 	lds	r24, 0x0680
    2884:	89 23       	and	r24, r25
    2886:	09 f4       	brne	.+2      	; 0x288a <signalIoctl+0x7f8>
    2888:	8f cc       	rjmp	.-1762   	; 0x21a8 <signalIoctl+0x116>
               t_err = GPIO_PIN_IS_INPUT;
            else
               PORTE.OUTSET = c_pin;
    288a:	e0 e8       	ldi	r30, 0x80	; 128
    288c:	f6 e0       	ldi	r31, 0x06	; 6
    288e:	95 83       	std	Z+5, r25	; 0x05
    2890:	ee 24       	eor	r14, r14
    2892:	ff 24       	eor	r15, r15
    2894:	87 01       	movw	r16, r14
    2896:	2a cc       	rjmp	.-1964   	; 0x20ec <signalIoctl+0x5a>
   static inline t_gpioError __attribute__ ( (always_inline)) hal_gpioToggle(
   t_gpioPort t_port, uint8_t    c_pin)
   {
      t_gpioError t_err = GPIO_PASSED;

      switch( t_port)
    2898:	89 30       	cpi	r24, 0x09	; 9
    289a:	09 f4       	brne	.+2      	; 0x289e <signalIoctl+0x80c>
    289c:	8a c4       	rjmp	.+2324   	; 0x31b2 <signalIoctl+0x1120>
    289e:	8a 30       	cpi	r24, 0x0A	; 10
    28a0:	09 f0       	breq	.+2      	; 0x28a4 <signalIoctl+0x812>
    28a2:	82 cc       	rjmp	.-1788   	; 0x21a8 <signalIoctl+0x116>
         case GPIO_PORTR:

            /*---------------------------------------------------------------*
             * Make sure the requested pin is configured as an output
             *---------------------------------------------------------------*/
            if( !(PORTR.DIR & c_pin))
    28a4:	80 91 e0 07 	lds	r24, 0x07E0
    28a8:	89 23       	and	r24, r25
    28aa:	09 f4       	brne	.+2      	; 0x28ae <signalIoctl+0x81c>
    28ac:	7d cc       	rjmp	.-1798   	; 0x21a8 <signalIoctl+0x116>
               t_err = GPIO_PIN_IS_INPUT;
            else
               PORTR.OUTTGL = c_pin;
    28ae:	e0 ee       	ldi	r30, 0xE0	; 224
    28b0:	f7 e0       	ldi	r31, 0x07	; 7
    28b2:	97 83       	std	Z+7, r25	; 0x07
    28b4:	ee 24       	eor	r14, r14
    28b6:	ff 24       	eor	r15, r15
    28b8:	87 01       	movw	r16, r14
    28ba:	18 cc       	rjmp	.-2000   	; 0x20ec <signalIoctl+0x5a>
   static inline t_gpioError __attribute__ ( (always_inline)) hal_gpioToggle(
   t_gpioPort t_port, uint8_t    c_pin)
   {
      t_gpioError t_err = GPIO_PASSED;

      switch( t_port)
    28bc:	83 30       	cpi	r24, 0x03	; 3
    28be:	09 f4       	brne	.+2      	; 0x28c2 <signalIoctl+0x830>
    28c0:	ef c1       	rjmp	.+990    	; 0x2ca0 <signalIoctl+0xc0e>
    28c2:	84 30       	cpi	r24, 0x04	; 4
    28c4:	09 f0       	breq	.+2      	; 0x28c8 <signalIoctl+0x836>
    28c6:	70 cc       	rjmp	.-1824   	; 0x21a8 <signalIoctl+0x116>
         case GPIO_PORTE:

            /*---------------------------------------------------------------*
             * Make sure the requested pin is configured as an output
             *---------------------------------------------------------------*/
            if( !(PORTE.DIR & c_pin))
    28c8:	80 91 80 06 	lds	r24, 0x0680
    28cc:	89 23       	and	r24, r25
    28ce:	09 f4       	brne	.+2      	; 0x28d2 <signalIoctl+0x840>
    28d0:	6b cc       	rjmp	.-1834   	; 0x21a8 <signalIoctl+0x116>
               t_err = GPIO_PIN_IS_INPUT;
            else
               PORTE.OUTTGL = c_pin;
    28d2:	e0 e8       	ldi	r30, 0x80	; 128
    28d4:	f6 e0       	ldi	r31, 0x06	; 6
    28d6:	97 83       	std	Z+7, r25	; 0x07
    28d8:	ee 24       	eor	r14, r14
    28da:	ff 24       	eor	r15, r15
    28dc:	87 01       	movw	r16, r14
    28de:	06 cc       	rjmp	.-2036   	; 0x20ec <signalIoctl+0x5a>
   static inline t_gpioError __attribute__ ( (always_inline)) hal_gpioOn(
   t_gpioPort t_port, uint8_t    c_pin)
   {
      t_gpioError t_err = GPIO_PASSED;

      switch( t_port)
    28e0:	89 30       	cpi	r24, 0x09	; 9
    28e2:	09 f4       	brne	.+2      	; 0x28e6 <signalIoctl+0x854>
    28e4:	5d c3       	rjmp	.+1722   	; 0x2fa0 <signalIoctl+0xf0e>
    28e6:	8a 30       	cpi	r24, 0x0A	; 10
    28e8:	09 f0       	breq	.+2      	; 0x28ec <signalIoctl+0x85a>
    28ea:	5e cc       	rjmp	.-1860   	; 0x21a8 <signalIoctl+0x116>
         case GPIO_PORTR:

            /*---------------------------------------------------------------*
             * Make sure the requested pin is configured as an output
             *---------------------------------------------------------------*/
            if( !(PORTR.DIR & c_pin))
    28ec:	80 91 e0 07 	lds	r24, 0x07E0
    28f0:	89 23       	and	r24, r25
    28f2:	09 f4       	brne	.+2      	; 0x28f6 <signalIoctl+0x864>
    28f4:	59 cc       	rjmp	.-1870   	; 0x21a8 <signalIoctl+0x116>
               t_err = GPIO_PIN_IS_INPUT;
            else
               PORTR.OUTSET = c_pin;
    28f6:	e0 ee       	ldi	r30, 0xE0	; 224
    28f8:	f7 e0       	ldi	r31, 0x07	; 7
    28fa:	95 83       	std	Z+5, r25	; 0x05
    28fc:	ee 24       	eor	r14, r14
    28fe:	ff 24       	eor	r15, r15
    2900:	87 01       	movw	r16, r14
    2902:	f4 cb       	rjmp	.-2072   	; 0x20ec <signalIoctl+0x5a>
   static inline t_gpioError __attribute__ ( (always_inline)) hal_gpioOn(
   t_gpioPort t_port, uint8_t    c_pin)
   {
      t_gpioError t_err = GPIO_PASSED;

      switch( t_port)
    2904:	83 30       	cpi	r24, 0x03	; 3
    2906:	09 f4       	brne	.+2      	; 0x290a <signalIoctl+0x878>
    2908:	8b c2       	rjmp	.+1302   	; 0x2e20 <signalIoctl+0xd8e>
    290a:	84 30       	cpi	r24, 0x04	; 4
    290c:	09 f0       	breq	.+2      	; 0x2910 <signalIoctl+0x87e>
    290e:	4c cc       	rjmp	.-1896   	; 0x21a8 <signalIoctl+0x116>
         case GPIO_PORTE:

            /*---------------------------------------------------------------*
             * Make sure the requested pin is configured as an output
             *---------------------------------------------------------------*/
            if( !(PORTE.DIR & c_pin))
    2910:	80 91 80 06 	lds	r24, 0x0680
    2914:	89 23       	and	r24, r25
    2916:	09 f4       	brne	.+2      	; 0x291a <signalIoctl+0x888>
    2918:	47 cc       	rjmp	.-1906   	; 0x21a8 <signalIoctl+0x116>
               t_err = GPIO_PIN_IS_INPUT;
            else
               PORTE.OUTSET = c_pin;
    291a:	e0 e8       	ldi	r30, 0x80	; 128
    291c:	f6 e0       	ldi	r31, 0x06	; 6
    291e:	95 83       	std	Z+5, r25	; 0x05
    2920:	ee 24       	eor	r14, r14
    2922:	ff 24       	eor	r15, r15
    2924:	87 01       	movw	r16, r14
    2926:	e2 cb       	rjmp	.-2108   	; 0x20ec <signalIoctl+0x5a>
   static inline t_gpioError __attribute__ ( (always_inline)) hal_gpioOn(
   t_gpioPort t_port, uint8_t    c_pin)
   {
      t_gpioError t_err = GPIO_PASSED;

      switch( t_port)
    2928:	89 30       	cpi	r24, 0x09	; 9
    292a:	09 f4       	brne	.+2      	; 0x292e <signalIoctl+0x89c>
    292c:	0a c4       	rjmp	.+2068   	; 0x3142 <signalIoctl+0x10b0>
    292e:	8a 30       	cpi	r24, 0x0A	; 10
    2930:	09 f0       	breq	.+2      	; 0x2934 <signalIoctl+0x8a2>
    2932:	3a cc       	rjmp	.-1932   	; 0x21a8 <signalIoctl+0x116>
         case GPIO_PORTR:

            /*---------------------------------------------------------------*
             * Make sure the requested pin is configured as an output
             *---------------------------------------------------------------*/
            if( !(PORTR.DIR & c_pin))
    2934:	80 91 e0 07 	lds	r24, 0x07E0
    2938:	89 23       	and	r24, r25
    293a:	09 f4       	brne	.+2      	; 0x293e <signalIoctl+0x8ac>
    293c:	35 cc       	rjmp	.-1942   	; 0x21a8 <signalIoctl+0x116>
               t_err = GPIO_PIN_IS_INPUT;
            else
               PORTR.OUTSET = c_pin;
    293e:	e0 ee       	ldi	r30, 0xE0	; 224
    2940:	f7 e0       	ldi	r31, 0x07	; 7
    2942:	95 83       	std	Z+5, r25	; 0x05
    2944:	ee 24       	eor	r14, r14
    2946:	ff 24       	eor	r15, r15
    2948:	87 01       	movw	r16, r14
    294a:	d0 cb       	rjmp	.-2144   	; 0x20ec <signalIoctl+0x5a>
   static inline t_gpioError __attribute__ ( (always_inline)) hal_gpioToggle(
   t_gpioPort t_port, uint8_t    c_pin)
   {
      t_gpioError t_err = GPIO_PASSED;

      switch( t_port)
    294c:	89 30       	cpi	r24, 0x09	; 9
    294e:	09 f4       	brne	.+2      	; 0x2952 <signalIoctl+0x8c0>
    2950:	07 c2       	rjmp	.+1038   	; 0x2d60 <signalIoctl+0xcce>
    2952:	8a 30       	cpi	r24, 0x0A	; 10
    2954:	09 f0       	breq	.+2      	; 0x2958 <signalIoctl+0x8c6>
    2956:	28 cc       	rjmp	.-1968   	; 0x21a8 <signalIoctl+0x116>
         case GPIO_PORTR:

            /*---------------------------------------------------------------*
             * Make sure the requested pin is configured as an output
             *---------------------------------------------------------------*/
            if( !(PORTR.DIR & c_pin))
    2958:	80 91 e0 07 	lds	r24, 0x07E0
    295c:	89 23       	and	r24, r25
    295e:	09 f4       	brne	.+2      	; 0x2962 <signalIoctl+0x8d0>
    2960:	23 cc       	rjmp	.-1978   	; 0x21a8 <signalIoctl+0x116>
               t_err = GPIO_PIN_IS_INPUT;
            else
               PORTR.OUTTGL = c_pin;
    2962:	e0 ee       	ldi	r30, 0xE0	; 224
    2964:	f7 e0       	ldi	r31, 0x07	; 7
    2966:	97 83       	std	Z+7, r25	; 0x07
    2968:	ee 24       	eor	r14, r14
    296a:	ff 24       	eor	r15, r15
    296c:	87 01       	movw	r16, r14
    296e:	be cb       	rjmp	.-2180   	; 0x20ec <signalIoctl+0x5a>
   t_gpioPort t_port, uint8_t    c_pin)
   {

      t_gpioError t_err = GPIO_PASSED;

      switch( t_port)
    2970:	89 30       	cpi	r24, 0x09	; 9
    2972:	09 f4       	brne	.+2      	; 0x2976 <signalIoctl+0x8e4>
    2974:	79 c3       	rjmp	.+1778   	; 0x3068 <signalIoctl+0xfd6>
    2976:	8a 30       	cpi	r24, 0x0A	; 10
    2978:	09 f0       	breq	.+2      	; 0x297c <signalIoctl+0x8ea>
    297a:	16 cc       	rjmp	.-2004   	; 0x21a8 <signalIoctl+0x116>
         case GPIO_PORTR:

            /*---------------------------------------------------------------*
             * Make sure the requested pin is configured as an output
             *---------------------------------------------------------------*/
            if( !(PORTR.DIR & c_pin))
    297c:	80 91 e0 07 	lds	r24, 0x07E0
    2980:	89 23       	and	r24, r25
    2982:	09 f4       	brne	.+2      	; 0x2986 <signalIoctl+0x8f4>
    2984:	11 cc       	rjmp	.-2014   	; 0x21a8 <signalIoctl+0x116>
               t_err = GPIO_PIN_IS_INPUT;
            else
               PORTR.OUTCLR = c_pin;
    2986:	e0 ee       	ldi	r30, 0xE0	; 224
    2988:	f7 e0       	ldi	r31, 0x07	; 7
    298a:	96 83       	std	Z+6, r25	; 0x06
    298c:	ee 24       	eor	r14, r14
    298e:	ff 24       	eor	r15, r15
    2990:	87 01       	movw	r16, r14
    2992:	ac cb       	rjmp	.-2216   	; 0x20ec <signalIoctl+0x5a>
   t_gpioPort t_port, uint8_t    c_pin)
   {

      t_gpioError t_err = GPIO_PASSED;

      switch( t_port)
    2994:	83 30       	cpi	r24, 0x03	; 3
    2996:	09 f4       	brne	.+2      	; 0x299a <signalIoctl+0x908>
    2998:	a3 c2       	rjmp	.+1350   	; 0x2ee0 <signalIoctl+0xe4e>
    299a:	84 30       	cpi	r24, 0x04	; 4
    299c:	09 f0       	breq	.+2      	; 0x29a0 <signalIoctl+0x90e>
    299e:	04 cc       	rjmp	.-2040   	; 0x21a8 <signalIoctl+0x116>
         case GPIO_PORTE:

            /*---------------------------------------------------------------*
             * Make sure the requested pin is configured as an output
             *---------------------------------------------------------------*/
            if( !(PORTE.DIR & c_pin))
    29a0:	80 91 80 06 	lds	r24, 0x0680
    29a4:	89 23       	and	r24, r25
    29a6:	09 f4       	brne	.+2      	; 0x29aa <signalIoctl+0x918>
    29a8:	ff cb       	rjmp	.-2050   	; 0x21a8 <signalIoctl+0x116>
               t_err = GPIO_PIN_IS_INPUT;
            else
               PORTE.OUTCLR = c_pin;
    29aa:	e0 e8       	ldi	r30, 0x80	; 128
    29ac:	f6 e0       	ldi	r31, 0x06	; 6
    29ae:	96 83       	std	Z+6, r25	; 0x06
    29b0:	ee 24       	eor	r14, r14
    29b2:	ff 24       	eor	r15, r15
    29b4:	87 01       	movw	r16, r14
    29b6:	9a cb       	rjmp	.-2252   	; 0x20ec <signalIoctl+0x5a>
   static inline t_gpioError __attribute__ ( (always_inline)) hal_gpioToggle(
   t_gpioPort t_port, uint8_t    c_pin)
   {
      t_gpioError t_err = GPIO_PASSED;

      switch( t_port)
    29b8:	89 30       	cpi	r24, 0x09	; 9
    29ba:	09 f4       	brne	.+2      	; 0x29be <signalIoctl+0x92c>
    29bc:	32 c4       	rjmp	.+2148   	; 0x3222 <signalIoctl+0x1190>
    29be:	8a 30       	cpi	r24, 0x0A	; 10
    29c0:	09 f0       	breq	.+2      	; 0x29c4 <signalIoctl+0x932>
    29c2:	f2 cb       	rjmp	.-2076   	; 0x21a8 <signalIoctl+0x116>
         case GPIO_PORTR:

            /*---------------------------------------------------------------*
             * Make sure the requested pin is configured as an output
             *---------------------------------------------------------------*/
            if( !(PORTR.DIR & c_pin))
    29c4:	80 91 e0 07 	lds	r24, 0x07E0
    29c8:	89 23       	and	r24, r25
    29ca:	09 f4       	brne	.+2      	; 0x29ce <signalIoctl+0x93c>
    29cc:	ed cb       	rjmp	.-2086   	; 0x21a8 <signalIoctl+0x116>
               t_err = GPIO_PIN_IS_INPUT;
            else
               PORTR.OUTTGL = c_pin;
    29ce:	e0 ee       	ldi	r30, 0xE0	; 224
    29d0:	f7 e0       	ldi	r31, 0x07	; 7
    29d2:	97 83       	std	Z+7, r25	; 0x07
    29d4:	ee 24       	eor	r14, r14
    29d6:	ff 24       	eor	r15, r15
    29d8:	87 01       	movw	r16, r14
    29da:	88 cb       	rjmp	.-2288   	; 0x20ec <signalIoctl+0x5a>
   t_gpioPort t_port, uint8_t    c_pin)
   {

      t_gpioError t_err = GPIO_PASSED;

      switch( t_port)
    29dc:	89 30       	cpi	r24, 0x09	; 9
    29de:	09 f4       	brne	.+2      	; 0x29e2 <signalIoctl+0x950>
    29e0:	3f c0       	rjmp	.+126    	; 0x2a60 <signalIoctl+0x9ce>
    29e2:	8a 30       	cpi	r24, 0x0A	; 10
    29e4:	09 f0       	breq	.+2      	; 0x29e8 <signalIoctl+0x956>
    29e6:	e0 cb       	rjmp	.-2112   	; 0x21a8 <signalIoctl+0x116>
         case GPIO_PORTR:

            /*---------------------------------------------------------------*
             * Make sure the requested pin is configured as an output
             *---------------------------------------------------------------*/
            if( !(PORTR.DIR & c_pin))
    29e8:	80 91 e0 07 	lds	r24, 0x07E0
    29ec:	89 23       	and	r24, r25
    29ee:	09 f4       	brne	.+2      	; 0x29f2 <signalIoctl+0x960>
    29f0:	db cb       	rjmp	.-2122   	; 0x21a8 <signalIoctl+0x116>
               t_err = GPIO_PIN_IS_INPUT;
            else
               PORTR.OUTCLR = c_pin;
    29f2:	e0 ee       	ldi	r30, 0xE0	; 224
    29f4:	f7 e0       	ldi	r31, 0x07	; 7
    29f6:	96 83       	std	Z+6, r25	; 0x06
    29f8:	ee 24       	eor	r14, r14
    29fa:	ff 24       	eor	r15, r15
    29fc:	87 01       	movw	r16, r14
    29fe:	76 cb       	rjmp	.-2324   	; 0x20ec <signalIoctl+0x5a>
         case GPIO_PORTC:

            /*---------------------------------------------------------------*
             * Make sure the requested pin is configured as an output
             *---------------------------------------------------------------*/
            if( !(PORTC.DIR & c_pin))
    2a00:	80 91 40 06 	lds	r24, 0x0640
    2a04:	89 23       	and	r24, r25
    2a06:	09 f4       	brne	.+2      	; 0x2a0a <signalIoctl+0x978>
    2a08:	cf cb       	rjmp	.-2146   	; 0x21a8 <signalIoctl+0x116>
               t_err = GPIO_PIN_IS_INPUT;
            else
               PORTC.OUTTGL = c_pin;
    2a0a:	e0 e4       	ldi	r30, 0x40	; 64
    2a0c:	f6 e0       	ldi	r31, 0x06	; 6
    2a0e:	97 83       	std	Z+7, r25	; 0x07
    2a10:	ee 24       	eor	r14, r14
    2a12:	ff 24       	eor	r15, r15
    2a14:	87 01       	movw	r16, r14
    2a16:	6a cb       	rjmp	.-2348   	; 0x20ec <signalIoctl+0x5a>
         case GPIO_PORTK:

            /*---------------------------------------------------------------*
             * Make sure the requested pin is configured as an output
             *---------------------------------------------------------------*/
            if( !(PORTK.DIR & c_pin))
    2a18:	80 91 20 07 	lds	r24, 0x0720
    2a1c:	89 23       	and	r24, r25
    2a1e:	09 f4       	brne	.+2      	; 0x2a22 <signalIoctl+0x990>
    2a20:	c3 cb       	rjmp	.-2170   	; 0x21a8 <signalIoctl+0x116>
               t_err = GPIO_PIN_IS_INPUT;
            else
               PORTK.OUTTGL = c_pin;
    2a22:	e0 e2       	ldi	r30, 0x20	; 32
    2a24:	f7 e0       	ldi	r31, 0x07	; 7
    2a26:	97 83       	std	Z+7, r25	; 0x07
    2a28:	ee 24       	eor	r14, r14
    2a2a:	ff 24       	eor	r15, r15
    2a2c:	87 01       	movw	r16, r14
    2a2e:	5e cb       	rjmp	.-2372   	; 0x20ec <signalIoctl+0x5a>
         case GPIO_PORTD:

            /*---------------------------------------------------------------*
             * Make sure the requested pin is configured as an output
             *---------------------------------------------------------------*/
            if( !(PORTD.DIR & c_pin))
    2a30:	80 91 60 06 	lds	r24, 0x0660
    2a34:	89 23       	and	r24, r25
    2a36:	09 f4       	brne	.+2      	; 0x2a3a <signalIoctl+0x9a8>
    2a38:	b7 cb       	rjmp	.-2194   	; 0x21a8 <signalIoctl+0x116>
               t_err = GPIO_PIN_IS_INPUT;
            else
               PORTD.OUTTGL = c_pin;
    2a3a:	e0 e6       	ldi	r30, 0x60	; 96
    2a3c:	f6 e0       	ldi	r31, 0x06	; 6
    2a3e:	97 83       	std	Z+7, r25	; 0x07
    2a40:	ee 24       	eor	r14, r14
    2a42:	ff 24       	eor	r15, r15
    2a44:	87 01       	movw	r16, r14
    2a46:	52 cb       	rjmp	.-2396   	; 0x20ec <signalIoctl+0x5a>
         case GPIO_PORTH:

            /*---------------------------------------------------------------*
             * Make sure the requested pin is configured as an output
             *---------------------------------------------------------------*/
            if( !(PORTH.DIR & c_pin))
    2a48:	80 91 e0 06 	lds	r24, 0x06E0
    2a4c:	89 23       	and	r24, r25
    2a4e:	09 f4       	brne	.+2      	; 0x2a52 <signalIoctl+0x9c0>
    2a50:	ab cb       	rjmp	.-2218   	; 0x21a8 <signalIoctl+0x116>
               t_err = GPIO_PIN_IS_INPUT;
            else
               PORTH.OUTTGL = c_pin;
    2a52:	e0 ee       	ldi	r30, 0xE0	; 224
    2a54:	f6 e0       	ldi	r31, 0x06	; 6
    2a56:	97 83       	std	Z+7, r25	; 0x07
    2a58:	ee 24       	eor	r14, r14
    2a5a:	ff 24       	eor	r15, r15
    2a5c:	87 01       	movw	r16, r14
    2a5e:	46 cb       	rjmp	.-2420   	; 0x20ec <signalIoctl+0x5a>
         case GPIO_PORTQ:

            /*---------------------------------------------------------------*
             * Make sure the requested pin is configured as an output
             *---------------------------------------------------------------*/
            if( !(PORTQ.DIR & c_pin))
    2a60:	80 91 c0 07 	lds	r24, 0x07C0
    2a64:	89 23       	and	r24, r25
    2a66:	09 f4       	brne	.+2      	; 0x2a6a <signalIoctl+0x9d8>
    2a68:	9f cb       	rjmp	.-2242   	; 0x21a8 <signalIoctl+0x116>
               t_err = GPIO_PIN_IS_INPUT;
            else
               PORTQ.OUTCLR = c_pin;
    2a6a:	e0 ec       	ldi	r30, 0xC0	; 192
    2a6c:	f7 e0       	ldi	r31, 0x07	; 7
    2a6e:	96 83       	std	Z+6, r25	; 0x06
    2a70:	ee 24       	eor	r14, r14
    2a72:	ff 24       	eor	r15, r15
    2a74:	87 01       	movw	r16, r14
    2a76:	3a cb       	rjmp	.-2444   	; 0x20ec <signalIoctl+0x5a>
         case GPIO_PORTH:

            /*---------------------------------------------------------------*
             * Make sure the requested pin is configured as an output
             *---------------------------------------------------------------*/
            if( !(PORTH.DIR & c_pin))
    2a78:	80 91 e0 06 	lds	r24, 0x06E0
    2a7c:	89 23       	and	r24, r25
    2a7e:	09 f4       	brne	.+2      	; 0x2a82 <signalIoctl+0x9f0>
    2a80:	93 cb       	rjmp	.-2266   	; 0x21a8 <signalIoctl+0x116>
               t_err = GPIO_PIN_IS_INPUT;
            else
               PORTH.OUTCLR = c_pin;
    2a82:	e0 ee       	ldi	r30, 0xE0	; 224
    2a84:	f6 e0       	ldi	r31, 0x06	; 6
    2a86:	96 83       	std	Z+6, r25	; 0x06
    2a88:	ee 24       	eor	r14, r14
    2a8a:	ff 24       	eor	r15, r15
    2a8c:	87 01       	movw	r16, r14
    2a8e:	2e cb       	rjmp	.-2468   	; 0x20ec <signalIoctl+0x5a>
         case GPIO_PORTA:

            /*---------------------------------------------------------------*
             * Make sure the requested pin is configured as an output
             *---------------------------------------------------------------*/
            if( !(PORTA.DIR & c_pin))
    2a90:	80 91 00 06 	lds	r24, 0x0600
    2a94:	89 23       	and	r24, r25
    2a96:	09 f4       	brne	.+2      	; 0x2a9a <signalIoctl+0xa08>
    2a98:	87 cb       	rjmp	.-2290   	; 0x21a8 <signalIoctl+0x116>
               t_err = GPIO_PIN_IS_INPUT;
            else
               PORTA.OUTSET = c_pin;
    2a9a:	e0 e0       	ldi	r30, 0x00	; 0
    2a9c:	f6 e0       	ldi	r31, 0x06	; 6
    2a9e:	95 83       	std	Z+5, r25	; 0x05
    2aa0:	ee 24       	eor	r14, r14
    2aa2:	ff 24       	eor	r15, r15
    2aa4:	87 01       	movw	r16, r14
    2aa6:	22 cb       	rjmp	.-2492   	; 0x20ec <signalIoctl+0x5a>
         case GPIO_PORTC:

            /*---------------------------------------------------------------*
             * Make sure the requested pin is configured as an output
             *---------------------------------------------------------------*/
            if( !(PORTC.DIR & c_pin))
    2aa8:	80 91 40 06 	lds	r24, 0x0640
    2aac:	89 23       	and	r24, r25
    2aae:	09 f4       	brne	.+2      	; 0x2ab2 <signalIoctl+0xa20>
    2ab0:	7b cb       	rjmp	.-2314   	; 0x21a8 <signalIoctl+0x116>
               t_err = GPIO_PIN_IS_INPUT;
            else
               PORTC.OUTSET = c_pin;
    2ab2:	e0 e4       	ldi	r30, 0x40	; 64
    2ab4:	f6 e0       	ldi	r31, 0x06	; 6
    2ab6:	95 83       	std	Z+5, r25	; 0x05
    2ab8:	ee 24       	eor	r14, r14
    2aba:	ff 24       	eor	r15, r15
    2abc:	87 01       	movw	r16, r14
    2abe:	16 cb       	rjmp	.-2516   	; 0x20ec <signalIoctl+0x5a>
         case GPIO_PORTD:

            /*---------------------------------------------------------------*
             * Make sure the requested pin is configured as an output
             *---------------------------------------------------------------*/
            if( !(PORTD.DIR & c_pin))
    2ac0:	80 91 60 06 	lds	r24, 0x0660
    2ac4:	89 23       	and	r24, r25
    2ac6:	09 f4       	brne	.+2      	; 0x2aca <signalIoctl+0xa38>
    2ac8:	6f cb       	rjmp	.-2338   	; 0x21a8 <signalIoctl+0x116>
               t_err = GPIO_PIN_IS_INPUT;
            else
               PORTD.OUTCLR = c_pin;
    2aca:	e0 e6       	ldi	r30, 0x60	; 96
    2acc:	f6 e0       	ldi	r31, 0x06	; 6
    2ace:	96 83       	std	Z+6, r25	; 0x06
    2ad0:	ee 24       	eor	r14, r14
    2ad2:	ff 24       	eor	r15, r15
    2ad4:	87 01       	movw	r16, r14
    2ad6:	0a cb       	rjmp	.-2540   	; 0x20ec <signalIoctl+0x5a>
         case GPIO_PORTK:

            /*---------------------------------------------------------------*
             * Make sure the requested pin is configured as an output
             *---------------------------------------------------------------*/
            if( !(PORTK.DIR & c_pin))
    2ad8:	80 91 20 07 	lds	r24, 0x0720
    2adc:	89 23       	and	r24, r25
    2ade:	09 f4       	brne	.+2      	; 0x2ae2 <signalIoctl+0xa50>
    2ae0:	63 cb       	rjmp	.-2362   	; 0x21a8 <signalIoctl+0x116>
               t_err = GPIO_PIN_IS_INPUT;
            else
               PORTK.OUTSET = c_pin;
    2ae2:	e0 e2       	ldi	r30, 0x20	; 32
    2ae4:	f7 e0       	ldi	r31, 0x07	; 7
    2ae6:	95 83       	std	Z+5, r25	; 0x05
    2ae8:	ee 24       	eor	r14, r14
    2aea:	ff 24       	eor	r15, r15
    2aec:	87 01       	movw	r16, r14
    2aee:	fe ca       	rjmp	.-2564   	; 0x20ec <signalIoctl+0x5a>
         case GPIO_PORTQ:

            /*---------------------------------------------------------------*
             * Make sure the requested pin is configured as an output
             *---------------------------------------------------------------*/
            if( !(PORTQ.DIR & c_pin))
    2af0:	80 91 c0 07 	lds	r24, 0x07C0
    2af4:	89 23       	and	r24, r25
    2af6:	09 f4       	brne	.+2      	; 0x2afa <signalIoctl+0xa68>
    2af8:	57 cb       	rjmp	.-2386   	; 0x21a8 <signalIoctl+0x116>
               t_err = GPIO_PIN_IS_INPUT;
            else
               PORTQ.OUTTGL = c_pin;
    2afa:	e0 ec       	ldi	r30, 0xC0	; 192
    2afc:	f7 e0       	ldi	r31, 0x07	; 7
    2afe:	97 83       	std	Z+7, r25	; 0x07
    2b00:	ee 24       	eor	r14, r14
    2b02:	ff 24       	eor	r15, r15
    2b04:	87 01       	movw	r16, r14
    2b06:	f2 ca       	rjmp	.-2588   	; 0x20ec <signalIoctl+0x5a>
         case GPIO_PORTK:

            /*---------------------------------------------------------------*
             * Make sure the requested pin is configured as an output
             *---------------------------------------------------------------*/
            if( !(PORTK.DIR & c_pin))
    2b08:	80 91 20 07 	lds	r24, 0x0720
    2b0c:	89 23       	and	r24, r25
    2b0e:	09 f4       	brne	.+2      	; 0x2b12 <signalIoctl+0xa80>
    2b10:	4b cb       	rjmp	.-2410   	; 0x21a8 <signalIoctl+0x116>
               t_err = GPIO_PIN_IS_INPUT;
            else
               PORTK.OUTCLR = c_pin;
    2b12:	e0 e2       	ldi	r30, 0x20	; 32
    2b14:	f7 e0       	ldi	r31, 0x07	; 7
    2b16:	96 83       	std	Z+6, r25	; 0x06
    2b18:	ee 24       	eor	r14, r14
    2b1a:	ff 24       	eor	r15, r15
    2b1c:	87 01       	movw	r16, r14
    2b1e:	e6 ca       	rjmp	.-2612   	; 0x20ec <signalIoctl+0x5a>
         case GPIO_PORTQ:

            /*---------------------------------------------------------------*
             * Make sure the requested pin is configured as an output
             *---------------------------------------------------------------*/
            if( !(PORTQ.DIR & c_pin))
    2b20:	80 91 c0 07 	lds	r24, 0x07C0
    2b24:	89 23       	and	r24, r25
    2b26:	09 f4       	brne	.+2      	; 0x2b2a <signalIoctl+0xa98>
    2b28:	3f cb       	rjmp	.-2434   	; 0x21a8 <signalIoctl+0x116>
               t_err = GPIO_PIN_IS_INPUT;
            else
               PORTQ.OUTCLR = c_pin;
    2b2a:	e0 ec       	ldi	r30, 0xC0	; 192
    2b2c:	f7 e0       	ldi	r31, 0x07	; 7
    2b2e:	96 83       	std	Z+6, r25	; 0x06
    2b30:	ee 24       	eor	r14, r14
    2b32:	ff 24       	eor	r15, r15
    2b34:	87 01       	movw	r16, r14
    2b36:	da ca       	rjmp	.-2636   	; 0x20ec <signalIoctl+0x5a>
         case GPIO_PORTF:

            /*---------------------------------------------------------------*
             * Make sure the requested pin is configured as an output
             *---------------------------------------------------------------*/
            if( !(PORTF.DIR & c_pin))
    2b38:	80 91 a0 06 	lds	r24, 0x06A0
    2b3c:	89 23       	and	r24, r25
    2b3e:	09 f4       	brne	.+2      	; 0x2b42 <signalIoctl+0xab0>
    2b40:	33 cb       	rjmp	.-2458   	; 0x21a8 <signalIoctl+0x116>
               t_err = GPIO_PIN_IS_INPUT;
            else
               PORTF.OUTCLR = c_pin;
    2b42:	e0 ea       	ldi	r30, 0xA0	; 160
    2b44:	f6 e0       	ldi	r31, 0x06	; 6
    2b46:	96 83       	std	Z+6, r25	; 0x06
    2b48:	ee 24       	eor	r14, r14
    2b4a:	ff 24       	eor	r15, r15
    2b4c:	87 01       	movw	r16, r14
    2b4e:	ce ca       	rjmp	.-2660   	; 0x20ec <signalIoctl+0x5a>
         case GPIO_PORTA:

            /*---------------------------------------------------------------*
             * Make sure the requested pin is configured as an output
             *---------------------------------------------------------------*/
            if( !(PORTA.DIR & c_pin))
    2b50:	80 91 00 06 	lds	r24, 0x0600
    2b54:	89 23       	and	r24, r25
    2b56:	09 f4       	brne	.+2      	; 0x2b5a <signalIoctl+0xac8>
    2b58:	27 cb       	rjmp	.-2482   	; 0x21a8 <signalIoctl+0x116>
               t_err = GPIO_PIN_IS_INPUT;
            else
               PORTA.OUTCLR = c_pin;
    2b5a:	e0 e0       	ldi	r30, 0x00	; 0
    2b5c:	f6 e0       	ldi	r31, 0x06	; 6
    2b5e:	96 83       	std	Z+6, r25	; 0x06
    2b60:	ee 24       	eor	r14, r14
    2b62:	ff 24       	eor	r15, r15
    2b64:	87 01       	movw	r16, r14
    2b66:	c2 ca       	rjmp	.-2684   	; 0x20ec <signalIoctl+0x5a>
         case GPIO_PORTC:

            /*---------------------------------------------------------------*
             * Make sure the requested pin is configured as an output
             *---------------------------------------------------------------*/
            if( !(PORTC.DIR & c_pin))
    2b68:	80 91 40 06 	lds	r24, 0x0640
    2b6c:	89 23       	and	r24, r25
    2b6e:	09 f4       	brne	.+2      	; 0x2b72 <signalIoctl+0xae0>
    2b70:	1b cb       	rjmp	.-2506   	; 0x21a8 <signalIoctl+0x116>
               t_err = GPIO_PIN_IS_INPUT;
            else
               PORTC.OUTCLR = c_pin;
    2b72:	e0 e4       	ldi	r30, 0x40	; 64
    2b74:	f6 e0       	ldi	r31, 0x06	; 6
    2b76:	96 83       	std	Z+6, r25	; 0x06
    2b78:	ee 24       	eor	r14, r14
    2b7a:	ff 24       	eor	r15, r15
    2b7c:	87 01       	movw	r16, r14
    2b7e:	b6 ca       	rjmp	.-2708   	; 0x20ec <signalIoctl+0x5a>
         case GPIO_PORTQ:

            /*---------------------------------------------------------------*
             * Make sure the requested pin is configured as an output
             *---------------------------------------------------------------*/
            if( !(PORTQ.DIR & c_pin))
    2b80:	80 91 c0 07 	lds	r24, 0x07C0
    2b84:	89 23       	and	r24, r25
    2b86:	09 f4       	brne	.+2      	; 0x2b8a <signalIoctl+0xaf8>
    2b88:	0f cb       	rjmp	.-2530   	; 0x21a8 <signalIoctl+0x116>
               t_err = GPIO_PIN_IS_INPUT;
            else
               PORTQ.OUTSET = c_pin;
    2b8a:	e0 ec       	ldi	r30, 0xC0	; 192
    2b8c:	f7 e0       	ldi	r31, 0x07	; 7
    2b8e:	95 83       	std	Z+5, r25	; 0x05
    2b90:	ee 24       	eor	r14, r14
    2b92:	ff 24       	eor	r15, r15
    2b94:	87 01       	movw	r16, r14
    2b96:	aa ca       	rjmp	.-2732   	; 0x20ec <signalIoctl+0x5a>
         case GPIO_PORTK:

            /*---------------------------------------------------------------*
             * Make sure the requested pin is configured as an output
             *---------------------------------------------------------------*/
            if( !(PORTK.DIR & c_pin))
    2b98:	80 91 20 07 	lds	r24, 0x0720
    2b9c:	89 23       	and	r24, r25
    2b9e:	09 f4       	brne	.+2      	; 0x2ba2 <signalIoctl+0xb10>
    2ba0:	03 cb       	rjmp	.-2554   	; 0x21a8 <signalIoctl+0x116>
               t_err = GPIO_PIN_IS_INPUT;
            else
               PORTK.OUTCLR = c_pin;
    2ba2:	e0 e2       	ldi	r30, 0x20	; 32
    2ba4:	f7 e0       	ldi	r31, 0x07	; 7
    2ba6:	96 83       	std	Z+6, r25	; 0x06
    2ba8:	ee 24       	eor	r14, r14
    2baa:	ff 24       	eor	r15, r15
    2bac:	87 01       	movw	r16, r14
    2bae:	9e ca       	rjmp	.-2756   	; 0x20ec <signalIoctl+0x5a>
         case GPIO_PORTD:

            /*---------------------------------------------------------------*
             * Make sure the requested pin is configured as an output
             *---------------------------------------------------------------*/
            if( !(PORTD.DIR & c_pin))
    2bb0:	80 91 60 06 	lds	r24, 0x0660
    2bb4:	89 23       	and	r24, r25
    2bb6:	09 f4       	brne	.+2      	; 0x2bba <signalIoctl+0xb28>
    2bb8:	f7 ca       	rjmp	.-2578   	; 0x21a8 <signalIoctl+0x116>
               t_err = GPIO_PIN_IS_INPUT;
            else
               PORTD.OUTSET = c_pin;
    2bba:	e0 e6       	ldi	r30, 0x60	; 96
    2bbc:	f6 e0       	ldi	r31, 0x06	; 6
    2bbe:	95 83       	std	Z+5, r25	; 0x05
    2bc0:	ee 24       	eor	r14, r14
    2bc2:	ff 24       	eor	r15, r15
    2bc4:	87 01       	movw	r16, r14
    2bc6:	92 ca       	rjmp	.-2780   	; 0x20ec <signalIoctl+0x5a>
         case GPIO_PORTK:

            /*---------------------------------------------------------------*
             * Make sure the requested pin is configured as an output
             *---------------------------------------------------------------*/
            if( !(PORTK.DIR & c_pin))
    2bc8:	80 91 20 07 	lds	r24, 0x0720
    2bcc:	89 23       	and	r24, r25
    2bce:	09 f4       	brne	.+2      	; 0x2bd2 <signalIoctl+0xb40>
    2bd0:	eb ca       	rjmp	.-2602   	; 0x21a8 <signalIoctl+0x116>
               t_err = GPIO_PIN_IS_INPUT;
            else
               PORTK.OUTSET = c_pin;
    2bd2:	e0 e2       	ldi	r30, 0x20	; 32
    2bd4:	f7 e0       	ldi	r31, 0x07	; 7
    2bd6:	95 83       	std	Z+5, r25	; 0x05
    2bd8:	ee 24       	eor	r14, r14
    2bda:	ff 24       	eor	r15, r15
    2bdc:	87 01       	movw	r16, r14
    2bde:	86 ca       	rjmp	.-2804   	; 0x20ec <signalIoctl+0x5a>
         case GPIO_PORTQ:

            /*---------------------------------------------------------------*
             * Make sure the requested pin is configured as an output
             *---------------------------------------------------------------*/
            if( !(PORTQ.DIR & c_pin))
    2be0:	80 91 c0 07 	lds	r24, 0x07C0
    2be4:	89 23       	and	r24, r25
    2be6:	09 f4       	brne	.+2      	; 0x2bea <signalIoctl+0xb58>
    2be8:	df ca       	rjmp	.-2626   	; 0x21a8 <signalIoctl+0x116>
               t_err = GPIO_PIN_IS_INPUT;
            else
               PORTQ.OUTCLR = c_pin;
    2bea:	e0 ec       	ldi	r30, 0xC0	; 192
    2bec:	f7 e0       	ldi	r31, 0x07	; 7
    2bee:	96 83       	std	Z+6, r25	; 0x06
    2bf0:	ee 24       	eor	r14, r14
    2bf2:	ff 24       	eor	r15, r15
    2bf4:	87 01       	movw	r16, r14
    2bf6:	7a ca       	rjmp	.-2828   	; 0x20ec <signalIoctl+0x5a>
         case GPIO_PORTF:

            /*---------------------------------------------------------------*
             * Make sure the requested pin is configured as an output
             *---------------------------------------------------------------*/
            if( !(PORTF.DIR & c_pin))
    2bf8:	80 91 a0 06 	lds	r24, 0x06A0
    2bfc:	89 23       	and	r24, r25
    2bfe:	09 f4       	brne	.+2      	; 0x2c02 <signalIoctl+0xb70>
    2c00:	d3 ca       	rjmp	.-2650   	; 0x21a8 <signalIoctl+0x116>
               t_err = GPIO_PIN_IS_INPUT;
            else
               PORTF.OUTTGL = c_pin;
    2c02:	e0 ea       	ldi	r30, 0xA0	; 160
    2c04:	f6 e0       	ldi	r31, 0x06	; 6
    2c06:	97 83       	std	Z+7, r25	; 0x07
    2c08:	ee 24       	eor	r14, r14
    2c0a:	ff 24       	eor	r15, r15
    2c0c:	87 01       	movw	r16, r14
    2c0e:	6e ca       	rjmp	.-2852   	; 0x20ec <signalIoctl+0x5a>
         case GPIO_PORTA:

            /*---------------------------------------------------------------*
             * Make sure the requested pin is configured as an output
             *---------------------------------------------------------------*/
            if( !(PORTA.DIR & c_pin))
    2c10:	80 91 00 06 	lds	r24, 0x0600
    2c14:	89 23       	and	r24, r25
    2c16:	09 f4       	brne	.+2      	; 0x2c1a <signalIoctl+0xb88>
    2c18:	c7 ca       	rjmp	.-2674   	; 0x21a8 <signalIoctl+0x116>
               t_err = GPIO_PIN_IS_INPUT;
            else
               PORTA.OUTTGL = c_pin;
    2c1a:	e0 e0       	ldi	r30, 0x00	; 0
    2c1c:	f6 e0       	ldi	r31, 0x06	; 6
    2c1e:	97 83       	std	Z+7, r25	; 0x07
    2c20:	ee 24       	eor	r14, r14
    2c22:	ff 24       	eor	r15, r15
    2c24:	87 01       	movw	r16, r14
    2c26:	62 ca       	rjmp	.-2876   	; 0x20ec <signalIoctl+0x5a>
         case GPIO_PORTC:

            /*---------------------------------------------------------------*
             * Make sure the requested pin is configured as an output
             *---------------------------------------------------------------*/
            if( !(PORTC.DIR & c_pin))
    2c28:	80 91 40 06 	lds	r24, 0x0640
    2c2c:	89 23       	and	r24, r25
    2c2e:	09 f4       	brne	.+2      	; 0x2c32 <signalIoctl+0xba0>
    2c30:	bb ca       	rjmp	.-2698   	; 0x21a8 <signalIoctl+0x116>
               t_err = GPIO_PIN_IS_INPUT;
            else
               PORTC.OUTTGL = c_pin;
    2c32:	e0 e4       	ldi	r30, 0x40	; 64
    2c34:	f6 e0       	ldi	r31, 0x06	; 6
    2c36:	97 83       	std	Z+7, r25	; 0x07
    2c38:	ee 24       	eor	r14, r14
    2c3a:	ff 24       	eor	r15, r15
    2c3c:	87 01       	movw	r16, r14
    2c3e:	56 ca       	rjmp	.-2900   	; 0x20ec <signalIoctl+0x5a>
         case GPIO_PORTQ:

            /*---------------------------------------------------------------*
             * Make sure the requested pin is configured as an output
             *---------------------------------------------------------------*/
            if( !(PORTQ.DIR & c_pin))
    2c40:	80 91 c0 07 	lds	r24, 0x07C0
    2c44:	89 23       	and	r24, r25
    2c46:	09 f4       	brne	.+2      	; 0x2c4a <signalIoctl+0xbb8>
    2c48:	af ca       	rjmp	.-2722   	; 0x21a8 <signalIoctl+0x116>
               t_err = GPIO_PIN_IS_INPUT;
            else
               PORTQ.OUTSET = c_pin;
    2c4a:	e0 ec       	ldi	r30, 0xC0	; 192
    2c4c:	f7 e0       	ldi	r31, 0x07	; 7
    2c4e:	95 83       	std	Z+5, r25	; 0x05
    2c50:	ee 24       	eor	r14, r14
    2c52:	ff 24       	eor	r15, r15
    2c54:	87 01       	movw	r16, r14
    2c56:	4a ca       	rjmp	.-2924   	; 0x20ec <signalIoctl+0x5a>
         case GPIO_PORTF:

            /*---------------------------------------------------------------*
             * Make sure the requested pin is configured as an output
             *---------------------------------------------------------------*/
            if( !(PORTF.DIR & c_pin))
    2c58:	80 91 a0 06 	lds	r24, 0x06A0
    2c5c:	89 23       	and	r24, r25
    2c5e:	09 f4       	brne	.+2      	; 0x2c62 <signalIoctl+0xbd0>
    2c60:	a3 ca       	rjmp	.-2746   	; 0x21a8 <signalIoctl+0x116>
               t_err = GPIO_PIN_IS_INPUT;
            else
               PORTF.OUTTGL = c_pin;
    2c62:	e0 ea       	ldi	r30, 0xA0	; 160
    2c64:	f6 e0       	ldi	r31, 0x06	; 6
    2c66:	97 83       	std	Z+7, r25	; 0x07
    2c68:	ee 24       	eor	r14, r14
    2c6a:	ff 24       	eor	r15, r15
    2c6c:	87 01       	movw	r16, r14
    2c6e:	3e ca       	rjmp	.-2948   	; 0x20ec <signalIoctl+0x5a>
         case GPIO_PORTH:

            /*---------------------------------------------------------------*
             * Make sure the requested pin is configured as an output
             *---------------------------------------------------------------*/
            if( !(PORTH.DIR & c_pin))
    2c70:	80 91 e0 06 	lds	r24, 0x06E0
    2c74:	89 23       	and	r24, r25
    2c76:	09 f4       	brne	.+2      	; 0x2c7a <signalIoctl+0xbe8>
    2c78:	97 ca       	rjmp	.-2770   	; 0x21a8 <signalIoctl+0x116>
               t_err = GPIO_PIN_IS_INPUT;
            else
               PORTH.OUTSET = c_pin;
    2c7a:	e0 ee       	ldi	r30, 0xE0	; 224
    2c7c:	f6 e0       	ldi	r31, 0x06	; 6
    2c7e:	95 83       	std	Z+5, r25	; 0x05
    2c80:	ee 24       	eor	r14, r14
    2c82:	ff 24       	eor	r15, r15
    2c84:	87 01       	movw	r16, r14
    2c86:	32 ca       	rjmp	.-2972   	; 0x20ec <signalIoctl+0x5a>
         case GPIO_PORTK:

            /*---------------------------------------------------------------*
             * Make sure the requested pin is configured as an output
             *---------------------------------------------------------------*/
            if( !(PORTK.DIR & c_pin))
    2c88:	80 91 20 07 	lds	r24, 0x0720
    2c8c:	89 23       	and	r24, r25
    2c8e:	09 f4       	brne	.+2      	; 0x2c92 <signalIoctl+0xc00>
    2c90:	8b ca       	rjmp	.-2794   	; 0x21a8 <signalIoctl+0x116>
               t_err = GPIO_PIN_IS_INPUT;
            else
               PORTK.OUTSET = c_pin;
    2c92:	e0 e2       	ldi	r30, 0x20	; 32
    2c94:	f7 e0       	ldi	r31, 0x07	; 7
    2c96:	95 83       	std	Z+5, r25	; 0x05
    2c98:	ee 24       	eor	r14, r14
    2c9a:	ff 24       	eor	r15, r15
    2c9c:	87 01       	movw	r16, r14
    2c9e:	26 ca       	rjmp	.-2996   	; 0x20ec <signalIoctl+0x5a>
         case GPIO_PORTD:

            /*---------------------------------------------------------------*
             * Make sure the requested pin is configured as an output
             *---------------------------------------------------------------*/
            if( !(PORTD.DIR & c_pin))
    2ca0:	80 91 60 06 	lds	r24, 0x0660
    2ca4:	89 23       	and	r24, r25
    2ca6:	09 f4       	brne	.+2      	; 0x2caa <signalIoctl+0xc18>
    2ca8:	7f ca       	rjmp	.-2818   	; 0x21a8 <signalIoctl+0x116>
               t_err = GPIO_PIN_IS_INPUT;
            else
               PORTD.OUTTGL = c_pin;
    2caa:	e0 e6       	ldi	r30, 0x60	; 96
    2cac:	f6 e0       	ldi	r31, 0x06	; 6
    2cae:	97 83       	std	Z+7, r25	; 0x07
    2cb0:	ee 24       	eor	r14, r14
    2cb2:	ff 24       	eor	r15, r15
    2cb4:	87 01       	movw	r16, r14
    2cb6:	1a ca       	rjmp	.-3020   	; 0x20ec <signalIoctl+0x5a>
         case GPIO_PORTF:

            /*---------------------------------------------------------------*
             * Make sure the requested pin is configured as an output
             *---------------------------------------------------------------*/
            if( !(PORTF.DIR & c_pin))
    2cb8:	80 91 a0 06 	lds	r24, 0x06A0
    2cbc:	89 23       	and	r24, r25
    2cbe:	09 f4       	brne	.+2      	; 0x2cc2 <signalIoctl+0xc30>
    2cc0:	73 ca       	rjmp	.-2842   	; 0x21a8 <signalIoctl+0x116>
               t_err = GPIO_PIN_IS_INPUT;
            else
               PORTF.OUTCLR = c_pin;
    2cc2:	e0 ea       	ldi	r30, 0xA0	; 160
    2cc4:	f6 e0       	ldi	r31, 0x06	; 6
    2cc6:	96 83       	std	Z+6, r25	; 0x06
    2cc8:	ee 24       	eor	r14, r14
    2cca:	ff 24       	eor	r15, r15
    2ccc:	87 01       	movw	r16, r14
    2cce:	0e ca       	rjmp	.-3044   	; 0x20ec <signalIoctl+0x5a>
         case GPIO_PORTA:

            /*---------------------------------------------------------------*
             * Make sure the requested pin is configured as an output
             *---------------------------------------------------------------*/
            if( !(PORTA.DIR & c_pin))
    2cd0:	80 91 00 06 	lds	r24, 0x0600
    2cd4:	89 23       	and	r24, r25
    2cd6:	09 f4       	brne	.+2      	; 0x2cda <signalIoctl+0xc48>
    2cd8:	67 ca       	rjmp	.-2866   	; 0x21a8 <signalIoctl+0x116>
               t_err = GPIO_PIN_IS_INPUT;
            else
               PORTA.OUTSET = c_pin;
    2cda:	e0 e0       	ldi	r30, 0x00	; 0
    2cdc:	f6 e0       	ldi	r31, 0x06	; 6
    2cde:	95 83       	std	Z+5, r25	; 0x05
    2ce0:	ee 24       	eor	r14, r14
    2ce2:	ff 24       	eor	r15, r15
    2ce4:	87 01       	movw	r16, r14
    2ce6:	02 ca       	rjmp	.-3068   	; 0x20ec <signalIoctl+0x5a>
         case GPIO_PORTC:

            /*---------------------------------------------------------------*
             * Make sure the requested pin is configured as an output
             *---------------------------------------------------------------*/
            if( !(PORTC.DIR & c_pin))
    2ce8:	80 91 40 06 	lds	r24, 0x0640
    2cec:	89 23       	and	r24, r25
    2cee:	09 f4       	brne	.+2      	; 0x2cf2 <signalIoctl+0xc60>
    2cf0:	5b ca       	rjmp	.-2890   	; 0x21a8 <signalIoctl+0x116>
               t_err = GPIO_PIN_IS_INPUT;
            else
               PORTC.OUTSET = c_pin;
    2cf2:	e0 e4       	ldi	r30, 0x40	; 64
    2cf4:	f6 e0       	ldi	r31, 0x06	; 6
    2cf6:	95 83       	std	Z+5, r25	; 0x05
    2cf8:	ee 24       	eor	r14, r14
    2cfa:	ff 24       	eor	r15, r15
    2cfc:	87 01       	movw	r16, r14
    2cfe:	f6 c9       	rjmp	.-3092   	; 0x20ec <signalIoctl+0x5a>
         case GPIO_PORTD:

            /*---------------------------------------------------------------*
             * Make sure the requested pin is configured as an output
             *---------------------------------------------------------------*/
            if( !(PORTD.DIR & c_pin))
    2d00:	80 91 60 06 	lds	r24, 0x0660
    2d04:	89 23       	and	r24, r25
    2d06:	09 f4       	brne	.+2      	; 0x2d0a <signalIoctl+0xc78>
    2d08:	4f ca       	rjmp	.-2914   	; 0x21a8 <signalIoctl+0x116>
               t_err = GPIO_PIN_IS_INPUT;
            else
               PORTD.OUTCLR = c_pin;
    2d0a:	e0 e6       	ldi	r30, 0x60	; 96
    2d0c:	f6 e0       	ldi	r31, 0x06	; 6
    2d0e:	96 83       	std	Z+6, r25	; 0x06
    2d10:	ee 24       	eor	r14, r14
    2d12:	ff 24       	eor	r15, r15
    2d14:	87 01       	movw	r16, r14
    2d16:	ea c9       	rjmp	.-3116   	; 0x20ec <signalIoctl+0x5a>
         case GPIO_PORTH:

            /*---------------------------------------------------------------*
             * Make sure the requested pin is configured as an output
             *---------------------------------------------------------------*/
            if( !(PORTH.DIR & c_pin))
    2d18:	80 91 e0 06 	lds	r24, 0x06E0
    2d1c:	89 23       	and	r24, r25
    2d1e:	09 f4       	brne	.+2      	; 0x2d22 <signalIoctl+0xc90>
    2d20:	43 ca       	rjmp	.-2938   	; 0x21a8 <signalIoctl+0x116>
               t_err = GPIO_PIN_IS_INPUT;
            else
               PORTH.OUTCLR = c_pin;
    2d22:	e0 ee       	ldi	r30, 0xE0	; 224
    2d24:	f6 e0       	ldi	r31, 0x06	; 6
    2d26:	96 83       	std	Z+6, r25	; 0x06
    2d28:	ee 24       	eor	r14, r14
    2d2a:	ff 24       	eor	r15, r15
    2d2c:	87 01       	movw	r16, r14
    2d2e:	de c9       	rjmp	.-3140   	; 0x20ec <signalIoctl+0x5a>
         case GPIO_PORTH:

            /*---------------------------------------------------------------*
             * Make sure the requested pin is configured as an output
             *---------------------------------------------------------------*/
            if( !(PORTH.DIR & c_pin))
    2d30:	80 91 e0 06 	lds	r24, 0x06E0
    2d34:	89 23       	and	r24, r25
    2d36:	09 f4       	brne	.+2      	; 0x2d3a <signalIoctl+0xca8>
    2d38:	37 ca       	rjmp	.-2962   	; 0x21a8 <signalIoctl+0x116>
               t_err = GPIO_PIN_IS_INPUT;
            else
               PORTH.OUTCLR = c_pin;
    2d3a:	e0 ee       	ldi	r30, 0xE0	; 224
    2d3c:	f6 e0       	ldi	r31, 0x06	; 6
    2d3e:	96 83       	std	Z+6, r25	; 0x06
    2d40:	ee 24       	eor	r14, r14
    2d42:	ff 24       	eor	r15, r15
    2d44:	87 01       	movw	r16, r14
    2d46:	d2 c9       	rjmp	.-3164   	; 0x20ec <signalIoctl+0x5a>
         case GPIO_PORTK:

            /*---------------------------------------------------------------*
             * Make sure the requested pin is configured as an output
             *---------------------------------------------------------------*/
            if( !(PORTK.DIR & c_pin))
    2d48:	80 91 20 07 	lds	r24, 0x0720
    2d4c:	89 23       	and	r24, r25
    2d4e:	09 f4       	brne	.+2      	; 0x2d52 <signalIoctl+0xcc0>
    2d50:	2b ca       	rjmp	.-2986   	; 0x21a8 <signalIoctl+0x116>
               t_err = GPIO_PIN_IS_INPUT;
            else
               PORTK.OUTCLR = c_pin;
    2d52:	e0 e2       	ldi	r30, 0x20	; 32
    2d54:	f7 e0       	ldi	r31, 0x07	; 7
    2d56:	96 83       	std	Z+6, r25	; 0x06
    2d58:	ee 24       	eor	r14, r14
    2d5a:	ff 24       	eor	r15, r15
    2d5c:	87 01       	movw	r16, r14
    2d5e:	c6 c9       	rjmp	.-3188   	; 0x20ec <signalIoctl+0x5a>
         case GPIO_PORTQ:

            /*---------------------------------------------------------------*
             * Make sure the requested pin is configured as an output
             *---------------------------------------------------------------*/
            if( !(PORTQ.DIR & c_pin))
    2d60:	80 91 c0 07 	lds	r24, 0x07C0
    2d64:	89 23       	and	r24, r25
    2d66:	09 f4       	brne	.+2      	; 0x2d6a <signalIoctl+0xcd8>
    2d68:	1f ca       	rjmp	.-3010   	; 0x21a8 <signalIoctl+0x116>
               t_err = GPIO_PIN_IS_INPUT;
            else
               PORTQ.OUTTGL = c_pin;
    2d6a:	e0 ec       	ldi	r30, 0xC0	; 192
    2d6c:	f7 e0       	ldi	r31, 0x07	; 7
    2d6e:	97 83       	std	Z+7, r25	; 0x07
    2d70:	ee 24       	eor	r14, r14
    2d72:	ff 24       	eor	r15, r15
    2d74:	87 01       	movw	r16, r14
    2d76:	ba c9       	rjmp	.-3212   	; 0x20ec <signalIoctl+0x5a>
         case GPIO_PORTF:

            /*---------------------------------------------------------------*
             * Make sure the requested pin is configured as an output
             *---------------------------------------------------------------*/
            if( !(PORTF.DIR & c_pin))
    2d78:	80 91 a0 06 	lds	r24, 0x06A0
    2d7c:	89 23       	and	r24, r25
    2d7e:	09 f4       	brne	.+2      	; 0x2d82 <signalIoctl+0xcf0>
    2d80:	13 ca       	rjmp	.-3034   	; 0x21a8 <signalIoctl+0x116>
               t_err = GPIO_PIN_IS_INPUT;
            else
               PORTF.OUTSET = c_pin;
    2d82:	e0 ea       	ldi	r30, 0xA0	; 160
    2d84:	f6 e0       	ldi	r31, 0x06	; 6
    2d86:	95 83       	std	Z+5, r25	; 0x05
    2d88:	ee 24       	eor	r14, r14
    2d8a:	ff 24       	eor	r15, r15
    2d8c:	87 01       	movw	r16, r14
    2d8e:	ae c9       	rjmp	.-3236   	; 0x20ec <signalIoctl+0x5a>
         case GPIO_PORTA:

            /*---------------------------------------------------------------*
             * Make sure the requested pin is configured as an output
             *---------------------------------------------------------------*/
            if( !(PORTA.DIR & c_pin))
    2d90:	80 91 00 06 	lds	r24, 0x0600
    2d94:	89 23       	and	r24, r25
    2d96:	09 f4       	brne	.+2      	; 0x2d9a <signalIoctl+0xd08>
    2d98:	07 ca       	rjmp	.-3058   	; 0x21a8 <signalIoctl+0x116>
               t_err = GPIO_PIN_IS_INPUT;
            else
               PORTA.OUTCLR = c_pin;
    2d9a:	e0 e0       	ldi	r30, 0x00	; 0
    2d9c:	f6 e0       	ldi	r31, 0x06	; 6
    2d9e:	96 83       	std	Z+6, r25	; 0x06
    2da0:	ee 24       	eor	r14, r14
    2da2:	ff 24       	eor	r15, r15
    2da4:	87 01       	movw	r16, r14
    2da6:	a2 c9       	rjmp	.-3260   	; 0x20ec <signalIoctl+0x5a>
         case GPIO_PORTC:

            /*---------------------------------------------------------------*
             * Make sure the requested pin is configured as an output
             *---------------------------------------------------------------*/
            if( !(PORTC.DIR & c_pin))
    2da8:	80 91 40 06 	lds	r24, 0x0640
    2dac:	89 23       	and	r24, r25
    2dae:	09 f4       	brne	.+2      	; 0x2db2 <signalIoctl+0xd20>
    2db0:	fb c9       	rjmp	.-3082   	; 0x21a8 <signalIoctl+0x116>
               t_err = GPIO_PIN_IS_INPUT;
            else
               PORTC.OUTCLR = c_pin;
    2db2:	e0 e4       	ldi	r30, 0x40	; 64
    2db4:	f6 e0       	ldi	r31, 0x06	; 6
    2db6:	96 83       	std	Z+6, r25	; 0x06
    2db8:	ee 24       	eor	r14, r14
    2dba:	ff 24       	eor	r15, r15
    2dbc:	87 01       	movw	r16, r14
    2dbe:	96 c9       	rjmp	.-3284   	; 0x20ec <signalIoctl+0x5a>
         case GPIO_PORTD:

            /*---------------------------------------------------------------*
             * Make sure the requested pin is configured as an output
             *---------------------------------------------------------------*/
            if( !(PORTD.DIR & c_pin))
    2dc0:	80 91 60 06 	lds	r24, 0x0660
    2dc4:	89 23       	and	r24, r25
    2dc6:	09 f4       	brne	.+2      	; 0x2dca <signalIoctl+0xd38>
    2dc8:	ef c9       	rjmp	.-3106   	; 0x21a8 <signalIoctl+0x116>
               t_err = GPIO_PIN_IS_INPUT;
            else
               PORTD.OUTTGL = c_pin;
    2dca:	e0 e6       	ldi	r30, 0x60	; 96
    2dcc:	f6 e0       	ldi	r31, 0x06	; 6
    2dce:	97 83       	std	Z+7, r25	; 0x07
    2dd0:	ee 24       	eor	r14, r14
    2dd2:	ff 24       	eor	r15, r15
    2dd4:	87 01       	movw	r16, r14
    2dd6:	8a c9       	rjmp	.-3308   	; 0x20ec <signalIoctl+0x5a>
         case GPIO_PORTF:

            /*---------------------------------------------------------------*
             * Make sure the requested pin is configured as an output
             *---------------------------------------------------------------*/
            if( !(PORTF.DIR & c_pin))
    2dd8:	80 91 a0 06 	lds	r24, 0x06A0
    2ddc:	89 23       	and	r24, r25
    2dde:	09 f4       	brne	.+2      	; 0x2de2 <signalIoctl+0xd50>
    2de0:	e3 c9       	rjmp	.-3130   	; 0x21a8 <signalIoctl+0x116>
               t_err = GPIO_PIN_IS_INPUT;
            else
               PORTF.OUTSET = c_pin;
    2de2:	e0 ea       	ldi	r30, 0xA0	; 160
    2de4:	f6 e0       	ldi	r31, 0x06	; 6
    2de6:	95 83       	std	Z+5, r25	; 0x05
    2de8:	ee 24       	eor	r14, r14
    2dea:	ff 24       	eor	r15, r15
    2dec:	87 01       	movw	r16, r14
    2dee:	7e c9       	rjmp	.-3332   	; 0x20ec <signalIoctl+0x5a>
         case GPIO_PORTH:

            /*---------------------------------------------------------------*
             * Make sure the requested pin is configured as an output
             *---------------------------------------------------------------*/
            if( !(PORTH.DIR & c_pin))
    2df0:	80 91 e0 06 	lds	r24, 0x06E0
    2df4:	89 23       	and	r24, r25
    2df6:	09 f4       	brne	.+2      	; 0x2dfa <signalIoctl+0xd68>
    2df8:	d7 c9       	rjmp	.-3154   	; 0x21a8 <signalIoctl+0x116>
               t_err = GPIO_PIN_IS_INPUT;
            else
               PORTH.OUTSET = c_pin;
    2dfa:	e0 ee       	ldi	r30, 0xE0	; 224
    2dfc:	f6 e0       	ldi	r31, 0x06	; 6
    2dfe:	95 83       	std	Z+5, r25	; 0x05
    2e00:	ee 24       	eor	r14, r14
    2e02:	ff 24       	eor	r15, r15
    2e04:	87 01       	movw	r16, r14
    2e06:	72 c9       	rjmp	.-3356   	; 0x20ec <signalIoctl+0x5a>
         case GPIO_PORTK:

            /*---------------------------------------------------------------*
             * Make sure the requested pin is configured as an output
             *---------------------------------------------------------------*/
            if( !(PORTK.DIR & c_pin))
    2e08:	80 91 20 07 	lds	r24, 0x0720
    2e0c:	89 23       	and	r24, r25
    2e0e:	09 f4       	brne	.+2      	; 0x2e12 <signalIoctl+0xd80>
    2e10:	cb c9       	rjmp	.-3178   	; 0x21a8 <signalIoctl+0x116>
               t_err = GPIO_PIN_IS_INPUT;
            else
               PORTK.OUTSET = c_pin;
    2e12:	e0 e2       	ldi	r30, 0x20	; 32
    2e14:	f7 e0       	ldi	r31, 0x07	; 7
    2e16:	95 83       	std	Z+5, r25	; 0x05
    2e18:	ee 24       	eor	r14, r14
    2e1a:	ff 24       	eor	r15, r15
    2e1c:	87 01       	movw	r16, r14
    2e1e:	66 c9       	rjmp	.-3380   	; 0x20ec <signalIoctl+0x5a>
         case GPIO_PORTD:

            /*---------------------------------------------------------------*
             * Make sure the requested pin is configured as an output
             *---------------------------------------------------------------*/
            if( !(PORTD.DIR & c_pin))
    2e20:	80 91 60 06 	lds	r24, 0x0660
    2e24:	89 23       	and	r24, r25
    2e26:	09 f4       	brne	.+2      	; 0x2e2a <signalIoctl+0xd98>
    2e28:	bf c9       	rjmp	.-3202   	; 0x21a8 <signalIoctl+0x116>
               t_err = GPIO_PIN_IS_INPUT;
            else
               PORTD.OUTSET = c_pin;
    2e2a:	e0 e6       	ldi	r30, 0x60	; 96
    2e2c:	f6 e0       	ldi	r31, 0x06	; 6
    2e2e:	95 83       	std	Z+5, r25	; 0x05
    2e30:	ee 24       	eor	r14, r14
    2e32:	ff 24       	eor	r15, r15
    2e34:	87 01       	movw	r16, r14
    2e36:	5a c9       	rjmp	.-3404   	; 0x20ec <signalIoctl+0x5a>
         case GPIO_PORTF:

            /*---------------------------------------------------------------*
             * Make sure the requested pin is configured as an output
             *---------------------------------------------------------------*/
            if( !(PORTF.DIR & c_pin))
    2e38:	80 91 a0 06 	lds	r24, 0x06A0
    2e3c:	89 23       	and	r24, r25
    2e3e:	09 f4       	brne	.+2      	; 0x2e42 <signalIoctl+0xdb0>
    2e40:	b3 c9       	rjmp	.-3226   	; 0x21a8 <signalIoctl+0x116>
               t_err = GPIO_PIN_IS_INPUT;
            else
               PORTF.OUTSET = c_pin;
    2e42:	e0 ea       	ldi	r30, 0xA0	; 160
    2e44:	f6 e0       	ldi	r31, 0x06	; 6
    2e46:	95 83       	std	Z+5, r25	; 0x05
    2e48:	ee 24       	eor	r14, r14
    2e4a:	ff 24       	eor	r15, r15
    2e4c:	87 01       	movw	r16, r14
    2e4e:	4e c9       	rjmp	.-3428   	; 0x20ec <signalIoctl+0x5a>
         case GPIO_PORTH:

            /*---------------------------------------------------------------*
             * Make sure the requested pin is configured as an output
             *---------------------------------------------------------------*/
            if( !(PORTH.DIR & c_pin))
    2e50:	80 91 e0 06 	lds	r24, 0x06E0
    2e54:	89 23       	and	r24, r25
    2e56:	09 f4       	brne	.+2      	; 0x2e5a <signalIoctl+0xdc8>
    2e58:	a7 c9       	rjmp	.-3250   	; 0x21a8 <signalIoctl+0x116>
               t_err = GPIO_PIN_IS_INPUT;
            else
               PORTH.OUTTGL = c_pin;
    2e5a:	e0 ee       	ldi	r30, 0xE0	; 224
    2e5c:	f6 e0       	ldi	r31, 0x06	; 6
    2e5e:	97 83       	std	Z+7, r25	; 0x07
    2e60:	ee 24       	eor	r14, r14
    2e62:	ff 24       	eor	r15, r15
    2e64:	87 01       	movw	r16, r14
    2e66:	42 c9       	rjmp	.-3452   	; 0x20ec <signalIoctl+0x5a>
         case GPIO_PORTK:

            /*---------------------------------------------------------------*
             * Make sure the requested pin is configured as an output
             *---------------------------------------------------------------*/
            if( !(PORTK.DIR & c_pin))
    2e68:	80 91 20 07 	lds	r24, 0x0720
    2e6c:	89 23       	and	r24, r25
    2e6e:	09 f4       	brne	.+2      	; 0x2e72 <signalIoctl+0xde0>
    2e70:	9b c9       	rjmp	.-3274   	; 0x21a8 <signalIoctl+0x116>
               t_err = GPIO_PIN_IS_INPUT;
            else
               PORTK.OUTTGL = c_pin;
    2e72:	e0 e2       	ldi	r30, 0x20	; 32
    2e74:	f7 e0       	ldi	r31, 0x07	; 7
    2e76:	97 83       	std	Z+7, r25	; 0x07
    2e78:	ee 24       	eor	r14, r14
    2e7a:	ff 24       	eor	r15, r15
    2e7c:	87 01       	movw	r16, r14
    2e7e:	36 c9       	rjmp	.-3476   	; 0x20ec <signalIoctl+0x5a>
         case GPIO_PORTD:

            /*---------------------------------------------------------------*
             * Make sure the requested pin is configured as an output
             *---------------------------------------------------------------*/
            if( !(PORTD.DIR & c_pin))
    2e80:	80 91 60 06 	lds	r24, 0x0660
    2e84:	89 23       	and	r24, r25
    2e86:	09 f4       	brne	.+2      	; 0x2e8a <signalIoctl+0xdf8>
    2e88:	8f c9       	rjmp	.-3298   	; 0x21a8 <signalIoctl+0x116>
               t_err = GPIO_PIN_IS_INPUT;
            else
               PORTD.OUTSET = c_pin;
    2e8a:	e0 e6       	ldi	r30, 0x60	; 96
    2e8c:	f6 e0       	ldi	r31, 0x06	; 6
    2e8e:	95 83       	std	Z+5, r25	; 0x05
    2e90:	ee 24       	eor	r14, r14
    2e92:	ff 24       	eor	r15, r15
    2e94:	87 01       	movw	r16, r14
    2e96:	2a c9       	rjmp	.-3500   	; 0x20ec <signalIoctl+0x5a>
         case GPIO_PORTH:

            /*---------------------------------------------------------------*
             * Make sure the requested pin is configured as an output
             *---------------------------------------------------------------*/
            if( !(PORTH.DIR & c_pin))
    2e98:	80 91 e0 06 	lds	r24, 0x06E0
    2e9c:	89 23       	and	r24, r25
    2e9e:	09 f4       	brne	.+2      	; 0x2ea2 <signalIoctl+0xe10>
    2ea0:	83 c9       	rjmp	.-3322   	; 0x21a8 <signalIoctl+0x116>
               t_err = GPIO_PIN_IS_INPUT;
            else
               PORTH.OUTSET = c_pin;
    2ea2:	e0 ee       	ldi	r30, 0xE0	; 224
    2ea4:	f6 e0       	ldi	r31, 0x06	; 6
    2ea6:	95 83       	std	Z+5, r25	; 0x05
    2ea8:	ee 24       	eor	r14, r14
    2eaa:	ff 24       	eor	r15, r15
    2eac:	87 01       	movw	r16, r14
    2eae:	1e c9       	rjmp	.-3524   	; 0x20ec <signalIoctl+0x5a>
         case GPIO_PORTH:

            /*---------------------------------------------------------------*
             * Make sure the requested pin is configured as an output
             *---------------------------------------------------------------*/
            if( !(PORTH.DIR & c_pin))
    2eb0:	80 91 e0 06 	lds	r24, 0x06E0
    2eb4:	89 23       	and	r24, r25
    2eb6:	09 f4       	brne	.+2      	; 0x2eba <signalIoctl+0xe28>
    2eb8:	77 c9       	rjmp	.-3346   	; 0x21a8 <signalIoctl+0x116>
               t_err = GPIO_PIN_IS_INPUT;
            else
               PORTH.OUTTGL = c_pin;
    2eba:	e0 ee       	ldi	r30, 0xE0	; 224
    2ebc:	f6 e0       	ldi	r31, 0x06	; 6
    2ebe:	97 83       	std	Z+7, r25	; 0x07
    2ec0:	ee 24       	eor	r14, r14
    2ec2:	ff 24       	eor	r15, r15
    2ec4:	87 01       	movw	r16, r14
    2ec6:	12 c9       	rjmp	.-3548   	; 0x20ec <signalIoctl+0x5a>
         case GPIO_PORTK:

            /*---------------------------------------------------------------*
             * Make sure the requested pin is configured as an output
             *---------------------------------------------------------------*/
            if( !(PORTK.DIR & c_pin))
    2ec8:	80 91 20 07 	lds	r24, 0x0720
    2ecc:	89 23       	and	r24, r25
    2ece:	09 f4       	brne	.+2      	; 0x2ed2 <signalIoctl+0xe40>
    2ed0:	6b c9       	rjmp	.-3370   	; 0x21a8 <signalIoctl+0x116>
               t_err = GPIO_PIN_IS_INPUT;
            else
               PORTK.OUTTGL = c_pin;
    2ed2:	e0 e2       	ldi	r30, 0x20	; 32
    2ed4:	f7 e0       	ldi	r31, 0x07	; 7
    2ed6:	97 83       	std	Z+7, r25	; 0x07
    2ed8:	ee 24       	eor	r14, r14
    2eda:	ff 24       	eor	r15, r15
    2edc:	87 01       	movw	r16, r14
    2ede:	06 c9       	rjmp	.-3572   	; 0x20ec <signalIoctl+0x5a>
         case GPIO_PORTD:

            /*---------------------------------------------------------------*
             * Make sure the requested pin is configured as an output
             *---------------------------------------------------------------*/
            if( !(PORTD.DIR & c_pin))
    2ee0:	80 91 60 06 	lds	r24, 0x0660
    2ee4:	89 23       	and	r24, r25
    2ee6:	09 f4       	brne	.+2      	; 0x2eea <signalIoctl+0xe58>
    2ee8:	5f c9       	rjmp	.-3394   	; 0x21a8 <signalIoctl+0x116>
               t_err = GPIO_PIN_IS_INPUT;
            else
               PORTD.OUTCLR = c_pin;
    2eea:	e0 e6       	ldi	r30, 0x60	; 96
    2eec:	f6 e0       	ldi	r31, 0x06	; 6
    2eee:	96 83       	std	Z+6, r25	; 0x06
    2ef0:	ee 24       	eor	r14, r14
    2ef2:	ff 24       	eor	r15, r15
    2ef4:	87 01       	movw	r16, r14
    2ef6:	fa c8       	rjmp	.-3596   	; 0x20ec <signalIoctl+0x5a>
         case GPIO_PORTF:

            /*---------------------------------------------------------------*
             * Make sure the requested pin is configured as an output
             *---------------------------------------------------------------*/
            if( !(PORTF.DIR & c_pin))
    2ef8:	80 91 a0 06 	lds	r24, 0x06A0
    2efc:	89 23       	and	r24, r25
    2efe:	09 f4       	brne	.+2      	; 0x2f02 <signalIoctl+0xe70>
    2f00:	53 c9       	rjmp	.-3418   	; 0x21a8 <signalIoctl+0x116>
               t_err = GPIO_PIN_IS_INPUT;
            else
               PORTF.OUTTGL = c_pin;
    2f02:	e0 ea       	ldi	r30, 0xA0	; 160
    2f04:	f6 e0       	ldi	r31, 0x06	; 6
    2f06:	97 83       	std	Z+7, r25	; 0x07
    2f08:	ee 24       	eor	r14, r14
    2f0a:	ff 24       	eor	r15, r15
    2f0c:	87 01       	movw	r16, r14
    2f0e:	ee c8       	rjmp	.-3620   	; 0x20ec <signalIoctl+0x5a>
         case GPIO_PORTA:

            /*---------------------------------------------------------------*
             * Make sure the requested pin is configured as an output
             *---------------------------------------------------------------*/
            if( !(PORTA.DIR & c_pin))
    2f10:	80 91 00 06 	lds	r24, 0x0600
    2f14:	89 23       	and	r24, r25
    2f16:	09 f4       	brne	.+2      	; 0x2f1a <signalIoctl+0xe88>
    2f18:	47 c9       	rjmp	.-3442   	; 0x21a8 <signalIoctl+0x116>
               t_err = GPIO_PIN_IS_INPUT;
            else
               PORTA.OUTTGL = c_pin;
    2f1a:	e0 e0       	ldi	r30, 0x00	; 0
    2f1c:	f6 e0       	ldi	r31, 0x06	; 6
    2f1e:	97 83       	std	Z+7, r25	; 0x07
    2f20:	ee 24       	eor	r14, r14
    2f22:	ff 24       	eor	r15, r15
    2f24:	87 01       	movw	r16, r14
    2f26:	e2 c8       	rjmp	.-3644   	; 0x20ec <signalIoctl+0x5a>
         case GPIO_PORTC:

            /*---------------------------------------------------------------*
             * Make sure the requested pin is configured as an output
             *---------------------------------------------------------------*/
            if( !(PORTC.DIR & c_pin))
    2f28:	80 91 40 06 	lds	r24, 0x0640
    2f2c:	89 23       	and	r24, r25
    2f2e:	09 f4       	brne	.+2      	; 0x2f32 <signalIoctl+0xea0>
    2f30:	3b c9       	rjmp	.-3466   	; 0x21a8 <signalIoctl+0x116>
               t_err = GPIO_PIN_IS_INPUT;
            else
               PORTC.OUTTGL = c_pin;
    2f32:	e0 e4       	ldi	r30, 0x40	; 64
    2f34:	f6 e0       	ldi	r31, 0x06	; 6
    2f36:	97 83       	std	Z+7, r25	; 0x07
    2f38:	ee 24       	eor	r14, r14
    2f3a:	ff 24       	eor	r15, r15
    2f3c:	87 01       	movw	r16, r14
    2f3e:	d6 c8       	rjmp	.-3668   	; 0x20ec <signalIoctl+0x5a>
         case GPIO_PORTD:

            /*---------------------------------------------------------------*
             * Make sure the requested pin is configured as an output
             *---------------------------------------------------------------*/
            if( !(PORTD.DIR & c_pin))
    2f40:	80 91 60 06 	lds	r24, 0x0660
    2f44:	89 23       	and	r24, r25
    2f46:	09 f4       	brne	.+2      	; 0x2f4a <signalIoctl+0xeb8>
    2f48:	2f c9       	rjmp	.-3490   	; 0x21a8 <signalIoctl+0x116>
               t_err = GPIO_PIN_IS_INPUT;
            else
               PORTD.OUTTGL = c_pin;
    2f4a:	e0 e6       	ldi	r30, 0x60	; 96
    2f4c:	f6 e0       	ldi	r31, 0x06	; 6
    2f4e:	97 83       	std	Z+7, r25	; 0x07
    2f50:	ee 24       	eor	r14, r14
    2f52:	ff 24       	eor	r15, r15
    2f54:	87 01       	movw	r16, r14
    2f56:	ca c8       	rjmp	.-3692   	; 0x20ec <signalIoctl+0x5a>
         case GPIO_PORTH:

            /*---------------------------------------------------------------*
             * Make sure the requested pin is configured as an output
             *---------------------------------------------------------------*/
            if( !(PORTH.DIR & c_pin))
    2f58:	80 91 e0 06 	lds	r24, 0x06E0
    2f5c:	89 23       	and	r24, r25
    2f5e:	09 f4       	brne	.+2      	; 0x2f62 <signalIoctl+0xed0>
    2f60:	23 c9       	rjmp	.-3514   	; 0x21a8 <signalIoctl+0x116>
               t_err = GPIO_PIN_IS_INPUT;
            else
               PORTH.OUTSET = c_pin;
    2f62:	e0 ee       	ldi	r30, 0xE0	; 224
    2f64:	f6 e0       	ldi	r31, 0x06	; 6
    2f66:	95 83       	std	Z+5, r25	; 0x05
    2f68:	ee 24       	eor	r14, r14
    2f6a:	ff 24       	eor	r15, r15
    2f6c:	87 01       	movw	r16, r14
    2f6e:	be c8       	rjmp	.-3716   	; 0x20ec <signalIoctl+0x5a>
         case GPIO_PORTA:

            /*---------------------------------------------------------------*
             * Make sure the requested pin is configured as an output
             *---------------------------------------------------------------*/
            if( !(PORTA.DIR & c_pin))
    2f70:	80 91 00 06 	lds	r24, 0x0600
    2f74:	89 23       	and	r24, r25
    2f76:	09 f4       	brne	.+2      	; 0x2f7a <signalIoctl+0xee8>
    2f78:	17 c9       	rjmp	.-3538   	; 0x21a8 <signalIoctl+0x116>
               t_err = GPIO_PIN_IS_INPUT;
            else
               PORTA.OUTSET = c_pin;
    2f7a:	e0 e0       	ldi	r30, 0x00	; 0
    2f7c:	f6 e0       	ldi	r31, 0x06	; 6
    2f7e:	95 83       	std	Z+5, r25	; 0x05
    2f80:	ee 24       	eor	r14, r14
    2f82:	ff 24       	eor	r15, r15
    2f84:	87 01       	movw	r16, r14
    2f86:	b2 c8       	rjmp	.-3740   	; 0x20ec <signalIoctl+0x5a>
         case GPIO_PORTC:

            /*---------------------------------------------------------------*
             * Make sure the requested pin is configured as an output
             *---------------------------------------------------------------*/
            if( !(PORTC.DIR & c_pin))
    2f88:	80 91 40 06 	lds	r24, 0x0640
    2f8c:	89 23       	and	r24, r25
    2f8e:	09 f4       	brne	.+2      	; 0x2f92 <signalIoctl+0xf00>
    2f90:	0b c9       	rjmp	.-3562   	; 0x21a8 <signalIoctl+0x116>
               t_err = GPIO_PIN_IS_INPUT;
            else
               PORTC.OUTSET = c_pin;
    2f92:	e0 e4       	ldi	r30, 0x40	; 64
    2f94:	f6 e0       	ldi	r31, 0x06	; 6
    2f96:	95 83       	std	Z+5, r25	; 0x05
    2f98:	ee 24       	eor	r14, r14
    2f9a:	ff 24       	eor	r15, r15
    2f9c:	87 01       	movw	r16, r14
    2f9e:	a6 c8       	rjmp	.-3764   	; 0x20ec <signalIoctl+0x5a>
         case GPIO_PORTQ:

            /*---------------------------------------------------------------*
             * Make sure the requested pin is configured as an output
             *---------------------------------------------------------------*/
            if( !(PORTQ.DIR & c_pin))
    2fa0:	80 91 c0 07 	lds	r24, 0x07C0
    2fa4:	89 23       	and	r24, r25
    2fa6:	09 f4       	brne	.+2      	; 0x2faa <signalIoctl+0xf18>
    2fa8:	ff c8       	rjmp	.-3586   	; 0x21a8 <signalIoctl+0x116>
               t_err = GPIO_PIN_IS_INPUT;
            else
               PORTQ.OUTSET = c_pin;
    2faa:	e0 ec       	ldi	r30, 0xC0	; 192
    2fac:	f7 e0       	ldi	r31, 0x07	; 7
    2fae:	95 83       	std	Z+5, r25	; 0x05
    2fb0:	ee 24       	eor	r14, r14
    2fb2:	ff 24       	eor	r15, r15
    2fb4:	87 01       	movw	r16, r14
    2fb6:	9a c8       	rjmp	.-3788   	; 0x20ec <signalIoctl+0x5a>
         case GPIO_PORTF:

            /*---------------------------------------------------------------*
             * Make sure the requested pin is configured as an output
             *---------------------------------------------------------------*/
            if( !(PORTF.DIR & c_pin))
    2fb8:	80 91 a0 06 	lds	r24, 0x06A0
    2fbc:	89 23       	and	r24, r25
    2fbe:	09 f4       	brne	.+2      	; 0x2fc2 <signalIoctl+0xf30>
    2fc0:	f3 c8       	rjmp	.-3610   	; 0x21a8 <signalIoctl+0x116>
               t_err = GPIO_PIN_IS_INPUT;
            else
               PORTF.OUTSET = c_pin;
    2fc2:	e0 ea       	ldi	r30, 0xA0	; 160
    2fc4:	f6 e0       	ldi	r31, 0x06	; 6
    2fc6:	95 83       	std	Z+5, r25	; 0x05
    2fc8:	ee 24       	eor	r14, r14
    2fca:	ff 24       	eor	r15, r15
    2fcc:	87 01       	movw	r16, r14
    2fce:	8e c8       	rjmp	.-3812   	; 0x20ec <signalIoctl+0x5a>
         case GPIO_PORTA:

            /*---------------------------------------------------------------*
             * Make sure the requested pin is configured as an output
             *---------------------------------------------------------------*/
            if( !(PORTA.DIR & c_pin))
    2fd0:	80 91 00 06 	lds	r24, 0x0600
    2fd4:	89 23       	and	r24, r25
    2fd6:	09 f4       	brne	.+2      	; 0x2fda <signalIoctl+0xf48>
    2fd8:	e7 c8       	rjmp	.-3634   	; 0x21a8 <signalIoctl+0x116>
               t_err = GPIO_PIN_IS_INPUT;
            else
               PORTA.OUTSET = c_pin;
    2fda:	e0 e0       	ldi	r30, 0x00	; 0
    2fdc:	f6 e0       	ldi	r31, 0x06	; 6
    2fde:	95 83       	std	Z+5, r25	; 0x05
    2fe0:	ee 24       	eor	r14, r14
    2fe2:	ff 24       	eor	r15, r15
    2fe4:	87 01       	movw	r16, r14
    2fe6:	82 c8       	rjmp	.-3836   	; 0x20ec <signalIoctl+0x5a>
         case GPIO_PORTC:

            /*---------------------------------------------------------------*
             * Make sure the requested pin is configured as an output
             *---------------------------------------------------------------*/
            if( !(PORTC.DIR & c_pin))
    2fe8:	80 91 40 06 	lds	r24, 0x0640
    2fec:	89 23       	and	r24, r25
    2fee:	09 f4       	brne	.+2      	; 0x2ff2 <signalIoctl+0xf60>
    2ff0:	db c8       	rjmp	.-3658   	; 0x21a8 <signalIoctl+0x116>
               t_err = GPIO_PIN_IS_INPUT;
            else
               PORTC.OUTSET = c_pin;
    2ff2:	e0 e4       	ldi	r30, 0x40	; 64
    2ff4:	f6 e0       	ldi	r31, 0x06	; 6
    2ff6:	95 83       	std	Z+5, r25	; 0x05
    2ff8:	ee 24       	eor	r14, r14
    2ffa:	ff 24       	eor	r15, r15
    2ffc:	87 01       	movw	r16, r14
    2ffe:	76 c8       	rjmp	.-3860   	; 0x20ec <signalIoctl+0x5a>
         case GPIO_PORTD:

            /*---------------------------------------------------------------*
             * Make sure the requested pin is configured as an output
             *---------------------------------------------------------------*/
            if( !(PORTD.DIR & c_pin))
    3000:	80 91 60 06 	lds	r24, 0x0660
    3004:	89 23       	and	r24, r25
    3006:	09 f4       	brne	.+2      	; 0x300a <signalIoctl+0xf78>
    3008:	cf c8       	rjmp	.-3682   	; 0x21a8 <signalIoctl+0x116>
               t_err = GPIO_PIN_IS_INPUT;
            else
               PORTD.OUTSET = c_pin;
    300a:	e0 e6       	ldi	r30, 0x60	; 96
    300c:	f6 e0       	ldi	r31, 0x06	; 6
    300e:	95 83       	std	Z+5, r25	; 0x05
    3010:	ee 24       	eor	r14, r14
    3012:	ff 24       	eor	r15, r15
    3014:	87 01       	movw	r16, r14
    3016:	0c 94 76 10 	jmp	0x20ec	; 0x20ec <signalIoctl+0x5a>
         case GPIO_PORTF:

            /*---------------------------------------------------------------*
             * Make sure the requested pin is configured as an output
             *---------------------------------------------------------------*/
            if( !(PORTF.DIR & c_pin))
    301a:	80 91 a0 06 	lds	r24, 0x06A0
    301e:	89 23       	and	r24, r25
    3020:	09 f4       	brne	.+2      	; 0x3024 <signalIoctl+0xf92>
    3022:	c2 c8       	rjmp	.-3708   	; 0x21a8 <signalIoctl+0x116>
               t_err = GPIO_PIN_IS_INPUT;
            else
               PORTF.OUTCLR = c_pin;
    3024:	e0 ea       	ldi	r30, 0xA0	; 160
    3026:	f6 e0       	ldi	r31, 0x06	; 6
    3028:	96 83       	std	Z+6, r25	; 0x06
    302a:	ee 24       	eor	r14, r14
    302c:	ff 24       	eor	r15, r15
    302e:	87 01       	movw	r16, r14
    3030:	0c 94 76 10 	jmp	0x20ec	; 0x20ec <signalIoctl+0x5a>
         case GPIO_PORTA:

            /*---------------------------------------------------------------*
             * Make sure the requested pin is configured as an output
             *---------------------------------------------------------------*/
            if( !(PORTA.DIR & c_pin))
    3034:	80 91 00 06 	lds	r24, 0x0600
    3038:	89 23       	and	r24, r25
    303a:	09 f4       	brne	.+2      	; 0x303e <signalIoctl+0xfac>
    303c:	b5 c8       	rjmp	.-3734   	; 0x21a8 <signalIoctl+0x116>
               t_err = GPIO_PIN_IS_INPUT;
            else
               PORTA.OUTCLR = c_pin;
    303e:	e0 e0       	ldi	r30, 0x00	; 0
    3040:	f6 e0       	ldi	r31, 0x06	; 6
    3042:	96 83       	std	Z+6, r25	; 0x06
    3044:	ee 24       	eor	r14, r14
    3046:	ff 24       	eor	r15, r15
    3048:	87 01       	movw	r16, r14
    304a:	0c 94 76 10 	jmp	0x20ec	; 0x20ec <signalIoctl+0x5a>
         case GPIO_PORTC:

            /*---------------------------------------------------------------*
             * Make sure the requested pin is configured as an output
             *---------------------------------------------------------------*/
            if( !(PORTC.DIR & c_pin))
    304e:	80 91 40 06 	lds	r24, 0x0640
    3052:	89 23       	and	r24, r25
    3054:	09 f4       	brne	.+2      	; 0x3058 <signalIoctl+0xfc6>
    3056:	a8 c8       	rjmp	.-3760   	; 0x21a8 <signalIoctl+0x116>
               t_err = GPIO_PIN_IS_INPUT;
            else
               PORTC.OUTCLR = c_pin;
    3058:	e0 e4       	ldi	r30, 0x40	; 64
    305a:	f6 e0       	ldi	r31, 0x06	; 6
    305c:	96 83       	std	Z+6, r25	; 0x06
    305e:	ee 24       	eor	r14, r14
    3060:	ff 24       	eor	r15, r15
    3062:	87 01       	movw	r16, r14
    3064:	0c 94 76 10 	jmp	0x20ec	; 0x20ec <signalIoctl+0x5a>
         case GPIO_PORTQ:

            /*---------------------------------------------------------------*
             * Make sure the requested pin is configured as an output
             *---------------------------------------------------------------*/
            if( !(PORTQ.DIR & c_pin))
    3068:	80 91 c0 07 	lds	r24, 0x07C0
    306c:	89 23       	and	r24, r25
    306e:	09 f4       	brne	.+2      	; 0x3072 <signalIoctl+0xfe0>
    3070:	9b c8       	rjmp	.-3786   	; 0x21a8 <signalIoctl+0x116>
               t_err = GPIO_PIN_IS_INPUT;
            else
               PORTQ.OUTCLR = c_pin;
    3072:	e0 ec       	ldi	r30, 0xC0	; 192
    3074:	f7 e0       	ldi	r31, 0x07	; 7
    3076:	96 83       	std	Z+6, r25	; 0x06
    3078:	ee 24       	eor	r14, r14
    307a:	ff 24       	eor	r15, r15
    307c:	87 01       	movw	r16, r14
    307e:	0c 94 76 10 	jmp	0x20ec	; 0x20ec <signalIoctl+0x5a>
         case GPIO_PORTF:

            /*---------------------------------------------------------------*
             * Make sure the requested pin is configured as an output
             *---------------------------------------------------------------*/
            if( !(PORTF.DIR & c_pin))
    3082:	80 91 a0 06 	lds	r24, 0x06A0
    3086:	89 23       	and	r24, r25
    3088:	09 f4       	brne	.+2      	; 0x308c <signalIoctl+0xffa>
    308a:	8e c8       	rjmp	.-3812   	; 0x21a8 <signalIoctl+0x116>
               t_err = GPIO_PIN_IS_INPUT;
            else
               PORTF.OUTCLR = c_pin;
    308c:	e0 ea       	ldi	r30, 0xA0	; 160
    308e:	f6 e0       	ldi	r31, 0x06	; 6
    3090:	96 83       	std	Z+6, r25	; 0x06
    3092:	ee 24       	eor	r14, r14
    3094:	ff 24       	eor	r15, r15
    3096:	87 01       	movw	r16, r14
    3098:	0c 94 76 10 	jmp	0x20ec	; 0x20ec <signalIoctl+0x5a>
         case GPIO_PORTA:

            /*---------------------------------------------------------------*
             * Make sure the requested pin is configured as an output
             *---------------------------------------------------------------*/
            if( !(PORTA.DIR & c_pin))
    309c:	80 91 00 06 	lds	r24, 0x0600
    30a0:	89 23       	and	r24, r25
    30a2:	09 f4       	brne	.+2      	; 0x30a6 <signalIoctl+0x1014>
    30a4:	81 c8       	rjmp	.-3838   	; 0x21a8 <signalIoctl+0x116>
               t_err = GPIO_PIN_IS_INPUT;
            else
               PORTA.OUTCLR = c_pin;
    30a6:	e0 e0       	ldi	r30, 0x00	; 0
    30a8:	f6 e0       	ldi	r31, 0x06	; 6
    30aa:	96 83       	std	Z+6, r25	; 0x06
    30ac:	ee 24       	eor	r14, r14
    30ae:	ff 24       	eor	r15, r15
    30b0:	87 01       	movw	r16, r14
    30b2:	0c 94 76 10 	jmp	0x20ec	; 0x20ec <signalIoctl+0x5a>
         case GPIO_PORTC:

            /*---------------------------------------------------------------*
             * Make sure the requested pin is configured as an output
             *---------------------------------------------------------------*/
            if( !(PORTC.DIR & c_pin))
    30b6:	80 91 40 06 	lds	r24, 0x0640
    30ba:	89 23       	and	r24, r25
    30bc:	11 f4       	brne	.+4      	; 0x30c2 <signalIoctl+0x1030>
    30be:	0c 94 d4 10 	jmp	0x21a8	; 0x21a8 <signalIoctl+0x116>
               t_err = GPIO_PIN_IS_INPUT;
            else
               PORTC.OUTCLR = c_pin;
    30c2:	e0 e4       	ldi	r30, 0x40	; 64
    30c4:	f6 e0       	ldi	r31, 0x06	; 6
    30c6:	96 83       	std	Z+6, r25	; 0x06
    30c8:	ee 24       	eor	r14, r14
    30ca:	ff 24       	eor	r15, r15
    30cc:	87 01       	movw	r16, r14
    30ce:	0c 94 76 10 	jmp	0x20ec	; 0x20ec <signalIoctl+0x5a>
         case GPIO_PORTD:

            /*---------------------------------------------------------------*
             * Make sure the requested pin is configured as an output
             *---------------------------------------------------------------*/
            if( !(PORTD.DIR & c_pin))
    30d2:	80 91 60 06 	lds	r24, 0x0660
    30d6:	89 23       	and	r24, r25
    30d8:	11 f4       	brne	.+4      	; 0x30de <signalIoctl+0x104c>
    30da:	0c 94 d4 10 	jmp	0x21a8	; 0x21a8 <signalIoctl+0x116>
               t_err = GPIO_PIN_IS_INPUT;
            else
               PORTD.OUTCLR = c_pin;
    30de:	e0 e6       	ldi	r30, 0x60	; 96
    30e0:	f6 e0       	ldi	r31, 0x06	; 6
    30e2:	96 83       	std	Z+6, r25	; 0x06
    30e4:	ee 24       	eor	r14, r14
    30e6:	ff 24       	eor	r15, r15
    30e8:	87 01       	movw	r16, r14
    30ea:	0c 94 76 10 	jmp	0x20ec	; 0x20ec <signalIoctl+0x5a>
         case GPIO_PORTB:

            /*---------------------------------------------------------------*
             * Make sure the requested pin is configured as an output
             *---------------------------------------------------------------*/
            if( !(PORTB.DIR & c_pin))
    30ee:	80 91 20 06 	lds	r24, 0x0620
    30f2:	89 23       	and	r24, r25
    30f4:	11 f4       	brne	.+4      	; 0x30fa <signalIoctl+0x1068>
    30f6:	0c 94 d4 10 	jmp	0x21a8	; 0x21a8 <signalIoctl+0x116>
               t_err = GPIO_PIN_IS_INPUT;
            else
               PORTB.OUTTGL = c_pin;
    30fa:	e0 e2       	ldi	r30, 0x20	; 32
    30fc:	f6 e0       	ldi	r31, 0x06	; 6
    30fe:	97 83       	std	Z+7, r25	; 0x07
    3100:	ee 24       	eor	r14, r14
    3102:	ff 24       	eor	r15, r15
    3104:	87 01       	movw	r16, r14
    3106:	0c 94 76 10 	jmp	0x20ec	; 0x20ec <signalIoctl+0x5a>
         case GPIO_PORTA:

            /*---------------------------------------------------------------*
             * Make sure the requested pin is configured as an output
             *---------------------------------------------------------------*/
            if( !(PORTA.DIR & c_pin))
    310a:	80 91 00 06 	lds	r24, 0x0600
    310e:	89 23       	and	r24, r25
    3110:	11 f4       	brne	.+4      	; 0x3116 <signalIoctl+0x1084>
    3112:	0c 94 d4 10 	jmp	0x21a8	; 0x21a8 <signalIoctl+0x116>
               t_err = GPIO_PIN_IS_INPUT;
            else
               PORTA.OUTTGL = c_pin;
    3116:	e0 e0       	ldi	r30, 0x00	; 0
    3118:	f6 e0       	ldi	r31, 0x06	; 6
    311a:	97 83       	std	Z+7, r25	; 0x07
    311c:	ee 24       	eor	r14, r14
    311e:	ff 24       	eor	r15, r15
    3120:	87 01       	movw	r16, r14
    3122:	0c 94 76 10 	jmp	0x20ec	; 0x20ec <signalIoctl+0x5a>
         case GPIO_PORTK:

            /*---------------------------------------------------------------*
             * Make sure the requested pin is configured as an output
             *---------------------------------------------------------------*/
            if( !(PORTK.DIR & c_pin))
    3126:	80 91 20 07 	lds	r24, 0x0720
    312a:	89 23       	and	r24, r25
    312c:	11 f4       	brne	.+4      	; 0x3132 <signalIoctl+0x10a0>
    312e:	0c 94 d4 10 	jmp	0x21a8	; 0x21a8 <signalIoctl+0x116>
               t_err = GPIO_PIN_IS_INPUT;
            else
               PORTK.OUTTGL = c_pin;
    3132:	e0 e2       	ldi	r30, 0x20	; 32
    3134:	f7 e0       	ldi	r31, 0x07	; 7
    3136:	97 83       	std	Z+7, r25	; 0x07
    3138:	ee 24       	eor	r14, r14
    313a:	ff 24       	eor	r15, r15
    313c:	87 01       	movw	r16, r14
    313e:	0c 94 76 10 	jmp	0x20ec	; 0x20ec <signalIoctl+0x5a>
         case GPIO_PORTQ:

            /*---------------------------------------------------------------*
             * Make sure the requested pin is configured as an output
             *---------------------------------------------------------------*/
            if( !(PORTQ.DIR & c_pin))
    3142:	80 91 c0 07 	lds	r24, 0x07C0
    3146:	89 23       	and	r24, r25
    3148:	11 f4       	brne	.+4      	; 0x314e <signalIoctl+0x10bc>
    314a:	0c 94 d4 10 	jmp	0x21a8	; 0x21a8 <signalIoctl+0x116>
               t_err = GPIO_PIN_IS_INPUT;
            else
               PORTQ.OUTSET = c_pin;
    314e:	e0 ec       	ldi	r30, 0xC0	; 192
    3150:	f7 e0       	ldi	r31, 0x07	; 7
    3152:	95 83       	std	Z+5, r25	; 0x05
    3154:	ee 24       	eor	r14, r14
    3156:	ff 24       	eor	r15, r15
    3158:	87 01       	movw	r16, r14
    315a:	0c 94 76 10 	jmp	0x20ec	; 0x20ec <signalIoctl+0x5a>
         case GPIO_PORTH:

            /*---------------------------------------------------------------*
             * Make sure the requested pin is configured as an output
             *---------------------------------------------------------------*/
            if( !(PORTH.DIR & c_pin))
    315e:	80 91 e0 06 	lds	r24, 0x06E0
    3162:	89 23       	and	r24, r25
    3164:	11 f4       	brne	.+4      	; 0x316a <signalIoctl+0x10d8>
    3166:	0c 94 d4 10 	jmp	0x21a8	; 0x21a8 <signalIoctl+0x116>
               t_err = GPIO_PIN_IS_INPUT;
            else
               PORTH.OUTTGL = c_pin;
    316a:	e0 ee       	ldi	r30, 0xE0	; 224
    316c:	f6 e0       	ldi	r31, 0x06	; 6
    316e:	97 83       	std	Z+7, r25	; 0x07
    3170:	ee 24       	eor	r14, r14
    3172:	ff 24       	eor	r15, r15
    3174:	87 01       	movw	r16, r14
    3176:	0c 94 76 10 	jmp	0x20ec	; 0x20ec <signalIoctl+0x5a>
         case GPIO_PORTA:

            /*---------------------------------------------------------------*
             * Make sure the requested pin is configured as an output
             *---------------------------------------------------------------*/
            if( !(PORTA.DIR & c_pin))
    317a:	80 91 00 06 	lds	r24, 0x0600
    317e:	89 23       	and	r24, r25
    3180:	11 f4       	brne	.+4      	; 0x3186 <signalIoctl+0x10f4>
    3182:	0c 94 d4 10 	jmp	0x21a8	; 0x21a8 <signalIoctl+0x116>
               t_err = GPIO_PIN_IS_INPUT;
            else
               PORTA.OUTTGL = c_pin;
    3186:	e0 e0       	ldi	r30, 0x00	; 0
    3188:	f6 e0       	ldi	r31, 0x06	; 6
    318a:	97 83       	std	Z+7, r25	; 0x07
    318c:	ee 24       	eor	r14, r14
    318e:	ff 24       	eor	r15, r15
    3190:	87 01       	movw	r16, r14
    3192:	0c 94 76 10 	jmp	0x20ec	; 0x20ec <signalIoctl+0x5a>
         case GPIO_PORTC:

            /*---------------------------------------------------------------*
             * Make sure the requested pin is configured as an output
             *---------------------------------------------------------------*/
            if( !(PORTC.DIR & c_pin))
    3196:	80 91 40 06 	lds	r24, 0x0640
    319a:	89 23       	and	r24, r25
    319c:	11 f4       	brne	.+4      	; 0x31a2 <signalIoctl+0x1110>
    319e:	0c 94 d4 10 	jmp	0x21a8	; 0x21a8 <signalIoctl+0x116>
               t_err = GPIO_PIN_IS_INPUT;
            else
               PORTC.OUTTGL = c_pin;
    31a2:	e0 e4       	ldi	r30, 0x40	; 64
    31a4:	f6 e0       	ldi	r31, 0x06	; 6
    31a6:	97 83       	std	Z+7, r25	; 0x07
    31a8:	ee 24       	eor	r14, r14
    31aa:	ff 24       	eor	r15, r15
    31ac:	87 01       	movw	r16, r14
    31ae:	0c 94 76 10 	jmp	0x20ec	; 0x20ec <signalIoctl+0x5a>
         case GPIO_PORTQ:

            /*---------------------------------------------------------------*
             * Make sure the requested pin is configured as an output
             *---------------------------------------------------------------*/
            if( !(PORTQ.DIR & c_pin))
    31b2:	80 91 c0 07 	lds	r24, 0x07C0
    31b6:	89 23       	and	r24, r25
    31b8:	11 f4       	brne	.+4      	; 0x31be <signalIoctl+0x112c>
    31ba:	0c 94 d4 10 	jmp	0x21a8	; 0x21a8 <signalIoctl+0x116>
               t_err = GPIO_PIN_IS_INPUT;
            else
               PORTQ.OUTTGL = c_pin;
    31be:	e0 ec       	ldi	r30, 0xC0	; 192
    31c0:	f7 e0       	ldi	r31, 0x07	; 7
    31c2:	97 83       	std	Z+7, r25	; 0x07
    31c4:	ee 24       	eor	r14, r14
    31c6:	ff 24       	eor	r15, r15
    31c8:	87 01       	movw	r16, r14
    31ca:	0c 94 76 10 	jmp	0x20ec	; 0x20ec <signalIoctl+0x5a>
         case GPIO_PORTF:

            /*---------------------------------------------------------------*
             * Make sure the requested pin is configured as an output
             *---------------------------------------------------------------*/
            if( !(PORTF.DIR & c_pin))
    31ce:	80 91 a0 06 	lds	r24, 0x06A0
    31d2:	89 23       	and	r24, r25
    31d4:	11 f4       	brne	.+4      	; 0x31da <signalIoctl+0x1148>
    31d6:	0c 94 d4 10 	jmp	0x21a8	; 0x21a8 <signalIoctl+0x116>
               t_err = GPIO_PIN_IS_INPUT;
            else
               PORTF.OUTTGL = c_pin;
    31da:	e0 ea       	ldi	r30, 0xA0	; 160
    31dc:	f6 e0       	ldi	r31, 0x06	; 6
    31de:	97 83       	std	Z+7, r25	; 0x07
    31e0:	ee 24       	eor	r14, r14
    31e2:	ff 24       	eor	r15, r15
    31e4:	87 01       	movw	r16, r14
    31e6:	0c 94 76 10 	jmp	0x20ec	; 0x20ec <signalIoctl+0x5a>
         case GPIO_PORTH:

            /*---------------------------------------------------------------*
             * Make sure the requested pin is configured as an output
             *---------------------------------------------------------------*/
            if( !(PORTH.DIR & c_pin))
    31ea:	80 91 e0 06 	lds	r24, 0x06E0
    31ee:	89 23       	and	r24, r25
    31f0:	11 f4       	brne	.+4      	; 0x31f6 <signalIoctl+0x1164>
    31f2:	0c 94 d4 10 	jmp	0x21a8	; 0x21a8 <signalIoctl+0x116>
               t_err = GPIO_PIN_IS_INPUT;
            else
               PORTH.OUTCLR = c_pin;
    31f6:	e0 ee       	ldi	r30, 0xE0	; 224
    31f8:	f6 e0       	ldi	r31, 0x06	; 6
    31fa:	96 83       	std	Z+6, r25	; 0x06
    31fc:	ee 24       	eor	r14, r14
    31fe:	ff 24       	eor	r15, r15
    3200:	87 01       	movw	r16, r14
    3202:	0c 94 76 10 	jmp	0x20ec	; 0x20ec <signalIoctl+0x5a>
         case GPIO_PORTK:

            /*---------------------------------------------------------------*
             * Make sure the requested pin is configured as an output
             *---------------------------------------------------------------*/
            if( !(PORTK.DIR & c_pin))
    3206:	80 91 20 07 	lds	r24, 0x0720
    320a:	89 23       	and	r24, r25
    320c:	11 f4       	brne	.+4      	; 0x3212 <signalIoctl+0x1180>
    320e:	0c 94 d4 10 	jmp	0x21a8	; 0x21a8 <signalIoctl+0x116>
               t_err = GPIO_PIN_IS_INPUT;
            else
               PORTK.OUTCLR = c_pin;
    3212:	e0 e2       	ldi	r30, 0x20	; 32
    3214:	f7 e0       	ldi	r31, 0x07	; 7
    3216:	96 83       	std	Z+6, r25	; 0x06
    3218:	ee 24       	eor	r14, r14
    321a:	ff 24       	eor	r15, r15
    321c:	87 01       	movw	r16, r14
    321e:	0c 94 76 10 	jmp	0x20ec	; 0x20ec <signalIoctl+0x5a>
         case GPIO_PORTQ:

            /*---------------------------------------------------------------*
             * Make sure the requested pin is configured as an output
             *---------------------------------------------------------------*/
            if( !(PORTQ.DIR & c_pin))
    3222:	80 91 c0 07 	lds	r24, 0x07C0
    3226:	89 23       	and	r24, r25
    3228:	11 f4       	brne	.+4      	; 0x322e <signalIoctl+0x119c>
    322a:	0c 94 d4 10 	jmp	0x21a8	; 0x21a8 <signalIoctl+0x116>
               t_err = GPIO_PIN_IS_INPUT;
            else
               PORTQ.OUTTGL = c_pin;
    322e:	e0 ec       	ldi	r30, 0xC0	; 192
    3230:	f7 e0       	ldi	r31, 0x07	; 7
    3232:	97 83       	std	Z+7, r25	; 0x07
    3234:	ee 24       	eor	r14, r14
    3236:	ff 24       	eor	r15, r15
    3238:	87 01       	movw	r16, r14
    323a:	0c 94 76 10 	jmp	0x20ec	; 0x20ec <signalIoctl+0x5a>

0000323e <signalOpen>:

/*---------------------------------------------------------------------------*
 * Private Function Definitions
 *---------------------------------------------------------------------------*/
t_error signalOpen( t_DEVHANDLE t_devHandle)
{
    323e:	df 93       	push	r29
    3240:	cf 93       	push	r28
    3242:	0f 92       	push	r0
    3244:	0f 92       	push	r0
    3246:	cd b7       	in	r28, 0x3d	; 61
    3248:	de b7       	in	r29, 0x3e	; 62
    324a:	89 83       	std	Y+1, r24	; 0x01
    324c:	9a 83       	std	Y+2, r25	; 0x02

   /*------------------------------------------------------------------------*
    * We are going to access global memory or a register, so perform lock
    *------------------------------------------------------------------------*/
   arb_wait( gt_signalDev.t_mutex,
    324e:	80 91 70 24 	lds	r24, 0x2470
    3252:	90 91 71 24 	lds	r25, 0x2471
    3256:	60 e0       	ldi	r22, 0x00	; 0
    3258:	0e 94 c3 7d 	call	0xfb86	; 0xfb86 <arb_wait>
             0);

   gt_signalDev.c_numUsers++;
    325c:	80 91 77 24 	lds	r24, 0x2477
    3260:	8f 5f       	subi	r24, 0xFF	; 255
    3262:	80 93 77 24 	sts	0x2477, r24

   /*------------------------------------------------------------------------*
    * Release the lock
    *------------------------------------------------------------------------*/
   arb_signal( gt_signalDev.t_mutex);
    3266:	80 91 70 24 	lds	r24, 0x2470
    326a:	90 91 71 24 	lds	r25, 0x2471
    326e:	0e 94 7c 7a 	call	0xf4f8	; 0xf4f8 <arb_signal>

   return ARB_PASSED;

}/*End signalOpen*/
    3272:	80 e0       	ldi	r24, 0x00	; 0
    3274:	0f 90       	pop	r0
    3276:	0f 90       	pop	r0
    3278:	cf 91       	pop	r28
    327a:	df 91       	pop	r29
    327c:	08 95       	ret

0000327e <drv_signalExit>:
 * Remove the device from the system
 *---------------------------------------------------------------------------*/
void drv_signalExit( void)
{

   if( gt_signalDev.t_mutex != 0) /*If created... destroy*/
    327e:	80 91 70 24 	lds	r24, 0x2470
    3282:	90 91 71 24 	lds	r25, 0x2471
    3286:	89 2b       	or	r24, r25
    3288:	09 f4       	brne	.+2      	; 0x328c <drv_signalExit+0xe>
    328a:	08 95       	ret
   {
      arb_semaphoreDestroy( gt_signalDev.t_mutex);
    328c:	80 91 70 24 	lds	r24, 0x2470
    3290:	90 91 71 24 	lds	r25, 0x2471
    3294:	0e 94 ea 77 	call	0xefd4	; 0xefd4 <arb_semaphoreDestroy>
      arb_destroyDevice( "signalDevice0");
    3298:	88 e5       	ldi	r24, 0x58	; 88
    329a:	90 e2       	ldi	r25, 0x20	; 32
    329c:	0e 94 0b 6e 	call	0xdc16	; 0xdc16 <arb_destroyDevice>
    32a0:	08 95       	ret

000032a2 <drv_signalInit>:
   return ARB_PASSED;

}/*End signalClose*/

t_error drv_signalInit( t_signalSetup t_setup)
{
    32a2:	0f 93       	push	r16
    32a4:	1f 93       	push	r17
    32a6:	df 93       	push	r29
    32a8:	cf 93       	push	r28
    32aa:	cd b7       	in	r28, 0x3d	; 61
    32ac:	de b7       	in	r29, 0x3e	; 62
    32ae:	2a 97       	sbiw	r28, 0x0a	; 10
    32b0:	cd bf       	out	0x3d, r28	; 61
    32b2:	de bf       	out	0x3e, r29	; 62
    32b4:	4e 83       	std	Y+6, r20	; 0x06
    32b6:	5f 83       	std	Y+7, r21	; 0x07
    32b8:	68 87       	std	Y+8, r22	; 0x08
    32ba:	79 87       	std	Y+9, r23	; 0x09
    32bc:	8a 87       	std	Y+10, r24	; 0x0a
    32be:	04 2f       	mov	r16, r20
   int8_t c_index;

   /*------------------------------------------------------------------------*
    * Make sure the kernel is aware that a new device has been loaded.
    *------------------------------------------------------------------------*/
   t_err = arb_registerDevice( "signalDevice0",
    32c0:	78 2f       	mov	r23, r24
    32c2:	88 e5       	ldi	r24, 0x58	; 88
    32c4:	90 e2       	ldi	r25, 0x20	; 32
    32c6:	60 e0       	ldi	r22, 0x00	; 0
    32c8:	46 e6       	ldi	r20, 0x66	; 102
    32ca:	50 e2       	ldi	r21, 0x20	; 32
    32cc:	0e 94 84 6e 	call	0xdd08	; 0xdd08 <arb_registerDevice>
    32d0:	18 2f       	mov	r17, r24
                               arb_createDevId( t_setup.c_majorNum,
                               0),
                               &gat_signalDevOps);

   if( t_err < 0)
    32d2:	87 fd       	sbrc	r24, 7
    32d4:	40 c0       	rjmp	.+128    	; 0x3356 <drv_signalInit+0xb4>

   /*------------------------------------------------------------------------*
    * Request a semaphore from the kernel. Since the signal port is a shared
    * resource we need to have all actions on it be mutually exclusive.
    *------------------------------------------------------------------------*/
   gt_signalDev.t_mutex = arb_semaphoreCreate( MUTEX);
    32d6:	82 e0       	ldi	r24, 0x02	; 2
    32d8:	0e 94 61 78 	call	0xf0c2	; 0xf0c2 <arb_semaphoreCreate>
    32dc:	80 93 70 24 	sts	0x2470, r24
    32e0:	90 93 71 24 	sts	0x2471, r25

   if( gt_signalDev.t_mutex < 0)
    32e4:	80 91 70 24 	lds	r24, 0x2470
    32e8:	90 91 71 24 	lds	r25, 0x2471
    32ec:	97 fd       	sbrc	r25, 7
    32ee:	3c c0       	rjmp	.+120    	; 0x3368 <drv_signalInit+0xc6>
   }/*End if( gt_signalDev.t_mutex < 0)*/

   /*------------------------------------------------------------------------*
    * We dont have any users attached to this device
    *------------------------------------------------------------------------*/
   gt_signalDev.c_numUsers = 0;
    32f0:	10 92 77 24 	sts	0x2477, r1

   /*------------------------------------------------------------------------*
    * Configure the pins that control the led's...
    *------------------------------------------------------------------------*/
   gt_signalDev.c_signalPort = t_setup.c_signalPort;
    32f4:	00 93 72 24 	sts	0x2472, r16
   gt_signalDev.c_allLedMask = 0;

   for( c_index = 0; c_index < SIGNAL_MAX_LEDS; c_index++)
   {
      gt_signalDev.ac_ledPins[c_index] =
    32f8:	3f 81       	ldd	r19, Y+7	; 0x07
    32fa:	30 93 73 24 	sts	0x2473, r19
    32fe:	88 85       	ldd	r24, Y+8	; 0x08
    3300:	80 93 74 24 	sts	0x2474, r24
      t_setup.ac_ledPins[c_index];
      gt_signalDev.c_allLedMask |= t_setup.ac_ledPins[c_index];
    3304:	38 2b       	or	r19, r24
   gt_signalDev.c_signalPort = t_setup.c_signalPort;
   gt_signalDev.c_allLedMask = 0;

   for( c_index = 0; c_index < SIGNAL_MAX_LEDS; c_index++)
   {
      gt_signalDev.ac_ledPins[c_index] =
    3306:	89 85       	ldd	r24, Y+9	; 0x09
    3308:	80 93 75 24 	sts	0x2475, r24
      t_setup.ac_ledPins[c_index];
      gt_signalDev.c_allLedMask |= t_setup.ac_ledPins[c_index];
    330c:	38 2b       	or	r19, r24
    330e:	30 93 76 24 	sts	0x2476, r19
   }

   t_conf.c_inputMask    = 0;
    3312:	19 82       	std	Y+1, r1	; 0x01
   t_conf.c_outputMask   = gt_signalDev.c_allLedMask;
    3314:	3a 83       	std	Y+2, r19	; 0x02
   t_conf.b_setOutputLow = false;
    3316:	1b 82       	std	Y+3, r1	; 0x03
   t_conf.t_outConf      = TOTEM;
    3318:	1d 82       	std	Y+5, r1	; 0x05

   if( hal_configureGpioPort( t_setup.c_signalPort, t_conf) < 0)
    331a:	80 2f       	mov	r24, r16
    331c:	20 e0       	ldi	r18, 0x00	; 0
    331e:	40 e0       	ldi	r20, 0x00	; 0
    3320:	5c 81       	ldd	r21, Y+4	; 0x04
    3322:	60 e0       	ldi	r22, 0x00	; 0
    3324:	0e 94 e6 29 	call	0x53cc	; 0x53cc <hal_configureGpioPort>
    3328:	87 fd       	sbrc	r24, 7
    332a:	3b c0       	rjmp	.+118    	; 0x33a2 <drv_signalInit+0x100>
   }

   /*------------------------------------------------------------------------*
    * Make sure the LED's are off - logic high is off...
    *------------------------------------------------------------------------*/
   hal_gpioOn( gt_signalDev.c_signalPort,
    332c:	90 91 76 24 	lds	r25, 0x2476
   static inline t_gpioError __attribute__ ( (always_inline)) hal_gpioOn(
   t_gpioPort t_port, uint8_t    c_pin)
   {
      t_gpioError t_err = GPIO_PASSED;

      switch( t_port)
    3330:	80 91 72 24 	lds	r24, 0x2472
    3334:	85 30       	cpi	r24, 0x05	; 5
    3336:	09 f4       	brne	.+2      	; 0x333a <drv_signalInit+0x98>
    3338:	9e c0       	rjmp	.+316    	; 0x3476 <drv_signalInit+0x1d4>
    333a:	86 30       	cpi	r24, 0x06	; 6
    333c:	f8 f0       	brcs	.+62     	; 0x337c <drv_signalInit+0xda>
    333e:	88 30       	cpi	r24, 0x08	; 8
    3340:	09 f4       	brne	.+2      	; 0x3344 <drv_signalInit+0xa2>
    3342:	7b c0       	rjmp	.+246    	; 0x343a <drv_signalInit+0x198>
    3344:	89 30       	cpi	r24, 0x09	; 9
    3346:	a8 f1       	brcs	.+106    	; 0x33b2 <drv_signalInit+0x110>
    3348:	89 30       	cpi	r24, 0x09	; 9
    334a:	09 f4       	brne	.+2      	; 0x334e <drv_signalInit+0xac>
    334c:	80 c0       	rjmp	.+256    	; 0x344e <drv_signalInit+0x1ac>
    334e:	8a 30       	cpi	r24, 0x0A	; 10
    3350:	09 f4       	brne	.+2      	; 0x3354 <drv_signalInit+0xb2>
    3352:	4b c0       	rjmp	.+150    	; 0x33ea <drv_signalInit+0x148>

   arb_semaphoreDestroy( gt_signalDev.t_mutex);

failed2:

   arb_destroyDevice( "signalDevice0");
    3354:	10 e0       	ldi	r17, 0x00	; 0

failed1:

   return t_err;

}/*End drv_signalInit*/
    3356:	81 2f       	mov	r24, r17
    3358:	2a 96       	adiw	r28, 0x0a	; 10
    335a:	cd bf       	out	0x3d, r28	; 61
    335c:	de bf       	out	0x3e, r29	; 62
    335e:	cf 91       	pop	r28
    3360:	df 91       	pop	r29
    3362:	1f 91       	pop	r17
    3364:	0f 91       	pop	r16
    3366:	08 95       	ret
    *------------------------------------------------------------------------*/
   gt_signalDev.t_mutex = arb_semaphoreCreate( MUTEX);

   if( gt_signalDev.t_mutex < 0)
   {
      t_err = (t_error)gt_signalDev.t_mutex;
    3368:	80 91 70 24 	lds	r24, 0x2470
    336c:	90 91 71 24 	lds	r25, 0x2471
    3370:	18 2f       	mov	r17, r24

   arb_semaphoreDestroy( gt_signalDev.t_mutex);

failed2:

   arb_destroyDevice( "signalDevice0");
    3372:	88 e5       	ldi	r24, 0x58	; 88
    3374:	90 e2       	ldi	r25, 0x20	; 32
    3376:	0e 94 0b 6e 	call	0xdc16	; 0xdc16 <arb_destroyDevice>
    337a:	ed cf       	rjmp	.-38     	; 0x3356 <drv_signalInit+0xb4>
    337c:	82 30       	cpi	r24, 0x02	; 2
    337e:	09 f4       	brne	.+2      	; 0x3382 <drv_signalInit+0xe0>
    3380:	70 c0       	rjmp	.+224    	; 0x3462 <drv_signalInit+0x1c0>
    3382:	83 30       	cpi	r24, 0x03	; 3
    3384:	18 f1       	brcs	.+70     	; 0x33cc <drv_signalInit+0x12a>
    3386:	83 30       	cpi	r24, 0x03	; 3
    3388:	09 f4       	brne	.+2      	; 0x338c <drv_signalInit+0xea>
    338a:	4d c0       	rjmp	.+154    	; 0x3426 <drv_signalInit+0x184>
    338c:	84 30       	cpi	r24, 0x04	; 4
    338e:	11 f7       	brne	.-60     	; 0x3354 <drv_signalInit+0xb2>
         case GPIO_PORTE:

            /*---------------------------------------------------------------*
             * Make sure the requested pin is configured as an output
             *---------------------------------------------------------------*/
            if( !(PORTE.DIR & c_pin))
    3390:	80 91 80 06 	lds	r24, 0x0680
    3394:	89 23       	and	r24, r25
    3396:	f1 f2       	breq	.-68     	; 0x3354 <drv_signalInit+0xb2>
               t_err = GPIO_PIN_IS_INPUT;
            else
               PORTE.OUTSET = c_pin;
    3398:	e0 e8       	ldi	r30, 0x80	; 128
    339a:	f6 e0       	ldi	r31, 0x06	; 6
    339c:	95 83       	std	Z+5, r25	; 0x05
    339e:	10 e0       	ldi	r17, 0x00	; 0
    33a0:	da cf       	rjmp	.-76     	; 0x3356 <drv_signalInit+0xb4>

   return ARB_PASSED;

failed3:

   arb_semaphoreDestroy( gt_signalDev.t_mutex);
    33a2:	80 91 70 24 	lds	r24, 0x2470
    33a6:	90 91 71 24 	lds	r25, 0x2471
    33aa:	0e 94 ea 77 	call	0xefd4	; 0xefd4 <arb_semaphoreDestroy>
    33ae:	16 ef       	ldi	r17, 0xF6	; 246
    33b0:	e0 cf       	rjmp	.-64     	; 0x3372 <drv_signalInit+0xd0>
   static inline t_gpioError __attribute__ ( (always_inline)) hal_gpioOn(
   t_gpioPort t_port, uint8_t    c_pin)
   {
      t_gpioError t_err = GPIO_PASSED;

      switch( t_port)
    33b2:	86 30       	cpi	r24, 0x06	; 6
    33b4:	71 f1       	breq	.+92     	; 0x3412 <drv_signalInit+0x170>
    33b6:	87 30       	cpi	r24, 0x07	; 7
    33b8:	69 f6       	brne	.-102    	; 0x3354 <drv_signalInit+0xb2>
         case GPIO_PORTJ:

            /*---------------------------------------------------------------*
             * Make sure the requested pin is configured as an output
             *---------------------------------------------------------------*/
            if( !(PORTJ.DIR & c_pin))
    33ba:	80 91 00 07 	lds	r24, 0x0700
    33be:	89 23       	and	r24, r25
    33c0:	49 f2       	breq	.-110    	; 0x3354 <drv_signalInit+0xb2>
               t_err = GPIO_PIN_IS_INPUT;
            else
               PORTJ.OUTSET = c_pin;
    33c2:	e0 e0       	ldi	r30, 0x00	; 0
    33c4:	f7 e0       	ldi	r31, 0x07	; 7
    33c6:	95 83       	std	Z+5, r25	; 0x05
    33c8:	10 e0       	ldi	r17, 0x00	; 0
    33ca:	c5 cf       	rjmp	.-118    	; 0x3356 <drv_signalInit+0xb4>
   static inline t_gpioError __attribute__ ( (always_inline)) hal_gpioOn(
   t_gpioPort t_port, uint8_t    c_pin)
   {
      t_gpioError t_err = GPIO_PASSED;

      switch( t_port)
    33cc:	88 23       	and	r24, r24
    33ce:	b9 f0       	breq	.+46     	; 0x33fe <drv_signalInit+0x15c>
    33d0:	81 30       	cpi	r24, 0x01	; 1
    33d2:	09 f0       	breq	.+2      	; 0x33d6 <drv_signalInit+0x134>
    33d4:	bf cf       	rjmp	.-130    	; 0x3354 <drv_signalInit+0xb2>
         case GPIO_PORTB:

            /*---------------------------------------------------------------*
             * Make sure the requested pin is configured as an output
             *---------------------------------------------------------------*/
            if( !(PORTB.DIR & c_pin))
    33d6:	80 91 20 06 	lds	r24, 0x0620
    33da:	89 23       	and	r24, r25
    33dc:	09 f4       	brne	.+2      	; 0x33e0 <drv_signalInit+0x13e>
    33de:	ba cf       	rjmp	.-140    	; 0x3354 <drv_signalInit+0xb2>
               t_err = GPIO_PIN_IS_INPUT;
            else
               PORTB.OUTSET = c_pin;
    33e0:	e0 e2       	ldi	r30, 0x20	; 32
    33e2:	f6 e0       	ldi	r31, 0x06	; 6
    33e4:	95 83       	std	Z+5, r25	; 0x05
    33e6:	10 e0       	ldi	r17, 0x00	; 0
    33e8:	b6 cf       	rjmp	.-148    	; 0x3356 <drv_signalInit+0xb4>
         case GPIO_PORTR:

            /*---------------------------------------------------------------*
             * Make sure the requested pin is configured as an output
             *---------------------------------------------------------------*/
            if( !(PORTR.DIR & c_pin))
    33ea:	80 91 e0 07 	lds	r24, 0x07E0
    33ee:	89 23       	and	r24, r25
    33f0:	09 f4       	brne	.+2      	; 0x33f4 <drv_signalInit+0x152>
    33f2:	b0 cf       	rjmp	.-160    	; 0x3354 <drv_signalInit+0xb2>
               t_err = GPIO_PIN_IS_INPUT;
            else
               PORTR.OUTSET = c_pin;
    33f4:	e0 ee       	ldi	r30, 0xE0	; 224
    33f6:	f7 e0       	ldi	r31, 0x07	; 7
    33f8:	95 83       	std	Z+5, r25	; 0x05
    33fa:	10 e0       	ldi	r17, 0x00	; 0
    33fc:	ac cf       	rjmp	.-168    	; 0x3356 <drv_signalInit+0xb4>
         case GPIO_PORTA:

            /*---------------------------------------------------------------*
             * Make sure the requested pin is configured as an output
             *---------------------------------------------------------------*/
            if( !(PORTA.DIR & c_pin))
    33fe:	80 91 00 06 	lds	r24, 0x0600
    3402:	89 23       	and	r24, r25
    3404:	09 f4       	brne	.+2      	; 0x3408 <drv_signalInit+0x166>
    3406:	a6 cf       	rjmp	.-180    	; 0x3354 <drv_signalInit+0xb2>
               t_err = GPIO_PIN_IS_INPUT;
            else
               PORTA.OUTSET = c_pin;
    3408:	e0 e0       	ldi	r30, 0x00	; 0
    340a:	f6 e0       	ldi	r31, 0x06	; 6
    340c:	95 83       	std	Z+5, r25	; 0x05
    340e:	10 e0       	ldi	r17, 0x00	; 0
    3410:	a2 cf       	rjmp	.-188    	; 0x3356 <drv_signalInit+0xb4>
         case GPIO_PORTH:

            /*---------------------------------------------------------------*
             * Make sure the requested pin is configured as an output
             *---------------------------------------------------------------*/
            if( !(PORTH.DIR & c_pin))
    3412:	80 91 e0 06 	lds	r24, 0x06E0
    3416:	89 23       	and	r24, r25
    3418:	09 f4       	brne	.+2      	; 0x341c <drv_signalInit+0x17a>
    341a:	9c cf       	rjmp	.-200    	; 0x3354 <drv_signalInit+0xb2>
               t_err = GPIO_PIN_IS_INPUT;
            else
               PORTH.OUTSET = c_pin;
    341c:	e0 ee       	ldi	r30, 0xE0	; 224
    341e:	f6 e0       	ldi	r31, 0x06	; 6
    3420:	95 83       	std	Z+5, r25	; 0x05
    3422:	10 e0       	ldi	r17, 0x00	; 0
    3424:	98 cf       	rjmp	.-208    	; 0x3356 <drv_signalInit+0xb4>
         case GPIO_PORTD:

            /*---------------------------------------------------------------*
             * Make sure the requested pin is configured as an output
             *---------------------------------------------------------------*/
            if( !(PORTD.DIR & c_pin))
    3426:	80 91 60 06 	lds	r24, 0x0660
    342a:	89 23       	and	r24, r25
    342c:	09 f4       	brne	.+2      	; 0x3430 <drv_signalInit+0x18e>
    342e:	92 cf       	rjmp	.-220    	; 0x3354 <drv_signalInit+0xb2>
               t_err = GPIO_PIN_IS_INPUT;
            else
               PORTD.OUTSET = c_pin;
    3430:	e0 e6       	ldi	r30, 0x60	; 96
    3432:	f6 e0       	ldi	r31, 0x06	; 6
    3434:	95 83       	std	Z+5, r25	; 0x05
    3436:	10 e0       	ldi	r17, 0x00	; 0
    3438:	8e cf       	rjmp	.-228    	; 0x3356 <drv_signalInit+0xb4>
         case GPIO_PORTK:

            /*---------------------------------------------------------------*
             * Make sure the requested pin is configured as an output
             *---------------------------------------------------------------*/
            if( !(PORTK.DIR & c_pin))
    343a:	80 91 20 07 	lds	r24, 0x0720
    343e:	89 23       	and	r24, r25
    3440:	09 f4       	brne	.+2      	; 0x3444 <drv_signalInit+0x1a2>
    3442:	88 cf       	rjmp	.-240    	; 0x3354 <drv_signalInit+0xb2>
               t_err = GPIO_PIN_IS_INPUT;
            else
               PORTK.OUTSET = c_pin;
    3444:	e0 e2       	ldi	r30, 0x20	; 32
    3446:	f7 e0       	ldi	r31, 0x07	; 7
    3448:	95 83       	std	Z+5, r25	; 0x05
    344a:	10 e0       	ldi	r17, 0x00	; 0
    344c:	84 cf       	rjmp	.-248    	; 0x3356 <drv_signalInit+0xb4>
         case GPIO_PORTQ:

            /*---------------------------------------------------------------*
             * Make sure the requested pin is configured as an output
             *---------------------------------------------------------------*/
            if( !(PORTQ.DIR & c_pin))
    344e:	80 91 c0 07 	lds	r24, 0x07C0
    3452:	89 23       	and	r24, r25
    3454:	09 f4       	brne	.+2      	; 0x3458 <drv_signalInit+0x1b6>
    3456:	7e cf       	rjmp	.-260    	; 0x3354 <drv_signalInit+0xb2>
               t_err = GPIO_PIN_IS_INPUT;
            else
               PORTQ.OUTSET = c_pin;
    3458:	e0 ec       	ldi	r30, 0xC0	; 192
    345a:	f7 e0       	ldi	r31, 0x07	; 7
    345c:	95 83       	std	Z+5, r25	; 0x05
    345e:	10 e0       	ldi	r17, 0x00	; 0
    3460:	7a cf       	rjmp	.-268    	; 0x3356 <drv_signalInit+0xb4>
         case GPIO_PORTC:

            /*---------------------------------------------------------------*
             * Make sure the requested pin is configured as an output
             *---------------------------------------------------------------*/
            if( !(PORTC.DIR & c_pin))
    3462:	80 91 40 06 	lds	r24, 0x0640
    3466:	89 23       	and	r24, r25
    3468:	09 f4       	brne	.+2      	; 0x346c <drv_signalInit+0x1ca>
    346a:	74 cf       	rjmp	.-280    	; 0x3354 <drv_signalInit+0xb2>
               t_err = GPIO_PIN_IS_INPUT;
            else
               PORTC.OUTSET = c_pin;
    346c:	e0 e4       	ldi	r30, 0x40	; 64
    346e:	f6 e0       	ldi	r31, 0x06	; 6
    3470:	95 83       	std	Z+5, r25	; 0x05
    3472:	10 e0       	ldi	r17, 0x00	; 0
    3474:	70 cf       	rjmp	.-288    	; 0x3356 <drv_signalInit+0xb4>
         case GPIO_PORTF:

            /*---------------------------------------------------------------*
             * Make sure the requested pin is configured as an output
             *---------------------------------------------------------------*/
            if( !(PORTF.DIR & c_pin))
    3476:	80 91 a0 06 	lds	r24, 0x06A0
    347a:	89 23       	and	r24, r25
    347c:	09 f4       	brne	.+2      	; 0x3480 <drv_signalInit+0x1de>
    347e:	6a cf       	rjmp	.-300    	; 0x3354 <drv_signalInit+0xb2>
               t_err = GPIO_PIN_IS_INPUT;
            else
               PORTF.OUTSET = c_pin;
    3480:	e0 ea       	ldi	r30, 0xA0	; 160
    3482:	f6 e0       	ldi	r31, 0x06	; 6
    3484:	95 83       	std	Z+5, r25	; 0x05
    3486:	10 e0       	ldi	r17, 0x00	; 0
    3488:	66 cf       	rjmp	.-308    	; 0x3356 <drv_signalInit+0xb4>

0000348a <usr_appInit>:

/*---------------------------------------------------------------------------*
 * Public Function Definitions
 *---------------------------------------------------------------------------*/
void usr_appInit( void)
{
    348a:	0f 93       	push	r16
    348c:	1f 93       	push	r17
    348e:	df 93       	push	r29
    3490:	cf 93       	push	r28
    3492:	cd b7       	in	r28, 0x3d	; 61
    3494:	de b7       	in	r29, 0x3e	; 62
    3496:	2b 97       	sbiw	r28, 0x0b	; 11
    3498:	cd bf       	out	0x3d, r28	; 61
    349a:	de bf       	out	0x3e, r29	; 62
    *------------------------------------------------------------------------*/

   /*------------------------------------------------------------------------*
    * Register the console driver with the kernel.
    *------------------------------------------------------------------------*/
   t_conSetup.c_uartId   = UART_1;
    349c:	1a 86       	std	Y+10, r1	; 0x0a
   t_conSetup.i_baudRate = 115200;
    349e:	80 e0       	ldi	r24, 0x00	; 0
    34a0:	92 ec       	ldi	r25, 0xC2	; 194
    34a2:	a1 e0       	ldi	r26, 0x01	; 1
    34a4:	b0 e0       	ldi	r27, 0x00	; 0
    34a6:	48 2f       	mov	r20, r24
    34a8:	8e 83       	std	Y+6, r24	; 0x06
    34aa:	9f 83       	std	Y+7, r25	; 0x07
    34ac:	a8 87       	std	Y+8, r26	; 0x08
    34ae:	b9 87       	std	Y+9, r27	; 0x09
   t_conSetup.c_majorNum = 1;
    34b0:	11 e0       	ldi	r17, 0x01	; 1
    34b2:	1b 87       	std	Y+11, r17	; 0x0b

   if( drv_consoleInit( t_conSetup) < 0)
    34b4:	5f 81       	ldd	r21, Y+7	; 0x07
    34b6:	68 85       	ldd	r22, Y+8	; 0x08
    34b8:	79 85       	ldd	r23, Y+9	; 0x09
    34ba:	80 e0       	ldi	r24, 0x00	; 0
    34bc:	91 e0       	ldi	r25, 0x01	; 1
    34be:	0e 94 a0 0b 	call	0x1740	; 0x1740 <drv_consoleInit>
    34c2:	87 fd       	sbrc	r24, 7
    34c4:	42 c0       	rjmp	.+132    	; 0x354a <usr_appInit+0xc0>
      exit(0);

   /*------------------------------------------------------------------------*
    * Register the LED signaling driver with the kernel.
    *------------------------------------------------------------------------*/
   t_sigSetup.c_signalPort  = GPIO_PORTK;
    34c6:	88 e0       	ldi	r24, 0x08	; 8
    34c8:	89 83       	std	Y+1, r24	; 0x01
   t_sigSetup.ac_ledPins[0] = PIN_0; /*Red LED pin*/
    34ca:	1a 83       	std	Y+2, r17	; 0x02
   t_sigSetup.ac_ledPins[1] = PIN_1; /*Yellow LED pin*/
    34cc:	92 e0       	ldi	r25, 0x02	; 2
    34ce:	9b 83       	std	Y+3, r25	; 0x03
   t_sigSetup.ac_ledPins[2] = PIN_2; /*Green LED pin*/
    34d0:	84 e0       	ldi	r24, 0x04	; 4
    34d2:	8c 83       	std	Y+4, r24	; 0x04
   t_sigSetup.c_majorNum    = 2;
    34d4:	9d 83       	std	Y+5, r25	; 0x05

   if( drv_signalInit( t_sigSetup) < 0)
    34d6:	48 e0       	ldi	r20, 0x08	; 8
    34d8:	51 e0       	ldi	r21, 0x01	; 1
    34da:	62 e0       	ldi	r22, 0x02	; 2
    34dc:	74 e0       	ldi	r23, 0x04	; 4
    34de:	82 e0       	ldi	r24, 0x02	; 2
    34e0:	0e 94 51 19 	call	0x32a2	; 0x32a2 <drv_signalInit>
    34e4:	87 fd       	sbrc	r24, 7
    34e6:	31 c0       	rjmp	.+98     	; 0x354a <usr_appInit+0xc0>
   t_sdCardSetup.t_csPort   = GPIO_PORTC;
   t_sdCardSetup.t_csPin    = PIN_4;
   t_sdCardSetup.t_spiChan  = SPI_1;
   t_sdCardSetup.c_majorNum = 5;

   if( drv_sdInit( t_sdCardSetup) < 0)
    34e8:	60 e0       	ldi	r22, 0x00	; 0
    34ea:	72 e0       	ldi	r23, 0x02	; 2
    34ec:	80 e1       	ldi	r24, 0x10	; 16
    34ee:	95 e0       	ldi	r25, 0x05	; 5
    34f0:	0e 94 ae 0f 	call	0x1f5c	; 0x1f5c <drv_sdInit>
    34f4:	87 fd       	sbrc	r24, 7
    34f6:	29 c0       	rjmp	.+82     	; 0x354a <usr_appInit+0xc0>
   usr_driverRegistration();

   /*------------------------------------------------------------------------*
    * Initialize the debug interface.
    *------------------------------------------------------------------------*/
   if( arb_printfInit( "consoleDevice0",
    34f8:	80 e7       	ldi	r24, 0x70	; 112
    34fa:	90 e2       	ldi	r25, 0x20	; 32
    34fc:	60 e0       	ldi	r22, 0x00	; 0
    34fe:	72 e0       	ldi	r23, 0x02	; 2
    3500:	4f e7       	ldi	r20, 0x7F	; 127
    3502:	50 e2       	ldi	r21, 0x20	; 32
    3504:	0e 94 09 70 	call	0xe012	; 0xe012 <arb_printfInit>
    3508:	87 fd       	sbrc	r24, 7
    350a:	1f c0       	rjmp	.+62     	; 0x354a <usr_appInit+0xc0>
   }

   /*------------------------------------------------------------------------*
    * Initialize the console interface.
    *------------------------------------------------------------------------*/
   if( arb_consoleInit( "consoleDevice0",
    350c:	80 e7       	ldi	r24, 0x70	; 112
    350e:	90 e2       	ldi	r25, 0x20	; 32
    3510:	67 e9       	ldi	r22, 0x97	; 151
    3512:	70 e2       	ldi	r23, 0x20	; 32
    3514:	40 e0       	ldi	r20, 0x00	; 0
    3516:	54 e0       	ldi	r21, 0x04	; 4
    3518:	2e ef       	ldi	r18, 0xFE	; 254
    351a:	09 ea       	ldi	r16, 0xA9	; 169
    351c:	1a e1       	ldi	r17, 0x1A	; 26
    351e:	0e 94 55 62 	call	0xc4aa	; 0xc4aa <arb_consoleInit>
    3522:	87 fd       	sbrc	r24, 7
    3524:	12 c0       	rjmp	.+36     	; 0x354a <usr_appInit+0xc0>
   }

   /*------------------------------------------------------------------------*
    * Initialize the scheduler specifically for this application.
    *------------------------------------------------------------------------*/
   if( arb_schedulerInit( PRIORITY,
    3526:	81 e0       	ldi	r24, 0x01	; 1
    3528:	60 e0       	ldi	r22, 0x00	; 0
    352a:	72 e0       	ldi	r23, 0x02	; 2
    352c:	4e e1       	ldi	r20, 0x1E	; 30
    352e:	0e 94 87 77 	call	0xef0e	; 0xef0e <arb_schedulerInit>
    3532:	87 fd       	sbrc	r24, 7
    3534:	0a c0       	rjmp	.+20     	; 0x354a <usr_appInit+0xc0>
   usr_platformInit();

   /*########################################################################
     # Initialize user-space threads here...
     ########################################################################*/
   usr_mathTestInit();
    3536:	0e 94 65 22 	call	0x44ca	; 0x44ca <usr_mathTestInit>

   /*------------------------------------------------------------------------*
    * Once we have exited this function the OS will begin running.
    *------------------------------------------------------------------------*/

}/*End usr_appInit*/
    353a:	2b 96       	adiw	r28, 0x0b	; 11
    353c:	cd bf       	out	0x3d, r28	; 61
    353e:	de bf       	out	0x3e, r29	; 62
    3540:	cf 91       	pop	r28
    3542:	df 91       	pop	r29
    3544:	1f 91       	pop	r17
    3546:	0f 91       	pop	r16
    3548:	08 95       	ret
    *------------------------------------------------------------------------*/
   if( arb_schedulerInit( PRIORITY,
                          ARB_STACK_512B,
                          TIMER_7) < 0)
   {
      exit(0);
    354a:	80 e0       	ldi	r24, 0x00	; 0
    354c:	90 e0       	ldi	r25, 0x00	; 0
    354e:	0e 94 bc af 	call	0x15f78	; 0x15f78 <exit>

00003552 <usr_console>:
 * Public Function Definitions
 *---------------------------------------------------------------------------*/
bool usr_console( t_DEVHANDLE t_consoleHndl,
                  int8_t *pc_buff,
                  t_consoleTokHndl *pt_tokHndl)
{
    3552:	ef 92       	push	r14
    3554:	ff 92       	push	r15
    3556:	0f 93       	push	r16
    3558:	1f 93       	push	r17
    355a:	df 93       	push	r29
    355c:	cf 93       	push	r28
    355e:	0f 92       	push	r0
    3560:	0f 92       	push	r0
    3562:	cd b7       	in	r28, 0x3d	; 61
    3564:	de b7       	in	r29, 0x3e	; 62
    3566:	89 83       	std	Y+1, r24	; 0x01
    3568:	9a 83       	std	Y+2, r25	; 0x02
    356a:	f6 2e       	mov	r15, r22
    356c:	e7 2e       	mov	r14, r23
    356e:	ca 01       	movw	r24, r20

   bool b_success = true; /*A valid command was found...*/

   if( strcmp( (char *)pt_tokHndl->ac_tok[0], "hlpu") == 0)
    3570:	61 ea       	ldi	r22, 0xA1	; 161
    3572:	70 e2       	ldi	r23, 0x20	; 32
    3574:	0e 94 f5 b0 	call	0x161ea	; 0x161ea <strcmp>
    3578:	00 97       	sbiw	r24, 0x00	; 0
    357a:	51 f0       	breq	.+20     	; 0x3590 <usr_console+0x3e>
    357c:	80 e0       	ldi	r24, 0x00	; 0
   /*------------------------------------------------------------------------*
    * Return control over the console to the kernel...
    *------------------------------------------------------------------------*/
   return b_success;

}/*End usr_console*/
    357e:	0f 90       	pop	r0
    3580:	0f 90       	pop	r0
    3582:	cf 91       	pop	r28
    3584:	df 91       	pop	r29
    3586:	1f 91       	pop	r17
    3588:	0f 91       	pop	r16
    358a:	ff 90       	pop	r15
    358c:	ef 90       	pop	r14
    358e:	08 95       	ret
   if( strcmp( (char *)pt_tokHndl->ac_tok[0], "hlpu") == 0)
   {
      /*---------------------------------------------------------------------*
       * Display a list of all the possible user-space specific commands.
       *---------------------------------------------------------------------*/
      usr_displayUserHelp( t_consoleHndl,
    3590:	09 81       	ldd	r16, Y+1	; 0x01
    3592:	1a 81       	ldd	r17, Y+2	; 0x02

   /*------------------------------------------------------------------------*
    * Display a list of all the possible console commands specific
    * to a user-space application.
    *------------------------------------------------------------------------*/
   s_size = sprintf_P( (char *)pc_buff, PSTR(".------------------------------------------------------------------------.\n\r"));
    3594:	00 d0       	rcall	.+0      	; 0x3596 <usr_console+0x44>
    3596:	0f 92       	push	r0
    3598:	ed b7       	in	r30, 0x3d	; 61
    359a:	fe b7       	in	r31, 0x3e	; 62
    359c:	31 96       	adiw	r30, 0x01	; 1
    359e:	ad b7       	in	r26, 0x3d	; 61
    35a0:	be b7       	in	r27, 0x3e	; 62
    35a2:	11 96       	adiw	r26, 0x01	; 1
    35a4:	fc 92       	st	X, r15
    35a6:	e1 82       	std	Z+1, r14	; 0x01
    35a8:	88 e0       	ldi	r24, 0x08	; 8
    35aa:	93 e0       	ldi	r25, 0x03	; 3
    35ac:	82 83       	std	Z+2, r24	; 0x02
    35ae:	93 83       	std	Z+3, r25	; 0x03
    35b0:	0e 94 a5 b1 	call	0x1634a	; 0x1634a <sprintf_P>
    35b4:	ac 01       	movw	r20, r24
   arb_write( t_consoleHndl,
    35b6:	0f 90       	pop	r0
    35b8:	0f 90       	pop	r0
    35ba:	0f 90       	pop	r0
    35bc:	0f 90       	pop	r0
    35be:	c8 01       	movw	r24, r16
    35c0:	6f 2d       	mov	r22, r15
    35c2:	7e 2d       	mov	r23, r14
    35c4:	0e 94 ef 6c 	call	0xd9de	; 0xd9de <arb_write>
              pc_buff,
              s_size);
   s_size = sprintf_P( (char *)pc_buff, PSTR("| Command |     Arguments     |              Description                 |\n\r"));
    35c8:	00 d0       	rcall	.+0      	; 0x35ca <usr_console+0x78>
    35ca:	0f 92       	push	r0
    35cc:	ed b7       	in	r30, 0x3d	; 61
    35ce:	fe b7       	in	r31, 0x3e	; 62
    35d0:	31 96       	adiw	r30, 0x01	; 1
    35d2:	ad b7       	in	r26, 0x3d	; 61
    35d4:	be b7       	in	r27, 0x3e	; 62
    35d6:	11 96       	adiw	r26, 0x01	; 1
    35d8:	fc 92       	st	X, r15
    35da:	e1 82       	std	Z+1, r14	; 0x01
    35dc:	8b eb       	ldi	r24, 0xBB	; 187
    35de:	92 e0       	ldi	r25, 0x02	; 2
    35e0:	82 83       	std	Z+2, r24	; 0x02
    35e2:	93 83       	std	Z+3, r25	; 0x03
    35e4:	0e 94 a5 b1 	call	0x1634a	; 0x1634a <sprintf_P>
    35e8:	ac 01       	movw	r20, r24
   arb_write( t_consoleHndl,
    35ea:	0f 90       	pop	r0
    35ec:	0f 90       	pop	r0
    35ee:	0f 90       	pop	r0
    35f0:	0f 90       	pop	r0
    35f2:	c8 01       	movw	r24, r16
    35f4:	6f 2d       	mov	r22, r15
    35f6:	7e 2d       	mov	r23, r14
    35f8:	0e 94 ef 6c 	call	0xd9de	; 0xd9de <arb_write>
              pc_buff,
              s_size);
   s_size = sprintf_P( (char *)pc_buff, PSTR("|---------|-------------------|------------------------------------------|\n\r"));
    35fc:	00 d0       	rcall	.+0      	; 0x35fe <usr_console+0xac>
    35fe:	0f 92       	push	r0
    3600:	ed b7       	in	r30, 0x3d	; 61
    3602:	fe b7       	in	r31, 0x3e	; 62
    3604:	31 96       	adiw	r30, 0x01	; 1
    3606:	ad b7       	in	r26, 0x3d	; 61
    3608:	be b7       	in	r27, 0x3e	; 62
    360a:	11 96       	adiw	r26, 0x01	; 1
    360c:	fc 92       	st	X, r15
    360e:	e1 82       	std	Z+1, r14	; 0x01
    3610:	8e e6       	ldi	r24, 0x6E	; 110
    3612:	92 e0       	ldi	r25, 0x02	; 2
    3614:	82 83       	std	Z+2, r24	; 0x02
    3616:	93 83       	std	Z+3, r25	; 0x03
    3618:	0e 94 a5 b1 	call	0x1634a	; 0x1634a <sprintf_P>
    361c:	ac 01       	movw	r20, r24
   arb_write( t_consoleHndl,
    361e:	0f 90       	pop	r0
    3620:	0f 90       	pop	r0
    3622:	0f 90       	pop	r0
    3624:	0f 90       	pop	r0
    3626:	c8 01       	movw	r24, r16
    3628:	6f 2d       	mov	r22, r15
    362a:	7e 2d       	mov	r23, r14
    362c:	0e 94 ef 6c 	call	0xd9de	; 0xd9de <arb_write>
    3630:	81 e0       	ldi	r24, 0x01	; 1
    3632:	a5 cf       	rjmp	.-182    	; 0x357e <usr_console+0x2c>

00003634 <usr_mathTest>:
/*---------------------------------------------------------------------------*
 * Private Function Definitions
 *---------------------------------------------------------------------------*/
static void usr_mathTest( t_parameters t_param,
                          t_arguments  t_args)
{
    3634:	ef 92       	push	r14
    3636:	ff 92       	push	r15
    3638:	0f 93       	push	r16
    363a:	1f 93       	push	r17
    363c:	df 93       	push	r29
    363e:	cf 93       	push	r28
    3640:	cd b7       	in	r28, 0x3d	; 61
    3642:	de b7       	in	r29, 0x3e	; 62
    3644:	cf 5d       	subi	r28, 0xDF	; 223
    3646:	d0 40       	sbci	r29, 0x00	; 0
    3648:	cd bf       	out	0x3d, r28	; 61
    364a:	de bf       	out	0x3e, r29	; 62
    364c:	fe 01       	movw	r30, r28
    364e:	ef 56       	subi	r30, 0x6F	; 111
    3650:	ff 4f       	sbci	r31, 0xFF	; 255
    3652:	80 83       	st	Z, r24
    3654:	91 83       	std	Z+1, r25	; 0x01
    3656:	fe 01       	movw	r30, r28
    3658:	ed 56       	subi	r30, 0x6D	; 109
    365a:	ff 4f       	sbci	r31, 0xFF	; 255
    365c:	60 83       	st	Z, r22
    365e:	71 83       	std	Z+1, r23	; 0x01
   uint32_t i_phase = 0;
    3660:	1d 8a       	std	Y+21, r1	; 0x15
    3662:	1e 8a       	std	Y+22, r1	; 0x16
    3664:	1f 8a       	std	Y+23, r1	; 0x17
    3666:	18 8e       	std	Y+24, r1	; 0x18
   static float f_phase;

   /*------------------------------------------------------------------------*
    * Determine how long it takes to call the system time function.
    *------------------------------------------------------------------------*/
   t_time1 = arb_sysTimeNow();
    3668:	ce 01       	movw	r24, r28
    366a:	8b 56       	subi	r24, 0x6B	; 107
    366c:	9f 4f       	sbci	r25, 0xFF	; 255
    366e:	0e 94 a4 81 	call	0x10348	; 0x10348 <arb_sysTimeNow>
    3672:	ce 01       	movw	r24, r28
    3674:	8b 56       	subi	r24, 0x6B	; 107
    3676:	9f 4f       	sbci	r25, 0xFF	; 255
    3678:	0f e9       	ldi	r16, 0x9F	; 159
    367a:	14 e2       	ldi	r17, 0x24	; 36
    367c:	c2 55       	subi	r28, 0x52	; 82
    367e:	df 4f       	sbci	r29, 0xFF	; 255
    3680:	08 83       	st	Y, r16
    3682:	19 83       	std	Y+1, r17	; 0x01
    3684:	ce 5a       	subi	r28, 0xAE	; 174
    3686:	d0 40       	sbci	r29, 0x00	; 0
    3688:	c0 55       	subi	r28, 0x50	; 80
    368a:	df 4f       	sbci	r29, 0xFF	; 255
    368c:	88 83       	st	Y, r24
    368e:	99 83       	std	Y+1, r25	; 0x01
    3690:	c0 5b       	subi	r28, 0xB0	; 176
    3692:	d0 40       	sbci	r29, 0x00	; 0
    3694:	19 e1       	ldi	r17, 0x19	; 25
    3696:	ce 54       	subi	r28, 0x4E	; 78
    3698:	df 4f       	sbci	r29, 0xFF	; 255
    369a:	18 83       	st	Y, r17
    369c:	c2 5b       	subi	r28, 0xB2	; 178
    369e:	d0 40       	sbci	r29, 0x00	; 0
    36a0:	c0 55       	subi	r28, 0x50	; 80
    36a2:	df 4f       	sbci	r29, 0xFF	; 255
    36a4:	e8 81       	ld	r30, Y
    36a6:	f9 81       	ldd	r31, Y+1	; 0x01
    36a8:	c0 5b       	subi	r28, 0xB0	; 176
    36aa:	d0 40       	sbci	r29, 0x00	; 0
    36ac:	00 80       	ld	r0, Z
    36ae:	c0 55       	subi	r28, 0x50	; 80
    36b0:	df 4f       	sbci	r29, 0xFF	; 255
    36b2:	08 81       	ld	r16, Y
    36b4:	19 81       	ldd	r17, Y+1	; 0x01
    36b6:	c0 5b       	subi	r28, 0xB0	; 176
    36b8:	d0 40       	sbci	r29, 0x00	; 0
    36ba:	0f 5f       	subi	r16, 0xFF	; 255
    36bc:	1f 4f       	sbci	r17, 0xFF	; 255
    36be:	c0 55       	subi	r28, 0x50	; 80
    36c0:	df 4f       	sbci	r29, 0xFF	; 255
    36c2:	08 83       	st	Y, r16
    36c4:	19 83       	std	Y+1, r17	; 0x01
    36c6:	c0 5b       	subi	r28, 0xB0	; 176
    36c8:	d0 40       	sbci	r29, 0x00	; 0
    36ca:	c2 55       	subi	r28, 0x52	; 82
    36cc:	df 4f       	sbci	r29, 0xFF	; 255
    36ce:	e8 81       	ld	r30, Y
    36d0:	f9 81       	ldd	r31, Y+1	; 0x01
    36d2:	ce 5a       	subi	r28, 0xAE	; 174
    36d4:	d0 40       	sbci	r29, 0x00	; 0
    36d6:	00 82       	st	Z, r0
    36d8:	c2 55       	subi	r28, 0x52	; 82
    36da:	df 4f       	sbci	r29, 0xFF	; 255
    36dc:	08 81       	ld	r16, Y
    36de:	19 81       	ldd	r17, Y+1	; 0x01
    36e0:	ce 5a       	subi	r28, 0xAE	; 174
    36e2:	d0 40       	sbci	r29, 0x00	; 0
    36e4:	0f 5f       	subi	r16, 0xFF	; 255
    36e6:	1f 4f       	sbci	r17, 0xFF	; 255
    36e8:	c2 55       	subi	r28, 0x52	; 82
    36ea:	df 4f       	sbci	r29, 0xFF	; 255
    36ec:	08 83       	st	Y, r16
    36ee:	19 83       	std	Y+1, r17	; 0x01
    36f0:	ce 5a       	subi	r28, 0xAE	; 174
    36f2:	d0 40       	sbci	r29, 0x00	; 0
    36f4:	ce 54       	subi	r28, 0x4E	; 78
    36f6:	df 4f       	sbci	r29, 0xFF	; 255
    36f8:	18 81       	ld	r17, Y
    36fa:	c2 5b       	subi	r28, 0xB2	; 178
    36fc:	d0 40       	sbci	r29, 0x00	; 0
    36fe:	11 50       	subi	r17, 0x01	; 1
    3700:	ce 54       	subi	r28, 0x4E	; 78
    3702:	df 4f       	sbci	r29, 0xFF	; 255
    3704:	18 83       	st	Y, r17
    3706:	c2 5b       	subi	r28, 0xB2	; 178
    3708:	d0 40       	sbci	r29, 0x00	; 0
    370a:	ce 54       	subi	r28, 0x4E	; 78
    370c:	df 4f       	sbci	r29, 0xFF	; 255
    370e:	28 81       	ld	r18, Y
    3710:	c2 5b       	subi	r28, 0xB2	; 178
    3712:	d0 40       	sbci	r29, 0x00	; 0
    3714:	22 23       	and	r18, r18
    3716:	21 f6       	brne	.-120    	; 0x36a0 <usr_mathTest+0x6c>
   t_time2 = arb_sysTimeNow();
    3718:	ce 01       	movw	r24, r28
    371a:	8b 56       	subi	r24, 0x6B	; 107
    371c:	9f 4f       	sbci	r25, 0xFF	; 255
    371e:	0e 94 a4 81 	call	0x10348	; 0x10348 <arb_sysTimeNow>
    3722:	ce 01       	movw	r24, r28
    3724:	8b 56       	subi	r24, 0x6B	; 107
    3726:	9f 4f       	sbci	r25, 0xFF	; 255
    3728:	46 e8       	ldi	r20, 0x86	; 134
    372a:	54 e2       	ldi	r21, 0x24	; 36
    372c:	cd 54       	subi	r28, 0x4D	; 77
    372e:	df 4f       	sbci	r29, 0xFF	; 255
    3730:	48 83       	st	Y, r20
    3732:	59 83       	std	Y+1, r21	; 0x01
    3734:	c3 5b       	subi	r28, 0xB3	; 179
    3736:	d0 40       	sbci	r29, 0x00	; 0
    3738:	cb 54       	subi	r28, 0x4B	; 75
    373a:	df 4f       	sbci	r29, 0xFF	; 255
    373c:	88 83       	st	Y, r24
    373e:	99 83       	std	Y+1, r25	; 0x01
    3740:	c5 5b       	subi	r28, 0xB5	; 181
    3742:	d0 40       	sbci	r29, 0x00	; 0
    3744:	59 e1       	ldi	r21, 0x19	; 25
    3746:	c9 54       	subi	r28, 0x49	; 73
    3748:	df 4f       	sbci	r29, 0xFF	; 255
    374a:	58 83       	st	Y, r21
    374c:	c7 5b       	subi	r28, 0xB7	; 183
    374e:	d0 40       	sbci	r29, 0x00	; 0
    3750:	cb 54       	subi	r28, 0x4B	; 75
    3752:	df 4f       	sbci	r29, 0xFF	; 255
    3754:	e8 81       	ld	r30, Y
    3756:	f9 81       	ldd	r31, Y+1	; 0x01
    3758:	c5 5b       	subi	r28, 0xB5	; 181
    375a:	d0 40       	sbci	r29, 0x00	; 0
    375c:	00 80       	ld	r0, Z
    375e:	cb 54       	subi	r28, 0x4B	; 75
    3760:	df 4f       	sbci	r29, 0xFF	; 255
    3762:	08 81       	ld	r16, Y
    3764:	19 81       	ldd	r17, Y+1	; 0x01
    3766:	c5 5b       	subi	r28, 0xB5	; 181
    3768:	d0 40       	sbci	r29, 0x00	; 0
    376a:	0f 5f       	subi	r16, 0xFF	; 255
    376c:	1f 4f       	sbci	r17, 0xFF	; 255
    376e:	cb 54       	subi	r28, 0x4B	; 75
    3770:	df 4f       	sbci	r29, 0xFF	; 255
    3772:	08 83       	st	Y, r16
    3774:	19 83       	std	Y+1, r17	; 0x01
    3776:	c5 5b       	subi	r28, 0xB5	; 181
    3778:	d0 40       	sbci	r29, 0x00	; 0
    377a:	cd 54       	subi	r28, 0x4D	; 77
    377c:	df 4f       	sbci	r29, 0xFF	; 255
    377e:	e8 81       	ld	r30, Y
    3780:	f9 81       	ldd	r31, Y+1	; 0x01
    3782:	c3 5b       	subi	r28, 0xB3	; 179
    3784:	d0 40       	sbci	r29, 0x00	; 0
    3786:	00 82       	st	Z, r0
    3788:	cd 54       	subi	r28, 0x4D	; 77
    378a:	df 4f       	sbci	r29, 0xFF	; 255
    378c:	08 81       	ld	r16, Y
    378e:	19 81       	ldd	r17, Y+1	; 0x01
    3790:	c3 5b       	subi	r28, 0xB3	; 179
    3792:	d0 40       	sbci	r29, 0x00	; 0
    3794:	0f 5f       	subi	r16, 0xFF	; 255
    3796:	1f 4f       	sbci	r17, 0xFF	; 255
    3798:	cd 54       	subi	r28, 0x4D	; 77
    379a:	df 4f       	sbci	r29, 0xFF	; 255
    379c:	08 83       	st	Y, r16
    379e:	19 83       	std	Y+1, r17	; 0x01
    37a0:	c3 5b       	subi	r28, 0xB3	; 179
    37a2:	d0 40       	sbci	r29, 0x00	; 0
    37a4:	c9 54       	subi	r28, 0x49	; 73
    37a6:	df 4f       	sbci	r29, 0xFF	; 255
    37a8:	18 81       	ld	r17, Y
    37aa:	c7 5b       	subi	r28, 0xB7	; 183
    37ac:	d0 40       	sbci	r29, 0x00	; 0
    37ae:	11 50       	subi	r17, 0x01	; 1
    37b0:	c9 54       	subi	r28, 0x49	; 73
    37b2:	df 4f       	sbci	r29, 0xFF	; 255
    37b4:	18 83       	st	Y, r17
    37b6:	c7 5b       	subi	r28, 0xB7	; 183
    37b8:	d0 40       	sbci	r29, 0x00	; 0
    37ba:	c9 54       	subi	r28, 0x49	; 73
    37bc:	df 4f       	sbci	r29, 0xFF	; 255
    37be:	28 81       	ld	r18, Y
    37c0:	c7 5b       	subi	r28, 0xB7	; 183
    37c2:	d0 40       	sbci	r29, 0x00	; 0
    37c4:	22 23       	and	r18, r18
    37c6:	21 f6       	brne	.-120    	; 0x3750 <usr_mathTest+0x11c>
   s_callLoad = t_time2.i_usec - t_time1.i_usec;
    37c8:	80 91 9b 24 	lds	r24, 0x249B
    37cc:	90 91 9c 24 	lds	r25, 0x249C
    37d0:	a0 91 9d 24 	lds	r26, 0x249D
    37d4:	b0 91 9e 24 	lds	r27, 0x249E
    37d8:	9c 01       	movw	r18, r24
    37da:	80 91 b4 24 	lds	r24, 0x24B4
    37de:	90 91 b5 24 	lds	r25, 0x24B5
    37e2:	a0 91 b6 24 	lds	r26, 0x24B6
    37e6:	b0 91 b7 24 	lds	r27, 0x24B7
    37ea:	a9 01       	movw	r20, r18
    37ec:	48 1b       	sub	r20, r24
    37ee:	59 0b       	sbc	r21, r25
    37f0:	ca 01       	movw	r24, r20
    37f2:	80 93 84 24 	sts	0x2484, r24
    37f6:	90 93 85 24 	sts	0x2485, r25

   while( RUN_FOREVER)
   {
      i_phase = i_phase + 64;
    37fa:	8d 89       	ldd	r24, Y+21	; 0x15
    37fc:	9e 89       	ldd	r25, Y+22	; 0x16
    37fe:	af 89       	ldd	r26, Y+23	; 0x17
    3800:	b8 8d       	ldd	r27, Y+24	; 0x18
    3802:	80 5c       	subi	r24, 0xC0	; 192
    3804:	9f 4f       	sbci	r25, 0xFF	; 255
    3806:	af 4f       	sbci	r26, 0xFF	; 255
    3808:	bf 4f       	sbci	r27, 0xFF	; 255
    380a:	8d 8b       	std	Y+21, r24	; 0x15
    380c:	9e 8b       	std	Y+22, r25	; 0x16
    380e:	af 8b       	std	Y+23, r26	; 0x17
    3810:	b8 8f       	std	Y+24, r27	; 0x18
      if( i_phase > UTL_MATH_FXDPNT_TWO_PI_WRAP)
    3812:	8d 89       	ldd	r24, Y+21	; 0x15
    3814:	9e 89       	ldd	r25, Y+22	; 0x16
    3816:	af 89       	ldd	r26, Y+23	; 0x17
    3818:	b8 8d       	ldd	r27, Y+24	; 0x18
    381a:	81 30       	cpi	r24, 0x01	; 1
    381c:	50 e0       	ldi	r21, 0x00	; 0
    381e:	95 07       	cpc	r25, r21
    3820:	51 e0       	ldi	r21, 0x01	; 1
    3822:	a5 07       	cpc	r26, r21
    3824:	50 e0       	ldi	r21, 0x00	; 0
    3826:	b5 07       	cpc	r27, r21
    3828:	60 f0       	brcs	.+24     	; 0x3842 <usr_mathTest+0x20e>
         i_phase = i_phase - UTL_MATH_FXDPNT_TWO_PI_WRAP;
    382a:	8d 89       	ldd	r24, Y+21	; 0x15
    382c:	9e 89       	ldd	r25, Y+22	; 0x16
    382e:	af 89       	ldd	r26, Y+23	; 0x17
    3830:	b8 8d       	ldd	r27, Y+24	; 0x18
    3832:	80 50       	subi	r24, 0x00	; 0
    3834:	90 40       	sbci	r25, 0x00	; 0
    3836:	a1 40       	sbci	r26, 0x01	; 1
    3838:	b0 40       	sbci	r27, 0x00	; 0
    383a:	8d 8b       	std	Y+21, r24	; 0x15
    383c:	9e 8b       	std	Y+22, r25	; 0x16
    383e:	af 8b       	std	Y+23, r26	; 0x17
    3840:	b8 8f       	std	Y+24, r27	; 0x18

      /*---------------------------------------------------------------------*
       * Determine the loading when calling the utl_math.c cosine routine.
       *---------------------------------------------------------------------*/
      t_time1 = arb_sysTimeNow();
    3842:	ce 01       	movw	r24, r28
    3844:	8b 56       	subi	r24, 0x6B	; 107
    3846:	9f 4f       	sbci	r25, 0xFF	; 255
    3848:	0e 94 a4 81 	call	0x10348	; 0x10348 <arb_sysTimeNow>
    384c:	ce 01       	movw	r24, r28
    384e:	8b 56       	subi	r24, 0x6B	; 107
    3850:	9f 4f       	sbci	r25, 0xFF	; 255
    3852:	ef e9       	ldi	r30, 0x9F	; 159
    3854:	f4 e2       	ldi	r31, 0x24	; 36
    3856:	c8 54       	subi	r28, 0x48	; 72
    3858:	df 4f       	sbci	r29, 0xFF	; 255
    385a:	e8 83       	st	Y, r30
    385c:	f9 83       	std	Y+1, r31	; 0x01
    385e:	c8 5b       	subi	r28, 0xB8	; 184
    3860:	d0 40       	sbci	r29, 0x00	; 0
    3862:	c6 54       	subi	r28, 0x46	; 70
    3864:	df 4f       	sbci	r29, 0xFF	; 255
    3866:	88 83       	st	Y, r24
    3868:	99 83       	std	Y+1, r25	; 0x01
    386a:	ca 5b       	subi	r28, 0xBA	; 186
    386c:	d0 40       	sbci	r29, 0x00	; 0
    386e:	f9 e1       	ldi	r31, 0x19	; 25
    3870:	c4 54       	subi	r28, 0x44	; 68
    3872:	df 4f       	sbci	r29, 0xFF	; 255
    3874:	f8 83       	st	Y, r31
    3876:	cc 5b       	subi	r28, 0xBC	; 188
    3878:	d0 40       	sbci	r29, 0x00	; 0
    387a:	c6 54       	subi	r28, 0x46	; 70
    387c:	df 4f       	sbci	r29, 0xFF	; 255
    387e:	e8 81       	ld	r30, Y
    3880:	f9 81       	ldd	r31, Y+1	; 0x01
    3882:	ca 5b       	subi	r28, 0xBA	; 186
    3884:	d0 40       	sbci	r29, 0x00	; 0
    3886:	00 80       	ld	r0, Z
    3888:	c6 54       	subi	r28, 0x46	; 70
    388a:	df 4f       	sbci	r29, 0xFF	; 255
    388c:	08 81       	ld	r16, Y
    388e:	19 81       	ldd	r17, Y+1	; 0x01
    3890:	ca 5b       	subi	r28, 0xBA	; 186
    3892:	d0 40       	sbci	r29, 0x00	; 0
    3894:	0f 5f       	subi	r16, 0xFF	; 255
    3896:	1f 4f       	sbci	r17, 0xFF	; 255
    3898:	c6 54       	subi	r28, 0x46	; 70
    389a:	df 4f       	sbci	r29, 0xFF	; 255
    389c:	08 83       	st	Y, r16
    389e:	19 83       	std	Y+1, r17	; 0x01
    38a0:	ca 5b       	subi	r28, 0xBA	; 186
    38a2:	d0 40       	sbci	r29, 0x00	; 0
    38a4:	c8 54       	subi	r28, 0x48	; 72
    38a6:	df 4f       	sbci	r29, 0xFF	; 255
    38a8:	e8 81       	ld	r30, Y
    38aa:	f9 81       	ldd	r31, Y+1	; 0x01
    38ac:	c8 5b       	subi	r28, 0xB8	; 184
    38ae:	d0 40       	sbci	r29, 0x00	; 0
    38b0:	00 82       	st	Z, r0
    38b2:	c8 54       	subi	r28, 0x48	; 72
    38b4:	df 4f       	sbci	r29, 0xFF	; 255
    38b6:	08 81       	ld	r16, Y
    38b8:	19 81       	ldd	r17, Y+1	; 0x01
    38ba:	c8 5b       	subi	r28, 0xB8	; 184
    38bc:	d0 40       	sbci	r29, 0x00	; 0
    38be:	0f 5f       	subi	r16, 0xFF	; 255
    38c0:	1f 4f       	sbci	r17, 0xFF	; 255
    38c2:	c8 54       	subi	r28, 0x48	; 72
    38c4:	df 4f       	sbci	r29, 0xFF	; 255
    38c6:	08 83       	st	Y, r16
    38c8:	19 83       	std	Y+1, r17	; 0x01
    38ca:	c8 5b       	subi	r28, 0xB8	; 184
    38cc:	d0 40       	sbci	r29, 0x00	; 0
    38ce:	c4 54       	subi	r28, 0x44	; 68
    38d0:	df 4f       	sbci	r29, 0xFF	; 255
    38d2:	18 81       	ld	r17, Y
    38d4:	cc 5b       	subi	r28, 0xBC	; 188
    38d6:	d0 40       	sbci	r29, 0x00	; 0
    38d8:	11 50       	subi	r17, 0x01	; 1
    38da:	c4 54       	subi	r28, 0x44	; 68
    38dc:	df 4f       	sbci	r29, 0xFF	; 255
    38de:	18 83       	st	Y, r17
    38e0:	cc 5b       	subi	r28, 0xBC	; 188
    38e2:	d0 40       	sbci	r29, 0x00	; 0
    38e4:	c4 54       	subi	r28, 0x44	; 68
    38e6:	df 4f       	sbci	r29, 0xFF	; 255
    38e8:	28 81       	ld	r18, Y
    38ea:	cc 5b       	subi	r28, 0xBC	; 188
    38ec:	d0 40       	sbci	r29, 0x00	; 0
    38ee:	22 23       	and	r18, r18
    38f0:	21 f6       	brne	.-120    	; 0x387a <usr_mathTest+0x246>
      s_cos = utl_cos16_16( i_phase);
    38f2:	8d 89       	ldd	r24, Y+21	; 0x15
    38f4:	9e 89       	ldd	r25, Y+22	; 0x16
    38f6:	0e 94 65 8b 	call	0x116ca	; 0x116ca <utl_cos16_16>
    38fa:	8b 8b       	std	Y+19, r24	; 0x13
    38fc:	9c 8b       	std	Y+20, r25	; 0x14
      t_time2 = arb_sysTimeNow();
    38fe:	ce 01       	movw	r24, r28
    3900:	8b 56       	subi	r24, 0x6B	; 107
    3902:	9f 4f       	sbci	r25, 0xFF	; 255
    3904:	0e 94 a4 81 	call	0x10348	; 0x10348 <arb_sysTimeNow>
    3908:	ce 01       	movw	r24, r28
    390a:	8b 56       	subi	r24, 0x6B	; 107
    390c:	9f 4f       	sbci	r25, 0xFF	; 255
    390e:	46 e8       	ldi	r20, 0x86	; 134
    3910:	54 e2       	ldi	r21, 0x24	; 36
    3912:	c3 54       	subi	r28, 0x43	; 67
    3914:	df 4f       	sbci	r29, 0xFF	; 255
    3916:	48 83       	st	Y, r20
    3918:	59 83       	std	Y+1, r21	; 0x01
    391a:	cd 5b       	subi	r28, 0xBD	; 189
    391c:	d0 40       	sbci	r29, 0x00	; 0
    391e:	c1 54       	subi	r28, 0x41	; 65
    3920:	df 4f       	sbci	r29, 0xFF	; 255
    3922:	88 83       	st	Y, r24
    3924:	99 83       	std	Y+1, r25	; 0x01
    3926:	cf 5b       	subi	r28, 0xBF	; 191
    3928:	d0 40       	sbci	r29, 0x00	; 0
    392a:	59 e1       	ldi	r21, 0x19	; 25
    392c:	cf 53       	subi	r28, 0x3F	; 63
    392e:	df 4f       	sbci	r29, 0xFF	; 255
    3930:	58 83       	st	Y, r21
    3932:	c1 5c       	subi	r28, 0xC1	; 193
    3934:	d0 40       	sbci	r29, 0x00	; 0
    3936:	c1 54       	subi	r28, 0x41	; 65
    3938:	df 4f       	sbci	r29, 0xFF	; 255
    393a:	e8 81       	ld	r30, Y
    393c:	f9 81       	ldd	r31, Y+1	; 0x01
    393e:	cf 5b       	subi	r28, 0xBF	; 191
    3940:	d0 40       	sbci	r29, 0x00	; 0
    3942:	00 80       	ld	r0, Z
    3944:	c1 54       	subi	r28, 0x41	; 65
    3946:	df 4f       	sbci	r29, 0xFF	; 255
    3948:	08 81       	ld	r16, Y
    394a:	19 81       	ldd	r17, Y+1	; 0x01
    394c:	cf 5b       	subi	r28, 0xBF	; 191
    394e:	d0 40       	sbci	r29, 0x00	; 0
    3950:	0f 5f       	subi	r16, 0xFF	; 255
    3952:	1f 4f       	sbci	r17, 0xFF	; 255
    3954:	c1 54       	subi	r28, 0x41	; 65
    3956:	df 4f       	sbci	r29, 0xFF	; 255
    3958:	08 83       	st	Y, r16
    395a:	19 83       	std	Y+1, r17	; 0x01
    395c:	cf 5b       	subi	r28, 0xBF	; 191
    395e:	d0 40       	sbci	r29, 0x00	; 0
    3960:	c3 54       	subi	r28, 0x43	; 67
    3962:	df 4f       	sbci	r29, 0xFF	; 255
    3964:	e8 81       	ld	r30, Y
    3966:	f9 81       	ldd	r31, Y+1	; 0x01
    3968:	cd 5b       	subi	r28, 0xBD	; 189
    396a:	d0 40       	sbci	r29, 0x00	; 0
    396c:	00 82       	st	Z, r0
    396e:	c3 54       	subi	r28, 0x43	; 67
    3970:	df 4f       	sbci	r29, 0xFF	; 255
    3972:	08 81       	ld	r16, Y
    3974:	19 81       	ldd	r17, Y+1	; 0x01
    3976:	cd 5b       	subi	r28, 0xBD	; 189
    3978:	d0 40       	sbci	r29, 0x00	; 0
    397a:	0f 5f       	subi	r16, 0xFF	; 255
    397c:	1f 4f       	sbci	r17, 0xFF	; 255
    397e:	c3 54       	subi	r28, 0x43	; 67
    3980:	df 4f       	sbci	r29, 0xFF	; 255
    3982:	08 83       	st	Y, r16
    3984:	19 83       	std	Y+1, r17	; 0x01
    3986:	cd 5b       	subi	r28, 0xBD	; 189
    3988:	d0 40       	sbci	r29, 0x00	; 0
    398a:	cf 53       	subi	r28, 0x3F	; 63
    398c:	df 4f       	sbci	r29, 0xFF	; 255
    398e:	18 81       	ld	r17, Y
    3990:	c1 5c       	subi	r28, 0xC1	; 193
    3992:	d0 40       	sbci	r29, 0x00	; 0
    3994:	11 50       	subi	r17, 0x01	; 1
    3996:	cf 53       	subi	r28, 0x3F	; 63
    3998:	df 4f       	sbci	r29, 0xFF	; 255
    399a:	18 83       	st	Y, r17
    399c:	c1 5c       	subi	r28, 0xC1	; 193
    399e:	d0 40       	sbci	r29, 0x00	; 0
    39a0:	cf 53       	subi	r28, 0x3F	; 63
    39a2:	df 4f       	sbci	r29, 0xFF	; 255
    39a4:	28 81       	ld	r18, Y
    39a6:	c1 5c       	subi	r28, 0xC1	; 193
    39a8:	d0 40       	sbci	r29, 0x00	; 0
    39aa:	22 23       	and	r18, r18
    39ac:	21 f6       	brne	.-120    	; 0x3936 <usr_mathTest+0x302>
      i_loading1 = t_time2.i_usec-t_time1.i_usec;
    39ae:	20 91 9b 24 	lds	r18, 0x249B
    39b2:	30 91 9c 24 	lds	r19, 0x249C
    39b6:	40 91 9d 24 	lds	r20, 0x249D
    39ba:	50 91 9e 24 	lds	r21, 0x249E
    39be:	80 91 b4 24 	lds	r24, 0x24B4
    39c2:	90 91 b5 24 	lds	r25, 0x24B5
    39c6:	a0 91 b6 24 	lds	r26, 0x24B6
    39ca:	b0 91 b7 24 	lds	r27, 0x24B7
    39ce:	79 01       	movw	r14, r18
    39d0:	8a 01       	movw	r16, r20
    39d2:	e8 1a       	sub	r14, r24
    39d4:	f9 0a       	sbc	r15, r25
    39d6:	0a 0b       	sbc	r16, r26
    39d8:	1b 0b       	sbc	r17, r27
    39da:	d8 01       	movw	r26, r16
    39dc:	c7 01       	movw	r24, r14
    39de:	80 93 80 24 	sts	0x2480, r24
    39e2:	90 93 81 24 	sts	0x2481, r25
    39e6:	a0 93 82 24 	sts	0x2482, r26
    39ea:	b0 93 83 24 	sts	0x2483, r27
      i_loading1 = i_loading1 - s_callLoad;
    39ee:	20 91 80 24 	lds	r18, 0x2480
    39f2:	30 91 81 24 	lds	r19, 0x2481
    39f6:	40 91 82 24 	lds	r20, 0x2482
    39fa:	50 91 83 24 	lds	r21, 0x2483
    39fe:	80 91 84 24 	lds	r24, 0x2484
    3a02:	90 91 85 24 	lds	r25, 0x2485
    3a06:	aa 27       	eor	r26, r26
    3a08:	97 fd       	sbrc	r25, 7
    3a0a:	a0 95       	com	r26
    3a0c:	ba 2f       	mov	r27, r26
    3a0e:	79 01       	movw	r14, r18
    3a10:	8a 01       	movw	r16, r20
    3a12:	e8 1a       	sub	r14, r24
    3a14:	f9 0a       	sbc	r15, r25
    3a16:	0a 0b       	sbc	r16, r26
    3a18:	1b 0b       	sbc	r17, r27
    3a1a:	d8 01       	movw	r26, r16
    3a1c:	c7 01       	movw	r24, r14
    3a1e:	80 93 80 24 	sts	0x2480, r24
    3a22:	90 93 81 24 	sts	0x2481, r25
    3a26:	a0 93 82 24 	sts	0x2482, r26
    3a2a:	b0 93 83 24 	sts	0x2483, r27
      if( i_loading1 < 0)
    3a2e:	80 91 80 24 	lds	r24, 0x2480
    3a32:	90 91 81 24 	lds	r25, 0x2481
    3a36:	a0 91 82 24 	lds	r26, 0x2482
    3a3a:	b0 91 83 24 	lds	r27, 0x2483
    3a3e:	bb 23       	and	r27, r27
    3a40:	a4 f4       	brge	.+40     	; 0x3a6a <usr_mathTest+0x436>
         i_loading1 = i_loading1 + 1000000;
    3a42:	80 91 80 24 	lds	r24, 0x2480
    3a46:	90 91 81 24 	lds	r25, 0x2481
    3a4a:	a0 91 82 24 	lds	r26, 0x2482
    3a4e:	b0 91 83 24 	lds	r27, 0x2483
    3a52:	80 5c       	subi	r24, 0xC0	; 192
    3a54:	9d 4b       	sbci	r25, 0xBD	; 189
    3a56:	a0 4f       	sbci	r26, 0xF0	; 240
    3a58:	bf 4f       	sbci	r27, 0xFF	; 255
    3a5a:	80 93 80 24 	sts	0x2480, r24
    3a5e:	90 93 81 24 	sts	0x2481, r25
    3a62:	a0 93 82 24 	sts	0x2482, r26
    3a66:	b0 93 83 24 	sts	0x2483, r27

      f_phase = (2.0f*3.14159f*(float)i_phase)/UTL_MATH_FXDPNT_TWO_PI_WRAP;
    3a6a:	6d 89       	ldd	r22, Y+21	; 0x15
    3a6c:	7e 89       	ldd	r23, Y+22	; 0x16
    3a6e:	8f 89       	ldd	r24, Y+23	; 0x17
    3a70:	98 8d       	ldd	r25, Y+24	; 0x18
    3a72:	0e 94 a5 ac 	call	0x1594a	; 0x1594a <__floatunsisf>
    3a76:	dc 01       	movw	r26, r24
    3a78:	cb 01       	movw	r24, r22
    3a7a:	bc 01       	movw	r22, r24
    3a7c:	cd 01       	movw	r24, r26
    3a7e:	20 ed       	ldi	r18, 0xD0	; 208
    3a80:	3f e0       	ldi	r19, 0x0F	; 15
    3a82:	49 ec       	ldi	r20, 0xC9	; 201
    3a84:	50 e4       	ldi	r21, 0x40	; 64
    3a86:	0e 94 0e ae 	call	0x15c1c	; 0x15c1c <__mulsf3>
    3a8a:	dc 01       	movw	r26, r24
    3a8c:	cb 01       	movw	r24, r22
    3a8e:	bc 01       	movw	r22, r24
    3a90:	cd 01       	movw	r24, r26
    3a92:	20 e0       	ldi	r18, 0x00	; 0
    3a94:	30 e0       	ldi	r19, 0x00	; 0
    3a96:	40 e8       	ldi	r20, 0x80	; 128
    3a98:	57 e4       	ldi	r21, 0x47	; 71
    3a9a:	0e 94 d2 ab 	call	0x157a4	; 0x157a4 <__divsf3>
    3a9e:	dc 01       	movw	r26, r24
    3aa0:	cb 01       	movw	r24, r22
    3aa2:	80 93 78 24 	sts	0x2478, r24
    3aa6:	90 93 79 24 	sts	0x2479, r25
    3aaa:	a0 93 7a 24 	sts	0x247A, r26
    3aae:	b0 93 7b 24 	sts	0x247B, r27
      t_time1 = arb_sysTimeNow( );
    3ab2:	ce 01       	movw	r24, r28
    3ab4:	8b 56       	subi	r24, 0x6B	; 107
    3ab6:	9f 4f       	sbci	r25, 0xFF	; 255
    3ab8:	0e 94 a4 81 	call	0x10348	; 0x10348 <arb_sysTimeNow>
    3abc:	ce 01       	movw	r24, r28
    3abe:	8b 56       	subi	r24, 0x6B	; 107
    3ac0:	9f 4f       	sbci	r25, 0xFF	; 255
    3ac2:	0f e9       	ldi	r16, 0x9F	; 159
    3ac4:	14 e2       	ldi	r17, 0x24	; 36
    3ac6:	ce 53       	subi	r28, 0x3E	; 62
    3ac8:	df 4f       	sbci	r29, 0xFF	; 255
    3aca:	08 83       	st	Y, r16
    3acc:	19 83       	std	Y+1, r17	; 0x01
    3ace:	c2 5c       	subi	r28, 0xC2	; 194
    3ad0:	d0 40       	sbci	r29, 0x00	; 0
    3ad2:	cc 53       	subi	r28, 0x3C	; 60
    3ad4:	df 4f       	sbci	r29, 0xFF	; 255
    3ad6:	88 83       	st	Y, r24
    3ad8:	99 83       	std	Y+1, r25	; 0x01
    3ada:	c4 5c       	subi	r28, 0xC4	; 196
    3adc:	d0 40       	sbci	r29, 0x00	; 0
    3ade:	19 e1       	ldi	r17, 0x19	; 25
    3ae0:	ca 53       	subi	r28, 0x3A	; 58
    3ae2:	df 4f       	sbci	r29, 0xFF	; 255
    3ae4:	18 83       	st	Y, r17
    3ae6:	c6 5c       	subi	r28, 0xC6	; 198
    3ae8:	d0 40       	sbci	r29, 0x00	; 0
    3aea:	cc 53       	subi	r28, 0x3C	; 60
    3aec:	df 4f       	sbci	r29, 0xFF	; 255
    3aee:	e8 81       	ld	r30, Y
    3af0:	f9 81       	ldd	r31, Y+1	; 0x01
    3af2:	c4 5c       	subi	r28, 0xC4	; 196
    3af4:	d0 40       	sbci	r29, 0x00	; 0
    3af6:	00 80       	ld	r0, Z
    3af8:	cc 53       	subi	r28, 0x3C	; 60
    3afa:	df 4f       	sbci	r29, 0xFF	; 255
    3afc:	08 81       	ld	r16, Y
    3afe:	19 81       	ldd	r17, Y+1	; 0x01
    3b00:	c4 5c       	subi	r28, 0xC4	; 196
    3b02:	d0 40       	sbci	r29, 0x00	; 0
    3b04:	0f 5f       	subi	r16, 0xFF	; 255
    3b06:	1f 4f       	sbci	r17, 0xFF	; 255
    3b08:	cc 53       	subi	r28, 0x3C	; 60
    3b0a:	df 4f       	sbci	r29, 0xFF	; 255
    3b0c:	08 83       	st	Y, r16
    3b0e:	19 83       	std	Y+1, r17	; 0x01
    3b10:	c4 5c       	subi	r28, 0xC4	; 196
    3b12:	d0 40       	sbci	r29, 0x00	; 0
    3b14:	ce 53       	subi	r28, 0x3E	; 62
    3b16:	df 4f       	sbci	r29, 0xFF	; 255
    3b18:	e8 81       	ld	r30, Y
    3b1a:	f9 81       	ldd	r31, Y+1	; 0x01
    3b1c:	c2 5c       	subi	r28, 0xC2	; 194
    3b1e:	d0 40       	sbci	r29, 0x00	; 0
    3b20:	00 82       	st	Z, r0
    3b22:	ce 53       	subi	r28, 0x3E	; 62
    3b24:	df 4f       	sbci	r29, 0xFF	; 255
    3b26:	08 81       	ld	r16, Y
    3b28:	19 81       	ldd	r17, Y+1	; 0x01
    3b2a:	c2 5c       	subi	r28, 0xC2	; 194
    3b2c:	d0 40       	sbci	r29, 0x00	; 0
    3b2e:	0f 5f       	subi	r16, 0xFF	; 255
    3b30:	1f 4f       	sbci	r17, 0xFF	; 255
    3b32:	ce 53       	subi	r28, 0x3E	; 62
    3b34:	df 4f       	sbci	r29, 0xFF	; 255
    3b36:	08 83       	st	Y, r16
    3b38:	19 83       	std	Y+1, r17	; 0x01
    3b3a:	c2 5c       	subi	r28, 0xC2	; 194
    3b3c:	d0 40       	sbci	r29, 0x00	; 0
    3b3e:	ca 53       	subi	r28, 0x3A	; 58
    3b40:	df 4f       	sbci	r29, 0xFF	; 255
    3b42:	18 81       	ld	r17, Y
    3b44:	c6 5c       	subi	r28, 0xC6	; 198
    3b46:	d0 40       	sbci	r29, 0x00	; 0
    3b48:	11 50       	subi	r17, 0x01	; 1
    3b4a:	ca 53       	subi	r28, 0x3A	; 58
    3b4c:	df 4f       	sbci	r29, 0xFF	; 255
    3b4e:	18 83       	st	Y, r17
    3b50:	c6 5c       	subi	r28, 0xC6	; 198
    3b52:	d0 40       	sbci	r29, 0x00	; 0
    3b54:	ca 53       	subi	r28, 0x3A	; 58
    3b56:	df 4f       	sbci	r29, 0xFF	; 255
    3b58:	28 81       	ld	r18, Y
    3b5a:	c6 5c       	subi	r28, 0xC6	; 198
    3b5c:	d0 40       	sbci	r29, 0x00	; 0
    3b5e:	22 23       	and	r18, r18
    3b60:	21 f6       	brne	.-120    	; 0x3aea <usr_mathTest+0x4b6>
      f_cos = cosf( f_phase);
    3b62:	80 91 78 24 	lds	r24, 0x2478
    3b66:	90 91 79 24 	lds	r25, 0x2479
    3b6a:	a0 91 7a 24 	lds	r26, 0x247A
    3b6e:	b0 91 7b 24 	lds	r27, 0x247B
    3b72:	bc 01       	movw	r22, r24
    3b74:	cd 01       	movw	r24, r26
    3b76:	0e 94 cf ab 	call	0x1579e	; 0x1579e <cos>
    3b7a:	dc 01       	movw	r26, r24
    3b7c:	cb 01       	movw	r24, r22
    3b7e:	89 87       	std	Y+9, r24	; 0x09
    3b80:	9a 87       	std	Y+10, r25	; 0x0a
    3b82:	ab 87       	std	Y+11, r26	; 0x0b
    3b84:	bc 87       	std	Y+12, r27	; 0x0c
      t_time2 = arb_sysTimeNow();
    3b86:	ce 01       	movw	r24, r28
    3b88:	8b 56       	subi	r24, 0x6B	; 107
    3b8a:	9f 4f       	sbci	r25, 0xFF	; 255
    3b8c:	0e 94 a4 81 	call	0x10348	; 0x10348 <arb_sysTimeNow>
    3b90:	ce 01       	movw	r24, r28
    3b92:	8b 56       	subi	r24, 0x6B	; 107
    3b94:	9f 4f       	sbci	r25, 0xFF	; 255
    3b96:	46 e8       	ldi	r20, 0x86	; 134
    3b98:	54 e2       	ldi	r21, 0x24	; 36
    3b9a:	c9 53       	subi	r28, 0x39	; 57
    3b9c:	df 4f       	sbci	r29, 0xFF	; 255
    3b9e:	48 83       	st	Y, r20
    3ba0:	59 83       	std	Y+1, r21	; 0x01
    3ba2:	c7 5c       	subi	r28, 0xC7	; 199
    3ba4:	d0 40       	sbci	r29, 0x00	; 0
    3ba6:	c7 53       	subi	r28, 0x37	; 55
    3ba8:	df 4f       	sbci	r29, 0xFF	; 255
    3baa:	88 83       	st	Y, r24
    3bac:	99 83       	std	Y+1, r25	; 0x01
    3bae:	c9 5c       	subi	r28, 0xC9	; 201
    3bb0:	d0 40       	sbci	r29, 0x00	; 0
    3bb2:	59 e1       	ldi	r21, 0x19	; 25
    3bb4:	c5 53       	subi	r28, 0x35	; 53
    3bb6:	df 4f       	sbci	r29, 0xFF	; 255
    3bb8:	58 83       	st	Y, r21
    3bba:	cb 5c       	subi	r28, 0xCB	; 203
    3bbc:	d0 40       	sbci	r29, 0x00	; 0
    3bbe:	c7 53       	subi	r28, 0x37	; 55
    3bc0:	df 4f       	sbci	r29, 0xFF	; 255
    3bc2:	e8 81       	ld	r30, Y
    3bc4:	f9 81       	ldd	r31, Y+1	; 0x01
    3bc6:	c9 5c       	subi	r28, 0xC9	; 201
    3bc8:	d0 40       	sbci	r29, 0x00	; 0
    3bca:	00 80       	ld	r0, Z
    3bcc:	c7 53       	subi	r28, 0x37	; 55
    3bce:	df 4f       	sbci	r29, 0xFF	; 255
    3bd0:	08 81       	ld	r16, Y
    3bd2:	19 81       	ldd	r17, Y+1	; 0x01
    3bd4:	c9 5c       	subi	r28, 0xC9	; 201
    3bd6:	d0 40       	sbci	r29, 0x00	; 0
    3bd8:	0f 5f       	subi	r16, 0xFF	; 255
    3bda:	1f 4f       	sbci	r17, 0xFF	; 255
    3bdc:	c7 53       	subi	r28, 0x37	; 55
    3bde:	df 4f       	sbci	r29, 0xFF	; 255
    3be0:	08 83       	st	Y, r16
    3be2:	19 83       	std	Y+1, r17	; 0x01
    3be4:	c9 5c       	subi	r28, 0xC9	; 201
    3be6:	d0 40       	sbci	r29, 0x00	; 0
    3be8:	c9 53       	subi	r28, 0x39	; 57
    3bea:	df 4f       	sbci	r29, 0xFF	; 255
    3bec:	e8 81       	ld	r30, Y
    3bee:	f9 81       	ldd	r31, Y+1	; 0x01
    3bf0:	c7 5c       	subi	r28, 0xC7	; 199
    3bf2:	d0 40       	sbci	r29, 0x00	; 0
    3bf4:	00 82       	st	Z, r0
    3bf6:	c9 53       	subi	r28, 0x39	; 57
    3bf8:	df 4f       	sbci	r29, 0xFF	; 255
    3bfa:	08 81       	ld	r16, Y
    3bfc:	19 81       	ldd	r17, Y+1	; 0x01
    3bfe:	c7 5c       	subi	r28, 0xC7	; 199
    3c00:	d0 40       	sbci	r29, 0x00	; 0
    3c02:	0f 5f       	subi	r16, 0xFF	; 255
    3c04:	1f 4f       	sbci	r17, 0xFF	; 255
    3c06:	c9 53       	subi	r28, 0x39	; 57
    3c08:	df 4f       	sbci	r29, 0xFF	; 255
    3c0a:	08 83       	st	Y, r16
    3c0c:	19 83       	std	Y+1, r17	; 0x01
    3c0e:	c7 5c       	subi	r28, 0xC7	; 199
    3c10:	d0 40       	sbci	r29, 0x00	; 0
    3c12:	c5 53       	subi	r28, 0x35	; 53
    3c14:	df 4f       	sbci	r29, 0xFF	; 255
    3c16:	18 81       	ld	r17, Y
    3c18:	cb 5c       	subi	r28, 0xCB	; 203
    3c1a:	d0 40       	sbci	r29, 0x00	; 0
    3c1c:	11 50       	subi	r17, 0x01	; 1
    3c1e:	c5 53       	subi	r28, 0x35	; 53
    3c20:	df 4f       	sbci	r29, 0xFF	; 255
    3c22:	18 83       	st	Y, r17
    3c24:	cb 5c       	subi	r28, 0xCB	; 203
    3c26:	d0 40       	sbci	r29, 0x00	; 0
    3c28:	c5 53       	subi	r28, 0x35	; 53
    3c2a:	df 4f       	sbci	r29, 0xFF	; 255
    3c2c:	28 81       	ld	r18, Y
    3c2e:	cb 5c       	subi	r28, 0xCB	; 203
    3c30:	d0 40       	sbci	r29, 0x00	; 0
    3c32:	22 23       	and	r18, r18
    3c34:	21 f6       	brne	.-120    	; 0x3bbe <usr_mathTest+0x58a>
      
      f_sin = sinf( f_phase);
    3c36:	80 91 78 24 	lds	r24, 0x2478
    3c3a:	90 91 79 24 	lds	r25, 0x2479
    3c3e:	a0 91 7a 24 	lds	r26, 0x247A
    3c42:	b0 91 7b 24 	lds	r27, 0x247B
    3c46:	bc 01       	movw	r22, r24
    3c48:	cd 01       	movw	r24, r26
    3c4a:	0e 94 71 ae 	call	0x15ce2	; 0x15ce2 <sin>
    3c4e:	dc 01       	movw	r26, r24
    3c50:	cb 01       	movw	r24, r22
    3c52:	8d 83       	std	Y+5, r24	; 0x05
    3c54:	9e 83       	std	Y+6, r25	; 0x06
    3c56:	af 83       	std	Y+7, r26	; 0x07
    3c58:	b8 87       	std	Y+8, r27	; 0x08
      i_loading2 = t_time2.i_usec-t_time1.i_usec;
    3c5a:	20 91 9b 24 	lds	r18, 0x249B
    3c5e:	30 91 9c 24 	lds	r19, 0x249C
    3c62:	40 91 9d 24 	lds	r20, 0x249D
    3c66:	50 91 9e 24 	lds	r21, 0x249E
    3c6a:	80 91 b4 24 	lds	r24, 0x24B4
    3c6e:	90 91 b5 24 	lds	r25, 0x24B5
    3c72:	a0 91 b6 24 	lds	r26, 0x24B6
    3c76:	b0 91 b7 24 	lds	r27, 0x24B7
    3c7a:	79 01       	movw	r14, r18
    3c7c:	8a 01       	movw	r16, r20
    3c7e:	e8 1a       	sub	r14, r24
    3c80:	f9 0a       	sbc	r15, r25
    3c82:	0a 0b       	sbc	r16, r26
    3c84:	1b 0b       	sbc	r17, r27
    3c86:	d8 01       	movw	r26, r16
    3c88:	c7 01       	movw	r24, r14
    3c8a:	80 93 7c 24 	sts	0x247C, r24
    3c8e:	90 93 7d 24 	sts	0x247D, r25
    3c92:	a0 93 7e 24 	sts	0x247E, r26
    3c96:	b0 93 7f 24 	sts	0x247F, r27
      if( i_loading2 < 0)
    3c9a:	80 91 7c 24 	lds	r24, 0x247C
    3c9e:	90 91 7d 24 	lds	r25, 0x247D
    3ca2:	a0 91 7e 24 	lds	r26, 0x247E
    3ca6:	b0 91 7f 24 	lds	r27, 0x247F
    3caa:	bb 23       	and	r27, r27
    3cac:	a4 f4       	brge	.+40     	; 0x3cd6 <usr_mathTest+0x6a2>
         i_loading2 = i_loading2 + 1000000;
    3cae:	80 91 7c 24 	lds	r24, 0x247C
    3cb2:	90 91 7d 24 	lds	r25, 0x247D
    3cb6:	a0 91 7e 24 	lds	r26, 0x247E
    3cba:	b0 91 7f 24 	lds	r27, 0x247F
    3cbe:	80 5c       	subi	r24, 0xC0	; 192
    3cc0:	9d 4b       	sbci	r25, 0xBD	; 189
    3cc2:	a0 4f       	sbci	r26, 0xF0	; 240
    3cc4:	bf 4f       	sbci	r27, 0xFF	; 255
    3cc6:	80 93 7c 24 	sts	0x247C, r24
    3cca:	90 93 7d 24 	sts	0x247D, r25
    3cce:	a0 93 7e 24 	sts	0x247E, r26
    3cd2:	b0 93 7f 24 	sts	0x247F, r27
      i_loading2 = i_loading2 - s_callLoad;
    3cd6:	20 91 7c 24 	lds	r18, 0x247C
    3cda:	30 91 7d 24 	lds	r19, 0x247D
    3cde:	40 91 7e 24 	lds	r20, 0x247E
    3ce2:	50 91 7f 24 	lds	r21, 0x247F
    3ce6:	80 91 84 24 	lds	r24, 0x2484
    3cea:	90 91 85 24 	lds	r25, 0x2485
    3cee:	aa 27       	eor	r26, r26
    3cf0:	97 fd       	sbrc	r25, 7
    3cf2:	a0 95       	com	r26
    3cf4:	ba 2f       	mov	r27, r26
    3cf6:	79 01       	movw	r14, r18
    3cf8:	8a 01       	movw	r16, r20
    3cfa:	e8 1a       	sub	r14, r24
    3cfc:	f9 0a       	sbc	r15, r25
    3cfe:	0a 0b       	sbc	r16, r26
    3d00:	1b 0b       	sbc	r17, r27
    3d02:	d8 01       	movw	r26, r16
    3d04:	c7 01       	movw	r24, r14
    3d06:	80 93 7c 24 	sts	0x247C, r24
    3d0a:	90 93 7d 24 	sts	0x247D, r25
    3d0e:	a0 93 7e 24 	sts	0x247E, r26
    3d12:	b0 93 7f 24 	sts	0x247F, r27

      f_error = fabs((f_cos - ((float)s_cos/32768.0f))*100.0f/f_cos);
    3d16:	8b 89       	ldd	r24, Y+19	; 0x13
    3d18:	9c 89       	ldd	r25, Y+20	; 0x14
    3d1a:	aa 27       	eor	r26, r26
    3d1c:	97 fd       	sbrc	r25, 7
    3d1e:	a0 95       	com	r26
    3d20:	ba 2f       	mov	r27, r26
    3d22:	bc 01       	movw	r22, r24
    3d24:	cd 01       	movw	r24, r26
    3d26:	0e 94 a7 ac 	call	0x1594e	; 0x1594e <__floatsisf>
    3d2a:	dc 01       	movw	r26, r24
    3d2c:	cb 01       	movw	r24, r22
    3d2e:	bc 01       	movw	r22, r24
    3d30:	cd 01       	movw	r24, r26
    3d32:	20 e0       	ldi	r18, 0x00	; 0
    3d34:	30 e0       	ldi	r19, 0x00	; 0
    3d36:	40 e0       	ldi	r20, 0x00	; 0
    3d38:	57 ec       	ldi	r21, 0xC7	; 199
    3d3a:	0e 94 d2 ab 	call	0x157a4	; 0x157a4 <__divsf3>
    3d3e:	dc 01       	movw	r26, r24
    3d40:	cb 01       	movw	r24, r22
    3d42:	bc 01       	movw	r22, r24
    3d44:	cd 01       	movw	r24, r26
    3d46:	29 85       	ldd	r18, Y+9	; 0x09
    3d48:	3a 85       	ldd	r19, Y+10	; 0x0a
    3d4a:	4b 85       	ldd	r20, Y+11	; 0x0b
    3d4c:	5c 85       	ldd	r21, Y+12	; 0x0c
    3d4e:	0e 94 05 ab 	call	0x1560a	; 0x1560a <__addsf3>
    3d52:	dc 01       	movw	r26, r24
    3d54:	cb 01       	movw	r24, r22
    3d56:	bc 01       	movw	r22, r24
    3d58:	cd 01       	movw	r24, r26
    3d5a:	20 e0       	ldi	r18, 0x00	; 0
    3d5c:	30 e0       	ldi	r19, 0x00	; 0
    3d5e:	48 ec       	ldi	r20, 0xC8	; 200
    3d60:	52 e4       	ldi	r21, 0x42	; 66
    3d62:	0e 94 0e ae 	call	0x15c1c	; 0x15c1c <__mulsf3>
    3d66:	dc 01       	movw	r26, r24
    3d68:	cb 01       	movw	r24, r22
    3d6a:	bc 01       	movw	r22, r24
    3d6c:	cd 01       	movw	r24, r26
    3d6e:	29 85       	ldd	r18, Y+9	; 0x09
    3d70:	3a 85       	ldd	r19, Y+10	; 0x0a
    3d72:	4b 85       	ldd	r20, Y+11	; 0x0b
    3d74:	5c 85       	ldd	r21, Y+12	; 0x0c
    3d76:	0e 94 d2 ab 	call	0x157a4	; 0x157a4 <__divsf3>
    3d7a:	dc 01       	movw	r26, r24
    3d7c:	cb 01       	movw	r24, r22
    3d7e:	bf 77       	andi	r27, 0x7F	; 127
    3d80:	89 83       	std	Y+1, r24	; 0x01
    3d82:	9a 83       	std	Y+2, r25	; 0x02
    3d84:	ab 83       	std	Y+3, r26	; 0x03
    3d86:	bc 83       	std	Y+4, r27	; 0x04

      s_size = sprintf( ( char *)ac_buff, "fixed cos=%d ansii cos=%d err=%.2f%% speed=%dx\r",
    3d88:	69 85       	ldd	r22, Y+9	; 0x09
    3d8a:	7a 85       	ldd	r23, Y+10	; 0x0a
    3d8c:	8b 85       	ldd	r24, Y+11	; 0x0b
    3d8e:	9c 85       	ldd	r25, Y+12	; 0x0c
    3d90:	20 e0       	ldi	r18, 0x00	; 0
    3d92:	3e ef       	ldi	r19, 0xFE	; 254
    3d94:	4f ef       	ldi	r20, 0xFF	; 255
    3d96:	56 e4       	ldi	r21, 0x46	; 70
    3d98:	0e 94 0e ae 	call	0x15c1c	; 0x15c1c <__mulsf3>
    3d9c:	dc 01       	movw	r26, r24
    3d9e:	cb 01       	movw	r24, r22
    3da0:	bc 01       	movw	r22, r24
    3da2:	cd 01       	movw	r24, r26
    3da4:	0e 94 74 ac 	call	0x158e8	; 0x158e8 <__fixsfsi>
    3da8:	dc 01       	movw	r26, r24
    3daa:	cb 01       	movw	r24, r22
    3dac:	8c 01       	movw	r16, r24
    3dae:	80 91 7c 24 	lds	r24, 0x247C
    3db2:	90 91 7d 24 	lds	r25, 0x247D
    3db6:	a0 91 7e 24 	lds	r26, 0x247E
    3dba:	b0 91 7f 24 	lds	r27, 0x247F
    3dbe:	aa 27       	eor	r26, r26
    3dc0:	97 fd       	sbrc	r25, 7
    3dc2:	a0 95       	com	r26
    3dc4:	ba 2f       	mov	r27, r26
    3dc6:	20 91 80 24 	lds	r18, 0x2480
    3dca:	30 91 81 24 	lds	r19, 0x2481
    3dce:	40 91 82 24 	lds	r20, 0x2482
    3dd2:	50 91 83 24 	lds	r21, 0x2483
    3dd6:	bc 01       	movw	r22, r24
    3dd8:	cd 01       	movw	r24, r26
    3dda:	0e 94 22 b4 	call	0x16844	; 0x16844 <__divmodsi4>
    3dde:	da 01       	movw	r26, r20
    3de0:	c9 01       	movw	r24, r18
    3de2:	9c 01       	movw	r18, r24
    3de4:	ad 01       	movw	r20, r26
    3de6:	8d b7       	in	r24, 0x3d	; 61
    3de8:	9e b7       	in	r25, 0x3e	; 62
    3dea:	40 97       	sbiw	r24, 0x10	; 16
    3dec:	8d bf       	out	0x3d, r24	; 61
    3dee:	9e bf       	out	0x3e, r25	; 62
    3df0:	ed b7       	in	r30, 0x3d	; 61
    3df2:	fe b7       	in	r31, 0x3e	; 62
    3df4:	31 96       	adiw	r30, 0x01	; 1
    3df6:	ce 01       	movw	r24, r28
    3df8:	49 96       	adiw	r24, 0x19	; 25
    3dfa:	80 83       	st	Z, r24
    3dfc:	91 83       	std	Z+1, r25	; 0x01
    3dfe:	86 ea       	ldi	r24, 0xA6	; 166
    3e00:	90 e2       	ldi	r25, 0x20	; 32
    3e02:	82 83       	std	Z+2, r24	; 0x02
    3e04:	93 83       	std	Z+3, r25	; 0x03
    3e06:	8b 89       	ldd	r24, Y+19	; 0x13
    3e08:	9c 89       	ldd	r25, Y+20	; 0x14
    3e0a:	84 83       	std	Z+4, r24	; 0x04
    3e0c:	95 83       	std	Z+5, r25	; 0x05
    3e0e:	06 83       	std	Z+6, r16	; 0x06
    3e10:	17 83       	std	Z+7, r17	; 0x07
    3e12:	89 81       	ldd	r24, Y+1	; 0x01
    3e14:	9a 81       	ldd	r25, Y+2	; 0x02
    3e16:	ab 81       	ldd	r26, Y+3	; 0x03
    3e18:	bc 81       	ldd	r27, Y+4	; 0x04
    3e1a:	80 87       	std	Z+8, r24	; 0x08
    3e1c:	91 87       	std	Z+9, r25	; 0x09
    3e1e:	a2 87       	std	Z+10, r26	; 0x0a
    3e20:	b3 87       	std	Z+11, r27	; 0x0b
    3e22:	24 87       	std	Z+12, r18	; 0x0c
    3e24:	35 87       	std	Z+13, r19	; 0x0d
    3e26:	46 87       	std	Z+14, r20	; 0x0e
    3e28:	57 87       	std	Z+15, r21	; 0x0f
    3e2a:	0e 94 7a b1 	call	0x162f4	; 0x162f4 <sprintf>
    3e2e:	ed b7       	in	r30, 0x3d	; 61
    3e30:	fe b7       	in	r31, 0x3e	; 62
    3e32:	70 96       	adiw	r30, 0x10	; 16
    3e34:	ed bf       	out	0x3d, r30	; 61
    3e36:	fe bf       	out	0x3e, r31	; 62
    3e38:	8d 87       	std	Y+13, r24	; 0x0d
    3e3a:	9e 87       	std	Y+14, r25	; 0x0e
                        s_cos,
                        (int16_t)(f_cos*32767.0f),
                        (double)f_error,
                        (int)i_loading2/i_loading1);
      arb_printf( PRINTF_DBG_MED |PRINTF_DBG_SHOW_TIME,
    3e3c:	9e 01       	movw	r18, r28
    3e3e:	27 5e       	subi	r18, 0xE7	; 231
    3e40:	3f 4f       	sbci	r19, 0xFF	; 255
    3e42:	82 e4       	ldi	r24, 0x42	; 66
    3e44:	b9 01       	movw	r22, r18
    3e46:	0e 94 87 71 	call	0xe30e	; 0xe30e <arb_printf>
                  (const char *)ac_buff);

      s_sin = (int16_t)(f_sin*32767.0f);
    3e4a:	6d 81       	ldd	r22, Y+5	; 0x05
    3e4c:	7e 81       	ldd	r23, Y+6	; 0x06
    3e4e:	8f 81       	ldd	r24, Y+7	; 0x07
    3e50:	98 85       	ldd	r25, Y+8	; 0x08
    3e52:	20 e0       	ldi	r18, 0x00	; 0
    3e54:	3e ef       	ldi	r19, 0xFE	; 254
    3e56:	4f ef       	ldi	r20, 0xFF	; 255
    3e58:	56 e4       	ldi	r21, 0x46	; 70
    3e5a:	0e 94 0e ae 	call	0x15c1c	; 0x15c1c <__mulsf3>
    3e5e:	dc 01       	movw	r26, r24
    3e60:	cb 01       	movw	r24, r22
    3e62:	bc 01       	movw	r22, r24
    3e64:	cd 01       	movw	r24, r26
    3e66:	0e 94 74 ac 	call	0x158e8	; 0x158e8 <__fixsfsi>
    3e6a:	dc 01       	movw	r26, r24
    3e6c:	cb 01       	movw	r24, r22
    3e6e:	89 8b       	std	Y+17, r24	; 0x11
    3e70:	9a 8b       	std	Y+18, r25	; 0x12
      s_cos = (int16_t)(f_cos*32767.0f);
    3e72:	69 85       	ldd	r22, Y+9	; 0x09
    3e74:	7a 85       	ldd	r23, Y+10	; 0x0a
    3e76:	8b 85       	ldd	r24, Y+11	; 0x0b
    3e78:	9c 85       	ldd	r25, Y+12	; 0x0c
    3e7a:	20 e0       	ldi	r18, 0x00	; 0
    3e7c:	3e ef       	ldi	r19, 0xFE	; 254
    3e7e:	4f ef       	ldi	r20, 0xFF	; 255
    3e80:	56 e4       	ldi	r21, 0x46	; 70
    3e82:	0e 94 0e ae 	call	0x15c1c	; 0x15c1c <__mulsf3>
    3e86:	dc 01       	movw	r26, r24
    3e88:	cb 01       	movw	r24, r22
    3e8a:	bc 01       	movw	r22, r24
    3e8c:	cd 01       	movw	r24, r26
    3e8e:	0e 94 74 ac 	call	0x158e8	; 0x158e8 <__fixsfsi>
    3e92:	dc 01       	movw	r26, r24
    3e94:	cb 01       	movw	r24, r22
    3e96:	8b 8b       	std	Y+19, r24	; 0x13
    3e98:	9c 8b       	std	Y+20, r25	; 0x14
      t_time1 = arb_sysTimeNow();
    3e9a:	ce 01       	movw	r24, r28
    3e9c:	8b 56       	subi	r24, 0x6B	; 107
    3e9e:	9f 4f       	sbci	r25, 0xFF	; 255
    3ea0:	0e 94 a4 81 	call	0x10348	; 0x10348 <arb_sysTimeNow>
    3ea4:	ce 01       	movw	r24, r28
    3ea6:	8b 56       	subi	r24, 0x6B	; 107
    3ea8:	9f 4f       	sbci	r25, 0xFF	; 255
    3eaa:	0f e9       	ldi	r16, 0x9F	; 159
    3eac:	14 e2       	ldi	r17, 0x24	; 36
    3eae:	c4 53       	subi	r28, 0x34	; 52
    3eb0:	df 4f       	sbci	r29, 0xFF	; 255
    3eb2:	08 83       	st	Y, r16
    3eb4:	19 83       	std	Y+1, r17	; 0x01
    3eb6:	cc 5c       	subi	r28, 0xCC	; 204
    3eb8:	d0 40       	sbci	r29, 0x00	; 0
    3eba:	c2 53       	subi	r28, 0x32	; 50
    3ebc:	df 4f       	sbci	r29, 0xFF	; 255
    3ebe:	88 83       	st	Y, r24
    3ec0:	99 83       	std	Y+1, r25	; 0x01
    3ec2:	ce 5c       	subi	r28, 0xCE	; 206
    3ec4:	d0 40       	sbci	r29, 0x00	; 0
    3ec6:	19 e1       	ldi	r17, 0x19	; 25
    3ec8:	c0 53       	subi	r28, 0x30	; 48
    3eca:	df 4f       	sbci	r29, 0xFF	; 255
    3ecc:	18 83       	st	Y, r17
    3ece:	c0 5d       	subi	r28, 0xD0	; 208
    3ed0:	d0 40       	sbci	r29, 0x00	; 0
    3ed2:	c2 53       	subi	r28, 0x32	; 50
    3ed4:	df 4f       	sbci	r29, 0xFF	; 255
    3ed6:	e8 81       	ld	r30, Y
    3ed8:	f9 81       	ldd	r31, Y+1	; 0x01
    3eda:	ce 5c       	subi	r28, 0xCE	; 206
    3edc:	d0 40       	sbci	r29, 0x00	; 0
    3ede:	00 80       	ld	r0, Z
    3ee0:	c2 53       	subi	r28, 0x32	; 50
    3ee2:	df 4f       	sbci	r29, 0xFF	; 255
    3ee4:	08 81       	ld	r16, Y
    3ee6:	19 81       	ldd	r17, Y+1	; 0x01
    3ee8:	ce 5c       	subi	r28, 0xCE	; 206
    3eea:	d0 40       	sbci	r29, 0x00	; 0
    3eec:	0f 5f       	subi	r16, 0xFF	; 255
    3eee:	1f 4f       	sbci	r17, 0xFF	; 255
    3ef0:	c2 53       	subi	r28, 0x32	; 50
    3ef2:	df 4f       	sbci	r29, 0xFF	; 255
    3ef4:	08 83       	st	Y, r16
    3ef6:	19 83       	std	Y+1, r17	; 0x01
    3ef8:	ce 5c       	subi	r28, 0xCE	; 206
    3efa:	d0 40       	sbci	r29, 0x00	; 0
    3efc:	c4 53       	subi	r28, 0x34	; 52
    3efe:	df 4f       	sbci	r29, 0xFF	; 255
    3f00:	e8 81       	ld	r30, Y
    3f02:	f9 81       	ldd	r31, Y+1	; 0x01
    3f04:	cc 5c       	subi	r28, 0xCC	; 204
    3f06:	d0 40       	sbci	r29, 0x00	; 0
    3f08:	00 82       	st	Z, r0
    3f0a:	c4 53       	subi	r28, 0x34	; 52
    3f0c:	df 4f       	sbci	r29, 0xFF	; 255
    3f0e:	08 81       	ld	r16, Y
    3f10:	19 81       	ldd	r17, Y+1	; 0x01
    3f12:	cc 5c       	subi	r28, 0xCC	; 204
    3f14:	d0 40       	sbci	r29, 0x00	; 0
    3f16:	0f 5f       	subi	r16, 0xFF	; 255
    3f18:	1f 4f       	sbci	r17, 0xFF	; 255
    3f1a:	c4 53       	subi	r28, 0x34	; 52
    3f1c:	df 4f       	sbci	r29, 0xFF	; 255
    3f1e:	08 83       	st	Y, r16
    3f20:	19 83       	std	Y+1, r17	; 0x01
    3f22:	cc 5c       	subi	r28, 0xCC	; 204
    3f24:	d0 40       	sbci	r29, 0x00	; 0
    3f26:	c0 53       	subi	r28, 0x30	; 48
    3f28:	df 4f       	sbci	r29, 0xFF	; 255
    3f2a:	18 81       	ld	r17, Y
    3f2c:	c0 5d       	subi	r28, 0xD0	; 208
    3f2e:	d0 40       	sbci	r29, 0x00	; 0
    3f30:	11 50       	subi	r17, 0x01	; 1
    3f32:	c0 53       	subi	r28, 0x30	; 48
    3f34:	df 4f       	sbci	r29, 0xFF	; 255
    3f36:	18 83       	st	Y, r17
    3f38:	c0 5d       	subi	r28, 0xD0	; 208
    3f3a:	d0 40       	sbci	r29, 0x00	; 0
    3f3c:	c0 53       	subi	r28, 0x30	; 48
    3f3e:	df 4f       	sbci	r29, 0xFF	; 255
    3f40:	28 81       	ld	r18, Y
    3f42:	c0 5d       	subi	r28, 0xD0	; 208
    3f44:	d0 40       	sbci	r29, 0x00	; 0
    3f46:	22 23       	and	r18, r18
    3f48:	21 f6       	brne	.-120    	; 0x3ed2 <usr_mathTest+0x89e>
      s_angle = utl_atan2_16(s_sin, s_cos);
    3f4a:	89 89       	ldd	r24, Y+17	; 0x11
    3f4c:	9a 89       	ldd	r25, Y+18	; 0x12
    3f4e:	2b 89       	ldd	r18, Y+19	; 0x13
    3f50:	3c 89       	ldd	r19, Y+20	; 0x14
    3f52:	b9 01       	movw	r22, r18
    3f54:	0e 94 ca 8b 	call	0x11794	; 0x11794 <utl_atan2_16>
    3f58:	8f 87       	std	Y+15, r24	; 0x0f
    3f5a:	98 8b       	std	Y+16, r25	; 0x10
      t_time2 = arb_sysTimeNow();
    3f5c:	ce 01       	movw	r24, r28
    3f5e:	8b 56       	subi	r24, 0x6B	; 107
    3f60:	9f 4f       	sbci	r25, 0xFF	; 255
    3f62:	0e 94 a4 81 	call	0x10348	; 0x10348 <arb_sysTimeNow>
    3f66:	ce 01       	movw	r24, r28
    3f68:	8b 56       	subi	r24, 0x6B	; 107
    3f6a:	9f 4f       	sbci	r25, 0xFF	; 255
    3f6c:	46 e8       	ldi	r20, 0x86	; 134
    3f6e:	54 e2       	ldi	r21, 0x24	; 36
    3f70:	cf 52       	subi	r28, 0x2F	; 47
    3f72:	df 4f       	sbci	r29, 0xFF	; 255
    3f74:	48 83       	st	Y, r20
    3f76:	59 83       	std	Y+1, r21	; 0x01
    3f78:	c1 5d       	subi	r28, 0xD1	; 209
    3f7a:	d0 40       	sbci	r29, 0x00	; 0
    3f7c:	cd 52       	subi	r28, 0x2D	; 45
    3f7e:	df 4f       	sbci	r29, 0xFF	; 255
    3f80:	88 83       	st	Y, r24
    3f82:	99 83       	std	Y+1, r25	; 0x01
    3f84:	c3 5d       	subi	r28, 0xD3	; 211
    3f86:	d0 40       	sbci	r29, 0x00	; 0
    3f88:	59 e1       	ldi	r21, 0x19	; 25
    3f8a:	cb 52       	subi	r28, 0x2B	; 43
    3f8c:	df 4f       	sbci	r29, 0xFF	; 255
    3f8e:	58 83       	st	Y, r21
    3f90:	c5 5d       	subi	r28, 0xD5	; 213
    3f92:	d0 40       	sbci	r29, 0x00	; 0
    3f94:	cd 52       	subi	r28, 0x2D	; 45
    3f96:	df 4f       	sbci	r29, 0xFF	; 255
    3f98:	e8 81       	ld	r30, Y
    3f9a:	f9 81       	ldd	r31, Y+1	; 0x01
    3f9c:	c3 5d       	subi	r28, 0xD3	; 211
    3f9e:	d0 40       	sbci	r29, 0x00	; 0
    3fa0:	00 80       	ld	r0, Z
    3fa2:	cd 52       	subi	r28, 0x2D	; 45
    3fa4:	df 4f       	sbci	r29, 0xFF	; 255
    3fa6:	08 81       	ld	r16, Y
    3fa8:	19 81       	ldd	r17, Y+1	; 0x01
    3faa:	c3 5d       	subi	r28, 0xD3	; 211
    3fac:	d0 40       	sbci	r29, 0x00	; 0
    3fae:	0f 5f       	subi	r16, 0xFF	; 255
    3fb0:	1f 4f       	sbci	r17, 0xFF	; 255
    3fb2:	cd 52       	subi	r28, 0x2D	; 45
    3fb4:	df 4f       	sbci	r29, 0xFF	; 255
    3fb6:	08 83       	st	Y, r16
    3fb8:	19 83       	std	Y+1, r17	; 0x01
    3fba:	c3 5d       	subi	r28, 0xD3	; 211
    3fbc:	d0 40       	sbci	r29, 0x00	; 0
    3fbe:	cf 52       	subi	r28, 0x2F	; 47
    3fc0:	df 4f       	sbci	r29, 0xFF	; 255
    3fc2:	e8 81       	ld	r30, Y
    3fc4:	f9 81       	ldd	r31, Y+1	; 0x01
    3fc6:	c1 5d       	subi	r28, 0xD1	; 209
    3fc8:	d0 40       	sbci	r29, 0x00	; 0
    3fca:	00 82       	st	Z, r0
    3fcc:	cf 52       	subi	r28, 0x2F	; 47
    3fce:	df 4f       	sbci	r29, 0xFF	; 255
    3fd0:	08 81       	ld	r16, Y
    3fd2:	19 81       	ldd	r17, Y+1	; 0x01
    3fd4:	c1 5d       	subi	r28, 0xD1	; 209
    3fd6:	d0 40       	sbci	r29, 0x00	; 0
    3fd8:	0f 5f       	subi	r16, 0xFF	; 255
    3fda:	1f 4f       	sbci	r17, 0xFF	; 255
    3fdc:	cf 52       	subi	r28, 0x2F	; 47
    3fde:	df 4f       	sbci	r29, 0xFF	; 255
    3fe0:	08 83       	st	Y, r16
    3fe2:	19 83       	std	Y+1, r17	; 0x01
    3fe4:	c1 5d       	subi	r28, 0xD1	; 209
    3fe6:	d0 40       	sbci	r29, 0x00	; 0
    3fe8:	cb 52       	subi	r28, 0x2B	; 43
    3fea:	df 4f       	sbci	r29, 0xFF	; 255
    3fec:	18 81       	ld	r17, Y
    3fee:	c5 5d       	subi	r28, 0xD5	; 213
    3ff0:	d0 40       	sbci	r29, 0x00	; 0
    3ff2:	11 50       	subi	r17, 0x01	; 1
    3ff4:	cb 52       	subi	r28, 0x2B	; 43
    3ff6:	df 4f       	sbci	r29, 0xFF	; 255
    3ff8:	18 83       	st	Y, r17
    3ffa:	c5 5d       	subi	r28, 0xD5	; 213
    3ffc:	d0 40       	sbci	r29, 0x00	; 0
    3ffe:	cb 52       	subi	r28, 0x2B	; 43
    4000:	df 4f       	sbci	r29, 0xFF	; 255
    4002:	28 81       	ld	r18, Y
    4004:	c5 5d       	subi	r28, 0xD5	; 213
    4006:	d0 40       	sbci	r29, 0x00	; 0
    4008:	22 23       	and	r18, r18
    400a:	21 f6       	brne	.-120    	; 0x3f94 <usr_mathTest+0x960>
      i_loading1 = t_time2.i_usec-t_time1.i_usec;
    400c:	20 91 9b 24 	lds	r18, 0x249B
    4010:	30 91 9c 24 	lds	r19, 0x249C
    4014:	40 91 9d 24 	lds	r20, 0x249D
    4018:	50 91 9e 24 	lds	r21, 0x249E
    401c:	80 91 b4 24 	lds	r24, 0x24B4
    4020:	90 91 b5 24 	lds	r25, 0x24B5
    4024:	a0 91 b6 24 	lds	r26, 0x24B6
    4028:	b0 91 b7 24 	lds	r27, 0x24B7
    402c:	79 01       	movw	r14, r18
    402e:	8a 01       	movw	r16, r20
    4030:	e8 1a       	sub	r14, r24
    4032:	f9 0a       	sbc	r15, r25
    4034:	0a 0b       	sbc	r16, r26
    4036:	1b 0b       	sbc	r17, r27
    4038:	d8 01       	movw	r26, r16
    403a:	c7 01       	movw	r24, r14
    403c:	80 93 80 24 	sts	0x2480, r24
    4040:	90 93 81 24 	sts	0x2481, r25
    4044:	a0 93 82 24 	sts	0x2482, r26
    4048:	b0 93 83 24 	sts	0x2483, r27
      i_loading1 = i_loading1 - s_callLoad;
    404c:	20 91 80 24 	lds	r18, 0x2480
    4050:	30 91 81 24 	lds	r19, 0x2481
    4054:	40 91 82 24 	lds	r20, 0x2482
    4058:	50 91 83 24 	lds	r21, 0x2483
    405c:	80 91 84 24 	lds	r24, 0x2484
    4060:	90 91 85 24 	lds	r25, 0x2485
    4064:	aa 27       	eor	r26, r26
    4066:	97 fd       	sbrc	r25, 7
    4068:	a0 95       	com	r26
    406a:	ba 2f       	mov	r27, r26
    406c:	79 01       	movw	r14, r18
    406e:	8a 01       	movw	r16, r20
    4070:	e8 1a       	sub	r14, r24
    4072:	f9 0a       	sbc	r15, r25
    4074:	0a 0b       	sbc	r16, r26
    4076:	1b 0b       	sbc	r17, r27
    4078:	d8 01       	movw	r26, r16
    407a:	c7 01       	movw	r24, r14
    407c:	80 93 80 24 	sts	0x2480, r24
    4080:	90 93 81 24 	sts	0x2481, r25
    4084:	a0 93 82 24 	sts	0x2482, r26
    4088:	b0 93 83 24 	sts	0x2483, r27
      if( i_loading1 < 0)
    408c:	80 91 80 24 	lds	r24, 0x2480
    4090:	90 91 81 24 	lds	r25, 0x2481
    4094:	a0 91 82 24 	lds	r26, 0x2482
    4098:	b0 91 83 24 	lds	r27, 0x2483
    409c:	bb 23       	and	r27, r27
    409e:	a4 f4       	brge	.+40     	; 0x40c8 <__stack+0xc9>
         i_loading1 = i_loading1 + 1000000;
    40a0:	80 91 80 24 	lds	r24, 0x2480
    40a4:	90 91 81 24 	lds	r25, 0x2481
    40a8:	a0 91 82 24 	lds	r26, 0x2482
    40ac:	b0 91 83 24 	lds	r27, 0x2483
    40b0:	80 5c       	subi	r24, 0xC0	; 192
    40b2:	9d 4b       	sbci	r25, 0xBD	; 189
    40b4:	a0 4f       	sbci	r26, 0xF0	; 240
    40b6:	bf 4f       	sbci	r27, 0xFF	; 255
    40b8:	80 93 80 24 	sts	0x2480, r24
    40bc:	90 93 81 24 	sts	0x2481, r25
    40c0:	a0 93 82 24 	sts	0x2482, r26
    40c4:	b0 93 83 24 	sts	0x2483, r27

      if( f_phase > 3.14158f)
    40c8:	80 91 78 24 	lds	r24, 0x2478
    40cc:	90 91 79 24 	lds	r25, 0x2479
    40d0:	a0 91 7a 24 	lds	r26, 0x247A
    40d4:	b0 91 7b 24 	lds	r27, 0x247B
    40d8:	bc 01       	movw	r22, r24
    40da:	cd 01       	movw	r24, r26
    40dc:	26 ea       	ldi	r18, 0xA6	; 166
    40de:	3f e0       	ldi	r19, 0x0F	; 15
    40e0:	49 e4       	ldi	r20, 0x49	; 73
    40e2:	50 e4       	ldi	r21, 0x40	; 64
    40e4:	0e 94 03 ae 	call	0x15c06	; 0x15c06 <__gesf2>
    40e8:	18 16       	cp	r1, r24
    40ea:	d4 f4       	brge	.+52     	; 0x4120 <__stack+0x121>
         f_phase = f_phase - 2.0f*3.14159f;
    40ec:	80 91 78 24 	lds	r24, 0x2478
    40f0:	90 91 79 24 	lds	r25, 0x2479
    40f4:	a0 91 7a 24 	lds	r26, 0x247A
    40f8:	b0 91 7b 24 	lds	r27, 0x247B
    40fc:	bc 01       	movw	r22, r24
    40fe:	cd 01       	movw	r24, r26
    4100:	20 ed       	ldi	r18, 0xD0	; 208
    4102:	3f e0       	ldi	r19, 0x0F	; 15
    4104:	49 ec       	ldi	r20, 0xC9	; 201
    4106:	50 e4       	ldi	r21, 0x40	; 64
    4108:	0e 94 04 ab 	call	0x15608	; 0x15608 <__subsf3>
    410c:	dc 01       	movw	r26, r24
    410e:	cb 01       	movw	r24, r22
    4110:	80 93 78 24 	sts	0x2478, r24
    4114:	90 93 79 24 	sts	0x2479, r25
    4118:	a0 93 7a 24 	sts	0x247A, r26
    411c:	b0 93 7b 24 	sts	0x247B, r27

      f_error = fabs((f_phase - ((float)s_angle*3.14159f/32768.0f))*100.0f/f_phase);
    4120:	8f 85       	ldd	r24, Y+15	; 0x0f
    4122:	98 89       	ldd	r25, Y+16	; 0x10
    4124:	aa 27       	eor	r26, r26
    4126:	97 fd       	sbrc	r25, 7
    4128:	a0 95       	com	r26
    412a:	ba 2f       	mov	r27, r26
    412c:	bc 01       	movw	r22, r24
    412e:	cd 01       	movw	r24, r26
    4130:	0e 94 a7 ac 	call	0x1594e	; 0x1594e <__floatsisf>
    4134:	dc 01       	movw	r26, r24
    4136:	cb 01       	movw	r24, r22
    4138:	bc 01       	movw	r22, r24
    413a:	cd 01       	movw	r24, r26
    413c:	20 ed       	ldi	r18, 0xD0	; 208
    413e:	3f e0       	ldi	r19, 0x0F	; 15
    4140:	49 e4       	ldi	r20, 0x49	; 73
    4142:	50 e4       	ldi	r21, 0x40	; 64
    4144:	0e 94 0e ae 	call	0x15c1c	; 0x15c1c <__mulsf3>
    4148:	dc 01       	movw	r26, r24
    414a:	cb 01       	movw	r24, r22
    414c:	bc 01       	movw	r22, r24
    414e:	cd 01       	movw	r24, r26
    4150:	20 e0       	ldi	r18, 0x00	; 0
    4152:	30 e0       	ldi	r19, 0x00	; 0
    4154:	40 e0       	ldi	r20, 0x00	; 0
    4156:	57 ec       	ldi	r21, 0xC7	; 199
    4158:	0e 94 d2 ab 	call	0x157a4	; 0x157a4 <__divsf3>
    415c:	dc 01       	movw	r26, r24
    415e:	cb 01       	movw	r24, r22
    4160:	20 91 78 24 	lds	r18, 0x2478
    4164:	30 91 79 24 	lds	r19, 0x2479
    4168:	40 91 7a 24 	lds	r20, 0x247A
    416c:	50 91 7b 24 	lds	r21, 0x247B
    4170:	bc 01       	movw	r22, r24
    4172:	cd 01       	movw	r24, r26
    4174:	0e 94 05 ab 	call	0x1560a	; 0x1560a <__addsf3>
    4178:	dc 01       	movw	r26, r24
    417a:	cb 01       	movw	r24, r22
    417c:	bc 01       	movw	r22, r24
    417e:	cd 01       	movw	r24, r26
    4180:	20 e0       	ldi	r18, 0x00	; 0
    4182:	30 e0       	ldi	r19, 0x00	; 0
    4184:	48 ec       	ldi	r20, 0xC8	; 200
    4186:	52 e4       	ldi	r21, 0x42	; 66
    4188:	0e 94 0e ae 	call	0x15c1c	; 0x15c1c <__mulsf3>
    418c:	dc 01       	movw	r26, r24
    418e:	cb 01       	movw	r24, r22
    4190:	20 91 78 24 	lds	r18, 0x2478
    4194:	30 91 79 24 	lds	r19, 0x2479
    4198:	40 91 7a 24 	lds	r20, 0x247A
    419c:	50 91 7b 24 	lds	r21, 0x247B
    41a0:	bc 01       	movw	r22, r24
    41a2:	cd 01       	movw	r24, r26
    41a4:	0e 94 d2 ab 	call	0x157a4	; 0x157a4 <__divsf3>
    41a8:	dc 01       	movw	r26, r24
    41aa:	cb 01       	movw	r24, r22
    41ac:	bf 77       	andi	r27, 0x7F	; 127
    41ae:	89 83       	std	Y+1, r24	; 0x01
    41b0:	9a 83       	std	Y+2, r25	; 0x02
    41b2:	ab 83       	std	Y+3, r26	; 0x03
    41b4:	bc 83       	std	Y+4, r27	; 0x04

      t_time1 = arb_sysTimeNow( );
    41b6:	ce 01       	movw	r24, r28
    41b8:	8b 56       	subi	r24, 0x6B	; 107
    41ba:	9f 4f       	sbci	r25, 0xFF	; 255
    41bc:	0e 94 a4 81 	call	0x10348	; 0x10348 <arb_sysTimeNow>
    41c0:	ce 01       	movw	r24, r28
    41c2:	8b 56       	subi	r24, 0x6B	; 107
    41c4:	9f 4f       	sbci	r25, 0xFF	; 255
    41c6:	0f e9       	ldi	r16, 0x9F	; 159
    41c8:	14 e2       	ldi	r17, 0x24	; 36
    41ca:	ca 52       	subi	r28, 0x2A	; 42
    41cc:	df 4f       	sbci	r29, 0xFF	; 255
    41ce:	08 83       	st	Y, r16
    41d0:	19 83       	std	Y+1, r17	; 0x01
    41d2:	c6 5d       	subi	r28, 0xD6	; 214
    41d4:	d0 40       	sbci	r29, 0x00	; 0
    41d6:	c8 52       	subi	r28, 0x28	; 40
    41d8:	df 4f       	sbci	r29, 0xFF	; 255
    41da:	88 83       	st	Y, r24
    41dc:	99 83       	std	Y+1, r25	; 0x01
    41de:	c8 5d       	subi	r28, 0xD8	; 216
    41e0:	d0 40       	sbci	r29, 0x00	; 0
    41e2:	19 e1       	ldi	r17, 0x19	; 25
    41e4:	c6 52       	subi	r28, 0x26	; 38
    41e6:	df 4f       	sbci	r29, 0xFF	; 255
    41e8:	18 83       	st	Y, r17
    41ea:	ca 5d       	subi	r28, 0xDA	; 218
    41ec:	d0 40       	sbci	r29, 0x00	; 0
    41ee:	c8 52       	subi	r28, 0x28	; 40
    41f0:	df 4f       	sbci	r29, 0xFF	; 255
    41f2:	e8 81       	ld	r30, Y
    41f4:	f9 81       	ldd	r31, Y+1	; 0x01
    41f6:	c8 5d       	subi	r28, 0xD8	; 216
    41f8:	d0 40       	sbci	r29, 0x00	; 0
    41fa:	00 80       	ld	r0, Z
    41fc:	c8 52       	subi	r28, 0x28	; 40
    41fe:	df 4f       	sbci	r29, 0xFF	; 255
    4200:	08 81       	ld	r16, Y
    4202:	19 81       	ldd	r17, Y+1	; 0x01
    4204:	c8 5d       	subi	r28, 0xD8	; 216
    4206:	d0 40       	sbci	r29, 0x00	; 0
    4208:	0f 5f       	subi	r16, 0xFF	; 255
    420a:	1f 4f       	sbci	r17, 0xFF	; 255
    420c:	c8 52       	subi	r28, 0x28	; 40
    420e:	df 4f       	sbci	r29, 0xFF	; 255
    4210:	08 83       	st	Y, r16
    4212:	19 83       	std	Y+1, r17	; 0x01
    4214:	c8 5d       	subi	r28, 0xD8	; 216
    4216:	d0 40       	sbci	r29, 0x00	; 0
    4218:	ca 52       	subi	r28, 0x2A	; 42
    421a:	df 4f       	sbci	r29, 0xFF	; 255
    421c:	e8 81       	ld	r30, Y
    421e:	f9 81       	ldd	r31, Y+1	; 0x01
    4220:	c6 5d       	subi	r28, 0xD6	; 214
    4222:	d0 40       	sbci	r29, 0x00	; 0
    4224:	00 82       	st	Z, r0
    4226:	ca 52       	subi	r28, 0x2A	; 42
    4228:	df 4f       	sbci	r29, 0xFF	; 255
    422a:	08 81       	ld	r16, Y
    422c:	19 81       	ldd	r17, Y+1	; 0x01
    422e:	c6 5d       	subi	r28, 0xD6	; 214
    4230:	d0 40       	sbci	r29, 0x00	; 0
    4232:	0f 5f       	subi	r16, 0xFF	; 255
    4234:	1f 4f       	sbci	r17, 0xFF	; 255
    4236:	ca 52       	subi	r28, 0x2A	; 42
    4238:	df 4f       	sbci	r29, 0xFF	; 255
    423a:	08 83       	st	Y, r16
    423c:	19 83       	std	Y+1, r17	; 0x01
    423e:	c6 5d       	subi	r28, 0xD6	; 214
    4240:	d0 40       	sbci	r29, 0x00	; 0
    4242:	c6 52       	subi	r28, 0x26	; 38
    4244:	df 4f       	sbci	r29, 0xFF	; 255
    4246:	18 81       	ld	r17, Y
    4248:	ca 5d       	subi	r28, 0xDA	; 218
    424a:	d0 40       	sbci	r29, 0x00	; 0
    424c:	11 50       	subi	r17, 0x01	; 1
    424e:	c6 52       	subi	r28, 0x26	; 38
    4250:	df 4f       	sbci	r29, 0xFF	; 255
    4252:	18 83       	st	Y, r17
    4254:	ca 5d       	subi	r28, 0xDA	; 218
    4256:	d0 40       	sbci	r29, 0x00	; 0
    4258:	c6 52       	subi	r28, 0x26	; 38
    425a:	df 4f       	sbci	r29, 0xFF	; 255
    425c:	28 81       	ld	r18, Y
    425e:	ca 5d       	subi	r28, 0xDA	; 218
    4260:	d0 40       	sbci	r29, 0x00	; 0
    4262:	22 23       	and	r18, r18
    4264:	21 f6       	brne	.-120    	; 0x41ee <__stack+0x1ef>
      f_phase = atan2f( f_sin, f_cos);
    4266:	8d 81       	ldd	r24, Y+5	; 0x05
    4268:	9e 81       	ldd	r25, Y+6	; 0x06
    426a:	af 81       	ldd	r26, Y+7	; 0x07
    426c:	b8 85       	ldd	r27, Y+8	; 0x08
    426e:	29 85       	ldd	r18, Y+9	; 0x09
    4270:	3a 85       	ldd	r19, Y+10	; 0x0a
    4272:	4b 85       	ldd	r20, Y+11	; 0x0b
    4274:	5c 85       	ldd	r21, Y+12	; 0x0c
    4276:	bc 01       	movw	r22, r24
    4278:	cd 01       	movw	r24, r26
    427a:	0e 94 78 ab 	call	0x156f0	; 0x156f0 <atan2>
    427e:	dc 01       	movw	r26, r24
    4280:	cb 01       	movw	r24, r22
    4282:	80 93 78 24 	sts	0x2478, r24
    4286:	90 93 79 24 	sts	0x2479, r25
    428a:	a0 93 7a 24 	sts	0x247A, r26
    428e:	b0 93 7b 24 	sts	0x247B, r27
      t_time2 = arb_sysTimeNow( );
    4292:	ce 01       	movw	r24, r28
    4294:	8b 56       	subi	r24, 0x6B	; 107
    4296:	9f 4f       	sbci	r25, 0xFF	; 255
    4298:	0e 94 a4 81 	call	0x10348	; 0x10348 <arb_sysTimeNow>
    429c:	ce 01       	movw	r24, r28
    429e:	8b 56       	subi	r24, 0x6B	; 107
    42a0:	9f 4f       	sbci	r25, 0xFF	; 255
    42a2:	46 e8       	ldi	r20, 0x86	; 134
    42a4:	54 e2       	ldi	r21, 0x24	; 36
    42a6:	c5 52       	subi	r28, 0x25	; 37
    42a8:	df 4f       	sbci	r29, 0xFF	; 255
    42aa:	48 83       	st	Y, r20
    42ac:	59 83       	std	Y+1, r21	; 0x01
    42ae:	cb 5d       	subi	r28, 0xDB	; 219
    42b0:	d0 40       	sbci	r29, 0x00	; 0
    42b2:	c3 52       	subi	r28, 0x23	; 35
    42b4:	df 4f       	sbci	r29, 0xFF	; 255
    42b6:	88 83       	st	Y, r24
    42b8:	99 83       	std	Y+1, r25	; 0x01
    42ba:	cd 5d       	subi	r28, 0xDD	; 221
    42bc:	d0 40       	sbci	r29, 0x00	; 0
    42be:	59 e1       	ldi	r21, 0x19	; 25
    42c0:	c1 52       	subi	r28, 0x21	; 33
    42c2:	df 4f       	sbci	r29, 0xFF	; 255
    42c4:	58 83       	st	Y, r21
    42c6:	cf 5d       	subi	r28, 0xDF	; 223
    42c8:	d0 40       	sbci	r29, 0x00	; 0
    42ca:	c3 52       	subi	r28, 0x23	; 35
    42cc:	df 4f       	sbci	r29, 0xFF	; 255
    42ce:	e8 81       	ld	r30, Y
    42d0:	f9 81       	ldd	r31, Y+1	; 0x01
    42d2:	cd 5d       	subi	r28, 0xDD	; 221
    42d4:	d0 40       	sbci	r29, 0x00	; 0
    42d6:	00 80       	ld	r0, Z
    42d8:	c3 52       	subi	r28, 0x23	; 35
    42da:	df 4f       	sbci	r29, 0xFF	; 255
    42dc:	08 81       	ld	r16, Y
    42de:	19 81       	ldd	r17, Y+1	; 0x01
    42e0:	cd 5d       	subi	r28, 0xDD	; 221
    42e2:	d0 40       	sbci	r29, 0x00	; 0
    42e4:	0f 5f       	subi	r16, 0xFF	; 255
    42e6:	1f 4f       	sbci	r17, 0xFF	; 255
    42e8:	c3 52       	subi	r28, 0x23	; 35
    42ea:	df 4f       	sbci	r29, 0xFF	; 255
    42ec:	08 83       	st	Y, r16
    42ee:	19 83       	std	Y+1, r17	; 0x01
    42f0:	cd 5d       	subi	r28, 0xDD	; 221
    42f2:	d0 40       	sbci	r29, 0x00	; 0
    42f4:	c5 52       	subi	r28, 0x25	; 37
    42f6:	df 4f       	sbci	r29, 0xFF	; 255
    42f8:	e8 81       	ld	r30, Y
    42fa:	f9 81       	ldd	r31, Y+1	; 0x01
    42fc:	cb 5d       	subi	r28, 0xDB	; 219
    42fe:	d0 40       	sbci	r29, 0x00	; 0
    4300:	00 82       	st	Z, r0
    4302:	c5 52       	subi	r28, 0x25	; 37
    4304:	df 4f       	sbci	r29, 0xFF	; 255
    4306:	08 81       	ld	r16, Y
    4308:	19 81       	ldd	r17, Y+1	; 0x01
    430a:	cb 5d       	subi	r28, 0xDB	; 219
    430c:	d0 40       	sbci	r29, 0x00	; 0
    430e:	0f 5f       	subi	r16, 0xFF	; 255
    4310:	1f 4f       	sbci	r17, 0xFF	; 255
    4312:	c5 52       	subi	r28, 0x25	; 37
    4314:	df 4f       	sbci	r29, 0xFF	; 255
    4316:	08 83       	st	Y, r16
    4318:	19 83       	std	Y+1, r17	; 0x01
    431a:	cb 5d       	subi	r28, 0xDB	; 219
    431c:	d0 40       	sbci	r29, 0x00	; 0
    431e:	c1 52       	subi	r28, 0x21	; 33
    4320:	df 4f       	sbci	r29, 0xFF	; 255
    4322:	18 81       	ld	r17, Y
    4324:	cf 5d       	subi	r28, 0xDF	; 223
    4326:	d0 40       	sbci	r29, 0x00	; 0
    4328:	11 50       	subi	r17, 0x01	; 1
    432a:	c1 52       	subi	r28, 0x21	; 33
    432c:	df 4f       	sbci	r29, 0xFF	; 255
    432e:	18 83       	st	Y, r17
    4330:	cf 5d       	subi	r28, 0xDF	; 223
    4332:	d0 40       	sbci	r29, 0x00	; 0
    4334:	c1 52       	subi	r28, 0x21	; 33
    4336:	df 4f       	sbci	r29, 0xFF	; 255
    4338:	28 81       	ld	r18, Y
    433a:	cf 5d       	subi	r28, 0xDF	; 223
    433c:	d0 40       	sbci	r29, 0x00	; 0
    433e:	22 23       	and	r18, r18
    4340:	21 f6       	brne	.-120    	; 0x42ca <__stack+0x2cb>
      i_loading2 = t_time2.i_usec-t_time1.i_usec;
    4342:	20 91 9b 24 	lds	r18, 0x249B
    4346:	30 91 9c 24 	lds	r19, 0x249C
    434a:	40 91 9d 24 	lds	r20, 0x249D
    434e:	50 91 9e 24 	lds	r21, 0x249E
    4352:	80 91 b4 24 	lds	r24, 0x24B4
    4356:	90 91 b5 24 	lds	r25, 0x24B5
    435a:	a0 91 b6 24 	lds	r26, 0x24B6
    435e:	b0 91 b7 24 	lds	r27, 0x24B7
    4362:	79 01       	movw	r14, r18
    4364:	8a 01       	movw	r16, r20
    4366:	e8 1a       	sub	r14, r24
    4368:	f9 0a       	sbc	r15, r25
    436a:	0a 0b       	sbc	r16, r26
    436c:	1b 0b       	sbc	r17, r27
    436e:	d8 01       	movw	r26, r16
    4370:	c7 01       	movw	r24, r14
    4372:	80 93 7c 24 	sts	0x247C, r24
    4376:	90 93 7d 24 	sts	0x247D, r25
    437a:	a0 93 7e 24 	sts	0x247E, r26
    437e:	b0 93 7f 24 	sts	0x247F, r27
      if( i_loading2 < 0)
    4382:	80 91 7c 24 	lds	r24, 0x247C
    4386:	90 91 7d 24 	lds	r25, 0x247D
    438a:	a0 91 7e 24 	lds	r26, 0x247E
    438e:	b0 91 7f 24 	lds	r27, 0x247F
    4392:	bb 23       	and	r27, r27
    4394:	a4 f4       	brge	.+40     	; 0x43be <__stack+0x3bf>
         i_loading2 = i_loading2 + 1000000;
    4396:	80 91 7c 24 	lds	r24, 0x247C
    439a:	90 91 7d 24 	lds	r25, 0x247D
    439e:	a0 91 7e 24 	lds	r26, 0x247E
    43a2:	b0 91 7f 24 	lds	r27, 0x247F
    43a6:	80 5c       	subi	r24, 0xC0	; 192
    43a8:	9d 4b       	sbci	r25, 0xBD	; 189
    43aa:	a0 4f       	sbci	r26, 0xF0	; 240
    43ac:	bf 4f       	sbci	r27, 0xFF	; 255
    43ae:	80 93 7c 24 	sts	0x247C, r24
    43b2:	90 93 7d 24 	sts	0x247D, r25
    43b6:	a0 93 7e 24 	sts	0x247E, r26
    43ba:	b0 93 7f 24 	sts	0x247F, r27
      i_loading2 = i_loading2 - s_callLoad;
    43be:	20 91 7c 24 	lds	r18, 0x247C
    43c2:	30 91 7d 24 	lds	r19, 0x247D
    43c6:	40 91 7e 24 	lds	r20, 0x247E
    43ca:	50 91 7f 24 	lds	r21, 0x247F
    43ce:	80 91 84 24 	lds	r24, 0x2484
    43d2:	90 91 85 24 	lds	r25, 0x2485
    43d6:	aa 27       	eor	r26, r26
    43d8:	97 fd       	sbrc	r25, 7
    43da:	a0 95       	com	r26
    43dc:	ba 2f       	mov	r27, r26
    43de:	79 01       	movw	r14, r18
    43e0:	8a 01       	movw	r16, r20
    43e2:	e8 1a       	sub	r14, r24
    43e4:	f9 0a       	sbc	r15, r25
    43e6:	0a 0b       	sbc	r16, r26
    43e8:	1b 0b       	sbc	r17, r27
    43ea:	d8 01       	movw	r26, r16
    43ec:	c7 01       	movw	r24, r14
    43ee:	80 93 7c 24 	sts	0x247C, r24
    43f2:	90 93 7d 24 	sts	0x247D, r25
    43f6:	a0 93 7e 24 	sts	0x247E, r26
    43fa:	b0 93 7f 24 	sts	0x247F, r27

      s_size = sprintf( ( char *)ac_buff, "fixed atan2=%d ansii atan2=%d err=%.2f%% speed=%dx\r",
    43fe:	69 85       	ldd	r22, Y+9	; 0x09
    4400:	7a 85       	ldd	r23, Y+10	; 0x0a
    4402:	8b 85       	ldd	r24, Y+11	; 0x0b
    4404:	9c 85       	ldd	r25, Y+12	; 0x0c
    4406:	20 e0       	ldi	r18, 0x00	; 0
    4408:	3e ef       	ldi	r19, 0xFE	; 254
    440a:	4f ef       	ldi	r20, 0xFF	; 255
    440c:	56 e4       	ldi	r21, 0x46	; 70
    440e:	0e 94 0e ae 	call	0x15c1c	; 0x15c1c <__mulsf3>
    4412:	dc 01       	movw	r26, r24
    4414:	cb 01       	movw	r24, r22
    4416:	bc 01       	movw	r22, r24
    4418:	cd 01       	movw	r24, r26
    441a:	0e 94 74 ac 	call	0x158e8	; 0x158e8 <__fixsfsi>
    441e:	dc 01       	movw	r26, r24
    4420:	cb 01       	movw	r24, r22
    4422:	8c 01       	movw	r16, r24
    4424:	80 91 7c 24 	lds	r24, 0x247C
    4428:	90 91 7d 24 	lds	r25, 0x247D
    442c:	a0 91 7e 24 	lds	r26, 0x247E
    4430:	b0 91 7f 24 	lds	r27, 0x247F
    4434:	aa 27       	eor	r26, r26
    4436:	97 fd       	sbrc	r25, 7
    4438:	a0 95       	com	r26
    443a:	ba 2f       	mov	r27, r26
    443c:	20 91 80 24 	lds	r18, 0x2480
    4440:	30 91 81 24 	lds	r19, 0x2481
    4444:	40 91 82 24 	lds	r20, 0x2482
    4448:	50 91 83 24 	lds	r21, 0x2483
    444c:	bc 01       	movw	r22, r24
    444e:	cd 01       	movw	r24, r26
    4450:	0e 94 22 b4 	call	0x16844	; 0x16844 <__divmodsi4>
    4454:	da 01       	movw	r26, r20
    4456:	c9 01       	movw	r24, r18
    4458:	9c 01       	movw	r18, r24
    445a:	ad 01       	movw	r20, r26
    445c:	8d b7       	in	r24, 0x3d	; 61
    445e:	9e b7       	in	r25, 0x3e	; 62
    4460:	40 97       	sbiw	r24, 0x10	; 16
    4462:	8d bf       	out	0x3d, r24	; 61
    4464:	9e bf       	out	0x3e, r25	; 62
    4466:	ed b7       	in	r30, 0x3d	; 61
    4468:	fe b7       	in	r31, 0x3e	; 62
    446a:	31 96       	adiw	r30, 0x01	; 1
    446c:	ce 01       	movw	r24, r28
    446e:	49 96       	adiw	r24, 0x19	; 25
    4470:	80 83       	st	Z, r24
    4472:	91 83       	std	Z+1, r25	; 0x01
    4474:	86 ed       	ldi	r24, 0xD6	; 214
    4476:	90 e2       	ldi	r25, 0x20	; 32
    4478:	82 83       	std	Z+2, r24	; 0x02
    447a:	93 83       	std	Z+3, r25	; 0x03
    447c:	8b 89       	ldd	r24, Y+19	; 0x13
    447e:	9c 89       	ldd	r25, Y+20	; 0x14
    4480:	84 83       	std	Z+4, r24	; 0x04
    4482:	95 83       	std	Z+5, r25	; 0x05
    4484:	06 83       	std	Z+6, r16	; 0x06
    4486:	17 83       	std	Z+7, r17	; 0x07
    4488:	89 81       	ldd	r24, Y+1	; 0x01
    448a:	9a 81       	ldd	r25, Y+2	; 0x02
    448c:	ab 81       	ldd	r26, Y+3	; 0x03
    448e:	bc 81       	ldd	r27, Y+4	; 0x04
    4490:	80 87       	std	Z+8, r24	; 0x08
    4492:	91 87       	std	Z+9, r25	; 0x09
    4494:	a2 87       	std	Z+10, r26	; 0x0a
    4496:	b3 87       	std	Z+11, r27	; 0x0b
    4498:	24 87       	std	Z+12, r18	; 0x0c
    449a:	35 87       	std	Z+13, r19	; 0x0d
    449c:	46 87       	std	Z+14, r20	; 0x0e
    449e:	57 87       	std	Z+15, r21	; 0x0f
    44a0:	0e 94 7a b1 	call	0x162f4	; 0x162f4 <sprintf>
    44a4:	ed b7       	in	r30, 0x3d	; 61
    44a6:	fe b7       	in	r31, 0x3e	; 62
    44a8:	70 96       	adiw	r30, 0x10	; 16
    44aa:	ed bf       	out	0x3d, r30	; 61
    44ac:	fe bf       	out	0x3e, r31	; 62
    44ae:	8d 87       	std	Y+13, r24	; 0x0d
    44b0:	9e 87       	std	Y+14, r25	; 0x0e
                        s_cos,
                        (int16_t)(f_cos*32767.0f),
                        (double)f_error,
                        (int)i_loading2/i_loading1);
      arb_printf( PRINTF_DBG_MED |PRINTF_DBG_SHOW_TIME, 
    44b2:	9e 01       	movw	r18, r28
    44b4:	27 5e       	subi	r18, 0xE7	; 231
    44b6:	3f 4f       	sbci	r19, 0xFF	; 255
    44b8:	82 e4       	ldi	r24, 0x42	; 66
    44ba:	b9 01       	movw	r22, r18
    44bc:	0e 94 87 71 	call	0xe30e	; 0xe30e <arb_printf>
                  (const char *)ac_buff);

      /*---------------------------------------------------------------------*
       * Allow other threads to run...
       *---------------------------------------------------------------------*/
      arb_sleep( MATH_SLEEP_TICKS);
    44c0:	8a e0       	ldi	r24, 0x0A	; 10
    44c2:	90 e0       	ldi	r25, 0x00	; 0
    44c4:	0e 94 20 85 	call	0x10a40	; 0x10a40 <arb_sleep>
    44c8:	98 c9       	rjmp	.-3280   	; 0x37fa <usr_mathTest+0x1c6>

000044ca <usr_mathTestInit>:
   }/*End while( RUN_FOREVER)*/

}/*End usr_mathTest*/

t_error usr_mathTestInit( void)
{
    44ca:	0f 93       	push	r16
    44cc:	df 93       	push	r29
    44ce:	cf 93       	push	r28
    44d0:	0f 92       	push	r0
    44d2:	cd b7       	in	r28, 0x3d	; 61
    44d4:	de b7       	in	r29, 0x3e	; 62

   /*------------------------------------------------------------------------*
    * Initialize the BMS object...
    *------------------------------------------------------------------------*/
   memset( (void *)&gt_mathObjct, 0, sizeof( t_mathObjct));
    44d6:	88 eb       	ldi	r24, 0xB8	; 184
    44d8:	94 e2       	ldi	r25, 0x24	; 36
    44da:	60 e0       	ldi	r22, 0x00	; 0
    44dc:	70 e0       	ldi	r23, 0x00	; 0
    44de:	44 e0       	ldi	r20, 0x04	; 4
    44e0:	50 e0       	ldi	r21, 0x00	; 0
    44e2:	0e 94 d0 b0 	call	0x161a0	; 0x161a0 <memset>

   /*------------------------------------------------------------------------*
    * Create a new thread.
    *------------------------------------------------------------------------*/
   gt_mathObjct.t_mathThread = arb_threadCreate( usr_mathTest,
    44e6:	8a e1       	ldi	r24, 0x1A	; 26
    44e8:	9b e1       	ldi	r25, 0x1B	; 27
    44ea:	61 e0       	ldi	r22, 0x01	; 1
    44ec:	70 e0       	ldi	r23, 0x00	; 0
    44ee:	40 e0       	ldi	r20, 0x00	; 0
    44f0:	50 e0       	ldi	r21, 0x00	; 0
    44f2:	20 e0       	ldi	r18, 0x00	; 0
    44f4:	32 e0       	ldi	r19, 0x02	; 2
    44f6:	00 e0       	ldi	r16, 0x00	; 0
    44f8:	0e 94 5b 83 	call	0x106b6	; 0x106b6 <arb_threadCreate>
    44fc:	80 93 b8 24 	sts	0x24B8, r24
    4500:	90 93 b9 24 	sts	0x24B9, r25
                                                 1,
                                                 0,
                                                 ARB_STACK_512B,
                                                 0);

   if( gt_mathObjct.t_mathThread < 0)
    4504:	80 91 b8 24 	lds	r24, 0x24B8
    4508:	90 91 b9 24 	lds	r25, 0x24B9
    450c:	99 23       	and	r25, r25
    450e:	34 f4       	brge	.+12     	; 0x451c <usr_mathTestInit+0x52>
   {
      return gt_mathObjct.t_mathThread;
    4510:	80 91 b8 24 	lds	r24, 0x24B8
    4514:	90 91 b9 24 	lds	r25, 0x24B9
    4518:	89 83       	std	Y+1, r24	; 0x01
    451a:	16 c0       	rjmp	.+44     	; 0x4548 <usr_mathTestInit+0x7e>
   }/*End if( gt_mathObjct.t_mathThread < 0)*/

   /*------------------------------------------------------------------------*
    * Open a handle to the signal driver.
    *------------------------------------------------------------------------*/
   gt_mathObjct.t_signalHndl = arb_open( "signalDevice0",
    451c:	8a e0       	ldi	r24, 0x0A	; 10
    451e:	91 e2       	ldi	r25, 0x21	; 33
    4520:	63 e0       	ldi	r22, 0x03	; 3
    4522:	0e 94 22 6f 	call	0xde44	; 0xde44 <arb_open>
    4526:	80 93 ba 24 	sts	0x24BA, r24
    452a:	90 93 bb 24 	sts	0x24BB, r25
                                         ARB_O_READ |
                                         ARB_O_WRITE);

   if( gt_mathObjct.t_signalHndl < 0)
    452e:	80 91 ba 24 	lds	r24, 0x24BA
    4532:	90 91 bb 24 	lds	r25, 0x24BB
    4536:	99 23       	and	r25, r25
    4538:	34 f4       	brge	.+12     	; 0x4546 <usr_mathTestInit+0x7c>
   {
      return gt_mathObjct.t_signalHndl;
    453a:	80 91 ba 24 	lds	r24, 0x24BA
    453e:	90 91 bb 24 	lds	r25, 0x24BB
    4542:	89 83       	std	Y+1, r24	; 0x01
    4544:	01 c0       	rjmp	.+2      	; 0x4548 <usr_mathTestInit+0x7e>
   }

   return ARB_PASSED;
    4546:	19 82       	std	Y+1, r1	; 0x01
    4548:	89 81       	ldd	r24, Y+1	; 0x01

}/*End usr_mathTestInit*/
    454a:	0f 90       	pop	r0
    454c:	cf 91       	pop	r28
    454e:	df 91       	pop	r29
    4550:	0f 91       	pop	r16
    4552:	08 95       	ret

00004554 <findGpioIntElement>:
    4554:	cf 93       	push	r28
    4556:	df 93       	push	r29
    4558:	0f 92       	push	r0
    455a:	0f 92       	push	r0
    455c:	cd b7       	in	r28, 0x3d	; 61
    455e:	de b7       	in	r29, 0x3e	; 62
    4560:	e0 91 18 21 	lds	r30, 0x2118
    4564:	f0 91 19 21 	lds	r31, 0x2119
    4568:	22 81       	ldd	r18, Z+2	; 0x02
    456a:	33 81       	ldd	r19, Z+3	; 0x03
    456c:	e0 91 18 21 	lds	r30, 0x2118
    4570:	f0 91 19 21 	lds	r31, 0x2119
    4574:	0c c0       	rjmp	.+24     	; 0x458e <findGpioIntElement+0x3a>
    4576:	e9 81       	ldd	r30, Y+1	; 0x01
    4578:	fa 81       	ldd	r31, Y+2	; 0x02
    457a:	01 90       	ld	r0, Z+
    457c:	f0 81       	ld	r31, Z
    457e:	e0 2d       	mov	r30, r0
    4580:	90 81       	ld	r25, Z
    4582:	98 17       	cp	r25, r24
    4584:	69 f0       	breq	.+26     	; 0x45a0 <findGpioIntElement+0x4c>
    4586:	21 50       	subi	r18, 0x01	; 1
    4588:	30 40       	sbci	r19, 0x00	; 0
    458a:	e9 81       	ldd	r30, Y+1	; 0x01
    458c:	fa 81       	ldd	r31, Y+2	; 0x02
    458e:	40 85       	ldd	r20, Z+8	; 0x08
    4590:	51 85       	ldd	r21, Z+9	; 0x09
    4592:	49 83       	std	Y+1, r20	; 0x01
    4594:	5a 83       	std	Y+2, r21	; 0x02
    4596:	12 16       	cp	r1, r18
    4598:	13 06       	cpc	r1, r19
    459a:	6c f3       	brlt	.-38     	; 0x4576 <findGpioIntElement+0x22>
    459c:	e0 e0       	ldi	r30, 0x00	; 0
    459e:	f0 e0       	ldi	r31, 0x00	; 0
    45a0:	cf 01       	movw	r24, r30
    45a2:	0f 90       	pop	r0
    45a4:	0f 90       	pop	r0
    45a6:	df 91       	pop	r29
    45a8:	cf 91       	pop	r28
    45aa:	08 95       	ret

000045ac <createIntHandle>:
    45ac:	cf 93       	push	r28
    45ae:	df 93       	push	r29
    45b0:	0f 92       	push	r0
    45b2:	0f 92       	push	r0
    45b4:	cd b7       	in	r28, 0x3d	; 61
    45b6:	de b7       	in	r29, 0x3e	; 62
    45b8:	84 e0       	ldi	r24, 0x04	; 4
    45ba:	90 e0       	ldi	r25, 0x00	; 0
    45bc:	0e 94 b8 8a 	call	0x11570	; 0x11570 <utl_createLink>
    45c0:	89 83       	std	Y+1, r24	; 0x01
    45c2:	9a 83       	std	Y+2, r25	; 0x02
    45c4:	89 81       	ldd	r24, Y+1	; 0x01
    45c6:	9a 81       	ldd	r25, Y+2	; 0x02
    45c8:	97 fd       	sbrc	r25, 7
    45ca:	0c c0       	rjmp	.+24     	; 0x45e4 <createIntHandle+0x38>
    45cc:	80 91 18 21 	lds	r24, 0x2118
    45d0:	90 91 19 21 	lds	r25, 0x2119
    45d4:	69 81       	ldd	r22, Y+1	; 0x01
    45d6:	7a 81       	ldd	r23, Y+2	; 0x02
    45d8:	41 e0       	ldi	r20, 0x01	; 1
    45da:	0e 94 c8 88 	call	0x11190	; 0x11190 <utl_insertLink>
    45de:	89 81       	ldd	r24, Y+1	; 0x01
    45e0:	9a 81       	ldd	r25, Y+2	; 0x02
    45e2:	02 c0       	rjmp	.+4      	; 0x45e8 <createIntHandle+0x3c>
    45e4:	8e ef       	ldi	r24, 0xFE	; 254
    45e6:	9f ef       	ldi	r25, 0xFF	; 255
    45e8:	0f 90       	pop	r0
    45ea:	0f 90       	pop	r0
    45ec:	df 91       	pop	r29
    45ee:	cf 91       	pop	r28
    45f0:	08 95       	ret

000045f2 <confInt>:
    45f2:	cf 92       	push	r12
    45f4:	df 92       	push	r13
    45f6:	ef 92       	push	r14
    45f8:	ff 92       	push	r15
    45fa:	0f 93       	push	r16
    45fc:	1f 93       	push	r17
    45fe:	cf 93       	push	r28
    4600:	df 93       	push	r29
    4602:	0f 92       	push	r0
    4604:	0f 92       	push	r0
    4606:	cd b7       	in	r28, 0x3d	; 61
    4608:	de b7       	in	r29, 0x3e	; 62
    460a:	8c 01       	movw	r16, r24
    460c:	7b 01       	movw	r14, r22
    460e:	c4 2e       	mov	r12, r20
    4610:	d2 2e       	mov	r13, r18
    4612:	db 01       	movw	r26, r22
    4614:	8c 91       	ld	r24, X
    4616:	88 30       	cpi	r24, 0x08	; 8
    4618:	c1 f0       	breq	.+48     	; 0x464a <confInt+0x58>
    461a:	89 30       	cpi	r24, 0x09	; 9
    461c:	48 f4       	brcc	.+18     	; 0x4630 <confInt+0x3e>
    461e:	81 30       	cpi	r24, 0x01	; 1
    4620:	08 f4       	brcc	.+2      	; 0x4624 <confInt+0x32>
    4622:	26 c1       	rjmp	.+588    	; 0x4870 <confInt+0x27e>
    4624:	83 30       	cpi	r24, 0x03	; 3
    4626:	88 f0       	brcs	.+34     	; 0x464a <confInt+0x58>
    4628:	84 30       	cpi	r24, 0x04	; 4
    462a:	09 f0       	breq	.+2      	; 0x462e <confInt+0x3c>
    462c:	21 c1       	rjmp	.+578    	; 0x4870 <confInt+0x27e>
    462e:	0d c0       	rjmp	.+26     	; 0x464a <confInt+0x58>
    4630:	80 32       	cpi	r24, 0x20	; 32
    4632:	59 f0       	breq	.+22     	; 0x464a <confInt+0x58>
    4634:	81 32       	cpi	r24, 0x21	; 33
    4636:	20 f4       	brcc	.+8      	; 0x4640 <confInt+0x4e>
    4638:	80 31       	cpi	r24, 0x10	; 16
    463a:	09 f0       	breq	.+2      	; 0x463e <confInt+0x4c>
    463c:	19 c1       	rjmp	.+562    	; 0x4870 <confInt+0x27e>
    463e:	05 c0       	rjmp	.+10     	; 0x464a <confInt+0x58>
    4640:	80 34       	cpi	r24, 0x40	; 64
    4642:	19 f0       	breq	.+6      	; 0x464a <confInt+0x58>
    4644:	80 38       	cpi	r24, 0x80	; 128
    4646:	09 f0       	breq	.+2      	; 0x464a <confInt+0x58>
    4648:	13 c1       	rjmp	.+550    	; 0x4870 <confInt+0x27e>
    464a:	f8 01       	movw	r30, r16
    464c:	90 81       	ld	r25, Z
    464e:	98 23       	and	r25, r24
    4650:	09 f0       	breq	.+2      	; 0x4654 <confInt+0x62>
    4652:	11 c1       	rjmp	.+546    	; 0x4876 <confInt+0x284>
    4654:	8c 2d       	mov	r24, r12
    4656:	0e 94 aa 22 	call	0x4554	; 0x4554 <findGpioIntElement>
    465a:	00 97       	sbiw	r24, 0x00	; 0
    465c:	09 f0       	breq	.+2      	; 0x4660 <confInt+0x6e>
    465e:	80 c0       	rjmp	.+256    	; 0x4760 <confInt+0x16e>
    4660:	0e 94 d6 22 	call	0x45ac	; 0x45ac <createIntHandle>
    4664:	89 83       	std	Y+1, r24	; 0x01
    4666:	9a 83       	std	Y+2, r25	; 0x02
    4668:	89 81       	ldd	r24, Y+1	; 0x01
    466a:	9a 81       	ldd	r25, Y+2	; 0x02
    466c:	97 fd       	sbrc	r25, 7
    466e:	09 c1       	rjmp	.+530    	; 0x4882 <confInt+0x290>
    4670:	e9 81       	ldd	r30, Y+1	; 0x01
    4672:	fa 81       	ldd	r31, Y+2	; 0x02
    4674:	01 90       	ld	r0, Z+
    4676:	f0 81       	ld	r31, Z
    4678:	e0 2d       	mov	r30, r0
    467a:	c0 82       	st	Z, r12
    467c:	d7 01       	movw	r26, r14
    467e:	8c 91       	ld	r24, X
    4680:	81 83       	std	Z+1, r24	; 0x01
    4682:	12 96       	adiw	r26, 0x02	; 2
    4684:	8d 91       	ld	r24, X+
    4686:	9c 91       	ld	r25, X
    4688:	13 97       	sbiw	r26, 0x03	; 3
    468a:	82 83       	std	Z+2, r24	; 0x02
    468c:	93 83       	std	Z+3, r25	; 0x03
    468e:	8c 91       	ld	r24, X
    4690:	88 30       	cpi	r24, 0x08	; 8
    4692:	99 f1       	breq	.+102    	; 0x46fa <confInt+0x108>
    4694:	89 30       	cpi	r24, 0x09	; 9
    4696:	40 f4       	brcc	.+16     	; 0x46a8 <confInt+0xb6>
    4698:	82 30       	cpi	r24, 0x02	; 2
    469a:	e9 f0       	breq	.+58     	; 0x46d6 <confInt+0xe4>
    469c:	84 30       	cpi	r24, 0x04	; 4
    469e:	21 f1       	breq	.+72     	; 0x46e8 <confInt+0xf6>
    46a0:	81 30       	cpi	r24, 0x01	; 1
    46a2:	09 f0       	breq	.+2      	; 0x46a6 <confInt+0xb4>
    46a4:	55 c0       	rjmp	.+170    	; 0x4750 <confInt+0x15e>
    46a6:	0e c0       	rjmp	.+28     	; 0x46c4 <confInt+0xd2>
    46a8:	80 32       	cpi	r24, 0x20	; 32
    46aa:	c9 f1       	breq	.+114    	; 0x471e <confInt+0x12c>
    46ac:	81 32       	cpi	r24, 0x21	; 33
    46ae:	20 f4       	brcc	.+8      	; 0x46b8 <confInt+0xc6>
    46b0:	80 31       	cpi	r24, 0x10	; 16
    46b2:	09 f0       	breq	.+2      	; 0x46b6 <confInt+0xc4>
    46b4:	4d c0       	rjmp	.+154    	; 0x4750 <confInt+0x15e>
    46b6:	2a c0       	rjmp	.+84     	; 0x470c <confInt+0x11a>
    46b8:	80 34       	cpi	r24, 0x40	; 64
    46ba:	d1 f1       	breq	.+116    	; 0x4730 <confInt+0x13e>
    46bc:	80 38       	cpi	r24, 0x80	; 128
    46be:	09 f0       	breq	.+2      	; 0x46c2 <confInt+0xd0>
    46c0:	47 c0       	rjmp	.+142    	; 0x4750 <confInt+0x15e>
    46c2:	3f c0       	rjmp	.+126    	; 0x4742 <confInt+0x150>
    46c4:	f8 01       	movw	r30, r16
    46c6:	80 89       	ldd	r24, Z+16	; 0x10
    46c8:	d7 01       	movw	r26, r14
    46ca:	11 96       	adiw	r26, 0x01	; 1
    46cc:	9c 91       	ld	r25, X
    46ce:	11 97       	sbiw	r26, 0x01	; 1
    46d0:	89 2b       	or	r24, r25
    46d2:	80 8b       	std	Z+16, r24	; 0x10
    46d4:	3d c0       	rjmp	.+122    	; 0x4750 <confInt+0x15e>
    46d6:	f8 01       	movw	r30, r16
    46d8:	81 89       	ldd	r24, Z+17	; 0x11
    46da:	d7 01       	movw	r26, r14
    46dc:	11 96       	adiw	r26, 0x01	; 1
    46de:	9c 91       	ld	r25, X
    46e0:	11 97       	sbiw	r26, 0x01	; 1
    46e2:	89 2b       	or	r24, r25
    46e4:	81 8b       	std	Z+17, r24	; 0x11
    46e6:	34 c0       	rjmp	.+104    	; 0x4750 <confInt+0x15e>
    46e8:	f8 01       	movw	r30, r16
    46ea:	82 89       	ldd	r24, Z+18	; 0x12
    46ec:	d7 01       	movw	r26, r14
    46ee:	11 96       	adiw	r26, 0x01	; 1
    46f0:	9c 91       	ld	r25, X
    46f2:	11 97       	sbiw	r26, 0x01	; 1
    46f4:	89 2b       	or	r24, r25
    46f6:	82 8b       	std	Z+18, r24	; 0x12
    46f8:	2b c0       	rjmp	.+86     	; 0x4750 <confInt+0x15e>
    46fa:	f8 01       	movw	r30, r16
    46fc:	83 89       	ldd	r24, Z+19	; 0x13
    46fe:	d7 01       	movw	r26, r14
    4700:	11 96       	adiw	r26, 0x01	; 1
    4702:	9c 91       	ld	r25, X
    4704:	11 97       	sbiw	r26, 0x01	; 1
    4706:	89 2b       	or	r24, r25
    4708:	83 8b       	std	Z+19, r24	; 0x13
    470a:	22 c0       	rjmp	.+68     	; 0x4750 <confInt+0x15e>
    470c:	f8 01       	movw	r30, r16
    470e:	84 89       	ldd	r24, Z+20	; 0x14
    4710:	d7 01       	movw	r26, r14
    4712:	11 96       	adiw	r26, 0x01	; 1
    4714:	9c 91       	ld	r25, X
    4716:	11 97       	sbiw	r26, 0x01	; 1
    4718:	89 2b       	or	r24, r25
    471a:	84 8b       	std	Z+20, r24	; 0x14
    471c:	19 c0       	rjmp	.+50     	; 0x4750 <confInt+0x15e>
    471e:	f8 01       	movw	r30, r16
    4720:	85 89       	ldd	r24, Z+21	; 0x15
    4722:	d7 01       	movw	r26, r14
    4724:	11 96       	adiw	r26, 0x01	; 1
    4726:	9c 91       	ld	r25, X
    4728:	11 97       	sbiw	r26, 0x01	; 1
    472a:	89 2b       	or	r24, r25
    472c:	85 8b       	std	Z+21, r24	; 0x15
    472e:	10 c0       	rjmp	.+32     	; 0x4750 <confInt+0x15e>
    4730:	f8 01       	movw	r30, r16
    4732:	86 89       	ldd	r24, Z+22	; 0x16
    4734:	d7 01       	movw	r26, r14
    4736:	11 96       	adiw	r26, 0x01	; 1
    4738:	9c 91       	ld	r25, X
    473a:	11 97       	sbiw	r26, 0x01	; 1
    473c:	89 2b       	or	r24, r25
    473e:	86 8b       	std	Z+22, r24	; 0x16
    4740:	07 c0       	rjmp	.+14     	; 0x4750 <confInt+0x15e>
    4742:	f8 01       	movw	r30, r16
    4744:	87 89       	ldd	r24, Z+23	; 0x17
    4746:	d7 01       	movw	r26, r14
    4748:	11 96       	adiw	r26, 0x01	; 1
    474a:	9c 91       	ld	r25, X
    474c:	89 2b       	or	r24, r25
    474e:	87 8b       	std	Z+23, r24	; 0x17
    4750:	f8 01       	movw	r30, r16
    4752:	81 85       	ldd	r24, Z+9	; 0x09
    4754:	83 60       	ori	r24, 0x03	; 3
    4756:	81 87       	std	Z+9, r24	; 0x09
    4758:	d7 01       	movw	r26, r14
    475a:	8c 91       	ld	r24, X
    475c:	82 87       	std	Z+10, r24	; 0x0a
    475e:	85 c0       	rjmp	.+266    	; 0x486a <confInt+0x278>
    4760:	8d 2d       	mov	r24, r13
    4762:	0e 94 aa 22 	call	0x4554	; 0x4554 <findGpioIntElement>
    4766:	00 97       	sbiw	r24, 0x00	; 0
    4768:	09 f0       	breq	.+2      	; 0x476c <confInt+0x17a>
    476a:	88 c0       	rjmp	.+272    	; 0x487c <confInt+0x28a>
    476c:	0e 94 d6 22 	call	0x45ac	; 0x45ac <createIntHandle>
    4770:	89 83       	std	Y+1, r24	; 0x01
    4772:	9a 83       	std	Y+2, r25	; 0x02
    4774:	89 81       	ldd	r24, Y+1	; 0x01
    4776:	9a 81       	ldd	r25, Y+2	; 0x02
    4778:	97 fd       	sbrc	r25, 7
    477a:	83 c0       	rjmp	.+262    	; 0x4882 <confInt+0x290>
    477c:	e9 81       	ldd	r30, Y+1	; 0x01
    477e:	fa 81       	ldd	r31, Y+2	; 0x02
    4780:	01 90       	ld	r0, Z+
    4782:	f0 81       	ld	r31, Z
    4784:	e0 2d       	mov	r30, r0
    4786:	d0 82       	st	Z, r13
    4788:	d7 01       	movw	r26, r14
    478a:	8c 91       	ld	r24, X
    478c:	81 83       	std	Z+1, r24	; 0x01
    478e:	12 96       	adiw	r26, 0x02	; 2
    4790:	8d 91       	ld	r24, X+
    4792:	9c 91       	ld	r25, X
    4794:	13 97       	sbiw	r26, 0x03	; 3
    4796:	82 83       	std	Z+2, r24	; 0x02
    4798:	93 83       	std	Z+3, r25	; 0x03
    479a:	8c 91       	ld	r24, X
    479c:	88 30       	cpi	r24, 0x08	; 8
    479e:	99 f1       	breq	.+102    	; 0x4806 <confInt+0x214>
    47a0:	89 30       	cpi	r24, 0x09	; 9
    47a2:	40 f4       	brcc	.+16     	; 0x47b4 <confInt+0x1c2>
    47a4:	82 30       	cpi	r24, 0x02	; 2
    47a6:	e9 f0       	breq	.+58     	; 0x47e2 <confInt+0x1f0>
    47a8:	84 30       	cpi	r24, 0x04	; 4
    47aa:	21 f1       	breq	.+72     	; 0x47f4 <confInt+0x202>
    47ac:	81 30       	cpi	r24, 0x01	; 1
    47ae:	09 f0       	breq	.+2      	; 0x47b2 <confInt+0x1c0>
    47b0:	55 c0       	rjmp	.+170    	; 0x485c <confInt+0x26a>
    47b2:	0e c0       	rjmp	.+28     	; 0x47d0 <confInt+0x1de>
    47b4:	80 32       	cpi	r24, 0x20	; 32
    47b6:	c9 f1       	breq	.+114    	; 0x482a <confInt+0x238>
    47b8:	81 32       	cpi	r24, 0x21	; 33
    47ba:	20 f4       	brcc	.+8      	; 0x47c4 <confInt+0x1d2>
    47bc:	80 31       	cpi	r24, 0x10	; 16
    47be:	09 f0       	breq	.+2      	; 0x47c2 <confInt+0x1d0>
    47c0:	4d c0       	rjmp	.+154    	; 0x485c <confInt+0x26a>
    47c2:	2a c0       	rjmp	.+84     	; 0x4818 <confInt+0x226>
    47c4:	80 34       	cpi	r24, 0x40	; 64
    47c6:	d1 f1       	breq	.+116    	; 0x483c <confInt+0x24a>
    47c8:	80 38       	cpi	r24, 0x80	; 128
    47ca:	09 f0       	breq	.+2      	; 0x47ce <confInt+0x1dc>
    47cc:	47 c0       	rjmp	.+142    	; 0x485c <confInt+0x26a>
    47ce:	3f c0       	rjmp	.+126    	; 0x484e <confInt+0x25c>
    47d0:	f8 01       	movw	r30, r16
    47d2:	80 89       	ldd	r24, Z+16	; 0x10
    47d4:	d7 01       	movw	r26, r14
    47d6:	11 96       	adiw	r26, 0x01	; 1
    47d8:	9c 91       	ld	r25, X
    47da:	11 97       	sbiw	r26, 0x01	; 1
    47dc:	89 2b       	or	r24, r25
    47de:	80 8b       	std	Z+16, r24	; 0x10
    47e0:	3d c0       	rjmp	.+122    	; 0x485c <confInt+0x26a>
    47e2:	f8 01       	movw	r30, r16
    47e4:	81 89       	ldd	r24, Z+17	; 0x11
    47e6:	d7 01       	movw	r26, r14
    47e8:	11 96       	adiw	r26, 0x01	; 1
    47ea:	9c 91       	ld	r25, X
    47ec:	11 97       	sbiw	r26, 0x01	; 1
    47ee:	89 2b       	or	r24, r25
    47f0:	81 8b       	std	Z+17, r24	; 0x11
    47f2:	34 c0       	rjmp	.+104    	; 0x485c <confInt+0x26a>
    47f4:	f8 01       	movw	r30, r16
    47f6:	82 89       	ldd	r24, Z+18	; 0x12
    47f8:	d7 01       	movw	r26, r14
    47fa:	11 96       	adiw	r26, 0x01	; 1
    47fc:	9c 91       	ld	r25, X
    47fe:	11 97       	sbiw	r26, 0x01	; 1
    4800:	89 2b       	or	r24, r25
    4802:	82 8b       	std	Z+18, r24	; 0x12
    4804:	2b c0       	rjmp	.+86     	; 0x485c <confInt+0x26a>
    4806:	f8 01       	movw	r30, r16
    4808:	83 89       	ldd	r24, Z+19	; 0x13
    480a:	d7 01       	movw	r26, r14
    480c:	11 96       	adiw	r26, 0x01	; 1
    480e:	9c 91       	ld	r25, X
    4810:	11 97       	sbiw	r26, 0x01	; 1
    4812:	89 2b       	or	r24, r25
    4814:	83 8b       	std	Z+19, r24	; 0x13
    4816:	22 c0       	rjmp	.+68     	; 0x485c <confInt+0x26a>
    4818:	f8 01       	movw	r30, r16
    481a:	84 89       	ldd	r24, Z+20	; 0x14
    481c:	d7 01       	movw	r26, r14
    481e:	11 96       	adiw	r26, 0x01	; 1
    4820:	9c 91       	ld	r25, X
    4822:	11 97       	sbiw	r26, 0x01	; 1
    4824:	89 2b       	or	r24, r25
    4826:	84 8b       	std	Z+20, r24	; 0x14
    4828:	19 c0       	rjmp	.+50     	; 0x485c <confInt+0x26a>
    482a:	f8 01       	movw	r30, r16
    482c:	85 89       	ldd	r24, Z+21	; 0x15
    482e:	d7 01       	movw	r26, r14
    4830:	11 96       	adiw	r26, 0x01	; 1
    4832:	9c 91       	ld	r25, X
    4834:	11 97       	sbiw	r26, 0x01	; 1
    4836:	89 2b       	or	r24, r25
    4838:	85 8b       	std	Z+21, r24	; 0x15
    483a:	10 c0       	rjmp	.+32     	; 0x485c <confInt+0x26a>
    483c:	f8 01       	movw	r30, r16
    483e:	86 89       	ldd	r24, Z+22	; 0x16
    4840:	d7 01       	movw	r26, r14
    4842:	11 96       	adiw	r26, 0x01	; 1
    4844:	9c 91       	ld	r25, X
    4846:	11 97       	sbiw	r26, 0x01	; 1
    4848:	89 2b       	or	r24, r25
    484a:	86 8b       	std	Z+22, r24	; 0x16
    484c:	07 c0       	rjmp	.+14     	; 0x485c <confInt+0x26a>
    484e:	f8 01       	movw	r30, r16
    4850:	87 89       	ldd	r24, Z+23	; 0x17
    4852:	d7 01       	movw	r26, r14
    4854:	11 96       	adiw	r26, 0x01	; 1
    4856:	9c 91       	ld	r25, X
    4858:	89 2b       	or	r24, r25
    485a:	87 8b       	std	Z+23, r24	; 0x17
    485c:	f8 01       	movw	r30, r16
    485e:	81 85       	ldd	r24, Z+9	; 0x09
    4860:	8c 60       	ori	r24, 0x0C	; 12
    4862:	81 87       	std	Z+9, r24	; 0x09
    4864:	d7 01       	movw	r26, r14
    4866:	8c 91       	ld	r24, X
    4868:	83 87       	std	Z+11, r24	; 0x0b
    486a:	89 81       	ldd	r24, Y+1	; 0x01
    486c:	9a 81       	ldd	r25, Y+2	; 0x02
    486e:	0b c0       	rjmp	.+22     	; 0x4886 <confInt+0x294>
    4870:	8f ef       	ldi	r24, 0xFF	; 255
    4872:	9f ef       	ldi	r25, 0xFF	; 255
    4874:	08 c0       	rjmp	.+16     	; 0x4886 <confInt+0x294>
    4876:	8a ef       	ldi	r24, 0xFA	; 250
    4878:	9f ef       	ldi	r25, 0xFF	; 255
    487a:	05 c0       	rjmp	.+10     	; 0x4886 <confInt+0x294>
    487c:	89 ef       	ldi	r24, 0xF9	; 249
    487e:	9f ef       	ldi	r25, 0xFF	; 255
    4880:	02 c0       	rjmp	.+4      	; 0x4886 <confInt+0x294>
    4882:	8e ef       	ldi	r24, 0xFE	; 254
    4884:	9f ef       	ldi	r25, 0xFF	; 255
    4886:	0f 90       	pop	r0
    4888:	0f 90       	pop	r0
    488a:	df 91       	pop	r29
    488c:	cf 91       	pop	r28
    488e:	1f 91       	pop	r17
    4890:	0f 91       	pop	r16
    4892:	ff 90       	pop	r15
    4894:	ef 90       	pop	r14
    4896:	df 90       	pop	r13
    4898:	cf 90       	pop	r12
    489a:	08 95       	ret

0000489c <confPort>:
    489c:	fc 01       	movw	r30, r24
    489e:	db 01       	movw	r26, r22
    48a0:	11 96       	adiw	r26, 0x01	; 1
    48a2:	8c 91       	ld	r24, X
    48a4:	11 97       	sbiw	r26, 0x01	; 1
    48a6:	88 23       	and	r24, r24
    48a8:	09 f1       	breq	.+66     	; 0x48ec <confPort+0x50>
    48aa:	12 96       	adiw	r26, 0x02	; 2
    48ac:	9c 91       	ld	r25, X
    48ae:	12 97       	sbiw	r26, 0x02	; 2
    48b0:	99 23       	and	r25, r25
    48b2:	11 f0       	breq	.+4      	; 0x48b8 <confPort+0x1c>
    48b4:	86 83       	std	Z+6, r24	; 0x06
    48b6:	01 c0       	rjmp	.+2      	; 0x48ba <confPort+0x1e>
    48b8:	85 83       	std	Z+5, r24	; 0x05
    48ba:	11 96       	adiw	r26, 0x01	; 1
    48bc:	8c 91       	ld	r24, X
    48be:	11 97       	sbiw	r26, 0x01	; 1
    48c0:	81 83       	std	Z+1, r24	; 0x01
    48c2:	11 96       	adiw	r26, 0x01	; 1
    48c4:	8c 91       	ld	r24, X
    48c6:	11 97       	sbiw	r26, 0x01	; 1
    48c8:	80 93 b0 00 	sts	0x00B0, r24
    48cc:	14 96       	adiw	r26, 0x04	; 4
    48ce:	8c 91       	ld	r24, X
    48d0:	14 97       	sbiw	r26, 0x04	; 4
    48d2:	81 30       	cpi	r24, 0x01	; 1
    48d4:	29 f0       	breq	.+10     	; 0x48e0 <confPort+0x44>
    48d6:	81 30       	cpi	r24, 0x01	; 1
    48d8:	40 f0       	brcs	.+16     	; 0x48ea <confPort+0x4e>
    48da:	82 30       	cpi	r24, 0x02	; 2
    48dc:	31 f4       	brne	.+12     	; 0x48ea <confPort+0x4e>
    48de:	02 c0       	rjmp	.+4      	; 0x48e4 <confPort+0x48>
    48e0:	80 e2       	ldi	r24, 0x20	; 32
    48e2:	01 c0       	rjmp	.+2      	; 0x48e6 <confPort+0x4a>
    48e4:	88 e2       	ldi	r24, 0x28	; 40
    48e6:	80 8b       	std	Z+16, r24	; 0x10
    48e8:	01 c0       	rjmp	.+2      	; 0x48ec <confPort+0x50>
    48ea:	10 8a       	std	Z+16, r1	; 0x10
    48ec:	8c 91       	ld	r24, X
    48ee:	88 23       	and	r24, r24
    48f0:	c1 f0       	breq	.+48     	; 0x4922 <confPort+0x86>
    48f2:	11 86       	std	Z+9, r1	; 0x09
    48f4:	8c 91       	ld	r24, X
    48f6:	82 83       	std	Z+2, r24	; 0x02
    48f8:	8c 91       	ld	r24, X
    48fa:	80 93 b0 00 	sts	0x00B0, r24
    48fe:	13 96       	adiw	r26, 0x03	; 3
    4900:	8c 91       	ld	r24, X
    4902:	13 97       	sbiw	r26, 0x03	; 3
    4904:	84 30       	cpi	r24, 0x04	; 4
    4906:	29 f0       	breq	.+10     	; 0x4912 <confPort+0x76>
    4908:	85 30       	cpi	r24, 0x05	; 5
    490a:	29 f0       	breq	.+10     	; 0x4916 <confPort+0x7a>
    490c:	83 30       	cpi	r24, 0x03	; 3
    490e:	41 f4       	brne	.+16     	; 0x4920 <confPort+0x84>
    4910:	04 c0       	rjmp	.+8      	; 0x491a <confPort+0x7e>
    4912:	80 e1       	ldi	r24, 0x10	; 16
    4914:	03 c0       	rjmp	.+6      	; 0x491c <confPort+0x80>
    4916:	88 e1       	ldi	r24, 0x18	; 24
    4918:	01 c0       	rjmp	.+2      	; 0x491c <confPort+0x80>
    491a:	88 e0       	ldi	r24, 0x08	; 8
    491c:	80 8b       	std	Z+16, r24	; 0x10
    491e:	08 95       	ret
    4920:	10 8a       	std	Z+16, r1	; 0x10
    4922:	08 95       	ret

00004924 <__vector_66>:
    4924:	1f 92       	push	r1
    4926:	0f 92       	push	r0
    4928:	0f b6       	in	r0, 0x3f	; 63
    492a:	0f 92       	push	r0
    492c:	08 b6       	in	r0, 0x38	; 56
    492e:	0f 92       	push	r0
    4930:	09 b6       	in	r0, 0x39	; 57
    4932:	0f 92       	push	r0
    4934:	0b b6       	in	r0, 0x3b	; 59
    4936:	0f 92       	push	r0
    4938:	11 24       	eor	r1, r1
    493a:	2f 93       	push	r18
    493c:	3f 93       	push	r19
    493e:	4f 93       	push	r20
    4940:	5f 93       	push	r21
    4942:	6f 93       	push	r22
    4944:	7f 93       	push	r23
    4946:	8f 93       	push	r24
    4948:	9f 93       	push	r25
    494a:	af 93       	push	r26
    494c:	bf 93       	push	r27
    494e:	ef 93       	push	r30
    4950:	ff 93       	push	r31
    4952:	80 e0       	ldi	r24, 0x00	; 0
    4954:	0e 94 aa 22 	call	0x4554	; 0x4554 <findGpioIntElement>
    4958:	dc 01       	movw	r26, r24
    495a:	00 97       	sbiw	r24, 0x00	; 0
    495c:	51 f0       	breq	.+20     	; 0x4972 <__vector_66+0x4e>
    495e:	12 96       	adiw	r26, 0x02	; 2
    4960:	ed 91       	ld	r30, X+
    4962:	fc 91       	ld	r31, X
    4964:	13 97       	sbiw	r26, 0x03	; 3
    4966:	30 97       	sbiw	r30, 0x00	; 0
    4968:	21 f0       	breq	.+8      	; 0x4972 <__vector_66+0x4e>
    496a:	80 e0       	ldi	r24, 0x00	; 0
    496c:	11 96       	adiw	r26, 0x01	; 1
    496e:	6c 91       	ld	r22, X
    4970:	19 95       	eicall
    4972:	ff 91       	pop	r31
    4974:	ef 91       	pop	r30
    4976:	bf 91       	pop	r27
    4978:	af 91       	pop	r26
    497a:	9f 91       	pop	r25
    497c:	8f 91       	pop	r24
    497e:	7f 91       	pop	r23
    4980:	6f 91       	pop	r22
    4982:	5f 91       	pop	r21
    4984:	4f 91       	pop	r20
    4986:	3f 91       	pop	r19
    4988:	2f 91       	pop	r18
    498a:	0f 90       	pop	r0
    498c:	0b be       	out	0x3b, r0	; 59
    498e:	0f 90       	pop	r0
    4990:	09 be       	out	0x39, r0	; 57
    4992:	0f 90       	pop	r0
    4994:	08 be       	out	0x38, r0	; 56
    4996:	0f 90       	pop	r0
    4998:	0f be       	out	0x3f, r0	; 63
    499a:	0f 90       	pop	r0
    499c:	1f 90       	pop	r1
    499e:	18 95       	reti

000049a0 <__vector_67>:
    49a0:	1f 92       	push	r1
    49a2:	0f 92       	push	r0
    49a4:	0f b6       	in	r0, 0x3f	; 63
    49a6:	0f 92       	push	r0
    49a8:	08 b6       	in	r0, 0x38	; 56
    49aa:	0f 92       	push	r0
    49ac:	09 b6       	in	r0, 0x39	; 57
    49ae:	0f 92       	push	r0
    49b0:	0b b6       	in	r0, 0x3b	; 59
    49b2:	0f 92       	push	r0
    49b4:	11 24       	eor	r1, r1
    49b6:	2f 93       	push	r18
    49b8:	3f 93       	push	r19
    49ba:	4f 93       	push	r20
    49bc:	5f 93       	push	r21
    49be:	6f 93       	push	r22
    49c0:	7f 93       	push	r23
    49c2:	8f 93       	push	r24
    49c4:	9f 93       	push	r25
    49c6:	af 93       	push	r26
    49c8:	bf 93       	push	r27
    49ca:	ef 93       	push	r30
    49cc:	ff 93       	push	r31
    49ce:	81 e0       	ldi	r24, 0x01	; 1
    49d0:	0e 94 aa 22 	call	0x4554	; 0x4554 <findGpioIntElement>
    49d4:	dc 01       	movw	r26, r24
    49d6:	00 97       	sbiw	r24, 0x00	; 0
    49d8:	51 f0       	breq	.+20     	; 0x49ee <__vector_67+0x4e>
    49da:	12 96       	adiw	r26, 0x02	; 2
    49dc:	ed 91       	ld	r30, X+
    49de:	fc 91       	ld	r31, X
    49e0:	13 97       	sbiw	r26, 0x03	; 3
    49e2:	30 97       	sbiw	r30, 0x00	; 0
    49e4:	21 f0       	breq	.+8      	; 0x49ee <__vector_67+0x4e>
    49e6:	80 e0       	ldi	r24, 0x00	; 0
    49e8:	11 96       	adiw	r26, 0x01	; 1
    49ea:	6c 91       	ld	r22, X
    49ec:	19 95       	eicall
    49ee:	ff 91       	pop	r31
    49f0:	ef 91       	pop	r30
    49f2:	bf 91       	pop	r27
    49f4:	af 91       	pop	r26
    49f6:	9f 91       	pop	r25
    49f8:	8f 91       	pop	r24
    49fa:	7f 91       	pop	r23
    49fc:	6f 91       	pop	r22
    49fe:	5f 91       	pop	r21
    4a00:	4f 91       	pop	r20
    4a02:	3f 91       	pop	r19
    4a04:	2f 91       	pop	r18
    4a06:	0f 90       	pop	r0
    4a08:	0b be       	out	0x3b, r0	; 59
    4a0a:	0f 90       	pop	r0
    4a0c:	09 be       	out	0x39, r0	; 57
    4a0e:	0f 90       	pop	r0
    4a10:	08 be       	out	0x38, r0	; 56
    4a12:	0f 90       	pop	r0
    4a14:	0f be       	out	0x3f, r0	; 63
    4a16:	0f 90       	pop	r0
    4a18:	1f 90       	pop	r1
    4a1a:	18 95       	reti

00004a1c <__vector_34>:
    4a1c:	1f 92       	push	r1
    4a1e:	0f 92       	push	r0
    4a20:	0f b6       	in	r0, 0x3f	; 63
    4a22:	0f 92       	push	r0
    4a24:	08 b6       	in	r0, 0x38	; 56
    4a26:	0f 92       	push	r0
    4a28:	09 b6       	in	r0, 0x39	; 57
    4a2a:	0f 92       	push	r0
    4a2c:	0b b6       	in	r0, 0x3b	; 59
    4a2e:	0f 92       	push	r0
    4a30:	11 24       	eor	r1, r1
    4a32:	2f 93       	push	r18
    4a34:	3f 93       	push	r19
    4a36:	4f 93       	push	r20
    4a38:	5f 93       	push	r21
    4a3a:	6f 93       	push	r22
    4a3c:	7f 93       	push	r23
    4a3e:	8f 93       	push	r24
    4a40:	9f 93       	push	r25
    4a42:	af 93       	push	r26
    4a44:	bf 93       	push	r27
    4a46:	ef 93       	push	r30
    4a48:	ff 93       	push	r31
    4a4a:	82 e0       	ldi	r24, 0x02	; 2
    4a4c:	0e 94 aa 22 	call	0x4554	; 0x4554 <findGpioIntElement>
    4a50:	dc 01       	movw	r26, r24
    4a52:	00 97       	sbiw	r24, 0x00	; 0
    4a54:	51 f0       	breq	.+20     	; 0x4a6a <__vector_34+0x4e>
    4a56:	12 96       	adiw	r26, 0x02	; 2
    4a58:	ed 91       	ld	r30, X+
    4a5a:	fc 91       	ld	r31, X
    4a5c:	13 97       	sbiw	r26, 0x03	; 3
    4a5e:	30 97       	sbiw	r30, 0x00	; 0
    4a60:	21 f0       	breq	.+8      	; 0x4a6a <__vector_34+0x4e>
    4a62:	81 e0       	ldi	r24, 0x01	; 1
    4a64:	11 96       	adiw	r26, 0x01	; 1
    4a66:	6c 91       	ld	r22, X
    4a68:	19 95       	eicall
    4a6a:	ff 91       	pop	r31
    4a6c:	ef 91       	pop	r30
    4a6e:	bf 91       	pop	r27
    4a70:	af 91       	pop	r26
    4a72:	9f 91       	pop	r25
    4a74:	8f 91       	pop	r24
    4a76:	7f 91       	pop	r23
    4a78:	6f 91       	pop	r22
    4a7a:	5f 91       	pop	r21
    4a7c:	4f 91       	pop	r20
    4a7e:	3f 91       	pop	r19
    4a80:	2f 91       	pop	r18
    4a82:	0f 90       	pop	r0
    4a84:	0b be       	out	0x3b, r0	; 59
    4a86:	0f 90       	pop	r0
    4a88:	09 be       	out	0x39, r0	; 57
    4a8a:	0f 90       	pop	r0
    4a8c:	08 be       	out	0x38, r0	; 56
    4a8e:	0f 90       	pop	r0
    4a90:	0f be       	out	0x3f, r0	; 63
    4a92:	0f 90       	pop	r0
    4a94:	1f 90       	pop	r1
    4a96:	18 95       	reti

00004a98 <__vector_35>:
    4a98:	1f 92       	push	r1
    4a9a:	0f 92       	push	r0
    4a9c:	0f b6       	in	r0, 0x3f	; 63
    4a9e:	0f 92       	push	r0
    4aa0:	08 b6       	in	r0, 0x38	; 56
    4aa2:	0f 92       	push	r0
    4aa4:	09 b6       	in	r0, 0x39	; 57
    4aa6:	0f 92       	push	r0
    4aa8:	0b b6       	in	r0, 0x3b	; 59
    4aaa:	0f 92       	push	r0
    4aac:	11 24       	eor	r1, r1
    4aae:	2f 93       	push	r18
    4ab0:	3f 93       	push	r19
    4ab2:	4f 93       	push	r20
    4ab4:	5f 93       	push	r21
    4ab6:	6f 93       	push	r22
    4ab8:	7f 93       	push	r23
    4aba:	8f 93       	push	r24
    4abc:	9f 93       	push	r25
    4abe:	af 93       	push	r26
    4ac0:	bf 93       	push	r27
    4ac2:	ef 93       	push	r30
    4ac4:	ff 93       	push	r31
    4ac6:	83 e0       	ldi	r24, 0x03	; 3
    4ac8:	0e 94 aa 22 	call	0x4554	; 0x4554 <findGpioIntElement>
    4acc:	dc 01       	movw	r26, r24
    4ace:	00 97       	sbiw	r24, 0x00	; 0
    4ad0:	51 f0       	breq	.+20     	; 0x4ae6 <__vector_35+0x4e>
    4ad2:	12 96       	adiw	r26, 0x02	; 2
    4ad4:	ed 91       	ld	r30, X+
    4ad6:	fc 91       	ld	r31, X
    4ad8:	13 97       	sbiw	r26, 0x03	; 3
    4ada:	30 97       	sbiw	r30, 0x00	; 0
    4adc:	21 f0       	breq	.+8      	; 0x4ae6 <__vector_35+0x4e>
    4ade:	81 e0       	ldi	r24, 0x01	; 1
    4ae0:	11 96       	adiw	r26, 0x01	; 1
    4ae2:	6c 91       	ld	r22, X
    4ae4:	19 95       	eicall
    4ae6:	ff 91       	pop	r31
    4ae8:	ef 91       	pop	r30
    4aea:	bf 91       	pop	r27
    4aec:	af 91       	pop	r26
    4aee:	9f 91       	pop	r25
    4af0:	8f 91       	pop	r24
    4af2:	7f 91       	pop	r23
    4af4:	6f 91       	pop	r22
    4af6:	5f 91       	pop	r21
    4af8:	4f 91       	pop	r20
    4afa:	3f 91       	pop	r19
    4afc:	2f 91       	pop	r18
    4afe:	0f 90       	pop	r0
    4b00:	0b be       	out	0x3b, r0	; 59
    4b02:	0f 90       	pop	r0
    4b04:	09 be       	out	0x39, r0	; 57
    4b06:	0f 90       	pop	r0
    4b08:	08 be       	out	0x38, r0	; 56
    4b0a:	0f 90       	pop	r0
    4b0c:	0f be       	out	0x3f, r0	; 63
    4b0e:	0f 90       	pop	r0
    4b10:	1f 90       	pop	r1
    4b12:	18 95       	reti

00004b14 <__vector_2>:
    4b14:	1f 92       	push	r1
    4b16:	0f 92       	push	r0
    4b18:	0f b6       	in	r0, 0x3f	; 63
    4b1a:	0f 92       	push	r0
    4b1c:	08 b6       	in	r0, 0x38	; 56
    4b1e:	0f 92       	push	r0
    4b20:	09 b6       	in	r0, 0x39	; 57
    4b22:	0f 92       	push	r0
    4b24:	0b b6       	in	r0, 0x3b	; 59
    4b26:	0f 92       	push	r0
    4b28:	11 24       	eor	r1, r1
    4b2a:	2f 93       	push	r18
    4b2c:	3f 93       	push	r19
    4b2e:	4f 93       	push	r20
    4b30:	5f 93       	push	r21
    4b32:	6f 93       	push	r22
    4b34:	7f 93       	push	r23
    4b36:	8f 93       	push	r24
    4b38:	9f 93       	push	r25
    4b3a:	af 93       	push	r26
    4b3c:	bf 93       	push	r27
    4b3e:	ef 93       	push	r30
    4b40:	ff 93       	push	r31
    4b42:	84 e0       	ldi	r24, 0x04	; 4
    4b44:	0e 94 aa 22 	call	0x4554	; 0x4554 <findGpioIntElement>
    4b48:	dc 01       	movw	r26, r24
    4b4a:	00 97       	sbiw	r24, 0x00	; 0
    4b4c:	51 f0       	breq	.+20     	; 0x4b62 <__vector_2+0x4e>
    4b4e:	12 96       	adiw	r26, 0x02	; 2
    4b50:	ed 91       	ld	r30, X+
    4b52:	fc 91       	ld	r31, X
    4b54:	13 97       	sbiw	r26, 0x03	; 3
    4b56:	30 97       	sbiw	r30, 0x00	; 0
    4b58:	21 f0       	breq	.+8      	; 0x4b62 <__vector_2+0x4e>
    4b5a:	82 e0       	ldi	r24, 0x02	; 2
    4b5c:	11 96       	adiw	r26, 0x01	; 1
    4b5e:	6c 91       	ld	r22, X
    4b60:	19 95       	eicall
    4b62:	ff 91       	pop	r31
    4b64:	ef 91       	pop	r30
    4b66:	bf 91       	pop	r27
    4b68:	af 91       	pop	r26
    4b6a:	9f 91       	pop	r25
    4b6c:	8f 91       	pop	r24
    4b6e:	7f 91       	pop	r23
    4b70:	6f 91       	pop	r22
    4b72:	5f 91       	pop	r21
    4b74:	4f 91       	pop	r20
    4b76:	3f 91       	pop	r19
    4b78:	2f 91       	pop	r18
    4b7a:	0f 90       	pop	r0
    4b7c:	0b be       	out	0x3b, r0	; 59
    4b7e:	0f 90       	pop	r0
    4b80:	09 be       	out	0x39, r0	; 57
    4b82:	0f 90       	pop	r0
    4b84:	08 be       	out	0x38, r0	; 56
    4b86:	0f 90       	pop	r0
    4b88:	0f be       	out	0x3f, r0	; 63
    4b8a:	0f 90       	pop	r0
    4b8c:	1f 90       	pop	r1
    4b8e:	18 95       	reti

00004b90 <__vector_3>:
    4b90:	1f 92       	push	r1
    4b92:	0f 92       	push	r0
    4b94:	0f b6       	in	r0, 0x3f	; 63
    4b96:	0f 92       	push	r0
    4b98:	08 b6       	in	r0, 0x38	; 56
    4b9a:	0f 92       	push	r0
    4b9c:	09 b6       	in	r0, 0x39	; 57
    4b9e:	0f 92       	push	r0
    4ba0:	0b b6       	in	r0, 0x3b	; 59
    4ba2:	0f 92       	push	r0
    4ba4:	11 24       	eor	r1, r1
    4ba6:	2f 93       	push	r18
    4ba8:	3f 93       	push	r19
    4baa:	4f 93       	push	r20
    4bac:	5f 93       	push	r21
    4bae:	6f 93       	push	r22
    4bb0:	7f 93       	push	r23
    4bb2:	8f 93       	push	r24
    4bb4:	9f 93       	push	r25
    4bb6:	af 93       	push	r26
    4bb8:	bf 93       	push	r27
    4bba:	ef 93       	push	r30
    4bbc:	ff 93       	push	r31
    4bbe:	85 e0       	ldi	r24, 0x05	; 5
    4bc0:	0e 94 aa 22 	call	0x4554	; 0x4554 <findGpioIntElement>
    4bc4:	dc 01       	movw	r26, r24
    4bc6:	00 97       	sbiw	r24, 0x00	; 0
    4bc8:	51 f0       	breq	.+20     	; 0x4bde <__vector_3+0x4e>
    4bca:	12 96       	adiw	r26, 0x02	; 2
    4bcc:	ed 91       	ld	r30, X+
    4bce:	fc 91       	ld	r31, X
    4bd0:	13 97       	sbiw	r26, 0x03	; 3
    4bd2:	30 97       	sbiw	r30, 0x00	; 0
    4bd4:	21 f0       	breq	.+8      	; 0x4bde <__vector_3+0x4e>
    4bd6:	82 e0       	ldi	r24, 0x02	; 2
    4bd8:	11 96       	adiw	r26, 0x01	; 1
    4bda:	6c 91       	ld	r22, X
    4bdc:	19 95       	eicall
    4bde:	ff 91       	pop	r31
    4be0:	ef 91       	pop	r30
    4be2:	bf 91       	pop	r27
    4be4:	af 91       	pop	r26
    4be6:	9f 91       	pop	r25
    4be8:	8f 91       	pop	r24
    4bea:	7f 91       	pop	r23
    4bec:	6f 91       	pop	r22
    4bee:	5f 91       	pop	r21
    4bf0:	4f 91       	pop	r20
    4bf2:	3f 91       	pop	r19
    4bf4:	2f 91       	pop	r18
    4bf6:	0f 90       	pop	r0
    4bf8:	0b be       	out	0x3b, r0	; 59
    4bfa:	0f 90       	pop	r0
    4bfc:	09 be       	out	0x39, r0	; 57
    4bfe:	0f 90       	pop	r0
    4c00:	08 be       	out	0x38, r0	; 56
    4c02:	0f 90       	pop	r0
    4c04:	0f be       	out	0x3f, r0	; 63
    4c06:	0f 90       	pop	r0
    4c08:	1f 90       	pop	r1
    4c0a:	18 95       	reti

00004c0c <__vector_64>:
    4c0c:	1f 92       	push	r1
    4c0e:	0f 92       	push	r0
    4c10:	0f b6       	in	r0, 0x3f	; 63
    4c12:	0f 92       	push	r0
    4c14:	08 b6       	in	r0, 0x38	; 56
    4c16:	0f 92       	push	r0
    4c18:	09 b6       	in	r0, 0x39	; 57
    4c1a:	0f 92       	push	r0
    4c1c:	0b b6       	in	r0, 0x3b	; 59
    4c1e:	0f 92       	push	r0
    4c20:	11 24       	eor	r1, r1
    4c22:	2f 93       	push	r18
    4c24:	3f 93       	push	r19
    4c26:	4f 93       	push	r20
    4c28:	5f 93       	push	r21
    4c2a:	6f 93       	push	r22
    4c2c:	7f 93       	push	r23
    4c2e:	8f 93       	push	r24
    4c30:	9f 93       	push	r25
    4c32:	af 93       	push	r26
    4c34:	bf 93       	push	r27
    4c36:	ef 93       	push	r30
    4c38:	ff 93       	push	r31
    4c3a:	86 e0       	ldi	r24, 0x06	; 6
    4c3c:	0e 94 aa 22 	call	0x4554	; 0x4554 <findGpioIntElement>
    4c40:	dc 01       	movw	r26, r24
    4c42:	00 97       	sbiw	r24, 0x00	; 0
    4c44:	51 f0       	breq	.+20     	; 0x4c5a <__vector_64+0x4e>
    4c46:	12 96       	adiw	r26, 0x02	; 2
    4c48:	ed 91       	ld	r30, X+
    4c4a:	fc 91       	ld	r31, X
    4c4c:	13 97       	sbiw	r26, 0x03	; 3
    4c4e:	30 97       	sbiw	r30, 0x00	; 0
    4c50:	21 f0       	breq	.+8      	; 0x4c5a <__vector_64+0x4e>
    4c52:	83 e0       	ldi	r24, 0x03	; 3
    4c54:	11 96       	adiw	r26, 0x01	; 1
    4c56:	6c 91       	ld	r22, X
    4c58:	19 95       	eicall
    4c5a:	ff 91       	pop	r31
    4c5c:	ef 91       	pop	r30
    4c5e:	bf 91       	pop	r27
    4c60:	af 91       	pop	r26
    4c62:	9f 91       	pop	r25
    4c64:	8f 91       	pop	r24
    4c66:	7f 91       	pop	r23
    4c68:	6f 91       	pop	r22
    4c6a:	5f 91       	pop	r21
    4c6c:	4f 91       	pop	r20
    4c6e:	3f 91       	pop	r19
    4c70:	2f 91       	pop	r18
    4c72:	0f 90       	pop	r0
    4c74:	0b be       	out	0x3b, r0	; 59
    4c76:	0f 90       	pop	r0
    4c78:	09 be       	out	0x39, r0	; 57
    4c7a:	0f 90       	pop	r0
    4c7c:	08 be       	out	0x38, r0	; 56
    4c7e:	0f 90       	pop	r0
    4c80:	0f be       	out	0x3f, r0	; 63
    4c82:	0f 90       	pop	r0
    4c84:	1f 90       	pop	r1
    4c86:	18 95       	reti

00004c88 <__vector_65>:
    4c88:	1f 92       	push	r1
    4c8a:	0f 92       	push	r0
    4c8c:	0f b6       	in	r0, 0x3f	; 63
    4c8e:	0f 92       	push	r0
    4c90:	08 b6       	in	r0, 0x38	; 56
    4c92:	0f 92       	push	r0
    4c94:	09 b6       	in	r0, 0x39	; 57
    4c96:	0f 92       	push	r0
    4c98:	0b b6       	in	r0, 0x3b	; 59
    4c9a:	0f 92       	push	r0
    4c9c:	11 24       	eor	r1, r1
    4c9e:	2f 93       	push	r18
    4ca0:	3f 93       	push	r19
    4ca2:	4f 93       	push	r20
    4ca4:	5f 93       	push	r21
    4ca6:	6f 93       	push	r22
    4ca8:	7f 93       	push	r23
    4caa:	8f 93       	push	r24
    4cac:	9f 93       	push	r25
    4cae:	af 93       	push	r26
    4cb0:	bf 93       	push	r27
    4cb2:	ef 93       	push	r30
    4cb4:	ff 93       	push	r31
    4cb6:	87 e0       	ldi	r24, 0x07	; 7
    4cb8:	0e 94 aa 22 	call	0x4554	; 0x4554 <findGpioIntElement>
    4cbc:	dc 01       	movw	r26, r24
    4cbe:	00 97       	sbiw	r24, 0x00	; 0
    4cc0:	51 f0       	breq	.+20     	; 0x4cd6 <__vector_65+0x4e>
    4cc2:	12 96       	adiw	r26, 0x02	; 2
    4cc4:	ed 91       	ld	r30, X+
    4cc6:	fc 91       	ld	r31, X
    4cc8:	13 97       	sbiw	r26, 0x03	; 3
    4cca:	30 97       	sbiw	r30, 0x00	; 0
    4ccc:	21 f0       	breq	.+8      	; 0x4cd6 <__vector_65+0x4e>
    4cce:	83 e0       	ldi	r24, 0x03	; 3
    4cd0:	11 96       	adiw	r26, 0x01	; 1
    4cd2:	6c 91       	ld	r22, X
    4cd4:	19 95       	eicall
    4cd6:	ff 91       	pop	r31
    4cd8:	ef 91       	pop	r30
    4cda:	bf 91       	pop	r27
    4cdc:	af 91       	pop	r26
    4cde:	9f 91       	pop	r25
    4ce0:	8f 91       	pop	r24
    4ce2:	7f 91       	pop	r23
    4ce4:	6f 91       	pop	r22
    4ce6:	5f 91       	pop	r21
    4ce8:	4f 91       	pop	r20
    4cea:	3f 91       	pop	r19
    4cec:	2f 91       	pop	r18
    4cee:	0f 90       	pop	r0
    4cf0:	0b be       	out	0x3b, r0	; 59
    4cf2:	0f 90       	pop	r0
    4cf4:	09 be       	out	0x39, r0	; 57
    4cf6:	0f 90       	pop	r0
    4cf8:	08 be       	out	0x38, r0	; 56
    4cfa:	0f 90       	pop	r0
    4cfc:	0f be       	out	0x3f, r0	; 63
    4cfe:	0f 90       	pop	r0
    4d00:	1f 90       	pop	r1
    4d02:	18 95       	reti

00004d04 <__vector_43>:
    4d04:	1f 92       	push	r1
    4d06:	0f 92       	push	r0
    4d08:	0f b6       	in	r0, 0x3f	; 63
    4d0a:	0f 92       	push	r0
    4d0c:	08 b6       	in	r0, 0x38	; 56
    4d0e:	0f 92       	push	r0
    4d10:	09 b6       	in	r0, 0x39	; 57
    4d12:	0f 92       	push	r0
    4d14:	0b b6       	in	r0, 0x3b	; 59
    4d16:	0f 92       	push	r0
    4d18:	11 24       	eor	r1, r1
    4d1a:	2f 93       	push	r18
    4d1c:	3f 93       	push	r19
    4d1e:	4f 93       	push	r20
    4d20:	5f 93       	push	r21
    4d22:	6f 93       	push	r22
    4d24:	7f 93       	push	r23
    4d26:	8f 93       	push	r24
    4d28:	9f 93       	push	r25
    4d2a:	af 93       	push	r26
    4d2c:	bf 93       	push	r27
    4d2e:	ef 93       	push	r30
    4d30:	ff 93       	push	r31
    4d32:	88 e0       	ldi	r24, 0x08	; 8
    4d34:	0e 94 aa 22 	call	0x4554	; 0x4554 <findGpioIntElement>
    4d38:	dc 01       	movw	r26, r24
    4d3a:	00 97       	sbiw	r24, 0x00	; 0
    4d3c:	51 f0       	breq	.+20     	; 0x4d52 <__vector_43+0x4e>
    4d3e:	12 96       	adiw	r26, 0x02	; 2
    4d40:	ed 91       	ld	r30, X+
    4d42:	fc 91       	ld	r31, X
    4d44:	13 97       	sbiw	r26, 0x03	; 3
    4d46:	30 97       	sbiw	r30, 0x00	; 0
    4d48:	21 f0       	breq	.+8      	; 0x4d52 <__vector_43+0x4e>
    4d4a:	84 e0       	ldi	r24, 0x04	; 4
    4d4c:	11 96       	adiw	r26, 0x01	; 1
    4d4e:	6c 91       	ld	r22, X
    4d50:	19 95       	eicall
    4d52:	ff 91       	pop	r31
    4d54:	ef 91       	pop	r30
    4d56:	bf 91       	pop	r27
    4d58:	af 91       	pop	r26
    4d5a:	9f 91       	pop	r25
    4d5c:	8f 91       	pop	r24
    4d5e:	7f 91       	pop	r23
    4d60:	6f 91       	pop	r22
    4d62:	5f 91       	pop	r21
    4d64:	4f 91       	pop	r20
    4d66:	3f 91       	pop	r19
    4d68:	2f 91       	pop	r18
    4d6a:	0f 90       	pop	r0
    4d6c:	0b be       	out	0x3b, r0	; 59
    4d6e:	0f 90       	pop	r0
    4d70:	09 be       	out	0x39, r0	; 57
    4d72:	0f 90       	pop	r0
    4d74:	08 be       	out	0x38, r0	; 56
    4d76:	0f 90       	pop	r0
    4d78:	0f be       	out	0x3f, r0	; 63
    4d7a:	0f 90       	pop	r0
    4d7c:	1f 90       	pop	r1
    4d7e:	18 95       	reti

00004d80 <__vector_44>:
    4d80:	1f 92       	push	r1
    4d82:	0f 92       	push	r0
    4d84:	0f b6       	in	r0, 0x3f	; 63
    4d86:	0f 92       	push	r0
    4d88:	08 b6       	in	r0, 0x38	; 56
    4d8a:	0f 92       	push	r0
    4d8c:	09 b6       	in	r0, 0x39	; 57
    4d8e:	0f 92       	push	r0
    4d90:	0b b6       	in	r0, 0x3b	; 59
    4d92:	0f 92       	push	r0
    4d94:	11 24       	eor	r1, r1
    4d96:	2f 93       	push	r18
    4d98:	3f 93       	push	r19
    4d9a:	4f 93       	push	r20
    4d9c:	5f 93       	push	r21
    4d9e:	6f 93       	push	r22
    4da0:	7f 93       	push	r23
    4da2:	8f 93       	push	r24
    4da4:	9f 93       	push	r25
    4da6:	af 93       	push	r26
    4da8:	bf 93       	push	r27
    4daa:	ef 93       	push	r30
    4dac:	ff 93       	push	r31
    4dae:	89 e0       	ldi	r24, 0x09	; 9
    4db0:	0e 94 aa 22 	call	0x4554	; 0x4554 <findGpioIntElement>
    4db4:	dc 01       	movw	r26, r24
    4db6:	00 97       	sbiw	r24, 0x00	; 0
    4db8:	51 f0       	breq	.+20     	; 0x4dce <__vector_44+0x4e>
    4dba:	12 96       	adiw	r26, 0x02	; 2
    4dbc:	ed 91       	ld	r30, X+
    4dbe:	fc 91       	ld	r31, X
    4dc0:	13 97       	sbiw	r26, 0x03	; 3
    4dc2:	30 97       	sbiw	r30, 0x00	; 0
    4dc4:	21 f0       	breq	.+8      	; 0x4dce <__vector_44+0x4e>
    4dc6:	84 e0       	ldi	r24, 0x04	; 4
    4dc8:	11 96       	adiw	r26, 0x01	; 1
    4dca:	6c 91       	ld	r22, X
    4dcc:	19 95       	eicall
    4dce:	ff 91       	pop	r31
    4dd0:	ef 91       	pop	r30
    4dd2:	bf 91       	pop	r27
    4dd4:	af 91       	pop	r26
    4dd6:	9f 91       	pop	r25
    4dd8:	8f 91       	pop	r24
    4dda:	7f 91       	pop	r23
    4ddc:	6f 91       	pop	r22
    4dde:	5f 91       	pop	r21
    4de0:	4f 91       	pop	r20
    4de2:	3f 91       	pop	r19
    4de4:	2f 91       	pop	r18
    4de6:	0f 90       	pop	r0
    4de8:	0b be       	out	0x3b, r0	; 59
    4dea:	0f 90       	pop	r0
    4dec:	09 be       	out	0x39, r0	; 57
    4dee:	0f 90       	pop	r0
    4df0:	08 be       	out	0x38, r0	; 56
    4df2:	0f 90       	pop	r0
    4df4:	0f be       	out	0x3f, r0	; 63
    4df6:	0f 90       	pop	r0
    4df8:	1f 90       	pop	r1
    4dfa:	18 95       	reti

00004dfc <__vector_104>:
    4dfc:	1f 92       	push	r1
    4dfe:	0f 92       	push	r0
    4e00:	0f b6       	in	r0, 0x3f	; 63
    4e02:	0f 92       	push	r0
    4e04:	08 b6       	in	r0, 0x38	; 56
    4e06:	0f 92       	push	r0
    4e08:	09 b6       	in	r0, 0x39	; 57
    4e0a:	0f 92       	push	r0
    4e0c:	0b b6       	in	r0, 0x3b	; 59
    4e0e:	0f 92       	push	r0
    4e10:	11 24       	eor	r1, r1
    4e12:	2f 93       	push	r18
    4e14:	3f 93       	push	r19
    4e16:	4f 93       	push	r20
    4e18:	5f 93       	push	r21
    4e1a:	6f 93       	push	r22
    4e1c:	7f 93       	push	r23
    4e1e:	8f 93       	push	r24
    4e20:	9f 93       	push	r25
    4e22:	af 93       	push	r26
    4e24:	bf 93       	push	r27
    4e26:	ef 93       	push	r30
    4e28:	ff 93       	push	r31
    4e2a:	8a e0       	ldi	r24, 0x0A	; 10
    4e2c:	0e 94 aa 22 	call	0x4554	; 0x4554 <findGpioIntElement>
    4e30:	dc 01       	movw	r26, r24
    4e32:	00 97       	sbiw	r24, 0x00	; 0
    4e34:	51 f0       	breq	.+20     	; 0x4e4a <__vector_104+0x4e>
    4e36:	12 96       	adiw	r26, 0x02	; 2
    4e38:	ed 91       	ld	r30, X+
    4e3a:	fc 91       	ld	r31, X
    4e3c:	13 97       	sbiw	r26, 0x03	; 3
    4e3e:	30 97       	sbiw	r30, 0x00	; 0
    4e40:	21 f0       	breq	.+8      	; 0x4e4a <__vector_104+0x4e>
    4e42:	85 e0       	ldi	r24, 0x05	; 5
    4e44:	11 96       	adiw	r26, 0x01	; 1
    4e46:	6c 91       	ld	r22, X
    4e48:	19 95       	eicall
    4e4a:	ff 91       	pop	r31
    4e4c:	ef 91       	pop	r30
    4e4e:	bf 91       	pop	r27
    4e50:	af 91       	pop	r26
    4e52:	9f 91       	pop	r25
    4e54:	8f 91       	pop	r24
    4e56:	7f 91       	pop	r23
    4e58:	6f 91       	pop	r22
    4e5a:	5f 91       	pop	r21
    4e5c:	4f 91       	pop	r20
    4e5e:	3f 91       	pop	r19
    4e60:	2f 91       	pop	r18
    4e62:	0f 90       	pop	r0
    4e64:	0b be       	out	0x3b, r0	; 59
    4e66:	0f 90       	pop	r0
    4e68:	09 be       	out	0x39, r0	; 57
    4e6a:	0f 90       	pop	r0
    4e6c:	08 be       	out	0x38, r0	; 56
    4e6e:	0f 90       	pop	r0
    4e70:	0f be       	out	0x3f, r0	; 63
    4e72:	0f 90       	pop	r0
    4e74:	1f 90       	pop	r1
    4e76:	18 95       	reti

00004e78 <__vector_105>:
    4e78:	1f 92       	push	r1
    4e7a:	0f 92       	push	r0
    4e7c:	0f b6       	in	r0, 0x3f	; 63
    4e7e:	0f 92       	push	r0
    4e80:	08 b6       	in	r0, 0x38	; 56
    4e82:	0f 92       	push	r0
    4e84:	09 b6       	in	r0, 0x39	; 57
    4e86:	0f 92       	push	r0
    4e88:	0b b6       	in	r0, 0x3b	; 59
    4e8a:	0f 92       	push	r0
    4e8c:	11 24       	eor	r1, r1
    4e8e:	2f 93       	push	r18
    4e90:	3f 93       	push	r19
    4e92:	4f 93       	push	r20
    4e94:	5f 93       	push	r21
    4e96:	6f 93       	push	r22
    4e98:	7f 93       	push	r23
    4e9a:	8f 93       	push	r24
    4e9c:	9f 93       	push	r25
    4e9e:	af 93       	push	r26
    4ea0:	bf 93       	push	r27
    4ea2:	ef 93       	push	r30
    4ea4:	ff 93       	push	r31
    4ea6:	8b e0       	ldi	r24, 0x0B	; 11
    4ea8:	0e 94 aa 22 	call	0x4554	; 0x4554 <findGpioIntElement>
    4eac:	dc 01       	movw	r26, r24
    4eae:	00 97       	sbiw	r24, 0x00	; 0
    4eb0:	51 f0       	breq	.+20     	; 0x4ec6 <__vector_105+0x4e>
    4eb2:	12 96       	adiw	r26, 0x02	; 2
    4eb4:	ed 91       	ld	r30, X+
    4eb6:	fc 91       	ld	r31, X
    4eb8:	13 97       	sbiw	r26, 0x03	; 3
    4eba:	30 97       	sbiw	r30, 0x00	; 0
    4ebc:	21 f0       	breq	.+8      	; 0x4ec6 <__vector_105+0x4e>
    4ebe:	85 e0       	ldi	r24, 0x05	; 5
    4ec0:	11 96       	adiw	r26, 0x01	; 1
    4ec2:	6c 91       	ld	r22, X
    4ec4:	19 95       	eicall
    4ec6:	ff 91       	pop	r31
    4ec8:	ef 91       	pop	r30
    4eca:	bf 91       	pop	r27
    4ecc:	af 91       	pop	r26
    4ece:	9f 91       	pop	r25
    4ed0:	8f 91       	pop	r24
    4ed2:	7f 91       	pop	r23
    4ed4:	6f 91       	pop	r22
    4ed6:	5f 91       	pop	r21
    4ed8:	4f 91       	pop	r20
    4eda:	3f 91       	pop	r19
    4edc:	2f 91       	pop	r18
    4ede:	0f 90       	pop	r0
    4ee0:	0b be       	out	0x3b, r0	; 59
    4ee2:	0f 90       	pop	r0
    4ee4:	09 be       	out	0x39, r0	; 57
    4ee6:	0f 90       	pop	r0
    4ee8:	08 be       	out	0x38, r0	; 56
    4eea:	0f 90       	pop	r0
    4eec:	0f be       	out	0x3f, r0	; 63
    4eee:	0f 90       	pop	r0
    4ef0:	1f 90       	pop	r1
    4ef2:	18 95       	reti

00004ef4 <__vector_96>:
    4ef4:	1f 92       	push	r1
    4ef6:	0f 92       	push	r0
    4ef8:	0f b6       	in	r0, 0x3f	; 63
    4efa:	0f 92       	push	r0
    4efc:	08 b6       	in	r0, 0x38	; 56
    4efe:	0f 92       	push	r0
    4f00:	09 b6       	in	r0, 0x39	; 57
    4f02:	0f 92       	push	r0
    4f04:	0b b6       	in	r0, 0x3b	; 59
    4f06:	0f 92       	push	r0
    4f08:	11 24       	eor	r1, r1
    4f0a:	2f 93       	push	r18
    4f0c:	3f 93       	push	r19
    4f0e:	4f 93       	push	r20
    4f10:	5f 93       	push	r21
    4f12:	6f 93       	push	r22
    4f14:	7f 93       	push	r23
    4f16:	8f 93       	push	r24
    4f18:	9f 93       	push	r25
    4f1a:	af 93       	push	r26
    4f1c:	bf 93       	push	r27
    4f1e:	ef 93       	push	r30
    4f20:	ff 93       	push	r31
    4f22:	8c e0       	ldi	r24, 0x0C	; 12
    4f24:	0e 94 aa 22 	call	0x4554	; 0x4554 <findGpioIntElement>
    4f28:	dc 01       	movw	r26, r24
    4f2a:	00 97       	sbiw	r24, 0x00	; 0
    4f2c:	51 f0       	breq	.+20     	; 0x4f42 <__vector_96+0x4e>
    4f2e:	12 96       	adiw	r26, 0x02	; 2
    4f30:	ed 91       	ld	r30, X+
    4f32:	fc 91       	ld	r31, X
    4f34:	13 97       	sbiw	r26, 0x03	; 3
    4f36:	30 97       	sbiw	r30, 0x00	; 0
    4f38:	21 f0       	breq	.+8      	; 0x4f42 <__vector_96+0x4e>
    4f3a:	86 e0       	ldi	r24, 0x06	; 6
    4f3c:	11 96       	adiw	r26, 0x01	; 1
    4f3e:	6c 91       	ld	r22, X
    4f40:	19 95       	eicall
    4f42:	ff 91       	pop	r31
    4f44:	ef 91       	pop	r30
    4f46:	bf 91       	pop	r27
    4f48:	af 91       	pop	r26
    4f4a:	9f 91       	pop	r25
    4f4c:	8f 91       	pop	r24
    4f4e:	7f 91       	pop	r23
    4f50:	6f 91       	pop	r22
    4f52:	5f 91       	pop	r21
    4f54:	4f 91       	pop	r20
    4f56:	3f 91       	pop	r19
    4f58:	2f 91       	pop	r18
    4f5a:	0f 90       	pop	r0
    4f5c:	0b be       	out	0x3b, r0	; 59
    4f5e:	0f 90       	pop	r0
    4f60:	09 be       	out	0x39, r0	; 57
    4f62:	0f 90       	pop	r0
    4f64:	08 be       	out	0x38, r0	; 56
    4f66:	0f 90       	pop	r0
    4f68:	0f be       	out	0x3f, r0	; 63
    4f6a:	0f 90       	pop	r0
    4f6c:	1f 90       	pop	r1
    4f6e:	18 95       	reti

00004f70 <__vector_97>:
    4f70:	1f 92       	push	r1
    4f72:	0f 92       	push	r0
    4f74:	0f b6       	in	r0, 0x3f	; 63
    4f76:	0f 92       	push	r0
    4f78:	08 b6       	in	r0, 0x38	; 56
    4f7a:	0f 92       	push	r0
    4f7c:	09 b6       	in	r0, 0x39	; 57
    4f7e:	0f 92       	push	r0
    4f80:	0b b6       	in	r0, 0x3b	; 59
    4f82:	0f 92       	push	r0
    4f84:	11 24       	eor	r1, r1
    4f86:	2f 93       	push	r18
    4f88:	3f 93       	push	r19
    4f8a:	4f 93       	push	r20
    4f8c:	5f 93       	push	r21
    4f8e:	6f 93       	push	r22
    4f90:	7f 93       	push	r23
    4f92:	8f 93       	push	r24
    4f94:	9f 93       	push	r25
    4f96:	af 93       	push	r26
    4f98:	bf 93       	push	r27
    4f9a:	ef 93       	push	r30
    4f9c:	ff 93       	push	r31
    4f9e:	8d e0       	ldi	r24, 0x0D	; 13
    4fa0:	0e 94 aa 22 	call	0x4554	; 0x4554 <findGpioIntElement>
    4fa4:	dc 01       	movw	r26, r24
    4fa6:	00 97       	sbiw	r24, 0x00	; 0
    4fa8:	51 f0       	breq	.+20     	; 0x4fbe <__vector_97+0x4e>
    4faa:	12 96       	adiw	r26, 0x02	; 2
    4fac:	ed 91       	ld	r30, X+
    4fae:	fc 91       	ld	r31, X
    4fb0:	13 97       	sbiw	r26, 0x03	; 3
    4fb2:	30 97       	sbiw	r30, 0x00	; 0
    4fb4:	21 f0       	breq	.+8      	; 0x4fbe <__vector_97+0x4e>
    4fb6:	86 e0       	ldi	r24, 0x06	; 6
    4fb8:	11 96       	adiw	r26, 0x01	; 1
    4fba:	6c 91       	ld	r22, X
    4fbc:	19 95       	eicall
    4fbe:	ff 91       	pop	r31
    4fc0:	ef 91       	pop	r30
    4fc2:	bf 91       	pop	r27
    4fc4:	af 91       	pop	r26
    4fc6:	9f 91       	pop	r25
    4fc8:	8f 91       	pop	r24
    4fca:	7f 91       	pop	r23
    4fcc:	6f 91       	pop	r22
    4fce:	5f 91       	pop	r21
    4fd0:	4f 91       	pop	r20
    4fd2:	3f 91       	pop	r19
    4fd4:	2f 91       	pop	r18
    4fd6:	0f 90       	pop	r0
    4fd8:	0b be       	out	0x3b, r0	; 59
    4fda:	0f 90       	pop	r0
    4fdc:	09 be       	out	0x39, r0	; 57
    4fde:	0f 90       	pop	r0
    4fe0:	08 be       	out	0x38, r0	; 56
    4fe2:	0f 90       	pop	r0
    4fe4:	0f be       	out	0x3f, r0	; 63
    4fe6:	0f 90       	pop	r0
    4fe8:	1f 90       	pop	r1
    4fea:	18 95       	reti

00004fec <__vector_98>:
    4fec:	1f 92       	push	r1
    4fee:	0f 92       	push	r0
    4ff0:	0f b6       	in	r0, 0x3f	; 63
    4ff2:	0f 92       	push	r0
    4ff4:	08 b6       	in	r0, 0x38	; 56
    4ff6:	0f 92       	push	r0
    4ff8:	09 b6       	in	r0, 0x39	; 57
    4ffa:	0f 92       	push	r0
    4ffc:	0b b6       	in	r0, 0x3b	; 59
    4ffe:	0f 92       	push	r0
    5000:	11 24       	eor	r1, r1
    5002:	2f 93       	push	r18
    5004:	3f 93       	push	r19
    5006:	4f 93       	push	r20
    5008:	5f 93       	push	r21
    500a:	6f 93       	push	r22
    500c:	7f 93       	push	r23
    500e:	8f 93       	push	r24
    5010:	9f 93       	push	r25
    5012:	af 93       	push	r26
    5014:	bf 93       	push	r27
    5016:	ef 93       	push	r30
    5018:	ff 93       	push	r31
    501a:	8e e0       	ldi	r24, 0x0E	; 14
    501c:	0e 94 aa 22 	call	0x4554	; 0x4554 <findGpioIntElement>
    5020:	dc 01       	movw	r26, r24
    5022:	00 97       	sbiw	r24, 0x00	; 0
    5024:	51 f0       	breq	.+20     	; 0x503a <__vector_98+0x4e>
    5026:	12 96       	adiw	r26, 0x02	; 2
    5028:	ed 91       	ld	r30, X+
    502a:	fc 91       	ld	r31, X
    502c:	13 97       	sbiw	r26, 0x03	; 3
    502e:	30 97       	sbiw	r30, 0x00	; 0
    5030:	21 f0       	breq	.+8      	; 0x503a <__vector_98+0x4e>
    5032:	87 e0       	ldi	r24, 0x07	; 7
    5034:	11 96       	adiw	r26, 0x01	; 1
    5036:	6c 91       	ld	r22, X
    5038:	19 95       	eicall
    503a:	ff 91       	pop	r31
    503c:	ef 91       	pop	r30
    503e:	bf 91       	pop	r27
    5040:	af 91       	pop	r26
    5042:	9f 91       	pop	r25
    5044:	8f 91       	pop	r24
    5046:	7f 91       	pop	r23
    5048:	6f 91       	pop	r22
    504a:	5f 91       	pop	r21
    504c:	4f 91       	pop	r20
    504e:	3f 91       	pop	r19
    5050:	2f 91       	pop	r18
    5052:	0f 90       	pop	r0
    5054:	0b be       	out	0x3b, r0	; 59
    5056:	0f 90       	pop	r0
    5058:	09 be       	out	0x39, r0	; 57
    505a:	0f 90       	pop	r0
    505c:	08 be       	out	0x38, r0	; 56
    505e:	0f 90       	pop	r0
    5060:	0f be       	out	0x3f, r0	; 63
    5062:	0f 90       	pop	r0
    5064:	1f 90       	pop	r1
    5066:	18 95       	reti

00005068 <__vector_99>:
    5068:	1f 92       	push	r1
    506a:	0f 92       	push	r0
    506c:	0f b6       	in	r0, 0x3f	; 63
    506e:	0f 92       	push	r0
    5070:	08 b6       	in	r0, 0x38	; 56
    5072:	0f 92       	push	r0
    5074:	09 b6       	in	r0, 0x39	; 57
    5076:	0f 92       	push	r0
    5078:	0b b6       	in	r0, 0x3b	; 59
    507a:	0f 92       	push	r0
    507c:	11 24       	eor	r1, r1
    507e:	2f 93       	push	r18
    5080:	3f 93       	push	r19
    5082:	4f 93       	push	r20
    5084:	5f 93       	push	r21
    5086:	6f 93       	push	r22
    5088:	7f 93       	push	r23
    508a:	8f 93       	push	r24
    508c:	9f 93       	push	r25
    508e:	af 93       	push	r26
    5090:	bf 93       	push	r27
    5092:	ef 93       	push	r30
    5094:	ff 93       	push	r31
    5096:	8f e0       	ldi	r24, 0x0F	; 15
    5098:	0e 94 aa 22 	call	0x4554	; 0x4554 <findGpioIntElement>
    509c:	dc 01       	movw	r26, r24
    509e:	00 97       	sbiw	r24, 0x00	; 0
    50a0:	51 f0       	breq	.+20     	; 0x50b6 <__vector_99+0x4e>
    50a2:	12 96       	adiw	r26, 0x02	; 2
    50a4:	ed 91       	ld	r30, X+
    50a6:	fc 91       	ld	r31, X
    50a8:	13 97       	sbiw	r26, 0x03	; 3
    50aa:	30 97       	sbiw	r30, 0x00	; 0
    50ac:	21 f0       	breq	.+8      	; 0x50b6 <__vector_99+0x4e>
    50ae:	87 e0       	ldi	r24, 0x07	; 7
    50b0:	11 96       	adiw	r26, 0x01	; 1
    50b2:	6c 91       	ld	r22, X
    50b4:	19 95       	eicall
    50b6:	ff 91       	pop	r31
    50b8:	ef 91       	pop	r30
    50ba:	bf 91       	pop	r27
    50bc:	af 91       	pop	r26
    50be:	9f 91       	pop	r25
    50c0:	8f 91       	pop	r24
    50c2:	7f 91       	pop	r23
    50c4:	6f 91       	pop	r22
    50c6:	5f 91       	pop	r21
    50c8:	4f 91       	pop	r20
    50ca:	3f 91       	pop	r19
    50cc:	2f 91       	pop	r18
    50ce:	0f 90       	pop	r0
    50d0:	0b be       	out	0x3b, r0	; 59
    50d2:	0f 90       	pop	r0
    50d4:	09 be       	out	0x39, r0	; 57
    50d6:	0f 90       	pop	r0
    50d8:	08 be       	out	0x38, r0	; 56
    50da:	0f 90       	pop	r0
    50dc:	0f be       	out	0x3f, r0	; 63
    50de:	0f 90       	pop	r0
    50e0:	1f 90       	pop	r1
    50e2:	18 95       	reti

000050e4 <__vector_100>:
    50e4:	1f 92       	push	r1
    50e6:	0f 92       	push	r0
    50e8:	0f b6       	in	r0, 0x3f	; 63
    50ea:	0f 92       	push	r0
    50ec:	08 b6       	in	r0, 0x38	; 56
    50ee:	0f 92       	push	r0
    50f0:	09 b6       	in	r0, 0x39	; 57
    50f2:	0f 92       	push	r0
    50f4:	0b b6       	in	r0, 0x3b	; 59
    50f6:	0f 92       	push	r0
    50f8:	11 24       	eor	r1, r1
    50fa:	2f 93       	push	r18
    50fc:	3f 93       	push	r19
    50fe:	4f 93       	push	r20
    5100:	5f 93       	push	r21
    5102:	6f 93       	push	r22
    5104:	7f 93       	push	r23
    5106:	8f 93       	push	r24
    5108:	9f 93       	push	r25
    510a:	af 93       	push	r26
    510c:	bf 93       	push	r27
    510e:	ef 93       	push	r30
    5110:	ff 93       	push	r31
    5112:	80 e1       	ldi	r24, 0x10	; 16
    5114:	0e 94 aa 22 	call	0x4554	; 0x4554 <findGpioIntElement>
    5118:	dc 01       	movw	r26, r24
    511a:	00 97       	sbiw	r24, 0x00	; 0
    511c:	51 f0       	breq	.+20     	; 0x5132 <__vector_100+0x4e>
    511e:	12 96       	adiw	r26, 0x02	; 2
    5120:	ed 91       	ld	r30, X+
    5122:	fc 91       	ld	r31, X
    5124:	13 97       	sbiw	r26, 0x03	; 3
    5126:	30 97       	sbiw	r30, 0x00	; 0
    5128:	21 f0       	breq	.+8      	; 0x5132 <__vector_100+0x4e>
    512a:	88 e0       	ldi	r24, 0x08	; 8
    512c:	11 96       	adiw	r26, 0x01	; 1
    512e:	6c 91       	ld	r22, X
    5130:	19 95       	eicall
    5132:	ff 91       	pop	r31
    5134:	ef 91       	pop	r30
    5136:	bf 91       	pop	r27
    5138:	af 91       	pop	r26
    513a:	9f 91       	pop	r25
    513c:	8f 91       	pop	r24
    513e:	7f 91       	pop	r23
    5140:	6f 91       	pop	r22
    5142:	5f 91       	pop	r21
    5144:	4f 91       	pop	r20
    5146:	3f 91       	pop	r19
    5148:	2f 91       	pop	r18
    514a:	0f 90       	pop	r0
    514c:	0b be       	out	0x3b, r0	; 59
    514e:	0f 90       	pop	r0
    5150:	09 be       	out	0x39, r0	; 57
    5152:	0f 90       	pop	r0
    5154:	08 be       	out	0x38, r0	; 56
    5156:	0f 90       	pop	r0
    5158:	0f be       	out	0x3f, r0	; 63
    515a:	0f 90       	pop	r0
    515c:	1f 90       	pop	r1
    515e:	18 95       	reti

00005160 <__vector_101>:
    5160:	1f 92       	push	r1
    5162:	0f 92       	push	r0
    5164:	0f b6       	in	r0, 0x3f	; 63
    5166:	0f 92       	push	r0
    5168:	08 b6       	in	r0, 0x38	; 56
    516a:	0f 92       	push	r0
    516c:	09 b6       	in	r0, 0x39	; 57
    516e:	0f 92       	push	r0
    5170:	0b b6       	in	r0, 0x3b	; 59
    5172:	0f 92       	push	r0
    5174:	11 24       	eor	r1, r1
    5176:	2f 93       	push	r18
    5178:	3f 93       	push	r19
    517a:	4f 93       	push	r20
    517c:	5f 93       	push	r21
    517e:	6f 93       	push	r22
    5180:	7f 93       	push	r23
    5182:	8f 93       	push	r24
    5184:	9f 93       	push	r25
    5186:	af 93       	push	r26
    5188:	bf 93       	push	r27
    518a:	ef 93       	push	r30
    518c:	ff 93       	push	r31
    518e:	81 e1       	ldi	r24, 0x11	; 17
    5190:	0e 94 aa 22 	call	0x4554	; 0x4554 <findGpioIntElement>
    5194:	dc 01       	movw	r26, r24
    5196:	00 97       	sbiw	r24, 0x00	; 0
    5198:	51 f0       	breq	.+20     	; 0x51ae <__vector_101+0x4e>
    519a:	12 96       	adiw	r26, 0x02	; 2
    519c:	ed 91       	ld	r30, X+
    519e:	fc 91       	ld	r31, X
    51a0:	13 97       	sbiw	r26, 0x03	; 3
    51a2:	30 97       	sbiw	r30, 0x00	; 0
    51a4:	21 f0       	breq	.+8      	; 0x51ae <__vector_101+0x4e>
    51a6:	88 e0       	ldi	r24, 0x08	; 8
    51a8:	11 96       	adiw	r26, 0x01	; 1
    51aa:	6c 91       	ld	r22, X
    51ac:	19 95       	eicall
    51ae:	ff 91       	pop	r31
    51b0:	ef 91       	pop	r30
    51b2:	bf 91       	pop	r27
    51b4:	af 91       	pop	r26
    51b6:	9f 91       	pop	r25
    51b8:	8f 91       	pop	r24
    51ba:	7f 91       	pop	r23
    51bc:	6f 91       	pop	r22
    51be:	5f 91       	pop	r21
    51c0:	4f 91       	pop	r20
    51c2:	3f 91       	pop	r19
    51c4:	2f 91       	pop	r18
    51c6:	0f 90       	pop	r0
    51c8:	0b be       	out	0x3b, r0	; 59
    51ca:	0f 90       	pop	r0
    51cc:	09 be       	out	0x39, r0	; 57
    51ce:	0f 90       	pop	r0
    51d0:	08 be       	out	0x38, r0	; 56
    51d2:	0f 90       	pop	r0
    51d4:	0f be       	out	0x3f, r0	; 63
    51d6:	0f 90       	pop	r0
    51d8:	1f 90       	pop	r1
    51da:	18 95       	reti

000051dc <__vector_94>:
    51dc:	1f 92       	push	r1
    51de:	0f 92       	push	r0
    51e0:	0f b6       	in	r0, 0x3f	; 63
    51e2:	0f 92       	push	r0
    51e4:	08 b6       	in	r0, 0x38	; 56
    51e6:	0f 92       	push	r0
    51e8:	09 b6       	in	r0, 0x39	; 57
    51ea:	0f 92       	push	r0
    51ec:	0b b6       	in	r0, 0x3b	; 59
    51ee:	0f 92       	push	r0
    51f0:	11 24       	eor	r1, r1
    51f2:	2f 93       	push	r18
    51f4:	3f 93       	push	r19
    51f6:	4f 93       	push	r20
    51f8:	5f 93       	push	r21
    51fa:	6f 93       	push	r22
    51fc:	7f 93       	push	r23
    51fe:	8f 93       	push	r24
    5200:	9f 93       	push	r25
    5202:	af 93       	push	r26
    5204:	bf 93       	push	r27
    5206:	ef 93       	push	r30
    5208:	ff 93       	push	r31
    520a:	82 e1       	ldi	r24, 0x12	; 18
    520c:	0e 94 aa 22 	call	0x4554	; 0x4554 <findGpioIntElement>
    5210:	dc 01       	movw	r26, r24
    5212:	00 97       	sbiw	r24, 0x00	; 0
    5214:	51 f0       	breq	.+20     	; 0x522a <__vector_94+0x4e>
    5216:	12 96       	adiw	r26, 0x02	; 2
    5218:	ed 91       	ld	r30, X+
    521a:	fc 91       	ld	r31, X
    521c:	13 97       	sbiw	r26, 0x03	; 3
    521e:	30 97       	sbiw	r30, 0x00	; 0
    5220:	21 f0       	breq	.+8      	; 0x522a <__vector_94+0x4e>
    5222:	89 e0       	ldi	r24, 0x09	; 9
    5224:	11 96       	adiw	r26, 0x01	; 1
    5226:	6c 91       	ld	r22, X
    5228:	19 95       	eicall
    522a:	ff 91       	pop	r31
    522c:	ef 91       	pop	r30
    522e:	bf 91       	pop	r27
    5230:	af 91       	pop	r26
    5232:	9f 91       	pop	r25
    5234:	8f 91       	pop	r24
    5236:	7f 91       	pop	r23
    5238:	6f 91       	pop	r22
    523a:	5f 91       	pop	r21
    523c:	4f 91       	pop	r20
    523e:	3f 91       	pop	r19
    5240:	2f 91       	pop	r18
    5242:	0f 90       	pop	r0
    5244:	0b be       	out	0x3b, r0	; 59
    5246:	0f 90       	pop	r0
    5248:	09 be       	out	0x39, r0	; 57
    524a:	0f 90       	pop	r0
    524c:	08 be       	out	0x38, r0	; 56
    524e:	0f 90       	pop	r0
    5250:	0f be       	out	0x3f, r0	; 63
    5252:	0f 90       	pop	r0
    5254:	1f 90       	pop	r1
    5256:	18 95       	reti

00005258 <__vector_95>:
    5258:	1f 92       	push	r1
    525a:	0f 92       	push	r0
    525c:	0f b6       	in	r0, 0x3f	; 63
    525e:	0f 92       	push	r0
    5260:	08 b6       	in	r0, 0x38	; 56
    5262:	0f 92       	push	r0
    5264:	09 b6       	in	r0, 0x39	; 57
    5266:	0f 92       	push	r0
    5268:	0b b6       	in	r0, 0x3b	; 59
    526a:	0f 92       	push	r0
    526c:	11 24       	eor	r1, r1
    526e:	2f 93       	push	r18
    5270:	3f 93       	push	r19
    5272:	4f 93       	push	r20
    5274:	5f 93       	push	r21
    5276:	6f 93       	push	r22
    5278:	7f 93       	push	r23
    527a:	8f 93       	push	r24
    527c:	9f 93       	push	r25
    527e:	af 93       	push	r26
    5280:	bf 93       	push	r27
    5282:	ef 93       	push	r30
    5284:	ff 93       	push	r31
    5286:	83 e1       	ldi	r24, 0x13	; 19
    5288:	0e 94 aa 22 	call	0x4554	; 0x4554 <findGpioIntElement>
    528c:	dc 01       	movw	r26, r24
    528e:	00 97       	sbiw	r24, 0x00	; 0
    5290:	51 f0       	breq	.+20     	; 0x52a6 <__vector_95+0x4e>
    5292:	12 96       	adiw	r26, 0x02	; 2
    5294:	ed 91       	ld	r30, X+
    5296:	fc 91       	ld	r31, X
    5298:	13 97       	sbiw	r26, 0x03	; 3
    529a:	30 97       	sbiw	r30, 0x00	; 0
    529c:	21 f0       	breq	.+8      	; 0x52a6 <__vector_95+0x4e>
    529e:	89 e0       	ldi	r24, 0x09	; 9
    52a0:	11 96       	adiw	r26, 0x01	; 1
    52a2:	6c 91       	ld	r22, X
    52a4:	19 95       	eicall
    52a6:	ff 91       	pop	r31
    52a8:	ef 91       	pop	r30
    52aa:	bf 91       	pop	r27
    52ac:	af 91       	pop	r26
    52ae:	9f 91       	pop	r25
    52b0:	8f 91       	pop	r24
    52b2:	7f 91       	pop	r23
    52b4:	6f 91       	pop	r22
    52b6:	5f 91       	pop	r21
    52b8:	4f 91       	pop	r20
    52ba:	3f 91       	pop	r19
    52bc:	2f 91       	pop	r18
    52be:	0f 90       	pop	r0
    52c0:	0b be       	out	0x3b, r0	; 59
    52c2:	0f 90       	pop	r0
    52c4:	09 be       	out	0x39, r0	; 57
    52c6:	0f 90       	pop	r0
    52c8:	08 be       	out	0x38, r0	; 56
    52ca:	0f 90       	pop	r0
    52cc:	0f be       	out	0x3f, r0	; 63
    52ce:	0f 90       	pop	r0
    52d0:	1f 90       	pop	r1
    52d2:	18 95       	reti

000052d4 <__vector_4>:
    52d4:	1f 92       	push	r1
    52d6:	0f 92       	push	r0
    52d8:	0f b6       	in	r0, 0x3f	; 63
    52da:	0f 92       	push	r0
    52dc:	08 b6       	in	r0, 0x38	; 56
    52de:	0f 92       	push	r0
    52e0:	09 b6       	in	r0, 0x39	; 57
    52e2:	0f 92       	push	r0
    52e4:	0b b6       	in	r0, 0x3b	; 59
    52e6:	0f 92       	push	r0
    52e8:	11 24       	eor	r1, r1
    52ea:	2f 93       	push	r18
    52ec:	3f 93       	push	r19
    52ee:	4f 93       	push	r20
    52f0:	5f 93       	push	r21
    52f2:	6f 93       	push	r22
    52f4:	7f 93       	push	r23
    52f6:	8f 93       	push	r24
    52f8:	9f 93       	push	r25
    52fa:	af 93       	push	r26
    52fc:	bf 93       	push	r27
    52fe:	ef 93       	push	r30
    5300:	ff 93       	push	r31
    5302:	84 e1       	ldi	r24, 0x14	; 20
    5304:	0e 94 aa 22 	call	0x4554	; 0x4554 <findGpioIntElement>
    5308:	dc 01       	movw	r26, r24
    530a:	00 97       	sbiw	r24, 0x00	; 0
    530c:	51 f0       	breq	.+20     	; 0x5322 <__vector_4+0x4e>
    530e:	12 96       	adiw	r26, 0x02	; 2
    5310:	ed 91       	ld	r30, X+
    5312:	fc 91       	ld	r31, X
    5314:	13 97       	sbiw	r26, 0x03	; 3
    5316:	30 97       	sbiw	r30, 0x00	; 0
    5318:	21 f0       	breq	.+8      	; 0x5322 <__vector_4+0x4e>
    531a:	8a e0       	ldi	r24, 0x0A	; 10
    531c:	11 96       	adiw	r26, 0x01	; 1
    531e:	6c 91       	ld	r22, X
    5320:	19 95       	eicall
    5322:	ff 91       	pop	r31
    5324:	ef 91       	pop	r30
    5326:	bf 91       	pop	r27
    5328:	af 91       	pop	r26
    532a:	9f 91       	pop	r25
    532c:	8f 91       	pop	r24
    532e:	7f 91       	pop	r23
    5330:	6f 91       	pop	r22
    5332:	5f 91       	pop	r21
    5334:	4f 91       	pop	r20
    5336:	3f 91       	pop	r19
    5338:	2f 91       	pop	r18
    533a:	0f 90       	pop	r0
    533c:	0b be       	out	0x3b, r0	; 59
    533e:	0f 90       	pop	r0
    5340:	09 be       	out	0x39, r0	; 57
    5342:	0f 90       	pop	r0
    5344:	08 be       	out	0x38, r0	; 56
    5346:	0f 90       	pop	r0
    5348:	0f be       	out	0x3f, r0	; 63
    534a:	0f 90       	pop	r0
    534c:	1f 90       	pop	r1
    534e:	18 95       	reti

00005350 <__vector_5>:
    5350:	1f 92       	push	r1
    5352:	0f 92       	push	r0
    5354:	0f b6       	in	r0, 0x3f	; 63
    5356:	0f 92       	push	r0
    5358:	08 b6       	in	r0, 0x38	; 56
    535a:	0f 92       	push	r0
    535c:	09 b6       	in	r0, 0x39	; 57
    535e:	0f 92       	push	r0
    5360:	0b b6       	in	r0, 0x3b	; 59
    5362:	0f 92       	push	r0
    5364:	11 24       	eor	r1, r1
    5366:	2f 93       	push	r18
    5368:	3f 93       	push	r19
    536a:	4f 93       	push	r20
    536c:	5f 93       	push	r21
    536e:	6f 93       	push	r22
    5370:	7f 93       	push	r23
    5372:	8f 93       	push	r24
    5374:	9f 93       	push	r25
    5376:	af 93       	push	r26
    5378:	bf 93       	push	r27
    537a:	ef 93       	push	r30
    537c:	ff 93       	push	r31
    537e:	85 e1       	ldi	r24, 0x15	; 21
    5380:	0e 94 aa 22 	call	0x4554	; 0x4554 <findGpioIntElement>
    5384:	dc 01       	movw	r26, r24
    5386:	00 97       	sbiw	r24, 0x00	; 0
    5388:	51 f0       	breq	.+20     	; 0x539e <__vector_5+0x4e>
    538a:	12 96       	adiw	r26, 0x02	; 2
    538c:	ed 91       	ld	r30, X+
    538e:	fc 91       	ld	r31, X
    5390:	13 97       	sbiw	r26, 0x03	; 3
    5392:	30 97       	sbiw	r30, 0x00	; 0
    5394:	21 f0       	breq	.+8      	; 0x539e <__vector_5+0x4e>
    5396:	8a e0       	ldi	r24, 0x0A	; 10
    5398:	11 96       	adiw	r26, 0x01	; 1
    539a:	6c 91       	ld	r22, X
    539c:	19 95       	eicall
    539e:	ff 91       	pop	r31
    53a0:	ef 91       	pop	r30
    53a2:	bf 91       	pop	r27
    53a4:	af 91       	pop	r26
    53a6:	9f 91       	pop	r25
    53a8:	8f 91       	pop	r24
    53aa:	7f 91       	pop	r23
    53ac:	6f 91       	pop	r22
    53ae:	5f 91       	pop	r21
    53b0:	4f 91       	pop	r20
    53b2:	3f 91       	pop	r19
    53b4:	2f 91       	pop	r18
    53b6:	0f 90       	pop	r0
    53b8:	0b be       	out	0x3b, r0	; 59
    53ba:	0f 90       	pop	r0
    53bc:	09 be       	out	0x39, r0	; 57
    53be:	0f 90       	pop	r0
    53c0:	08 be       	out	0x38, r0	; 56
    53c2:	0f 90       	pop	r0
    53c4:	0f be       	out	0x3f, r0	; 63
    53c6:	0f 90       	pop	r0
    53c8:	1f 90       	pop	r1
    53ca:	18 95       	reti

000053cc <hal_configureGpioPort>:
    53cc:	cf 93       	push	r28
    53ce:	df 93       	push	r29
    53d0:	00 d0       	rcall	.+0      	; 0x53d2 <hal_configureGpioPort+0x6>
    53d2:	00 d0       	rcall	.+0      	; 0x53d4 <hal_configureGpioPort+0x8>
    53d4:	cd b7       	in	r28, 0x3d	; 61
    53d6:	de b7       	in	r29, 0x3e	; 62
    53d8:	2a 83       	std	Y+2, r18	; 0x02
    53da:	3b 83       	std	Y+3, r19	; 0x03
    53dc:	4c 83       	std	Y+4, r20	; 0x04
    53de:	5d 83       	std	Y+5, r21	; 0x05
    53e0:	6e 83       	std	Y+6, r22	; 0x06
    53e2:	9f b7       	in	r25, 0x3f	; 63
    53e4:	99 83       	std	Y+1, r25	; 0x01
    53e6:	f8 94       	cli
    53e8:	85 30       	cpi	r24, 0x05	; 5
    53ea:	69 f1       	breq	.+90     	; 0x5446 <hal_configureGpioPort+0x7a>
    53ec:	86 30       	cpi	r24, 0x06	; 6
    53ee:	70 f4       	brcc	.+28     	; 0x540c <hal_configureGpioPort+0x40>
    53f0:	82 30       	cpi	r24, 0x02	; 2
    53f2:	01 f1       	breq	.+64     	; 0x5434 <hal_configureGpioPort+0x68>
    53f4:	83 30       	cpi	r24, 0x03	; 3
    53f6:	28 f4       	brcc	.+10     	; 0x5402 <hal_configureGpioPort+0x36>
    53f8:	88 23       	and	r24, r24
    53fa:	b1 f0       	breq	.+44     	; 0x5428 <hal_configureGpioPort+0x5c>
    53fc:	81 30       	cpi	r24, 0x01	; 1
    53fe:	d9 f5       	brne	.+118    	; 0x5476 <hal_configureGpioPort+0xaa>
    5400:	16 c0       	rjmp	.+44     	; 0x542e <hal_configureGpioPort+0x62>
    5402:	83 30       	cpi	r24, 0x03	; 3
    5404:	d1 f0       	breq	.+52     	; 0x543a <hal_configureGpioPort+0x6e>
    5406:	84 30       	cpi	r24, 0x04	; 4
    5408:	b1 f5       	brne	.+108    	; 0x5476 <hal_configureGpioPort+0xaa>
    540a:	1a c0       	rjmp	.+52     	; 0x5440 <hal_configureGpioPort+0x74>
    540c:	88 30       	cpi	r24, 0x08	; 8
    540e:	21 f1       	breq	.+72     	; 0x5458 <hal_configureGpioPort+0x8c>
    5410:	89 30       	cpi	r24, 0x09	; 9
    5412:	28 f4       	brcc	.+10     	; 0x541e <hal_configureGpioPort+0x52>
    5414:	86 30       	cpi	r24, 0x06	; 6
    5416:	d1 f0       	breq	.+52     	; 0x544c <hal_configureGpioPort+0x80>
    5418:	87 30       	cpi	r24, 0x07	; 7
    541a:	69 f5       	brne	.+90     	; 0x5476 <hal_configureGpioPort+0xaa>
    541c:	1a c0       	rjmp	.+52     	; 0x5452 <hal_configureGpioPort+0x86>
    541e:	89 30       	cpi	r24, 0x09	; 9
    5420:	f1 f0       	breq	.+60     	; 0x545e <hal_configureGpioPort+0x92>
    5422:	8a 30       	cpi	r24, 0x0A	; 10
    5424:	41 f5       	brne	.+80     	; 0x5476 <hal_configureGpioPort+0xaa>
    5426:	1e c0       	rjmp	.+60     	; 0x5464 <hal_configureGpioPort+0x98>
    5428:	80 e0       	ldi	r24, 0x00	; 0
    542a:	96 e0       	ldi	r25, 0x06	; 6
    542c:	1d c0       	rjmp	.+58     	; 0x5468 <hal_configureGpioPort+0x9c>
    542e:	80 e2       	ldi	r24, 0x20	; 32
    5430:	96 e0       	ldi	r25, 0x06	; 6
    5432:	1a c0       	rjmp	.+52     	; 0x5468 <hal_configureGpioPort+0x9c>
    5434:	80 e4       	ldi	r24, 0x40	; 64
    5436:	96 e0       	ldi	r25, 0x06	; 6
    5438:	17 c0       	rjmp	.+46     	; 0x5468 <hal_configureGpioPort+0x9c>
    543a:	80 e6       	ldi	r24, 0x60	; 96
    543c:	96 e0       	ldi	r25, 0x06	; 6
    543e:	14 c0       	rjmp	.+40     	; 0x5468 <hal_configureGpioPort+0x9c>
    5440:	80 e8       	ldi	r24, 0x80	; 128
    5442:	96 e0       	ldi	r25, 0x06	; 6
    5444:	11 c0       	rjmp	.+34     	; 0x5468 <hal_configureGpioPort+0x9c>
    5446:	80 ea       	ldi	r24, 0xA0	; 160
    5448:	96 e0       	ldi	r25, 0x06	; 6
    544a:	0e c0       	rjmp	.+28     	; 0x5468 <hal_configureGpioPort+0x9c>
    544c:	80 ee       	ldi	r24, 0xE0	; 224
    544e:	96 e0       	ldi	r25, 0x06	; 6
    5450:	0b c0       	rjmp	.+22     	; 0x5468 <hal_configureGpioPort+0x9c>
    5452:	80 e0       	ldi	r24, 0x00	; 0
    5454:	97 e0       	ldi	r25, 0x07	; 7
    5456:	08 c0       	rjmp	.+16     	; 0x5468 <hal_configureGpioPort+0x9c>
    5458:	80 e2       	ldi	r24, 0x20	; 32
    545a:	97 e0       	ldi	r25, 0x07	; 7
    545c:	05 c0       	rjmp	.+10     	; 0x5468 <hal_configureGpioPort+0x9c>
    545e:	80 ec       	ldi	r24, 0xC0	; 192
    5460:	97 e0       	ldi	r25, 0x07	; 7
    5462:	02 c0       	rjmp	.+4      	; 0x5468 <hal_configureGpioPort+0x9c>
    5464:	80 ee       	ldi	r24, 0xE0	; 224
    5466:	97 e0       	ldi	r25, 0x07	; 7
    5468:	be 01       	movw	r22, r28
    546a:	6e 5f       	subi	r22, 0xFE	; 254
    546c:	7f 4f       	sbci	r23, 0xFF	; 255
    546e:	0e 94 4e 24 	call	0x489c	; 0x489c <confPort>
    5472:	80 e0       	ldi	r24, 0x00	; 0
    5474:	01 c0       	rjmp	.+2      	; 0x5478 <hal_configureGpioPort+0xac>
    5476:	8c ef       	ldi	r24, 0xFC	; 252
    5478:	99 81       	ldd	r25, Y+1	; 0x01
    547a:	9f bf       	out	0x3f, r25	; 63
    547c:	26 96       	adiw	r28, 0x06	; 6
    547e:	cd bf       	out	0x3d, r28	; 61
    5480:	de bf       	out	0x3e, r29	; 62
    5482:	df 91       	pop	r29
    5484:	cf 91       	pop	r28
    5486:	08 95       	ret

00005488 <hal_requestGpioInt>:
    5488:	cf 93       	push	r28
    548a:	df 93       	push	r29
    548c:	cd b7       	in	r28, 0x3d	; 61
    548e:	de b7       	in	r29, 0x3e	; 62
    5490:	27 97       	sbiw	r28, 0x07	; 7
    5492:	cd bf       	out	0x3d, r28	; 61
    5494:	de bf       	out	0x3e, r29	; 62
    5496:	4c 83       	std	Y+4, r20	; 0x04
    5498:	5d 83       	std	Y+5, r21	; 0x05
    549a:	6e 83       	std	Y+6, r22	; 0x06
    549c:	7f 83       	std	Y+7, r23	; 0x07
    549e:	9f b7       	in	r25, 0x3f	; 63
    54a0:	99 83       	std	Y+1, r25	; 0x01
    54a2:	f8 94       	cli
    54a4:	85 30       	cpi	r24, 0x05	; 5
    54a6:	09 f4       	brne	.+2      	; 0x54aa <hal_requestGpioInt+0x22>
    54a8:	4c c0       	rjmp	.+152    	; 0x5542 <hal_requestGpioInt+0xba>
    54aa:	86 30       	cpi	r24, 0x06	; 6
    54ac:	80 f4       	brcc	.+32     	; 0x54ce <hal_requestGpioInt+0x46>
    54ae:	82 30       	cpi	r24, 0x02	; 2
    54b0:	81 f1       	breq	.+96     	; 0x5512 <hal_requestGpioInt+0x8a>
    54b2:	83 30       	cpi	r24, 0x03	; 3
    54b4:	30 f4       	brcc	.+12     	; 0x54c2 <hal_requestGpioInt+0x3a>
    54b6:	88 23       	and	r24, r24
    54b8:	e1 f0       	breq	.+56     	; 0x54f2 <hal_requestGpioInt+0x6a>
    54ba:	81 30       	cpi	r24, 0x01	; 1
    54bc:	09 f0       	breq	.+2      	; 0x54c0 <hal_requestGpioInt+0x38>
    54be:	79 c0       	rjmp	.+242    	; 0x55b2 <hal_requestGpioInt+0x12a>
    54c0:	20 c0       	rjmp	.+64     	; 0x5502 <hal_requestGpioInt+0x7a>
    54c2:	83 30       	cpi	r24, 0x03	; 3
    54c4:	71 f1       	breq	.+92     	; 0x5522 <hal_requestGpioInt+0x9a>
    54c6:	84 30       	cpi	r24, 0x04	; 4
    54c8:	09 f0       	breq	.+2      	; 0x54cc <hal_requestGpioInt+0x44>
    54ca:	73 c0       	rjmp	.+230    	; 0x55b2 <hal_requestGpioInt+0x12a>
    54cc:	32 c0       	rjmp	.+100    	; 0x5532 <hal_requestGpioInt+0xaa>
    54ce:	88 30       	cpi	r24, 0x08	; 8
    54d0:	09 f4       	brne	.+2      	; 0x54d4 <hal_requestGpioInt+0x4c>
    54d2:	4f c0       	rjmp	.+158    	; 0x5572 <hal_requestGpioInt+0xea>
    54d4:	89 30       	cpi	r24, 0x09	; 9
    54d6:	30 f4       	brcc	.+12     	; 0x54e4 <hal_requestGpioInt+0x5c>
    54d8:	86 30       	cpi	r24, 0x06	; 6
    54da:	d9 f1       	breq	.+118    	; 0x5552 <hal_requestGpioInt+0xca>
    54dc:	87 30       	cpi	r24, 0x07	; 7
    54de:	09 f0       	breq	.+2      	; 0x54e2 <hal_requestGpioInt+0x5a>
    54e0:	68 c0       	rjmp	.+208    	; 0x55b2 <hal_requestGpioInt+0x12a>
    54e2:	3f c0       	rjmp	.+126    	; 0x5562 <hal_requestGpioInt+0xda>
    54e4:	89 30       	cpi	r24, 0x09	; 9
    54e6:	09 f4       	brne	.+2      	; 0x54ea <hal_requestGpioInt+0x62>
    54e8:	4c c0       	rjmp	.+152    	; 0x5582 <hal_requestGpioInt+0xfa>
    54ea:	8a 30       	cpi	r24, 0x0A	; 10
    54ec:	09 f0       	breq	.+2      	; 0x54f0 <hal_requestGpioInt+0x68>
    54ee:	61 c0       	rjmp	.+194    	; 0x55b2 <hal_requestGpioInt+0x12a>
    54f0:	50 c0       	rjmp	.+160    	; 0x5592 <hal_requestGpioInt+0x10a>
    54f2:	80 e0       	ldi	r24, 0x00	; 0
    54f4:	96 e0       	ldi	r25, 0x06	; 6
    54f6:	be 01       	movw	r22, r28
    54f8:	6c 5f       	subi	r22, 0xFC	; 252
    54fa:	7f 4f       	sbci	r23, 0xFF	; 255
    54fc:	40 e0       	ldi	r20, 0x00	; 0
    54fe:	21 e0       	ldi	r18, 0x01	; 1
    5500:	4f c0       	rjmp	.+158    	; 0x55a0 <hal_requestGpioInt+0x118>
    5502:	80 e2       	ldi	r24, 0x20	; 32
    5504:	96 e0       	ldi	r25, 0x06	; 6
    5506:	be 01       	movw	r22, r28
    5508:	6c 5f       	subi	r22, 0xFC	; 252
    550a:	7f 4f       	sbci	r23, 0xFF	; 255
    550c:	42 e0       	ldi	r20, 0x02	; 2
    550e:	23 e0       	ldi	r18, 0x03	; 3
    5510:	47 c0       	rjmp	.+142    	; 0x55a0 <hal_requestGpioInt+0x118>
    5512:	80 e4       	ldi	r24, 0x40	; 64
    5514:	96 e0       	ldi	r25, 0x06	; 6
    5516:	be 01       	movw	r22, r28
    5518:	6c 5f       	subi	r22, 0xFC	; 252
    551a:	7f 4f       	sbci	r23, 0xFF	; 255
    551c:	44 e0       	ldi	r20, 0x04	; 4
    551e:	25 e0       	ldi	r18, 0x05	; 5
    5520:	3f c0       	rjmp	.+126    	; 0x55a0 <hal_requestGpioInt+0x118>
    5522:	80 e6       	ldi	r24, 0x60	; 96
    5524:	96 e0       	ldi	r25, 0x06	; 6
    5526:	be 01       	movw	r22, r28
    5528:	6c 5f       	subi	r22, 0xFC	; 252
    552a:	7f 4f       	sbci	r23, 0xFF	; 255
    552c:	46 e0       	ldi	r20, 0x06	; 6
    552e:	27 e0       	ldi	r18, 0x07	; 7
    5530:	37 c0       	rjmp	.+110    	; 0x55a0 <hal_requestGpioInt+0x118>
    5532:	80 e8       	ldi	r24, 0x80	; 128
    5534:	96 e0       	ldi	r25, 0x06	; 6
    5536:	be 01       	movw	r22, r28
    5538:	6c 5f       	subi	r22, 0xFC	; 252
    553a:	7f 4f       	sbci	r23, 0xFF	; 255
    553c:	48 e0       	ldi	r20, 0x08	; 8
    553e:	29 e0       	ldi	r18, 0x09	; 9
    5540:	2f c0       	rjmp	.+94     	; 0x55a0 <hal_requestGpioInt+0x118>
    5542:	80 ea       	ldi	r24, 0xA0	; 160
    5544:	96 e0       	ldi	r25, 0x06	; 6
    5546:	be 01       	movw	r22, r28
    5548:	6c 5f       	subi	r22, 0xFC	; 252
    554a:	7f 4f       	sbci	r23, 0xFF	; 255
    554c:	4a e0       	ldi	r20, 0x0A	; 10
    554e:	2b e0       	ldi	r18, 0x0B	; 11
    5550:	27 c0       	rjmp	.+78     	; 0x55a0 <hal_requestGpioInt+0x118>
    5552:	80 ee       	ldi	r24, 0xE0	; 224
    5554:	96 e0       	ldi	r25, 0x06	; 6
    5556:	be 01       	movw	r22, r28
    5558:	6c 5f       	subi	r22, 0xFC	; 252
    555a:	7f 4f       	sbci	r23, 0xFF	; 255
    555c:	4c e0       	ldi	r20, 0x0C	; 12
    555e:	2d e0       	ldi	r18, 0x0D	; 13
    5560:	1f c0       	rjmp	.+62     	; 0x55a0 <hal_requestGpioInt+0x118>
    5562:	80 e0       	ldi	r24, 0x00	; 0
    5564:	97 e0       	ldi	r25, 0x07	; 7
    5566:	be 01       	movw	r22, r28
    5568:	6c 5f       	subi	r22, 0xFC	; 252
    556a:	7f 4f       	sbci	r23, 0xFF	; 255
    556c:	4e e0       	ldi	r20, 0x0E	; 14
    556e:	2f e0       	ldi	r18, 0x0F	; 15
    5570:	17 c0       	rjmp	.+46     	; 0x55a0 <hal_requestGpioInt+0x118>
    5572:	80 e2       	ldi	r24, 0x20	; 32
    5574:	97 e0       	ldi	r25, 0x07	; 7
    5576:	be 01       	movw	r22, r28
    5578:	6c 5f       	subi	r22, 0xFC	; 252
    557a:	7f 4f       	sbci	r23, 0xFF	; 255
    557c:	40 e1       	ldi	r20, 0x10	; 16
    557e:	21 e1       	ldi	r18, 0x11	; 17
    5580:	0f c0       	rjmp	.+30     	; 0x55a0 <hal_requestGpioInt+0x118>
    5582:	80 ec       	ldi	r24, 0xC0	; 192
    5584:	97 e0       	ldi	r25, 0x07	; 7
    5586:	be 01       	movw	r22, r28
    5588:	6c 5f       	subi	r22, 0xFC	; 252
    558a:	7f 4f       	sbci	r23, 0xFF	; 255
    558c:	42 e1       	ldi	r20, 0x12	; 18
    558e:	23 e1       	ldi	r18, 0x13	; 19
    5590:	07 c0       	rjmp	.+14     	; 0x55a0 <hal_requestGpioInt+0x118>
    5592:	80 ee       	ldi	r24, 0xE0	; 224
    5594:	97 e0       	ldi	r25, 0x07	; 7
    5596:	be 01       	movw	r22, r28
    5598:	6c 5f       	subi	r22, 0xFC	; 252
    559a:	7f 4f       	sbci	r23, 0xFF	; 255
    559c:	44 e1       	ldi	r20, 0x14	; 20
    559e:	25 e1       	ldi	r18, 0x15	; 21
    55a0:	0e 94 f9 22 	call	0x45f2	; 0x45f2 <confInt>
    55a4:	8a 83       	std	Y+2, r24	; 0x02
    55a6:	9b 83       	std	Y+3, r25	; 0x03
    55a8:	89 81       	ldd	r24, Y+1	; 0x01
    55aa:	8f bf       	out	0x3f, r24	; 63
    55ac:	8a 81       	ldd	r24, Y+2	; 0x02
    55ae:	9b 81       	ldd	r25, Y+3	; 0x03
    55b0:	04 c0       	rjmp	.+8      	; 0x55ba <hal_requestGpioInt+0x132>
    55b2:	89 81       	ldd	r24, Y+1	; 0x01
    55b4:	8f bf       	out	0x3f, r24	; 63
    55b6:	8c ef       	ldi	r24, 0xFC	; 252
    55b8:	9f ef       	ldi	r25, 0xFF	; 255
    55ba:	27 96       	adiw	r28, 0x07	; 7
    55bc:	cd bf       	out	0x3d, r28	; 61
    55be:	de bf       	out	0x3e, r29	; 62
    55c0:	df 91       	pop	r29
    55c2:	cf 91       	pop	r28
    55c4:	08 95       	ret

000055c6 <hal_releaseGpioInt>:
    55c6:	cf 93       	push	r28
    55c8:	df 93       	push	r29
    55ca:	00 d0       	rcall	.+0      	; 0x55cc <hal_releaseGpioInt+0x6>
    55cc:	cd b7       	in	r28, 0x3d	; 61
    55ce:	de b7       	in	r29, 0x3e	; 62
    55d0:	8a 83       	std	Y+2, r24	; 0x02
    55d2:	9b 83       	std	Y+3, r25	; 0x03
    55d4:	8f b7       	in	r24, 0x3f	; 63
    55d6:	89 83       	std	Y+1, r24	; 0x01
    55d8:	f8 94       	cli
    55da:	ea 81       	ldd	r30, Y+2	; 0x02
    55dc:	fb 81       	ldd	r31, Y+3	; 0x03
    55de:	80 91 18 21 	lds	r24, 0x2118
    55e2:	90 91 19 21 	lds	r25, 0x2119
    55e6:	24 81       	ldd	r18, Z+4	; 0x04
    55e8:	35 81       	ldd	r19, Z+5	; 0x05
    55ea:	28 17       	cp	r18, r24
    55ec:	39 07       	cpc	r19, r25
    55ee:	21 f0       	breq	.+8      	; 0x55f8 <hal_releaseGpioInt+0x32>
    55f0:	89 81       	ldd	r24, Y+1	; 0x01
    55f2:	8f bf       	out	0x3f, r24	; 63
    55f4:	88 ef       	ldi	r24, 0xF8	; 248
    55f6:	91 c0       	rjmp	.+290    	; 0x571a <hal_releaseGpioInt+0x154>
    55f8:	ea 81       	ldd	r30, Y+2	; 0x02
    55fa:	fb 81       	ldd	r31, Y+3	; 0x03
    55fc:	01 90       	ld	r0, Z+
    55fe:	f0 81       	ld	r31, Z
    5600:	e0 2d       	mov	r30, r0
    5602:	e0 81       	ld	r30, Z
    5604:	f0 e0       	ldi	r31, 0x00	; 0
    5606:	e6 31       	cpi	r30, 0x16	; 22
    5608:	f1 05       	cpc	r31, r1
    560a:	08 f0       	brcs	.+2      	; 0x560e <hal_releaseGpioInt+0x48>
    560c:	7b c0       	rjmp	.+246    	; 0x5704 <hal_releaseGpioInt+0x13e>
    560e:	e6 50       	subi	r30, 0x06	; 6
    5610:	ff 4f       	sbci	r31, 0xFF	; 255
    5612:	ee 0f       	add	r30, r30
    5614:	ff 1f       	adc	r31, r31
    5616:	05 90       	lpm	r0, Z+
    5618:	f4 91       	lpm	r31, Z+
    561a:	e0 2d       	mov	r30, r0
    561c:	19 94       	eijmp
    561e:	e0 e0       	ldi	r30, 0x00	; 0
    5620:	f6 e0       	ldi	r31, 0x06	; 6
    5622:	80 91 09 06 	lds	r24, 0x0609
    5626:	09 c0       	rjmp	.+18     	; 0x563a <hal_releaseGpioInt+0x74>
    5628:	e0 e0       	ldi	r30, 0x00	; 0
    562a:	f6 e0       	ldi	r31, 0x06	; 6
    562c:	80 91 09 06 	lds	r24, 0x0609
    5630:	66 c0       	rjmp	.+204    	; 0x56fe <hal_releaseGpioInt+0x138>
    5632:	e0 e2       	ldi	r30, 0x20	; 32
    5634:	f6 e0       	ldi	r31, 0x06	; 6
    5636:	80 91 29 06 	lds	r24, 0x0629
    563a:	8c 7f       	andi	r24, 0xFC	; 252
    563c:	81 87       	std	Z+9, r24	; 0x09
    563e:	12 86       	std	Z+10, r1	; 0x0a
    5640:	61 c0       	rjmp	.+194    	; 0x5704 <hal_releaseGpioInt+0x13e>
    5642:	e0 e2       	ldi	r30, 0x20	; 32
    5644:	f6 e0       	ldi	r31, 0x06	; 6
    5646:	80 91 29 06 	lds	r24, 0x0629
    564a:	59 c0       	rjmp	.+178    	; 0x56fe <hal_releaseGpioInt+0x138>
    564c:	e0 e4       	ldi	r30, 0x40	; 64
    564e:	f6 e0       	ldi	r31, 0x06	; 6
    5650:	80 91 49 06 	lds	r24, 0x0649
    5654:	f2 cf       	rjmp	.-28     	; 0x563a <hal_releaseGpioInt+0x74>
    5656:	e0 e4       	ldi	r30, 0x40	; 64
    5658:	f6 e0       	ldi	r31, 0x06	; 6
    565a:	80 91 49 06 	lds	r24, 0x0649
    565e:	4f c0       	rjmp	.+158    	; 0x56fe <hal_releaseGpioInt+0x138>
    5660:	e0 e6       	ldi	r30, 0x60	; 96
    5662:	f6 e0       	ldi	r31, 0x06	; 6
    5664:	80 91 69 06 	lds	r24, 0x0669
    5668:	e8 cf       	rjmp	.-48     	; 0x563a <hal_releaseGpioInt+0x74>
    566a:	e0 e6       	ldi	r30, 0x60	; 96
    566c:	f6 e0       	ldi	r31, 0x06	; 6
    566e:	80 91 69 06 	lds	r24, 0x0669
    5672:	45 c0       	rjmp	.+138    	; 0x56fe <hal_releaseGpioInt+0x138>
    5674:	e0 e8       	ldi	r30, 0x80	; 128
    5676:	f6 e0       	ldi	r31, 0x06	; 6
    5678:	80 91 89 06 	lds	r24, 0x0689
    567c:	de cf       	rjmp	.-68     	; 0x563a <hal_releaseGpioInt+0x74>
    567e:	e0 e8       	ldi	r30, 0x80	; 128
    5680:	f6 e0       	ldi	r31, 0x06	; 6
    5682:	80 91 89 06 	lds	r24, 0x0689
    5686:	3b c0       	rjmp	.+118    	; 0x56fe <hal_releaseGpioInt+0x138>
    5688:	e0 ea       	ldi	r30, 0xA0	; 160
    568a:	f6 e0       	ldi	r31, 0x06	; 6
    568c:	80 91 a9 06 	lds	r24, 0x06A9
    5690:	d4 cf       	rjmp	.-88     	; 0x563a <hal_releaseGpioInt+0x74>
    5692:	e0 ea       	ldi	r30, 0xA0	; 160
    5694:	f6 e0       	ldi	r31, 0x06	; 6
    5696:	80 91 a9 06 	lds	r24, 0x06A9
    569a:	31 c0       	rjmp	.+98     	; 0x56fe <hal_releaseGpioInt+0x138>
    569c:	e0 ee       	ldi	r30, 0xE0	; 224
    569e:	f6 e0       	ldi	r31, 0x06	; 6
    56a0:	80 91 e9 06 	lds	r24, 0x06E9
    56a4:	ca cf       	rjmp	.-108    	; 0x563a <hal_releaseGpioInt+0x74>
    56a6:	e0 ee       	ldi	r30, 0xE0	; 224
    56a8:	f6 e0       	ldi	r31, 0x06	; 6
    56aa:	80 91 e9 06 	lds	r24, 0x06E9
    56ae:	27 c0       	rjmp	.+78     	; 0x56fe <hal_releaseGpioInt+0x138>
    56b0:	e0 e0       	ldi	r30, 0x00	; 0
    56b2:	f7 e0       	ldi	r31, 0x07	; 7
    56b4:	80 91 09 07 	lds	r24, 0x0709
    56b8:	c0 cf       	rjmp	.-128    	; 0x563a <hal_releaseGpioInt+0x74>
    56ba:	e0 e0       	ldi	r30, 0x00	; 0
    56bc:	f7 e0       	ldi	r31, 0x07	; 7
    56be:	80 91 09 07 	lds	r24, 0x0709
    56c2:	1d c0       	rjmp	.+58     	; 0x56fe <hal_releaseGpioInt+0x138>
    56c4:	e0 e2       	ldi	r30, 0x20	; 32
    56c6:	f7 e0       	ldi	r31, 0x07	; 7
    56c8:	80 91 29 07 	lds	r24, 0x0729
    56cc:	b6 cf       	rjmp	.-148    	; 0x563a <hal_releaseGpioInt+0x74>
    56ce:	e0 e2       	ldi	r30, 0x20	; 32
    56d0:	f7 e0       	ldi	r31, 0x07	; 7
    56d2:	80 91 29 07 	lds	r24, 0x0729
    56d6:	13 c0       	rjmp	.+38     	; 0x56fe <hal_releaseGpioInt+0x138>
    56d8:	e0 ec       	ldi	r30, 0xC0	; 192
    56da:	f7 e0       	ldi	r31, 0x07	; 7
    56dc:	80 91 c9 07 	lds	r24, 0x07C9
    56e0:	ac cf       	rjmp	.-168    	; 0x563a <hal_releaseGpioInt+0x74>
    56e2:	e0 ec       	ldi	r30, 0xC0	; 192
    56e4:	f7 e0       	ldi	r31, 0x07	; 7
    56e6:	80 91 c9 07 	lds	r24, 0x07C9
    56ea:	09 c0       	rjmp	.+18     	; 0x56fe <hal_releaseGpioInt+0x138>
    56ec:	e0 ee       	ldi	r30, 0xE0	; 224
    56ee:	f7 e0       	ldi	r31, 0x07	; 7
    56f0:	80 91 e9 07 	lds	r24, 0x07E9
    56f4:	a2 cf       	rjmp	.-188    	; 0x563a <hal_releaseGpioInt+0x74>
    56f6:	e0 ee       	ldi	r30, 0xE0	; 224
    56f8:	f7 e0       	ldi	r31, 0x07	; 7
    56fa:	80 91 e9 07 	lds	r24, 0x07E9
    56fe:	83 7f       	andi	r24, 0xF3	; 243
    5700:	81 87       	std	Z+9, r24	; 0x09
    5702:	13 86       	std	Z+11, r1	; 0x0b
    5704:	80 91 18 21 	lds	r24, 0x2118
    5708:	90 91 19 21 	lds	r25, 0x2119
    570c:	6a 81       	ldd	r22, Y+2	; 0x02
    570e:	7b 81       	ldd	r23, Y+3	; 0x03
    5710:	0e 94 c4 89 	call	0x11388	; 0x11388 <utl_destroyLink>
    5714:	89 81       	ldd	r24, Y+1	; 0x01
    5716:	8f bf       	out	0x3f, r24	; 63
    5718:	80 e0       	ldi	r24, 0x00	; 0
    571a:	23 96       	adiw	r28, 0x03	; 3
    571c:	cd bf       	out	0x3d, r28	; 61
    571e:	de bf       	out	0x3e, r29	; 62
    5720:	df 91       	pop	r29
    5722:	cf 91       	pop	r28
    5724:	08 95       	ret

00005726 <processSpiInterrupt>:
    5726:	0f 93       	push	r16
    5728:	1f 93       	push	r17
    572a:	cf 93       	push	r28
    572c:	df 93       	push	r29
    572e:	8c 01       	movw	r16, r24
    5730:	db 01       	movw	r26, r22
    5732:	ec 01       	movw	r28, r24
    5734:	8e 81       	ldd	r24, Y+6	; 0x06
    5736:	88 23       	and	r24, r24
    5738:	09 f0       	breq	.+2      	; 0x573c <processSpiInterrupt+0x16>
    573a:	d4 c0       	rjmp	.+424    	; 0x58e4 <processSpiInterrupt+0x1be>
    573c:	14 96       	adiw	r26, 0x04	; 4
    573e:	8d 91       	ld	r24, X+
    5740:	9c 91       	ld	r25, X
    5742:	15 97       	sbiw	r26, 0x05	; 5
    5744:	12 96       	adiw	r26, 0x02	; 2
    5746:	cd 91       	ld	r28, X+
    5748:	dc 91       	ld	r29, X
    574a:	13 97       	sbiw	r26, 0x03	; 3
    574c:	1c 96       	adiw	r26, 0x0c	; 12
    574e:	ed 91       	ld	r30, X+
    5750:	fc 91       	ld	r31, X
    5752:	1d 97       	sbiw	r26, 0x0d	; 13
    5754:	07 80       	ldd	r0, Z+7	; 0x07
    5756:	f0 85       	ldd	r31, Z+8	; 0x08
    5758:	e0 2d       	mov	r30, r0
    575a:	21 e2       	ldi	r18, 0x21	; 33
    575c:	82 34       	cpi	r24, 0x42	; 66
    575e:	92 07       	cpc	r25, r18
    5760:	49 f0       	breq	.+18     	; 0x5774 <processSpiInterrupt+0x4e>
    5762:	23 81       	ldd	r18, Z+3	; 0x03
    5764:	18 96       	adiw	r26, 0x08	; 8
    5766:	ed 91       	ld	r30, X+
    5768:	fc 91       	ld	r31, X
    576a:	19 97       	sbiw	r26, 0x09	; 9
    576c:	e8 0f       	add	r30, r24
    576e:	f9 1f       	adc	r31, r25
    5770:	20 83       	st	Z, r18
    5772:	03 c0       	rjmp	.+6      	; 0x577a <processSpiInterrupt+0x54>
    5774:	83 81       	ldd	r24, Z+3	; 0x03
    5776:	80 93 42 21 	sts	0x2142, r24
    577a:	18 96       	adiw	r26, 0x08	; 8
    577c:	2d 91       	ld	r18, X+
    577e:	3c 91       	ld	r19, X
    5780:	19 97       	sbiw	r26, 0x09	; 9
    5782:	2f 5f       	subi	r18, 0xFF	; 255
    5784:	3f 4f       	sbci	r19, 0xFF	; 255
    5786:	18 96       	adiw	r26, 0x08	; 8
    5788:	2d 93       	st	X+, r18
    578a:	3c 93       	st	X, r19
    578c:	19 97       	sbiw	r26, 0x09	; 9
    578e:	16 96       	adiw	r26, 0x06	; 6
    5790:	8d 91       	ld	r24, X+
    5792:	9c 91       	ld	r25, X
    5794:	17 97       	sbiw	r26, 0x07	; 7
    5796:	28 17       	cp	r18, r24
    5798:	39 07       	cpc	r19, r25
    579a:	80 f4       	brcc	.+32     	; 0x57bc <processSpiInterrupt+0x96>
    579c:	1c 96       	adiw	r26, 0x0c	; 12
    579e:	ed 91       	ld	r30, X+
    57a0:	fc 91       	ld	r31, X
    57a2:	1d 97       	sbiw	r26, 0x0d	; 13
    57a4:	07 80       	ldd	r0, Z+7	; 0x07
    57a6:	f0 85       	ldd	r31, Z+8	; 0x08
    57a8:	e0 2d       	mov	r30, r0
    57aa:	41 e2       	ldi	r20, 0x21	; 33
    57ac:	c2 34       	cpi	r28, 0x42	; 66
    57ae:	d4 07       	cpc	r29, r20
    57b0:	11 f0       	breq	.+4      	; 0x57b6 <processSpiInterrupt+0x90>
    57b2:	c2 0f       	add	r28, r18
    57b4:	d3 1f       	adc	r29, r19
    57b6:	88 81       	ld	r24, Y
    57b8:	83 83       	std	Z+3, r24	; 0x03
    57ba:	1e c1       	rjmp	.+572    	; 0x59f8 <processSpiInterrupt+0x2d2>
    57bc:	50 96       	adiw	r26, 0x10	; 16
    57be:	8c 91       	ld	r24, X
    57c0:	50 97       	sbiw	r26, 0x10	; 16
    57c2:	88 23       	and	r24, r24
    57c4:	09 f4       	brne	.+2      	; 0x57c8 <processSpiInterrupt+0xa2>
    57c6:	7d c0       	rjmp	.+250    	; 0x58c2 <processSpiInterrupt+0x19c>
    57c8:	1b 96       	adiw	r26, 0x0b	; 11
    57ca:	8c 91       	ld	r24, X
    57cc:	1b 97       	sbiw	r26, 0x0b	; 11
    57ce:	1a 96       	adiw	r26, 0x0a	; 10
    57d0:	9c 91       	ld	r25, X
    57d2:	1a 97       	sbiw	r26, 0x0a	; 10
    57d4:	95 30       	cpi	r25, 0x05	; 5
    57d6:	09 f4       	brne	.+2      	; 0x57da <processSpiInterrupt+0xb4>
    57d8:	4a c0       	rjmp	.+148    	; 0x586e <processSpiInterrupt+0x148>
    57da:	96 30       	cpi	r25, 0x06	; 6
    57dc:	80 f4       	brcc	.+32     	; 0x57fe <processSpiInterrupt+0xd8>
    57de:	92 30       	cpi	r25, 0x02	; 2
    57e0:	81 f1       	breq	.+96     	; 0x5842 <processSpiInterrupt+0x11c>
    57e2:	93 30       	cpi	r25, 0x03	; 3
    57e4:	30 f4       	brcc	.+12     	; 0x57f2 <processSpiInterrupt+0xcc>
    57e6:	99 23       	and	r25, r25
    57e8:	e1 f0       	breq	.+56     	; 0x5822 <processSpiInterrupt+0xfc>
    57ea:	91 30       	cpi	r25, 0x01	; 1
    57ec:	09 f0       	breq	.+2      	; 0x57f0 <processSpiInterrupt+0xca>
    57ee:	69 c0       	rjmp	.+210    	; 0x58c2 <processSpiInterrupt+0x19c>
    57f0:	20 c0       	rjmp	.+64     	; 0x5832 <processSpiInterrupt+0x10c>
    57f2:	93 30       	cpi	r25, 0x03	; 3
    57f4:	71 f1       	breq	.+92     	; 0x5852 <processSpiInterrupt+0x12c>
    57f6:	94 30       	cpi	r25, 0x04	; 4
    57f8:	09 f0       	breq	.+2      	; 0x57fc <processSpiInterrupt+0xd6>
    57fa:	63 c0       	rjmp	.+198    	; 0x58c2 <processSpiInterrupt+0x19c>
    57fc:	31 c0       	rjmp	.+98     	; 0x5860 <processSpiInterrupt+0x13a>
    57fe:	98 30       	cpi	r25, 0x08	; 8
    5800:	09 f4       	brne	.+2      	; 0x5804 <processSpiInterrupt+0xde>
    5802:	4a c0       	rjmp	.+148    	; 0x5898 <processSpiInterrupt+0x172>
    5804:	99 30       	cpi	r25, 0x09	; 9
    5806:	30 f4       	brcc	.+12     	; 0x5814 <processSpiInterrupt+0xee>
    5808:	96 30       	cpi	r25, 0x06	; 6
    580a:	c1 f1       	breq	.+112    	; 0x587c <processSpiInterrupt+0x156>
    580c:	97 30       	cpi	r25, 0x07	; 7
    580e:	09 f0       	breq	.+2      	; 0x5812 <processSpiInterrupt+0xec>
    5810:	58 c0       	rjmp	.+176    	; 0x58c2 <processSpiInterrupt+0x19c>
    5812:	3b c0       	rjmp	.+118    	; 0x588a <processSpiInterrupt+0x164>
    5814:	99 30       	cpi	r25, 0x09	; 9
    5816:	09 f4       	brne	.+2      	; 0x581a <processSpiInterrupt+0xf4>
    5818:	46 c0       	rjmp	.+140    	; 0x58a6 <processSpiInterrupt+0x180>
    581a:	9a 30       	cpi	r25, 0x0A	; 10
    581c:	09 f0       	breq	.+2      	; 0x5820 <processSpiInterrupt+0xfa>
    581e:	51 c0       	rjmp	.+162    	; 0x58c2 <processSpiInterrupt+0x19c>
    5820:	49 c0       	rjmp	.+146    	; 0x58b4 <processSpiInterrupt+0x18e>
    5822:	90 91 00 06 	lds	r25, 0x0600
    5826:	98 23       	and	r25, r24
    5828:	09 f4       	brne	.+2      	; 0x582c <processSpiInterrupt+0x106>
    582a:	4b c0       	rjmp	.+150    	; 0x58c2 <processSpiInterrupt+0x19c>
    582c:	e0 e0       	ldi	r30, 0x00	; 0
    582e:	f6 e0       	ldi	r31, 0x06	; 6
    5830:	47 c0       	rjmp	.+142    	; 0x58c0 <processSpiInterrupt+0x19a>
    5832:	90 91 20 06 	lds	r25, 0x0620
    5836:	98 23       	and	r25, r24
    5838:	09 f4       	brne	.+2      	; 0x583c <processSpiInterrupt+0x116>
    583a:	43 c0       	rjmp	.+134    	; 0x58c2 <processSpiInterrupt+0x19c>
    583c:	e0 e2       	ldi	r30, 0x20	; 32
    583e:	f6 e0       	ldi	r31, 0x06	; 6
    5840:	3f c0       	rjmp	.+126    	; 0x58c0 <processSpiInterrupt+0x19a>
    5842:	90 91 40 06 	lds	r25, 0x0640
    5846:	98 23       	and	r25, r24
    5848:	09 f4       	brne	.+2      	; 0x584c <processSpiInterrupt+0x126>
    584a:	3b c0       	rjmp	.+118    	; 0x58c2 <processSpiInterrupt+0x19c>
    584c:	e0 e4       	ldi	r30, 0x40	; 64
    584e:	f6 e0       	ldi	r31, 0x06	; 6
    5850:	37 c0       	rjmp	.+110    	; 0x58c0 <processSpiInterrupt+0x19a>
    5852:	90 91 60 06 	lds	r25, 0x0660
    5856:	98 23       	and	r25, r24
    5858:	a1 f1       	breq	.+104    	; 0x58c2 <processSpiInterrupt+0x19c>
    585a:	e0 e6       	ldi	r30, 0x60	; 96
    585c:	f6 e0       	ldi	r31, 0x06	; 6
    585e:	30 c0       	rjmp	.+96     	; 0x58c0 <processSpiInterrupt+0x19a>
    5860:	90 91 80 06 	lds	r25, 0x0680
    5864:	98 23       	and	r25, r24
    5866:	69 f1       	breq	.+90     	; 0x58c2 <processSpiInterrupt+0x19c>
    5868:	e0 e8       	ldi	r30, 0x80	; 128
    586a:	f6 e0       	ldi	r31, 0x06	; 6
    586c:	29 c0       	rjmp	.+82     	; 0x58c0 <processSpiInterrupt+0x19a>
    586e:	90 91 a0 06 	lds	r25, 0x06A0
    5872:	98 23       	and	r25, r24
    5874:	31 f1       	breq	.+76     	; 0x58c2 <processSpiInterrupt+0x19c>
    5876:	e0 ea       	ldi	r30, 0xA0	; 160
    5878:	f6 e0       	ldi	r31, 0x06	; 6
    587a:	22 c0       	rjmp	.+68     	; 0x58c0 <processSpiInterrupt+0x19a>
    587c:	90 91 e0 06 	lds	r25, 0x06E0
    5880:	98 23       	and	r25, r24
    5882:	f9 f0       	breq	.+62     	; 0x58c2 <processSpiInterrupt+0x19c>
    5884:	e0 ee       	ldi	r30, 0xE0	; 224
    5886:	f6 e0       	ldi	r31, 0x06	; 6
    5888:	1b c0       	rjmp	.+54     	; 0x58c0 <processSpiInterrupt+0x19a>
    588a:	90 91 00 07 	lds	r25, 0x0700
    588e:	98 23       	and	r25, r24
    5890:	c1 f0       	breq	.+48     	; 0x58c2 <processSpiInterrupt+0x19c>
    5892:	e0 e0       	ldi	r30, 0x00	; 0
    5894:	f7 e0       	ldi	r31, 0x07	; 7
    5896:	14 c0       	rjmp	.+40     	; 0x58c0 <processSpiInterrupt+0x19a>
    5898:	90 91 20 07 	lds	r25, 0x0720
    589c:	98 23       	and	r25, r24
    589e:	89 f0       	breq	.+34     	; 0x58c2 <processSpiInterrupt+0x19c>
    58a0:	e0 e2       	ldi	r30, 0x20	; 32
    58a2:	f7 e0       	ldi	r31, 0x07	; 7
    58a4:	0d c0       	rjmp	.+26     	; 0x58c0 <processSpiInterrupt+0x19a>
    58a6:	90 91 c0 07 	lds	r25, 0x07C0
    58aa:	98 23       	and	r25, r24
    58ac:	51 f0       	breq	.+20     	; 0x58c2 <processSpiInterrupt+0x19c>
    58ae:	e0 ec       	ldi	r30, 0xC0	; 192
    58b0:	f7 e0       	ldi	r31, 0x07	; 7
    58b2:	06 c0       	rjmp	.+12     	; 0x58c0 <processSpiInterrupt+0x19a>
    58b4:	90 91 e0 07 	lds	r25, 0x07E0
    58b8:	98 23       	and	r25, r24
    58ba:	19 f0       	breq	.+6      	; 0x58c2 <processSpiInterrupt+0x19c>
    58bc:	e0 ee       	ldi	r30, 0xE0	; 224
    58be:	f7 e0       	ldi	r31, 0x07	; 7
    58c0:	85 83       	std	Z+5, r24	; 0x05
    58c2:	ed 91       	ld	r30, X+
    58c4:	fc 91       	ld	r31, X
    58c6:	11 97       	sbiw	r26, 0x01	; 1
    58c8:	30 97       	sbiw	r30, 0x00	; 0
    58ca:	49 f0       	breq	.+18     	; 0x58de <processSpiInterrupt+0x1b8>
    58cc:	18 96       	adiw	r26, 0x08	; 8
    58ce:	6d 91       	ld	r22, X+
    58d0:	7c 91       	ld	r23, X
    58d2:	19 97       	sbiw	r26, 0x09	; 9
    58d4:	14 96       	adiw	r26, 0x04	; 4
    58d6:	8d 91       	ld	r24, X+
    58d8:	9c 91       	ld	r25, X
    58da:	15 97       	sbiw	r26, 0x05	; 5
    58dc:	19 95       	eicall
    58de:	e8 01       	movw	r28, r16
    58e0:	19 86       	std	Y+9, r1	; 0x09
    58e2:	8a c0       	rjmp	.+276    	; 0x59f8 <processSpiInterrupt+0x2d2>
    58e4:	1b 96       	adiw	r26, 0x0b	; 11
    58e6:	9c 91       	ld	r25, X
    58e8:	1b 97       	sbiw	r26, 0x0b	; 11
    58ea:	1a 96       	adiw	r26, 0x0a	; 10
    58ec:	8c 91       	ld	r24, X
    58ee:	1a 97       	sbiw	r26, 0x0a	; 10
    58f0:	85 30       	cpi	r24, 0x05	; 5
    58f2:	69 f1       	breq	.+90     	; 0x594e <processSpiInterrupt+0x228>
    58f4:	86 30       	cpi	r24, 0x06	; 6
    58f6:	70 f4       	brcc	.+28     	; 0x5914 <processSpiInterrupt+0x1ee>
    58f8:	82 30       	cpi	r24, 0x02	; 2
    58fa:	01 f1       	breq	.+64     	; 0x593c <processSpiInterrupt+0x216>
    58fc:	83 30       	cpi	r24, 0x03	; 3
    58fe:	28 f4       	brcc	.+10     	; 0x590a <processSpiInterrupt+0x1e4>
    5900:	88 23       	and	r24, r24
    5902:	b1 f0       	breq	.+44     	; 0x5930 <processSpiInterrupt+0x20a>
    5904:	81 30       	cpi	r24, 0x01	; 1
    5906:	b9 f5       	brne	.+110    	; 0x5976 <processSpiInterrupt+0x250>
    5908:	16 c0       	rjmp	.+44     	; 0x5936 <processSpiInterrupt+0x210>
    590a:	83 30       	cpi	r24, 0x03	; 3
    590c:	d1 f0       	breq	.+52     	; 0x5942 <processSpiInterrupt+0x21c>
    590e:	84 30       	cpi	r24, 0x04	; 4
    5910:	91 f5       	brne	.+100    	; 0x5976 <processSpiInterrupt+0x250>
    5912:	1a c0       	rjmp	.+52     	; 0x5948 <processSpiInterrupt+0x222>
    5914:	88 30       	cpi	r24, 0x08	; 8
    5916:	21 f1       	breq	.+72     	; 0x5960 <processSpiInterrupt+0x23a>
    5918:	89 30       	cpi	r24, 0x09	; 9
    591a:	28 f4       	brcc	.+10     	; 0x5926 <processSpiInterrupt+0x200>
    591c:	86 30       	cpi	r24, 0x06	; 6
    591e:	d1 f0       	breq	.+52     	; 0x5954 <processSpiInterrupt+0x22e>
    5920:	87 30       	cpi	r24, 0x07	; 7
    5922:	49 f5       	brne	.+82     	; 0x5976 <processSpiInterrupt+0x250>
    5924:	1a c0       	rjmp	.+52     	; 0x595a <processSpiInterrupt+0x234>
    5926:	89 30       	cpi	r24, 0x09	; 9
    5928:	f1 f0       	breq	.+60     	; 0x5966 <processSpiInterrupt+0x240>
    592a:	8a 30       	cpi	r24, 0x0A	; 10
    592c:	21 f5       	brne	.+72     	; 0x5976 <processSpiInterrupt+0x250>
    592e:	1e c0       	rjmp	.+60     	; 0x596c <processSpiInterrupt+0x246>
    5930:	80 91 08 06 	lds	r24, 0x0608
    5934:	1d c0       	rjmp	.+58     	; 0x5970 <processSpiInterrupt+0x24a>
    5936:	80 91 28 06 	lds	r24, 0x0628
    593a:	1a c0       	rjmp	.+52     	; 0x5970 <processSpiInterrupt+0x24a>
    593c:	80 91 48 06 	lds	r24, 0x0648
    5940:	17 c0       	rjmp	.+46     	; 0x5970 <processSpiInterrupt+0x24a>
    5942:	80 91 68 06 	lds	r24, 0x0668
    5946:	14 c0       	rjmp	.+40     	; 0x5970 <processSpiInterrupt+0x24a>
    5948:	80 91 88 06 	lds	r24, 0x0688
    594c:	11 c0       	rjmp	.+34     	; 0x5970 <processSpiInterrupt+0x24a>
    594e:	80 91 a8 06 	lds	r24, 0x06A8
    5952:	0e c0       	rjmp	.+28     	; 0x5970 <processSpiInterrupt+0x24a>
    5954:	80 91 e8 06 	lds	r24, 0x06E8
    5958:	0b c0       	rjmp	.+22     	; 0x5970 <processSpiInterrupt+0x24a>
    595a:	80 91 08 07 	lds	r24, 0x0708
    595e:	08 c0       	rjmp	.+16     	; 0x5970 <processSpiInterrupt+0x24a>
    5960:	80 91 28 07 	lds	r24, 0x0728
    5964:	05 c0       	rjmp	.+10     	; 0x5970 <processSpiInterrupt+0x24a>
    5966:	80 91 c8 07 	lds	r24, 0x07C8
    596a:	02 c0       	rjmp	.+4      	; 0x5970 <processSpiInterrupt+0x24a>
    596c:	80 91 e8 07 	lds	r24, 0x07E8
    5970:	89 23       	and	r24, r25
    5972:	09 f0       	breq	.+2      	; 0x5976 <processSpiInterrupt+0x250>
    5974:	41 c0       	rjmp	.+130    	; 0x59f8 <processSpiInterrupt+0x2d2>
    5976:	14 96       	adiw	r26, 0x04	; 4
    5978:	8d 91       	ld	r24, X+
    597a:	9c 91       	ld	r25, X
    597c:	15 97       	sbiw	r26, 0x05	; 5
    597e:	12 96       	adiw	r26, 0x02	; 2
    5980:	2d 91       	ld	r18, X+
    5982:	3c 91       	ld	r19, X
    5984:	13 97       	sbiw	r26, 0x03	; 3
    5986:	1c 96       	adiw	r26, 0x0c	; 12
    5988:	ed 91       	ld	r30, X+
    598a:	fc 91       	ld	r31, X
    598c:	1d 97       	sbiw	r26, 0x0d	; 13
    598e:	07 80       	ldd	r0, Z+7	; 0x07
    5990:	f0 85       	ldd	r31, Z+8	; 0x08
    5992:	e0 2d       	mov	r30, r0
    5994:	d1 e2       	ldi	r29, 0x21	; 33
    5996:	82 34       	cpi	r24, 0x42	; 66
    5998:	9d 07       	cpc	r25, r29
    599a:	49 f0       	breq	.+18     	; 0x59ae <processSpiInterrupt+0x288>
    599c:	43 81       	ldd	r20, Z+3	; 0x03
    599e:	18 96       	adiw	r26, 0x08	; 8
    59a0:	ed 91       	ld	r30, X+
    59a2:	fc 91       	ld	r31, X
    59a4:	19 97       	sbiw	r26, 0x09	; 9
    59a6:	e8 0f       	add	r30, r24
    59a8:	f9 1f       	adc	r31, r25
    59aa:	40 83       	st	Z, r20
    59ac:	03 c0       	rjmp	.+6      	; 0x59b4 <processSpiInterrupt+0x28e>
    59ae:	83 81       	ldd	r24, Z+3	; 0x03
    59b0:	80 93 42 21 	sts	0x2142, r24
    59b4:	1c 96       	adiw	r26, 0x0c	; 12
    59b6:	ed 91       	ld	r30, X+
    59b8:	fc 91       	ld	r31, X
    59ba:	1d 97       	sbiw	r26, 0x0d	; 13
    59bc:	41 e2       	ldi	r20, 0x21	; 33
    59be:	22 34       	cpi	r18, 0x42	; 66
    59c0:	34 07       	cpc	r19, r20
    59c2:	59 f0       	breq	.+22     	; 0x59da <processSpiInterrupt+0x2b4>
    59c4:	c7 81       	ldd	r28, Z+7	; 0x07
    59c6:	d0 85       	ldd	r29, Z+8	; 0x08
    59c8:	18 96       	adiw	r26, 0x08	; 8
    59ca:	ed 91       	ld	r30, X+
    59cc:	fc 91       	ld	r31, X
    59ce:	19 97       	sbiw	r26, 0x09	; 9
    59d0:	e2 0f       	add	r30, r18
    59d2:	f3 1f       	adc	r31, r19
    59d4:	80 81       	ld	r24, Z
    59d6:	8b 83       	std	Y+3, r24	; 0x03
    59d8:	06 c0       	rjmp	.+12     	; 0x59e6 <processSpiInterrupt+0x2c0>
    59da:	07 80       	ldd	r0, Z+7	; 0x07
    59dc:	f0 85       	ldd	r31, Z+8	; 0x08
    59de:	e0 2d       	mov	r30, r0
    59e0:	e9 01       	movw	r28, r18
    59e2:	88 81       	ld	r24, Y
    59e4:	83 83       	std	Z+3, r24	; 0x03
    59e6:	18 96       	adiw	r26, 0x08	; 8
    59e8:	8d 91       	ld	r24, X+
    59ea:	9c 91       	ld	r25, X
    59ec:	19 97       	sbiw	r26, 0x09	; 9
    59ee:	01 96       	adiw	r24, 0x01	; 1
    59f0:	18 96       	adiw	r26, 0x08	; 8
    59f2:	8d 93       	st	X+, r24
    59f4:	9c 93       	st	X, r25
    59f6:	19 97       	sbiw	r26, 0x09	; 9
    59f8:	df 91       	pop	r29
    59fa:	cf 91       	pop	r28
    59fc:	1f 91       	pop	r17
    59fe:	0f 91       	pop	r16
    5a00:	08 95       	ret

00005a02 <findSpiElement>:
    5a02:	cf 93       	push	r28
    5a04:	df 93       	push	r29
    5a06:	0f 92       	push	r0
    5a08:	0f 92       	push	r0
    5a0a:	cd b7       	in	r28, 0x3d	; 61
    5a0c:	de b7       	in	r29, 0x3e	; 62
    5a0e:	e0 91 34 21 	lds	r30, 0x2134
    5a12:	f0 91 35 21 	lds	r31, 0x2135
    5a16:	22 81       	ldd	r18, Z+2	; 0x02
    5a18:	33 81       	ldd	r19, Z+3	; 0x03
    5a1a:	e0 91 34 21 	lds	r30, 0x2134
    5a1e:	f0 91 35 21 	lds	r31, 0x2135
    5a22:	0c c0       	rjmp	.+24     	; 0x5a3c <findSpiElement+0x3a>
    5a24:	e9 81       	ldd	r30, Y+1	; 0x01
    5a26:	fa 81       	ldd	r31, Y+2	; 0x02
    5a28:	01 90       	ld	r0, Z+
    5a2a:	f0 81       	ld	r31, Z
    5a2c:	e0 2d       	mov	r30, r0
    5a2e:	90 81       	ld	r25, Z
    5a30:	98 17       	cp	r25, r24
    5a32:	69 f0       	breq	.+26     	; 0x5a4e <findSpiElement+0x4c>
    5a34:	21 50       	subi	r18, 0x01	; 1
    5a36:	30 40       	sbci	r19, 0x00	; 0
    5a38:	e9 81       	ldd	r30, Y+1	; 0x01
    5a3a:	fa 81       	ldd	r31, Y+2	; 0x02
    5a3c:	40 85       	ldd	r20, Z+8	; 0x08
    5a3e:	51 85       	ldd	r21, Z+9	; 0x09
    5a40:	49 83       	std	Y+1, r20	; 0x01
    5a42:	5a 83       	std	Y+2, r21	; 0x02
    5a44:	12 16       	cp	r1, r18
    5a46:	13 06       	cpc	r1, r19
    5a48:	6c f3       	brlt	.-38     	; 0x5a24 <findSpiElement+0x22>
    5a4a:	e0 e0       	ldi	r30, 0x00	; 0
    5a4c:	f0 e0       	ldi	r31, 0x00	; 0
    5a4e:	cf 01       	movw	r24, r30
    5a50:	0f 90       	pop	r0
    5a52:	0f 90       	pop	r0
    5a54:	df 91       	pop	r29
    5a56:	cf 91       	pop	r28
    5a58:	08 95       	ret

00005a5a <processMasterSpiRxDmaInt>:
    5a5a:	0f 93       	push	r16
    5a5c:	1f 93       	push	r17
    5a5e:	cf 93       	push	r28
    5a60:	df 93       	push	r29
    5a62:	8c 01       	movw	r16, r24
    5a64:	eb 01       	movw	r28, r22
    5a66:	8c 81       	ldd	r24, Y+4	; 0x04
    5a68:	9d 81       	ldd	r25, Y+5	; 0x05
    5a6a:	21 e2       	ldi	r18, 0x21	; 33
    5a6c:	82 34       	cpi	r24, 0x42	; 66
    5a6e:	92 07       	cpc	r25, r18
    5a70:	19 f4       	brne	.+6      	; 0x5a78 <processMasterSpiRxDmaInt+0x1e>
    5a72:	81 e0       	ldi	r24, 0x01	; 1
    5a74:	90 e0       	ldi	r25, 0x00	; 0
    5a76:	05 c0       	rjmp	.+10     	; 0x5a82 <processMasterSpiRxDmaInt+0x28>
    5a78:	f8 01       	movw	r30, r16
    5a7a:	80 89       	ldd	r24, Z+16	; 0x10
    5a7c:	91 89       	ldd	r25, Z+17	; 0x11
    5a7e:	0e 94 da 4d 	call	0x9bb4	; 0x9bb4 <hal_getDmaTransferCount>
    5a82:	88 87       	std	Y+8, r24	; 0x08
    5a84:	99 87       	std	Y+9, r25	; 0x09
    5a86:	88 89       	ldd	r24, Y+16	; 0x10
    5a88:	88 23       	and	r24, r24
    5a8a:	09 f4       	brne	.+2      	; 0x5a8e <processMasterSpiRxDmaInt+0x34>
    5a8c:	79 c0       	rjmp	.+242    	; 0x5b80 <processMasterSpiRxDmaInt+0x126>
    5a8e:	8b 85       	ldd	r24, Y+11	; 0x0b
    5a90:	9a 85       	ldd	r25, Y+10	; 0x0a
    5a92:	95 30       	cpi	r25, 0x05	; 5
    5a94:	09 f4       	brne	.+2      	; 0x5a98 <processMasterSpiRxDmaInt+0x3e>
    5a96:	4a c0       	rjmp	.+148    	; 0x5b2c <processMasterSpiRxDmaInt+0xd2>
    5a98:	96 30       	cpi	r25, 0x06	; 6
    5a9a:	80 f4       	brcc	.+32     	; 0x5abc <processMasterSpiRxDmaInt+0x62>
    5a9c:	92 30       	cpi	r25, 0x02	; 2
    5a9e:	81 f1       	breq	.+96     	; 0x5b00 <processMasterSpiRxDmaInt+0xa6>
    5aa0:	93 30       	cpi	r25, 0x03	; 3
    5aa2:	30 f4       	brcc	.+12     	; 0x5ab0 <processMasterSpiRxDmaInt+0x56>
    5aa4:	99 23       	and	r25, r25
    5aa6:	e1 f0       	breq	.+56     	; 0x5ae0 <processMasterSpiRxDmaInt+0x86>
    5aa8:	91 30       	cpi	r25, 0x01	; 1
    5aaa:	09 f0       	breq	.+2      	; 0x5aae <processMasterSpiRxDmaInt+0x54>
    5aac:	69 c0       	rjmp	.+210    	; 0x5b80 <processMasterSpiRxDmaInt+0x126>
    5aae:	20 c0       	rjmp	.+64     	; 0x5af0 <processMasterSpiRxDmaInt+0x96>
    5ab0:	93 30       	cpi	r25, 0x03	; 3
    5ab2:	71 f1       	breq	.+92     	; 0x5b10 <processMasterSpiRxDmaInt+0xb6>
    5ab4:	94 30       	cpi	r25, 0x04	; 4
    5ab6:	09 f0       	breq	.+2      	; 0x5aba <processMasterSpiRxDmaInt+0x60>
    5ab8:	63 c0       	rjmp	.+198    	; 0x5b80 <processMasterSpiRxDmaInt+0x126>
    5aba:	31 c0       	rjmp	.+98     	; 0x5b1e <processMasterSpiRxDmaInt+0xc4>
    5abc:	98 30       	cpi	r25, 0x08	; 8
    5abe:	09 f4       	brne	.+2      	; 0x5ac2 <processMasterSpiRxDmaInt+0x68>
    5ac0:	4a c0       	rjmp	.+148    	; 0x5b56 <processMasterSpiRxDmaInt+0xfc>
    5ac2:	99 30       	cpi	r25, 0x09	; 9
    5ac4:	30 f4       	brcc	.+12     	; 0x5ad2 <processMasterSpiRxDmaInt+0x78>
    5ac6:	96 30       	cpi	r25, 0x06	; 6
    5ac8:	c1 f1       	breq	.+112    	; 0x5b3a <processMasterSpiRxDmaInt+0xe0>
    5aca:	97 30       	cpi	r25, 0x07	; 7
    5acc:	09 f0       	breq	.+2      	; 0x5ad0 <processMasterSpiRxDmaInt+0x76>
    5ace:	58 c0       	rjmp	.+176    	; 0x5b80 <processMasterSpiRxDmaInt+0x126>
    5ad0:	3b c0       	rjmp	.+118    	; 0x5b48 <processMasterSpiRxDmaInt+0xee>
    5ad2:	99 30       	cpi	r25, 0x09	; 9
    5ad4:	09 f4       	brne	.+2      	; 0x5ad8 <processMasterSpiRxDmaInt+0x7e>
    5ad6:	46 c0       	rjmp	.+140    	; 0x5b64 <processMasterSpiRxDmaInt+0x10a>
    5ad8:	9a 30       	cpi	r25, 0x0A	; 10
    5ada:	09 f0       	breq	.+2      	; 0x5ade <processMasterSpiRxDmaInt+0x84>
    5adc:	51 c0       	rjmp	.+162    	; 0x5b80 <processMasterSpiRxDmaInt+0x126>
    5ade:	49 c0       	rjmp	.+146    	; 0x5b72 <processMasterSpiRxDmaInt+0x118>
    5ae0:	90 91 00 06 	lds	r25, 0x0600
    5ae4:	98 23       	and	r25, r24
    5ae6:	09 f4       	brne	.+2      	; 0x5aea <processMasterSpiRxDmaInt+0x90>
    5ae8:	4b c0       	rjmp	.+150    	; 0x5b80 <processMasterSpiRxDmaInt+0x126>
    5aea:	e0 e0       	ldi	r30, 0x00	; 0
    5aec:	f6 e0       	ldi	r31, 0x06	; 6
    5aee:	47 c0       	rjmp	.+142    	; 0x5b7e <processMasterSpiRxDmaInt+0x124>
    5af0:	90 91 20 06 	lds	r25, 0x0620
    5af4:	98 23       	and	r25, r24
    5af6:	09 f4       	brne	.+2      	; 0x5afa <processMasterSpiRxDmaInt+0xa0>
    5af8:	43 c0       	rjmp	.+134    	; 0x5b80 <processMasterSpiRxDmaInt+0x126>
    5afa:	e0 e2       	ldi	r30, 0x20	; 32
    5afc:	f6 e0       	ldi	r31, 0x06	; 6
    5afe:	3f c0       	rjmp	.+126    	; 0x5b7e <processMasterSpiRxDmaInt+0x124>
    5b00:	90 91 40 06 	lds	r25, 0x0640
    5b04:	98 23       	and	r25, r24
    5b06:	09 f4       	brne	.+2      	; 0x5b0a <processMasterSpiRxDmaInt+0xb0>
    5b08:	3b c0       	rjmp	.+118    	; 0x5b80 <processMasterSpiRxDmaInt+0x126>
    5b0a:	e0 e4       	ldi	r30, 0x40	; 64
    5b0c:	f6 e0       	ldi	r31, 0x06	; 6
    5b0e:	37 c0       	rjmp	.+110    	; 0x5b7e <processMasterSpiRxDmaInt+0x124>
    5b10:	90 91 60 06 	lds	r25, 0x0660
    5b14:	98 23       	and	r25, r24
    5b16:	a1 f1       	breq	.+104    	; 0x5b80 <processMasterSpiRxDmaInt+0x126>
    5b18:	e0 e6       	ldi	r30, 0x60	; 96
    5b1a:	f6 e0       	ldi	r31, 0x06	; 6
    5b1c:	30 c0       	rjmp	.+96     	; 0x5b7e <processMasterSpiRxDmaInt+0x124>
    5b1e:	90 91 80 06 	lds	r25, 0x0680
    5b22:	98 23       	and	r25, r24
    5b24:	69 f1       	breq	.+90     	; 0x5b80 <processMasterSpiRxDmaInt+0x126>
    5b26:	e0 e8       	ldi	r30, 0x80	; 128
    5b28:	f6 e0       	ldi	r31, 0x06	; 6
    5b2a:	29 c0       	rjmp	.+82     	; 0x5b7e <processMasterSpiRxDmaInt+0x124>
    5b2c:	90 91 a0 06 	lds	r25, 0x06A0
    5b30:	98 23       	and	r25, r24
    5b32:	31 f1       	breq	.+76     	; 0x5b80 <processMasterSpiRxDmaInt+0x126>
    5b34:	e0 ea       	ldi	r30, 0xA0	; 160
    5b36:	f6 e0       	ldi	r31, 0x06	; 6
    5b38:	22 c0       	rjmp	.+68     	; 0x5b7e <processMasterSpiRxDmaInt+0x124>
    5b3a:	90 91 e0 06 	lds	r25, 0x06E0
    5b3e:	98 23       	and	r25, r24
    5b40:	f9 f0       	breq	.+62     	; 0x5b80 <processMasterSpiRxDmaInt+0x126>
    5b42:	e0 ee       	ldi	r30, 0xE0	; 224
    5b44:	f6 e0       	ldi	r31, 0x06	; 6
    5b46:	1b c0       	rjmp	.+54     	; 0x5b7e <processMasterSpiRxDmaInt+0x124>
    5b48:	90 91 00 07 	lds	r25, 0x0700
    5b4c:	98 23       	and	r25, r24
    5b4e:	c1 f0       	breq	.+48     	; 0x5b80 <processMasterSpiRxDmaInt+0x126>
    5b50:	e0 e0       	ldi	r30, 0x00	; 0
    5b52:	f7 e0       	ldi	r31, 0x07	; 7
    5b54:	14 c0       	rjmp	.+40     	; 0x5b7e <processMasterSpiRxDmaInt+0x124>
    5b56:	90 91 20 07 	lds	r25, 0x0720
    5b5a:	98 23       	and	r25, r24
    5b5c:	89 f0       	breq	.+34     	; 0x5b80 <processMasterSpiRxDmaInt+0x126>
    5b5e:	e0 e2       	ldi	r30, 0x20	; 32
    5b60:	f7 e0       	ldi	r31, 0x07	; 7
    5b62:	0d c0       	rjmp	.+26     	; 0x5b7e <processMasterSpiRxDmaInt+0x124>
    5b64:	90 91 c0 07 	lds	r25, 0x07C0
    5b68:	98 23       	and	r25, r24
    5b6a:	51 f0       	breq	.+20     	; 0x5b80 <processMasterSpiRxDmaInt+0x126>
    5b6c:	e0 ec       	ldi	r30, 0xC0	; 192
    5b6e:	f7 e0       	ldi	r31, 0x07	; 7
    5b70:	06 c0       	rjmp	.+12     	; 0x5b7e <processMasterSpiRxDmaInt+0x124>
    5b72:	90 91 e0 07 	lds	r25, 0x07E0
    5b76:	98 23       	and	r25, r24
    5b78:	19 f0       	breq	.+6      	; 0x5b80 <processMasterSpiRxDmaInt+0x126>
    5b7a:	e0 ee       	ldi	r30, 0xE0	; 224
    5b7c:	f7 e0       	ldi	r31, 0x07	; 7
    5b7e:	85 83       	std	Z+5, r24	; 0x05
    5b80:	f8 01       	movw	r30, r16
    5b82:	80 89       	ldd	r24, Z+16	; 0x10
    5b84:	91 89       	ldd	r25, Z+17	; 0x11
    5b86:	0e 94 3e 50 	call	0xa07c	; 0xa07c <hal_dmaDisableChannel>
    5b8a:	e8 81       	ld	r30, Y
    5b8c:	f9 81       	ldd	r31, Y+1	; 0x01
    5b8e:	30 97       	sbiw	r30, 0x00	; 0
    5b90:	29 f0       	breq	.+10     	; 0x5b9c <processMasterSpiRxDmaInt+0x142>
    5b92:	68 85       	ldd	r22, Y+8	; 0x08
    5b94:	79 85       	ldd	r23, Y+9	; 0x09
    5b96:	8c 81       	ldd	r24, Y+4	; 0x04
    5b98:	9d 81       	ldd	r25, Y+5	; 0x05
    5b9a:	19 95       	eicall
    5b9c:	f8 01       	movw	r30, r16
    5b9e:	11 86       	std	Z+9, r1	; 0x09
    5ba0:	18 86       	std	Y+8, r1	; 0x08
    5ba2:	19 86       	std	Y+9, r1	; 0x09
    5ba4:	df 91       	pop	r29
    5ba6:	cf 91       	pop	r28
    5ba8:	1f 91       	pop	r17
    5baa:	0f 91       	pop	r16
    5bac:	08 95       	ret

00005bae <masterSpiFRxDmaInt>:
    5bae:	83 e0       	ldi	r24, 0x03	; 3
    5bb0:	0e 94 01 2d 	call	0x5a02	; 0x5a02 <findSpiElement>
    5bb4:	00 97       	sbiw	r24, 0x00	; 0
    5bb6:	29 f0       	breq	.+10     	; 0x5bc2 <masterSpiFRxDmaInt+0x14>
    5bb8:	fc 01       	movw	r30, r24
    5bba:	62 85       	ldd	r22, Z+10	; 0x0a
    5bbc:	73 85       	ldd	r23, Z+11	; 0x0b
    5bbe:	0e 94 2d 2d 	call	0x5a5a	; 0x5a5a <processMasterSpiRxDmaInt>
    5bc2:	08 95       	ret

00005bc4 <masterSpiERxDmaInt>:
    5bc4:	82 e0       	ldi	r24, 0x02	; 2
    5bc6:	0e 94 01 2d 	call	0x5a02	; 0x5a02 <findSpiElement>
    5bca:	00 97       	sbiw	r24, 0x00	; 0
    5bcc:	29 f0       	breq	.+10     	; 0x5bd8 <masterSpiERxDmaInt+0x14>
    5bce:	fc 01       	movw	r30, r24
    5bd0:	62 85       	ldd	r22, Z+10	; 0x0a
    5bd2:	73 85       	ldd	r23, Z+11	; 0x0b
    5bd4:	0e 94 2d 2d 	call	0x5a5a	; 0x5a5a <processMasterSpiRxDmaInt>
    5bd8:	08 95       	ret

00005bda <masterSpiDRxDmaInt>:
    5bda:	81 e0       	ldi	r24, 0x01	; 1
    5bdc:	0e 94 01 2d 	call	0x5a02	; 0x5a02 <findSpiElement>
    5be0:	00 97       	sbiw	r24, 0x00	; 0
    5be2:	29 f0       	breq	.+10     	; 0x5bee <masterSpiDRxDmaInt+0x14>
    5be4:	fc 01       	movw	r30, r24
    5be6:	62 85       	ldd	r22, Z+10	; 0x0a
    5be8:	73 85       	ldd	r23, Z+11	; 0x0b
    5bea:	0e 94 2d 2d 	call	0x5a5a	; 0x5a5a <processMasterSpiRxDmaInt>
    5bee:	08 95       	ret

00005bf0 <masterSpiCRxDmaInt>:
    5bf0:	80 e0       	ldi	r24, 0x00	; 0
    5bf2:	0e 94 01 2d 	call	0x5a02	; 0x5a02 <findSpiElement>
    5bf6:	00 97       	sbiw	r24, 0x00	; 0
    5bf8:	29 f0       	breq	.+10     	; 0x5c04 <masterSpiCRxDmaInt+0x14>
    5bfa:	fc 01       	movw	r30, r24
    5bfc:	62 85       	ldd	r22, Z+10	; 0x0a
    5bfe:	73 85       	ldd	r23, Z+11	; 0x0b
    5c00:	0e 94 2d 2d 	call	0x5a5a	; 0x5a5a <processMasterSpiRxDmaInt>
    5c04:	08 95       	ret

00005c06 <processSlaveSpiChipSelectInt.isra.0>:
    5c06:	0f 93       	push	r16
    5c08:	1f 93       	push	r17
    5c0a:	cf 93       	push	r28
    5c0c:	df 93       	push	r29
    5c0e:	8c 01       	movw	r16, r24
    5c10:	fc 01       	movw	r30, r24
    5c12:	c2 85       	ldd	r28, Z+10	; 0x0a
    5c14:	d3 85       	ldd	r29, Z+11	; 0x0b
    5c16:	80 89       	ldd	r24, Z+16	; 0x10
    5c18:	91 89       	ldd	r25, Z+17	; 0x11
    5c1a:	18 16       	cp	r1, r24
    5c1c:	19 06       	cpc	r1, r25
    5c1e:	ac f4       	brge	.+42     	; 0x5c4a <processSlaveSpiChipSelectInt.isra.0+0x44>
    5c20:	8c 81       	ldd	r24, Y+4	; 0x04
    5c22:	9d 81       	ldd	r25, Y+5	; 0x05
    5c24:	f1 e2       	ldi	r31, 0x21	; 33
    5c26:	82 34       	cpi	r24, 0x42	; 66
    5c28:	9f 07       	cpc	r25, r31
    5c2a:	31 f4       	brne	.+12     	; 0x5c38 <processSlaveSpiChipSelectInt.isra.0+0x32>
    5c2c:	f8 01       	movw	r30, r16
    5c2e:	80 89       	ldd	r24, Z+16	; 0x10
    5c30:	91 89       	ldd	r25, Z+17	; 0x11
    5c32:	0e 94 da 4d 	call	0x9bb4	; 0x9bb4 <hal_getDmaTransferCount>
    5c36:	02 c0       	rjmp	.+4      	; 0x5c3c <processSlaveSpiChipSelectInt.isra.0+0x36>
    5c38:	81 e0       	ldi	r24, 0x01	; 1
    5c3a:	90 e0       	ldi	r25, 0x00	; 0
    5c3c:	88 87       	std	Y+8, r24	; 0x08
    5c3e:	99 87       	std	Y+9, r25	; 0x09
    5c40:	f8 01       	movw	r30, r16
    5c42:	80 89       	ldd	r24, Z+16	; 0x10
    5c44:	91 89       	ldd	r25, Z+17	; 0x11
    5c46:	0e 94 3e 50 	call	0xa07c	; 0xa07c <hal_dmaDisableChannel>
    5c4a:	68 85       	ldd	r22, Y+8	; 0x08
    5c4c:	79 85       	ldd	r23, Y+9	; 0x09
    5c4e:	61 15       	cp	r22, r1
    5c50:	71 05       	cpc	r23, r1
    5c52:	59 f0       	breq	.+22     	; 0x5c6a <processSlaveSpiChipSelectInt.isra.0+0x64>
    5c54:	e8 81       	ld	r30, Y
    5c56:	f9 81       	ldd	r31, Y+1	; 0x01
    5c58:	30 97       	sbiw	r30, 0x00	; 0
    5c5a:	19 f0       	breq	.+6      	; 0x5c62 <processSlaveSpiChipSelectInt.isra.0+0x5c>
    5c5c:	8c 81       	ldd	r24, Y+4	; 0x04
    5c5e:	9d 81       	ldd	r25, Y+5	; 0x05
    5c60:	19 95       	eicall
    5c62:	f8 01       	movw	r30, r16
    5c64:	11 86       	std	Z+9, r1	; 0x09
    5c66:	18 86       	std	Y+8, r1	; 0x08
    5c68:	19 86       	std	Y+9, r1	; 0x09
    5c6a:	df 91       	pop	r29
    5c6c:	cf 91       	pop	r28
    5c6e:	1f 91       	pop	r17
    5c70:	0f 91       	pop	r16
    5c72:	08 95       	ret

00005c74 <slaveSpiFChipSelectInt>:
    5c74:	83 e0       	ldi	r24, 0x03	; 3
    5c76:	0e 94 01 2d 	call	0x5a02	; 0x5a02 <findSpiElement>
    5c7a:	00 97       	sbiw	r24, 0x00	; 0
    5c7c:	31 f0       	breq	.+12     	; 0x5c8a <slaveSpiFChipSelectInt+0x16>
    5c7e:	fc 01       	movw	r30, r24
    5c80:	26 81       	ldd	r18, Z+6	; 0x06
    5c82:	21 30       	cpi	r18, 0x01	; 1
    5c84:	11 f4       	brne	.+4      	; 0x5c8a <slaveSpiFChipSelectInt+0x16>
    5c86:	0e 94 03 2e 	call	0x5c06	; 0x5c06 <processSlaveSpiChipSelectInt.isra.0>
    5c8a:	08 95       	ret

00005c8c <slaveSpiEChipSelectInt>:
    5c8c:	82 e0       	ldi	r24, 0x02	; 2
    5c8e:	0e 94 01 2d 	call	0x5a02	; 0x5a02 <findSpiElement>
    5c92:	00 97       	sbiw	r24, 0x00	; 0
    5c94:	31 f0       	breq	.+12     	; 0x5ca2 <slaveSpiEChipSelectInt+0x16>
    5c96:	fc 01       	movw	r30, r24
    5c98:	26 81       	ldd	r18, Z+6	; 0x06
    5c9a:	21 30       	cpi	r18, 0x01	; 1
    5c9c:	11 f4       	brne	.+4      	; 0x5ca2 <slaveSpiEChipSelectInt+0x16>
    5c9e:	0e 94 03 2e 	call	0x5c06	; 0x5c06 <processSlaveSpiChipSelectInt.isra.0>
    5ca2:	08 95       	ret

00005ca4 <slaveSpiDChipSelectInt>:
    5ca4:	81 e0       	ldi	r24, 0x01	; 1
    5ca6:	0e 94 01 2d 	call	0x5a02	; 0x5a02 <findSpiElement>
    5caa:	00 97       	sbiw	r24, 0x00	; 0
    5cac:	31 f0       	breq	.+12     	; 0x5cba <slaveSpiDChipSelectInt+0x16>
    5cae:	fc 01       	movw	r30, r24
    5cb0:	26 81       	ldd	r18, Z+6	; 0x06
    5cb2:	21 30       	cpi	r18, 0x01	; 1
    5cb4:	11 f4       	brne	.+4      	; 0x5cba <slaveSpiDChipSelectInt+0x16>
    5cb6:	0e 94 03 2e 	call	0x5c06	; 0x5c06 <processSlaveSpiChipSelectInt.isra.0>
    5cba:	08 95       	ret

00005cbc <slaveSpiCChipSelectInt>:
    5cbc:	80 e0       	ldi	r24, 0x00	; 0
    5cbe:	0e 94 01 2d 	call	0x5a02	; 0x5a02 <findSpiElement>
    5cc2:	00 97       	sbiw	r24, 0x00	; 0
    5cc4:	31 f0       	breq	.+12     	; 0x5cd2 <slaveSpiCChipSelectInt+0x16>
    5cc6:	fc 01       	movw	r30, r24
    5cc8:	26 81       	ldd	r18, Z+6	; 0x06
    5cca:	21 30       	cpi	r18, 0x01	; 1
    5ccc:	11 f4       	brne	.+4      	; 0x5cd2 <slaveSpiCChipSelectInt+0x16>
    5cce:	0e 94 03 2e 	call	0x5c06	; 0x5c06 <processSlaveSpiChipSelectInt.isra.0>
    5cd2:	08 95       	ret

00005cd4 <__vector_24>:
    5cd4:	1f 92       	push	r1
    5cd6:	0f 92       	push	r0
    5cd8:	0f b6       	in	r0, 0x3f	; 63
    5cda:	0f 92       	push	r0
    5cdc:	08 b6       	in	r0, 0x38	; 56
    5cde:	0f 92       	push	r0
    5ce0:	09 b6       	in	r0, 0x39	; 57
    5ce2:	0f 92       	push	r0
    5ce4:	0b b6       	in	r0, 0x3b	; 59
    5ce6:	0f 92       	push	r0
    5ce8:	11 24       	eor	r1, r1
    5cea:	2f 93       	push	r18
    5cec:	3f 93       	push	r19
    5cee:	4f 93       	push	r20
    5cf0:	5f 93       	push	r21
    5cf2:	6f 93       	push	r22
    5cf4:	7f 93       	push	r23
    5cf6:	8f 93       	push	r24
    5cf8:	9f 93       	push	r25
    5cfa:	af 93       	push	r26
    5cfc:	bf 93       	push	r27
    5cfe:	ef 93       	push	r30
    5d00:	ff 93       	push	r31
    5d02:	80 e0       	ldi	r24, 0x00	; 0
    5d04:	0e 94 01 2d 	call	0x5a02	; 0x5a02 <findSpiElement>
    5d08:	00 97       	sbiw	r24, 0x00	; 0
    5d0a:	29 f0       	breq	.+10     	; 0x5d16 <__vector_24+0x42>
    5d0c:	fc 01       	movw	r30, r24
    5d0e:	62 85       	ldd	r22, Z+10	; 0x0a
    5d10:	73 85       	ldd	r23, Z+11	; 0x0b
    5d12:	0e 94 93 2b 	call	0x5726	; 0x5726 <processSpiInterrupt>
    5d16:	ff 91       	pop	r31
    5d18:	ef 91       	pop	r30
    5d1a:	bf 91       	pop	r27
    5d1c:	af 91       	pop	r26
    5d1e:	9f 91       	pop	r25
    5d20:	8f 91       	pop	r24
    5d22:	7f 91       	pop	r23
    5d24:	6f 91       	pop	r22
    5d26:	5f 91       	pop	r21
    5d28:	4f 91       	pop	r20
    5d2a:	3f 91       	pop	r19
    5d2c:	2f 91       	pop	r18
    5d2e:	0f 90       	pop	r0
    5d30:	0b be       	out	0x3b, r0	; 59
    5d32:	0f 90       	pop	r0
    5d34:	09 be       	out	0x39, r0	; 57
    5d36:	0f 90       	pop	r0
    5d38:	08 be       	out	0x38, r0	; 56
    5d3a:	0f 90       	pop	r0
    5d3c:	0f be       	out	0x3f, r0	; 63
    5d3e:	0f 90       	pop	r0
    5d40:	1f 90       	pop	r1
    5d42:	18 95       	reti

00005d44 <__vector_87>:
    5d44:	1f 92       	push	r1
    5d46:	0f 92       	push	r0
    5d48:	0f b6       	in	r0, 0x3f	; 63
    5d4a:	0f 92       	push	r0
    5d4c:	08 b6       	in	r0, 0x38	; 56
    5d4e:	0f 92       	push	r0
    5d50:	09 b6       	in	r0, 0x39	; 57
    5d52:	0f 92       	push	r0
    5d54:	0b b6       	in	r0, 0x3b	; 59
    5d56:	0f 92       	push	r0
    5d58:	11 24       	eor	r1, r1
    5d5a:	2f 93       	push	r18
    5d5c:	3f 93       	push	r19
    5d5e:	4f 93       	push	r20
    5d60:	5f 93       	push	r21
    5d62:	6f 93       	push	r22
    5d64:	7f 93       	push	r23
    5d66:	8f 93       	push	r24
    5d68:	9f 93       	push	r25
    5d6a:	af 93       	push	r26
    5d6c:	bf 93       	push	r27
    5d6e:	ef 93       	push	r30
    5d70:	ff 93       	push	r31
    5d72:	81 e0       	ldi	r24, 0x01	; 1
    5d74:	0e 94 01 2d 	call	0x5a02	; 0x5a02 <findSpiElement>
    5d78:	00 97       	sbiw	r24, 0x00	; 0
    5d7a:	29 f0       	breq	.+10     	; 0x5d86 <__vector_87+0x42>
    5d7c:	fc 01       	movw	r30, r24
    5d7e:	62 85       	ldd	r22, Z+10	; 0x0a
    5d80:	73 85       	ldd	r23, Z+11	; 0x0b
    5d82:	0e 94 93 2b 	call	0x5726	; 0x5726 <processSpiInterrupt>
    5d86:	ff 91       	pop	r31
    5d88:	ef 91       	pop	r30
    5d8a:	bf 91       	pop	r27
    5d8c:	af 91       	pop	r26
    5d8e:	9f 91       	pop	r25
    5d90:	8f 91       	pop	r24
    5d92:	7f 91       	pop	r23
    5d94:	6f 91       	pop	r22
    5d96:	5f 91       	pop	r21
    5d98:	4f 91       	pop	r20
    5d9a:	3f 91       	pop	r19
    5d9c:	2f 91       	pop	r18
    5d9e:	0f 90       	pop	r0
    5da0:	0b be       	out	0x3b, r0	; 59
    5da2:	0f 90       	pop	r0
    5da4:	09 be       	out	0x39, r0	; 57
    5da6:	0f 90       	pop	r0
    5da8:	08 be       	out	0x38, r0	; 56
    5daa:	0f 90       	pop	r0
    5dac:	0f be       	out	0x3f, r0	; 63
    5dae:	0f 90       	pop	r0
    5db0:	1f 90       	pop	r1
    5db2:	18 95       	reti

00005db4 <__vector_57>:
    5db4:	1f 92       	push	r1
    5db6:	0f 92       	push	r0
    5db8:	0f b6       	in	r0, 0x3f	; 63
    5dba:	0f 92       	push	r0
    5dbc:	08 b6       	in	r0, 0x38	; 56
    5dbe:	0f 92       	push	r0
    5dc0:	09 b6       	in	r0, 0x39	; 57
    5dc2:	0f 92       	push	r0
    5dc4:	0b b6       	in	r0, 0x3b	; 59
    5dc6:	0f 92       	push	r0
    5dc8:	11 24       	eor	r1, r1
    5dca:	2f 93       	push	r18
    5dcc:	3f 93       	push	r19
    5dce:	4f 93       	push	r20
    5dd0:	5f 93       	push	r21
    5dd2:	6f 93       	push	r22
    5dd4:	7f 93       	push	r23
    5dd6:	8f 93       	push	r24
    5dd8:	9f 93       	push	r25
    5dda:	af 93       	push	r26
    5ddc:	bf 93       	push	r27
    5dde:	ef 93       	push	r30
    5de0:	ff 93       	push	r31
    5de2:	82 e0       	ldi	r24, 0x02	; 2
    5de4:	0e 94 01 2d 	call	0x5a02	; 0x5a02 <findSpiElement>
    5de8:	00 97       	sbiw	r24, 0x00	; 0
    5dea:	29 f0       	breq	.+10     	; 0x5df6 <__vector_57+0x42>
    5dec:	fc 01       	movw	r30, r24
    5dee:	62 85       	ldd	r22, Z+10	; 0x0a
    5df0:	73 85       	ldd	r23, Z+11	; 0x0b
    5df2:	0e 94 93 2b 	call	0x5726	; 0x5726 <processSpiInterrupt>
    5df6:	ff 91       	pop	r31
    5df8:	ef 91       	pop	r30
    5dfa:	bf 91       	pop	r27
    5dfc:	af 91       	pop	r26
    5dfe:	9f 91       	pop	r25
    5e00:	8f 91       	pop	r24
    5e02:	7f 91       	pop	r23
    5e04:	6f 91       	pop	r22
    5e06:	5f 91       	pop	r21
    5e08:	4f 91       	pop	r20
    5e0a:	3f 91       	pop	r19
    5e0c:	2f 91       	pop	r18
    5e0e:	0f 90       	pop	r0
    5e10:	0b be       	out	0x3b, r0	; 59
    5e12:	0f 90       	pop	r0
    5e14:	09 be       	out	0x39, r0	; 57
    5e16:	0f 90       	pop	r0
    5e18:	08 be       	out	0x38, r0	; 56
    5e1a:	0f 90       	pop	r0
    5e1c:	0f be       	out	0x3f, r0	; 63
    5e1e:	0f 90       	pop	r0
    5e20:	1f 90       	pop	r1
    5e22:	18 95       	reti

00005e24 <__vector_118>:
    5e24:	1f 92       	push	r1
    5e26:	0f 92       	push	r0
    5e28:	0f b6       	in	r0, 0x3f	; 63
    5e2a:	0f 92       	push	r0
    5e2c:	08 b6       	in	r0, 0x38	; 56
    5e2e:	0f 92       	push	r0
    5e30:	09 b6       	in	r0, 0x39	; 57
    5e32:	0f 92       	push	r0
    5e34:	0b b6       	in	r0, 0x3b	; 59
    5e36:	0f 92       	push	r0
    5e38:	11 24       	eor	r1, r1
    5e3a:	2f 93       	push	r18
    5e3c:	3f 93       	push	r19
    5e3e:	4f 93       	push	r20
    5e40:	5f 93       	push	r21
    5e42:	6f 93       	push	r22
    5e44:	7f 93       	push	r23
    5e46:	8f 93       	push	r24
    5e48:	9f 93       	push	r25
    5e4a:	af 93       	push	r26
    5e4c:	bf 93       	push	r27
    5e4e:	ef 93       	push	r30
    5e50:	ff 93       	push	r31
    5e52:	83 e0       	ldi	r24, 0x03	; 3
    5e54:	0e 94 01 2d 	call	0x5a02	; 0x5a02 <findSpiElement>
    5e58:	00 97       	sbiw	r24, 0x00	; 0
    5e5a:	29 f0       	breq	.+10     	; 0x5e66 <__vector_118+0x42>
    5e5c:	fc 01       	movw	r30, r24
    5e5e:	62 85       	ldd	r22, Z+10	; 0x0a
    5e60:	73 85       	ldd	r23, Z+11	; 0x0b
    5e62:	0e 94 93 2b 	call	0x5726	; 0x5726 <processSpiInterrupt>
    5e66:	ff 91       	pop	r31
    5e68:	ef 91       	pop	r30
    5e6a:	bf 91       	pop	r27
    5e6c:	af 91       	pop	r26
    5e6e:	9f 91       	pop	r25
    5e70:	8f 91       	pop	r24
    5e72:	7f 91       	pop	r23
    5e74:	6f 91       	pop	r22
    5e76:	5f 91       	pop	r21
    5e78:	4f 91       	pop	r20
    5e7a:	3f 91       	pop	r19
    5e7c:	2f 91       	pop	r18
    5e7e:	0f 90       	pop	r0
    5e80:	0b be       	out	0x3b, r0	; 59
    5e82:	0f 90       	pop	r0
    5e84:	09 be       	out	0x39, r0	; 57
    5e86:	0f 90       	pop	r0
    5e88:	08 be       	out	0x38, r0	; 56
    5e8a:	0f 90       	pop	r0
    5e8c:	0f be       	out	0x3f, r0	; 63
    5e8e:	0f 90       	pop	r0
    5e90:	1f 90       	pop	r1
    5e92:	18 95       	reti

00005e94 <hal_spiConfCallBack>:
    5e94:	cf 93       	push	r28
    5e96:	df 93       	push	r29
    5e98:	00 d0       	rcall	.+0      	; 0x5e9a <hal_spiConfCallBack+0x6>
    5e9a:	cd b7       	in	r28, 0x3d	; 61
    5e9c:	de b7       	in	r29, 0x3e	; 62
    5e9e:	8a 83       	std	Y+2, r24	; 0x02
    5ea0:	9b 83       	std	Y+3, r25	; 0x03
    5ea2:	8f b7       	in	r24, 0x3f	; 63
    5ea4:	89 83       	std	Y+1, r24	; 0x01
    5ea6:	f8 94       	cli
    5ea8:	ea 81       	ldd	r30, Y+2	; 0x02
    5eaa:	fb 81       	ldd	r31, Y+3	; 0x03
    5eac:	80 91 26 21 	lds	r24, 0x2126
    5eb0:	90 91 27 21 	lds	r25, 0x2127
    5eb4:	24 81       	ldd	r18, Z+4	; 0x04
    5eb6:	35 81       	ldd	r19, Z+5	; 0x05
    5eb8:	28 17       	cp	r18, r24
    5eba:	39 07       	cpc	r19, r25
    5ebc:	21 f0       	breq	.+8      	; 0x5ec6 <hal_spiConfCallBack+0x32>
    5ebe:	89 81       	ldd	r24, Y+1	; 0x01
    5ec0:	8f bf       	out	0x3f, r24	; 63
    5ec2:	8e ef       	ldi	r24, 0xFE	; 254
    5ec4:	15 c0       	rjmp	.+42     	; 0x5ef0 <hal_spiConfCallBack+0x5c>
    5ec6:	ea 81       	ldd	r30, Y+2	; 0x02
    5ec8:	fb 81       	ldd	r31, Y+3	; 0x03
    5eca:	01 90       	ld	r0, Z+
    5ecc:	f0 81       	ld	r31, Z
    5ece:	e0 2d       	mov	r30, r0
    5ed0:	a4 85       	ldd	r26, Z+12	; 0x0c
    5ed2:	b5 85       	ldd	r27, Z+13	; 0x0d
    5ed4:	19 96       	adiw	r26, 0x09	; 9
    5ed6:	8c 91       	ld	r24, X
    5ed8:	19 97       	sbiw	r26, 0x09	; 9
    5eda:	88 23       	and	r24, r24
    5edc:	21 f0       	breq	.+8      	; 0x5ee6 <hal_spiConfCallBack+0x52>
    5ede:	89 81       	ldd	r24, Y+1	; 0x01
    5ee0:	8f bf       	out	0x3f, r24	; 63
    5ee2:	84 ef       	ldi	r24, 0xF4	; 244
    5ee4:	05 c0       	rjmp	.+10     	; 0x5ef0 <hal_spiConfCallBack+0x5c>
    5ee6:	60 83       	st	Z, r22
    5ee8:	71 83       	std	Z+1, r23	; 0x01
    5eea:	89 81       	ldd	r24, Y+1	; 0x01
    5eec:	8f bf       	out	0x3f, r24	; 63
    5eee:	80 e0       	ldi	r24, 0x00	; 0
    5ef0:	23 96       	adiw	r28, 0x03	; 3
    5ef2:	cd bf       	out	0x3d, r28	; 61
    5ef4:	de bf       	out	0x3e, r29	; 62
    5ef6:	df 91       	pop	r29
    5ef8:	cf 91       	pop	r28
    5efa:	08 95       	ret

00005efc <hal_spiSetChipSelect>:
    5efc:	cf 93       	push	r28
    5efe:	df 93       	push	r29
    5f00:	00 d0       	rcall	.+0      	; 0x5f02 <hal_spiSetChipSelect+0x6>
    5f02:	cd b7       	in	r28, 0x3d	; 61
    5f04:	de b7       	in	r29, 0x3e	; 62
    5f06:	8a 83       	std	Y+2, r24	; 0x02
    5f08:	9b 83       	std	Y+3, r25	; 0x03
    5f0a:	8f b7       	in	r24, 0x3f	; 63
    5f0c:	89 83       	std	Y+1, r24	; 0x01
    5f0e:	f8 94       	cli
    5f10:	ea 81       	ldd	r30, Y+2	; 0x02
    5f12:	fb 81       	ldd	r31, Y+3	; 0x03
    5f14:	80 91 26 21 	lds	r24, 0x2126
    5f18:	90 91 27 21 	lds	r25, 0x2127
    5f1c:	24 81       	ldd	r18, Z+4	; 0x04
    5f1e:	35 81       	ldd	r19, Z+5	; 0x05
    5f20:	28 17       	cp	r18, r24
    5f22:	39 07       	cpc	r19, r25
    5f24:	21 f0       	breq	.+8      	; 0x5f2e <hal_spiSetChipSelect+0x32>
    5f26:	89 81       	ldd	r24, Y+1	; 0x01
    5f28:	8f bf       	out	0x3f, r24	; 63
    5f2a:	8e ef       	ldi	r24, 0xFE	; 254
    5f2c:	2e c1       	rjmp	.+604    	; 0x618a <hal_spiSetChipSelect+0x28e>
    5f2e:	ea 81       	ldd	r30, Y+2	; 0x02
    5f30:	fb 81       	ldd	r31, Y+3	; 0x03
    5f32:	01 90       	ld	r0, Z+
    5f34:	f0 81       	ld	r31, Z
    5f36:	e0 2d       	mov	r30, r0
    5f38:	24 85       	ldd	r18, Z+12	; 0x0c
    5f3a:	35 85       	ldd	r19, Z+13	; 0x0d
    5f3c:	d9 01       	movw	r26, r18
    5f3e:	19 96       	adiw	r26, 0x09	; 9
    5f40:	8c 91       	ld	r24, X
    5f42:	19 97       	sbiw	r26, 0x09	; 9
    5f44:	88 23       	and	r24, r24
    5f46:	59 f0       	breq	.+22     	; 0x5f5e <hal_spiSetChipSelect+0x62>
    5f48:	1a 96       	adiw	r26, 0x0a	; 10
    5f4a:	8d 91       	ld	r24, X+
    5f4c:	9c 91       	ld	r25, X
    5f4e:	1b 97       	sbiw	r26, 0x0b	; 11
    5f50:	8e 17       	cp	r24, r30
    5f52:	9f 07       	cpc	r25, r31
    5f54:	21 f0       	breq	.+8      	; 0x5f5e <hal_spiSetChipSelect+0x62>
    5f56:	89 81       	ldd	r24, Y+1	; 0x01
    5f58:	8f bf       	out	0x3f, r24	; 63
    5f5a:	84 ef       	ldi	r24, 0xF4	; 244
    5f5c:	16 c1       	rjmp	.+556    	; 0x618a <hal_spiSetChipSelect+0x28e>
    5f5e:	d9 01       	movw	r26, r18
    5f60:	17 96       	adiw	r26, 0x07	; 7
    5f62:	8d 91       	ld	r24, X+
    5f64:	9c 91       	ld	r25, X
    5f66:	18 97       	sbiw	r26, 0x08	; 8
    5f68:	dc 01       	movw	r26, r24
    5f6a:	11 96       	adiw	r26, 0x01	; 1
    5f6c:	1c 92       	st	X, r1
    5f6e:	11 97       	sbiw	r26, 0x01	; 1
    5f70:	66 23       	and	r22, r22
    5f72:	09 f0       	breq	.+2      	; 0x5f76 <hal_spiSetChipSelect+0x7a>
    5f74:	8c c0       	rjmp	.+280    	; 0x608e <hal_spiSetChipSelect+0x192>
    5f76:	81 e0       	ldi	r24, 0x01	; 1
    5f78:	d9 01       	movw	r26, r18
    5f7a:	19 96       	adiw	r26, 0x09	; 9
    5f7c:	8c 93       	st	X, r24
    5f7e:	19 97       	sbiw	r26, 0x09	; 9
    5f80:	1a 96       	adiw	r26, 0x0a	; 10
    5f82:	ed 93       	st	X+, r30
    5f84:	fc 93       	st	X, r31
    5f86:	1b 97       	sbiw	r26, 0x0b	; 11
    5f88:	83 85       	ldd	r24, Z+11	; 0x0b
    5f8a:	92 85       	ldd	r25, Z+10	; 0x0a
    5f8c:	95 30       	cpi	r25, 0x05	; 5
    5f8e:	09 f4       	brne	.+2      	; 0x5f92 <hal_spiSetChipSelect+0x96>
    5f90:	4d c0       	rjmp	.+154    	; 0x602c <hal_spiSetChipSelect+0x130>
    5f92:	96 30       	cpi	r25, 0x06	; 6
    5f94:	80 f4       	brcc	.+32     	; 0x5fb6 <hal_spiSetChipSelect+0xba>
    5f96:	92 30       	cpi	r25, 0x02	; 2
    5f98:	89 f1       	breq	.+98     	; 0x5ffc <hal_spiSetChipSelect+0x100>
    5f9a:	93 30       	cpi	r25, 0x03	; 3
    5f9c:	30 f4       	brcc	.+12     	; 0x5faa <hal_spiSetChipSelect+0xae>
    5f9e:	99 23       	and	r25, r25
    5fa0:	e9 f0       	breq	.+58     	; 0x5fdc <hal_spiSetChipSelect+0xe0>
    5fa2:	91 30       	cpi	r25, 0x01	; 1
    5fa4:	09 f0       	breq	.+2      	; 0x5fa8 <hal_spiSetChipSelect+0xac>
    5fa6:	ee c0       	rjmp	.+476    	; 0x6184 <hal_spiSetChipSelect+0x288>
    5fa8:	21 c0       	rjmp	.+66     	; 0x5fec <hal_spiSetChipSelect+0xf0>
    5faa:	93 30       	cpi	r25, 0x03	; 3
    5fac:	79 f1       	breq	.+94     	; 0x600c <hal_spiSetChipSelect+0x110>
    5fae:	94 30       	cpi	r25, 0x04	; 4
    5fb0:	09 f0       	breq	.+2      	; 0x5fb4 <hal_spiSetChipSelect+0xb8>
    5fb2:	e8 c0       	rjmp	.+464    	; 0x6184 <hal_spiSetChipSelect+0x288>
    5fb4:	33 c0       	rjmp	.+102    	; 0x601c <hal_spiSetChipSelect+0x120>
    5fb6:	98 30       	cpi	r25, 0x08	; 8
    5fb8:	09 f4       	brne	.+2      	; 0x5fbc <hal_spiSetChipSelect+0xc0>
    5fba:	50 c0       	rjmp	.+160    	; 0x605c <hal_spiSetChipSelect+0x160>
    5fbc:	99 30       	cpi	r25, 0x09	; 9
    5fbe:	38 f4       	brcc	.+14     	; 0x5fce <hal_spiSetChipSelect+0xd2>
    5fc0:	96 30       	cpi	r25, 0x06	; 6
    5fc2:	09 f4       	brne	.+2      	; 0x5fc6 <hal_spiSetChipSelect+0xca>
    5fc4:	3b c0       	rjmp	.+118    	; 0x603c <hal_spiSetChipSelect+0x140>
    5fc6:	97 30       	cpi	r25, 0x07	; 7
    5fc8:	09 f0       	breq	.+2      	; 0x5fcc <hal_spiSetChipSelect+0xd0>
    5fca:	dc c0       	rjmp	.+440    	; 0x6184 <hal_spiSetChipSelect+0x288>
    5fcc:	3f c0       	rjmp	.+126    	; 0x604c <hal_spiSetChipSelect+0x150>
    5fce:	99 30       	cpi	r25, 0x09	; 9
    5fd0:	09 f4       	brne	.+2      	; 0x5fd4 <hal_spiSetChipSelect+0xd8>
    5fd2:	4c c0       	rjmp	.+152    	; 0x606c <hal_spiSetChipSelect+0x170>
    5fd4:	9a 30       	cpi	r25, 0x0A	; 10
    5fd6:	09 f0       	breq	.+2      	; 0x5fda <hal_spiSetChipSelect+0xde>
    5fd8:	d5 c0       	rjmp	.+426    	; 0x6184 <hal_spiSetChipSelect+0x288>
    5fda:	50 c0       	rjmp	.+160    	; 0x607c <hal_spiSetChipSelect+0x180>
    5fdc:	90 91 00 06 	lds	r25, 0x0600
    5fe0:	98 23       	and	r25, r24
    5fe2:	09 f4       	brne	.+2      	; 0x5fe6 <hal_spiSetChipSelect+0xea>
    5fe4:	cf c0       	rjmp	.+414    	; 0x6184 <hal_spiSetChipSelect+0x288>
    5fe6:	e0 e0       	ldi	r30, 0x00	; 0
    5fe8:	f6 e0       	ldi	r31, 0x06	; 6
    5fea:	4f c0       	rjmp	.+158    	; 0x608a <hal_spiSetChipSelect+0x18e>
    5fec:	90 91 20 06 	lds	r25, 0x0620
    5ff0:	98 23       	and	r25, r24
    5ff2:	09 f4       	brne	.+2      	; 0x5ff6 <hal_spiSetChipSelect+0xfa>
    5ff4:	c7 c0       	rjmp	.+398    	; 0x6184 <hal_spiSetChipSelect+0x288>
    5ff6:	e0 e2       	ldi	r30, 0x20	; 32
    5ff8:	f6 e0       	ldi	r31, 0x06	; 6
    5ffa:	47 c0       	rjmp	.+142    	; 0x608a <hal_spiSetChipSelect+0x18e>
    5ffc:	90 91 40 06 	lds	r25, 0x0640
    6000:	98 23       	and	r25, r24
    6002:	09 f4       	brne	.+2      	; 0x6006 <hal_spiSetChipSelect+0x10a>
    6004:	bf c0       	rjmp	.+382    	; 0x6184 <hal_spiSetChipSelect+0x288>
    6006:	e0 e4       	ldi	r30, 0x40	; 64
    6008:	f6 e0       	ldi	r31, 0x06	; 6
    600a:	3f c0       	rjmp	.+126    	; 0x608a <hal_spiSetChipSelect+0x18e>
    600c:	90 91 60 06 	lds	r25, 0x0660
    6010:	98 23       	and	r25, r24
    6012:	09 f4       	brne	.+2      	; 0x6016 <hal_spiSetChipSelect+0x11a>
    6014:	b7 c0       	rjmp	.+366    	; 0x6184 <hal_spiSetChipSelect+0x288>
    6016:	e0 e6       	ldi	r30, 0x60	; 96
    6018:	f6 e0       	ldi	r31, 0x06	; 6
    601a:	37 c0       	rjmp	.+110    	; 0x608a <hal_spiSetChipSelect+0x18e>
    601c:	90 91 80 06 	lds	r25, 0x0680
    6020:	98 23       	and	r25, r24
    6022:	09 f4       	brne	.+2      	; 0x6026 <hal_spiSetChipSelect+0x12a>
    6024:	af c0       	rjmp	.+350    	; 0x6184 <hal_spiSetChipSelect+0x288>
    6026:	e0 e8       	ldi	r30, 0x80	; 128
    6028:	f6 e0       	ldi	r31, 0x06	; 6
    602a:	2f c0       	rjmp	.+94     	; 0x608a <hal_spiSetChipSelect+0x18e>
    602c:	90 91 a0 06 	lds	r25, 0x06A0
    6030:	98 23       	and	r25, r24
    6032:	09 f4       	brne	.+2      	; 0x6036 <hal_spiSetChipSelect+0x13a>
    6034:	a7 c0       	rjmp	.+334    	; 0x6184 <hal_spiSetChipSelect+0x288>
    6036:	e0 ea       	ldi	r30, 0xA0	; 160
    6038:	f6 e0       	ldi	r31, 0x06	; 6
    603a:	27 c0       	rjmp	.+78     	; 0x608a <hal_spiSetChipSelect+0x18e>
    603c:	90 91 e0 06 	lds	r25, 0x06E0
    6040:	98 23       	and	r25, r24
    6042:	09 f4       	brne	.+2      	; 0x6046 <hal_spiSetChipSelect+0x14a>
    6044:	9f c0       	rjmp	.+318    	; 0x6184 <hal_spiSetChipSelect+0x288>
    6046:	e0 ee       	ldi	r30, 0xE0	; 224
    6048:	f6 e0       	ldi	r31, 0x06	; 6
    604a:	1f c0       	rjmp	.+62     	; 0x608a <hal_spiSetChipSelect+0x18e>
    604c:	90 91 00 07 	lds	r25, 0x0700
    6050:	98 23       	and	r25, r24
    6052:	09 f4       	brne	.+2      	; 0x6056 <hal_spiSetChipSelect+0x15a>
    6054:	97 c0       	rjmp	.+302    	; 0x6184 <hal_spiSetChipSelect+0x288>
    6056:	e0 e0       	ldi	r30, 0x00	; 0
    6058:	f7 e0       	ldi	r31, 0x07	; 7
    605a:	17 c0       	rjmp	.+46     	; 0x608a <hal_spiSetChipSelect+0x18e>
    605c:	90 91 20 07 	lds	r25, 0x0720
    6060:	98 23       	and	r25, r24
    6062:	09 f4       	brne	.+2      	; 0x6066 <hal_spiSetChipSelect+0x16a>
    6064:	8f c0       	rjmp	.+286    	; 0x6184 <hal_spiSetChipSelect+0x288>
    6066:	e0 e2       	ldi	r30, 0x20	; 32
    6068:	f7 e0       	ldi	r31, 0x07	; 7
    606a:	0f c0       	rjmp	.+30     	; 0x608a <hal_spiSetChipSelect+0x18e>
    606c:	90 91 c0 07 	lds	r25, 0x07C0
    6070:	98 23       	and	r25, r24
    6072:	09 f4       	brne	.+2      	; 0x6076 <hal_spiSetChipSelect+0x17a>
    6074:	87 c0       	rjmp	.+270    	; 0x6184 <hal_spiSetChipSelect+0x288>
    6076:	e0 ec       	ldi	r30, 0xC0	; 192
    6078:	f7 e0       	ldi	r31, 0x07	; 7
    607a:	07 c0       	rjmp	.+14     	; 0x608a <hal_spiSetChipSelect+0x18e>
    607c:	90 91 e0 07 	lds	r25, 0x07E0
    6080:	98 23       	and	r25, r24
    6082:	09 f4       	brne	.+2      	; 0x6086 <hal_spiSetChipSelect+0x18a>
    6084:	7f c0       	rjmp	.+254    	; 0x6184 <hal_spiSetChipSelect+0x288>
    6086:	e0 ee       	ldi	r30, 0xE0	; 224
    6088:	f7 e0       	ldi	r31, 0x07	; 7
    608a:	86 83       	std	Z+6, r24	; 0x06
    608c:	7b c0       	rjmp	.+246    	; 0x6184 <hal_spiSetChipSelect+0x288>
    608e:	83 85       	ldd	r24, Z+11	; 0x0b
    6090:	92 85       	ldd	r25, Z+10	; 0x0a
    6092:	95 30       	cpi	r25, 0x05	; 5
    6094:	09 f4       	brne	.+2      	; 0x6098 <hal_spiSetChipSelect+0x19c>
    6096:	4a c0       	rjmp	.+148    	; 0x612c <hal_spiSetChipSelect+0x230>
    6098:	96 30       	cpi	r25, 0x06	; 6
    609a:	80 f4       	brcc	.+32     	; 0x60bc <hal_spiSetChipSelect+0x1c0>
    609c:	92 30       	cpi	r25, 0x02	; 2
    609e:	81 f1       	breq	.+96     	; 0x6100 <hal_spiSetChipSelect+0x204>
    60a0:	93 30       	cpi	r25, 0x03	; 3
    60a2:	30 f4       	brcc	.+12     	; 0x60b0 <hal_spiSetChipSelect+0x1b4>
    60a4:	99 23       	and	r25, r25
    60a6:	e1 f0       	breq	.+56     	; 0x60e0 <hal_spiSetChipSelect+0x1e4>
    60a8:	91 30       	cpi	r25, 0x01	; 1
    60aa:	09 f0       	breq	.+2      	; 0x60ae <hal_spiSetChipSelect+0x1b2>
    60ac:	69 c0       	rjmp	.+210    	; 0x6180 <hal_spiSetChipSelect+0x284>
    60ae:	20 c0       	rjmp	.+64     	; 0x60f0 <hal_spiSetChipSelect+0x1f4>
    60b0:	93 30       	cpi	r25, 0x03	; 3
    60b2:	71 f1       	breq	.+92     	; 0x6110 <hal_spiSetChipSelect+0x214>
    60b4:	94 30       	cpi	r25, 0x04	; 4
    60b6:	09 f0       	breq	.+2      	; 0x60ba <hal_spiSetChipSelect+0x1be>
    60b8:	63 c0       	rjmp	.+198    	; 0x6180 <hal_spiSetChipSelect+0x284>
    60ba:	31 c0       	rjmp	.+98     	; 0x611e <hal_spiSetChipSelect+0x222>
    60bc:	98 30       	cpi	r25, 0x08	; 8
    60be:	09 f4       	brne	.+2      	; 0x60c2 <hal_spiSetChipSelect+0x1c6>
    60c0:	4a c0       	rjmp	.+148    	; 0x6156 <hal_spiSetChipSelect+0x25a>
    60c2:	99 30       	cpi	r25, 0x09	; 9
    60c4:	30 f4       	brcc	.+12     	; 0x60d2 <hal_spiSetChipSelect+0x1d6>
    60c6:	96 30       	cpi	r25, 0x06	; 6
    60c8:	c1 f1       	breq	.+112    	; 0x613a <hal_spiSetChipSelect+0x23e>
    60ca:	97 30       	cpi	r25, 0x07	; 7
    60cc:	09 f0       	breq	.+2      	; 0x60d0 <hal_spiSetChipSelect+0x1d4>
    60ce:	58 c0       	rjmp	.+176    	; 0x6180 <hal_spiSetChipSelect+0x284>
    60d0:	3b c0       	rjmp	.+118    	; 0x6148 <hal_spiSetChipSelect+0x24c>
    60d2:	99 30       	cpi	r25, 0x09	; 9
    60d4:	09 f4       	brne	.+2      	; 0x60d8 <hal_spiSetChipSelect+0x1dc>
    60d6:	46 c0       	rjmp	.+140    	; 0x6164 <hal_spiSetChipSelect+0x268>
    60d8:	9a 30       	cpi	r25, 0x0A	; 10
    60da:	09 f0       	breq	.+2      	; 0x60de <hal_spiSetChipSelect+0x1e2>
    60dc:	51 c0       	rjmp	.+162    	; 0x6180 <hal_spiSetChipSelect+0x284>
    60de:	49 c0       	rjmp	.+146    	; 0x6172 <hal_spiSetChipSelect+0x276>
    60e0:	90 91 00 06 	lds	r25, 0x0600
    60e4:	98 23       	and	r25, r24
    60e6:	09 f4       	brne	.+2      	; 0x60ea <hal_spiSetChipSelect+0x1ee>
    60e8:	4b c0       	rjmp	.+150    	; 0x6180 <hal_spiSetChipSelect+0x284>
    60ea:	e0 e0       	ldi	r30, 0x00	; 0
    60ec:	f6 e0       	ldi	r31, 0x06	; 6
    60ee:	47 c0       	rjmp	.+142    	; 0x617e <hal_spiSetChipSelect+0x282>
    60f0:	90 91 20 06 	lds	r25, 0x0620
    60f4:	98 23       	and	r25, r24
    60f6:	09 f4       	brne	.+2      	; 0x60fa <hal_spiSetChipSelect+0x1fe>
    60f8:	43 c0       	rjmp	.+134    	; 0x6180 <hal_spiSetChipSelect+0x284>
    60fa:	e0 e2       	ldi	r30, 0x20	; 32
    60fc:	f6 e0       	ldi	r31, 0x06	; 6
    60fe:	3f c0       	rjmp	.+126    	; 0x617e <hal_spiSetChipSelect+0x282>
    6100:	90 91 40 06 	lds	r25, 0x0640
    6104:	98 23       	and	r25, r24
    6106:	09 f4       	brne	.+2      	; 0x610a <hal_spiSetChipSelect+0x20e>
    6108:	3b c0       	rjmp	.+118    	; 0x6180 <hal_spiSetChipSelect+0x284>
    610a:	e0 e4       	ldi	r30, 0x40	; 64
    610c:	f6 e0       	ldi	r31, 0x06	; 6
    610e:	37 c0       	rjmp	.+110    	; 0x617e <hal_spiSetChipSelect+0x282>
    6110:	90 91 60 06 	lds	r25, 0x0660
    6114:	98 23       	and	r25, r24
    6116:	a1 f1       	breq	.+104    	; 0x6180 <hal_spiSetChipSelect+0x284>
    6118:	e0 e6       	ldi	r30, 0x60	; 96
    611a:	f6 e0       	ldi	r31, 0x06	; 6
    611c:	30 c0       	rjmp	.+96     	; 0x617e <hal_spiSetChipSelect+0x282>
    611e:	90 91 80 06 	lds	r25, 0x0680
    6122:	98 23       	and	r25, r24
    6124:	69 f1       	breq	.+90     	; 0x6180 <hal_spiSetChipSelect+0x284>
    6126:	e0 e8       	ldi	r30, 0x80	; 128
    6128:	f6 e0       	ldi	r31, 0x06	; 6
    612a:	29 c0       	rjmp	.+82     	; 0x617e <hal_spiSetChipSelect+0x282>
    612c:	90 91 a0 06 	lds	r25, 0x06A0
    6130:	98 23       	and	r25, r24
    6132:	31 f1       	breq	.+76     	; 0x6180 <hal_spiSetChipSelect+0x284>
    6134:	e0 ea       	ldi	r30, 0xA0	; 160
    6136:	f6 e0       	ldi	r31, 0x06	; 6
    6138:	22 c0       	rjmp	.+68     	; 0x617e <hal_spiSetChipSelect+0x282>
    613a:	90 91 e0 06 	lds	r25, 0x06E0
    613e:	98 23       	and	r25, r24
    6140:	f9 f0       	breq	.+62     	; 0x6180 <hal_spiSetChipSelect+0x284>
    6142:	e0 ee       	ldi	r30, 0xE0	; 224
    6144:	f6 e0       	ldi	r31, 0x06	; 6
    6146:	1b c0       	rjmp	.+54     	; 0x617e <hal_spiSetChipSelect+0x282>
    6148:	90 91 00 07 	lds	r25, 0x0700
    614c:	98 23       	and	r25, r24
    614e:	c1 f0       	breq	.+48     	; 0x6180 <hal_spiSetChipSelect+0x284>
    6150:	e0 e0       	ldi	r30, 0x00	; 0
    6152:	f7 e0       	ldi	r31, 0x07	; 7
    6154:	14 c0       	rjmp	.+40     	; 0x617e <hal_spiSetChipSelect+0x282>
    6156:	90 91 20 07 	lds	r25, 0x0720
    615a:	98 23       	and	r25, r24
    615c:	89 f0       	breq	.+34     	; 0x6180 <hal_spiSetChipSelect+0x284>
    615e:	e0 e2       	ldi	r30, 0x20	; 32
    6160:	f7 e0       	ldi	r31, 0x07	; 7
    6162:	0d c0       	rjmp	.+26     	; 0x617e <hal_spiSetChipSelect+0x282>
    6164:	90 91 c0 07 	lds	r25, 0x07C0
    6168:	98 23       	and	r25, r24
    616a:	51 f0       	breq	.+20     	; 0x6180 <hal_spiSetChipSelect+0x284>
    616c:	e0 ec       	ldi	r30, 0xC0	; 192
    616e:	f7 e0       	ldi	r31, 0x07	; 7
    6170:	06 c0       	rjmp	.+12     	; 0x617e <hal_spiSetChipSelect+0x282>
    6172:	90 91 e0 07 	lds	r25, 0x07E0
    6176:	98 23       	and	r25, r24
    6178:	19 f0       	breq	.+6      	; 0x6180 <hal_spiSetChipSelect+0x284>
    617a:	e0 ee       	ldi	r30, 0xE0	; 224
    617c:	f7 e0       	ldi	r31, 0x07	; 7
    617e:	85 83       	std	Z+5, r24	; 0x05
    6180:	f9 01       	movw	r30, r18
    6182:	11 86       	std	Z+9, r1	; 0x09
    6184:	89 81       	ldd	r24, Y+1	; 0x01
    6186:	8f bf       	out	0x3f, r24	; 63
    6188:	80 e0       	ldi	r24, 0x00	; 0
    618a:	23 96       	adiw	r28, 0x03	; 3
    618c:	cd bf       	out	0x3d, r28	; 61
    618e:	de bf       	out	0x3e, r29	; 62
    6190:	df 91       	pop	r29
    6192:	cf 91       	pop	r28
    6194:	08 95       	ret

00006196 <hal_spiReadByte>:
    6196:	cf 93       	push	r28
    6198:	df 93       	push	r29
    619a:	00 d0       	rcall	.+0      	; 0x619c <hal_spiReadByte+0x6>
    619c:	cd b7       	in	r28, 0x3d	; 61
    619e:	de b7       	in	r29, 0x3e	; 62
    61a0:	8a 83       	std	Y+2, r24	; 0x02
    61a2:	9b 83       	std	Y+3, r25	; 0x03
    61a4:	8f b7       	in	r24, 0x3f	; 63
    61a6:	89 83       	std	Y+1, r24	; 0x01
    61a8:	f8 94       	cli
    61aa:	ea 81       	ldd	r30, Y+2	; 0x02
    61ac:	fb 81       	ldd	r31, Y+3	; 0x03
    61ae:	80 91 26 21 	lds	r24, 0x2126
    61b2:	90 91 27 21 	lds	r25, 0x2127
    61b6:	24 81       	ldd	r18, Z+4	; 0x04
    61b8:	35 81       	ldd	r19, Z+5	; 0x05
    61ba:	28 17       	cp	r18, r24
    61bc:	39 07       	cpc	r19, r25
    61be:	21 f0       	breq	.+8      	; 0x61c8 <hal_spiReadByte+0x32>
    61c0:	89 81       	ldd	r24, Y+1	; 0x01
    61c2:	8f bf       	out	0x3f, r24	; 63
    61c4:	8e ef       	ldi	r24, 0xFE	; 254
    61c6:	32 c0       	rjmp	.+100    	; 0x622c <hal_spiReadByte+0x96>
    61c8:	ea 81       	ldd	r30, Y+2	; 0x02
    61ca:	fb 81       	ldd	r31, Y+3	; 0x03
    61cc:	20 81       	ld	r18, Z
    61ce:	31 81       	ldd	r19, Z+1	; 0x01
    61d0:	d9 01       	movw	r26, r18
    61d2:	1c 96       	adiw	r26, 0x0c	; 12
    61d4:	ed 91       	ld	r30, X+
    61d6:	fc 91       	ld	r31, X
    61d8:	1d 97       	sbiw	r26, 0x0d	; 13
    61da:	81 85       	ldd	r24, Z+9	; 0x09
    61dc:	88 23       	and	r24, r24
    61de:	49 f0       	breq	.+18     	; 0x61f2 <hal_spiReadByte+0x5c>
    61e0:	82 85       	ldd	r24, Z+10	; 0x0a
    61e2:	93 85       	ldd	r25, Z+11	; 0x0b
    61e4:	82 17       	cp	r24, r18
    61e6:	93 07       	cpc	r25, r19
    61e8:	21 f0       	breq	.+8      	; 0x61f2 <hal_spiReadByte+0x5c>
    61ea:	89 81       	ldd	r24, Y+1	; 0x01
    61ec:	8f bf       	out	0x3f, r24	; 63
    61ee:	84 ef       	ldi	r24, 0xF4	; 244
    61f0:	1d c0       	rjmp	.+58     	; 0x622c <hal_spiReadByte+0x96>
    61f2:	a7 81       	ldd	r26, Z+7	; 0x07
    61f4:	b0 85       	ldd	r27, Z+8	; 0x08
    61f6:	11 96       	adiw	r26, 0x01	; 1
    61f8:	1c 92       	st	X, r1
    61fa:	81 e0       	ldi	r24, 0x01	; 1
    61fc:	81 87       	std	Z+9, r24	; 0x09
    61fe:	22 87       	std	Z+10, r18	; 0x0a
    6200:	33 87       	std	Z+11, r19	; 0x0b
    6202:	89 81       	ldd	r24, Y+1	; 0x01
    6204:	8f bf       	out	0x3f, r24	; 63
    6206:	a7 81       	ldd	r26, Z+7	; 0x07
    6208:	b0 85       	ldd	r27, Z+8	; 0x08
    620a:	12 96       	adiw	r26, 0x02	; 2
    620c:	8c 91       	ld	r24, X
    620e:	12 97       	sbiw	r26, 0x02	; 2
    6210:	8f ef       	ldi	r24, 0xFF	; 255
    6212:	13 96       	adiw	r26, 0x03	; 3
    6214:	8c 93       	st	X, r24
    6216:	13 97       	sbiw	r26, 0x03	; 3
    6218:	07 80       	ldd	r0, Z+7	; 0x07
    621a:	f0 85       	ldd	r31, Z+8	; 0x08
    621c:	e0 2d       	mov	r30, r0
    621e:	82 81       	ldd	r24, Z+2	; 0x02
    6220:	87 ff       	sbrs	r24, 7
    6222:	fd cf       	rjmp	.-6      	; 0x621e <hal_spiReadByte+0x88>
    6224:	83 81       	ldd	r24, Z+3	; 0x03
    6226:	fb 01       	movw	r30, r22
    6228:	80 83       	st	Z, r24
    622a:	80 e0       	ldi	r24, 0x00	; 0
    622c:	23 96       	adiw	r28, 0x03	; 3
    622e:	cd bf       	out	0x3d, r28	; 61
    6230:	de bf       	out	0x3e, r29	; 62
    6232:	df 91       	pop	r29
    6234:	cf 91       	pop	r28
    6236:	08 95       	ret

00006238 <hal_spiWriteByte>:
    6238:	cf 93       	push	r28
    623a:	df 93       	push	r29
    623c:	00 d0       	rcall	.+0      	; 0x623e <hal_spiWriteByte+0x6>
    623e:	cd b7       	in	r28, 0x3d	; 61
    6240:	de b7       	in	r29, 0x3e	; 62
    6242:	8a 83       	std	Y+2, r24	; 0x02
    6244:	9b 83       	std	Y+3, r25	; 0x03
    6246:	8f b7       	in	r24, 0x3f	; 63
    6248:	89 83       	std	Y+1, r24	; 0x01
    624a:	f8 94       	cli
    624c:	ea 81       	ldd	r30, Y+2	; 0x02
    624e:	fb 81       	ldd	r31, Y+3	; 0x03
    6250:	80 91 26 21 	lds	r24, 0x2126
    6254:	90 91 27 21 	lds	r25, 0x2127
    6258:	24 81       	ldd	r18, Z+4	; 0x04
    625a:	35 81       	ldd	r19, Z+5	; 0x05
    625c:	28 17       	cp	r18, r24
    625e:	39 07       	cpc	r19, r25
    6260:	21 f0       	breq	.+8      	; 0x626a <hal_spiWriteByte+0x32>
    6262:	89 81       	ldd	r24, Y+1	; 0x01
    6264:	8f bf       	out	0x3f, r24	; 63
    6266:	8e ef       	ldi	r24, 0xFE	; 254
    6268:	30 c0       	rjmp	.+96     	; 0x62ca <hal_spiWriteByte+0x92>
    626a:	ea 81       	ldd	r30, Y+2	; 0x02
    626c:	fb 81       	ldd	r31, Y+3	; 0x03
    626e:	20 81       	ld	r18, Z
    6270:	31 81       	ldd	r19, Z+1	; 0x01
    6272:	d9 01       	movw	r26, r18
    6274:	1c 96       	adiw	r26, 0x0c	; 12
    6276:	ed 91       	ld	r30, X+
    6278:	fc 91       	ld	r31, X
    627a:	1d 97       	sbiw	r26, 0x0d	; 13
    627c:	81 85       	ldd	r24, Z+9	; 0x09
    627e:	88 23       	and	r24, r24
    6280:	49 f0       	breq	.+18     	; 0x6294 <hal_spiWriteByte+0x5c>
    6282:	82 85       	ldd	r24, Z+10	; 0x0a
    6284:	93 85       	ldd	r25, Z+11	; 0x0b
    6286:	82 17       	cp	r24, r18
    6288:	93 07       	cpc	r25, r19
    628a:	21 f0       	breq	.+8      	; 0x6294 <hal_spiWriteByte+0x5c>
    628c:	89 81       	ldd	r24, Y+1	; 0x01
    628e:	8f bf       	out	0x3f, r24	; 63
    6290:	84 ef       	ldi	r24, 0xF4	; 244
    6292:	1b c0       	rjmp	.+54     	; 0x62ca <hal_spiWriteByte+0x92>
    6294:	87 81       	ldd	r24, Z+7	; 0x07
    6296:	90 85       	ldd	r25, Z+8	; 0x08
    6298:	dc 01       	movw	r26, r24
    629a:	11 96       	adiw	r26, 0x01	; 1
    629c:	1c 92       	st	X, r1
    629e:	81 e0       	ldi	r24, 0x01	; 1
    62a0:	81 87       	std	Z+9, r24	; 0x09
    62a2:	22 87       	std	Z+10, r18	; 0x0a
    62a4:	33 87       	std	Z+11, r19	; 0x0b
    62a6:	89 81       	ldd	r24, Y+1	; 0x01
    62a8:	8f bf       	out	0x3f, r24	; 63
    62aa:	a7 81       	ldd	r26, Z+7	; 0x07
    62ac:	b0 85       	ldd	r27, Z+8	; 0x08
    62ae:	12 96       	adiw	r26, 0x02	; 2
    62b0:	8c 91       	ld	r24, X
    62b2:	12 97       	sbiw	r26, 0x02	; 2
    62b4:	13 96       	adiw	r26, 0x03	; 3
    62b6:	6c 93       	st	X, r22
    62b8:	13 97       	sbiw	r26, 0x03	; 3
    62ba:	07 80       	ldd	r0, Z+7	; 0x07
    62bc:	f0 85       	ldd	r31, Z+8	; 0x08
    62be:	e0 2d       	mov	r30, r0
    62c0:	82 81       	ldd	r24, Z+2	; 0x02
    62c2:	87 ff       	sbrs	r24, 7
    62c4:	fd cf       	rjmp	.-6      	; 0x62c0 <hal_spiWriteByte+0x88>
    62c6:	83 81       	ldd	r24, Z+3	; 0x03
    62c8:	80 e0       	ldi	r24, 0x00	; 0
    62ca:	23 96       	adiw	r28, 0x03	; 3
    62cc:	cd bf       	out	0x3d, r28	; 61
    62ce:	de bf       	out	0x3e, r29	; 62
    62d0:	df 91       	pop	r29
    62d2:	cf 91       	pop	r28
    62d4:	08 95       	ret

000062d6 <hal_spiSetBaudRate>:
    62d6:	8f 92       	push	r8
    62d8:	9f 92       	push	r9
    62da:	af 92       	push	r10
    62dc:	bf 92       	push	r11
    62de:	cf 92       	push	r12
    62e0:	df 92       	push	r13
    62e2:	ef 92       	push	r14
    62e4:	ff 92       	push	r15
    62e6:	0f 93       	push	r16
    62e8:	1f 93       	push	r17
    62ea:	cf 93       	push	r28
    62ec:	df 93       	push	r29
    62ee:	00 d0       	rcall	.+0      	; 0x62f0 <hal_spiSetBaudRate+0x1a>
    62f0:	cd b7       	in	r28, 0x3d	; 61
    62f2:	de b7       	in	r29, 0x3e	; 62
    62f4:	8a 83       	std	Y+2, r24	; 0x02
    62f6:	9b 83       	std	Y+3, r25	; 0x03
    62f8:	4a 01       	movw	r8, r20
    62fa:	5b 01       	movw	r10, r22
    62fc:	8f b7       	in	r24, 0x3f	; 63
    62fe:	89 83       	std	Y+1, r24	; 0x01
    6300:	f8 94       	cli
    6302:	ea 81       	ldd	r30, Y+2	; 0x02
    6304:	fb 81       	ldd	r31, Y+3	; 0x03
    6306:	20 91 26 21 	lds	r18, 0x2126
    630a:	30 91 27 21 	lds	r19, 0x2127
    630e:	84 81       	ldd	r24, Z+4	; 0x04
    6310:	95 81       	ldd	r25, Z+5	; 0x05
    6312:	82 17       	cp	r24, r18
    6314:	93 07       	cpc	r25, r19
    6316:	21 f0       	breq	.+8      	; 0x6320 <hal_spiSetBaudRate+0x4a>
    6318:	89 81       	ldd	r24, Y+1	; 0x01
    631a:	8f bf       	out	0x3f, r24	; 63
    631c:	8e ef       	ldi	r24, 0xFE	; 254
    631e:	4e c1       	rjmp	.+668    	; 0x65bc <hal_spiSetBaudRate+0x2e6>
    6320:	ea 81       	ldd	r30, Y+2	; 0x02
    6322:	fb 81       	ldd	r31, Y+3	; 0x03
    6324:	01 90       	ld	r0, Z+
    6326:	f0 81       	ld	r31, Z
    6328:	e0 2d       	mov	r30, r0
    632a:	04 85       	ldd	r16, Z+12	; 0x0c
    632c:	15 85       	ldd	r17, Z+13	; 0x0d
    632e:	d8 01       	movw	r26, r16
    6330:	16 96       	adiw	r26, 0x06	; 6
    6332:	8c 91       	ld	r24, X
    6334:	16 97       	sbiw	r26, 0x06	; 6
    6336:	88 23       	and	r24, r24
    6338:	49 f4       	brne	.+18     	; 0x634c <hal_spiSetBaudRate+0x76>
    633a:	0e 94 15 49 	call	0x922a	; 0x922a <hal_getCpuFreq>
    633e:	6b 01       	movw	r12, r22
    6340:	7c 01       	movw	r14, r24
    6342:	f6 94       	lsr	r15
    6344:	e7 94       	ror	r14
    6346:	d7 94       	ror	r13
    6348:	c7 94       	ror	r12
    634a:	0b c0       	rjmp	.+22     	; 0x6362 <hal_spiSetBaudRate+0x8c>
    634c:	0e 94 15 49 	call	0x922a	; 0x922a <hal_getCpuFreq>
    6350:	6b 01       	movw	r12, r22
    6352:	7c 01       	movw	r14, r24
    6354:	52 e0       	ldi	r21, 0x02	; 2
    6356:	f6 94       	lsr	r15
    6358:	e7 94       	ror	r14
    635a:	d7 94       	ror	r13
    635c:	c7 94       	ror	r12
    635e:	5a 95       	dec	r21
    6360:	d1 f7       	brne	.-12     	; 0x6356 <hal_spiSetBaudRate+0x80>
    6362:	0e 94 15 49 	call	0x922a	; 0x922a <hal_getCpuFreq>
    6366:	dc 01       	movw	r26, r24
    6368:	cb 01       	movw	r24, r22
    636a:	47 e0       	ldi	r20, 0x07	; 7
    636c:	b6 95       	lsr	r27
    636e:	a7 95       	ror	r26
    6370:	97 95       	ror	r25
    6372:	87 95       	ror	r24
    6374:	4a 95       	dec	r20
    6376:	d1 f7       	brne	.-12     	; 0x636c <hal_spiSetBaudRate+0x96>
    6378:	88 16       	cp	r8, r24
    637a:	99 06       	cpc	r9, r25
    637c:	aa 06       	cpc	r10, r26
    637e:	bb 06       	cpc	r11, r27
    6380:	28 f0       	brcs	.+10     	; 0x638c <hal_spiSetBaudRate+0xb6>
    6382:	c8 14       	cp	r12, r8
    6384:	d9 04       	cpc	r13, r9
    6386:	ea 04       	cpc	r14, r10
    6388:	fb 04       	cpc	r15, r11
    638a:	20 f4       	brcc	.+8      	; 0x6394 <hal_spiSetBaudRate+0xbe>
    638c:	89 81       	ldd	r24, Y+1	; 0x01
    638e:	8f bf       	out	0x3f, r24	; 63
    6390:	8c ef       	ldi	r24, 0xFC	; 252
    6392:	14 c1       	rjmp	.+552    	; 0x65bc <hal_spiSetBaudRate+0x2e6>
    6394:	0e 94 15 49 	call	0x922a	; 0x922a <hal_getCpuFreq>
    6398:	dc 01       	movw	r26, r24
    639a:	cb 01       	movw	r24, r22
    639c:	37 e0       	ldi	r19, 0x07	; 7
    639e:	b6 95       	lsr	r27
    63a0:	a7 95       	ror	r26
    63a2:	97 95       	ror	r25
    63a4:	87 95       	ror	r24
    63a6:	3a 95       	dec	r19
    63a8:	d1 f7       	brne	.-12     	; 0x639e <hal_spiSetBaudRate+0xc8>
    63aa:	88 16       	cp	r8, r24
    63ac:	99 06       	cpc	r9, r25
    63ae:	aa 06       	cpc	r10, r26
    63b0:	bb 06       	cpc	r11, r27
    63b2:	18 f1       	brcs	.+70     	; 0x63fa <hal_spiSetBaudRate+0x124>
    63b4:	0e 94 15 49 	call	0x922a	; 0x922a <hal_getCpuFreq>
    63b8:	dc 01       	movw	r26, r24
    63ba:	cb 01       	movw	r24, r22
    63bc:	26 e0       	ldi	r18, 0x06	; 6
    63be:	b6 95       	lsr	r27
    63c0:	a7 95       	ror	r26
    63c2:	97 95       	ror	r25
    63c4:	87 95       	ror	r24
    63c6:	2a 95       	dec	r18
    63c8:	d1 f7       	brne	.-12     	; 0x63be <hal_spiSetBaudRate+0xe8>
    63ca:	88 16       	cp	r8, r24
    63cc:	99 06       	cpc	r9, r25
    63ce:	aa 06       	cpc	r10, r26
    63d0:	bb 06       	cpc	r11, r27
    63d2:	98 f4       	brcc	.+38     	; 0x63fa <hal_spiSetBaudRate+0x124>
    63d4:	0e 94 15 49 	call	0x922a	; 0x922a <hal_getCpuFreq>
    63d8:	dc 01       	movw	r26, r24
    63da:	cb 01       	movw	r24, r22
    63dc:	f7 e0       	ldi	r31, 0x07	; 7
    63de:	b6 95       	lsr	r27
    63e0:	a7 95       	ror	r26
    63e2:	97 95       	ror	r25
    63e4:	87 95       	ror	r24
    63e6:	fa 95       	dec	r31
    63e8:	d1 f7       	brne	.-12     	; 0x63de <hal_spiSetBaudRate+0x108>
    63ea:	f8 01       	movw	r30, r16
    63ec:	81 83       	std	Z+1, r24	; 0x01
    63ee:	92 83       	std	Z+2, r25	; 0x02
    63f0:	a3 83       	std	Z+3, r26	; 0x03
    63f2:	b4 83       	std	Z+4, r27	; 0x04
    63f4:	80 e0       	ldi	r24, 0x00	; 0
    63f6:	93 e0       	ldi	r25, 0x03	; 3
    63f8:	b3 c0       	rjmp	.+358    	; 0x6560 <hal_spiSetBaudRate+0x28a>
    63fa:	0e 94 15 49 	call	0x922a	; 0x922a <hal_getCpuFreq>
    63fe:	dc 01       	movw	r26, r24
    6400:	cb 01       	movw	r24, r22
    6402:	e6 e0       	ldi	r30, 0x06	; 6
    6404:	b6 95       	lsr	r27
    6406:	a7 95       	ror	r26
    6408:	97 95       	ror	r25
    640a:	87 95       	ror	r24
    640c:	ea 95       	dec	r30
    640e:	d1 f7       	brne	.-12     	; 0x6404 <hal_spiSetBaudRate+0x12e>
    6410:	88 16       	cp	r8, r24
    6412:	99 06       	cpc	r9, r25
    6414:	aa 06       	cpc	r10, r26
    6416:	bb 06       	cpc	r11, r27
    6418:	18 f1       	brcs	.+70     	; 0x6460 <hal_spiSetBaudRate+0x18a>
    641a:	0e 94 15 49 	call	0x922a	; 0x922a <hal_getCpuFreq>
    641e:	dc 01       	movw	r26, r24
    6420:	cb 01       	movw	r24, r22
    6422:	54 e0       	ldi	r21, 0x04	; 4
    6424:	b6 95       	lsr	r27
    6426:	a7 95       	ror	r26
    6428:	97 95       	ror	r25
    642a:	87 95       	ror	r24
    642c:	5a 95       	dec	r21
    642e:	d1 f7       	brne	.-12     	; 0x6424 <hal_spiSetBaudRate+0x14e>
    6430:	88 16       	cp	r8, r24
    6432:	99 06       	cpc	r9, r25
    6434:	aa 06       	cpc	r10, r26
    6436:	bb 06       	cpc	r11, r27
    6438:	98 f4       	brcc	.+38     	; 0x6460 <hal_spiSetBaudRate+0x18a>
    643a:	0e 94 15 49 	call	0x922a	; 0x922a <hal_getCpuFreq>
    643e:	dc 01       	movw	r26, r24
    6440:	cb 01       	movw	r24, r22
    6442:	46 e0       	ldi	r20, 0x06	; 6
    6444:	b6 95       	lsr	r27
    6446:	a7 95       	ror	r26
    6448:	97 95       	ror	r25
    644a:	87 95       	ror	r24
    644c:	4a 95       	dec	r20
    644e:	d1 f7       	brne	.-12     	; 0x6444 <hal_spiSetBaudRate+0x16e>
    6450:	f8 01       	movw	r30, r16
    6452:	81 83       	std	Z+1, r24	; 0x01
    6454:	92 83       	std	Z+2, r25	; 0x02
    6456:	a3 83       	std	Z+3, r26	; 0x03
    6458:	b4 83       	std	Z+4, r27	; 0x04
    645a:	80 e0       	ldi	r24, 0x00	; 0
    645c:	92 e0       	ldi	r25, 0x02	; 2
    645e:	80 c0       	rjmp	.+256    	; 0x6560 <hal_spiSetBaudRate+0x28a>
    6460:	0e 94 15 49 	call	0x922a	; 0x922a <hal_getCpuFreq>
    6464:	dc 01       	movw	r26, r24
    6466:	cb 01       	movw	r24, r22
    6468:	34 e0       	ldi	r19, 0x04	; 4
    646a:	b6 95       	lsr	r27
    646c:	a7 95       	ror	r26
    646e:	97 95       	ror	r25
    6470:	87 95       	ror	r24
    6472:	3a 95       	dec	r19
    6474:	d1 f7       	brne	.-12     	; 0x646a <hal_spiSetBaudRate+0x194>
    6476:	88 16       	cp	r8, r24
    6478:	99 06       	cpc	r9, r25
    647a:	aa 06       	cpc	r10, r26
    647c:	bb 06       	cpc	r11, r27
    647e:	18 f1       	brcs	.+70     	; 0x64c6 <hal_spiSetBaudRate+0x1f0>
    6480:	0e 94 15 49 	call	0x922a	; 0x922a <hal_getCpuFreq>
    6484:	dc 01       	movw	r26, r24
    6486:	cb 01       	movw	r24, r22
    6488:	22 e0       	ldi	r18, 0x02	; 2
    648a:	b6 95       	lsr	r27
    648c:	a7 95       	ror	r26
    648e:	97 95       	ror	r25
    6490:	87 95       	ror	r24
    6492:	2a 95       	dec	r18
    6494:	d1 f7       	brne	.-12     	; 0x648a <hal_spiSetBaudRate+0x1b4>
    6496:	88 16       	cp	r8, r24
    6498:	99 06       	cpc	r9, r25
    649a:	aa 06       	cpc	r10, r26
    649c:	bb 06       	cpc	r11, r27
    649e:	98 f4       	brcc	.+38     	; 0x64c6 <hal_spiSetBaudRate+0x1f0>
    64a0:	0e 94 15 49 	call	0x922a	; 0x922a <hal_getCpuFreq>
    64a4:	dc 01       	movw	r26, r24
    64a6:	cb 01       	movw	r24, r22
    64a8:	f4 e0       	ldi	r31, 0x04	; 4
    64aa:	b6 95       	lsr	r27
    64ac:	a7 95       	ror	r26
    64ae:	97 95       	ror	r25
    64b0:	87 95       	ror	r24
    64b2:	fa 95       	dec	r31
    64b4:	d1 f7       	brne	.-12     	; 0x64aa <hal_spiSetBaudRate+0x1d4>
    64b6:	f8 01       	movw	r30, r16
    64b8:	81 83       	std	Z+1, r24	; 0x01
    64ba:	92 83       	std	Z+2, r25	; 0x02
    64bc:	a3 83       	std	Z+3, r26	; 0x03
    64be:	b4 83       	std	Z+4, r27	; 0x04
    64c0:	80 e0       	ldi	r24, 0x00	; 0
    64c2:	91 e0       	ldi	r25, 0x01	; 1
    64c4:	4d c0       	rjmp	.+154    	; 0x6560 <hal_spiSetBaudRate+0x28a>
    64c6:	0e 94 15 49 	call	0x922a	; 0x922a <hal_getCpuFreq>
    64ca:	dc 01       	movw	r26, r24
    64cc:	cb 01       	movw	r24, r22
    64ce:	e2 e0       	ldi	r30, 0x02	; 2
    64d0:	b6 95       	lsr	r27
    64d2:	a7 95       	ror	r26
    64d4:	97 95       	ror	r25
    64d6:	87 95       	ror	r24
    64d8:	ea 95       	dec	r30
    64da:	d1 f7       	brne	.-12     	; 0x64d0 <hal_spiSetBaudRate+0x1fa>
    64dc:	88 16       	cp	r8, r24
    64de:	99 06       	cpc	r9, r25
    64e0:	aa 06       	cpc	r10, r26
    64e2:	bb 06       	cpc	r11, r27
    64e4:	f0 f0       	brcs	.+60     	; 0x6522 <hal_spiSetBaudRate+0x24c>
    64e6:	0e 94 15 49 	call	0x922a	; 0x922a <hal_getCpuFreq>
    64ea:	dc 01       	movw	r26, r24
    64ec:	cb 01       	movw	r24, r22
    64ee:	b6 95       	lsr	r27
    64f0:	a7 95       	ror	r26
    64f2:	97 95       	ror	r25
    64f4:	87 95       	ror	r24
    64f6:	88 16       	cp	r8, r24
    64f8:	99 06       	cpc	r9, r25
    64fa:	aa 06       	cpc	r10, r26
    64fc:	bb 06       	cpc	r11, r27
    64fe:	88 f4       	brcc	.+34     	; 0x6522 <hal_spiSetBaudRate+0x24c>
    6500:	0e 94 15 49 	call	0x922a	; 0x922a <hal_getCpuFreq>
    6504:	dc 01       	movw	r26, r24
    6506:	cb 01       	movw	r24, r22
    6508:	42 e0       	ldi	r20, 0x02	; 2
    650a:	b6 95       	lsr	r27
    650c:	a7 95       	ror	r26
    650e:	97 95       	ror	r25
    6510:	87 95       	ror	r24
    6512:	4a 95       	dec	r20
    6514:	d1 f7       	brne	.-12     	; 0x650a <hal_spiSetBaudRate+0x234>
    6516:	f8 01       	movw	r30, r16
    6518:	81 83       	std	Z+1, r24	; 0x01
    651a:	92 83       	std	Z+2, r25	; 0x02
    651c:	a3 83       	std	Z+3, r26	; 0x03
    651e:	b4 83       	std	Z+4, r27	; 0x04
    6520:	1d c0       	rjmp	.+58     	; 0x655c <hal_spiSetBaudRate+0x286>
    6522:	0e 94 15 49 	call	0x922a	; 0x922a <hal_getCpuFreq>
    6526:	dc 01       	movw	r26, r24
    6528:	cb 01       	movw	r24, r22
    652a:	32 e0       	ldi	r19, 0x02	; 2
    652c:	b6 95       	lsr	r27
    652e:	a7 95       	ror	r26
    6530:	97 95       	ror	r25
    6532:	87 95       	ror	r24
    6534:	3a 95       	dec	r19
    6536:	d1 f7       	brne	.-12     	; 0x652c <hal_spiSetBaudRate+0x256>
    6538:	f8 01       	movw	r30, r16
    653a:	81 83       	std	Z+1, r24	; 0x01
    653c:	92 83       	std	Z+2, r25	; 0x02
    653e:	a3 83       	std	Z+3, r26	; 0x03
    6540:	b4 83       	std	Z+4, r27	; 0x04
    6542:	26 81       	ldd	r18, Z+6	; 0x06
    6544:	22 23       	and	r18, r18
    6546:	51 f4       	brne	.+20     	; 0x655c <hal_spiSetBaudRate+0x286>
    6548:	88 0f       	add	r24, r24
    654a:	99 1f       	adc	r25, r25
    654c:	aa 1f       	adc	r26, r26
    654e:	bb 1f       	adc	r27, r27
    6550:	81 83       	std	Z+1, r24	; 0x01
    6552:	92 83       	std	Z+2, r25	; 0x02
    6554:	a3 83       	std	Z+3, r26	; 0x03
    6556:	b4 83       	std	Z+4, r27	; 0x04
    6558:	80 e8       	ldi	r24, 0x80	; 128
    655a:	01 c0       	rjmp	.+2      	; 0x655e <hal_spiSetBaudRate+0x288>
    655c:	80 e0       	ldi	r24, 0x00	; 0
    655e:	90 e0       	ldi	r25, 0x00	; 0
    6560:	d8 01       	movw	r26, r16
    6562:	17 96       	adiw	r26, 0x07	; 7
    6564:	ed 91       	ld	r30, X+
    6566:	fc 91       	ld	r31, X
    6568:	18 97       	sbiw	r26, 0x08	; 8
    656a:	20 81       	ld	r18, Z
    656c:	2f 7b       	andi	r18, 0xBF	; 191
    656e:	20 83       	st	Z, r18
    6570:	17 96       	adiw	r26, 0x07	; 7
    6572:	ed 91       	ld	r30, X+
    6574:	fc 91       	ld	r31, X
    6576:	18 97       	sbiw	r26, 0x08	; 8
    6578:	20 81       	ld	r18, Z
    657a:	2c 7f       	andi	r18, 0xFC	; 252
    657c:	20 83       	st	Z, r18
    657e:	17 96       	adiw	r26, 0x07	; 7
    6580:	ed 91       	ld	r30, X+
    6582:	fc 91       	ld	r31, X
    6584:	18 97       	sbiw	r26, 0x08	; 8
    6586:	20 81       	ld	r18, Z
    6588:	29 2b       	or	r18, r25
    658a:	20 83       	st	Z, r18
    658c:	17 96       	adiw	r26, 0x07	; 7
    658e:	ed 91       	ld	r30, X+
    6590:	fc 91       	ld	r31, X
    6592:	18 97       	sbiw	r26, 0x08	; 8
    6594:	90 81       	ld	r25, Z
    6596:	9f 77       	andi	r25, 0x7F	; 127
    6598:	90 83       	st	Z, r25
    659a:	17 96       	adiw	r26, 0x07	; 7
    659c:	ed 91       	ld	r30, X+
    659e:	fc 91       	ld	r31, X
    65a0:	18 97       	sbiw	r26, 0x08	; 8
    65a2:	90 81       	ld	r25, Z
    65a4:	98 2b       	or	r25, r24
    65a6:	90 83       	st	Z, r25
    65a8:	17 96       	adiw	r26, 0x07	; 7
    65aa:	ed 91       	ld	r30, X+
    65ac:	fc 91       	ld	r31, X
    65ae:	18 97       	sbiw	r26, 0x08	; 8
    65b0:	80 81       	ld	r24, Z
    65b2:	80 64       	ori	r24, 0x40	; 64
    65b4:	80 83       	st	Z, r24
    65b6:	89 81       	ldd	r24, Y+1	; 0x01
    65b8:	8f bf       	out	0x3f, r24	; 63
    65ba:	80 e0       	ldi	r24, 0x00	; 0
    65bc:	23 96       	adiw	r28, 0x03	; 3
    65be:	cd bf       	out	0x3d, r28	; 61
    65c0:	de bf       	out	0x3e, r29	; 62
    65c2:	df 91       	pop	r29
    65c4:	cf 91       	pop	r28
    65c6:	1f 91       	pop	r17
    65c8:	0f 91       	pop	r16
    65ca:	ff 90       	pop	r15
    65cc:	ef 90       	pop	r14
    65ce:	df 90       	pop	r13
    65d0:	cf 90       	pop	r12
    65d2:	bf 90       	pop	r11
    65d4:	af 90       	pop	r10
    65d6:	9f 90       	pop	r9
    65d8:	8f 90       	pop	r8
    65da:	08 95       	ret

000065dc <hal_spiReadBlock>:
    65dc:	2f 92       	push	r2
    65de:	3f 92       	push	r3
    65e0:	4f 92       	push	r4
    65e2:	5f 92       	push	r5
    65e4:	6f 92       	push	r6
    65e6:	7f 92       	push	r7
    65e8:	8f 92       	push	r8
    65ea:	9f 92       	push	r9
    65ec:	af 92       	push	r10
    65ee:	bf 92       	push	r11
    65f0:	cf 92       	push	r12
    65f2:	df 92       	push	r13
    65f4:	ef 92       	push	r14
    65f6:	ff 92       	push	r15
    65f8:	0f 93       	push	r16
    65fa:	1f 93       	push	r17
    65fc:	cf 93       	push	r28
    65fe:	df 93       	push	r29
    6600:	cd b7       	in	r28, 0x3d	; 61
    6602:	de b7       	in	r29, 0x3e	; 62
    6604:	63 97       	sbiw	r28, 0x13	; 19
    6606:	cd bf       	out	0x3d, r28	; 61
    6608:	de bf       	out	0x3e, r29	; 62
    660a:	88 8b       	std	Y+16, r24	; 0x10
    660c:	99 8b       	std	Y+17, r25	; 0x11
    660e:	66 2e       	mov	r6, r22
    6610:	4a 8b       	std	Y+18, r20	; 0x12
    6612:	5b 8b       	std	Y+19, r21	; 0x13
    6614:	19 01       	movw	r2, r18
    6616:	e8 89       	ldd	r30, Y+16	; 0x10
    6618:	f9 89       	ldd	r31, Y+17	; 0x11
    661a:	80 91 26 21 	lds	r24, 0x2126
    661e:	90 91 27 21 	lds	r25, 0x2127
    6622:	24 81       	ldd	r18, Z+4	; 0x04
    6624:	35 81       	ldd	r19, Z+5	; 0x05
    6626:	28 17       	cp	r18, r24
    6628:	39 07       	cpc	r19, r25
    662a:	09 f0       	breq	.+2      	; 0x662e <hal_spiReadBlock+0x52>
    662c:	53 c1       	rjmp	.+678    	; 0x68d4 <hal_spiReadBlock+0x2f8>
    662e:	e8 89       	ldd	r30, Y+16	; 0x10
    6630:	f9 89       	ldd	r31, Y+17	; 0x11
    6632:	40 80       	ld	r4, Z
    6634:	51 80       	ldd	r5, Z+1	; 0x01
    6636:	d2 01       	movw	r26, r4
    6638:	1c 96       	adiw	r26, 0x0c	; 12
    663a:	8d 90       	ld	r8, X+
    663c:	9c 90       	ld	r9, X
    663e:	1d 97       	sbiw	r26, 0x0d	; 13
    6640:	8f b7       	in	r24, 0x3f	; 63
    6642:	89 83       	std	Y+1, r24	; 0x01
    6644:	f8 94       	cli
    6646:	f4 01       	movw	r30, r8
    6648:	81 85       	ldd	r24, Z+9	; 0x09
    664a:	88 23       	and	r24, r24
    664c:	49 f0       	breq	.+18     	; 0x6660 <hal_spiReadBlock+0x84>
    664e:	82 85       	ldd	r24, Z+10	; 0x0a
    6650:	93 85       	ldd	r25, Z+11	; 0x0b
    6652:	84 15       	cp	r24, r4
    6654:	95 05       	cpc	r25, r5
    6656:	21 f0       	breq	.+8      	; 0x6660 <hal_spiReadBlock+0x84>
    6658:	89 81       	ldd	r24, Y+1	; 0x01
    665a:	8f bf       	out	0x3f, r24	; 63
    665c:	84 ef       	ldi	r24, 0xF4	; 244
    665e:	3d c1       	rjmp	.+634    	; 0x68da <hal_spiReadBlock+0x2fe>
    6660:	81 e0       	ldi	r24, 0x01	; 1
    6662:	d4 01       	movw	r26, r8
    6664:	19 96       	adiw	r26, 0x09	; 9
    6666:	8c 93       	st	X, r24
    6668:	19 97       	sbiw	r26, 0x09	; 9
    666a:	1a 96       	adiw	r26, 0x0a	; 10
    666c:	4d 92       	st	X+, r4
    666e:	5c 92       	st	X, r5
    6670:	1b 97       	sbiw	r26, 0x0b	; 11
    6672:	89 81       	ldd	r24, Y+1	; 0x01
    6674:	8f bf       	out	0x3f, r24	; 63
    6676:	8f ef       	ldi	r24, 0xFF	; 255
    6678:	80 93 42 21 	sts	0x2142, r24
    667c:	82 e4       	ldi	r24, 0x42	; 66
    667e:	91 e2       	ldi	r25, 0x21	; 33
    6680:	f2 01       	movw	r30, r4
    6682:	82 83       	std	Z+2, r24	; 0x02
    6684:	93 83       	std	Z+3, r25	; 0x03
    6686:	8a 89       	ldd	r24, Y+18	; 0x12
    6688:	9b 89       	ldd	r25, Y+19	; 0x13
    668a:	84 83       	std	Z+4, r24	; 0x04
    668c:	95 83       	std	Z+5, r25	; 0x05
    668e:	26 82       	std	Z+6, r2	; 0x06
    6690:	37 82       	std	Z+7, r3	; 0x07
    6692:	50 96       	adiw	r26, 0x10	; 16
    6694:	8d 91       	ld	r24, X+
    6696:	9c 91       	ld	r25, X
    6698:	51 97       	sbiw	r26, 0x11	; 17
    669a:	17 96       	adiw	r26, 0x07	; 7
    669c:	ed 91       	ld	r30, X+
    669e:	fc 91       	ld	r31, X
    66a0:	18 97       	sbiw	r26, 0x08	; 8
    66a2:	18 16       	cp	r1, r24
    66a4:	19 06       	cpc	r1, r25
    66a6:	0c f0       	brlt	.+2      	; 0x66aa <hal_spiReadBlock+0xce>
    66a8:	7a c0       	rjmp	.+244    	; 0x679e <hal_spiReadBlock+0x1c2>
    66aa:	11 82       	std	Z+1, r1	; 0x01
    66ac:	ec 91       	ld	r30, X
    66ae:	e1 50       	subi	r30, 0x01	; 1
    66b0:	e3 30       	cpi	r30, 0x03	; 3
    66b2:	28 f4       	brcc	.+10     	; 0x66be <hal_spiReadBlock+0xe2>
    66b4:	f0 e0       	ldi	r31, 0x00	; 0
    66b6:	ed 5b       	subi	r30, 0xBD	; 189
    66b8:	fe 4d       	sbci	r31, 0xDE	; 222
    66ba:	60 81       	ld	r22, Z
    66bc:	01 c0       	rjmp	.+2      	; 0x66c0 <hal_spiReadBlock+0xe4>
    66be:	6a e4       	ldi	r22, 0x4A	; 74
    66c0:	d4 01       	movw	r26, r8
    66c2:	16 96       	adiw	r26, 0x06	; 6
    66c4:	2c 91       	ld	r18, X
    66c6:	16 97       	sbiw	r26, 0x06	; 6
    66c8:	f2 01       	movw	r30, r4
    66ca:	82 81       	ldd	r24, Z+2	; 0x02
    66cc:	93 81       	ldd	r25, Z+3	; 0x03
    66ce:	22 23       	and	r18, r18
    66d0:	29 f4       	brne	.+10     	; 0x66dc <hal_spiReadBlock+0x100>
    66d2:	f1 e2       	ldi	r31, 0x21	; 33
    66d4:	82 34       	cpi	r24, 0x42	; 66
    66d6:	9f 07       	cpc	r25, r31
    66d8:	09 f0       	breq	.+2      	; 0x66dc <hal_spiReadBlock+0x100>
    66da:	01 96       	adiw	r24, 0x01	; 1
    66dc:	8a 83       	std	Y+2, r24	; 0x02
    66de:	9b 83       	std	Y+3, r25	; 0x03
    66e0:	d4 01       	movw	r26, r8
    66e2:	17 96       	adiw	r26, 0x07	; 7
    66e4:	8d 91       	ld	r24, X+
    66e6:	9c 91       	ld	r25, X
    66e8:	18 97       	sbiw	r26, 0x08	; 8
    66ea:	03 96       	adiw	r24, 0x03	; 3
    66ec:	8c 83       	std	Y+4, r24	; 0x04
    66ee:	9d 83       	std	Y+5, r25	; 0x05
    66f0:	1e 82       	std	Y+6, r1	; 0x06
    66f2:	1f 82       	std	Y+7, r1	; 0x07
    66f4:	81 e0       	ldi	r24, 0x01	; 1
    66f6:	88 87       	std	Y+8, r24	; 0x08
    66f8:	19 86       	std	Y+9, r1	; 0x09
    66fa:	22 23       	and	r18, r18
    66fc:	29 f4       	brne	.+10     	; 0x6708 <hal_spiReadBlock+0x12c>
    66fe:	c1 01       	movw	r24, r2
    6700:	01 97       	sbiw	r24, 0x01	; 1
    6702:	8a 87       	std	Y+10, r24	; 0x0a
    6704:	9b 87       	std	Y+11, r25	; 0x0b
    6706:	02 c0       	rjmp	.+4      	; 0x670c <hal_spiReadBlock+0x130>
    6708:	2a 86       	std	Y+10, r2	; 0x0a
    670a:	3b 86       	std	Y+11, r3	; 0x0b
    670c:	1c 86       	std	Y+12, r1	; 0x0c
    670e:	77 24       	eor	r7, r7
    6710:	73 94       	inc	r7
    6712:	7d 86       	std	Y+13, r7	; 0x0d
    6714:	6e 87       	std	Y+14, r22	; 0x0e
    6716:	1f 86       	std	Y+15, r1	; 0x0f
    6718:	f4 01       	movw	r30, r8
    671a:	86 85       	ldd	r24, Z+14	; 0x0e
    671c:	97 85       	ldd	r25, Z+15	; 0x0f
    671e:	aa 80       	ldd	r10, Y+2	; 0x02
    6720:	bb 80       	ldd	r11, Y+3	; 0x03
    6722:	cc 80       	ldd	r12, Y+4	; 0x04
    6724:	dd 80       	ldd	r13, Y+5	; 0x05
    6726:	ee 80       	ldd	r14, Y+6	; 0x06
    6728:	ff 80       	ldd	r15, Y+7	; 0x07
    672a:	08 85       	ldd	r16, Y+8	; 0x08
    672c:	19 85       	ldd	r17, Y+9	; 0x09
    672e:	2a 85       	ldd	r18, Y+10	; 0x0a
    6730:	3b 85       	ldd	r19, Y+11	; 0x0b
    6732:	40 e0       	ldi	r20, 0x00	; 0
    6734:	51 e0       	ldi	r21, 0x01	; 1
    6736:	70 e0       	ldi	r23, 0x00	; 0
    6738:	0e 94 ff 4d 	call	0x9bfe	; 0x9bfe <hal_configureDmaChannel>
    673c:	d4 01       	movw	r26, r8
    673e:	1e 96       	adiw	r26, 0x0e	; 14
    6740:	8d 91       	ld	r24, X+
    6742:	9c 91       	ld	r25, X
    6744:	1f 97       	sbiw	r26, 0x0f	; 15
    6746:	0e 94 11 50 	call	0xa022	; 0xa022 <hal_dmaEnableChannel>
    674a:	f4 01       	movw	r30, r8
    674c:	87 81       	ldd	r24, Z+7	; 0x07
    674e:	90 85       	ldd	r25, Z+8	; 0x08
    6750:	03 96       	adiw	r24, 0x03	; 3
    6752:	8a 83       	std	Y+2, r24	; 0x02
    6754:	9b 83       	std	Y+3, r25	; 0x03
    6756:	8a 89       	ldd	r24, Y+18	; 0x12
    6758:	9b 89       	ldd	r25, Y+19	; 0x13
    675a:	8c 83       	std	Y+4, r24	; 0x04
    675c:	9d 83       	std	Y+5, r25	; 0x05
    675e:	7f 82       	std	Y+7, r7	; 0x07
    6760:	18 86       	std	Y+8, r1	; 0x08
    6762:	79 86       	std	Y+9, r7	; 0x09
    6764:	2a 86       	std	Y+10, r2	; 0x0a
    6766:	3b 86       	std	Y+11, r3	; 0x0b
    6768:	80 89       	ldd	r24, Z+16	; 0x10
    676a:	91 89       	ldd	r25, Z+17	; 0x11
    676c:	aa 80       	ldd	r10, Y+2	; 0x02
    676e:	bb 80       	ldd	r11, Y+3	; 0x03
    6770:	cc 80       	ldd	r12, Y+4	; 0x04
    6772:	dd 80       	ldd	r13, Y+5	; 0x05
    6774:	ee 80       	ldd	r14, Y+6	; 0x06
    6776:	ff 24       	eor	r15, r15
    6778:	f3 94       	inc	r15
    677a:	00 e0       	ldi	r16, 0x00	; 0
    677c:	11 e0       	ldi	r17, 0x01	; 1
    677e:	2a 85       	ldd	r18, Y+10	; 0x0a
    6780:	3b 85       	ldd	r19, Y+11	; 0x0b
    6782:	4c 85       	ldd	r20, Y+12	; 0x0c
    6784:	5d 85       	ldd	r21, Y+13	; 0x0d
    6786:	6e 85       	ldd	r22, Y+14	; 0x0e
    6788:	7f 85       	ldd	r23, Y+15	; 0x0f
    678a:	0e 94 ff 4d 	call	0x9bfe	; 0x9bfe <hal_configureDmaChannel>
    678e:	d4 01       	movw	r26, r8
    6790:	50 96       	adiw	r26, 0x10	; 16
    6792:	8d 91       	ld	r24, X+
    6794:	9c 91       	ld	r25, X
    6796:	51 97       	sbiw	r26, 0x11	; 17
    6798:	0e 94 11 50 	call	0xa022	; 0xa022 <hal_dmaEnableChannel>
    679c:	02 c0       	rjmp	.+4      	; 0x67a2 <hal_spiReadBlock+0x1c6>
    679e:	83 e0       	ldi	r24, 0x03	; 3
    67a0:	81 83       	std	Z+1, r24	; 0x01
    67a2:	f4 01       	movw	r30, r8
    67a4:	86 81       	ldd	r24, Z+6	; 0x06
    67a6:	88 23       	and	r24, r24
    67a8:	09 f0       	breq	.+2      	; 0x67ac <hal_spiReadBlock+0x1d0>
    67aa:	96 c0       	rjmp	.+300    	; 0x68d8 <hal_spiReadBlock+0x2fc>
    67ac:	d2 01       	movw	r26, r4
    67ae:	18 96       	adiw	r26, 0x08	; 8
    67b0:	1d 92       	st	X+, r1
    67b2:	1c 92       	st	X, r1
    67b4:	19 97       	sbiw	r26, 0x09	; 9
    67b6:	50 96       	adiw	r26, 0x10	; 16
    67b8:	6c 92       	st	X, r6
    67ba:	50 97       	sbiw	r26, 0x10	; 16
    67bc:	66 20       	and	r6, r6
    67be:	09 f4       	brne	.+2      	; 0x67c2 <hal_spiReadBlock+0x1e6>
    67c0:	7d c0       	rjmp	.+250    	; 0x68bc <hal_spiReadBlock+0x2e0>
    67c2:	1b 96       	adiw	r26, 0x0b	; 11
    67c4:	8c 91       	ld	r24, X
    67c6:	1b 97       	sbiw	r26, 0x0b	; 11
    67c8:	1a 96       	adiw	r26, 0x0a	; 10
    67ca:	9c 91       	ld	r25, X
    67cc:	1a 97       	sbiw	r26, 0x0a	; 10
    67ce:	95 30       	cpi	r25, 0x05	; 5
    67d0:	09 f4       	brne	.+2      	; 0x67d4 <hal_spiReadBlock+0x1f8>
    67d2:	4a c0       	rjmp	.+148    	; 0x6868 <hal_spiReadBlock+0x28c>
    67d4:	96 30       	cpi	r25, 0x06	; 6
    67d6:	80 f4       	brcc	.+32     	; 0x67f8 <hal_spiReadBlock+0x21c>
    67d8:	92 30       	cpi	r25, 0x02	; 2
    67da:	81 f1       	breq	.+96     	; 0x683c <hal_spiReadBlock+0x260>
    67dc:	93 30       	cpi	r25, 0x03	; 3
    67de:	30 f4       	brcc	.+12     	; 0x67ec <hal_spiReadBlock+0x210>
    67e0:	99 23       	and	r25, r25
    67e2:	e1 f0       	breq	.+56     	; 0x681c <hal_spiReadBlock+0x240>
    67e4:	91 30       	cpi	r25, 0x01	; 1
    67e6:	09 f0       	breq	.+2      	; 0x67ea <hal_spiReadBlock+0x20e>
    67e8:	69 c0       	rjmp	.+210    	; 0x68bc <hal_spiReadBlock+0x2e0>
    67ea:	20 c0       	rjmp	.+64     	; 0x682c <hal_spiReadBlock+0x250>
    67ec:	93 30       	cpi	r25, 0x03	; 3
    67ee:	71 f1       	breq	.+92     	; 0x684c <hal_spiReadBlock+0x270>
    67f0:	94 30       	cpi	r25, 0x04	; 4
    67f2:	09 f0       	breq	.+2      	; 0x67f6 <hal_spiReadBlock+0x21a>
    67f4:	63 c0       	rjmp	.+198    	; 0x68bc <hal_spiReadBlock+0x2e0>
    67f6:	31 c0       	rjmp	.+98     	; 0x685a <hal_spiReadBlock+0x27e>
    67f8:	98 30       	cpi	r25, 0x08	; 8
    67fa:	09 f4       	brne	.+2      	; 0x67fe <hal_spiReadBlock+0x222>
    67fc:	4a c0       	rjmp	.+148    	; 0x6892 <hal_spiReadBlock+0x2b6>
    67fe:	99 30       	cpi	r25, 0x09	; 9
    6800:	30 f4       	brcc	.+12     	; 0x680e <hal_spiReadBlock+0x232>
    6802:	96 30       	cpi	r25, 0x06	; 6
    6804:	c1 f1       	breq	.+112    	; 0x6876 <hal_spiReadBlock+0x29a>
    6806:	97 30       	cpi	r25, 0x07	; 7
    6808:	09 f0       	breq	.+2      	; 0x680c <hal_spiReadBlock+0x230>
    680a:	58 c0       	rjmp	.+176    	; 0x68bc <hal_spiReadBlock+0x2e0>
    680c:	3b c0       	rjmp	.+118    	; 0x6884 <hal_spiReadBlock+0x2a8>
    680e:	99 30       	cpi	r25, 0x09	; 9
    6810:	09 f4       	brne	.+2      	; 0x6814 <hal_spiReadBlock+0x238>
    6812:	46 c0       	rjmp	.+140    	; 0x68a0 <hal_spiReadBlock+0x2c4>
    6814:	9a 30       	cpi	r25, 0x0A	; 10
    6816:	09 f0       	breq	.+2      	; 0x681a <hal_spiReadBlock+0x23e>
    6818:	51 c0       	rjmp	.+162    	; 0x68bc <hal_spiReadBlock+0x2e0>
    681a:	49 c0       	rjmp	.+146    	; 0x68ae <hal_spiReadBlock+0x2d2>
    681c:	90 91 00 06 	lds	r25, 0x0600
    6820:	98 23       	and	r25, r24
    6822:	09 f4       	brne	.+2      	; 0x6826 <hal_spiReadBlock+0x24a>
    6824:	4b c0       	rjmp	.+150    	; 0x68bc <hal_spiReadBlock+0x2e0>
    6826:	e0 e0       	ldi	r30, 0x00	; 0
    6828:	f6 e0       	ldi	r31, 0x06	; 6
    682a:	47 c0       	rjmp	.+142    	; 0x68ba <hal_spiReadBlock+0x2de>
    682c:	90 91 20 06 	lds	r25, 0x0620
    6830:	98 23       	and	r25, r24
    6832:	09 f4       	brne	.+2      	; 0x6836 <hal_spiReadBlock+0x25a>
    6834:	43 c0       	rjmp	.+134    	; 0x68bc <hal_spiReadBlock+0x2e0>
    6836:	e0 e2       	ldi	r30, 0x20	; 32
    6838:	f6 e0       	ldi	r31, 0x06	; 6
    683a:	3f c0       	rjmp	.+126    	; 0x68ba <hal_spiReadBlock+0x2de>
    683c:	90 91 40 06 	lds	r25, 0x0640
    6840:	98 23       	and	r25, r24
    6842:	09 f4       	brne	.+2      	; 0x6846 <hal_spiReadBlock+0x26a>
    6844:	3b c0       	rjmp	.+118    	; 0x68bc <hal_spiReadBlock+0x2e0>
    6846:	e0 e4       	ldi	r30, 0x40	; 64
    6848:	f6 e0       	ldi	r31, 0x06	; 6
    684a:	37 c0       	rjmp	.+110    	; 0x68ba <hal_spiReadBlock+0x2de>
    684c:	90 91 60 06 	lds	r25, 0x0660
    6850:	98 23       	and	r25, r24
    6852:	a1 f1       	breq	.+104    	; 0x68bc <hal_spiReadBlock+0x2e0>
    6854:	e0 e6       	ldi	r30, 0x60	; 96
    6856:	f6 e0       	ldi	r31, 0x06	; 6
    6858:	30 c0       	rjmp	.+96     	; 0x68ba <hal_spiReadBlock+0x2de>
    685a:	90 91 80 06 	lds	r25, 0x0680
    685e:	98 23       	and	r25, r24
    6860:	69 f1       	breq	.+90     	; 0x68bc <hal_spiReadBlock+0x2e0>
    6862:	e0 e8       	ldi	r30, 0x80	; 128
    6864:	f6 e0       	ldi	r31, 0x06	; 6
    6866:	29 c0       	rjmp	.+82     	; 0x68ba <hal_spiReadBlock+0x2de>
    6868:	90 91 a0 06 	lds	r25, 0x06A0
    686c:	98 23       	and	r25, r24
    686e:	31 f1       	breq	.+76     	; 0x68bc <hal_spiReadBlock+0x2e0>
    6870:	e0 ea       	ldi	r30, 0xA0	; 160
    6872:	f6 e0       	ldi	r31, 0x06	; 6
    6874:	22 c0       	rjmp	.+68     	; 0x68ba <hal_spiReadBlock+0x2de>
    6876:	90 91 e0 06 	lds	r25, 0x06E0
    687a:	98 23       	and	r25, r24
    687c:	f9 f0       	breq	.+62     	; 0x68bc <hal_spiReadBlock+0x2e0>
    687e:	e0 ee       	ldi	r30, 0xE0	; 224
    6880:	f6 e0       	ldi	r31, 0x06	; 6
    6882:	1b c0       	rjmp	.+54     	; 0x68ba <hal_spiReadBlock+0x2de>
    6884:	90 91 00 07 	lds	r25, 0x0700
    6888:	98 23       	and	r25, r24
    688a:	c1 f0       	breq	.+48     	; 0x68bc <hal_spiReadBlock+0x2e0>
    688c:	e0 e0       	ldi	r30, 0x00	; 0
    688e:	f7 e0       	ldi	r31, 0x07	; 7
    6890:	14 c0       	rjmp	.+40     	; 0x68ba <hal_spiReadBlock+0x2de>
    6892:	90 91 20 07 	lds	r25, 0x0720
    6896:	98 23       	and	r25, r24
    6898:	89 f0       	breq	.+34     	; 0x68bc <hal_spiReadBlock+0x2e0>
    689a:	e0 e2       	ldi	r30, 0x20	; 32
    689c:	f7 e0       	ldi	r31, 0x07	; 7
    689e:	0d c0       	rjmp	.+26     	; 0x68ba <hal_spiReadBlock+0x2de>
    68a0:	90 91 c0 07 	lds	r25, 0x07C0
    68a4:	98 23       	and	r25, r24
    68a6:	51 f0       	breq	.+20     	; 0x68bc <hal_spiReadBlock+0x2e0>
    68a8:	e0 ec       	ldi	r30, 0xC0	; 192
    68aa:	f7 e0       	ldi	r31, 0x07	; 7
    68ac:	06 c0       	rjmp	.+12     	; 0x68ba <hal_spiReadBlock+0x2de>
    68ae:	90 91 e0 07 	lds	r25, 0x07E0
    68b2:	98 23       	and	r25, r24
    68b4:	19 f0       	breq	.+6      	; 0x68bc <hal_spiReadBlock+0x2e0>
    68b6:	e0 ee       	ldi	r30, 0xE0	; 224
    68b8:	f7 e0       	ldi	r31, 0x07	; 7
    68ba:	86 83       	std	Z+6, r24	; 0x06
    68bc:	f4 01       	movw	r30, r8
    68be:	27 81       	ldd	r18, Z+7	; 0x07
    68c0:	30 85       	ldd	r19, Z+8	; 0x08
    68c2:	f2 01       	movw	r30, r4
    68c4:	a2 81       	ldd	r26, Z+2	; 0x02
    68c6:	b3 81       	ldd	r27, Z+3	; 0x03
    68c8:	8c 91       	ld	r24, X
    68ca:	d9 01       	movw	r26, r18
    68cc:	13 96       	adiw	r26, 0x03	; 3
    68ce:	8c 93       	st	X, r24
    68d0:	13 97       	sbiw	r26, 0x03	; 3
    68d2:	02 c0       	rjmp	.+4      	; 0x68d8 <hal_spiReadBlock+0x2fc>
    68d4:	8e ef       	ldi	r24, 0xFE	; 254
    68d6:	01 c0       	rjmp	.+2      	; 0x68da <hal_spiReadBlock+0x2fe>
    68d8:	80 e0       	ldi	r24, 0x00	; 0
    68da:	63 96       	adiw	r28, 0x13	; 19
    68dc:	cd bf       	out	0x3d, r28	; 61
    68de:	de bf       	out	0x3e, r29	; 62
    68e0:	df 91       	pop	r29
    68e2:	cf 91       	pop	r28
    68e4:	1f 91       	pop	r17
    68e6:	0f 91       	pop	r16
    68e8:	ff 90       	pop	r15
    68ea:	ef 90       	pop	r14
    68ec:	df 90       	pop	r13
    68ee:	cf 90       	pop	r12
    68f0:	bf 90       	pop	r11
    68f2:	af 90       	pop	r10
    68f4:	9f 90       	pop	r9
    68f6:	8f 90       	pop	r8
    68f8:	7f 90       	pop	r7
    68fa:	6f 90       	pop	r6
    68fc:	5f 90       	pop	r5
    68fe:	4f 90       	pop	r4
    6900:	3f 90       	pop	r3
    6902:	2f 90       	pop	r2
    6904:	08 95       	ret

00006906 <hal_spiWriteBlock>:
    6906:	2f 92       	push	r2
    6908:	3f 92       	push	r3
    690a:	4f 92       	push	r4
    690c:	5f 92       	push	r5
    690e:	6f 92       	push	r6
    6910:	7f 92       	push	r7
    6912:	8f 92       	push	r8
    6914:	9f 92       	push	r9
    6916:	af 92       	push	r10
    6918:	bf 92       	push	r11
    691a:	cf 92       	push	r12
    691c:	df 92       	push	r13
    691e:	ef 92       	push	r14
    6920:	ff 92       	push	r15
    6922:	0f 93       	push	r16
    6924:	1f 93       	push	r17
    6926:	cf 93       	push	r28
    6928:	df 93       	push	r29
    692a:	cd b7       	in	r28, 0x3d	; 61
    692c:	de b7       	in	r29, 0x3e	; 62
    692e:	63 97       	sbiw	r28, 0x13	; 19
    6930:	cd bf       	out	0x3d, r28	; 61
    6932:	de bf       	out	0x3e, r29	; 62
    6934:	88 8b       	std	Y+16, r24	; 0x10
    6936:	99 8b       	std	Y+17, r25	; 0x11
    6938:	46 2e       	mov	r4, r22
    693a:	4a 8b       	std	Y+18, r20	; 0x12
    693c:	5b 8b       	std	Y+19, r21	; 0x13
    693e:	19 01       	movw	r2, r18
    6940:	e8 89       	ldd	r30, Y+16	; 0x10
    6942:	f9 89       	ldd	r31, Y+17	; 0x11
    6944:	80 91 26 21 	lds	r24, 0x2126
    6948:	90 91 27 21 	lds	r25, 0x2127
    694c:	24 81       	ldd	r18, Z+4	; 0x04
    694e:	35 81       	ldd	r19, Z+5	; 0x05
    6950:	28 17       	cp	r18, r24
    6952:	39 07       	cpc	r19, r25
    6954:	09 f0       	breq	.+2      	; 0x6958 <hal_spiWriteBlock+0x52>
    6956:	4b c1       	rjmp	.+662    	; 0x6bee <hal_spiWriteBlock+0x2e8>
    6958:	e8 89       	ldd	r30, Y+16	; 0x10
    695a:	f9 89       	ldd	r31, Y+17	; 0x11
    695c:	60 80       	ld	r6, Z
    695e:	71 80       	ldd	r7, Z+1	; 0x01
    6960:	d3 01       	movw	r26, r6
    6962:	1c 96       	adiw	r26, 0x0c	; 12
    6964:	8d 90       	ld	r8, X+
    6966:	9c 90       	ld	r9, X
    6968:	1d 97       	sbiw	r26, 0x0d	; 13
    696a:	8f b7       	in	r24, 0x3f	; 63
    696c:	89 83       	std	Y+1, r24	; 0x01
    696e:	f8 94       	cli
    6970:	f4 01       	movw	r30, r8
    6972:	81 85       	ldd	r24, Z+9	; 0x09
    6974:	88 23       	and	r24, r24
    6976:	49 f0       	breq	.+18     	; 0x698a <hal_spiWriteBlock+0x84>
    6978:	82 85       	ldd	r24, Z+10	; 0x0a
    697a:	93 85       	ldd	r25, Z+11	; 0x0b
    697c:	86 15       	cp	r24, r6
    697e:	97 05       	cpc	r25, r7
    6980:	21 f0       	breq	.+8      	; 0x698a <hal_spiWriteBlock+0x84>
    6982:	89 81       	ldd	r24, Y+1	; 0x01
    6984:	8f bf       	out	0x3f, r24	; 63
    6986:	84 ef       	ldi	r24, 0xF4	; 244
    6988:	35 c1       	rjmp	.+618    	; 0x6bf4 <hal_spiWriteBlock+0x2ee>
    698a:	81 e0       	ldi	r24, 0x01	; 1
    698c:	d4 01       	movw	r26, r8
    698e:	19 96       	adiw	r26, 0x09	; 9
    6990:	8c 93       	st	X, r24
    6992:	19 97       	sbiw	r26, 0x09	; 9
    6994:	1a 96       	adiw	r26, 0x0a	; 10
    6996:	6d 92       	st	X+, r6
    6998:	7c 92       	st	X, r7
    699a:	1b 97       	sbiw	r26, 0x0b	; 11
    699c:	89 81       	ldd	r24, Y+1	; 0x01
    699e:	8f bf       	out	0x3f, r24	; 63
    69a0:	8f ef       	ldi	r24, 0xFF	; 255
    69a2:	80 93 42 21 	sts	0x2142, r24
    69a6:	8a 89       	ldd	r24, Y+18	; 0x12
    69a8:	9b 89       	ldd	r25, Y+19	; 0x13
    69aa:	f3 01       	movw	r30, r6
    69ac:	82 83       	std	Z+2, r24	; 0x02
    69ae:	93 83       	std	Z+3, r25	; 0x03
    69b0:	82 e4       	ldi	r24, 0x42	; 66
    69b2:	91 e2       	ldi	r25, 0x21	; 33
    69b4:	84 83       	std	Z+4, r24	; 0x04
    69b6:	95 83       	std	Z+5, r25	; 0x05
    69b8:	26 82       	std	Z+6, r2	; 0x06
    69ba:	37 82       	std	Z+7, r3	; 0x07
    69bc:	1e 96       	adiw	r26, 0x0e	; 14
    69be:	8d 91       	ld	r24, X+
    69c0:	9c 91       	ld	r25, X
    69c2:	1f 97       	sbiw	r26, 0x0f	; 15
    69c4:	17 96       	adiw	r26, 0x07	; 7
    69c6:	ed 91       	ld	r30, X+
    69c8:	fc 91       	ld	r31, X
    69ca:	18 97       	sbiw	r26, 0x08	; 8
    69cc:	18 16       	cp	r1, r24
    69ce:	19 06       	cpc	r1, r25
    69d0:	0c f0       	brlt	.+2      	; 0x69d4 <hal_spiWriteBlock+0xce>
    69d2:	7a c0       	rjmp	.+244    	; 0x6ac8 <hal_spiWriteBlock+0x1c2>
    69d4:	11 82       	std	Z+1, r1	; 0x01
    69d6:	ec 91       	ld	r30, X
    69d8:	e1 50       	subi	r30, 0x01	; 1
    69da:	e3 30       	cpi	r30, 0x03	; 3
    69dc:	28 f4       	brcc	.+10     	; 0x69e8 <hal_spiWriteBlock+0xe2>
    69de:	f0 e0       	ldi	r31, 0x00	; 0
    69e0:	ea 5b       	subi	r30, 0xBA	; 186
    69e2:	fe 4d       	sbci	r31, 0xDE	; 222
    69e4:	60 81       	ld	r22, Z
    69e6:	01 c0       	rjmp	.+2      	; 0x69ea <hal_spiWriteBlock+0xe4>
    69e8:	6a e4       	ldi	r22, 0x4A	; 74
    69ea:	d4 01       	movw	r26, r8
    69ec:	16 96       	adiw	r26, 0x06	; 6
    69ee:	2c 91       	ld	r18, X
    69f0:	16 97       	sbiw	r26, 0x06	; 6
    69f2:	22 23       	and	r18, r18
    69f4:	31 f4       	brne	.+12     	; 0x6a02 <hal_spiWriteBlock+0xfc>
    69f6:	8a 89       	ldd	r24, Y+18	; 0x12
    69f8:	9b 89       	ldd	r25, Y+19	; 0x13
    69fa:	01 96       	adiw	r24, 0x01	; 1
    69fc:	8a 83       	std	Y+2, r24	; 0x02
    69fe:	9b 83       	std	Y+3, r25	; 0x03
    6a00:	04 c0       	rjmp	.+8      	; 0x6a0a <hal_spiWriteBlock+0x104>
    6a02:	ea 89       	ldd	r30, Y+18	; 0x12
    6a04:	fb 89       	ldd	r31, Y+19	; 0x13
    6a06:	ea 83       	std	Y+2, r30	; 0x02
    6a08:	fb 83       	std	Y+3, r31	; 0x03
    6a0a:	d4 01       	movw	r26, r8
    6a0c:	17 96       	adiw	r26, 0x07	; 7
    6a0e:	8d 91       	ld	r24, X+
    6a10:	9c 91       	ld	r25, X
    6a12:	18 97       	sbiw	r26, 0x08	; 8
    6a14:	03 96       	adiw	r24, 0x03	; 3
    6a16:	8c 83       	std	Y+4, r24	; 0x04
    6a18:	9d 83       	std	Y+5, r25	; 0x05
    6a1a:	81 e0       	ldi	r24, 0x01	; 1
    6a1c:	8e 83       	std	Y+6, r24	; 0x06
    6a1e:	1f 82       	std	Y+7, r1	; 0x07
    6a20:	88 87       	std	Y+8, r24	; 0x08
    6a22:	19 86       	std	Y+9, r1	; 0x09
    6a24:	22 23       	and	r18, r18
    6a26:	29 f4       	brne	.+10     	; 0x6a32 <hal_spiWriteBlock+0x12c>
    6a28:	c1 01       	movw	r24, r2
    6a2a:	01 97       	sbiw	r24, 0x01	; 1
    6a2c:	8a 87       	std	Y+10, r24	; 0x0a
    6a2e:	9b 87       	std	Y+11, r25	; 0x0b
    6a30:	02 c0       	rjmp	.+4      	; 0x6a36 <hal_spiWriteBlock+0x130>
    6a32:	2a 86       	std	Y+10, r2	; 0x0a
    6a34:	3b 86       	std	Y+11, r3	; 0x0b
    6a36:	1c 86       	std	Y+12, r1	; 0x0c
    6a38:	55 24       	eor	r5, r5
    6a3a:	53 94       	inc	r5
    6a3c:	5d 86       	std	Y+13, r5	; 0x0d
    6a3e:	6e 87       	std	Y+14, r22	; 0x0e
    6a40:	1f 86       	std	Y+15, r1	; 0x0f
    6a42:	f4 01       	movw	r30, r8
    6a44:	86 85       	ldd	r24, Z+14	; 0x0e
    6a46:	97 85       	ldd	r25, Z+15	; 0x0f
    6a48:	aa 80       	ldd	r10, Y+2	; 0x02
    6a4a:	bb 80       	ldd	r11, Y+3	; 0x03
    6a4c:	cc 80       	ldd	r12, Y+4	; 0x04
    6a4e:	dd 80       	ldd	r13, Y+5	; 0x05
    6a50:	ee 80       	ldd	r14, Y+6	; 0x06
    6a52:	ff 80       	ldd	r15, Y+7	; 0x07
    6a54:	08 85       	ldd	r16, Y+8	; 0x08
    6a56:	19 85       	ldd	r17, Y+9	; 0x09
    6a58:	2a 85       	ldd	r18, Y+10	; 0x0a
    6a5a:	3b 85       	ldd	r19, Y+11	; 0x0b
    6a5c:	40 e0       	ldi	r20, 0x00	; 0
    6a5e:	51 e0       	ldi	r21, 0x01	; 1
    6a60:	70 e0       	ldi	r23, 0x00	; 0
    6a62:	0e 94 ff 4d 	call	0x9bfe	; 0x9bfe <hal_configureDmaChannel>
    6a66:	d4 01       	movw	r26, r8
    6a68:	1e 96       	adiw	r26, 0x0e	; 14
    6a6a:	8d 91       	ld	r24, X+
    6a6c:	9c 91       	ld	r25, X
    6a6e:	1f 97       	sbiw	r26, 0x0f	; 15
    6a70:	0e 94 11 50 	call	0xa022	; 0xa022 <hal_dmaEnableChannel>
    6a74:	f4 01       	movw	r30, r8
    6a76:	87 81       	ldd	r24, Z+7	; 0x07
    6a78:	90 85       	ldd	r25, Z+8	; 0x08
    6a7a:	03 96       	adiw	r24, 0x03	; 3
    6a7c:	8a 83       	std	Y+2, r24	; 0x02
    6a7e:	9b 83       	std	Y+3, r25	; 0x03
    6a80:	d3 01       	movw	r26, r6
    6a82:	14 96       	adiw	r26, 0x04	; 4
    6a84:	8d 91       	ld	r24, X+
    6a86:	9c 91       	ld	r25, X
    6a88:	15 97       	sbiw	r26, 0x05	; 5
    6a8a:	8c 83       	std	Y+4, r24	; 0x04
    6a8c:	9d 83       	std	Y+5, r25	; 0x05
    6a8e:	1e 82       	std	Y+6, r1	; 0x06
    6a90:	18 86       	std	Y+8, r1	; 0x08
    6a92:	59 86       	std	Y+9, r5	; 0x09
    6a94:	2a 86       	std	Y+10, r2	; 0x0a
    6a96:	3b 86       	std	Y+11, r3	; 0x0b
    6a98:	80 89       	ldd	r24, Z+16	; 0x10
    6a9a:	91 89       	ldd	r25, Z+17	; 0x11
    6a9c:	aa 80       	ldd	r10, Y+2	; 0x02
    6a9e:	bb 80       	ldd	r11, Y+3	; 0x03
    6aa0:	cc 80       	ldd	r12, Y+4	; 0x04
    6aa2:	dd 80       	ldd	r13, Y+5	; 0x05
    6aa4:	ee 24       	eor	r14, r14
    6aa6:	ff 80       	ldd	r15, Y+7	; 0x07
    6aa8:	00 e0       	ldi	r16, 0x00	; 0
    6aaa:	11 e0       	ldi	r17, 0x01	; 1
    6aac:	2a 85       	ldd	r18, Y+10	; 0x0a
    6aae:	3b 85       	ldd	r19, Y+11	; 0x0b
    6ab0:	4c 85       	ldd	r20, Y+12	; 0x0c
    6ab2:	5d 85       	ldd	r21, Y+13	; 0x0d
    6ab4:	6e 85       	ldd	r22, Y+14	; 0x0e
    6ab6:	7f 85       	ldd	r23, Y+15	; 0x0f
    6ab8:	0e 94 ff 4d 	call	0x9bfe	; 0x9bfe <hal_configureDmaChannel>
    6abc:	f4 01       	movw	r30, r8
    6abe:	80 89       	ldd	r24, Z+16	; 0x10
    6ac0:	91 89       	ldd	r25, Z+17	; 0x11
    6ac2:	0e 94 11 50 	call	0xa022	; 0xa022 <hal_dmaEnableChannel>
    6ac6:	02 c0       	rjmp	.+4      	; 0x6acc <hal_spiWriteBlock+0x1c6>
    6ac8:	83 e0       	ldi	r24, 0x03	; 3
    6aca:	81 83       	std	Z+1, r24	; 0x01
    6acc:	d4 01       	movw	r26, r8
    6ace:	16 96       	adiw	r26, 0x06	; 6
    6ad0:	8c 91       	ld	r24, X
    6ad2:	16 97       	sbiw	r26, 0x06	; 6
    6ad4:	88 23       	and	r24, r24
    6ad6:	09 f0       	breq	.+2      	; 0x6ada <hal_spiWriteBlock+0x1d4>
    6ad8:	8c c0       	rjmp	.+280    	; 0x6bf2 <hal_spiWriteBlock+0x2ec>
    6ada:	f3 01       	movw	r30, r6
    6adc:	10 86       	std	Z+8, r1	; 0x08
    6ade:	11 86       	std	Z+9, r1	; 0x09
    6ae0:	40 8a       	std	Z+16, r4	; 0x10
    6ae2:	44 20       	and	r4, r4
    6ae4:	09 f4       	brne	.+2      	; 0x6ae8 <hal_spiWriteBlock+0x1e2>
    6ae6:	79 c0       	rjmp	.+242    	; 0x6bda <hal_spiWriteBlock+0x2d4>
    6ae8:	83 85       	ldd	r24, Z+11	; 0x0b
    6aea:	92 85       	ldd	r25, Z+10	; 0x0a
    6aec:	95 30       	cpi	r25, 0x05	; 5
    6aee:	09 f4       	brne	.+2      	; 0x6af2 <hal_spiWriteBlock+0x1ec>
    6af0:	4a c0       	rjmp	.+148    	; 0x6b86 <hal_spiWriteBlock+0x280>
    6af2:	96 30       	cpi	r25, 0x06	; 6
    6af4:	80 f4       	brcc	.+32     	; 0x6b16 <hal_spiWriteBlock+0x210>
    6af6:	92 30       	cpi	r25, 0x02	; 2
    6af8:	81 f1       	breq	.+96     	; 0x6b5a <hal_spiWriteBlock+0x254>
    6afa:	93 30       	cpi	r25, 0x03	; 3
    6afc:	30 f4       	brcc	.+12     	; 0x6b0a <hal_spiWriteBlock+0x204>
    6afe:	99 23       	and	r25, r25
    6b00:	e1 f0       	breq	.+56     	; 0x6b3a <hal_spiWriteBlock+0x234>
    6b02:	91 30       	cpi	r25, 0x01	; 1
    6b04:	09 f0       	breq	.+2      	; 0x6b08 <hal_spiWriteBlock+0x202>
    6b06:	69 c0       	rjmp	.+210    	; 0x6bda <hal_spiWriteBlock+0x2d4>
    6b08:	20 c0       	rjmp	.+64     	; 0x6b4a <hal_spiWriteBlock+0x244>
    6b0a:	93 30       	cpi	r25, 0x03	; 3
    6b0c:	71 f1       	breq	.+92     	; 0x6b6a <hal_spiWriteBlock+0x264>
    6b0e:	94 30       	cpi	r25, 0x04	; 4
    6b10:	09 f0       	breq	.+2      	; 0x6b14 <hal_spiWriteBlock+0x20e>
    6b12:	63 c0       	rjmp	.+198    	; 0x6bda <hal_spiWriteBlock+0x2d4>
    6b14:	31 c0       	rjmp	.+98     	; 0x6b78 <hal_spiWriteBlock+0x272>
    6b16:	98 30       	cpi	r25, 0x08	; 8
    6b18:	09 f4       	brne	.+2      	; 0x6b1c <hal_spiWriteBlock+0x216>
    6b1a:	4a c0       	rjmp	.+148    	; 0x6bb0 <hal_spiWriteBlock+0x2aa>
    6b1c:	99 30       	cpi	r25, 0x09	; 9
    6b1e:	30 f4       	brcc	.+12     	; 0x6b2c <hal_spiWriteBlock+0x226>
    6b20:	96 30       	cpi	r25, 0x06	; 6
    6b22:	c1 f1       	breq	.+112    	; 0x6b94 <hal_spiWriteBlock+0x28e>
    6b24:	97 30       	cpi	r25, 0x07	; 7
    6b26:	09 f0       	breq	.+2      	; 0x6b2a <hal_spiWriteBlock+0x224>
    6b28:	58 c0       	rjmp	.+176    	; 0x6bda <hal_spiWriteBlock+0x2d4>
    6b2a:	3b c0       	rjmp	.+118    	; 0x6ba2 <hal_spiWriteBlock+0x29c>
    6b2c:	99 30       	cpi	r25, 0x09	; 9
    6b2e:	09 f4       	brne	.+2      	; 0x6b32 <hal_spiWriteBlock+0x22c>
    6b30:	46 c0       	rjmp	.+140    	; 0x6bbe <hal_spiWriteBlock+0x2b8>
    6b32:	9a 30       	cpi	r25, 0x0A	; 10
    6b34:	09 f0       	breq	.+2      	; 0x6b38 <hal_spiWriteBlock+0x232>
    6b36:	51 c0       	rjmp	.+162    	; 0x6bda <hal_spiWriteBlock+0x2d4>
    6b38:	49 c0       	rjmp	.+146    	; 0x6bcc <hal_spiWriteBlock+0x2c6>
    6b3a:	90 91 00 06 	lds	r25, 0x0600
    6b3e:	98 23       	and	r25, r24
    6b40:	09 f4       	brne	.+2      	; 0x6b44 <hal_spiWriteBlock+0x23e>
    6b42:	4b c0       	rjmp	.+150    	; 0x6bda <hal_spiWriteBlock+0x2d4>
    6b44:	e0 e0       	ldi	r30, 0x00	; 0
    6b46:	f6 e0       	ldi	r31, 0x06	; 6
    6b48:	47 c0       	rjmp	.+142    	; 0x6bd8 <hal_spiWriteBlock+0x2d2>
    6b4a:	90 91 20 06 	lds	r25, 0x0620
    6b4e:	98 23       	and	r25, r24
    6b50:	09 f4       	brne	.+2      	; 0x6b54 <hal_spiWriteBlock+0x24e>
    6b52:	43 c0       	rjmp	.+134    	; 0x6bda <hal_spiWriteBlock+0x2d4>
    6b54:	e0 e2       	ldi	r30, 0x20	; 32
    6b56:	f6 e0       	ldi	r31, 0x06	; 6
    6b58:	3f c0       	rjmp	.+126    	; 0x6bd8 <hal_spiWriteBlock+0x2d2>
    6b5a:	90 91 40 06 	lds	r25, 0x0640
    6b5e:	98 23       	and	r25, r24
    6b60:	09 f4       	brne	.+2      	; 0x6b64 <hal_spiWriteBlock+0x25e>
    6b62:	3b c0       	rjmp	.+118    	; 0x6bda <hal_spiWriteBlock+0x2d4>
    6b64:	e0 e4       	ldi	r30, 0x40	; 64
    6b66:	f6 e0       	ldi	r31, 0x06	; 6
    6b68:	37 c0       	rjmp	.+110    	; 0x6bd8 <hal_spiWriteBlock+0x2d2>
    6b6a:	90 91 60 06 	lds	r25, 0x0660
    6b6e:	98 23       	and	r25, r24
    6b70:	a1 f1       	breq	.+104    	; 0x6bda <hal_spiWriteBlock+0x2d4>
    6b72:	e0 e6       	ldi	r30, 0x60	; 96
    6b74:	f6 e0       	ldi	r31, 0x06	; 6
    6b76:	30 c0       	rjmp	.+96     	; 0x6bd8 <hal_spiWriteBlock+0x2d2>
    6b78:	90 91 80 06 	lds	r25, 0x0680
    6b7c:	98 23       	and	r25, r24
    6b7e:	69 f1       	breq	.+90     	; 0x6bda <hal_spiWriteBlock+0x2d4>
    6b80:	e0 e8       	ldi	r30, 0x80	; 128
    6b82:	f6 e0       	ldi	r31, 0x06	; 6
    6b84:	29 c0       	rjmp	.+82     	; 0x6bd8 <hal_spiWriteBlock+0x2d2>
    6b86:	90 91 a0 06 	lds	r25, 0x06A0
    6b8a:	98 23       	and	r25, r24
    6b8c:	31 f1       	breq	.+76     	; 0x6bda <hal_spiWriteBlock+0x2d4>
    6b8e:	e0 ea       	ldi	r30, 0xA0	; 160
    6b90:	f6 e0       	ldi	r31, 0x06	; 6
    6b92:	22 c0       	rjmp	.+68     	; 0x6bd8 <hal_spiWriteBlock+0x2d2>
    6b94:	90 91 e0 06 	lds	r25, 0x06E0
    6b98:	98 23       	and	r25, r24
    6b9a:	f9 f0       	breq	.+62     	; 0x6bda <hal_spiWriteBlock+0x2d4>
    6b9c:	e0 ee       	ldi	r30, 0xE0	; 224
    6b9e:	f6 e0       	ldi	r31, 0x06	; 6
    6ba0:	1b c0       	rjmp	.+54     	; 0x6bd8 <hal_spiWriteBlock+0x2d2>
    6ba2:	90 91 00 07 	lds	r25, 0x0700
    6ba6:	98 23       	and	r25, r24
    6ba8:	c1 f0       	breq	.+48     	; 0x6bda <hal_spiWriteBlock+0x2d4>
    6baa:	e0 e0       	ldi	r30, 0x00	; 0
    6bac:	f7 e0       	ldi	r31, 0x07	; 7
    6bae:	14 c0       	rjmp	.+40     	; 0x6bd8 <hal_spiWriteBlock+0x2d2>
    6bb0:	90 91 20 07 	lds	r25, 0x0720
    6bb4:	98 23       	and	r25, r24
    6bb6:	89 f0       	breq	.+34     	; 0x6bda <hal_spiWriteBlock+0x2d4>
    6bb8:	e0 e2       	ldi	r30, 0x20	; 32
    6bba:	f7 e0       	ldi	r31, 0x07	; 7
    6bbc:	0d c0       	rjmp	.+26     	; 0x6bd8 <hal_spiWriteBlock+0x2d2>
    6bbe:	90 91 c0 07 	lds	r25, 0x07C0
    6bc2:	98 23       	and	r25, r24
    6bc4:	51 f0       	breq	.+20     	; 0x6bda <hal_spiWriteBlock+0x2d4>
    6bc6:	e0 ec       	ldi	r30, 0xC0	; 192
    6bc8:	f7 e0       	ldi	r31, 0x07	; 7
    6bca:	06 c0       	rjmp	.+12     	; 0x6bd8 <hal_spiWriteBlock+0x2d2>
    6bcc:	90 91 e0 07 	lds	r25, 0x07E0
    6bd0:	98 23       	and	r25, r24
    6bd2:	19 f0       	breq	.+6      	; 0x6bda <hal_spiWriteBlock+0x2d4>
    6bd4:	e0 ee       	ldi	r30, 0xE0	; 224
    6bd6:	f7 e0       	ldi	r31, 0x07	; 7
    6bd8:	86 83       	std	Z+6, r24	; 0x06
    6bda:	d4 01       	movw	r26, r8
    6bdc:	17 96       	adiw	r26, 0x07	; 7
    6bde:	ed 91       	ld	r30, X+
    6be0:	fc 91       	ld	r31, X
    6be2:	18 97       	sbiw	r26, 0x08	; 8
    6be4:	aa 89       	ldd	r26, Y+18	; 0x12
    6be6:	bb 89       	ldd	r27, Y+19	; 0x13
    6be8:	8c 91       	ld	r24, X
    6bea:	83 83       	std	Z+3, r24	; 0x03
    6bec:	02 c0       	rjmp	.+4      	; 0x6bf2 <hal_spiWriteBlock+0x2ec>
    6bee:	8e ef       	ldi	r24, 0xFE	; 254
    6bf0:	01 c0       	rjmp	.+2      	; 0x6bf4 <hal_spiWriteBlock+0x2ee>
    6bf2:	80 e0       	ldi	r24, 0x00	; 0
    6bf4:	63 96       	adiw	r28, 0x13	; 19
    6bf6:	cd bf       	out	0x3d, r28	; 61
    6bf8:	de bf       	out	0x3e, r29	; 62
    6bfa:	df 91       	pop	r29
    6bfc:	cf 91       	pop	r28
    6bfe:	1f 91       	pop	r17
    6c00:	0f 91       	pop	r16
    6c02:	ff 90       	pop	r15
    6c04:	ef 90       	pop	r14
    6c06:	df 90       	pop	r13
    6c08:	cf 90       	pop	r12
    6c0a:	bf 90       	pop	r11
    6c0c:	af 90       	pop	r10
    6c0e:	9f 90       	pop	r9
    6c10:	8f 90       	pop	r8
    6c12:	7f 90       	pop	r7
    6c14:	6f 90       	pop	r6
    6c16:	5f 90       	pop	r5
    6c18:	4f 90       	pop	r4
    6c1a:	3f 90       	pop	r3
    6c1c:	2f 90       	pop	r2
    6c1e:	08 95       	ret

00006c20 <hal_spiReadWrite>:
    6c20:	2f 92       	push	r2
    6c22:	3f 92       	push	r3
    6c24:	4f 92       	push	r4
    6c26:	5f 92       	push	r5
    6c28:	6f 92       	push	r6
    6c2a:	7f 92       	push	r7
    6c2c:	8f 92       	push	r8
    6c2e:	9f 92       	push	r9
    6c30:	af 92       	push	r10
    6c32:	bf 92       	push	r11
    6c34:	cf 92       	push	r12
    6c36:	df 92       	push	r13
    6c38:	ef 92       	push	r14
    6c3a:	ff 92       	push	r15
    6c3c:	0f 93       	push	r16
    6c3e:	1f 93       	push	r17
    6c40:	cf 93       	push	r28
    6c42:	df 93       	push	r29
    6c44:	cd b7       	in	r28, 0x3d	; 61
    6c46:	de b7       	in	r29, 0x3e	; 62
    6c48:	65 97       	sbiw	r28, 0x15	; 21
    6c4a:	cd bf       	out	0x3d, r28	; 61
    6c4c:	de bf       	out	0x3e, r29	; 62
    6c4e:	88 8b       	std	Y+16, r24	; 0x10
    6c50:	99 8b       	std	Y+17, r25	; 0x11
    6c52:	46 2e       	mov	r4, r22
    6c54:	4a 8b       	std	Y+18, r20	; 0x12
    6c56:	5b 8b       	std	Y+19, r21	; 0x13
    6c58:	2c 8b       	std	Y+20, r18	; 0x14
    6c5a:	3d 8b       	std	Y+21, r19	; 0x15
    6c5c:	18 01       	movw	r2, r16
    6c5e:	e8 89       	ldd	r30, Y+16	; 0x10
    6c60:	f9 89       	ldd	r31, Y+17	; 0x11
    6c62:	20 91 26 21 	lds	r18, 0x2126
    6c66:	30 91 27 21 	lds	r19, 0x2127
    6c6a:	84 81       	ldd	r24, Z+4	; 0x04
    6c6c:	95 81       	ldd	r25, Z+5	; 0x05
    6c6e:	82 17       	cp	r24, r18
    6c70:	93 07       	cpc	r25, r19
    6c72:	09 f0       	breq	.+2      	; 0x6c76 <hal_spiReadWrite+0x56>
    6c74:	47 c1       	rjmp	.+654    	; 0x6f04 <hal_spiReadWrite+0x2e4>
    6c76:	e8 89       	ldd	r30, Y+16	; 0x10
    6c78:	f9 89       	ldd	r31, Y+17	; 0x11
    6c7a:	60 80       	ld	r6, Z
    6c7c:	71 80       	ldd	r7, Z+1	; 0x01
    6c7e:	d3 01       	movw	r26, r6
    6c80:	1c 96       	adiw	r26, 0x0c	; 12
    6c82:	8d 90       	ld	r8, X+
    6c84:	9c 90       	ld	r9, X
    6c86:	1d 97       	sbiw	r26, 0x0d	; 13
    6c88:	8f b7       	in	r24, 0x3f	; 63
    6c8a:	89 83       	std	Y+1, r24	; 0x01
    6c8c:	f8 94       	cli
    6c8e:	f4 01       	movw	r30, r8
    6c90:	81 85       	ldd	r24, Z+9	; 0x09
    6c92:	88 23       	and	r24, r24
    6c94:	49 f0       	breq	.+18     	; 0x6ca8 <hal_spiReadWrite+0x88>
    6c96:	82 85       	ldd	r24, Z+10	; 0x0a
    6c98:	93 85       	ldd	r25, Z+11	; 0x0b
    6c9a:	86 15       	cp	r24, r6
    6c9c:	97 05       	cpc	r25, r7
    6c9e:	21 f0       	breq	.+8      	; 0x6ca8 <hal_spiReadWrite+0x88>
    6ca0:	89 81       	ldd	r24, Y+1	; 0x01
    6ca2:	8f bf       	out	0x3f, r24	; 63
    6ca4:	84 ef       	ldi	r24, 0xF4	; 244
    6ca6:	31 c1       	rjmp	.+610    	; 0x6f0a <hal_spiReadWrite+0x2ea>
    6ca8:	81 e0       	ldi	r24, 0x01	; 1
    6caa:	d4 01       	movw	r26, r8
    6cac:	19 96       	adiw	r26, 0x09	; 9
    6cae:	8c 93       	st	X, r24
    6cb0:	19 97       	sbiw	r26, 0x09	; 9
    6cb2:	1a 96       	adiw	r26, 0x0a	; 10
    6cb4:	6d 92       	st	X+, r6
    6cb6:	7c 92       	st	X, r7
    6cb8:	1b 97       	sbiw	r26, 0x0b	; 11
    6cba:	89 81       	ldd	r24, Y+1	; 0x01
    6cbc:	8f bf       	out	0x3f, r24	; 63
    6cbe:	8a 89       	ldd	r24, Y+18	; 0x12
    6cc0:	9b 89       	ldd	r25, Y+19	; 0x13
    6cc2:	f3 01       	movw	r30, r6
    6cc4:	82 83       	std	Z+2, r24	; 0x02
    6cc6:	93 83       	std	Z+3, r25	; 0x03
    6cc8:	ac 89       	ldd	r26, Y+20	; 0x14
    6cca:	bd 89       	ldd	r27, Y+21	; 0x15
    6ccc:	a4 83       	std	Z+4, r26	; 0x04
    6cce:	b5 83       	std	Z+5, r27	; 0x05
    6cd0:	26 82       	std	Z+6, r2	; 0x06
    6cd2:	37 82       	std	Z+7, r3	; 0x07
    6cd4:	f4 01       	movw	r30, r8
    6cd6:	86 85       	ldd	r24, Z+14	; 0x0e
    6cd8:	97 85       	ldd	r25, Z+15	; 0x0f
    6cda:	07 80       	ldd	r0, Z+7	; 0x07
    6cdc:	f0 85       	ldd	r31, Z+8	; 0x08
    6cde:	e0 2d       	mov	r30, r0
    6ce0:	18 16       	cp	r1, r24
    6ce2:	19 06       	cpc	r1, r25
    6ce4:	0c f0       	brlt	.+2      	; 0x6ce8 <hal_spiReadWrite+0xc8>
    6ce6:	75 c0       	rjmp	.+234    	; 0x6dd2 <hal_spiReadWrite+0x1b2>
    6ce8:	11 82       	std	Z+1, r1	; 0x01
    6cea:	d4 01       	movw	r26, r8
    6cec:	ec 91       	ld	r30, X
    6cee:	e1 50       	subi	r30, 0x01	; 1
    6cf0:	e3 30       	cpi	r30, 0x03	; 3
    6cf2:	28 f4       	brcc	.+10     	; 0x6cfe <hal_spiReadWrite+0xde>
    6cf4:	f0 e0       	ldi	r31, 0x00	; 0
    6cf6:	e7 5b       	subi	r30, 0xB7	; 183
    6cf8:	fe 4d       	sbci	r31, 0xDE	; 222
    6cfa:	60 81       	ld	r22, Z
    6cfc:	01 c0       	rjmp	.+2      	; 0x6d00 <hal_spiReadWrite+0xe0>
    6cfe:	6a e4       	ldi	r22, 0x4A	; 74
    6d00:	f4 01       	movw	r30, r8
    6d02:	26 81       	ldd	r18, Z+6	; 0x06
    6d04:	8a 89       	ldd	r24, Y+18	; 0x12
    6d06:	9b 89       	ldd	r25, Y+19	; 0x13
    6d08:	22 23       	and	r18, r18
    6d0a:	09 f4       	brne	.+2      	; 0x6d0e <hal_spiReadWrite+0xee>
    6d0c:	01 96       	adiw	r24, 0x01	; 1
    6d0e:	8a 83       	std	Y+2, r24	; 0x02
    6d10:	9b 83       	std	Y+3, r25	; 0x03
    6d12:	d4 01       	movw	r26, r8
    6d14:	17 96       	adiw	r26, 0x07	; 7
    6d16:	8d 91       	ld	r24, X+
    6d18:	9c 91       	ld	r25, X
    6d1a:	18 97       	sbiw	r26, 0x08	; 8
    6d1c:	03 96       	adiw	r24, 0x03	; 3
    6d1e:	8c 83       	std	Y+4, r24	; 0x04
    6d20:	9d 83       	std	Y+5, r25	; 0x05
    6d22:	81 e0       	ldi	r24, 0x01	; 1
    6d24:	8e 83       	std	Y+6, r24	; 0x06
    6d26:	1f 82       	std	Y+7, r1	; 0x07
    6d28:	88 87       	std	Y+8, r24	; 0x08
    6d2a:	19 86       	std	Y+9, r1	; 0x09
    6d2c:	22 23       	and	r18, r18
    6d2e:	29 f4       	brne	.+10     	; 0x6d3a <hal_spiReadWrite+0x11a>
    6d30:	c1 01       	movw	r24, r2
    6d32:	01 97       	sbiw	r24, 0x01	; 1
    6d34:	8a 87       	std	Y+10, r24	; 0x0a
    6d36:	9b 87       	std	Y+11, r25	; 0x0b
    6d38:	02 c0       	rjmp	.+4      	; 0x6d3e <hal_spiReadWrite+0x11e>
    6d3a:	2a 86       	std	Y+10, r2	; 0x0a
    6d3c:	3b 86       	std	Y+11, r3	; 0x0b
    6d3e:	1c 86       	std	Y+12, r1	; 0x0c
    6d40:	55 24       	eor	r5, r5
    6d42:	53 94       	inc	r5
    6d44:	5d 86       	std	Y+13, r5	; 0x0d
    6d46:	6e 87       	std	Y+14, r22	; 0x0e
    6d48:	1f 86       	std	Y+15, r1	; 0x0f
    6d4a:	f4 01       	movw	r30, r8
    6d4c:	86 85       	ldd	r24, Z+14	; 0x0e
    6d4e:	97 85       	ldd	r25, Z+15	; 0x0f
    6d50:	aa 80       	ldd	r10, Y+2	; 0x02
    6d52:	bb 80       	ldd	r11, Y+3	; 0x03
    6d54:	cc 80       	ldd	r12, Y+4	; 0x04
    6d56:	dd 80       	ldd	r13, Y+5	; 0x05
    6d58:	ee 80       	ldd	r14, Y+6	; 0x06
    6d5a:	ff 80       	ldd	r15, Y+7	; 0x07
    6d5c:	08 85       	ldd	r16, Y+8	; 0x08
    6d5e:	19 85       	ldd	r17, Y+9	; 0x09
    6d60:	2a 85       	ldd	r18, Y+10	; 0x0a
    6d62:	3b 85       	ldd	r19, Y+11	; 0x0b
    6d64:	40 e0       	ldi	r20, 0x00	; 0
    6d66:	51 e0       	ldi	r21, 0x01	; 1
    6d68:	70 e0       	ldi	r23, 0x00	; 0
    6d6a:	0e 94 ff 4d 	call	0x9bfe	; 0x9bfe <hal_configureDmaChannel>
    6d6e:	d4 01       	movw	r26, r8
    6d70:	1e 96       	adiw	r26, 0x0e	; 14
    6d72:	8d 91       	ld	r24, X+
    6d74:	9c 91       	ld	r25, X
    6d76:	1f 97       	sbiw	r26, 0x0f	; 15
    6d78:	0e 94 11 50 	call	0xa022	; 0xa022 <hal_dmaEnableChannel>
    6d7c:	f4 01       	movw	r30, r8
    6d7e:	87 81       	ldd	r24, Z+7	; 0x07
    6d80:	90 85       	ldd	r25, Z+8	; 0x08
    6d82:	03 96       	adiw	r24, 0x03	; 3
    6d84:	8a 83       	std	Y+2, r24	; 0x02
    6d86:	9b 83       	std	Y+3, r25	; 0x03
    6d88:	8c 89       	ldd	r24, Y+20	; 0x14
    6d8a:	9d 89       	ldd	r25, Y+21	; 0x15
    6d8c:	8c 83       	std	Y+4, r24	; 0x04
    6d8e:	9d 83       	std	Y+5, r25	; 0x05
    6d90:	1e 82       	std	Y+6, r1	; 0x06
    6d92:	5f 82       	std	Y+7, r5	; 0x07
    6d94:	18 86       	std	Y+8, r1	; 0x08
    6d96:	59 86       	std	Y+9, r5	; 0x09
    6d98:	2a 86       	std	Y+10, r2	; 0x0a
    6d9a:	3b 86       	std	Y+11, r3	; 0x0b
    6d9c:	80 89       	ldd	r24, Z+16	; 0x10
    6d9e:	91 89       	ldd	r25, Z+17	; 0x11
    6da0:	aa 80       	ldd	r10, Y+2	; 0x02
    6da2:	bb 80       	ldd	r11, Y+3	; 0x03
    6da4:	cc 80       	ldd	r12, Y+4	; 0x04
    6da6:	dd 80       	ldd	r13, Y+5	; 0x05
    6da8:	ee 24       	eor	r14, r14
    6daa:	ff 24       	eor	r15, r15
    6dac:	f3 94       	inc	r15
    6dae:	00 e0       	ldi	r16, 0x00	; 0
    6db0:	11 e0       	ldi	r17, 0x01	; 1
    6db2:	2a 85       	ldd	r18, Y+10	; 0x0a
    6db4:	3b 85       	ldd	r19, Y+11	; 0x0b
    6db6:	4c 85       	ldd	r20, Y+12	; 0x0c
    6db8:	5d 85       	ldd	r21, Y+13	; 0x0d
    6dba:	6e 85       	ldd	r22, Y+14	; 0x0e
    6dbc:	7f 85       	ldd	r23, Y+15	; 0x0f
    6dbe:	0e 94 ff 4d 	call	0x9bfe	; 0x9bfe <hal_configureDmaChannel>
    6dc2:	d4 01       	movw	r26, r8
    6dc4:	50 96       	adiw	r26, 0x10	; 16
    6dc6:	8d 91       	ld	r24, X+
    6dc8:	9c 91       	ld	r25, X
    6dca:	51 97       	sbiw	r26, 0x11	; 17
    6dcc:	0e 94 11 50 	call	0xa022	; 0xa022 <hal_dmaEnableChannel>
    6dd0:	02 c0       	rjmp	.+4      	; 0x6dd6 <hal_spiReadWrite+0x1b6>
    6dd2:	83 e0       	ldi	r24, 0x03	; 3
    6dd4:	81 83       	std	Z+1, r24	; 0x01
    6dd6:	f4 01       	movw	r30, r8
    6dd8:	86 81       	ldd	r24, Z+6	; 0x06
    6dda:	88 23       	and	r24, r24
    6ddc:	09 f0       	breq	.+2      	; 0x6de0 <hal_spiReadWrite+0x1c0>
    6dde:	94 c0       	rjmp	.+296    	; 0x6f08 <hal_spiReadWrite+0x2e8>
    6de0:	d3 01       	movw	r26, r6
    6de2:	18 96       	adiw	r26, 0x08	; 8
    6de4:	1d 92       	st	X+, r1
    6de6:	1c 92       	st	X, r1
    6de8:	19 97       	sbiw	r26, 0x09	; 9
    6dea:	50 96       	adiw	r26, 0x10	; 16
    6dec:	4c 92       	st	X, r4
    6dee:	50 97       	sbiw	r26, 0x10	; 16
    6df0:	44 20       	and	r4, r4
    6df2:	09 f4       	brne	.+2      	; 0x6df6 <hal_spiReadWrite+0x1d6>
    6df4:	7d c0       	rjmp	.+250    	; 0x6ef0 <hal_spiReadWrite+0x2d0>
    6df6:	1b 96       	adiw	r26, 0x0b	; 11
    6df8:	8c 91       	ld	r24, X
    6dfa:	1b 97       	sbiw	r26, 0x0b	; 11
    6dfc:	1a 96       	adiw	r26, 0x0a	; 10
    6dfe:	9c 91       	ld	r25, X
    6e00:	1a 97       	sbiw	r26, 0x0a	; 10
    6e02:	95 30       	cpi	r25, 0x05	; 5
    6e04:	09 f4       	brne	.+2      	; 0x6e08 <hal_spiReadWrite+0x1e8>
    6e06:	4a c0       	rjmp	.+148    	; 0x6e9c <hal_spiReadWrite+0x27c>
    6e08:	96 30       	cpi	r25, 0x06	; 6
    6e0a:	80 f4       	brcc	.+32     	; 0x6e2c <hal_spiReadWrite+0x20c>
    6e0c:	92 30       	cpi	r25, 0x02	; 2
    6e0e:	81 f1       	breq	.+96     	; 0x6e70 <hal_spiReadWrite+0x250>
    6e10:	93 30       	cpi	r25, 0x03	; 3
    6e12:	30 f4       	brcc	.+12     	; 0x6e20 <hal_spiReadWrite+0x200>
    6e14:	99 23       	and	r25, r25
    6e16:	e1 f0       	breq	.+56     	; 0x6e50 <hal_spiReadWrite+0x230>
    6e18:	91 30       	cpi	r25, 0x01	; 1
    6e1a:	09 f0       	breq	.+2      	; 0x6e1e <hal_spiReadWrite+0x1fe>
    6e1c:	69 c0       	rjmp	.+210    	; 0x6ef0 <hal_spiReadWrite+0x2d0>
    6e1e:	20 c0       	rjmp	.+64     	; 0x6e60 <hal_spiReadWrite+0x240>
    6e20:	93 30       	cpi	r25, 0x03	; 3
    6e22:	71 f1       	breq	.+92     	; 0x6e80 <hal_spiReadWrite+0x260>
    6e24:	94 30       	cpi	r25, 0x04	; 4
    6e26:	09 f0       	breq	.+2      	; 0x6e2a <hal_spiReadWrite+0x20a>
    6e28:	63 c0       	rjmp	.+198    	; 0x6ef0 <hal_spiReadWrite+0x2d0>
    6e2a:	31 c0       	rjmp	.+98     	; 0x6e8e <hal_spiReadWrite+0x26e>
    6e2c:	98 30       	cpi	r25, 0x08	; 8
    6e2e:	09 f4       	brne	.+2      	; 0x6e32 <hal_spiReadWrite+0x212>
    6e30:	4a c0       	rjmp	.+148    	; 0x6ec6 <hal_spiReadWrite+0x2a6>
    6e32:	99 30       	cpi	r25, 0x09	; 9
    6e34:	30 f4       	brcc	.+12     	; 0x6e42 <hal_spiReadWrite+0x222>
    6e36:	96 30       	cpi	r25, 0x06	; 6
    6e38:	c1 f1       	breq	.+112    	; 0x6eaa <hal_spiReadWrite+0x28a>
    6e3a:	97 30       	cpi	r25, 0x07	; 7
    6e3c:	09 f0       	breq	.+2      	; 0x6e40 <hal_spiReadWrite+0x220>
    6e3e:	58 c0       	rjmp	.+176    	; 0x6ef0 <hal_spiReadWrite+0x2d0>
    6e40:	3b c0       	rjmp	.+118    	; 0x6eb8 <hal_spiReadWrite+0x298>
    6e42:	99 30       	cpi	r25, 0x09	; 9
    6e44:	09 f4       	brne	.+2      	; 0x6e48 <hal_spiReadWrite+0x228>
    6e46:	46 c0       	rjmp	.+140    	; 0x6ed4 <hal_spiReadWrite+0x2b4>
    6e48:	9a 30       	cpi	r25, 0x0A	; 10
    6e4a:	09 f0       	breq	.+2      	; 0x6e4e <hal_spiReadWrite+0x22e>
    6e4c:	51 c0       	rjmp	.+162    	; 0x6ef0 <hal_spiReadWrite+0x2d0>
    6e4e:	49 c0       	rjmp	.+146    	; 0x6ee2 <hal_spiReadWrite+0x2c2>
    6e50:	90 91 00 06 	lds	r25, 0x0600
    6e54:	98 23       	and	r25, r24
    6e56:	09 f4       	brne	.+2      	; 0x6e5a <hal_spiReadWrite+0x23a>
    6e58:	4b c0       	rjmp	.+150    	; 0x6ef0 <hal_spiReadWrite+0x2d0>
    6e5a:	e0 e0       	ldi	r30, 0x00	; 0
    6e5c:	f6 e0       	ldi	r31, 0x06	; 6
    6e5e:	47 c0       	rjmp	.+142    	; 0x6eee <hal_spiReadWrite+0x2ce>
    6e60:	90 91 20 06 	lds	r25, 0x0620
    6e64:	98 23       	and	r25, r24
    6e66:	09 f4       	brne	.+2      	; 0x6e6a <hal_spiReadWrite+0x24a>
    6e68:	43 c0       	rjmp	.+134    	; 0x6ef0 <hal_spiReadWrite+0x2d0>
    6e6a:	e0 e2       	ldi	r30, 0x20	; 32
    6e6c:	f6 e0       	ldi	r31, 0x06	; 6
    6e6e:	3f c0       	rjmp	.+126    	; 0x6eee <hal_spiReadWrite+0x2ce>
    6e70:	90 91 40 06 	lds	r25, 0x0640
    6e74:	98 23       	and	r25, r24
    6e76:	09 f4       	brne	.+2      	; 0x6e7a <hal_spiReadWrite+0x25a>
    6e78:	3b c0       	rjmp	.+118    	; 0x6ef0 <hal_spiReadWrite+0x2d0>
    6e7a:	e0 e4       	ldi	r30, 0x40	; 64
    6e7c:	f6 e0       	ldi	r31, 0x06	; 6
    6e7e:	37 c0       	rjmp	.+110    	; 0x6eee <hal_spiReadWrite+0x2ce>
    6e80:	90 91 60 06 	lds	r25, 0x0660
    6e84:	98 23       	and	r25, r24
    6e86:	a1 f1       	breq	.+104    	; 0x6ef0 <hal_spiReadWrite+0x2d0>
    6e88:	e0 e6       	ldi	r30, 0x60	; 96
    6e8a:	f6 e0       	ldi	r31, 0x06	; 6
    6e8c:	30 c0       	rjmp	.+96     	; 0x6eee <hal_spiReadWrite+0x2ce>
    6e8e:	90 91 80 06 	lds	r25, 0x0680
    6e92:	98 23       	and	r25, r24
    6e94:	69 f1       	breq	.+90     	; 0x6ef0 <hal_spiReadWrite+0x2d0>
    6e96:	e0 e8       	ldi	r30, 0x80	; 128
    6e98:	f6 e0       	ldi	r31, 0x06	; 6
    6e9a:	29 c0       	rjmp	.+82     	; 0x6eee <hal_spiReadWrite+0x2ce>
    6e9c:	90 91 a0 06 	lds	r25, 0x06A0
    6ea0:	98 23       	and	r25, r24
    6ea2:	31 f1       	breq	.+76     	; 0x6ef0 <hal_spiReadWrite+0x2d0>
    6ea4:	e0 ea       	ldi	r30, 0xA0	; 160
    6ea6:	f6 e0       	ldi	r31, 0x06	; 6
    6ea8:	22 c0       	rjmp	.+68     	; 0x6eee <hal_spiReadWrite+0x2ce>
    6eaa:	90 91 e0 06 	lds	r25, 0x06E0
    6eae:	98 23       	and	r25, r24
    6eb0:	f9 f0       	breq	.+62     	; 0x6ef0 <hal_spiReadWrite+0x2d0>
    6eb2:	e0 ee       	ldi	r30, 0xE0	; 224
    6eb4:	f6 e0       	ldi	r31, 0x06	; 6
    6eb6:	1b c0       	rjmp	.+54     	; 0x6eee <hal_spiReadWrite+0x2ce>
    6eb8:	90 91 00 07 	lds	r25, 0x0700
    6ebc:	98 23       	and	r25, r24
    6ebe:	c1 f0       	breq	.+48     	; 0x6ef0 <hal_spiReadWrite+0x2d0>
    6ec0:	e0 e0       	ldi	r30, 0x00	; 0
    6ec2:	f7 e0       	ldi	r31, 0x07	; 7
    6ec4:	14 c0       	rjmp	.+40     	; 0x6eee <hal_spiReadWrite+0x2ce>
    6ec6:	90 91 20 07 	lds	r25, 0x0720
    6eca:	98 23       	and	r25, r24
    6ecc:	89 f0       	breq	.+34     	; 0x6ef0 <hal_spiReadWrite+0x2d0>
    6ece:	e0 e2       	ldi	r30, 0x20	; 32
    6ed0:	f7 e0       	ldi	r31, 0x07	; 7
    6ed2:	0d c0       	rjmp	.+26     	; 0x6eee <hal_spiReadWrite+0x2ce>
    6ed4:	90 91 c0 07 	lds	r25, 0x07C0
    6ed8:	98 23       	and	r25, r24
    6eda:	51 f0       	breq	.+20     	; 0x6ef0 <hal_spiReadWrite+0x2d0>
    6edc:	e0 ec       	ldi	r30, 0xC0	; 192
    6ede:	f7 e0       	ldi	r31, 0x07	; 7
    6ee0:	06 c0       	rjmp	.+12     	; 0x6eee <hal_spiReadWrite+0x2ce>
    6ee2:	90 91 e0 07 	lds	r25, 0x07E0
    6ee6:	98 23       	and	r25, r24
    6ee8:	19 f0       	breq	.+6      	; 0x6ef0 <hal_spiReadWrite+0x2d0>
    6eea:	e0 ee       	ldi	r30, 0xE0	; 224
    6eec:	f7 e0       	ldi	r31, 0x07	; 7
    6eee:	86 83       	std	Z+6, r24	; 0x06
    6ef0:	d4 01       	movw	r26, r8
    6ef2:	17 96       	adiw	r26, 0x07	; 7
    6ef4:	ed 91       	ld	r30, X+
    6ef6:	fc 91       	ld	r31, X
    6ef8:	18 97       	sbiw	r26, 0x08	; 8
    6efa:	aa 89       	ldd	r26, Y+18	; 0x12
    6efc:	bb 89       	ldd	r27, Y+19	; 0x13
    6efe:	8c 91       	ld	r24, X
    6f00:	83 83       	std	Z+3, r24	; 0x03
    6f02:	02 c0       	rjmp	.+4      	; 0x6f08 <hal_spiReadWrite+0x2e8>
    6f04:	8e ef       	ldi	r24, 0xFE	; 254
    6f06:	01 c0       	rjmp	.+2      	; 0x6f0a <hal_spiReadWrite+0x2ea>
    6f08:	80 e0       	ldi	r24, 0x00	; 0
    6f0a:	65 96       	adiw	r28, 0x15	; 21
    6f0c:	cd bf       	out	0x3d, r28	; 61
    6f0e:	de bf       	out	0x3e, r29	; 62
    6f10:	df 91       	pop	r29
    6f12:	cf 91       	pop	r28
    6f14:	1f 91       	pop	r17
    6f16:	0f 91       	pop	r16
    6f18:	ff 90       	pop	r15
    6f1a:	ef 90       	pop	r14
    6f1c:	df 90       	pop	r13
    6f1e:	cf 90       	pop	r12
    6f20:	bf 90       	pop	r11
    6f22:	af 90       	pop	r10
    6f24:	9f 90       	pop	r9
    6f26:	8f 90       	pop	r8
    6f28:	7f 90       	pop	r7
    6f2a:	6f 90       	pop	r6
    6f2c:	5f 90       	pop	r5
    6f2e:	4f 90       	pop	r4
    6f30:	3f 90       	pop	r3
    6f32:	2f 90       	pop	r2
    6f34:	08 95       	ret

00006f36 <hal_requestSpiChannel>:
    6f36:	4f 92       	push	r4
    6f38:	5f 92       	push	r5
    6f3a:	6f 92       	push	r6
    6f3c:	7f 92       	push	r7
    6f3e:	8f 92       	push	r8
    6f40:	9f 92       	push	r9
    6f42:	bf 92       	push	r11
    6f44:	cf 92       	push	r12
    6f46:	df 92       	push	r13
    6f48:	ef 92       	push	r14
    6f4a:	ff 92       	push	r15
    6f4c:	0f 93       	push	r16
    6f4e:	1f 93       	push	r17
    6f50:	cf 93       	push	r28
    6f52:	df 93       	push	r29
    6f54:	cd b7       	in	r28, 0x3d	; 61
    6f56:	de b7       	in	r29, 0x3e	; 62
    6f58:	28 97       	sbiw	r28, 0x08	; 8
    6f5a:	cd bf       	out	0x3d, r28	; 61
    6f5c:	de bf       	out	0x3e, r29	; 62
    6f5e:	b8 2e       	mov	r11, r24
    6f60:	4b 01       	movw	r8, r22
    6f62:	e4 2e       	mov	r14, r20
    6f64:	f2 2e       	mov	r15, r18
    6f66:	44 24       	eor	r4, r4
    6f68:	55 24       	eor	r5, r5
    6f6a:	32 01       	movw	r6, r4
    6f6c:	8f b7       	in	r24, 0x3f	; 63
    6f6e:	89 83       	std	Y+1, r24	; 0x01
    6f70:	f8 94       	cli
    6f72:	83 e0       	ldi	r24, 0x03	; 3
    6f74:	8b 15       	cp	r24, r11
    6f76:	28 f4       	brcc	.+10     	; 0x6f82 <hal_requestSpiChannel+0x4c>
    6f78:	89 81       	ldd	r24, Y+1	; 0x01
    6f7a:	8f bf       	out	0x3f, r24	; 63
    6f7c:	8b ef       	ldi	r24, 0xFB	; 251
    6f7e:	9f ef       	ldi	r25, 0xFF	; 255
    6f80:	3c c1       	rjmp	.+632    	; 0x71fa <hal_requestSpiChannel+0x2c4>
    6f82:	82 2f       	mov	r24, r18
    6f84:	81 50       	subi	r24, 0x01	; 1
    6f86:	87 ff       	sbrs	r24, 7
    6f88:	05 c0       	rjmp	.+10     	; 0x6f94 <hal_requestSpiChannel+0x5e>
    6f8a:	89 81       	ldd	r24, Y+1	; 0x01
    6f8c:	8f bf       	out	0x3f, r24	; 63
    6f8e:	87 ef       	ldi	r24, 0xF7	; 247
    6f90:	9f ef       	ldi	r25, 0xFF	; 255
    6f92:	33 c1       	rjmp	.+614    	; 0x71fa <hal_requestSpiChannel+0x2c4>
    6f94:	ea e0       	ldi	r30, 0x0A	; 10
    6f96:	e4 17       	cp	r30, r20
    6f98:	28 f4       	brcc	.+10     	; 0x6fa4 <hal_requestSpiChannel+0x6e>
    6f9a:	89 81       	ldd	r24, Y+1	; 0x01
    6f9c:	8f bf       	out	0x3f, r24	; 63
    6f9e:	86 ef       	ldi	r24, 0xF6	; 246
    6fa0:	9f ef       	ldi	r25, 0xFF	; 255
    6fa2:	2b c1       	rjmp	.+598    	; 0x71fa <hal_requestSpiChannel+0x2c4>
    6fa4:	8b 2d       	mov	r24, r11
    6fa6:	0e 94 01 2d 	call	0x5a02	; 0x5a02 <findSpiElement>
    6faa:	6c 01       	movw	r12, r24
    6fac:	00 97       	sbiw	r24, 0x00	; 0
    6fae:	09 f4       	brne	.+2      	; 0x6fb2 <hal_requestSpiChannel+0x7c>
    6fb0:	19 c1       	rjmp	.+562    	; 0x71e4 <hal_requestSpiChannel+0x2ae>
    6fb2:	fc 01       	movw	r30, r24
    6fb4:	86 81       	ldd	r24, Z+6	; 0x06
    6fb6:	81 30       	cpi	r24, 0x01	; 1
    6fb8:	41 f4       	brne	.+16     	; 0x6fca <hal_requestSpiChannel+0x94>
    6fba:	85 81       	ldd	r24, Z+5	; 0x05
    6fbc:	88 23       	and	r24, r24
    6fbe:	29 f0       	breq	.+10     	; 0x6fca <hal_requestSpiChannel+0x94>
    6fc0:	89 81       	ldd	r24, Y+1	; 0x01
    6fc2:	8f bf       	out	0x3f, r24	; 63
    6fc4:	83 ef       	ldi	r24, 0xF3	; 243
    6fc6:	9f ef       	ldi	r25, 0xFF	; 255
    6fc8:	18 c1       	rjmp	.+560    	; 0x71fa <hal_requestSpiChannel+0x2c4>
    6fca:	81 e1       	ldi	r24, 0x11	; 17
    6fcc:	90 e0       	ldi	r25, 0x00	; 0
    6fce:	0e 94 b8 8a 	call	0x11570	; 0x11570 <utl_createLink>
    6fd2:	8a 83       	std	Y+2, r24	; 0x02
    6fd4:	9b 83       	std	Y+3, r25	; 0x03
    6fd6:	8a 81       	ldd	r24, Y+2	; 0x02
    6fd8:	9b 81       	ldd	r25, Y+3	; 0x03
    6fda:	97 fd       	sbrc	r25, 7
    6fdc:	0c c0       	rjmp	.+24     	; 0x6ff6 <hal_requestSpiChannel+0xc0>
    6fde:	80 91 26 21 	lds	r24, 0x2126
    6fe2:	90 91 27 21 	lds	r25, 0x2127
    6fe6:	6a 81       	ldd	r22, Y+2	; 0x02
    6fe8:	7b 81       	ldd	r23, Y+3	; 0x03
    6fea:	41 e0       	ldi	r20, 0x01	; 1
    6fec:	0e 94 c8 88 	call	0x11190	; 0x11190 <utl_insertLink>
    6ff0:	8a 81       	ldd	r24, Y+2	; 0x02
    6ff2:	9b 81       	ldd	r25, Y+3	; 0x03
    6ff4:	02 c0       	rjmp	.+4      	; 0x6ffa <hal_requestSpiChannel+0xc4>
    6ff6:	8f ef       	ldi	r24, 0xFF	; 255
    6ff8:	9f ef       	ldi	r25, 0xFF	; 255
    6ffa:	80 93 bc 24 	sts	0x24BC, r24
    6ffe:	90 93 bd 24 	sts	0x24BD, r25
    7002:	80 91 bc 24 	lds	r24, 0x24BC
    7006:	90 91 bd 24 	lds	r25, 0x24BD
    700a:	97 ff       	sbrs	r25, 7
    700c:	05 c0       	rjmp	.+10     	; 0x7018 <hal_requestSpiChannel+0xe2>
    700e:	89 81       	ldd	r24, Y+1	; 0x01
    7010:	8f bf       	out	0x3f, r24	; 63
    7012:	8f ef       	ldi	r24, 0xFF	; 255
    7014:	9f ef       	ldi	r25, 0xFF	; 255
    7016:	f1 c0       	rjmp	.+482    	; 0x71fa <hal_requestSpiChannel+0x2c4>
    7018:	e0 91 bc 24 	lds	r30, 0x24BC
    701c:	f0 91 bd 24 	lds	r31, 0x24BD
    7020:	00 81       	ld	r16, Z
    7022:	11 81       	ldd	r17, Z+1	; 0x01
    7024:	81 e1       	ldi	r24, 0x11	; 17
    7026:	f8 01       	movw	r30, r16
    7028:	11 92       	st	Z+, r1
    702a:	8a 95       	dec	r24
    702c:	e9 f7       	brne	.-6      	; 0x7028 <hal_requestSpiChannel+0xf2>
    702e:	f6 01       	movw	r30, r12
    7030:	85 81       	ldd	r24, Z+5	; 0x05
    7032:	8f 5f       	subi	r24, 0xFF	; 255
    7034:	85 83       	std	Z+5, r24	; 0x05
    7036:	f8 01       	movw	r30, r16
    7038:	c4 86       	std	Z+12, r12	; 0x0c
    703a:	d5 86       	std	Z+13, r13	; 0x0d
    703c:	e2 86       	std	Z+10, r14	; 0x0a
    703e:	f3 86       	std	Z+11, r15	; 0x0b
    7040:	10 86       	std	Z+8, r1	; 0x08
    7042:	11 86       	std	Z+9, r1	; 0x09
    7044:	16 82       	std	Z+6, r1	; 0x06
    7046:	17 82       	std	Z+7, r1	; 0x07
    7048:	12 82       	std	Z+2, r1	; 0x02
    704a:	13 82       	std	Z+3, r1	; 0x03
    704c:	14 82       	std	Z+4, r1	; 0x04
    704e:	15 82       	std	Z+5, r1	; 0x05
    7050:	80 82       	st	Z, r8
    7052:	91 82       	std	Z+1, r9	; 0x01
    7054:	f6 01       	movw	r30, r12
    7056:	86 81       	ldd	r24, Z+6	; 0x06
    7058:	81 30       	cpi	r24, 0x01	; 1
    705a:	21 f5       	brne	.+72     	; 0x70a4 <hal_requestSpiChannel+0x16e>
    705c:	02 87       	std	Z+10, r16	; 0x0a
    705e:	13 87       	std	Z+11, r17	; 0x0b
    7060:	fc 82       	std	Y+4, r15	; 0x04
    7062:	1d 82       	std	Y+5, r1	; 0x05
    7064:	4f 2c       	mov	r4, r15
    7066:	55 24       	eor	r5, r5
    7068:	53 94       	inc	r5
    706a:	f2 e0       	ldi	r31, 0x02	; 2
    706c:	bf 16       	cp	r11, r31
    706e:	81 f0       	breq	.+32     	; 0x7090 <hal_requestSpiChannel+0x15a>
    7070:	83 e0       	ldi	r24, 0x03	; 3
    7072:	b8 16       	cp	r11, r24
    7074:	91 f0       	breq	.+36     	; 0x709a <hal_requestSpiChannel+0x164>
    7076:	e1 e0       	ldi	r30, 0x01	; 1
    7078:	be 16       	cp	r11, r30
    707a:	29 f0       	breq	.+10     	; 0x7086 <hal_requestSpiChannel+0x150>
    707c:	8e e5       	ldi	r24, 0x5E	; 94
    707e:	68 2e       	mov	r6, r24
    7080:	8e e2       	ldi	r24, 0x2E	; 46
    7082:	78 2e       	mov	r7, r24
    7084:	11 c0       	rjmp	.+34     	; 0x70a8 <hal_requestSpiChannel+0x172>
    7086:	b2 e5       	ldi	r27, 0x52	; 82
    7088:	6b 2e       	mov	r6, r27
    708a:	be e2       	ldi	r27, 0x2E	; 46
    708c:	7b 2e       	mov	r7, r27
    708e:	0c c0       	rjmp	.+24     	; 0x70a8 <hal_requestSpiChannel+0x172>
    7090:	a6 e4       	ldi	r26, 0x46	; 70
    7092:	6a 2e       	mov	r6, r26
    7094:	ae e2       	ldi	r26, 0x2E	; 46
    7096:	7a 2e       	mov	r7, r26
    7098:	07 c0       	rjmp	.+14     	; 0x70a8 <hal_requestSpiChannel+0x172>
    709a:	fa e3       	ldi	r31, 0x3A	; 58
    709c:	6f 2e       	mov	r6, r31
    709e:	fe e2       	ldi	r31, 0x2E	; 46
    70a0:	7f 2e       	mov	r7, r31
    70a2:	02 c0       	rjmp	.+4      	; 0x70a8 <hal_requestSpiChannel+0x172>
    70a4:	1c 82       	std	Y+4, r1	; 0x04
    70a6:	fd 82       	std	Y+5, r15	; 0x05
    70a8:	1f 82       	std	Y+7, r1	; 0x07
    70aa:	18 86       	std	Y+8, r1	; 0x08
    70ac:	8e 2d       	mov	r24, r14
    70ae:	2c 81       	ldd	r18, Y+4	; 0x04
    70b0:	3d 81       	ldd	r19, Y+5	; 0x05
    70b2:	4e 81       	ldd	r20, Y+6	; 0x06
    70b4:	50 e0       	ldi	r21, 0x00	; 0
    70b6:	60 e0       	ldi	r22, 0x00	; 0
    70b8:	0e 94 e6 29 	call	0x53cc	; 0x53cc <hal_configureGpioPort>
    70bc:	f6 01       	movw	r30, r12
    70be:	86 81       	ldd	r24, Z+6	; 0x06
    70c0:	81 30       	cpi	r24, 0x01	; 1
    70c2:	41 f4       	brne	.+16     	; 0x70d4 <hal_requestSpiChannel+0x19e>
    70c4:	8e 2d       	mov	r24, r14
    70c6:	b3 01       	movw	r22, r6
    70c8:	a2 01       	movw	r20, r4
    70ca:	0e 94 44 2a 	call	0x5488	; 0x5488 <hal_requestGpioInt>
    70ce:	f8 01       	movw	r30, r16
    70d0:	86 87       	std	Z+14, r24	; 0x0e
    70d2:	97 87       	std	Z+15, r25	; 0x0f
    70d4:	f8 01       	movw	r30, r16
    70d6:	86 85       	ldd	r24, Z+14	; 0x0e
    70d8:	97 85       	ldd	r25, Z+15	; 0x0f
    70da:	97 fd       	sbrc	r25, 7
    70dc:	83 c0       	rjmp	.+262    	; 0x71e4 <hal_requestSpiChannel+0x2ae>
    70de:	f6 01       	movw	r30, r12
    70e0:	86 81       	ldd	r24, Z+6	; 0x06
    70e2:	88 23       	and	r24, r24
    70e4:	09 f0       	breq	.+2      	; 0x70e8 <hal_requestSpiChannel+0x1b2>
    70e6:	83 c0       	rjmp	.+262    	; 0x71ee <hal_requestSpiChannel+0x2b8>
    70e8:	f5 e0       	ldi	r31, 0x05	; 5
    70ea:	ef 16       	cp	r14, r31
    70ec:	09 f4       	brne	.+2      	; 0x70f0 <hal_requestSpiChannel+0x1ba>
    70ee:	4f c0       	rjmp	.+158    	; 0x718e <hal_requestSpiChannel+0x258>
    70f0:	fe 15       	cp	r31, r14
    70f2:	80 f0       	brcs	.+32     	; 0x7114 <hal_requestSpiChannel+0x1de>
    70f4:	82 e0       	ldi	r24, 0x02	; 2
    70f6:	e8 16       	cp	r14, r24
    70f8:	99 f1       	breq	.+102    	; 0x7160 <hal_requestSpiChannel+0x22a>
    70fa:	8e 15       	cp	r24, r14
    70fc:	20 f0       	brcs	.+8      	; 0x7106 <hal_requestSpiChannel+0x1d0>
    70fe:	e1 e0       	ldi	r30, 0x01	; 1
    7100:	ee 16       	cp	r14, r30
    7102:	f1 f4       	brne	.+60     	; 0x7140 <hal_requestSpiChannel+0x20a>
    7104:	25 c0       	rjmp	.+74     	; 0x7150 <hal_requestSpiChannel+0x21a>
    7106:	f3 e0       	ldi	r31, 0x03	; 3
    7108:	ef 16       	cp	r14, r31
    710a:	91 f1       	breq	.+100    	; 0x7170 <hal_requestSpiChannel+0x23a>
    710c:	84 e0       	ldi	r24, 0x04	; 4
    710e:	e8 16       	cp	r14, r24
    7110:	b9 f4       	brne	.+46     	; 0x7140 <hal_requestSpiChannel+0x20a>
    7112:	36 c0       	rjmp	.+108    	; 0x7180 <hal_requestSpiChannel+0x24a>
    7114:	e8 e0       	ldi	r30, 0x08	; 8
    7116:	ee 16       	cp	r14, r30
    7118:	09 f4       	brne	.+2      	; 0x711c <hal_requestSpiChannel+0x1e6>
    711a:	4e c0       	rjmp	.+156    	; 0x71b8 <hal_requestSpiChannel+0x282>
    711c:	ee 15       	cp	r30, r14
    711e:	40 f0       	brcs	.+16     	; 0x7130 <hal_requestSpiChannel+0x1fa>
    7120:	f6 e0       	ldi	r31, 0x06	; 6
    7122:	ef 16       	cp	r14, r31
    7124:	09 f4       	brne	.+2      	; 0x7128 <hal_requestSpiChannel+0x1f2>
    7126:	3a c0       	rjmp	.+116    	; 0x719c <hal_requestSpiChannel+0x266>
    7128:	87 e0       	ldi	r24, 0x07	; 7
    712a:	e8 16       	cp	r14, r24
    712c:	49 f4       	brne	.+18     	; 0x7140 <hal_requestSpiChannel+0x20a>
    712e:	3d c0       	rjmp	.+122    	; 0x71aa <hal_requestSpiChannel+0x274>
    7130:	e9 e0       	ldi	r30, 0x09	; 9
    7132:	ee 16       	cp	r14, r30
    7134:	09 f4       	brne	.+2      	; 0x7138 <hal_requestSpiChannel+0x202>
    7136:	47 c0       	rjmp	.+142    	; 0x71c6 <hal_requestSpiChannel+0x290>
    7138:	fa e0       	ldi	r31, 0x0A	; 10
    713a:	ef 16       	cp	r14, r31
    713c:	09 f4       	brne	.+2      	; 0x7140 <hal_requestSpiChannel+0x20a>
    713e:	4a c0       	rjmp	.+148    	; 0x71d4 <hal_requestSpiChannel+0x29e>
    7140:	80 91 00 06 	lds	r24, 0x0600
    7144:	8f 21       	and	r24, r15
    7146:	09 f4       	brne	.+2      	; 0x714a <hal_requestSpiChannel+0x214>
    7148:	52 c0       	rjmp	.+164    	; 0x71ee <hal_requestSpiChannel+0x2b8>
    714a:	e0 e0       	ldi	r30, 0x00	; 0
    714c:	f6 e0       	ldi	r31, 0x06	; 6
    714e:	48 c0       	rjmp	.+144    	; 0x71e0 <hal_requestSpiChannel+0x2aa>
    7150:	80 91 20 06 	lds	r24, 0x0620
    7154:	8f 21       	and	r24, r15
    7156:	09 f4       	brne	.+2      	; 0x715a <hal_requestSpiChannel+0x224>
    7158:	4a c0       	rjmp	.+148    	; 0x71ee <hal_requestSpiChannel+0x2b8>
    715a:	e0 e2       	ldi	r30, 0x20	; 32
    715c:	f6 e0       	ldi	r31, 0x06	; 6
    715e:	40 c0       	rjmp	.+128    	; 0x71e0 <hal_requestSpiChannel+0x2aa>
    7160:	80 91 40 06 	lds	r24, 0x0640
    7164:	8f 21       	and	r24, r15
    7166:	09 f4       	brne	.+2      	; 0x716a <hal_requestSpiChannel+0x234>
    7168:	42 c0       	rjmp	.+132    	; 0x71ee <hal_requestSpiChannel+0x2b8>
    716a:	e0 e4       	ldi	r30, 0x40	; 64
    716c:	f6 e0       	ldi	r31, 0x06	; 6
    716e:	38 c0       	rjmp	.+112    	; 0x71e0 <hal_requestSpiChannel+0x2aa>
    7170:	80 91 60 06 	lds	r24, 0x0660
    7174:	8f 21       	and	r24, r15
    7176:	09 f4       	brne	.+2      	; 0x717a <hal_requestSpiChannel+0x244>
    7178:	3a c0       	rjmp	.+116    	; 0x71ee <hal_requestSpiChannel+0x2b8>
    717a:	e0 e6       	ldi	r30, 0x60	; 96
    717c:	f6 e0       	ldi	r31, 0x06	; 6
    717e:	30 c0       	rjmp	.+96     	; 0x71e0 <hal_requestSpiChannel+0x2aa>
    7180:	80 91 80 06 	lds	r24, 0x0680
    7184:	8f 21       	and	r24, r15
    7186:	99 f1       	breq	.+102    	; 0x71ee <hal_requestSpiChannel+0x2b8>
    7188:	e0 e8       	ldi	r30, 0x80	; 128
    718a:	f6 e0       	ldi	r31, 0x06	; 6
    718c:	29 c0       	rjmp	.+82     	; 0x71e0 <hal_requestSpiChannel+0x2aa>
    718e:	80 91 a0 06 	lds	r24, 0x06A0
    7192:	8f 21       	and	r24, r15
    7194:	61 f1       	breq	.+88     	; 0x71ee <hal_requestSpiChannel+0x2b8>
    7196:	e0 ea       	ldi	r30, 0xA0	; 160
    7198:	f6 e0       	ldi	r31, 0x06	; 6
    719a:	22 c0       	rjmp	.+68     	; 0x71e0 <hal_requestSpiChannel+0x2aa>
    719c:	80 91 e0 06 	lds	r24, 0x06E0
    71a0:	8f 21       	and	r24, r15
    71a2:	29 f1       	breq	.+74     	; 0x71ee <hal_requestSpiChannel+0x2b8>
    71a4:	e0 ee       	ldi	r30, 0xE0	; 224
    71a6:	f6 e0       	ldi	r31, 0x06	; 6
    71a8:	1b c0       	rjmp	.+54     	; 0x71e0 <hal_requestSpiChannel+0x2aa>
    71aa:	80 91 00 07 	lds	r24, 0x0700
    71ae:	8f 21       	and	r24, r15
    71b0:	f1 f0       	breq	.+60     	; 0x71ee <hal_requestSpiChannel+0x2b8>
    71b2:	e0 e0       	ldi	r30, 0x00	; 0
    71b4:	f7 e0       	ldi	r31, 0x07	; 7
    71b6:	14 c0       	rjmp	.+40     	; 0x71e0 <hal_requestSpiChannel+0x2aa>
    71b8:	80 91 20 07 	lds	r24, 0x0720
    71bc:	8f 21       	and	r24, r15
    71be:	b9 f0       	breq	.+46     	; 0x71ee <hal_requestSpiChannel+0x2b8>
    71c0:	e0 e2       	ldi	r30, 0x20	; 32
    71c2:	f7 e0       	ldi	r31, 0x07	; 7
    71c4:	0d c0       	rjmp	.+26     	; 0x71e0 <hal_requestSpiChannel+0x2aa>
    71c6:	80 91 c0 07 	lds	r24, 0x07C0
    71ca:	8f 21       	and	r24, r15
    71cc:	81 f0       	breq	.+32     	; 0x71ee <hal_requestSpiChannel+0x2b8>
    71ce:	e0 ec       	ldi	r30, 0xC0	; 192
    71d0:	f7 e0       	ldi	r31, 0x07	; 7
    71d2:	06 c0       	rjmp	.+12     	; 0x71e0 <hal_requestSpiChannel+0x2aa>
    71d4:	80 91 e0 07 	lds	r24, 0x07E0
    71d8:	8f 21       	and	r24, r15
    71da:	49 f0       	breq	.+18     	; 0x71ee <hal_requestSpiChannel+0x2b8>
    71dc:	e0 ee       	ldi	r30, 0xE0	; 224
    71de:	f7 e0       	ldi	r31, 0x07	; 7
    71e0:	f5 82       	std	Z+5, r15	; 0x05
    71e2:	05 c0       	rjmp	.+10     	; 0x71ee <hal_requestSpiChannel+0x2b8>
    71e4:	89 81       	ldd	r24, Y+1	; 0x01
    71e6:	8f bf       	out	0x3f, r24	; 63
    71e8:	8d ef       	ldi	r24, 0xFD	; 253
    71ea:	9f ef       	ldi	r25, 0xFF	; 255
    71ec:	06 c0       	rjmp	.+12     	; 0x71fa <hal_requestSpiChannel+0x2c4>
    71ee:	89 81       	ldd	r24, Y+1	; 0x01
    71f0:	8f bf       	out	0x3f, r24	; 63
    71f2:	80 91 bc 24 	lds	r24, 0x24BC
    71f6:	90 91 bd 24 	lds	r25, 0x24BD
    71fa:	28 96       	adiw	r28, 0x08	; 8
    71fc:	cd bf       	out	0x3d, r28	; 61
    71fe:	de bf       	out	0x3e, r29	; 62
    7200:	df 91       	pop	r29
    7202:	cf 91       	pop	r28
    7204:	1f 91       	pop	r17
    7206:	0f 91       	pop	r16
    7208:	ff 90       	pop	r15
    720a:	ef 90       	pop	r14
    720c:	df 90       	pop	r13
    720e:	cf 90       	pop	r12
    7210:	bf 90       	pop	r11
    7212:	9f 90       	pop	r9
    7214:	8f 90       	pop	r8
    7216:	7f 90       	pop	r7
    7218:	6f 90       	pop	r6
    721a:	5f 90       	pop	r5
    721c:	4f 90       	pop	r4
    721e:	08 95       	ret

00007220 <hal_releaseSpiChannel>:
    7220:	0f 93       	push	r16
    7222:	1f 93       	push	r17
    7224:	cf 93       	push	r28
    7226:	df 93       	push	r29
    7228:	00 d0       	rcall	.+0      	; 0x722a <hal_releaseSpiChannel+0xa>
    722a:	cd b7       	in	r28, 0x3d	; 61
    722c:	de b7       	in	r29, 0x3e	; 62
    722e:	8a 83       	std	Y+2, r24	; 0x02
    7230:	9b 83       	std	Y+3, r25	; 0x03
    7232:	8f b7       	in	r24, 0x3f	; 63
    7234:	89 83       	std	Y+1, r24	; 0x01
    7236:	f8 94       	cli
    7238:	ea 81       	ldd	r30, Y+2	; 0x02
    723a:	fb 81       	ldd	r31, Y+3	; 0x03
    723c:	80 91 26 21 	lds	r24, 0x2126
    7240:	90 91 27 21 	lds	r25, 0x2127
    7244:	24 81       	ldd	r18, Z+4	; 0x04
    7246:	35 81       	ldd	r19, Z+5	; 0x05
    7248:	28 17       	cp	r18, r24
    724a:	39 07       	cpc	r19, r25
    724c:	21 f0       	breq	.+8      	; 0x7256 <hal_releaseSpiChannel+0x36>
    724e:	89 81       	ldd	r24, Y+1	; 0x01
    7250:	8f bf       	out	0x3f, r24	; 63
    7252:	8e ef       	ldi	r24, 0xFE	; 254
    7254:	39 c0       	rjmp	.+114    	; 0x72c8 <hal_releaseSpiChannel+0xa8>
    7256:	ea 81       	ldd	r30, Y+2	; 0x02
    7258:	fb 81       	ldd	r31, Y+3	; 0x03
    725a:	00 81       	ld	r16, Z
    725c:	11 81       	ldd	r17, Z+1	; 0x01
    725e:	d8 01       	movw	r26, r16
    7260:	1e 96       	adiw	r26, 0x0e	; 14
    7262:	8d 91       	ld	r24, X+
    7264:	9c 91       	ld	r25, X
    7266:	1f 97       	sbiw	r26, 0x0f	; 15
    7268:	18 16       	cp	r1, r24
    726a:	19 06       	cpc	r1, r25
    726c:	34 f4       	brge	.+12     	; 0x727a <hal_releaseSpiChannel+0x5a>
    726e:	1e 96       	adiw	r26, 0x0e	; 14
    7270:	8d 91       	ld	r24, X+
    7272:	9c 91       	ld	r25, X
    7274:	1f 97       	sbiw	r26, 0x0f	; 15
    7276:	0e 94 e3 2a 	call	0x55c6	; 0x55c6 <hal_releaseGpioInt>
    727a:	f8 01       	movw	r30, r16
    727c:	04 85       	ldd	r16, Z+12	; 0x0c
    727e:	15 85       	ldd	r17, Z+13	; 0x0d
    7280:	80 91 26 21 	lds	r24, 0x2126
    7284:	90 91 27 21 	lds	r25, 0x2127
    7288:	6a 81       	ldd	r22, Y+2	; 0x02
    728a:	7b 81       	ldd	r23, Y+3	; 0x03
    728c:	0e 94 c4 89 	call	0x11388	; 0x11388 <utl_destroyLink>
    7290:	d8 01       	movw	r26, r16
    7292:	15 96       	adiw	r26, 0x05	; 5
    7294:	8c 91       	ld	r24, X
    7296:	15 97       	sbiw	r26, 0x05	; 5
    7298:	81 50       	subi	r24, 0x01	; 1
    729a:	15 96       	adiw	r26, 0x05	; 5
    729c:	8c 93       	st	X, r24
    729e:	15 97       	sbiw	r26, 0x05	; 5
    72a0:	88 23       	and	r24, r24
    72a2:	79 f4       	brne	.+30     	; 0x72c2 <hal_releaseSpiChannel+0xa2>
    72a4:	17 96       	adiw	r26, 0x07	; 7
    72a6:	ed 91       	ld	r30, X+
    72a8:	fc 91       	ld	r31, X
    72aa:	18 97       	sbiw	r26, 0x08	; 8
    72ac:	10 82       	st	Z, r1
    72ae:	80 91 34 21 	lds	r24, 0x2134
    72b2:	90 91 35 21 	lds	r25, 0x2135
    72b6:	1c 96       	adiw	r26, 0x0c	; 12
    72b8:	6d 91       	ld	r22, X+
    72ba:	7c 91       	ld	r23, X
    72bc:	1d 97       	sbiw	r26, 0x0d	; 13
    72be:	0e 94 c4 89 	call	0x11388	; 0x11388 <utl_destroyLink>
    72c2:	89 81       	ldd	r24, Y+1	; 0x01
    72c4:	8f bf       	out	0x3f, r24	; 63
    72c6:	80 e0       	ldi	r24, 0x00	; 0
    72c8:	23 96       	adiw	r28, 0x03	; 3
    72ca:	cd bf       	out	0x3d, r28	; 61
    72cc:	de bf       	out	0x3e, r29	; 62
    72ce:	df 91       	pop	r29
    72d0:	cf 91       	pop	r28
    72d2:	1f 91       	pop	r17
    72d4:	0f 91       	pop	r16
    72d6:	08 95       	ret

000072d8 <hal_configureSpiChannel>:
    72d8:	3f 92       	push	r3
    72da:	4f 92       	push	r4
    72dc:	5f 92       	push	r5
    72de:	6f 92       	push	r6
    72e0:	7f 92       	push	r7
    72e2:	8f 92       	push	r8
    72e4:	9f 92       	push	r9
    72e6:	af 92       	push	r10
    72e8:	bf 92       	push	r11
    72ea:	cf 92       	push	r12
    72ec:	df 92       	push	r13
    72ee:	ef 92       	push	r14
    72f0:	ff 92       	push	r15
    72f2:	0f 93       	push	r16
    72f4:	1f 93       	push	r17
    72f6:	cf 93       	push	r28
    72f8:	df 93       	push	r29
    72fa:	cd b7       	in	r28, 0x3d	; 61
    72fc:	de b7       	in	r29, 0x3e	; 62
    72fe:	60 97       	sbiw	r28, 0x10	; 16
    7300:	cd bf       	out	0x3d, r28	; 61
    7302:	de bf       	out	0x3e, r29	; 62
    7304:	68 2e       	mov	r6, r24
    7306:	40 2e       	mov	r4, r16
    7308:	09 87       	std	Y+9, r16	; 0x09
    730a:	71 2e       	mov	r7, r17
    730c:	1a 87       	std	Y+10, r17	; 0x0a
    730e:	52 2e       	mov	r5, r18
    7310:	2b 87       	std	Y+11, r18	; 0x0b
    7312:	3c 87       	std	Y+12, r19	; 0x0c
    7314:	4d 87       	std	Y+13, r20	; 0x0d
    7316:	5e 87       	std	Y+14, r21	; 0x0e
    7318:	6f 87       	std	Y+15, r22	; 0x0f
    731a:	37 2e       	mov	r3, r23
    731c:	78 8b       	std	Y+16, r23	; 0x10
    731e:	8c 84       	ldd	r8, Y+12	; 0x0c
    7320:	9d 84       	ldd	r9, Y+13	; 0x0d
    7322:	ae 84       	ldd	r10, Y+14	; 0x0e
    7324:	bf 84       	ldd	r11, Y+15	; 0x0f
    7326:	8f b7       	in	r24, 0x3f	; 63
    7328:	89 83       	std	Y+1, r24	; 0x01
    732a:	f8 94       	cli
    732c:	86 2d       	mov	r24, r6
    732e:	0e 94 01 2d 	call	0x5a02	; 0x5a02 <findSpiElement>
    7332:	00 97       	sbiw	r24, 0x00	; 0
    7334:	21 f0       	breq	.+8      	; 0x733e <hal_configureSpiChannel+0x66>
    7336:	89 81       	ldd	r24, Y+1	; 0x01
    7338:	8f bf       	out	0x3f, r24	; 63
    733a:	85 ef       	ldi	r24, 0xF5	; 245
    733c:	ad c2       	rjmp	.+1370   	; 0x7898 <hal_configureSpiChannel+0x5c0>
    733e:	23 e0       	ldi	r18, 0x03	; 3
    7340:	26 15       	cp	r18, r6
    7342:	20 f4       	brcc	.+8      	; 0x734c <hal_configureSpiChannel+0x74>
    7344:	89 81       	ldd	r24, Y+1	; 0x01
    7346:	8f bf       	out	0x3f, r24	; 63
    7348:	8b ef       	ldi	r24, 0xFB	; 251
    734a:	a6 c2       	rjmp	.+1356   	; 0x7898 <hal_configureSpiChannel+0x5c0>
    734c:	83 e0       	ldi	r24, 0x03	; 3
    734e:	80 17       	cp	r24, r16
    7350:	20 f4       	brcc	.+8      	; 0x735a <hal_configureSpiChannel+0x82>
    7352:	89 81       	ldd	r24, Y+1	; 0x01
    7354:	8f bf       	out	0x3f, r24	; 63
    7356:	8a ef       	ldi	r24, 0xFA	; 250
    7358:	9f c2       	rjmp	.+1342   	; 0x7898 <hal_configureSpiChannel+0x5c0>
    735a:	a1 e0       	ldi	r26, 0x01	; 1
    735c:	a1 17       	cp	r26, r17
    735e:	20 f4       	brcc	.+8      	; 0x7368 <hal_configureSpiChannel+0x90>
    7360:	89 81       	ldd	r24, Y+1	; 0x01
    7362:	8f bf       	out	0x3f, r24	; 63
    7364:	89 ef       	ldi	r24, 0xF9	; 249
    7366:	98 c2       	rjmp	.+1328   	; 0x7898 <hal_configureSpiChannel+0x5c0>
    7368:	b1 e0       	ldi	r27, 0x01	; 1
    736a:	b5 15       	cp	r27, r5
    736c:	20 f4       	brcc	.+8      	; 0x7376 <hal_configureSpiChannel+0x9e>
    736e:	89 81       	ldd	r24, Y+1	; 0x01
    7370:	8f bf       	out	0x3f, r24	; 63
    7372:	88 ef       	ldi	r24, 0xF8	; 248
    7374:	91 c2       	rjmp	.+1314   	; 0x7898 <hal_configureSpiChannel+0x5c0>
    7376:	11 23       	and	r17, r17
    7378:	49 f4       	brne	.+18     	; 0x738c <hal_configureSpiChannel+0xb4>
    737a:	0e 94 15 49 	call	0x922a	; 0x922a <hal_getCpuFreq>
    737e:	6b 01       	movw	r12, r22
    7380:	7c 01       	movw	r14, r24
    7382:	f6 94       	lsr	r15
    7384:	e7 94       	ror	r14
    7386:	d7 94       	ror	r13
    7388:	c7 94       	ror	r12
    738a:	0b c0       	rjmp	.+22     	; 0x73a2 <hal_configureSpiChannel+0xca>
    738c:	0e 94 15 49 	call	0x922a	; 0x922a <hal_getCpuFreq>
    7390:	6b 01       	movw	r12, r22
    7392:	7c 01       	movw	r14, r24
    7394:	e2 e0       	ldi	r30, 0x02	; 2
    7396:	f6 94       	lsr	r15
    7398:	e7 94       	ror	r14
    739a:	d7 94       	ror	r13
    739c:	c7 94       	ror	r12
    739e:	ea 95       	dec	r30
    73a0:	d1 f7       	brne	.-12     	; 0x7396 <hal_configureSpiChannel+0xbe>
    73a2:	0e 94 15 49 	call	0x922a	; 0x922a <hal_getCpuFreq>
    73a6:	dc 01       	movw	r26, r24
    73a8:	cb 01       	movw	r24, r22
    73aa:	57 e0       	ldi	r21, 0x07	; 7
    73ac:	b6 95       	lsr	r27
    73ae:	a7 95       	ror	r26
    73b0:	97 95       	ror	r25
    73b2:	87 95       	ror	r24
    73b4:	5a 95       	dec	r21
    73b6:	d1 f7       	brne	.-12     	; 0x73ac <hal_configureSpiChannel+0xd4>
    73b8:	88 16       	cp	r8, r24
    73ba:	99 06       	cpc	r9, r25
    73bc:	aa 06       	cpc	r10, r26
    73be:	bb 06       	cpc	r11, r27
    73c0:	28 f0       	brcs	.+10     	; 0x73cc <hal_configureSpiChannel+0xf4>
    73c2:	c8 14       	cp	r12, r8
    73c4:	d9 04       	cpc	r13, r9
    73c6:	ea 04       	cpc	r14, r10
    73c8:	fb 04       	cpc	r15, r11
    73ca:	20 f4       	brcc	.+8      	; 0x73d4 <hal_configureSpiChannel+0xfc>
    73cc:	89 81       	ldd	r24, Y+1	; 0x01
    73ce:	8f bf       	out	0x3f, r24	; 63
    73d0:	8c ef       	ldi	r24, 0xFC	; 252
    73d2:	62 c2       	rjmp	.+1220   	; 0x7898 <hal_configureSpiChannel+0x5c0>
    73d4:	82 e1       	ldi	r24, 0x12	; 18
    73d6:	90 e0       	ldi	r25, 0x00	; 0
    73d8:	0e 94 b8 8a 	call	0x11570	; 0x11570 <utl_createLink>
    73dc:	8a 83       	std	Y+2, r24	; 0x02
    73de:	9b 83       	std	Y+3, r25	; 0x03
    73e0:	8a 81       	ldd	r24, Y+2	; 0x02
    73e2:	9b 81       	ldd	r25, Y+3	; 0x03
    73e4:	97 fd       	sbrc	r25, 7
    73e6:	0c c0       	rjmp	.+24     	; 0x7400 <hal_configureSpiChannel+0x128>
    73e8:	80 91 34 21 	lds	r24, 0x2134
    73ec:	90 91 35 21 	lds	r25, 0x2135
    73f0:	6a 81       	ldd	r22, Y+2	; 0x02
    73f2:	7b 81       	ldd	r23, Y+3	; 0x03
    73f4:	41 e0       	ldi	r20, 0x01	; 1
    73f6:	0e 94 c8 88 	call	0x11190	; 0x11190 <utl_insertLink>
    73fa:	8a 81       	ldd	r24, Y+2	; 0x02
    73fc:	9b 81       	ldd	r25, Y+3	; 0x03
    73fe:	02 c0       	rjmp	.+4      	; 0x7404 <hal_configureSpiChannel+0x12c>
    7400:	8f ef       	ldi	r24, 0xFF	; 255
    7402:	9f ef       	ldi	r25, 0xFF	; 255
    7404:	80 93 be 24 	sts	0x24BE, r24
    7408:	90 93 bf 24 	sts	0x24BF, r25
    740c:	80 91 be 24 	lds	r24, 0x24BE
    7410:	90 91 bf 24 	lds	r25, 0x24BF
    7414:	97 ff       	sbrs	r25, 7
    7416:	03 c0       	rjmp	.+6      	; 0x741e <hal_configureSpiChannel+0x146>
    7418:	89 81       	ldd	r24, Y+1	; 0x01
    741a:	8f bf       	out	0x3f, r24	; 63
    741c:	3c c2       	rjmp	.+1144   	; 0x7896 <hal_configureSpiChannel+0x5be>
    741e:	e0 91 be 24 	lds	r30, 0x24BE
    7422:	f0 91 bf 24 	lds	r31, 0x24BF
    7426:	c0 80       	ld	r12, Z
    7428:	d1 80       	ldd	r13, Z+1	; 0x01
    742a:	82 e1       	ldi	r24, 0x12	; 18
    742c:	f6 01       	movw	r30, r12
    742e:	11 92       	st	Z+, r1
    7430:	8a 95       	dec	r24
    7432:	e9 f7       	brne	.-6      	; 0x742e <hal_configureSpiChannel+0x156>
    7434:	80 91 be 24 	lds	r24, 0x24BE
    7438:	90 91 bf 24 	lds	r25, 0x24BF
    743c:	d6 01       	movw	r26, r12
    743e:	1c 96       	adiw	r26, 0x0c	; 12
    7440:	8d 93       	st	X+, r24
    7442:	9c 93       	st	X, r25
    7444:	1d 97       	sbiw	r26, 0x0d	; 13
    7446:	b2 e0       	ldi	r27, 0x02	; 2
    7448:	6b 16       	cp	r6, r27
    744a:	e1 f0       	breq	.+56     	; 0x7484 <hal_configureSpiChannel+0x1ac>
    744c:	e3 e0       	ldi	r30, 0x03	; 3
    744e:	6e 16       	cp	r6, r30
    7450:	29 f1       	breq	.+74     	; 0x749c <hal_configureSpiChannel+0x1c4>
    7452:	f1 e0       	ldi	r31, 0x01	; 1
    7454:	6f 16       	cp	r6, r31
    7456:	61 f0       	breq	.+24     	; 0x7470 <hal_configureSpiChannel+0x198>
    7458:	80 ec       	ldi	r24, 0xC0	; 192
    745a:	98 e0       	ldi	r25, 0x08	; 8
    745c:	d6 01       	movw	r26, r12
    745e:	17 96       	adiw	r26, 0x07	; 7
    7460:	8d 93       	st	X+, r24
    7462:	9c 93       	st	X, r25
    7464:	18 97       	sbiw	r26, 0x08	; 8
    7466:	08 ef       	ldi	r16, 0xF8	; 248
    7468:	1d e2       	ldi	r17, 0x2D	; 45
    746a:	42 e0       	ldi	r20, 0x02	; 2
    746c:	f4 2e       	mov	r15, r20
    746e:	1f c0       	rjmp	.+62     	; 0x74ae <hal_configureSpiChannel+0x1d6>
    7470:	80 ec       	ldi	r24, 0xC0	; 192
    7472:	99 e0       	ldi	r25, 0x09	; 9
    7474:	f6 01       	movw	r30, r12
    7476:	87 83       	std	Z+7, r24	; 0x07
    7478:	90 87       	std	Z+8, r25	; 0x08
    747a:	0d ee       	ldi	r16, 0xED	; 237
    747c:	1d e2       	ldi	r17, 0x2D	; 45
    747e:	33 e0       	ldi	r19, 0x03	; 3
    7480:	f3 2e       	mov	r15, r19
    7482:	15 c0       	rjmp	.+42     	; 0x74ae <hal_configureSpiChannel+0x1d6>
    7484:	80 ec       	ldi	r24, 0xC0	; 192
    7486:	9a e0       	ldi	r25, 0x0A	; 10
    7488:	d6 01       	movw	r26, r12
    748a:	17 96       	adiw	r26, 0x07	; 7
    748c:	8d 93       	st	X+, r24
    748e:	9c 93       	st	X, r25
    7490:	18 97       	sbiw	r26, 0x08	; 8
    7492:	02 ee       	ldi	r16, 0xE2	; 226
    7494:	1d e2       	ldi	r17, 0x2D	; 45
    7496:	24 e0       	ldi	r18, 0x04	; 4
    7498:	f2 2e       	mov	r15, r18
    749a:	09 c0       	rjmp	.+18     	; 0x74ae <hal_configureSpiChannel+0x1d6>
    749c:	80 ec       	ldi	r24, 0xC0	; 192
    749e:	9b e0       	ldi	r25, 0x0B	; 11
    74a0:	f6 01       	movw	r30, r12
    74a2:	87 83       	std	Z+7, r24	; 0x07
    74a4:	90 87       	std	Z+8, r25	; 0x08
    74a6:	07 ed       	ldi	r16, 0xD7	; 215
    74a8:	1d e2       	ldi	r17, 0x2D	; 45
    74aa:	a5 e0       	ldi	r26, 0x05	; 5
    74ac:	fa 2e       	mov	r15, r26
    74ae:	33 20       	and	r3, r3
    74b0:	09 f4       	brne	.+2      	; 0x74b4 <hal_configureSpiChannel+0x1dc>
    74b2:	7a c0       	rjmp	.+244    	; 0x75a8 <hal_configureSpiChannel+0x2d0>
    74b4:	0e 94 87 4b 	call	0x970e	; 0x970e <hal_requestDmaChannel>
    74b8:	d6 01       	movw	r26, r12
    74ba:	50 96       	adiw	r26, 0x10	; 16
    74bc:	8d 93       	st	X+, r24
    74be:	9c 93       	st	X, r25
    74c0:	51 97       	sbiw	r26, 0x11	; 17
    74c2:	50 96       	adiw	r26, 0x10	; 16
    74c4:	8d 91       	ld	r24, X+
    74c6:	9c 91       	ld	r25, X
    74c8:	51 97       	sbiw	r26, 0x11	; 17
    74ca:	97 ff       	sbrs	r25, 7
    74cc:	15 c0       	rjmp	.+42     	; 0x74f8 <hal_configureSpiChannel+0x220>
    74ce:	80 91 34 21 	lds	r24, 0x2134
    74d2:	90 91 35 21 	lds	r25, 0x2135
    74d6:	60 91 be 24 	lds	r22, 0x24BE
    74da:	70 91 bf 24 	lds	r23, 0x24BF
    74de:	0e 94 c4 89 	call	0x11388	; 0x11388 <utl_destroyLink>
    74e2:	89 81       	ldd	r24, Y+1	; 0x01
    74e4:	8f bf       	out	0x3f, r24	; 63
    74e6:	f6 01       	movw	r30, r12
    74e8:	80 89       	ldd	r24, Z+16	; 0x10
    74ea:	91 89       	ldd	r25, Z+17	; 0x11
    74ec:	ff ef       	ldi	r31, 0xFF	; 255
    74ee:	89 3f       	cpi	r24, 0xF9	; 249
    74f0:	9f 07       	cpc	r25, r31
    74f2:	09 f0       	breq	.+2      	; 0x74f6 <hal_configureSpiChannel+0x21e>
    74f4:	d0 c1       	rjmp	.+928    	; 0x7896 <hal_configureSpiChannel+0x5be>
    74f6:	28 c0       	rjmp	.+80     	; 0x7548 <hal_configureSpiChannel+0x270>
    74f8:	0e 94 87 4b 	call	0x970e	; 0x970e <hal_requestDmaChannel>
    74fc:	d6 01       	movw	r26, r12
    74fe:	1e 96       	adiw	r26, 0x0e	; 14
    7500:	8d 93       	st	X+, r24
    7502:	9c 93       	st	X, r25
    7504:	1f 97       	sbiw	r26, 0x0f	; 15
    7506:	1e 96       	adiw	r26, 0x0e	; 14
    7508:	8d 91       	ld	r24, X+
    750a:	9c 91       	ld	r25, X
    750c:	1f 97       	sbiw	r26, 0x0f	; 15
    750e:	97 ff       	sbrs	r25, 7
    7510:	1d c0       	rjmp	.+58     	; 0x754c <hal_configureSpiChannel+0x274>
    7512:	80 91 34 21 	lds	r24, 0x2134
    7516:	90 91 35 21 	lds	r25, 0x2135
    751a:	60 91 be 24 	lds	r22, 0x24BE
    751e:	70 91 bf 24 	lds	r23, 0x24BF
    7522:	0e 94 c4 89 	call	0x11388	; 0x11388 <utl_destroyLink>
    7526:	f6 01       	movw	r30, r12
    7528:	80 89       	ldd	r24, Z+16	; 0x10
    752a:	91 89       	ldd	r25, Z+17	; 0x11
    752c:	0e 94 2d 4c 	call	0x985a	; 0x985a <hal_releaseDmaChannel>
    7530:	89 81       	ldd	r24, Y+1	; 0x01
    7532:	8f bf       	out	0x3f, r24	; 63
    7534:	d6 01       	movw	r26, r12
    7536:	1e 96       	adiw	r26, 0x0e	; 14
    7538:	8d 91       	ld	r24, X+
    753a:	9c 91       	ld	r25, X
    753c:	1f 97       	sbiw	r26, 0x0f	; 15
    753e:	bf ef       	ldi	r27, 0xFF	; 255
    7540:	89 3f       	cpi	r24, 0xF9	; 249
    7542:	9b 07       	cpc	r25, r27
    7544:	09 f0       	breq	.+2      	; 0x7548 <hal_configureSpiChannel+0x270>
    7546:	a7 c1       	rjmp	.+846    	; 0x7896 <hal_configureSpiChannel+0x5be>
    7548:	81 ef       	ldi	r24, 0xF1	; 241
    754a:	a6 c1       	rjmp	.+844    	; 0x7898 <hal_configureSpiChannel+0x5c0>
    754c:	77 20       	and	r7, r7
    754e:	39 f4       	brne	.+14     	; 0x755e <hal_configureSpiChannel+0x286>
    7550:	f6 01       	movw	r30, r12
    7552:	80 89       	ldd	r24, Z+16	; 0x10
    7554:	91 89       	ldd	r25, Z+17	; 0x11
    7556:	60 e0       	ldi	r22, 0x00	; 0
    7558:	a8 01       	movw	r20, r16
    755a:	0e 94 9b 4a 	call	0x9536	; 0x9536 <hal_requestDmaInterrupt>
    755e:	d6 01       	movw	r26, r12
    7560:	50 96       	adiw	r26, 0x10	; 16
    7562:	8d 91       	ld	r24, X+
    7564:	9c 91       	ld	r25, X
    7566:	51 97       	sbiw	r26, 0x11	; 17
    7568:	0e 94 a8 4f 	call	0x9f50	; 0x9f50 <hal_getDmaChannelId>
    756c:	18 2f       	mov	r17, r24
    756e:	f6 01       	movw	r30, r12
    7570:	26 85       	ldd	r18, Z+14	; 0x0e
    7572:	37 85       	ldd	r19, Z+15	; 0x0f
    7574:	c9 01       	movw	r24, r18
    7576:	0e 94 a8 4f 	call	0x9f50	; 0x9f50 <hal_getDmaChannelId>
    757a:	81 17       	cp	r24, r17
    757c:	a8 f4       	brcc	.+42     	; 0x75a8 <hal_configureSpiChannel+0x2d0>
    757e:	d6 01       	movw	r26, r12
    7580:	50 96       	adiw	r26, 0x10	; 16
    7582:	8d 91       	ld	r24, X+
    7584:	9c 91       	ld	r25, X
    7586:	51 97       	sbiw	r26, 0x11	; 17
    7588:	8a 83       	std	Y+2, r24	; 0x02
    758a:	9b 83       	std	Y+3, r25	; 0x03
    758c:	1e 96       	adiw	r26, 0x0e	; 14
    758e:	8d 91       	ld	r24, X+
    7590:	9c 91       	ld	r25, X
    7592:	1f 97       	sbiw	r26, 0x0f	; 15
    7594:	50 96       	adiw	r26, 0x10	; 16
    7596:	8d 93       	st	X+, r24
    7598:	9c 93       	st	X, r25
    759a:	51 97       	sbiw	r26, 0x11	; 17
    759c:	8a 81       	ldd	r24, Y+2	; 0x02
    759e:	9b 81       	ldd	r25, Y+3	; 0x03
    75a0:	1e 96       	adiw	r26, 0x0e	; 14
    75a2:	8d 93       	st	X+, r24
    75a4:	9c 93       	st	X, r25
    75a6:	1f 97       	sbiw	r26, 0x0f	; 15
    75a8:	0e 94 15 49 	call	0x922a	; 0x922a <hal_getCpuFreq>
    75ac:	dc 01       	movw	r26, r24
    75ae:	cb 01       	movw	r24, r22
    75b0:	f7 e0       	ldi	r31, 0x07	; 7
    75b2:	b6 95       	lsr	r27
    75b4:	a7 95       	ror	r26
    75b6:	97 95       	ror	r25
    75b8:	87 95       	ror	r24
    75ba:	fa 95       	dec	r31
    75bc:	d1 f7       	brne	.-12     	; 0x75b2 <hal_configureSpiChannel+0x2da>
    75be:	88 16       	cp	r8, r24
    75c0:	99 06       	cpc	r9, r25
    75c2:	aa 06       	cpc	r10, r26
    75c4:	bb 06       	cpc	r11, r27
    75c6:	10 f1       	brcs	.+68     	; 0x760c <hal_configureSpiChannel+0x334>
    75c8:	0e 94 15 49 	call	0x922a	; 0x922a <hal_getCpuFreq>
    75cc:	dc 01       	movw	r26, r24
    75ce:	cb 01       	movw	r24, r22
    75d0:	e6 e0       	ldi	r30, 0x06	; 6
    75d2:	b6 95       	lsr	r27
    75d4:	a7 95       	ror	r26
    75d6:	97 95       	ror	r25
    75d8:	87 95       	ror	r24
    75da:	ea 95       	dec	r30
    75dc:	d1 f7       	brne	.-12     	; 0x75d2 <hal_configureSpiChannel+0x2fa>
    75de:	88 16       	cp	r8, r24
    75e0:	99 06       	cpc	r9, r25
    75e2:	aa 06       	cpc	r10, r26
    75e4:	bb 06       	cpc	r11, r27
    75e6:	90 f4       	brcc	.+36     	; 0x760c <hal_configureSpiChannel+0x334>
    75e8:	0e 94 15 49 	call	0x922a	; 0x922a <hal_getCpuFreq>
    75ec:	dc 01       	movw	r26, r24
    75ee:	cb 01       	movw	r24, r22
    75f0:	57 e0       	ldi	r21, 0x07	; 7
    75f2:	b6 95       	lsr	r27
    75f4:	a7 95       	ror	r26
    75f6:	97 95       	ror	r25
    75f8:	87 95       	ror	r24
    75fa:	5a 95       	dec	r21
    75fc:	d1 f7       	brne	.-12     	; 0x75f2 <hal_configureSpiChannel+0x31a>
    75fe:	f6 01       	movw	r30, r12
    7600:	81 83       	std	Z+1, r24	; 0x01
    7602:	92 83       	std	Z+2, r25	; 0x02
    7604:	a3 83       	std	Z+3, r26	; 0x03
    7606:	b4 83       	std	Z+4, r27	; 0x04
    7608:	13 e0       	ldi	r17, 0x03	; 3
    760a:	b0 c0       	rjmp	.+352    	; 0x776c <hal_configureSpiChannel+0x494>
    760c:	0e 94 15 49 	call	0x922a	; 0x922a <hal_getCpuFreq>
    7610:	dc 01       	movw	r26, r24
    7612:	cb 01       	movw	r24, r22
    7614:	46 e0       	ldi	r20, 0x06	; 6
    7616:	b6 95       	lsr	r27
    7618:	a7 95       	ror	r26
    761a:	97 95       	ror	r25
    761c:	87 95       	ror	r24
    761e:	4a 95       	dec	r20
    7620:	d1 f7       	brne	.-12     	; 0x7616 <hal_configureSpiChannel+0x33e>
    7622:	88 16       	cp	r8, r24
    7624:	99 06       	cpc	r9, r25
    7626:	aa 06       	cpc	r10, r26
    7628:	bb 06       	cpc	r11, r27
    762a:	10 f1       	brcs	.+68     	; 0x7670 <hal_configureSpiChannel+0x398>
    762c:	0e 94 15 49 	call	0x922a	; 0x922a <hal_getCpuFreq>
    7630:	dc 01       	movw	r26, r24
    7632:	cb 01       	movw	r24, r22
    7634:	34 e0       	ldi	r19, 0x04	; 4
    7636:	b6 95       	lsr	r27
    7638:	a7 95       	ror	r26
    763a:	97 95       	ror	r25
    763c:	87 95       	ror	r24
    763e:	3a 95       	dec	r19
    7640:	d1 f7       	brne	.-12     	; 0x7636 <hal_configureSpiChannel+0x35e>
    7642:	88 16       	cp	r8, r24
    7644:	99 06       	cpc	r9, r25
    7646:	aa 06       	cpc	r10, r26
    7648:	bb 06       	cpc	r11, r27
    764a:	90 f4       	brcc	.+36     	; 0x7670 <hal_configureSpiChannel+0x398>
    764c:	0e 94 15 49 	call	0x922a	; 0x922a <hal_getCpuFreq>
    7650:	dc 01       	movw	r26, r24
    7652:	cb 01       	movw	r24, r22
    7654:	26 e0       	ldi	r18, 0x06	; 6
    7656:	b6 95       	lsr	r27
    7658:	a7 95       	ror	r26
    765a:	97 95       	ror	r25
    765c:	87 95       	ror	r24
    765e:	2a 95       	dec	r18
    7660:	d1 f7       	brne	.-12     	; 0x7656 <hal_configureSpiChannel+0x37e>
    7662:	f6 01       	movw	r30, r12
    7664:	81 83       	std	Z+1, r24	; 0x01
    7666:	92 83       	std	Z+2, r25	; 0x02
    7668:	a3 83       	std	Z+3, r26	; 0x03
    766a:	b4 83       	std	Z+4, r27	; 0x04
    766c:	12 e0       	ldi	r17, 0x02	; 2
    766e:	7e c0       	rjmp	.+252    	; 0x776c <hal_configureSpiChannel+0x494>
    7670:	0e 94 15 49 	call	0x922a	; 0x922a <hal_getCpuFreq>
    7674:	dc 01       	movw	r26, r24
    7676:	cb 01       	movw	r24, r22
    7678:	04 e0       	ldi	r16, 0x04	; 4
    767a:	b6 95       	lsr	r27
    767c:	a7 95       	ror	r26
    767e:	97 95       	ror	r25
    7680:	87 95       	ror	r24
    7682:	0a 95       	dec	r16
    7684:	d1 f7       	brne	.-12     	; 0x767a <hal_configureSpiChannel+0x3a2>
    7686:	88 16       	cp	r8, r24
    7688:	99 06       	cpc	r9, r25
    768a:	aa 06       	cpc	r10, r26
    768c:	bb 06       	cpc	r11, r27
    768e:	10 f1       	brcs	.+68     	; 0x76d4 <hal_configureSpiChannel+0x3fc>
    7690:	0e 94 15 49 	call	0x922a	; 0x922a <hal_getCpuFreq>
    7694:	dc 01       	movw	r26, r24
    7696:	cb 01       	movw	r24, r22
    7698:	12 e0       	ldi	r17, 0x02	; 2
    769a:	b6 95       	lsr	r27
    769c:	a7 95       	ror	r26
    769e:	97 95       	ror	r25
    76a0:	87 95       	ror	r24
    76a2:	1a 95       	dec	r17
    76a4:	d1 f7       	brne	.-12     	; 0x769a <hal_configureSpiChannel+0x3c2>
    76a6:	88 16       	cp	r8, r24
    76a8:	99 06       	cpc	r9, r25
    76aa:	aa 06       	cpc	r10, r26
    76ac:	bb 06       	cpc	r11, r27
    76ae:	90 f4       	brcc	.+36     	; 0x76d4 <hal_configureSpiChannel+0x3fc>
    76b0:	0e 94 15 49 	call	0x922a	; 0x922a <hal_getCpuFreq>
    76b4:	dc 01       	movw	r26, r24
    76b6:	cb 01       	movw	r24, r22
    76b8:	f4 e0       	ldi	r31, 0x04	; 4
    76ba:	b6 95       	lsr	r27
    76bc:	a7 95       	ror	r26
    76be:	97 95       	ror	r25
    76c0:	87 95       	ror	r24
    76c2:	fa 95       	dec	r31
    76c4:	d1 f7       	brne	.-12     	; 0x76ba <hal_configureSpiChannel+0x3e2>
    76c6:	f6 01       	movw	r30, r12
    76c8:	81 83       	std	Z+1, r24	; 0x01
    76ca:	92 83       	std	Z+2, r25	; 0x02
    76cc:	a3 83       	std	Z+3, r26	; 0x03
    76ce:	b4 83       	std	Z+4, r27	; 0x04
    76d0:	11 e0       	ldi	r17, 0x01	; 1
    76d2:	4c c0       	rjmp	.+152    	; 0x776c <hal_configureSpiChannel+0x494>
    76d4:	0e 94 15 49 	call	0x922a	; 0x922a <hal_getCpuFreq>
    76d8:	dc 01       	movw	r26, r24
    76da:	cb 01       	movw	r24, r22
    76dc:	e2 e0       	ldi	r30, 0x02	; 2
    76de:	b6 95       	lsr	r27
    76e0:	a7 95       	ror	r26
    76e2:	97 95       	ror	r25
    76e4:	87 95       	ror	r24
    76e6:	ea 95       	dec	r30
    76e8:	d1 f7       	brne	.-12     	; 0x76de <hal_configureSpiChannel+0x406>
    76ea:	88 16       	cp	r8, r24
    76ec:	99 06       	cpc	r9, r25
    76ee:	aa 06       	cpc	r10, r26
    76f0:	bb 06       	cpc	r11, r27
    76f2:	f8 f0       	brcs	.+62     	; 0x7732 <hal_configureSpiChannel+0x45a>
    76f4:	0e 94 15 49 	call	0x922a	; 0x922a <hal_getCpuFreq>
    76f8:	dc 01       	movw	r26, r24
    76fa:	cb 01       	movw	r24, r22
    76fc:	b6 95       	lsr	r27
    76fe:	a7 95       	ror	r26
    7700:	97 95       	ror	r25
    7702:	87 95       	ror	r24
    7704:	88 16       	cp	r8, r24
    7706:	99 06       	cpc	r9, r25
    7708:	aa 06       	cpc	r10, r26
    770a:	bb 06       	cpc	r11, r27
    770c:	90 f4       	brcc	.+36     	; 0x7732 <hal_configureSpiChannel+0x45a>
    770e:	0e 94 15 49 	call	0x922a	; 0x922a <hal_getCpuFreq>
    7712:	dc 01       	movw	r26, r24
    7714:	cb 01       	movw	r24, r22
    7716:	42 e0       	ldi	r20, 0x02	; 2
    7718:	b6 95       	lsr	r27
    771a:	a7 95       	ror	r26
    771c:	97 95       	ror	r25
    771e:	87 95       	ror	r24
    7720:	4a 95       	dec	r20
    7722:	d1 f7       	brne	.-12     	; 0x7718 <hal_configureSpiChannel+0x440>
    7724:	f6 01       	movw	r30, r12
    7726:	81 83       	std	Z+1, r24	; 0x01
    7728:	92 83       	std	Z+2, r25	; 0x02
    772a:	a3 83       	std	Z+3, r26	; 0x03
    772c:	b4 83       	std	Z+4, r27	; 0x04
    772e:	10 e0       	ldi	r17, 0x00	; 0
    7730:	1d c0       	rjmp	.+58     	; 0x776c <hal_configureSpiChannel+0x494>
    7732:	0e 94 15 49 	call	0x922a	; 0x922a <hal_getCpuFreq>
    7736:	dc 01       	movw	r26, r24
    7738:	cb 01       	movw	r24, r22
    773a:	32 e0       	ldi	r19, 0x02	; 2
    773c:	b6 95       	lsr	r27
    773e:	a7 95       	ror	r26
    7740:	97 95       	ror	r25
    7742:	87 95       	ror	r24
    7744:	3a 95       	dec	r19
    7746:	d1 f7       	brne	.-12     	; 0x773c <hal_configureSpiChannel+0x464>
    7748:	f6 01       	movw	r30, r12
    774a:	81 83       	std	Z+1, r24	; 0x01
    774c:	92 83       	std	Z+2, r25	; 0x02
    774e:	a3 83       	std	Z+3, r26	; 0x03
    7750:	b4 83       	std	Z+4, r27	; 0x04
    7752:	77 20       	and	r7, r7
    7754:	a1 f4       	brne	.+40     	; 0x777e <hal_configureSpiChannel+0x4a6>
    7756:	88 0f       	add	r24, r24
    7758:	99 1f       	adc	r25, r25
    775a:	aa 1f       	adc	r26, r26
    775c:	bb 1f       	adc	r27, r27
    775e:	81 83       	std	Z+1, r24	; 0x01
    7760:	92 83       	std	Z+2, r25	; 0x02
    7762:	a3 83       	std	Z+3, r26	; 0x03
    7764:	b4 83       	std	Z+4, r27	; 0x04
    7766:	00 e8       	ldi	r16, 0x80	; 128
    7768:	10 e0       	ldi	r17, 0x00	; 0
    776a:	03 c0       	rjmp	.+6      	; 0x7772 <hal_configureSpiChannel+0x49a>
    776c:	77 20       	and	r7, r7
    776e:	41 f4       	brne	.+16     	; 0x7780 <hal_configureSpiChannel+0x4a8>
    7770:	00 e0       	ldi	r16, 0x00	; 0
    7772:	80 e4       	ldi	r24, 0x40	; 64
    7774:	8c 83       	std	Y+4, r24	; 0x04
    7776:	80 eb       	ldi	r24, 0xB0	; 176
    7778:	8d 83       	std	Y+5, r24	; 0x05
    777a:	1e 82       	std	Y+6, r1	; 0x06
    777c:	07 c0       	rjmp	.+14     	; 0x778c <hal_configureSpiChannel+0x4b4>
    777e:	10 e0       	ldi	r17, 0x00	; 0
    7780:	80 eb       	ldi	r24, 0xB0	; 176
    7782:	8c 83       	std	Y+4, r24	; 0x04
    7784:	80 e4       	ldi	r24, 0x40	; 64
    7786:	8d 83       	std	Y+5, r24	; 0x05
    7788:	1e 82       	std	Y+6, r1	; 0x06
    778a:	00 e0       	ldi	r16, 0x00	; 0
    778c:	85 e0       	ldi	r24, 0x05	; 5
    778e:	8f 83       	std	Y+7, r24	; 0x07
    7790:	18 86       	std	Y+8, r1	; 0x08
    7792:	8f 2d       	mov	r24, r15
    7794:	2c 81       	ldd	r18, Y+4	; 0x04
    7796:	3d 81       	ldd	r19, Y+5	; 0x05
    7798:	4e 81       	ldd	r20, Y+6	; 0x06
    779a:	55 e0       	ldi	r21, 0x05	; 5
    779c:	60 e0       	ldi	r22, 0x00	; 0
    779e:	0e 94 e6 29 	call	0x53cc	; 0x53cc <hal_configureGpioPort>
    77a2:	d6 01       	movw	r26, r12
    77a4:	17 96       	adiw	r26, 0x07	; 7
    77a6:	ed 91       	ld	r30, X+
    77a8:	fc 91       	ld	r31, X
    77aa:	18 97       	sbiw	r26, 0x08	; 8
    77ac:	10 82       	st	Z, r1
    77ae:	17 96       	adiw	r26, 0x07	; 7
    77b0:	ed 91       	ld	r30, X+
    77b2:	fc 91       	ld	r31, X
    77b4:	18 97       	sbiw	r26, 0x08	; 8
    77b6:	80 81       	ld	r24, Z
    77b8:	81 2b       	or	r24, r17
    77ba:	80 83       	st	Z, r24
    77bc:	17 96       	adiw	r26, 0x07	; 7
    77be:	ed 91       	ld	r30, X+
    77c0:	fc 91       	ld	r31, X
    77c2:	18 97       	sbiw	r26, 0x08	; 8
    77c4:	80 81       	ld	r24, Z
    77c6:	80 2b       	or	r24, r16
    77c8:	80 83       	st	Z, r24
    77ca:	77 20       	and	r7, r7
    77cc:	39 f4       	brne	.+14     	; 0x77dc <hal_configureSpiChannel+0x504>
    77ce:	17 96       	adiw	r26, 0x07	; 7
    77d0:	ed 91       	ld	r30, X+
    77d2:	fc 91       	ld	r31, X
    77d4:	18 97       	sbiw	r26, 0x08	; 8
    77d6:	80 81       	ld	r24, Z
    77d8:	80 61       	ori	r24, 0x10	; 16
    77da:	80 83       	st	Z, r24
    77dc:	55 20       	and	r5, r5
    77de:	41 f4       	brne	.+16     	; 0x77f0 <hal_configureSpiChannel+0x518>
    77e0:	d6 01       	movw	r26, r12
    77e2:	17 96       	adiw	r26, 0x07	; 7
    77e4:	ed 91       	ld	r30, X+
    77e6:	fc 91       	ld	r31, X
    77e8:	18 97       	sbiw	r26, 0x08	; 8
    77ea:	80 81       	ld	r24, Z
    77ec:	80 62       	ori	r24, 0x20	; 32
    77ee:	80 83       	st	Z, r24
    77f0:	d6 01       	movw	r26, r12
    77f2:	17 96       	adiw	r26, 0x07	; 7
    77f4:	ed 91       	ld	r30, X+
    77f6:	fc 91       	ld	r31, X
    77f8:	18 97       	sbiw	r26, 0x08	; 8
    77fa:	80 81       	ld	r24, Z
    77fc:	44 0c       	add	r4, r4
    77fe:	44 0c       	add	r4, r4
    7800:	48 2a       	or	r4, r24
    7802:	40 82       	st	Z, r4
    7804:	6c 92       	st	X, r6
    7806:	15 96       	adiw	r26, 0x05	; 5
    7808:	1c 92       	st	X, r1
    780a:	15 97       	sbiw	r26, 0x05	; 5
    780c:	16 96       	adiw	r26, 0x06	; 6
    780e:	7c 92       	st	X, r7
    7810:	16 97       	sbiw	r26, 0x06	; 6
    7812:	19 96       	adiw	r26, 0x09	; 9
    7814:	1c 92       	st	X, r1
    7816:	19 97       	sbiw	r26, 0x09	; 9
    7818:	17 96       	adiw	r26, 0x07	; 7
    781a:	ed 91       	ld	r30, X+
    781c:	fc 91       	ld	r31, X
    781e:	18 97       	sbiw	r26, 0x08	; 8
    7820:	33 20       	and	r3, r3
    7822:	11 f0       	breq	.+4      	; 0x7828 <hal_configureSpiChannel+0x550>
    7824:	11 82       	std	Z+1, r1	; 0x01
    7826:	02 c0       	rjmp	.+4      	; 0x782c <hal_configureSpiChannel+0x554>
    7828:	83 e0       	ldi	r24, 0x03	; 3
    782a:	81 83       	std	Z+1, r24	; 0x01
    782c:	b4 e0       	ldi	r27, 0x04	; 4
    782e:	fb 16       	cp	r15, r27
    7830:	b1 f0       	breq	.+44     	; 0x785e <hal_configureSpiChannel+0x586>
    7832:	e5 e0       	ldi	r30, 0x05	; 5
    7834:	fe 16       	cp	r15, r30
    7836:	d9 f0       	breq	.+54     	; 0x786e <hal_configureSpiChannel+0x596>
    7838:	f3 e0       	ldi	r31, 0x03	; 3
    783a:	ff 16       	cp	r15, r31
    783c:	41 f0       	breq	.+16     	; 0x784e <hal_configureSpiChannel+0x576>
    783e:	80 91 40 06 	lds	r24, 0x0640
    7842:	84 ff       	sbrs	r24, 4
    7844:	1c c0       	rjmp	.+56     	; 0x787e <hal_configureSpiChannel+0x5a6>
    7846:	80 e1       	ldi	r24, 0x10	; 16
    7848:	e0 e4       	ldi	r30, 0x40	; 64
    784a:	f6 e0       	ldi	r31, 0x06	; 6
    784c:	17 c0       	rjmp	.+46     	; 0x787c <hal_configureSpiChannel+0x5a4>
    784e:	80 91 60 06 	lds	r24, 0x0660
    7852:	84 ff       	sbrs	r24, 4
    7854:	14 c0       	rjmp	.+40     	; 0x787e <hal_configureSpiChannel+0x5a6>
    7856:	80 e1       	ldi	r24, 0x10	; 16
    7858:	e0 e6       	ldi	r30, 0x60	; 96
    785a:	f6 e0       	ldi	r31, 0x06	; 6
    785c:	0f c0       	rjmp	.+30     	; 0x787c <hal_configureSpiChannel+0x5a4>
    785e:	80 91 80 06 	lds	r24, 0x0680
    7862:	84 ff       	sbrs	r24, 4
    7864:	0c c0       	rjmp	.+24     	; 0x787e <hal_configureSpiChannel+0x5a6>
    7866:	80 e1       	ldi	r24, 0x10	; 16
    7868:	e0 e8       	ldi	r30, 0x80	; 128
    786a:	f6 e0       	ldi	r31, 0x06	; 6
    786c:	07 c0       	rjmp	.+14     	; 0x787c <hal_configureSpiChannel+0x5a4>
    786e:	80 91 a0 06 	lds	r24, 0x06A0
    7872:	84 ff       	sbrs	r24, 4
    7874:	04 c0       	rjmp	.+8      	; 0x787e <hal_configureSpiChannel+0x5a6>
    7876:	80 e1       	ldi	r24, 0x10	; 16
    7878:	e0 ea       	ldi	r30, 0xA0	; 160
    787a:	f6 e0       	ldi	r31, 0x06	; 6
    787c:	85 83       	std	Z+5, r24	; 0x05
    787e:	d6 01       	movw	r26, r12
    7880:	17 96       	adiw	r26, 0x07	; 7
    7882:	ed 91       	ld	r30, X+
    7884:	fc 91       	ld	r31, X
    7886:	18 97       	sbiw	r26, 0x08	; 8
    7888:	80 81       	ld	r24, Z
    788a:	80 64       	ori	r24, 0x40	; 64
    788c:	80 83       	st	Z, r24
    788e:	89 81       	ldd	r24, Y+1	; 0x01
    7890:	8f bf       	out	0x3f, r24	; 63
    7892:	80 e0       	ldi	r24, 0x00	; 0
    7894:	01 c0       	rjmp	.+2      	; 0x7898 <hal_configureSpiChannel+0x5c0>
    7896:	8f ef       	ldi	r24, 0xFF	; 255
    7898:	60 96       	adiw	r28, 0x10	; 16
    789a:	cd bf       	out	0x3d, r28	; 61
    789c:	de bf       	out	0x3e, r29	; 62
    789e:	df 91       	pop	r29
    78a0:	cf 91       	pop	r28
    78a2:	1f 91       	pop	r17
    78a4:	0f 91       	pop	r16
    78a6:	ff 90       	pop	r15
    78a8:	ef 90       	pop	r14
    78aa:	df 90       	pop	r13
    78ac:	cf 90       	pop	r12
    78ae:	bf 90       	pop	r11
    78b0:	af 90       	pop	r10
    78b2:	9f 90       	pop	r9
    78b4:	8f 90       	pop	r8
    78b6:	7f 90       	pop	r7
    78b8:	6f 90       	pop	r6
    78ba:	5f 90       	pop	r5
    78bc:	4f 90       	pop	r4
    78be:	3f 90       	pop	r3
    78c0:	08 95       	ret

000078c2 <uart1TxDmaInt>:
    78c2:	cf 93       	push	r28
    78c4:	df 93       	push	r29
    78c6:	c0 91 c0 24 	lds	r28, 0x24C0
    78ca:	d0 91 c1 24 	lds	r29, 0x24C1
    78ce:	20 97       	sbiw	r28, 0x00	; 0
    78d0:	71 f0       	breq	.+28     	; 0x78ee <uart1TxDmaInt+0x2c>
    78d2:	ef 8d       	ldd	r30, Y+31	; 0x1f
    78d4:	f8 a1       	ldd	r31, Y+32	; 0x20
    78d6:	30 97       	sbiw	r30, 0x00	; 0
    78d8:	19 f0       	breq	.+6      	; 0x78e0 <uart1TxDmaInt+0x1e>
    78da:	89 89       	ldd	r24, Y+17	; 0x11
    78dc:	9a 89       	ldd	r25, Y+18	; 0x12
    78de:	19 95       	eicall
    78e0:	1d 86       	std	Y+13, r1	; 0x0d
    78e2:	1e 86       	std	Y+14, r1	; 0x0e
    78e4:	1d 8a       	std	Y+21, r1	; 0x15
    78e6:	1e 8a       	std	Y+22, r1	; 0x16
    78e8:	19 8a       	std	Y+17, r1	; 0x11
    78ea:	1a 8a       	std	Y+18, r1	; 0x12
    78ec:	1b 86       	std	Y+11, r1	; 0x0b
    78ee:	df 91       	pop	r29
    78f0:	cf 91       	pop	r28
    78f2:	08 95       	ret

000078f4 <uart2TxDmaInt>:
    78f4:	cf 93       	push	r28
    78f6:	df 93       	push	r29
    78f8:	c0 91 c2 24 	lds	r28, 0x24C2
    78fc:	d0 91 c3 24 	lds	r29, 0x24C3
    7900:	20 97       	sbiw	r28, 0x00	; 0
    7902:	71 f0       	breq	.+28     	; 0x7920 <uart2TxDmaInt+0x2c>
    7904:	ef 8d       	ldd	r30, Y+31	; 0x1f
    7906:	f8 a1       	ldd	r31, Y+32	; 0x20
    7908:	30 97       	sbiw	r30, 0x00	; 0
    790a:	19 f0       	breq	.+6      	; 0x7912 <uart2TxDmaInt+0x1e>
    790c:	89 89       	ldd	r24, Y+17	; 0x11
    790e:	9a 89       	ldd	r25, Y+18	; 0x12
    7910:	19 95       	eicall
    7912:	1d 86       	std	Y+13, r1	; 0x0d
    7914:	1e 86       	std	Y+14, r1	; 0x0e
    7916:	1d 8a       	std	Y+21, r1	; 0x15
    7918:	1e 8a       	std	Y+22, r1	; 0x16
    791a:	19 8a       	std	Y+17, r1	; 0x11
    791c:	1a 8a       	std	Y+18, r1	; 0x12
    791e:	1b 86       	std	Y+11, r1	; 0x0b
    7920:	df 91       	pop	r29
    7922:	cf 91       	pop	r28
    7924:	08 95       	ret

00007926 <uart3TxDmaInt>:
    7926:	cf 93       	push	r28
    7928:	df 93       	push	r29
    792a:	c0 91 c4 24 	lds	r28, 0x24C4
    792e:	d0 91 c5 24 	lds	r29, 0x24C5
    7932:	20 97       	sbiw	r28, 0x00	; 0
    7934:	71 f0       	breq	.+28     	; 0x7952 <uart3TxDmaInt+0x2c>
    7936:	ef 8d       	ldd	r30, Y+31	; 0x1f
    7938:	f8 a1       	ldd	r31, Y+32	; 0x20
    793a:	30 97       	sbiw	r30, 0x00	; 0
    793c:	19 f0       	breq	.+6      	; 0x7944 <uart3TxDmaInt+0x1e>
    793e:	89 89       	ldd	r24, Y+17	; 0x11
    7940:	9a 89       	ldd	r25, Y+18	; 0x12
    7942:	19 95       	eicall
    7944:	1d 86       	std	Y+13, r1	; 0x0d
    7946:	1e 86       	std	Y+14, r1	; 0x0e
    7948:	1d 8a       	std	Y+21, r1	; 0x15
    794a:	1e 8a       	std	Y+22, r1	; 0x16
    794c:	19 8a       	std	Y+17, r1	; 0x11
    794e:	1a 8a       	std	Y+18, r1	; 0x12
    7950:	1b 86       	std	Y+11, r1	; 0x0b
    7952:	df 91       	pop	r29
    7954:	cf 91       	pop	r28
    7956:	08 95       	ret

00007958 <uart4TxDmaInt>:
    7958:	cf 93       	push	r28
    795a:	df 93       	push	r29
    795c:	c0 91 c6 24 	lds	r28, 0x24C6
    7960:	d0 91 c7 24 	lds	r29, 0x24C7
    7964:	20 97       	sbiw	r28, 0x00	; 0
    7966:	71 f0       	breq	.+28     	; 0x7984 <uart4TxDmaInt+0x2c>
    7968:	ef 8d       	ldd	r30, Y+31	; 0x1f
    796a:	f8 a1       	ldd	r31, Y+32	; 0x20
    796c:	30 97       	sbiw	r30, 0x00	; 0
    796e:	19 f0       	breq	.+6      	; 0x7976 <uart4TxDmaInt+0x1e>
    7970:	89 89       	ldd	r24, Y+17	; 0x11
    7972:	9a 89       	ldd	r25, Y+18	; 0x12
    7974:	19 95       	eicall
    7976:	1d 86       	std	Y+13, r1	; 0x0d
    7978:	1e 86       	std	Y+14, r1	; 0x0e
    797a:	1d 8a       	std	Y+21, r1	; 0x15
    797c:	1e 8a       	std	Y+22, r1	; 0x16
    797e:	19 8a       	std	Y+17, r1	; 0x11
    7980:	1a 8a       	std	Y+18, r1	; 0x12
    7982:	1b 86       	std	Y+11, r1	; 0x0b
    7984:	df 91       	pop	r29
    7986:	cf 91       	pop	r28
    7988:	08 95       	ret

0000798a <uart5TxDmaInt>:
    798a:	cf 93       	push	r28
    798c:	df 93       	push	r29
    798e:	c0 91 c8 24 	lds	r28, 0x24C8
    7992:	d0 91 c9 24 	lds	r29, 0x24C9
    7996:	20 97       	sbiw	r28, 0x00	; 0
    7998:	71 f0       	breq	.+28     	; 0x79b6 <uart5TxDmaInt+0x2c>
    799a:	ef 8d       	ldd	r30, Y+31	; 0x1f
    799c:	f8 a1       	ldd	r31, Y+32	; 0x20
    799e:	30 97       	sbiw	r30, 0x00	; 0
    79a0:	19 f0       	breq	.+6      	; 0x79a8 <uart5TxDmaInt+0x1e>
    79a2:	89 89       	ldd	r24, Y+17	; 0x11
    79a4:	9a 89       	ldd	r25, Y+18	; 0x12
    79a6:	19 95       	eicall
    79a8:	1d 86       	std	Y+13, r1	; 0x0d
    79aa:	1e 86       	std	Y+14, r1	; 0x0e
    79ac:	1d 8a       	std	Y+21, r1	; 0x15
    79ae:	1e 8a       	std	Y+22, r1	; 0x16
    79b0:	19 8a       	std	Y+17, r1	; 0x11
    79b2:	1a 8a       	std	Y+18, r1	; 0x12
    79b4:	1b 86       	std	Y+11, r1	; 0x0b
    79b6:	df 91       	pop	r29
    79b8:	cf 91       	pop	r28
    79ba:	08 95       	ret

000079bc <uart6TxDmaInt>:
    79bc:	cf 93       	push	r28
    79be:	df 93       	push	r29
    79c0:	c0 91 ca 24 	lds	r28, 0x24CA
    79c4:	d0 91 cb 24 	lds	r29, 0x24CB
    79c8:	20 97       	sbiw	r28, 0x00	; 0
    79ca:	71 f0       	breq	.+28     	; 0x79e8 <uart6TxDmaInt+0x2c>
    79cc:	ef 8d       	ldd	r30, Y+31	; 0x1f
    79ce:	f8 a1       	ldd	r31, Y+32	; 0x20
    79d0:	30 97       	sbiw	r30, 0x00	; 0
    79d2:	19 f0       	breq	.+6      	; 0x79da <uart6TxDmaInt+0x1e>
    79d4:	89 89       	ldd	r24, Y+17	; 0x11
    79d6:	9a 89       	ldd	r25, Y+18	; 0x12
    79d8:	19 95       	eicall
    79da:	1d 86       	std	Y+13, r1	; 0x0d
    79dc:	1e 86       	std	Y+14, r1	; 0x0e
    79de:	1d 8a       	std	Y+21, r1	; 0x15
    79e0:	1e 8a       	std	Y+22, r1	; 0x16
    79e2:	19 8a       	std	Y+17, r1	; 0x11
    79e4:	1a 8a       	std	Y+18, r1	; 0x12
    79e6:	1b 86       	std	Y+11, r1	; 0x0b
    79e8:	df 91       	pop	r29
    79ea:	cf 91       	pop	r28
    79ec:	08 95       	ret

000079ee <uart7TxDmaInt>:
    79ee:	cf 93       	push	r28
    79f0:	df 93       	push	r29
    79f2:	c0 91 cc 24 	lds	r28, 0x24CC
    79f6:	d0 91 cd 24 	lds	r29, 0x24CD
    79fa:	20 97       	sbiw	r28, 0x00	; 0
    79fc:	71 f0       	breq	.+28     	; 0x7a1a <uart7TxDmaInt+0x2c>
    79fe:	ef 8d       	ldd	r30, Y+31	; 0x1f
    7a00:	f8 a1       	ldd	r31, Y+32	; 0x20
    7a02:	30 97       	sbiw	r30, 0x00	; 0
    7a04:	19 f0       	breq	.+6      	; 0x7a0c <uart7TxDmaInt+0x1e>
    7a06:	89 89       	ldd	r24, Y+17	; 0x11
    7a08:	9a 89       	ldd	r25, Y+18	; 0x12
    7a0a:	19 95       	eicall
    7a0c:	1d 86       	std	Y+13, r1	; 0x0d
    7a0e:	1e 86       	std	Y+14, r1	; 0x0e
    7a10:	1d 8a       	std	Y+21, r1	; 0x15
    7a12:	1e 8a       	std	Y+22, r1	; 0x16
    7a14:	19 8a       	std	Y+17, r1	; 0x11
    7a16:	1a 8a       	std	Y+18, r1	; 0x12
    7a18:	1b 86       	std	Y+11, r1	; 0x0b
    7a1a:	df 91       	pop	r29
    7a1c:	cf 91       	pop	r28
    7a1e:	08 95       	ret

00007a20 <uart8TxDmaInt>:
    7a20:	cf 93       	push	r28
    7a22:	df 93       	push	r29
    7a24:	c0 91 ce 24 	lds	r28, 0x24CE
    7a28:	d0 91 cf 24 	lds	r29, 0x24CF
    7a2c:	20 97       	sbiw	r28, 0x00	; 0
    7a2e:	71 f0       	breq	.+28     	; 0x7a4c <uart8TxDmaInt+0x2c>
    7a30:	ef 8d       	ldd	r30, Y+31	; 0x1f
    7a32:	f8 a1       	ldd	r31, Y+32	; 0x20
    7a34:	30 97       	sbiw	r30, 0x00	; 0
    7a36:	19 f0       	breq	.+6      	; 0x7a3e <uart8TxDmaInt+0x1e>
    7a38:	89 89       	ldd	r24, Y+17	; 0x11
    7a3a:	9a 89       	ldd	r25, Y+18	; 0x12
    7a3c:	19 95       	eicall
    7a3e:	1d 86       	std	Y+13, r1	; 0x0d
    7a40:	1e 86       	std	Y+14, r1	; 0x0e
    7a42:	1d 8a       	std	Y+21, r1	; 0x15
    7a44:	1e 8a       	std	Y+22, r1	; 0x16
    7a46:	19 8a       	std	Y+17, r1	; 0x11
    7a48:	1a 8a       	std	Y+18, r1	; 0x12
    7a4a:	1b 86       	std	Y+11, r1	; 0x0b
    7a4c:	df 91       	pop	r29
    7a4e:	cf 91       	pop	r28
    7a50:	08 95       	ret

00007a52 <updateRxDmaInt>:
    7a52:	cf 93       	push	r28
    7a54:	df 93       	push	r29
    7a56:	ec 01       	movw	r28, r24
    7a58:	8b 8d       	ldd	r24, Y+27	; 0x1b
    7a5a:	9c 8d       	ldd	r25, Y+28	; 0x1c
    7a5c:	0e 94 3e 50 	call	0xa07c	; 0xa07c <hal_dmaDisableChannel>
    7a60:	8b 8d       	ldd	r24, Y+27	; 0x1b
    7a62:	9c 8d       	ldd	r25, Y+28	; 0x1c
    7a64:	0e 94 da 4d 	call	0x9bb4	; 0x9bb4 <hal_getDmaTransferCount>
    7a68:	8f 8b       	std	Y+23, r24	; 0x17
    7a6a:	98 8f       	std	Y+24, r25	; 0x18
    7a6c:	ed 8d       	ldd	r30, Y+29	; 0x1d
    7a6e:	fe 8d       	ldd	r31, Y+30	; 0x1e
    7a70:	30 97       	sbiw	r30, 0x00	; 0
    7a72:	09 f0       	breq	.+2      	; 0x7a76 <updateRxDmaInt+0x24>
    7a74:	19 95       	eicall
    7a76:	1c 86       	std	Y+12, r1	; 0x0c
    7a78:	1f 86       	std	Y+15, r1	; 0x0f
    7a7a:	18 8a       	std	Y+16, r1	; 0x10
    7a7c:	1f 8a       	std	Y+23, r1	; 0x17
    7a7e:	18 8e       	std	Y+24, r1	; 0x18
    7a80:	1b 8a       	std	Y+19, r1	; 0x13
    7a82:	1c 8a       	std	Y+20, r1	; 0x14
    7a84:	e9 85       	ldd	r30, Y+9	; 0x09
    7a86:	fa 85       	ldd	r31, Y+10	; 0x0a
    7a88:	83 81       	ldd	r24, Z+3	; 0x03
    7a8a:	80 63       	ori	r24, 0x30	; 48
    7a8c:	83 83       	std	Z+3, r24	; 0x03
    7a8e:	df 91       	pop	r29
    7a90:	cf 91       	pop	r28
    7a92:	08 95       	ret

00007a94 <uart8RxDmaInt>:
    7a94:	80 91 ce 24 	lds	r24, 0x24CE
    7a98:	90 91 cf 24 	lds	r25, 0x24CF
    7a9c:	00 97       	sbiw	r24, 0x00	; 0
    7a9e:	11 f0       	breq	.+4      	; 0x7aa4 <uart8RxDmaInt+0x10>
    7aa0:	0e 94 29 3d 	call	0x7a52	; 0x7a52 <updateRxDmaInt>
    7aa4:	08 95       	ret

00007aa6 <uart7RxDmaInt>:
    7aa6:	80 91 cc 24 	lds	r24, 0x24CC
    7aaa:	90 91 cd 24 	lds	r25, 0x24CD
    7aae:	00 97       	sbiw	r24, 0x00	; 0
    7ab0:	11 f0       	breq	.+4      	; 0x7ab6 <uart7RxDmaInt+0x10>
    7ab2:	0e 94 29 3d 	call	0x7a52	; 0x7a52 <updateRxDmaInt>
    7ab6:	08 95       	ret

00007ab8 <uart6RxDmaInt>:
    7ab8:	80 91 ca 24 	lds	r24, 0x24CA
    7abc:	90 91 cb 24 	lds	r25, 0x24CB
    7ac0:	00 97       	sbiw	r24, 0x00	; 0
    7ac2:	11 f0       	breq	.+4      	; 0x7ac8 <uart6RxDmaInt+0x10>
    7ac4:	0e 94 29 3d 	call	0x7a52	; 0x7a52 <updateRxDmaInt>
    7ac8:	08 95       	ret

00007aca <uart5RxDmaInt>:
    7aca:	80 91 c8 24 	lds	r24, 0x24C8
    7ace:	90 91 c9 24 	lds	r25, 0x24C9
    7ad2:	00 97       	sbiw	r24, 0x00	; 0
    7ad4:	11 f0       	breq	.+4      	; 0x7ada <uart5RxDmaInt+0x10>
    7ad6:	0e 94 29 3d 	call	0x7a52	; 0x7a52 <updateRxDmaInt>
    7ada:	08 95       	ret

00007adc <uart4RxDmaInt>:
    7adc:	80 91 c6 24 	lds	r24, 0x24C6
    7ae0:	90 91 c7 24 	lds	r25, 0x24C7
    7ae4:	00 97       	sbiw	r24, 0x00	; 0
    7ae6:	11 f0       	breq	.+4      	; 0x7aec <uart4RxDmaInt+0x10>
    7ae8:	0e 94 29 3d 	call	0x7a52	; 0x7a52 <updateRxDmaInt>
    7aec:	08 95       	ret

00007aee <uart3RxDmaInt>:
    7aee:	80 91 c4 24 	lds	r24, 0x24C4
    7af2:	90 91 c5 24 	lds	r25, 0x24C5
    7af6:	00 97       	sbiw	r24, 0x00	; 0
    7af8:	11 f0       	breq	.+4      	; 0x7afe <uart3RxDmaInt+0x10>
    7afa:	0e 94 29 3d 	call	0x7a52	; 0x7a52 <updateRxDmaInt>
    7afe:	08 95       	ret

00007b00 <uart2RxDmaInt>:
    7b00:	80 91 c2 24 	lds	r24, 0x24C2
    7b04:	90 91 c3 24 	lds	r25, 0x24C3
    7b08:	00 97       	sbiw	r24, 0x00	; 0
    7b0a:	11 f0       	breq	.+4      	; 0x7b10 <uart2RxDmaInt+0x10>
    7b0c:	0e 94 29 3d 	call	0x7a52	; 0x7a52 <updateRxDmaInt>
    7b10:	08 95       	ret

00007b12 <uart1RxDmaInt>:
    7b12:	80 91 c0 24 	lds	r24, 0x24C0
    7b16:	90 91 c1 24 	lds	r25, 0x24C1
    7b1a:	00 97       	sbiw	r24, 0x00	; 0
    7b1c:	11 f0       	breq	.+4      	; 0x7b22 <uart1RxDmaInt+0x10>
    7b1e:	0e 94 29 3d 	call	0x7a52	; 0x7a52 <updateRxDmaInt>
    7b22:	08 95       	ret

00007b24 <updateRxBuffer>:
    7b24:	cf 93       	push	r28
    7b26:	df 93       	push	r29
    7b28:	ec 01       	movw	r28, r24
    7b2a:	8f 85       	ldd	r24, Y+15	; 0x0f
    7b2c:	98 89       	ldd	r25, Y+16	; 0x10
    7b2e:	00 97       	sbiw	r24, 0x00	; 0
    7b30:	51 f4       	brne	.+20     	; 0x7b46 <updateRxBuffer+0x22>
    7b32:	ed 8d       	ldd	r30, Y+29	; 0x1d
    7b34:	fe 8d       	ldd	r31, Y+30	; 0x1e
    7b36:	30 97       	sbiw	r30, 0x00	; 0
    7b38:	11 f1       	breq	.+68     	; 0x7b7e <updateRxBuffer+0x5a>
    7b3a:	a9 85       	ldd	r26, Y+9	; 0x09
    7b3c:	ba 85       	ldd	r27, Y+10	; 0x0a
    7b3e:	8c 91       	ld	r24, X
    7b40:	90 e0       	ldi	r25, 0x00	; 0
    7b42:	19 95       	eicall
    7b44:	1c c0       	rjmp	.+56     	; 0x7b7e <updateRxBuffer+0x5a>
    7b46:	e9 85       	ldd	r30, Y+9	; 0x09
    7b48:	fa 85       	ldd	r31, Y+10	; 0x0a
    7b4a:	20 81       	ld	r18, Z
    7b4c:	ef 89       	ldd	r30, Y+23	; 0x17
    7b4e:	f8 8d       	ldd	r31, Y+24	; 0x18
    7b50:	e8 0f       	add	r30, r24
    7b52:	f9 1f       	adc	r31, r25
    7b54:	20 83       	st	Z, r18
    7b56:	8f 89       	ldd	r24, Y+23	; 0x17
    7b58:	98 8d       	ldd	r25, Y+24	; 0x18
    7b5a:	01 96       	adiw	r24, 0x01	; 1
    7b5c:	8f 8b       	std	Y+23, r24	; 0x17
    7b5e:	98 8f       	std	Y+24, r25	; 0x18
    7b60:	2b 89       	ldd	r18, Y+19	; 0x13
    7b62:	3c 89       	ldd	r19, Y+20	; 0x14
    7b64:	82 17       	cp	r24, r18
    7b66:	93 07       	cpc	r25, r19
    7b68:	51 f4       	brne	.+20     	; 0x7b7e <updateRxBuffer+0x5a>
    7b6a:	ed 8d       	ldd	r30, Y+29	; 0x1d
    7b6c:	fe 8d       	ldd	r31, Y+30	; 0x1e
    7b6e:	30 97       	sbiw	r30, 0x00	; 0
    7b70:	09 f0       	breq	.+2      	; 0x7b74 <updateRxBuffer+0x50>
    7b72:	19 95       	eicall
    7b74:	1f 8a       	std	Y+23, r1	; 0x17
    7b76:	18 8e       	std	Y+24, r1	; 0x18
    7b78:	1b 8a       	std	Y+19, r1	; 0x13
    7b7a:	1c 8a       	std	Y+20, r1	; 0x14
    7b7c:	1c 86       	std	Y+12, r1	; 0x0c
    7b7e:	df 91       	pop	r29
    7b80:	cf 91       	pop	r28
    7b82:	08 95       	ret

00007b84 <updateTxBuffer>:
    7b84:	cf 93       	push	r28
    7b86:	df 93       	push	r29
    7b88:	ec 01       	movw	r28, r24
    7b8a:	8d 85       	ldd	r24, Y+13	; 0x0d
    7b8c:	9e 85       	ldd	r25, Y+14	; 0x0e
    7b8e:	00 97       	sbiw	r24, 0x00	; 0
    7b90:	29 f1       	breq	.+74     	; 0x7bdc <updateTxBuffer+0x58>
    7b92:	a9 85       	ldd	r26, Y+9	; 0x09
    7b94:	ba 85       	ldd	r27, Y+10	; 0x0a
    7b96:	ed 89       	ldd	r30, Y+21	; 0x15
    7b98:	fe 89       	ldd	r31, Y+22	; 0x16
    7b9a:	e8 0f       	add	r30, r24
    7b9c:	f9 1f       	adc	r31, r25
    7b9e:	80 81       	ld	r24, Z
    7ba0:	8c 93       	st	X, r24
    7ba2:	8d 89       	ldd	r24, Y+21	; 0x15
    7ba4:	9e 89       	ldd	r25, Y+22	; 0x16
    7ba6:	01 96       	adiw	r24, 0x01	; 1
    7ba8:	8d 8b       	std	Y+21, r24	; 0x15
    7baa:	9e 8b       	std	Y+22, r25	; 0x16
    7bac:	29 89       	ldd	r18, Y+17	; 0x11
    7bae:	3a 89       	ldd	r19, Y+18	; 0x12
    7bb0:	82 17       	cp	r24, r18
    7bb2:	93 07       	cpc	r25, r19
    7bb4:	99 f4       	brne	.+38     	; 0x7bdc <updateTxBuffer+0x58>
    7bb6:	e9 85       	ldd	r30, Y+9	; 0x09
    7bb8:	fa 85       	ldd	r31, Y+10	; 0x0a
    7bba:	83 81       	ldd	r24, Z+3	; 0x03
    7bbc:	8c 7f       	andi	r24, 0xFC	; 252
    7bbe:	83 83       	std	Z+3, r24	; 0x03
    7bc0:	ef 8d       	ldd	r30, Y+31	; 0x1f
    7bc2:	f8 a1       	ldd	r31, Y+32	; 0x20
    7bc4:	30 97       	sbiw	r30, 0x00	; 0
    7bc6:	19 f0       	breq	.+6      	; 0x7bce <updateTxBuffer+0x4a>
    7bc8:	8d 89       	ldd	r24, Y+21	; 0x15
    7bca:	9e 89       	ldd	r25, Y+22	; 0x16
    7bcc:	19 95       	eicall
    7bce:	1d 86       	std	Y+13, r1	; 0x0d
    7bd0:	1e 86       	std	Y+14, r1	; 0x0e
    7bd2:	1d 8a       	std	Y+21, r1	; 0x15
    7bd4:	1e 8a       	std	Y+22, r1	; 0x16
    7bd6:	19 8a       	std	Y+17, r1	; 0x11
    7bd8:	1a 8a       	std	Y+18, r1	; 0x12
    7bda:	1b 86       	std	Y+11, r1	; 0x0b
    7bdc:	df 91       	pop	r29
    7bde:	cf 91       	pop	r28
    7be0:	08 95       	ret

00007be2 <__vector_25>:
    7be2:	1f 92       	push	r1
    7be4:	0f 92       	push	r0
    7be6:	0f b6       	in	r0, 0x3f	; 63
    7be8:	0f 92       	push	r0
    7bea:	08 b6       	in	r0, 0x38	; 56
    7bec:	0f 92       	push	r0
    7bee:	09 b6       	in	r0, 0x39	; 57
    7bf0:	0f 92       	push	r0
    7bf2:	0b b6       	in	r0, 0x3b	; 59
    7bf4:	0f 92       	push	r0
    7bf6:	11 24       	eor	r1, r1
    7bf8:	2f 93       	push	r18
    7bfa:	3f 93       	push	r19
    7bfc:	4f 93       	push	r20
    7bfe:	5f 93       	push	r21
    7c00:	6f 93       	push	r22
    7c02:	7f 93       	push	r23
    7c04:	8f 93       	push	r24
    7c06:	9f 93       	push	r25
    7c08:	af 93       	push	r26
    7c0a:	bf 93       	push	r27
    7c0c:	ef 93       	push	r30
    7c0e:	ff 93       	push	r31
    7c10:	80 91 c0 24 	lds	r24, 0x24C0
    7c14:	90 91 c1 24 	lds	r25, 0x24C1
    7c18:	00 97       	sbiw	r24, 0x00	; 0
    7c1a:	11 f0       	breq	.+4      	; 0x7c20 <__vector_25+0x3e>
    7c1c:	0e 94 92 3d 	call	0x7b24	; 0x7b24 <updateRxBuffer>
    7c20:	ff 91       	pop	r31
    7c22:	ef 91       	pop	r30
    7c24:	bf 91       	pop	r27
    7c26:	af 91       	pop	r26
    7c28:	9f 91       	pop	r25
    7c2a:	8f 91       	pop	r24
    7c2c:	7f 91       	pop	r23
    7c2e:	6f 91       	pop	r22
    7c30:	5f 91       	pop	r21
    7c32:	4f 91       	pop	r20
    7c34:	3f 91       	pop	r19
    7c36:	2f 91       	pop	r18
    7c38:	0f 90       	pop	r0
    7c3a:	0b be       	out	0x3b, r0	; 59
    7c3c:	0f 90       	pop	r0
    7c3e:	09 be       	out	0x39, r0	; 57
    7c40:	0f 90       	pop	r0
    7c42:	08 be       	out	0x38, r0	; 56
    7c44:	0f 90       	pop	r0
    7c46:	0f be       	out	0x3f, r0	; 63
    7c48:	0f 90       	pop	r0
    7c4a:	1f 90       	pop	r1
    7c4c:	18 95       	reti

00007c4e <__vector_26>:
    7c4e:	1f 92       	push	r1
    7c50:	0f 92       	push	r0
    7c52:	0f b6       	in	r0, 0x3f	; 63
    7c54:	0f 92       	push	r0
    7c56:	08 b6       	in	r0, 0x38	; 56
    7c58:	0f 92       	push	r0
    7c5a:	09 b6       	in	r0, 0x39	; 57
    7c5c:	0f 92       	push	r0
    7c5e:	0b b6       	in	r0, 0x3b	; 59
    7c60:	0f 92       	push	r0
    7c62:	11 24       	eor	r1, r1
    7c64:	2f 93       	push	r18
    7c66:	3f 93       	push	r19
    7c68:	4f 93       	push	r20
    7c6a:	5f 93       	push	r21
    7c6c:	6f 93       	push	r22
    7c6e:	7f 93       	push	r23
    7c70:	8f 93       	push	r24
    7c72:	9f 93       	push	r25
    7c74:	af 93       	push	r26
    7c76:	bf 93       	push	r27
    7c78:	ef 93       	push	r30
    7c7a:	ff 93       	push	r31
    7c7c:	80 91 c0 24 	lds	r24, 0x24C0
    7c80:	90 91 c1 24 	lds	r25, 0x24C1
    7c84:	00 97       	sbiw	r24, 0x00	; 0
    7c86:	11 f0       	breq	.+4      	; 0x7c8c <__vector_26+0x3e>
    7c88:	0e 94 c2 3d 	call	0x7b84	; 0x7b84 <updateTxBuffer>
    7c8c:	ff 91       	pop	r31
    7c8e:	ef 91       	pop	r30
    7c90:	bf 91       	pop	r27
    7c92:	af 91       	pop	r26
    7c94:	9f 91       	pop	r25
    7c96:	8f 91       	pop	r24
    7c98:	7f 91       	pop	r23
    7c9a:	6f 91       	pop	r22
    7c9c:	5f 91       	pop	r21
    7c9e:	4f 91       	pop	r20
    7ca0:	3f 91       	pop	r19
    7ca2:	2f 91       	pop	r18
    7ca4:	0f 90       	pop	r0
    7ca6:	0b be       	out	0x3b, r0	; 59
    7ca8:	0f 90       	pop	r0
    7caa:	09 be       	out	0x39, r0	; 57
    7cac:	0f 90       	pop	r0
    7cae:	08 be       	out	0x38, r0	; 56
    7cb0:	0f 90       	pop	r0
    7cb2:	0f be       	out	0x3f, r0	; 63
    7cb4:	0f 90       	pop	r0
    7cb6:	1f 90       	pop	r1
    7cb8:	18 95       	reti

00007cba <__vector_28>:
    7cba:	1f 92       	push	r1
    7cbc:	0f 92       	push	r0
    7cbe:	0f b6       	in	r0, 0x3f	; 63
    7cc0:	0f 92       	push	r0
    7cc2:	08 b6       	in	r0, 0x38	; 56
    7cc4:	0f 92       	push	r0
    7cc6:	09 b6       	in	r0, 0x39	; 57
    7cc8:	0f 92       	push	r0
    7cca:	0b b6       	in	r0, 0x3b	; 59
    7ccc:	0f 92       	push	r0
    7cce:	11 24       	eor	r1, r1
    7cd0:	2f 93       	push	r18
    7cd2:	3f 93       	push	r19
    7cd4:	4f 93       	push	r20
    7cd6:	5f 93       	push	r21
    7cd8:	6f 93       	push	r22
    7cda:	7f 93       	push	r23
    7cdc:	8f 93       	push	r24
    7cde:	9f 93       	push	r25
    7ce0:	af 93       	push	r26
    7ce2:	bf 93       	push	r27
    7ce4:	ef 93       	push	r30
    7ce6:	ff 93       	push	r31
    7ce8:	80 91 c2 24 	lds	r24, 0x24C2
    7cec:	90 91 c3 24 	lds	r25, 0x24C3
    7cf0:	00 97       	sbiw	r24, 0x00	; 0
    7cf2:	11 f0       	breq	.+4      	; 0x7cf8 <__vector_28+0x3e>
    7cf4:	0e 94 92 3d 	call	0x7b24	; 0x7b24 <updateRxBuffer>
    7cf8:	ff 91       	pop	r31
    7cfa:	ef 91       	pop	r30
    7cfc:	bf 91       	pop	r27
    7cfe:	af 91       	pop	r26
    7d00:	9f 91       	pop	r25
    7d02:	8f 91       	pop	r24
    7d04:	7f 91       	pop	r23
    7d06:	6f 91       	pop	r22
    7d08:	5f 91       	pop	r21
    7d0a:	4f 91       	pop	r20
    7d0c:	3f 91       	pop	r19
    7d0e:	2f 91       	pop	r18
    7d10:	0f 90       	pop	r0
    7d12:	0b be       	out	0x3b, r0	; 59
    7d14:	0f 90       	pop	r0
    7d16:	09 be       	out	0x39, r0	; 57
    7d18:	0f 90       	pop	r0
    7d1a:	08 be       	out	0x38, r0	; 56
    7d1c:	0f 90       	pop	r0
    7d1e:	0f be       	out	0x3f, r0	; 63
    7d20:	0f 90       	pop	r0
    7d22:	1f 90       	pop	r1
    7d24:	18 95       	reti

00007d26 <__vector_29>:
    7d26:	1f 92       	push	r1
    7d28:	0f 92       	push	r0
    7d2a:	0f b6       	in	r0, 0x3f	; 63
    7d2c:	0f 92       	push	r0
    7d2e:	08 b6       	in	r0, 0x38	; 56
    7d30:	0f 92       	push	r0
    7d32:	09 b6       	in	r0, 0x39	; 57
    7d34:	0f 92       	push	r0
    7d36:	0b b6       	in	r0, 0x3b	; 59
    7d38:	0f 92       	push	r0
    7d3a:	11 24       	eor	r1, r1
    7d3c:	2f 93       	push	r18
    7d3e:	3f 93       	push	r19
    7d40:	4f 93       	push	r20
    7d42:	5f 93       	push	r21
    7d44:	6f 93       	push	r22
    7d46:	7f 93       	push	r23
    7d48:	8f 93       	push	r24
    7d4a:	9f 93       	push	r25
    7d4c:	af 93       	push	r26
    7d4e:	bf 93       	push	r27
    7d50:	ef 93       	push	r30
    7d52:	ff 93       	push	r31
    7d54:	80 91 c2 24 	lds	r24, 0x24C2
    7d58:	90 91 c3 24 	lds	r25, 0x24C3
    7d5c:	00 97       	sbiw	r24, 0x00	; 0
    7d5e:	11 f0       	breq	.+4      	; 0x7d64 <__vector_29+0x3e>
    7d60:	0e 94 c2 3d 	call	0x7b84	; 0x7b84 <updateTxBuffer>
    7d64:	ff 91       	pop	r31
    7d66:	ef 91       	pop	r30
    7d68:	bf 91       	pop	r27
    7d6a:	af 91       	pop	r26
    7d6c:	9f 91       	pop	r25
    7d6e:	8f 91       	pop	r24
    7d70:	7f 91       	pop	r23
    7d72:	6f 91       	pop	r22
    7d74:	5f 91       	pop	r21
    7d76:	4f 91       	pop	r20
    7d78:	3f 91       	pop	r19
    7d7a:	2f 91       	pop	r18
    7d7c:	0f 90       	pop	r0
    7d7e:	0b be       	out	0x3b, r0	; 59
    7d80:	0f 90       	pop	r0
    7d82:	09 be       	out	0x39, r0	; 57
    7d84:	0f 90       	pop	r0
    7d86:	08 be       	out	0x38, r0	; 56
    7d88:	0f 90       	pop	r0
    7d8a:	0f be       	out	0x3f, r0	; 63
    7d8c:	0f 90       	pop	r0
    7d8e:	1f 90       	pop	r1
    7d90:	18 95       	reti

00007d92 <__vector_88>:
    7d92:	1f 92       	push	r1
    7d94:	0f 92       	push	r0
    7d96:	0f b6       	in	r0, 0x3f	; 63
    7d98:	0f 92       	push	r0
    7d9a:	08 b6       	in	r0, 0x38	; 56
    7d9c:	0f 92       	push	r0
    7d9e:	09 b6       	in	r0, 0x39	; 57
    7da0:	0f 92       	push	r0
    7da2:	0b b6       	in	r0, 0x3b	; 59
    7da4:	0f 92       	push	r0
    7da6:	11 24       	eor	r1, r1
    7da8:	2f 93       	push	r18
    7daa:	3f 93       	push	r19
    7dac:	4f 93       	push	r20
    7dae:	5f 93       	push	r21
    7db0:	6f 93       	push	r22
    7db2:	7f 93       	push	r23
    7db4:	8f 93       	push	r24
    7db6:	9f 93       	push	r25
    7db8:	af 93       	push	r26
    7dba:	bf 93       	push	r27
    7dbc:	ef 93       	push	r30
    7dbe:	ff 93       	push	r31
    7dc0:	80 91 c4 24 	lds	r24, 0x24C4
    7dc4:	90 91 c5 24 	lds	r25, 0x24C5
    7dc8:	00 97       	sbiw	r24, 0x00	; 0
    7dca:	11 f0       	breq	.+4      	; 0x7dd0 <__vector_88+0x3e>
    7dcc:	0e 94 92 3d 	call	0x7b24	; 0x7b24 <updateRxBuffer>
    7dd0:	ff 91       	pop	r31
    7dd2:	ef 91       	pop	r30
    7dd4:	bf 91       	pop	r27
    7dd6:	af 91       	pop	r26
    7dd8:	9f 91       	pop	r25
    7dda:	8f 91       	pop	r24
    7ddc:	7f 91       	pop	r23
    7dde:	6f 91       	pop	r22
    7de0:	5f 91       	pop	r21
    7de2:	4f 91       	pop	r20
    7de4:	3f 91       	pop	r19
    7de6:	2f 91       	pop	r18
    7de8:	0f 90       	pop	r0
    7dea:	0b be       	out	0x3b, r0	; 59
    7dec:	0f 90       	pop	r0
    7dee:	09 be       	out	0x39, r0	; 57
    7df0:	0f 90       	pop	r0
    7df2:	08 be       	out	0x38, r0	; 56
    7df4:	0f 90       	pop	r0
    7df6:	0f be       	out	0x3f, r0	; 63
    7df8:	0f 90       	pop	r0
    7dfa:	1f 90       	pop	r1
    7dfc:	18 95       	reti

00007dfe <__vector_89>:
    7dfe:	1f 92       	push	r1
    7e00:	0f 92       	push	r0
    7e02:	0f b6       	in	r0, 0x3f	; 63
    7e04:	0f 92       	push	r0
    7e06:	08 b6       	in	r0, 0x38	; 56
    7e08:	0f 92       	push	r0
    7e0a:	09 b6       	in	r0, 0x39	; 57
    7e0c:	0f 92       	push	r0
    7e0e:	0b b6       	in	r0, 0x3b	; 59
    7e10:	0f 92       	push	r0
    7e12:	11 24       	eor	r1, r1
    7e14:	2f 93       	push	r18
    7e16:	3f 93       	push	r19
    7e18:	4f 93       	push	r20
    7e1a:	5f 93       	push	r21
    7e1c:	6f 93       	push	r22
    7e1e:	7f 93       	push	r23
    7e20:	8f 93       	push	r24
    7e22:	9f 93       	push	r25
    7e24:	af 93       	push	r26
    7e26:	bf 93       	push	r27
    7e28:	ef 93       	push	r30
    7e2a:	ff 93       	push	r31
    7e2c:	80 91 c4 24 	lds	r24, 0x24C4
    7e30:	90 91 c5 24 	lds	r25, 0x24C5
    7e34:	00 97       	sbiw	r24, 0x00	; 0
    7e36:	11 f0       	breq	.+4      	; 0x7e3c <__vector_89+0x3e>
    7e38:	0e 94 c2 3d 	call	0x7b84	; 0x7b84 <updateTxBuffer>
    7e3c:	ff 91       	pop	r31
    7e3e:	ef 91       	pop	r30
    7e40:	bf 91       	pop	r27
    7e42:	af 91       	pop	r26
    7e44:	9f 91       	pop	r25
    7e46:	8f 91       	pop	r24
    7e48:	7f 91       	pop	r23
    7e4a:	6f 91       	pop	r22
    7e4c:	5f 91       	pop	r21
    7e4e:	4f 91       	pop	r20
    7e50:	3f 91       	pop	r19
    7e52:	2f 91       	pop	r18
    7e54:	0f 90       	pop	r0
    7e56:	0b be       	out	0x3b, r0	; 59
    7e58:	0f 90       	pop	r0
    7e5a:	09 be       	out	0x39, r0	; 57
    7e5c:	0f 90       	pop	r0
    7e5e:	08 be       	out	0x38, r0	; 56
    7e60:	0f 90       	pop	r0
    7e62:	0f be       	out	0x3f, r0	; 63
    7e64:	0f 90       	pop	r0
    7e66:	1f 90       	pop	r1
    7e68:	18 95       	reti

00007e6a <__vector_91>:
    7e6a:	1f 92       	push	r1
    7e6c:	0f 92       	push	r0
    7e6e:	0f b6       	in	r0, 0x3f	; 63
    7e70:	0f 92       	push	r0
    7e72:	08 b6       	in	r0, 0x38	; 56
    7e74:	0f 92       	push	r0
    7e76:	09 b6       	in	r0, 0x39	; 57
    7e78:	0f 92       	push	r0
    7e7a:	0b b6       	in	r0, 0x3b	; 59
    7e7c:	0f 92       	push	r0
    7e7e:	11 24       	eor	r1, r1
    7e80:	2f 93       	push	r18
    7e82:	3f 93       	push	r19
    7e84:	4f 93       	push	r20
    7e86:	5f 93       	push	r21
    7e88:	6f 93       	push	r22
    7e8a:	7f 93       	push	r23
    7e8c:	8f 93       	push	r24
    7e8e:	9f 93       	push	r25
    7e90:	af 93       	push	r26
    7e92:	bf 93       	push	r27
    7e94:	ef 93       	push	r30
    7e96:	ff 93       	push	r31
    7e98:	80 91 c6 24 	lds	r24, 0x24C6
    7e9c:	90 91 c7 24 	lds	r25, 0x24C7
    7ea0:	00 97       	sbiw	r24, 0x00	; 0
    7ea2:	11 f0       	breq	.+4      	; 0x7ea8 <__vector_91+0x3e>
    7ea4:	0e 94 92 3d 	call	0x7b24	; 0x7b24 <updateRxBuffer>
    7ea8:	ff 91       	pop	r31
    7eaa:	ef 91       	pop	r30
    7eac:	bf 91       	pop	r27
    7eae:	af 91       	pop	r26
    7eb0:	9f 91       	pop	r25
    7eb2:	8f 91       	pop	r24
    7eb4:	7f 91       	pop	r23
    7eb6:	6f 91       	pop	r22
    7eb8:	5f 91       	pop	r21
    7eba:	4f 91       	pop	r20
    7ebc:	3f 91       	pop	r19
    7ebe:	2f 91       	pop	r18
    7ec0:	0f 90       	pop	r0
    7ec2:	0b be       	out	0x3b, r0	; 59
    7ec4:	0f 90       	pop	r0
    7ec6:	09 be       	out	0x39, r0	; 57
    7ec8:	0f 90       	pop	r0
    7eca:	08 be       	out	0x38, r0	; 56
    7ecc:	0f 90       	pop	r0
    7ece:	0f be       	out	0x3f, r0	; 63
    7ed0:	0f 90       	pop	r0
    7ed2:	1f 90       	pop	r1
    7ed4:	18 95       	reti

00007ed6 <__vector_92>:
    7ed6:	1f 92       	push	r1
    7ed8:	0f 92       	push	r0
    7eda:	0f b6       	in	r0, 0x3f	; 63
    7edc:	0f 92       	push	r0
    7ede:	08 b6       	in	r0, 0x38	; 56
    7ee0:	0f 92       	push	r0
    7ee2:	09 b6       	in	r0, 0x39	; 57
    7ee4:	0f 92       	push	r0
    7ee6:	0b b6       	in	r0, 0x3b	; 59
    7ee8:	0f 92       	push	r0
    7eea:	11 24       	eor	r1, r1
    7eec:	2f 93       	push	r18
    7eee:	3f 93       	push	r19
    7ef0:	4f 93       	push	r20
    7ef2:	5f 93       	push	r21
    7ef4:	6f 93       	push	r22
    7ef6:	7f 93       	push	r23
    7ef8:	8f 93       	push	r24
    7efa:	9f 93       	push	r25
    7efc:	af 93       	push	r26
    7efe:	bf 93       	push	r27
    7f00:	ef 93       	push	r30
    7f02:	ff 93       	push	r31
    7f04:	80 91 c6 24 	lds	r24, 0x24C6
    7f08:	90 91 c7 24 	lds	r25, 0x24C7
    7f0c:	00 97       	sbiw	r24, 0x00	; 0
    7f0e:	11 f0       	breq	.+4      	; 0x7f14 <__vector_92+0x3e>
    7f10:	0e 94 c2 3d 	call	0x7b84	; 0x7b84 <updateTxBuffer>
    7f14:	ff 91       	pop	r31
    7f16:	ef 91       	pop	r30
    7f18:	bf 91       	pop	r27
    7f1a:	af 91       	pop	r26
    7f1c:	9f 91       	pop	r25
    7f1e:	8f 91       	pop	r24
    7f20:	7f 91       	pop	r23
    7f22:	6f 91       	pop	r22
    7f24:	5f 91       	pop	r21
    7f26:	4f 91       	pop	r20
    7f28:	3f 91       	pop	r19
    7f2a:	2f 91       	pop	r18
    7f2c:	0f 90       	pop	r0
    7f2e:	0b be       	out	0x3b, r0	; 59
    7f30:	0f 90       	pop	r0
    7f32:	09 be       	out	0x39, r0	; 57
    7f34:	0f 90       	pop	r0
    7f36:	08 be       	out	0x38, r0	; 56
    7f38:	0f 90       	pop	r0
    7f3a:	0f be       	out	0x3f, r0	; 63
    7f3c:	0f 90       	pop	r0
    7f3e:	1f 90       	pop	r1
    7f40:	18 95       	reti

00007f42 <__vector_58>:
    7f42:	1f 92       	push	r1
    7f44:	0f 92       	push	r0
    7f46:	0f b6       	in	r0, 0x3f	; 63
    7f48:	0f 92       	push	r0
    7f4a:	08 b6       	in	r0, 0x38	; 56
    7f4c:	0f 92       	push	r0
    7f4e:	09 b6       	in	r0, 0x39	; 57
    7f50:	0f 92       	push	r0
    7f52:	0b b6       	in	r0, 0x3b	; 59
    7f54:	0f 92       	push	r0
    7f56:	11 24       	eor	r1, r1
    7f58:	2f 93       	push	r18
    7f5a:	3f 93       	push	r19
    7f5c:	4f 93       	push	r20
    7f5e:	5f 93       	push	r21
    7f60:	6f 93       	push	r22
    7f62:	7f 93       	push	r23
    7f64:	8f 93       	push	r24
    7f66:	9f 93       	push	r25
    7f68:	af 93       	push	r26
    7f6a:	bf 93       	push	r27
    7f6c:	ef 93       	push	r30
    7f6e:	ff 93       	push	r31
    7f70:	80 91 c8 24 	lds	r24, 0x24C8
    7f74:	90 91 c9 24 	lds	r25, 0x24C9
    7f78:	00 97       	sbiw	r24, 0x00	; 0
    7f7a:	11 f0       	breq	.+4      	; 0x7f80 <__vector_58+0x3e>
    7f7c:	0e 94 92 3d 	call	0x7b24	; 0x7b24 <updateRxBuffer>
    7f80:	ff 91       	pop	r31
    7f82:	ef 91       	pop	r30
    7f84:	bf 91       	pop	r27
    7f86:	af 91       	pop	r26
    7f88:	9f 91       	pop	r25
    7f8a:	8f 91       	pop	r24
    7f8c:	7f 91       	pop	r23
    7f8e:	6f 91       	pop	r22
    7f90:	5f 91       	pop	r21
    7f92:	4f 91       	pop	r20
    7f94:	3f 91       	pop	r19
    7f96:	2f 91       	pop	r18
    7f98:	0f 90       	pop	r0
    7f9a:	0b be       	out	0x3b, r0	; 59
    7f9c:	0f 90       	pop	r0
    7f9e:	09 be       	out	0x39, r0	; 57
    7fa0:	0f 90       	pop	r0
    7fa2:	08 be       	out	0x38, r0	; 56
    7fa4:	0f 90       	pop	r0
    7fa6:	0f be       	out	0x3f, r0	; 63
    7fa8:	0f 90       	pop	r0
    7faa:	1f 90       	pop	r1
    7fac:	18 95       	reti

00007fae <__vector_59>:
    7fae:	1f 92       	push	r1
    7fb0:	0f 92       	push	r0
    7fb2:	0f b6       	in	r0, 0x3f	; 63
    7fb4:	0f 92       	push	r0
    7fb6:	08 b6       	in	r0, 0x38	; 56
    7fb8:	0f 92       	push	r0
    7fba:	09 b6       	in	r0, 0x39	; 57
    7fbc:	0f 92       	push	r0
    7fbe:	0b b6       	in	r0, 0x3b	; 59
    7fc0:	0f 92       	push	r0
    7fc2:	11 24       	eor	r1, r1
    7fc4:	2f 93       	push	r18
    7fc6:	3f 93       	push	r19
    7fc8:	4f 93       	push	r20
    7fca:	5f 93       	push	r21
    7fcc:	6f 93       	push	r22
    7fce:	7f 93       	push	r23
    7fd0:	8f 93       	push	r24
    7fd2:	9f 93       	push	r25
    7fd4:	af 93       	push	r26
    7fd6:	bf 93       	push	r27
    7fd8:	ef 93       	push	r30
    7fda:	ff 93       	push	r31
    7fdc:	80 91 c8 24 	lds	r24, 0x24C8
    7fe0:	90 91 c9 24 	lds	r25, 0x24C9
    7fe4:	00 97       	sbiw	r24, 0x00	; 0
    7fe6:	11 f0       	breq	.+4      	; 0x7fec <__vector_59+0x3e>
    7fe8:	0e 94 c2 3d 	call	0x7b84	; 0x7b84 <updateTxBuffer>
    7fec:	ff 91       	pop	r31
    7fee:	ef 91       	pop	r30
    7ff0:	bf 91       	pop	r27
    7ff2:	af 91       	pop	r26
    7ff4:	9f 91       	pop	r25
    7ff6:	8f 91       	pop	r24
    7ff8:	7f 91       	pop	r23
    7ffa:	6f 91       	pop	r22
    7ffc:	5f 91       	pop	r21
    7ffe:	4f 91       	pop	r20
    8000:	3f 91       	pop	r19
    8002:	2f 91       	pop	r18
    8004:	0f 90       	pop	r0
    8006:	0b be       	out	0x3b, r0	; 59
    8008:	0f 90       	pop	r0
    800a:	09 be       	out	0x39, r0	; 57
    800c:	0f 90       	pop	r0
    800e:	08 be       	out	0x38, r0	; 56
    8010:	0f 90       	pop	r0
    8012:	0f be       	out	0x3f, r0	; 63
    8014:	0f 90       	pop	r0
    8016:	1f 90       	pop	r1
    8018:	18 95       	reti

0000801a <__vector_61>:
    801a:	1f 92       	push	r1
    801c:	0f 92       	push	r0
    801e:	0f b6       	in	r0, 0x3f	; 63
    8020:	0f 92       	push	r0
    8022:	08 b6       	in	r0, 0x38	; 56
    8024:	0f 92       	push	r0
    8026:	09 b6       	in	r0, 0x39	; 57
    8028:	0f 92       	push	r0
    802a:	0b b6       	in	r0, 0x3b	; 59
    802c:	0f 92       	push	r0
    802e:	11 24       	eor	r1, r1
    8030:	2f 93       	push	r18
    8032:	3f 93       	push	r19
    8034:	4f 93       	push	r20
    8036:	5f 93       	push	r21
    8038:	6f 93       	push	r22
    803a:	7f 93       	push	r23
    803c:	8f 93       	push	r24
    803e:	9f 93       	push	r25
    8040:	af 93       	push	r26
    8042:	bf 93       	push	r27
    8044:	ef 93       	push	r30
    8046:	ff 93       	push	r31
    8048:	80 91 ca 24 	lds	r24, 0x24CA
    804c:	90 91 cb 24 	lds	r25, 0x24CB
    8050:	00 97       	sbiw	r24, 0x00	; 0
    8052:	11 f0       	breq	.+4      	; 0x8058 <__vector_61+0x3e>
    8054:	0e 94 92 3d 	call	0x7b24	; 0x7b24 <updateRxBuffer>
    8058:	ff 91       	pop	r31
    805a:	ef 91       	pop	r30
    805c:	bf 91       	pop	r27
    805e:	af 91       	pop	r26
    8060:	9f 91       	pop	r25
    8062:	8f 91       	pop	r24
    8064:	7f 91       	pop	r23
    8066:	6f 91       	pop	r22
    8068:	5f 91       	pop	r21
    806a:	4f 91       	pop	r20
    806c:	3f 91       	pop	r19
    806e:	2f 91       	pop	r18
    8070:	0f 90       	pop	r0
    8072:	0b be       	out	0x3b, r0	; 59
    8074:	0f 90       	pop	r0
    8076:	09 be       	out	0x39, r0	; 57
    8078:	0f 90       	pop	r0
    807a:	08 be       	out	0x38, r0	; 56
    807c:	0f 90       	pop	r0
    807e:	0f be       	out	0x3f, r0	; 63
    8080:	0f 90       	pop	r0
    8082:	1f 90       	pop	r1
    8084:	18 95       	reti

00008086 <__vector_62>:
    8086:	1f 92       	push	r1
    8088:	0f 92       	push	r0
    808a:	0f b6       	in	r0, 0x3f	; 63
    808c:	0f 92       	push	r0
    808e:	08 b6       	in	r0, 0x38	; 56
    8090:	0f 92       	push	r0
    8092:	09 b6       	in	r0, 0x39	; 57
    8094:	0f 92       	push	r0
    8096:	0b b6       	in	r0, 0x3b	; 59
    8098:	0f 92       	push	r0
    809a:	11 24       	eor	r1, r1
    809c:	2f 93       	push	r18
    809e:	3f 93       	push	r19
    80a0:	4f 93       	push	r20
    80a2:	5f 93       	push	r21
    80a4:	6f 93       	push	r22
    80a6:	7f 93       	push	r23
    80a8:	8f 93       	push	r24
    80aa:	9f 93       	push	r25
    80ac:	af 93       	push	r26
    80ae:	bf 93       	push	r27
    80b0:	ef 93       	push	r30
    80b2:	ff 93       	push	r31
    80b4:	80 91 ca 24 	lds	r24, 0x24CA
    80b8:	90 91 cb 24 	lds	r25, 0x24CB
    80bc:	00 97       	sbiw	r24, 0x00	; 0
    80be:	11 f0       	breq	.+4      	; 0x80c4 <__vector_62+0x3e>
    80c0:	0e 94 c2 3d 	call	0x7b84	; 0x7b84 <updateTxBuffer>
    80c4:	ff 91       	pop	r31
    80c6:	ef 91       	pop	r30
    80c8:	bf 91       	pop	r27
    80ca:	af 91       	pop	r26
    80cc:	9f 91       	pop	r25
    80ce:	8f 91       	pop	r24
    80d0:	7f 91       	pop	r23
    80d2:	6f 91       	pop	r22
    80d4:	5f 91       	pop	r21
    80d6:	4f 91       	pop	r20
    80d8:	3f 91       	pop	r19
    80da:	2f 91       	pop	r18
    80dc:	0f 90       	pop	r0
    80de:	0b be       	out	0x3b, r0	; 59
    80e0:	0f 90       	pop	r0
    80e2:	09 be       	out	0x39, r0	; 57
    80e4:	0f 90       	pop	r0
    80e6:	08 be       	out	0x38, r0	; 56
    80e8:	0f 90       	pop	r0
    80ea:	0f be       	out	0x3f, r0	; 63
    80ec:	0f 90       	pop	r0
    80ee:	1f 90       	pop	r1
    80f0:	18 95       	reti

000080f2 <__vector_119>:
    80f2:	1f 92       	push	r1
    80f4:	0f 92       	push	r0
    80f6:	0f b6       	in	r0, 0x3f	; 63
    80f8:	0f 92       	push	r0
    80fa:	08 b6       	in	r0, 0x38	; 56
    80fc:	0f 92       	push	r0
    80fe:	09 b6       	in	r0, 0x39	; 57
    8100:	0f 92       	push	r0
    8102:	0b b6       	in	r0, 0x3b	; 59
    8104:	0f 92       	push	r0
    8106:	11 24       	eor	r1, r1
    8108:	2f 93       	push	r18
    810a:	3f 93       	push	r19
    810c:	4f 93       	push	r20
    810e:	5f 93       	push	r21
    8110:	6f 93       	push	r22
    8112:	7f 93       	push	r23
    8114:	8f 93       	push	r24
    8116:	9f 93       	push	r25
    8118:	af 93       	push	r26
    811a:	bf 93       	push	r27
    811c:	ef 93       	push	r30
    811e:	ff 93       	push	r31
    8120:	80 91 cc 24 	lds	r24, 0x24CC
    8124:	90 91 cd 24 	lds	r25, 0x24CD
    8128:	00 97       	sbiw	r24, 0x00	; 0
    812a:	11 f0       	breq	.+4      	; 0x8130 <__vector_119+0x3e>
    812c:	0e 94 92 3d 	call	0x7b24	; 0x7b24 <updateRxBuffer>
    8130:	ff 91       	pop	r31
    8132:	ef 91       	pop	r30
    8134:	bf 91       	pop	r27
    8136:	af 91       	pop	r26
    8138:	9f 91       	pop	r25
    813a:	8f 91       	pop	r24
    813c:	7f 91       	pop	r23
    813e:	6f 91       	pop	r22
    8140:	5f 91       	pop	r21
    8142:	4f 91       	pop	r20
    8144:	3f 91       	pop	r19
    8146:	2f 91       	pop	r18
    8148:	0f 90       	pop	r0
    814a:	0b be       	out	0x3b, r0	; 59
    814c:	0f 90       	pop	r0
    814e:	09 be       	out	0x39, r0	; 57
    8150:	0f 90       	pop	r0
    8152:	08 be       	out	0x38, r0	; 56
    8154:	0f 90       	pop	r0
    8156:	0f be       	out	0x3f, r0	; 63
    8158:	0f 90       	pop	r0
    815a:	1f 90       	pop	r1
    815c:	18 95       	reti

0000815e <__vector_120>:
    815e:	1f 92       	push	r1
    8160:	0f 92       	push	r0
    8162:	0f b6       	in	r0, 0x3f	; 63
    8164:	0f 92       	push	r0
    8166:	08 b6       	in	r0, 0x38	; 56
    8168:	0f 92       	push	r0
    816a:	09 b6       	in	r0, 0x39	; 57
    816c:	0f 92       	push	r0
    816e:	0b b6       	in	r0, 0x3b	; 59
    8170:	0f 92       	push	r0
    8172:	11 24       	eor	r1, r1
    8174:	2f 93       	push	r18
    8176:	3f 93       	push	r19
    8178:	4f 93       	push	r20
    817a:	5f 93       	push	r21
    817c:	6f 93       	push	r22
    817e:	7f 93       	push	r23
    8180:	8f 93       	push	r24
    8182:	9f 93       	push	r25
    8184:	af 93       	push	r26
    8186:	bf 93       	push	r27
    8188:	ef 93       	push	r30
    818a:	ff 93       	push	r31
    818c:	80 91 cc 24 	lds	r24, 0x24CC
    8190:	90 91 cd 24 	lds	r25, 0x24CD
    8194:	00 97       	sbiw	r24, 0x00	; 0
    8196:	11 f0       	breq	.+4      	; 0x819c <__vector_120+0x3e>
    8198:	0e 94 c2 3d 	call	0x7b84	; 0x7b84 <updateTxBuffer>
    819c:	ff 91       	pop	r31
    819e:	ef 91       	pop	r30
    81a0:	bf 91       	pop	r27
    81a2:	af 91       	pop	r26
    81a4:	9f 91       	pop	r25
    81a6:	8f 91       	pop	r24
    81a8:	7f 91       	pop	r23
    81aa:	6f 91       	pop	r22
    81ac:	5f 91       	pop	r21
    81ae:	4f 91       	pop	r20
    81b0:	3f 91       	pop	r19
    81b2:	2f 91       	pop	r18
    81b4:	0f 90       	pop	r0
    81b6:	0b be       	out	0x3b, r0	; 59
    81b8:	0f 90       	pop	r0
    81ba:	09 be       	out	0x39, r0	; 57
    81bc:	0f 90       	pop	r0
    81be:	08 be       	out	0x38, r0	; 56
    81c0:	0f 90       	pop	r0
    81c2:	0f be       	out	0x3f, r0	; 63
    81c4:	0f 90       	pop	r0
    81c6:	1f 90       	pop	r1
    81c8:	18 95       	reti

000081ca <__vector_122>:
    81ca:	1f 92       	push	r1
    81cc:	0f 92       	push	r0
    81ce:	0f b6       	in	r0, 0x3f	; 63
    81d0:	0f 92       	push	r0
    81d2:	08 b6       	in	r0, 0x38	; 56
    81d4:	0f 92       	push	r0
    81d6:	09 b6       	in	r0, 0x39	; 57
    81d8:	0f 92       	push	r0
    81da:	0b b6       	in	r0, 0x3b	; 59
    81dc:	0f 92       	push	r0
    81de:	11 24       	eor	r1, r1
    81e0:	2f 93       	push	r18
    81e2:	3f 93       	push	r19
    81e4:	4f 93       	push	r20
    81e6:	5f 93       	push	r21
    81e8:	6f 93       	push	r22
    81ea:	7f 93       	push	r23
    81ec:	8f 93       	push	r24
    81ee:	9f 93       	push	r25
    81f0:	af 93       	push	r26
    81f2:	bf 93       	push	r27
    81f4:	ef 93       	push	r30
    81f6:	ff 93       	push	r31
    81f8:	80 91 ce 24 	lds	r24, 0x24CE
    81fc:	90 91 cf 24 	lds	r25, 0x24CF
    8200:	00 97       	sbiw	r24, 0x00	; 0
    8202:	11 f0       	breq	.+4      	; 0x8208 <__vector_122+0x3e>
    8204:	0e 94 92 3d 	call	0x7b24	; 0x7b24 <updateRxBuffer>
    8208:	ff 91       	pop	r31
    820a:	ef 91       	pop	r30
    820c:	bf 91       	pop	r27
    820e:	af 91       	pop	r26
    8210:	9f 91       	pop	r25
    8212:	8f 91       	pop	r24
    8214:	7f 91       	pop	r23
    8216:	6f 91       	pop	r22
    8218:	5f 91       	pop	r21
    821a:	4f 91       	pop	r20
    821c:	3f 91       	pop	r19
    821e:	2f 91       	pop	r18
    8220:	0f 90       	pop	r0
    8222:	0b be       	out	0x3b, r0	; 59
    8224:	0f 90       	pop	r0
    8226:	09 be       	out	0x39, r0	; 57
    8228:	0f 90       	pop	r0
    822a:	08 be       	out	0x38, r0	; 56
    822c:	0f 90       	pop	r0
    822e:	0f be       	out	0x3f, r0	; 63
    8230:	0f 90       	pop	r0
    8232:	1f 90       	pop	r1
    8234:	18 95       	reti

00008236 <__vector_123>:
    8236:	1f 92       	push	r1
    8238:	0f 92       	push	r0
    823a:	0f b6       	in	r0, 0x3f	; 63
    823c:	0f 92       	push	r0
    823e:	08 b6       	in	r0, 0x38	; 56
    8240:	0f 92       	push	r0
    8242:	09 b6       	in	r0, 0x39	; 57
    8244:	0f 92       	push	r0
    8246:	0b b6       	in	r0, 0x3b	; 59
    8248:	0f 92       	push	r0
    824a:	11 24       	eor	r1, r1
    824c:	2f 93       	push	r18
    824e:	3f 93       	push	r19
    8250:	4f 93       	push	r20
    8252:	5f 93       	push	r21
    8254:	6f 93       	push	r22
    8256:	7f 93       	push	r23
    8258:	8f 93       	push	r24
    825a:	9f 93       	push	r25
    825c:	af 93       	push	r26
    825e:	bf 93       	push	r27
    8260:	ef 93       	push	r30
    8262:	ff 93       	push	r31
    8264:	80 91 ce 24 	lds	r24, 0x24CE
    8268:	90 91 cf 24 	lds	r25, 0x24CF
    826c:	00 97       	sbiw	r24, 0x00	; 0
    826e:	11 f0       	breq	.+4      	; 0x8274 <__vector_123+0x3e>
    8270:	0e 94 c2 3d 	call	0x7b84	; 0x7b84 <updateTxBuffer>
    8274:	ff 91       	pop	r31
    8276:	ef 91       	pop	r30
    8278:	bf 91       	pop	r27
    827a:	af 91       	pop	r26
    827c:	9f 91       	pop	r25
    827e:	8f 91       	pop	r24
    8280:	7f 91       	pop	r23
    8282:	6f 91       	pop	r22
    8284:	5f 91       	pop	r21
    8286:	4f 91       	pop	r20
    8288:	3f 91       	pop	r19
    828a:	2f 91       	pop	r18
    828c:	0f 90       	pop	r0
    828e:	0b be       	out	0x3b, r0	; 59
    8290:	0f 90       	pop	r0
    8292:	09 be       	out	0x39, r0	; 57
    8294:	0f 90       	pop	r0
    8296:	08 be       	out	0x38, r0	; 56
    8298:	0f 90       	pop	r0
    829a:	0f be       	out	0x3f, r0	; 63
    829c:	0f 90       	pop	r0
    829e:	1f 90       	pop	r1
    82a0:	18 95       	reti

000082a2 <hal_enableUartRxInt>:
    82a2:	cf 93       	push	r28
    82a4:	df 93       	push	r29
    82a6:	00 d0       	rcall	.+0      	; 0x82a8 <hal_enableUartRxInt+0x6>
    82a8:	cd b7       	in	r28, 0x3d	; 61
    82aa:	de b7       	in	r29, 0x3e	; 62
    82ac:	8a 83       	std	Y+2, r24	; 0x02
    82ae:	9b 83       	std	Y+3, r25	; 0x03
    82b0:	8f b7       	in	r24, 0x3f	; 63
    82b2:	89 83       	std	Y+1, r24	; 0x01
    82b4:	f8 94       	cli
    82b6:	ea 81       	ldd	r30, Y+2	; 0x02
    82b8:	fb 81       	ldd	r31, Y+3	; 0x03
    82ba:	80 91 4c 21 	lds	r24, 0x214C
    82be:	90 91 4d 21 	lds	r25, 0x214D
    82c2:	24 81       	ldd	r18, Z+4	; 0x04
    82c4:	35 81       	ldd	r19, Z+5	; 0x05
    82c6:	28 17       	cp	r18, r24
    82c8:	39 07       	cpc	r19, r25
    82ca:	21 f0       	breq	.+8      	; 0x82d4 <hal_enableUartRxInt+0x32>
    82cc:	89 81       	ldd	r24, Y+1	; 0x01
    82ce:	8f bf       	out	0x3f, r24	; 63
    82d0:	8e ef       	ldi	r24, 0xFE	; 254
    82d2:	17 c0       	rjmp	.+46     	; 0x8302 <hal_enableUartRxInt+0x60>
    82d4:	ea 81       	ldd	r30, Y+2	; 0x02
    82d6:	fb 81       	ldd	r31, Y+3	; 0x03
    82d8:	01 90       	ld	r0, Z+
    82da:	f0 81       	ld	r31, Z
    82dc:	e0 2d       	mov	r30, r0
    82de:	a1 85       	ldd	r26, Z+9	; 0x09
    82e0:	b2 85       	ldd	r27, Z+10	; 0x0a
    82e2:	13 96       	adiw	r26, 0x03	; 3
    82e4:	8c 91       	ld	r24, X
    82e6:	13 97       	sbiw	r26, 0x03	; 3
    82e8:	8f 7c       	andi	r24, 0xCF	; 207
    82ea:	13 96       	adiw	r26, 0x03	; 3
    82ec:	8c 93       	st	X, r24
    82ee:	13 97       	sbiw	r26, 0x03	; 3
    82f0:	01 84       	ldd	r0, Z+9	; 0x09
    82f2:	f2 85       	ldd	r31, Z+10	; 0x0a
    82f4:	e0 2d       	mov	r30, r0
    82f6:	83 81       	ldd	r24, Z+3	; 0x03
    82f8:	80 63       	ori	r24, 0x30	; 48
    82fa:	83 83       	std	Z+3, r24	; 0x03
    82fc:	89 81       	ldd	r24, Y+1	; 0x01
    82fe:	8f bf       	out	0x3f, r24	; 63
    8300:	80 e0       	ldi	r24, 0x00	; 0
    8302:	23 96       	adiw	r28, 0x03	; 3
    8304:	cd bf       	out	0x3d, r28	; 61
    8306:	de bf       	out	0x3e, r29	; 62
    8308:	df 91       	pop	r29
    830a:	cf 91       	pop	r28
    830c:	08 95       	ret

0000830e <hal_disableUartRxInt>:
    830e:	cf 93       	push	r28
    8310:	df 93       	push	r29
    8312:	00 d0       	rcall	.+0      	; 0x8314 <hal_disableUartRxInt+0x6>
    8314:	cd b7       	in	r28, 0x3d	; 61
    8316:	de b7       	in	r29, 0x3e	; 62
    8318:	8a 83       	std	Y+2, r24	; 0x02
    831a:	9b 83       	std	Y+3, r25	; 0x03
    831c:	8f b7       	in	r24, 0x3f	; 63
    831e:	89 83       	std	Y+1, r24	; 0x01
    8320:	f8 94       	cli
    8322:	ea 81       	ldd	r30, Y+2	; 0x02
    8324:	fb 81       	ldd	r31, Y+3	; 0x03
    8326:	80 91 4c 21 	lds	r24, 0x214C
    832a:	90 91 4d 21 	lds	r25, 0x214D
    832e:	24 81       	ldd	r18, Z+4	; 0x04
    8330:	35 81       	ldd	r19, Z+5	; 0x05
    8332:	28 17       	cp	r18, r24
    8334:	39 07       	cpc	r19, r25
    8336:	21 f0       	breq	.+8      	; 0x8340 <hal_disableUartRxInt+0x32>
    8338:	89 81       	ldd	r24, Y+1	; 0x01
    833a:	8f bf       	out	0x3f, r24	; 63
    833c:	8e ef       	ldi	r24, 0xFE	; 254
    833e:	0e c0       	rjmp	.+28     	; 0x835c <hal_disableUartRxInt+0x4e>
    8340:	ea 81       	ldd	r30, Y+2	; 0x02
    8342:	fb 81       	ldd	r31, Y+3	; 0x03
    8344:	01 90       	ld	r0, Z+
    8346:	f0 81       	ld	r31, Z
    8348:	e0 2d       	mov	r30, r0
    834a:	01 84       	ldd	r0, Z+9	; 0x09
    834c:	f2 85       	ldd	r31, Z+10	; 0x0a
    834e:	e0 2d       	mov	r30, r0
    8350:	83 81       	ldd	r24, Z+3	; 0x03
    8352:	8f 7c       	andi	r24, 0xCF	; 207
    8354:	83 83       	std	Z+3, r24	; 0x03
    8356:	89 81       	ldd	r24, Y+1	; 0x01
    8358:	8f bf       	out	0x3f, r24	; 63
    835a:	80 e0       	ldi	r24, 0x00	; 0
    835c:	23 96       	adiw	r28, 0x03	; 3
    835e:	cd bf       	out	0x3d, r28	; 61
    8360:	de bf       	out	0x3e, r29	; 62
    8362:	df 91       	pop	r29
    8364:	cf 91       	pop	r28
    8366:	08 95       	ret

00008368 <hal_uartWriteByte>:
    8368:	cf 93       	push	r28
    836a:	df 93       	push	r29
    836c:	00 d0       	rcall	.+0      	; 0x836e <hal_uartWriteByte+0x6>
    836e:	cd b7       	in	r28, 0x3d	; 61
    8370:	de b7       	in	r29, 0x3e	; 62
    8372:	8a 83       	std	Y+2, r24	; 0x02
    8374:	9b 83       	std	Y+3, r25	; 0x03
    8376:	8f b7       	in	r24, 0x3f	; 63
    8378:	89 83       	std	Y+1, r24	; 0x01
    837a:	f8 94       	cli
    837c:	ea 81       	ldd	r30, Y+2	; 0x02
    837e:	fb 81       	ldd	r31, Y+3	; 0x03
    8380:	80 91 4c 21 	lds	r24, 0x214C
    8384:	90 91 4d 21 	lds	r25, 0x214D
    8388:	24 81       	ldd	r18, Z+4	; 0x04
    838a:	35 81       	ldd	r19, Z+5	; 0x05
    838c:	28 17       	cp	r18, r24
    838e:	39 07       	cpc	r19, r25
    8390:	21 f0       	breq	.+8      	; 0x839a <hal_uartWriteByte+0x32>
    8392:	89 81       	ldd	r24, Y+1	; 0x01
    8394:	8f bf       	out	0x3f, r24	; 63
    8396:	8e ef       	ldi	r24, 0xFE	; 254
    8398:	1a c0       	rjmp	.+52     	; 0x83ce <hal_uartWriteByte+0x66>
    839a:	ea 81       	ldd	r30, Y+2	; 0x02
    839c:	fb 81       	ldd	r31, Y+3	; 0x03
    839e:	01 90       	ld	r0, Z+
    83a0:	f0 81       	ld	r31, Z
    83a2:	e0 2d       	mov	r30, r0
    83a4:	83 85       	ldd	r24, Z+11	; 0x0b
    83a6:	88 23       	and	r24, r24
    83a8:	21 f0       	breq	.+8      	; 0x83b2 <hal_uartWriteByte+0x4a>
    83aa:	89 81       	ldd	r24, Y+1	; 0x01
    83ac:	8f bf       	out	0x3f, r24	; 63
    83ae:	81 ef       	ldi	r24, 0xF1	; 241
    83b0:	0e c0       	rjmp	.+28     	; 0x83ce <hal_uartWriteByte+0x66>
    83b2:	81 e0       	ldi	r24, 0x01	; 1
    83b4:	83 87       	std	Z+11, r24	; 0x0b
    83b6:	89 81       	ldd	r24, Y+1	; 0x01
    83b8:	8f bf       	out	0x3f, r24	; 63
    83ba:	a1 85       	ldd	r26, Z+9	; 0x09
    83bc:	b2 85       	ldd	r27, Z+10	; 0x0a
    83be:	11 96       	adiw	r26, 0x01	; 1
    83c0:	8c 91       	ld	r24, X
    83c2:	11 97       	sbiw	r26, 0x01	; 1
    83c4:	85 ff       	sbrs	r24, 5
    83c6:	fb cf       	rjmp	.-10     	; 0x83be <hal_uartWriteByte+0x56>
    83c8:	6c 93       	st	X, r22
    83ca:	13 86       	std	Z+11, r1	; 0x0b
    83cc:	80 e0       	ldi	r24, 0x00	; 0
    83ce:	23 96       	adiw	r28, 0x03	; 3
    83d0:	cd bf       	out	0x3d, r28	; 61
    83d2:	de bf       	out	0x3e, r29	; 62
    83d4:	df 91       	pop	r29
    83d6:	cf 91       	pop	r28
    83d8:	08 95       	ret

000083da <hal_uartReadBlock>:
    83da:	8f 92       	push	r8
    83dc:	9f 92       	push	r9
    83de:	af 92       	push	r10
    83e0:	bf 92       	push	r11
    83e2:	cf 92       	push	r12
    83e4:	df 92       	push	r13
    83e6:	ef 92       	push	r14
    83e8:	ff 92       	push	r15
    83ea:	0f 93       	push	r16
    83ec:	1f 93       	push	r17
    83ee:	cf 93       	push	r28
    83f0:	df 93       	push	r29
    83f2:	cd b7       	in	r28, 0x3d	; 61
    83f4:	de b7       	in	r29, 0x3e	; 62
    83f6:	61 97       	sbiw	r28, 0x11	; 17
    83f8:	cd bf       	out	0x3d, r28	; 61
    83fa:	de bf       	out	0x3e, r29	; 62
    83fc:	88 8b       	std	Y+16, r24	; 0x10
    83fe:	99 8b       	std	Y+17, r25	; 0x11
    8400:	db 01       	movw	r26, r22
    8402:	8f b7       	in	r24, 0x3f	; 63
    8404:	89 83       	std	Y+1, r24	; 0x01
    8406:	f8 94       	cli
    8408:	e8 89       	ldd	r30, Y+16	; 0x10
    840a:	f9 89       	ldd	r31, Y+17	; 0x11
    840c:	80 91 4c 21 	lds	r24, 0x214C
    8410:	90 91 4d 21 	lds	r25, 0x214D
    8414:	24 81       	ldd	r18, Z+4	; 0x04
    8416:	35 81       	ldd	r19, Z+5	; 0x05
    8418:	28 17       	cp	r18, r24
    841a:	39 07       	cpc	r19, r25
    841c:	21 f0       	breq	.+8      	; 0x8426 <hal_uartReadBlock+0x4c>
    841e:	89 81       	ldd	r24, Y+1	; 0x01
    8420:	8f bf       	out	0x3f, r24	; 63
    8422:	8e ef       	ldi	r24, 0xFE	; 254
    8424:	5f c0       	rjmp	.+190    	; 0x84e4 <hal_uartReadBlock+0x10a>
    8426:	e8 89       	ldd	r30, Y+16	; 0x10
    8428:	f9 89       	ldd	r31, Y+17	; 0x11
    842a:	80 80       	ld	r8, Z
    842c:	91 80       	ldd	r9, Z+1	; 0x01
    842e:	f4 01       	movw	r30, r8
    8430:	84 85       	ldd	r24, Z+12	; 0x0c
    8432:	88 23       	and	r24, r24
    8434:	21 f0       	breq	.+8      	; 0x843e <hal_uartReadBlock+0x64>
    8436:	89 81       	ldd	r24, Y+1	; 0x01
    8438:	8f bf       	out	0x3f, r24	; 63
    843a:	81 ef       	ldi	r24, 0xF1	; 241
    843c:	53 c0       	rjmp	.+166    	; 0x84e4 <hal_uartReadBlock+0x10a>
    843e:	81 e0       	ldi	r24, 0x01	; 1
    8440:	f4 01       	movw	r30, r8
    8442:	84 87       	std	Z+12, r24	; 0x0c
    8444:	21 85       	ldd	r18, Z+9	; 0x09
    8446:	32 85       	ldd	r19, Z+10	; 0x0a
    8448:	f9 01       	movw	r30, r18
    844a:	83 81       	ldd	r24, Z+3	; 0x03
    844c:	8f 7c       	andi	r24, 0xCF	; 207
    844e:	83 83       	std	Z+3, r24	; 0x03
    8450:	89 81       	ldd	r24, Y+1	; 0x01
    8452:	8f bf       	out	0x3f, r24	; 63
    8454:	f4 01       	movw	r30, r8
    8456:	67 87       	std	Z+15, r22	; 0x0f
    8458:	70 8b       	std	Z+16, r23	; 0x10
    845a:	43 8b       	std	Z+19, r20	; 0x13
    845c:	54 8b       	std	Z+20, r21	; 0x14
    845e:	17 8a       	std	Z+23, r1	; 0x17
    8460:	10 8e       	std	Z+24, r1	; 0x18
    8462:	83 8d       	ldd	r24, Z+27	; 0x1b
    8464:	94 8d       	ldd	r25, Z+28	; 0x1c
    8466:	18 16       	cp	r1, r24
    8468:	19 06       	cpc	r1, r25
    846a:	ac f5       	brge	.+106    	; 0x84d6 <hal_uartReadBlock+0xfc>
    846c:	80 81       	ld	r24, Z
    846e:	83 50       	subi	r24, 0x03	; 3
    8470:	83 31       	cpi	r24, 0x13	; 19
    8472:	30 f4       	brcc	.+12     	; 0x8480 <hal_uartReadBlock+0xa6>
    8474:	e8 2f       	mov	r30, r24
    8476:	f0 e0       	ldi	r31, 0x00	; 0
    8478:	e6 5a       	subi	r30, 0xA6	; 166
    847a:	fe 4d       	sbci	r31, 0xDE	; 222
    847c:	60 81       	ld	r22, Z
    847e:	01 c0       	rjmp	.+2      	; 0x8482 <hal_uartReadBlock+0xa8>
    8480:	6b e4       	ldi	r22, 0x4B	; 75
    8482:	f4 01       	movw	r30, r8
    8484:	a1 84       	ldd	r10, Z+9	; 0x09
    8486:	b2 84       	ldd	r11, Z+10	; 0x0a
    8488:	aa 82       	std	Y+2, r10	; 0x02
    848a:	bb 82       	std	Y+3, r11	; 0x03
    848c:	ac 83       	std	Y+4, r26	; 0x04
    848e:	bd 83       	std	Y+5, r27	; 0x05
    8490:	1e 82       	std	Y+6, r1	; 0x06
    8492:	81 e0       	ldi	r24, 0x01	; 1
    8494:	8f 83       	std	Y+7, r24	; 0x07
    8496:	18 86       	std	Y+8, r1	; 0x08
    8498:	89 87       	std	Y+9, r24	; 0x09
    849a:	4a 87       	std	Y+10, r20	; 0x0a
    849c:	5b 87       	std	Y+11, r21	; 0x0b
    849e:	1c 86       	std	Y+12, r1	; 0x0c
    84a0:	8d 87       	std	Y+13, r24	; 0x0d
    84a2:	6e 87       	std	Y+14, r22	; 0x0e
    84a4:	1f 86       	std	Y+15, r1	; 0x0f
    84a6:	83 8d       	ldd	r24, Z+27	; 0x1b
    84a8:	94 8d       	ldd	r25, Z+28	; 0x1c
    84aa:	cc 80       	ldd	r12, Y+4	; 0x04
    84ac:	dd 80       	ldd	r13, Y+5	; 0x05
    84ae:	ee 24       	eor	r14, r14
    84b0:	ff 24       	eor	r15, r15
    84b2:	f3 94       	inc	r15
    84b4:	00 e0       	ldi	r16, 0x00	; 0
    84b6:	11 e0       	ldi	r17, 0x01	; 1
    84b8:	2a 85       	ldd	r18, Y+10	; 0x0a
    84ba:	3b 85       	ldd	r19, Y+11	; 0x0b
    84bc:	40 e0       	ldi	r20, 0x00	; 0
    84be:	51 e0       	ldi	r21, 0x01	; 1
    84c0:	70 e0       	ldi	r23, 0x00	; 0
    84c2:	0e 94 ff 4d 	call	0x9bfe	; 0x9bfe <hal_configureDmaChannel>
    84c6:	d4 01       	movw	r26, r8
    84c8:	5b 96       	adiw	r26, 0x1b	; 27
    84ca:	8d 91       	ld	r24, X+
    84cc:	9c 91       	ld	r25, X
    84ce:	5c 97       	sbiw	r26, 0x1c	; 28
    84d0:	0e 94 11 50 	call	0xa022	; 0xa022 <hal_dmaEnableChannel>
    84d4:	06 c0       	rjmp	.+12     	; 0x84e2 <hal_uartReadBlock+0x108>
    84d6:	01 84       	ldd	r0, Z+9	; 0x09
    84d8:	f2 85       	ldd	r31, Z+10	; 0x0a
    84da:	e0 2d       	mov	r30, r0
    84dc:	83 81       	ldd	r24, Z+3	; 0x03
    84de:	80 63       	ori	r24, 0x30	; 48
    84e0:	83 83       	std	Z+3, r24	; 0x03
    84e2:	80 e0       	ldi	r24, 0x00	; 0
    84e4:	61 96       	adiw	r28, 0x11	; 17
    84e6:	cd bf       	out	0x3d, r28	; 61
    84e8:	de bf       	out	0x3e, r29	; 62
    84ea:	df 91       	pop	r29
    84ec:	cf 91       	pop	r28
    84ee:	1f 91       	pop	r17
    84f0:	0f 91       	pop	r16
    84f2:	ff 90       	pop	r15
    84f4:	ef 90       	pop	r14
    84f6:	df 90       	pop	r13
    84f8:	cf 90       	pop	r12
    84fa:	bf 90       	pop	r11
    84fc:	af 90       	pop	r10
    84fe:	9f 90       	pop	r9
    8500:	8f 90       	pop	r8
    8502:	08 95       	ret

00008504 <hal_uartWriteBlock>:
    8504:	8f 92       	push	r8
    8506:	9f 92       	push	r9
    8508:	af 92       	push	r10
    850a:	bf 92       	push	r11
    850c:	cf 92       	push	r12
    850e:	df 92       	push	r13
    8510:	ef 92       	push	r14
    8512:	ff 92       	push	r15
    8514:	0f 93       	push	r16
    8516:	1f 93       	push	r17
    8518:	cf 93       	push	r28
    851a:	df 93       	push	r29
    851c:	cd b7       	in	r28, 0x3d	; 61
    851e:	de b7       	in	r29, 0x3e	; 62
    8520:	61 97       	sbiw	r28, 0x11	; 17
    8522:	cd bf       	out	0x3d, r28	; 61
    8524:	de bf       	out	0x3e, r29	; 62
    8526:	88 8b       	std	Y+16, r24	; 0x10
    8528:	99 8b       	std	Y+17, r25	; 0x11
    852a:	db 01       	movw	r26, r22
    852c:	8f b7       	in	r24, 0x3f	; 63
    852e:	89 83       	std	Y+1, r24	; 0x01
    8530:	f8 94       	cli
    8532:	e8 89       	ldd	r30, Y+16	; 0x10
    8534:	f9 89       	ldd	r31, Y+17	; 0x11
    8536:	80 91 4c 21 	lds	r24, 0x214C
    853a:	90 91 4d 21 	lds	r25, 0x214D
    853e:	24 81       	ldd	r18, Z+4	; 0x04
    8540:	35 81       	ldd	r19, Z+5	; 0x05
    8542:	28 17       	cp	r18, r24
    8544:	39 07       	cpc	r19, r25
    8546:	21 f0       	breq	.+8      	; 0x8550 <hal_uartWriteBlock+0x4c>
    8548:	89 81       	ldd	r24, Y+1	; 0x01
    854a:	8f bf       	out	0x3f, r24	; 63
    854c:	8e ef       	ldi	r24, 0xFE	; 254
    854e:	a1 c0       	rjmp	.+322    	; 0x8692 <hal_uartWriteBlock+0x18e>
    8550:	e8 89       	ldd	r30, Y+16	; 0x10
    8552:	f9 89       	ldd	r31, Y+17	; 0x11
    8554:	80 80       	ld	r8, Z
    8556:	91 80       	ldd	r9, Z+1	; 0x01
    8558:	f4 01       	movw	r30, r8
    855a:	83 85       	ldd	r24, Z+11	; 0x0b
    855c:	88 23       	and	r24, r24
    855e:	21 f0       	breq	.+8      	; 0x8568 <hal_uartWriteBlock+0x64>
    8560:	89 81       	ldd	r24, Y+1	; 0x01
    8562:	8f bf       	out	0x3f, r24	; 63
    8564:	81 ef       	ldi	r24, 0xF1	; 241
    8566:	95 c0       	rjmp	.+298    	; 0x8692 <hal_uartWriteBlock+0x18e>
    8568:	81 e0       	ldi	r24, 0x01	; 1
    856a:	f4 01       	movw	r30, r8
    856c:	83 87       	std	Z+11, r24	; 0x0b
    856e:	21 85       	ldd	r18, Z+9	; 0x09
    8570:	32 85       	ldd	r19, Z+10	; 0x0a
    8572:	f9 01       	movw	r30, r18
    8574:	83 81       	ldd	r24, Z+3	; 0x03
    8576:	8c 7f       	andi	r24, 0xFC	; 252
    8578:	83 83       	std	Z+3, r24	; 0x03
    857a:	89 81       	ldd	r24, Y+1	; 0x01
    857c:	8f bf       	out	0x3f, r24	; 63
    857e:	f4 01       	movw	r30, r8
    8580:	65 87       	std	Z+13, r22	; 0x0d
    8582:	76 87       	std	Z+14, r23	; 0x0e
    8584:	41 8b       	std	Z+17, r20	; 0x11
    8586:	52 8b       	std	Z+18, r21	; 0x12
    8588:	15 8a       	std	Z+21, r1	; 0x15
    858a:	16 8a       	std	Z+22, r1	; 0x16
    858c:	0f b6       	in	r0, 0x3f	; 63
    858e:	07 fe       	sbrs	r0, 7
    8590:	1b c0       	rjmp	.+54     	; 0x85c8 <hal_uartWriteBlock+0xc4>
    8592:	80 91 a0 00 	lds	r24, 0x00A0
    8596:	81 30       	cpi	r24, 0x01	; 1
    8598:	b9 f0       	breq	.+46     	; 0x85c8 <hal_uartWriteBlock+0xc4>
    859a:	87 8d       	ldd	r24, Z+31	; 0x1f
    859c:	90 a1       	ldd	r25, Z+32	; 0x20
    859e:	00 97       	sbiw	r24, 0x00	; 0
    85a0:	91 f5       	brne	.+100    	; 0x8606 <hal_uartWriteBlock+0x102>
    85a2:	12 c0       	rjmp	.+36     	; 0x85c8 <hal_uartWriteBlock+0xc4>
    85a4:	da 01       	movw	r26, r20
    85a6:	11 96       	adiw	r26, 0x01	; 1
    85a8:	2c 91       	ld	r18, X
    85aa:	11 97       	sbiw	r26, 0x01	; 1
    85ac:	25 ff       	sbrs	r18, 5
    85ae:	fa cf       	rjmp	.-12     	; 0x85a4 <hal_uartWriteBlock+0xa0>
    85b0:	d4 01       	movw	r26, r8
    85b2:	1d 96       	adiw	r26, 0x0d	; 13
    85b4:	ed 91       	ld	r30, X+
    85b6:	fc 91       	ld	r31, X
    85b8:	1e 97       	sbiw	r26, 0x0e	; 14
    85ba:	e8 0f       	add	r30, r24
    85bc:	f9 1f       	adc	r31, r25
    85be:	20 81       	ld	r18, Z
    85c0:	fa 01       	movw	r30, r20
    85c2:	20 83       	st	Z, r18
    85c4:	01 96       	adiw	r24, 0x01	; 1
    85c6:	02 c0       	rjmp	.+4      	; 0x85cc <hal_uartWriteBlock+0xc8>
    85c8:	80 e0       	ldi	r24, 0x00	; 0
    85ca:	90 e0       	ldi	r25, 0x00	; 0
    85cc:	d4 01       	movw	r26, r8
    85ce:	51 96       	adiw	r26, 0x11	; 17
    85d0:	2d 91       	ld	r18, X+
    85d2:	3c 91       	ld	r19, X
    85d4:	52 97       	sbiw	r26, 0x12	; 18
    85d6:	82 17       	cp	r24, r18
    85d8:	93 07       	cpc	r25, r19
    85da:	28 f4       	brcc	.+10     	; 0x85e6 <hal_uartWriteBlock+0xe2>
    85dc:	19 96       	adiw	r26, 0x09	; 9
    85de:	4d 91       	ld	r20, X+
    85e0:	5c 91       	ld	r21, X
    85e2:	1a 97       	sbiw	r26, 0x0a	; 10
    85e4:	df cf       	rjmp	.-66     	; 0x85a4 <hal_uartWriteBlock+0xa0>
    85e6:	d4 01       	movw	r26, r8
    85e8:	5f 96       	adiw	r26, 0x1f	; 31
    85ea:	ed 91       	ld	r30, X+
    85ec:	fc 91       	ld	r31, X
    85ee:	90 97       	sbiw	r26, 0x20	; 32
    85f0:	30 97       	sbiw	r30, 0x00	; 0
    85f2:	11 f0       	breq	.+4      	; 0x85f8 <hal_uartWriteBlock+0xf4>
    85f4:	c9 01       	movw	r24, r18
    85f6:	19 95       	eicall
    85f8:	f4 01       	movw	r30, r8
    85fa:	11 8a       	std	Z+17, r1	; 0x11
    85fc:	12 8a       	std	Z+18, r1	; 0x12
    85fe:	15 86       	std	Z+13, r1	; 0x0d
    8600:	16 86       	std	Z+14, r1	; 0x0e
    8602:	13 86       	std	Z+11, r1	; 0x0b
    8604:	45 c0       	rjmp	.+138    	; 0x8690 <hal_uartWriteBlock+0x18c>
    8606:	f4 01       	movw	r30, r8
    8608:	81 8d       	ldd	r24, Z+25	; 0x19
    860a:	92 8d       	ldd	r25, Z+26	; 0x1a
    860c:	18 16       	cp	r1, r24
    860e:	19 06       	cpc	r1, r25
    8610:	cc f5       	brge	.+114    	; 0x8684 <hal_uartWriteBlock+0x180>
    8612:	80 81       	ld	r24, Z
    8614:	83 50       	subi	r24, 0x03	; 3
    8616:	83 31       	cpi	r24, 0x13	; 19
    8618:	30 f4       	brcc	.+12     	; 0x8626 <hal_uartWriteBlock+0x122>
    861a:	e8 2f       	mov	r30, r24
    861c:	f0 e0       	ldi	r31, 0x00	; 0
    861e:	e3 59       	subi	r30, 0x93	; 147
    8620:	fe 4d       	sbci	r31, 0xDE	; 222
    8622:	60 81       	ld	r22, Z
    8624:	01 c0       	rjmp	.+2      	; 0x8628 <hal_uartWriteBlock+0x124>
    8626:	6c e4       	ldi	r22, 0x4C	; 76
    8628:	aa 83       	std	Y+2, r26	; 0x02
    862a:	bb 83       	std	Y+3, r27	; 0x03
    862c:	d4 01       	movw	r26, r8
    862e:	19 96       	adiw	r26, 0x09	; 9
    8630:	cc 90       	ld	r12, X
    8632:	19 97       	sbiw	r26, 0x09	; 9
    8634:	1a 96       	adiw	r26, 0x0a	; 10
    8636:	dc 90       	ld	r13, X
    8638:	1a 97       	sbiw	r26, 0x0a	; 10
    863a:	cc 82       	std	Y+4, r12	; 0x04
    863c:	dd 82       	std	Y+5, r13	; 0x05
    863e:	81 e0       	ldi	r24, 0x01	; 1
    8640:	8e 83       	std	Y+6, r24	; 0x06
    8642:	1f 82       	std	Y+7, r1	; 0x07
    8644:	88 87       	std	Y+8, r24	; 0x08
    8646:	19 86       	std	Y+9, r1	; 0x09
    8648:	4a 87       	std	Y+10, r20	; 0x0a
    864a:	5b 87       	std	Y+11, r21	; 0x0b
    864c:	1c 86       	std	Y+12, r1	; 0x0c
    864e:	8d 87       	std	Y+13, r24	; 0x0d
    8650:	6e 87       	std	Y+14, r22	; 0x0e
    8652:	1f 86       	std	Y+15, r1	; 0x0f
    8654:	59 96       	adiw	r26, 0x19	; 25
    8656:	8d 91       	ld	r24, X+
    8658:	9c 91       	ld	r25, X
    865a:	5a 97       	sbiw	r26, 0x1a	; 26
    865c:	aa 80       	ldd	r10, Y+2	; 0x02
    865e:	bb 80       	ldd	r11, Y+3	; 0x03
    8660:	ee 24       	eor	r14, r14
    8662:	e3 94       	inc	r14
    8664:	ff 24       	eor	r15, r15
    8666:	01 e0       	ldi	r16, 0x01	; 1
    8668:	10 e0       	ldi	r17, 0x00	; 0
    866a:	2a 85       	ldd	r18, Y+10	; 0x0a
    866c:	3b 85       	ldd	r19, Y+11	; 0x0b
    866e:	40 e0       	ldi	r20, 0x00	; 0
    8670:	51 e0       	ldi	r21, 0x01	; 1
    8672:	70 e0       	ldi	r23, 0x00	; 0
    8674:	0e 94 ff 4d 	call	0x9bfe	; 0x9bfe <hal_configureDmaChannel>
    8678:	f4 01       	movw	r30, r8
    867a:	81 8d       	ldd	r24, Z+25	; 0x19
    867c:	92 8d       	ldd	r25, Z+26	; 0x1a
    867e:	0e 94 11 50 	call	0xa022	; 0xa022 <hal_dmaEnableChannel>
    8682:	06 c0       	rjmp	.+12     	; 0x8690 <hal_uartWriteBlock+0x18c>
    8684:	01 84       	ldd	r0, Z+9	; 0x09
    8686:	f2 85       	ldd	r31, Z+10	; 0x0a
    8688:	e0 2d       	mov	r30, r0
    868a:	83 81       	ldd	r24, Z+3	; 0x03
    868c:	83 60       	ori	r24, 0x03	; 3
    868e:	83 83       	std	Z+3, r24	; 0x03
    8690:	80 e0       	ldi	r24, 0x00	; 0
    8692:	61 96       	adiw	r28, 0x11	; 17
    8694:	cd bf       	out	0x3d, r28	; 61
    8696:	de bf       	out	0x3e, r29	; 62
    8698:	df 91       	pop	r29
    869a:	cf 91       	pop	r28
    869c:	1f 91       	pop	r17
    869e:	0f 91       	pop	r16
    86a0:	ff 90       	pop	r15
    86a2:	ef 90       	pop	r14
    86a4:	df 90       	pop	r13
    86a6:	cf 90       	pop	r12
    86a8:	bf 90       	pop	r11
    86aa:	af 90       	pop	r10
    86ac:	9f 90       	pop	r9
    86ae:	8f 90       	pop	r8
    86b0:	08 95       	ret

000086b2 <hal_uartGetBaudRate>:
    86b2:	0f 93       	push	r16
    86b4:	1f 93       	push	r17
    86b6:	cf 93       	push	r28
    86b8:	df 93       	push	r29
    86ba:	00 d0       	rcall	.+0      	; 0x86bc <hal_uartGetBaudRate+0xa>
    86bc:	cd b7       	in	r28, 0x3d	; 61
    86be:	de b7       	in	r29, 0x3e	; 62
    86c0:	8a 83       	std	Y+2, r24	; 0x02
    86c2:	9b 83       	std	Y+3, r25	; 0x03
    86c4:	8f b7       	in	r24, 0x3f	; 63
    86c6:	89 83       	std	Y+1, r24	; 0x01
    86c8:	f8 94       	cli
    86ca:	ea 81       	ldd	r30, Y+2	; 0x02
    86cc:	fb 81       	ldd	r31, Y+3	; 0x03
    86ce:	80 91 4c 21 	lds	r24, 0x214C
    86d2:	90 91 4d 21 	lds	r25, 0x214D
    86d6:	24 81       	ldd	r18, Z+4	; 0x04
    86d8:	35 81       	ldd	r19, Z+5	; 0x05
    86da:	28 17       	cp	r18, r24
    86dc:	39 07       	cpc	r19, r25
    86de:	39 f0       	breq	.+14     	; 0x86ee <hal_uartGetBaudRate+0x3c>
    86e0:	89 81       	ldd	r24, Y+1	; 0x01
    86e2:	8f bf       	out	0x3f, r24	; 63
    86e4:	0e ef       	ldi	r16, 0xFE	; 254
    86e6:	1f ef       	ldi	r17, 0xFF	; 255
    86e8:	2f ef       	ldi	r18, 0xFF	; 255
    86ea:	3f ef       	ldi	r19, 0xFF	; 255
    86ec:	0b c0       	rjmp	.+22     	; 0x8704 <hal_uartGetBaudRate+0x52>
    86ee:	ea 81       	ldd	r30, Y+2	; 0x02
    86f0:	fb 81       	ldd	r31, Y+3	; 0x03
    86f2:	01 90       	ld	r0, Z+
    86f4:	f0 81       	ld	r31, Z
    86f6:	e0 2d       	mov	r30, r0
    86f8:	89 81       	ldd	r24, Y+1	; 0x01
    86fa:	8f bf       	out	0x3f, r24	; 63
    86fc:	01 81       	ldd	r16, Z+1	; 0x01
    86fe:	12 81       	ldd	r17, Z+2	; 0x02
    8700:	23 81       	ldd	r18, Z+3	; 0x03
    8702:	34 81       	ldd	r19, Z+4	; 0x04
    8704:	b8 01       	movw	r22, r16
    8706:	c9 01       	movw	r24, r18
    8708:	23 96       	adiw	r28, 0x03	; 3
    870a:	cd bf       	out	0x3d, r28	; 61
    870c:	de bf       	out	0x3e, r29	; 62
    870e:	df 91       	pop	r29
    8710:	cf 91       	pop	r28
    8712:	1f 91       	pop	r17
    8714:	0f 91       	pop	r16
    8716:	08 95       	ret

00008718 <hal_uartGetDataAddress>:
    8718:	0f 93       	push	r16
    871a:	1f 93       	push	r17
    871c:	cf 93       	push	r28
    871e:	df 93       	push	r29
    8720:	00 d0       	rcall	.+0      	; 0x8722 <hal_uartGetDataAddress+0xa>
    8722:	cd b7       	in	r28, 0x3d	; 61
    8724:	de b7       	in	r29, 0x3e	; 62
    8726:	8a 83       	std	Y+2, r24	; 0x02
    8728:	9b 83       	std	Y+3, r25	; 0x03
    872a:	8f b7       	in	r24, 0x3f	; 63
    872c:	89 83       	std	Y+1, r24	; 0x01
    872e:	f8 94       	cli
    8730:	ea 81       	ldd	r30, Y+2	; 0x02
    8732:	fb 81       	ldd	r31, Y+3	; 0x03
    8734:	80 91 4c 21 	lds	r24, 0x214C
    8738:	90 91 4d 21 	lds	r25, 0x214D
    873c:	24 81       	ldd	r18, Z+4	; 0x04
    873e:	35 81       	ldd	r19, Z+5	; 0x05
    8740:	28 17       	cp	r18, r24
    8742:	39 07       	cpc	r19, r25
    8744:	39 f0       	breq	.+14     	; 0x8754 <hal_uartGetDataAddress+0x3c>
    8746:	89 81       	ldd	r24, Y+1	; 0x01
    8748:	8f bf       	out	0x3f, r24	; 63
    874a:	0e ef       	ldi	r16, 0xFE	; 254
    874c:	1f ef       	ldi	r17, 0xFF	; 255
    874e:	2f ef       	ldi	r18, 0xFF	; 255
    8750:	3f ef       	ldi	r19, 0xFF	; 255
    8752:	0d c0       	rjmp	.+26     	; 0x876e <hal_uartGetDataAddress+0x56>
    8754:	ea 81       	ldd	r30, Y+2	; 0x02
    8756:	fb 81       	ldd	r31, Y+3	; 0x03
    8758:	01 90       	ld	r0, Z+
    875a:	f0 81       	ld	r31, Z
    875c:	e0 2d       	mov	r30, r0
    875e:	89 81       	ldd	r24, Y+1	; 0x01
    8760:	8f bf       	out	0x3f, r24	; 63
    8762:	01 85       	ldd	r16, Z+9	; 0x09
    8764:	12 85       	ldd	r17, Z+10	; 0x0a
    8766:	22 27       	eor	r18, r18
    8768:	17 fd       	sbrc	r17, 7
    876a:	20 95       	com	r18
    876c:	32 2f       	mov	r19, r18
    876e:	b8 01       	movw	r22, r16
    8770:	c9 01       	movw	r24, r18
    8772:	23 96       	adiw	r28, 0x03	; 3
    8774:	cd bf       	out	0x3d, r28	; 61
    8776:	de bf       	out	0x3e, r29	; 62
    8778:	df 91       	pop	r29
    877a:	cf 91       	pop	r28
    877c:	1f 91       	pop	r17
    877e:	0f 91       	pop	r16
    8780:	08 95       	ret

00008782 <hal_requestUartChannel>:
    8782:	0f 93       	push	r16
    8784:	1f 93       	push	r17
    8786:	cf 93       	push	r28
    8788:	df 93       	push	r29
    878a:	cd b7       	in	r28, 0x3d	; 61
    878c:	de b7       	in	r29, 0x3e	; 62
    878e:	2b 97       	sbiw	r28, 0x0b	; 11
    8790:	cd bf       	out	0x3d, r28	; 61
    8792:	de bf       	out	0x3e, r29	; 62
    8794:	28 2f       	mov	r18, r24
    8796:	8f b7       	in	r24, 0x3f	; 63
    8798:	89 83       	std	Y+1, r24	; 0x01
    879a:	f8 94       	cli
    879c:	26 31       	cpi	r18, 0x16	; 22
    879e:	28 f0       	brcs	.+10     	; 0x87aa <hal_requestUartChannel+0x28>
    87a0:	89 81       	ldd	r24, Y+1	; 0x01
    87a2:	8f bf       	out	0x3f, r24	; 63
    87a4:	82 ef       	ldi	r24, 0xF2	; 242
    87a6:	9f ef       	ldi	r25, 0xFF	; 255
    87a8:	49 c1       	rjmp	.+658    	; 0x8a3c <hal_requestUartChannel+0x2ba>
    87aa:	e0 91 4c 21 	lds	r30, 0x214C
    87ae:	f0 91 4d 21 	lds	r31, 0x214D
    87b2:	82 81       	ldd	r24, Z+2	; 0x02
    87b4:	93 81       	ldd	r25, Z+3	; 0x03
    87b6:	e0 91 4c 21 	lds	r30, 0x214C
    87ba:	f0 91 4d 21 	lds	r31, 0x214D
    87be:	0b c0       	rjmp	.+22     	; 0x87d6 <hal_requestUartChannel+0x54>
    87c0:	ea 81       	ldd	r30, Y+2	; 0x02
    87c2:	fb 81       	ldd	r31, Y+3	; 0x03
    87c4:	01 90       	ld	r0, Z+
    87c6:	f0 81       	ld	r31, Z
    87c8:	e0 2d       	mov	r30, r0
    87ca:	30 81       	ld	r19, Z
    87cc:	32 17       	cp	r19, r18
    87ce:	59 f0       	breq	.+22     	; 0x87e6 <hal_requestUartChannel+0x64>
    87d0:	01 97       	sbiw	r24, 0x01	; 1
    87d2:	ea 81       	ldd	r30, Y+2	; 0x02
    87d4:	fb 81       	ldd	r31, Y+3	; 0x03
    87d6:	40 85       	ldd	r20, Z+8	; 0x08
    87d8:	51 85       	ldd	r21, Z+9	; 0x09
    87da:	4a 83       	std	Y+2, r20	; 0x02
    87dc:	5b 83       	std	Y+3, r21	; 0x03
    87de:	18 16       	cp	r1, r24
    87e0:	19 06       	cpc	r1, r25
    87e2:	74 f3       	brlt	.-36     	; 0x87c0 <hal_requestUartChannel+0x3e>
    87e4:	03 c0       	rjmp	.+6      	; 0x87ec <hal_requestUartChannel+0x6a>
    87e6:	30 97       	sbiw	r30, 0x00	; 0
    87e8:	09 f0       	breq	.+2      	; 0x87ec <hal_requestUartChannel+0x6a>
    87ea:	1f c1       	rjmp	.+574    	; 0x8a2a <hal_requestUartChannel+0x2a8>
    87ec:	81 e2       	ldi	r24, 0x21	; 33
    87ee:	90 e0       	ldi	r25, 0x00	; 0
    87f0:	2b 87       	std	Y+11, r18	; 0x0b
    87f2:	0e 94 b8 8a 	call	0x11570	; 0x11570 <utl_createLink>
    87f6:	8a 83       	std	Y+2, r24	; 0x02
    87f8:	9b 83       	std	Y+3, r25	; 0x03
    87fa:	8a 81       	ldd	r24, Y+2	; 0x02
    87fc:	9b 81       	ldd	r25, Y+3	; 0x03
    87fe:	2b 85       	ldd	r18, Y+11	; 0x0b
    8800:	97 fd       	sbrc	r25, 7
    8802:	0d c0       	rjmp	.+26     	; 0x881e <hal_requestUartChannel+0x9c>
    8804:	80 91 4c 21 	lds	r24, 0x214C
    8808:	90 91 4d 21 	lds	r25, 0x214D
    880c:	6a 81       	ldd	r22, Y+2	; 0x02
    880e:	7b 81       	ldd	r23, Y+3	; 0x03
    8810:	41 e0       	ldi	r20, 0x01	; 1
    8812:	0e 94 c8 88 	call	0x11190	; 0x11190 <utl_insertLink>
    8816:	8a 81       	ldd	r24, Y+2	; 0x02
    8818:	9b 81       	ldd	r25, Y+3	; 0x03
    881a:	2b 85       	ldd	r18, Y+11	; 0x0b
    881c:	02 c0       	rjmp	.+4      	; 0x8822 <hal_requestUartChannel+0xa0>
    881e:	8f ef       	ldi	r24, 0xFF	; 255
    8820:	9f ef       	ldi	r25, 0xFF	; 255
    8822:	8c 83       	std	Y+4, r24	; 0x04
    8824:	9d 83       	std	Y+5, r25	; 0x05
    8826:	8c 81       	ldd	r24, Y+4	; 0x04
    8828:	9d 81       	ldd	r25, Y+5	; 0x05
    882a:	97 ff       	sbrs	r25, 7
    882c:	05 c0       	rjmp	.+10     	; 0x8838 <hal_requestUartChannel+0xb6>
    882e:	89 81       	ldd	r24, Y+1	; 0x01
    8830:	8f bf       	out	0x3f, r24	; 63
    8832:	8f ef       	ldi	r24, 0xFF	; 255
    8834:	9f ef       	ldi	r25, 0xFF	; 255
    8836:	02 c1       	rjmp	.+516    	; 0x8a3c <hal_requestUartChannel+0x2ba>
    8838:	ec 81       	ldd	r30, Y+4	; 0x04
    883a:	fd 81       	ldd	r31, Y+5	; 0x05
    883c:	00 81       	ld	r16, Z
    883e:	11 81       	ldd	r17, Z+1	; 0x01
    8840:	f8 01       	movw	r30, r16
    8842:	20 83       	st	Z, r18
    8844:	11 82       	std	Z+1, r1	; 0x01
    8846:	12 82       	std	Z+2, r1	; 0x02
    8848:	13 82       	std	Z+3, r1	; 0x03
    884a:	14 82       	std	Z+4, r1	; 0x04
    884c:	29 30       	cpi	r18, 0x09	; 9
    884e:	09 f4       	brne	.+2      	; 0x8852 <hal_requestUartChannel+0xd0>
    8850:	68 c0       	rjmp	.+208    	; 0x8922 <hal_requestUartChannel+0x1a0>
    8852:	2a 30       	cpi	r18, 0x0A	; 10
    8854:	40 f4       	brcc	.+16     	; 0x8866 <hal_requestUartChannel+0xe4>
    8856:	23 30       	cpi	r18, 0x03	; 3
    8858:	81 f1       	breq	.+96     	; 0x88ba <hal_requestUartChannel+0x138>
    885a:	26 30       	cpi	r18, 0x06	; 6
    885c:	09 f4       	brne	.+2      	; 0x8860 <hal_requestUartChannel+0xde>
    885e:	47 c0       	rjmp	.+142    	; 0x88ee <hal_requestUartChannel+0x16c>
    8860:	22 23       	and	r18, r18
    8862:	89 f0       	breq	.+34     	; 0x8886 <hal_requestUartChannel+0x104>
    8864:	e7 c0       	rjmp	.+462    	; 0x8a34 <hal_requestUartChannel+0x2b2>
    8866:	2f 30       	cpi	r18, 0x0F	; 15
    8868:	09 f4       	brne	.+2      	; 0x886c <hal_requestUartChannel+0xea>
    886a:	90 c0       	rjmp	.+288    	; 0x898c <hal_requestUartChannel+0x20a>
    886c:	20 31       	cpi	r18, 0x10	; 16
    886e:	20 f4       	brcc	.+8      	; 0x8878 <hal_requestUartChannel+0xf6>
    8870:	2c 30       	cpi	r18, 0x0C	; 12
    8872:	09 f0       	breq	.+2      	; 0x8876 <hal_requestUartChannel+0xf4>
    8874:	df c0       	rjmp	.+446    	; 0x8a34 <hal_requestUartChannel+0x2b2>
    8876:	6f c0       	rjmp	.+222    	; 0x8956 <hal_requestUartChannel+0x1d4>
    8878:	22 31       	cpi	r18, 0x12	; 18
    887a:	09 f4       	brne	.+2      	; 0x887e <hal_requestUartChannel+0xfc>
    887c:	a2 c0       	rjmp	.+324    	; 0x89c2 <hal_requestUartChannel+0x240>
    887e:	25 31       	cpi	r18, 0x15	; 21
    8880:	09 f0       	breq	.+2      	; 0x8884 <hal_requestUartChannel+0x102>
    8882:	d8 c0       	rjmp	.+432    	; 0x8a34 <hal_requestUartChannel+0x2b2>
    8884:	b8 c0       	rjmp	.+368    	; 0x89f6 <hal_requestUartChannel+0x274>
    8886:	80 ea       	ldi	r24, 0xA0	; 160
    8888:	98 e0       	ldi	r25, 0x08	; 8
    888a:	f8 01       	movw	r30, r16
    888c:	81 87       	std	Z+9, r24	; 0x09
    888e:	92 87       	std	Z+10, r25	; 0x0a
    8890:	84 e0       	ldi	r24, 0x04	; 4
    8892:	8e 83       	std	Y+6, r24	; 0x06
    8894:	88 e0       	ldi	r24, 0x08	; 8
    8896:	8f 83       	std	Y+7, r24	; 0x07
    8898:	81 e0       	ldi	r24, 0x01	; 1
    889a:	88 87       	std	Y+8, r24	; 0x08
    889c:	19 86       	std	Y+9, r1	; 0x09
    889e:	1a 86       	std	Y+10, r1	; 0x0a
    88a0:	82 e0       	ldi	r24, 0x02	; 2
    88a2:	24 e0       	ldi	r18, 0x04	; 4
    88a4:	38 e0       	ldi	r19, 0x08	; 8
    88a6:	41 e0       	ldi	r20, 0x01	; 1
    88a8:	50 e0       	ldi	r21, 0x00	; 0
    88aa:	60 e0       	ldi	r22, 0x00	; 0
    88ac:	0e 94 e6 29 	call	0x53cc	; 0x53cc <hal_configureGpioPort>
    88b0:	00 93 c0 24 	sts	0x24C0, r16
    88b4:	10 93 c1 24 	sts	0x24C1, r17
    88b8:	bd c0       	rjmp	.+378    	; 0x8a34 <hal_requestUartChannel+0x2b2>
    88ba:	80 eb       	ldi	r24, 0xB0	; 176
    88bc:	98 e0       	ldi	r25, 0x08	; 8
    88be:	f8 01       	movw	r30, r16
    88c0:	81 87       	std	Z+9, r24	; 0x09
    88c2:	92 87       	std	Z+10, r25	; 0x0a
    88c4:	80 e4       	ldi	r24, 0x40	; 64
    88c6:	8e 83       	std	Y+6, r24	; 0x06
    88c8:	80 e8       	ldi	r24, 0x80	; 128
    88ca:	8f 83       	std	Y+7, r24	; 0x07
    88cc:	81 e0       	ldi	r24, 0x01	; 1
    88ce:	88 87       	std	Y+8, r24	; 0x08
    88d0:	19 86       	std	Y+9, r1	; 0x09
    88d2:	1a 86       	std	Y+10, r1	; 0x0a
    88d4:	82 e0       	ldi	r24, 0x02	; 2
    88d6:	20 e4       	ldi	r18, 0x40	; 64
    88d8:	30 e8       	ldi	r19, 0x80	; 128
    88da:	41 e0       	ldi	r20, 0x01	; 1
    88dc:	50 e0       	ldi	r21, 0x00	; 0
    88de:	60 e0       	ldi	r22, 0x00	; 0
    88e0:	0e 94 e6 29 	call	0x53cc	; 0x53cc <hal_configureGpioPort>
    88e4:	00 93 c2 24 	sts	0x24C2, r16
    88e8:	10 93 c3 24 	sts	0x24C3, r17
    88ec:	a3 c0       	rjmp	.+326    	; 0x8a34 <hal_requestUartChannel+0x2b2>
    88ee:	80 ea       	ldi	r24, 0xA0	; 160
    88f0:	99 e0       	ldi	r25, 0x09	; 9
    88f2:	f8 01       	movw	r30, r16
    88f4:	81 87       	std	Z+9, r24	; 0x09
    88f6:	92 87       	std	Z+10, r25	; 0x0a
    88f8:	84 e0       	ldi	r24, 0x04	; 4
    88fa:	8e 83       	std	Y+6, r24	; 0x06
    88fc:	88 e0       	ldi	r24, 0x08	; 8
    88fe:	8f 83       	std	Y+7, r24	; 0x07
    8900:	81 e0       	ldi	r24, 0x01	; 1
    8902:	88 87       	std	Y+8, r24	; 0x08
    8904:	19 86       	std	Y+9, r1	; 0x09
    8906:	1a 86       	std	Y+10, r1	; 0x0a
    8908:	83 e0       	ldi	r24, 0x03	; 3
    890a:	24 e0       	ldi	r18, 0x04	; 4
    890c:	38 e0       	ldi	r19, 0x08	; 8
    890e:	41 e0       	ldi	r20, 0x01	; 1
    8910:	50 e0       	ldi	r21, 0x00	; 0
    8912:	60 e0       	ldi	r22, 0x00	; 0
    8914:	0e 94 e6 29 	call	0x53cc	; 0x53cc <hal_configureGpioPort>
    8918:	00 93 c4 24 	sts	0x24C4, r16
    891c:	10 93 c5 24 	sts	0x24C5, r17
    8920:	89 c0       	rjmp	.+274    	; 0x8a34 <hal_requestUartChannel+0x2b2>
    8922:	80 eb       	ldi	r24, 0xB0	; 176
    8924:	99 e0       	ldi	r25, 0x09	; 9
    8926:	f8 01       	movw	r30, r16
    8928:	81 87       	std	Z+9, r24	; 0x09
    892a:	92 87       	std	Z+10, r25	; 0x0a
    892c:	80 e4       	ldi	r24, 0x40	; 64
    892e:	8e 83       	std	Y+6, r24	; 0x06
    8930:	80 e8       	ldi	r24, 0x80	; 128
    8932:	8f 83       	std	Y+7, r24	; 0x07
    8934:	81 e0       	ldi	r24, 0x01	; 1
    8936:	88 87       	std	Y+8, r24	; 0x08
    8938:	19 86       	std	Y+9, r1	; 0x09
    893a:	1a 86       	std	Y+10, r1	; 0x0a
    893c:	83 e0       	ldi	r24, 0x03	; 3
    893e:	20 e4       	ldi	r18, 0x40	; 64
    8940:	30 e8       	ldi	r19, 0x80	; 128
    8942:	41 e0       	ldi	r20, 0x01	; 1
    8944:	50 e0       	ldi	r21, 0x00	; 0
    8946:	60 e0       	ldi	r22, 0x00	; 0
    8948:	0e 94 e6 29 	call	0x53cc	; 0x53cc <hal_configureGpioPort>
    894c:	00 93 c6 24 	sts	0x24C6, r16
    8950:	10 93 c7 24 	sts	0x24C7, r17
    8954:	6f c0       	rjmp	.+222    	; 0x8a34 <hal_requestUartChannel+0x2b2>
    8956:	80 ea       	ldi	r24, 0xA0	; 160
    8958:	9a e0       	ldi	r25, 0x0A	; 10
    895a:	f8 01       	movw	r30, r16
    895c:	81 87       	std	Z+9, r24	; 0x09
    895e:	92 87       	std	Z+10, r25	; 0x0a
    8960:	84 e0       	ldi	r24, 0x04	; 4
    8962:	8e 83       	std	Y+6, r24	; 0x06
    8964:	88 e0       	ldi	r24, 0x08	; 8
    8966:	8f 83       	std	Y+7, r24	; 0x07
    8968:	81 e0       	ldi	r24, 0x01	; 1
    896a:	88 87       	std	Y+8, r24	; 0x08
    896c:	85 e0       	ldi	r24, 0x05	; 5
    896e:	89 87       	std	Y+9, r24	; 0x09
    8970:	1a 86       	std	Y+10, r1	; 0x0a
    8972:	84 e0       	ldi	r24, 0x04	; 4
    8974:	24 e0       	ldi	r18, 0x04	; 4
    8976:	38 e0       	ldi	r19, 0x08	; 8
    8978:	41 e0       	ldi	r20, 0x01	; 1
    897a:	55 e0       	ldi	r21, 0x05	; 5
    897c:	60 e0       	ldi	r22, 0x00	; 0
    897e:	0e 94 e6 29 	call	0x53cc	; 0x53cc <hal_configureGpioPort>
    8982:	00 93 c8 24 	sts	0x24C8, r16
    8986:	10 93 c9 24 	sts	0x24C9, r17
    898a:	54 c0       	rjmp	.+168    	; 0x8a34 <hal_requestUartChannel+0x2b2>
    898c:	80 eb       	ldi	r24, 0xB0	; 176
    898e:	9a e0       	ldi	r25, 0x0A	; 10
    8990:	f8 01       	movw	r30, r16
    8992:	81 87       	std	Z+9, r24	; 0x09
    8994:	92 87       	std	Z+10, r25	; 0x0a
    8996:	80 e4       	ldi	r24, 0x40	; 64
    8998:	8e 83       	std	Y+6, r24	; 0x06
    899a:	80 e8       	ldi	r24, 0x80	; 128
    899c:	8f 83       	std	Y+7, r24	; 0x07
    899e:	81 e0       	ldi	r24, 0x01	; 1
    89a0:	88 87       	std	Y+8, r24	; 0x08
    89a2:	85 e0       	ldi	r24, 0x05	; 5
    89a4:	89 87       	std	Y+9, r24	; 0x09
    89a6:	1a 86       	std	Y+10, r1	; 0x0a
    89a8:	84 e0       	ldi	r24, 0x04	; 4
    89aa:	20 e4       	ldi	r18, 0x40	; 64
    89ac:	30 e8       	ldi	r19, 0x80	; 128
    89ae:	41 e0       	ldi	r20, 0x01	; 1
    89b0:	55 e0       	ldi	r21, 0x05	; 5
    89b2:	60 e0       	ldi	r22, 0x00	; 0
    89b4:	0e 94 e6 29 	call	0x53cc	; 0x53cc <hal_configureGpioPort>
    89b8:	00 93 ca 24 	sts	0x24CA, r16
    89bc:	10 93 cb 24 	sts	0x24CB, r17
    89c0:	39 c0       	rjmp	.+114    	; 0x8a34 <hal_requestUartChannel+0x2b2>
    89c2:	80 ea       	ldi	r24, 0xA0	; 160
    89c4:	9b e0       	ldi	r25, 0x0B	; 11
    89c6:	f8 01       	movw	r30, r16
    89c8:	81 87       	std	Z+9, r24	; 0x09
    89ca:	92 87       	std	Z+10, r25	; 0x0a
    89cc:	84 e0       	ldi	r24, 0x04	; 4
    89ce:	8e 83       	std	Y+6, r24	; 0x06
    89d0:	88 e0       	ldi	r24, 0x08	; 8
    89d2:	8f 83       	std	Y+7, r24	; 0x07
    89d4:	81 e0       	ldi	r24, 0x01	; 1
    89d6:	88 87       	std	Y+8, r24	; 0x08
    89d8:	85 e0       	ldi	r24, 0x05	; 5
    89da:	89 87       	std	Y+9, r24	; 0x09
    89dc:	1a 86       	std	Y+10, r1	; 0x0a
    89de:	24 e0       	ldi	r18, 0x04	; 4
    89e0:	38 e0       	ldi	r19, 0x08	; 8
    89e2:	41 e0       	ldi	r20, 0x01	; 1
    89e4:	55 e0       	ldi	r21, 0x05	; 5
    89e6:	60 e0       	ldi	r22, 0x00	; 0
    89e8:	0e 94 e6 29 	call	0x53cc	; 0x53cc <hal_configureGpioPort>
    89ec:	00 93 cc 24 	sts	0x24CC, r16
    89f0:	10 93 cd 24 	sts	0x24CD, r17
    89f4:	1f c0       	rjmp	.+62     	; 0x8a34 <hal_requestUartChannel+0x2b2>
    89f6:	80 eb       	ldi	r24, 0xB0	; 176
    89f8:	9b e0       	ldi	r25, 0x0B	; 11
    89fa:	f8 01       	movw	r30, r16
    89fc:	81 87       	std	Z+9, r24	; 0x09
    89fe:	92 87       	std	Z+10, r25	; 0x0a
    8a00:	80 e4       	ldi	r24, 0x40	; 64
    8a02:	8e 83       	std	Y+6, r24	; 0x06
    8a04:	80 e8       	ldi	r24, 0x80	; 128
    8a06:	8f 83       	std	Y+7, r24	; 0x07
    8a08:	81 e0       	ldi	r24, 0x01	; 1
    8a0a:	88 87       	std	Y+8, r24	; 0x08
    8a0c:	85 e0       	ldi	r24, 0x05	; 5
    8a0e:	89 87       	std	Y+9, r24	; 0x09
    8a10:	1a 86       	std	Y+10, r1	; 0x0a
    8a12:	20 e4       	ldi	r18, 0x40	; 64
    8a14:	30 e8       	ldi	r19, 0x80	; 128
    8a16:	41 e0       	ldi	r20, 0x01	; 1
    8a18:	55 e0       	ldi	r21, 0x05	; 5
    8a1a:	60 e0       	ldi	r22, 0x00	; 0
    8a1c:	0e 94 e6 29 	call	0x53cc	; 0x53cc <hal_configureGpioPort>
    8a20:	00 93 ce 24 	sts	0x24CE, r16
    8a24:	10 93 cf 24 	sts	0x24CF, r17
    8a28:	05 c0       	rjmp	.+10     	; 0x8a34 <hal_requestUartChannel+0x2b2>
    8a2a:	89 81       	ldd	r24, Y+1	; 0x01
    8a2c:	8f bf       	out	0x3f, r24	; 63
    8a2e:	89 ef       	ldi	r24, 0xF9	; 249
    8a30:	9f ef       	ldi	r25, 0xFF	; 255
    8a32:	04 c0       	rjmp	.+8      	; 0x8a3c <hal_requestUartChannel+0x2ba>
    8a34:	89 81       	ldd	r24, Y+1	; 0x01
    8a36:	8f bf       	out	0x3f, r24	; 63
    8a38:	8c 81       	ldd	r24, Y+4	; 0x04
    8a3a:	9d 81       	ldd	r25, Y+5	; 0x05
    8a3c:	2b 96       	adiw	r28, 0x0b	; 11
    8a3e:	cd bf       	out	0x3d, r28	; 61
    8a40:	de bf       	out	0x3e, r29	; 62
    8a42:	df 91       	pop	r29
    8a44:	cf 91       	pop	r28
    8a46:	1f 91       	pop	r17
    8a48:	0f 91       	pop	r16
    8a4a:	08 95       	ret

00008a4c <hal_releaseUartChannel>:
    8a4c:	cf 93       	push	r28
    8a4e:	df 93       	push	r29
    8a50:	00 d0       	rcall	.+0      	; 0x8a52 <hal_releaseUartChannel+0x6>
    8a52:	cd b7       	in	r28, 0x3d	; 61
    8a54:	de b7       	in	r29, 0x3e	; 62
    8a56:	8a 83       	std	Y+2, r24	; 0x02
    8a58:	9b 83       	std	Y+3, r25	; 0x03
    8a5a:	8f b7       	in	r24, 0x3f	; 63
    8a5c:	89 83       	std	Y+1, r24	; 0x01
    8a5e:	f8 94       	cli
    8a60:	ea 81       	ldd	r30, Y+2	; 0x02
    8a62:	fb 81       	ldd	r31, Y+3	; 0x03
    8a64:	80 91 4c 21 	lds	r24, 0x214C
    8a68:	90 91 4d 21 	lds	r25, 0x214D
    8a6c:	24 81       	ldd	r18, Z+4	; 0x04
    8a6e:	35 81       	ldd	r19, Z+5	; 0x05
    8a70:	28 17       	cp	r18, r24
    8a72:	39 07       	cpc	r19, r25
    8a74:	21 f0       	breq	.+8      	; 0x8a7e <hal_releaseUartChannel+0x32>
    8a76:	89 81       	ldd	r24, Y+1	; 0x01
    8a78:	8f bf       	out	0x3f, r24	; 63
    8a7a:	8e ef       	ldi	r24, 0xFE	; 254
    8a7c:	c7 c0       	rjmp	.+398    	; 0x8c0c <hal_releaseUartChannel+0x1c0>
    8a7e:	ea 81       	ldd	r30, Y+2	; 0x02
    8a80:	fb 81       	ldd	r31, Y+3	; 0x03
    8a82:	01 90       	ld	r0, Z+
    8a84:	f0 81       	ld	r31, Z
    8a86:	e0 2d       	mov	r30, r0
    8a88:	a1 85       	ldd	r26, Z+9	; 0x09
    8a8a:	b2 85       	ldd	r27, Z+10	; 0x0a
    8a8c:	13 96       	adiw	r26, 0x03	; 3
    8a8e:	8c 91       	ld	r24, X
    8a90:	13 97       	sbiw	r26, 0x03	; 3
    8a92:	8f 7c       	andi	r24, 0xCF	; 207
    8a94:	13 96       	adiw	r26, 0x03	; 3
    8a96:	8c 93       	st	X, r24
    8a98:	a1 85       	ldd	r26, Z+9	; 0x09
    8a9a:	b2 85       	ldd	r27, Z+10	; 0x0a
    8a9c:	13 96       	adiw	r26, 0x03	; 3
    8a9e:	8c 91       	ld	r24, X
    8aa0:	13 97       	sbiw	r26, 0x03	; 3
    8aa2:	8c 7f       	andi	r24, 0xFC	; 252
    8aa4:	13 96       	adiw	r26, 0x03	; 3
    8aa6:	8c 93       	st	X, r24
    8aa8:	a1 85       	ldd	r26, Z+9	; 0x09
    8aaa:	b2 85       	ldd	r27, Z+10	; 0x0a
    8aac:	13 96       	adiw	r26, 0x03	; 3
    8aae:	8c 91       	ld	r24, X
    8ab0:	13 97       	sbiw	r26, 0x03	; 3
    8ab2:	83 7f       	andi	r24, 0xF3	; 243
    8ab4:	13 96       	adiw	r26, 0x03	; 3
    8ab6:	8c 93       	st	X, r24
    8ab8:	a1 85       	ldd	r26, Z+9	; 0x09
    8aba:	b2 85       	ldd	r27, Z+10	; 0x0a
    8abc:	13 96       	adiw	r26, 0x03	; 3
    8abe:	8c 91       	ld	r24, X
    8ac0:	13 97       	sbiw	r26, 0x03	; 3
    8ac2:	8f 7c       	andi	r24, 0xCF	; 207
    8ac4:	13 96       	adiw	r26, 0x03	; 3
    8ac6:	8c 93       	st	X, r24
    8ac8:	a1 85       	ldd	r26, Z+9	; 0x09
    8aca:	b2 85       	ldd	r27, Z+10	; 0x0a
    8acc:	13 96       	adiw	r26, 0x03	; 3
    8ace:	8c 91       	ld	r24, X
    8ad0:	13 97       	sbiw	r26, 0x03	; 3
    8ad2:	8c 7f       	andi	r24, 0xFC	; 252
    8ad4:	13 96       	adiw	r26, 0x03	; 3
    8ad6:	8c 93       	st	X, r24
    8ad8:	a1 85       	ldd	r26, Z+9	; 0x09
    8ada:	b2 85       	ldd	r27, Z+10	; 0x0a
    8adc:	13 96       	adiw	r26, 0x03	; 3
    8ade:	8c 91       	ld	r24, X
    8ae0:	13 97       	sbiw	r26, 0x03	; 3
    8ae2:	83 7f       	andi	r24, 0xF3	; 243
    8ae4:	13 96       	adiw	r26, 0x03	; 3
    8ae6:	8c 93       	st	X, r24
    8ae8:	a1 85       	ldd	r26, Z+9	; 0x09
    8aea:	b2 85       	ldd	r27, Z+10	; 0x0a
    8aec:	14 96       	adiw	r26, 0x04	; 4
    8aee:	8c 91       	ld	r24, X
    8af0:	14 97       	sbiw	r26, 0x04	; 4
    8af2:	8f 7e       	andi	r24, 0xEF	; 239
    8af4:	14 96       	adiw	r26, 0x04	; 4
    8af6:	8c 93       	st	X, r24
    8af8:	a1 85       	ldd	r26, Z+9	; 0x09
    8afa:	b2 85       	ldd	r27, Z+10	; 0x0a
    8afc:	14 96       	adiw	r26, 0x04	; 4
    8afe:	8c 91       	ld	r24, X
    8b00:	14 97       	sbiw	r26, 0x04	; 4
    8b02:	87 7f       	andi	r24, 0xF7	; 247
    8b04:	14 96       	adiw	r26, 0x04	; 4
    8b06:	8c 93       	st	X, r24
    8b08:	a1 85       	ldd	r26, Z+9	; 0x09
    8b0a:	b2 85       	ldd	r27, Z+10	; 0x0a
    8b0c:	15 96       	adiw	r26, 0x05	; 5
    8b0e:	8c 91       	ld	r24, X
    8b10:	15 97       	sbiw	r26, 0x05	; 5
    8b12:	8f 73       	andi	r24, 0x3F	; 63
    8b14:	15 96       	adiw	r26, 0x05	; 5
    8b16:	8c 93       	st	X, r24
    8b18:	a1 85       	ldd	r26, Z+9	; 0x09
    8b1a:	b2 85       	ldd	r27, Z+10	; 0x0a
    8b1c:	15 96       	adiw	r26, 0x05	; 5
    8b1e:	8c 91       	ld	r24, X
    8b20:	15 97       	sbiw	r26, 0x05	; 5
    8b22:	8f 7c       	andi	r24, 0xCF	; 207
    8b24:	15 96       	adiw	r26, 0x05	; 5
    8b26:	8c 93       	st	X, r24
    8b28:	a1 85       	ldd	r26, Z+9	; 0x09
    8b2a:	b2 85       	ldd	r27, Z+10	; 0x0a
    8b2c:	15 96       	adiw	r26, 0x05	; 5
    8b2e:	8c 91       	ld	r24, X
    8b30:	15 97       	sbiw	r26, 0x05	; 5
    8b32:	88 7f       	andi	r24, 0xF8	; 248
    8b34:	15 96       	adiw	r26, 0x05	; 5
    8b36:	8c 93       	st	X, r24
    8b38:	a1 85       	ldd	r26, Z+9	; 0x09
    8b3a:	b2 85       	ldd	r27, Z+10	; 0x0a
    8b3c:	15 96       	adiw	r26, 0x05	; 5
    8b3e:	8c 91       	ld	r24, X
    8b40:	15 97       	sbiw	r26, 0x05	; 5
    8b42:	87 7f       	andi	r24, 0xF7	; 247
    8b44:	15 96       	adiw	r26, 0x05	; 5
    8b46:	8c 93       	st	X, r24
    8b48:	a1 85       	ldd	r26, Z+9	; 0x09
    8b4a:	b2 85       	ldd	r27, Z+10	; 0x0a
    8b4c:	16 96       	adiw	r26, 0x06	; 6
    8b4e:	8c 91       	ld	r24, X
    8b50:	16 97       	sbiw	r26, 0x06	; 6
    8b52:	16 96       	adiw	r26, 0x06	; 6
    8b54:	1c 92       	st	X, r1
    8b56:	a1 85       	ldd	r26, Z+9	; 0x09
    8b58:	b2 85       	ldd	r27, Z+10	; 0x0a
    8b5a:	17 96       	adiw	r26, 0x07	; 7
    8b5c:	8c 91       	ld	r24, X
    8b5e:	17 97       	sbiw	r26, 0x07	; 7
    8b60:	80 7f       	andi	r24, 0xF0	; 240
    8b62:	17 96       	adiw	r26, 0x07	; 7
    8b64:	8c 93       	st	X, r24
    8b66:	a1 85       	ldd	r26, Z+9	; 0x09
    8b68:	b2 85       	ldd	r27, Z+10	; 0x0a
    8b6a:	17 96       	adiw	r26, 0x07	; 7
    8b6c:	8c 91       	ld	r24, X
    8b6e:	17 97       	sbiw	r26, 0x07	; 7
    8b70:	8f 70       	andi	r24, 0x0F	; 15
    8b72:	17 96       	adiw	r26, 0x07	; 7
    8b74:	8c 93       	st	X, r24
    8b76:	17 97       	sbiw	r26, 0x07	; 7
    8b78:	80 81       	ld	r24, Z
    8b7a:	89 30       	cpi	r24, 0x09	; 9
    8b7c:	21 f1       	breq	.+72     	; 0x8bc6 <hal_releaseUartChannel+0x17a>
    8b7e:	8a 30       	cpi	r24, 0x0A	; 10
    8b80:	38 f4       	brcc	.+14     	; 0x8b90 <hal_releaseUartChannel+0x144>
    8b82:	83 30       	cpi	r24, 0x03	; 3
    8b84:	b1 f0       	breq	.+44     	; 0x8bb2 <hal_releaseUartChannel+0x166>
    8b86:	86 30       	cpi	r24, 0x06	; 6
    8b88:	c9 f0       	breq	.+50     	; 0x8bbc <hal_releaseUartChannel+0x170>
    8b8a:	88 23       	and	r24, r24
    8b8c:	69 f0       	breq	.+26     	; 0x8ba8 <hal_releaseUartChannel+0x15c>
    8b8e:	33 c0       	rjmp	.+102    	; 0x8bf6 <hal_releaseUartChannel+0x1aa>
    8b90:	8f 30       	cpi	r24, 0x0F	; 15
    8b92:	19 f1       	breq	.+70     	; 0x8bda <hal_releaseUartChannel+0x18e>
    8b94:	80 31       	cpi	r24, 0x10	; 16
    8b96:	18 f4       	brcc	.+6      	; 0x8b9e <hal_releaseUartChannel+0x152>
    8b98:	8c 30       	cpi	r24, 0x0C	; 12
    8b9a:	69 f5       	brne	.+90     	; 0x8bf6 <hal_releaseUartChannel+0x1aa>
    8b9c:	19 c0       	rjmp	.+50     	; 0x8bd0 <hal_releaseUartChannel+0x184>
    8b9e:	82 31       	cpi	r24, 0x12	; 18
    8ba0:	09 f1       	breq	.+66     	; 0x8be4 <hal_releaseUartChannel+0x198>
    8ba2:	85 31       	cpi	r24, 0x15	; 21
    8ba4:	41 f5       	brne	.+80     	; 0x8bf6 <hal_releaseUartChannel+0x1aa>
    8ba6:	23 c0       	rjmp	.+70     	; 0x8bee <hal_releaseUartChannel+0x1a2>
    8ba8:	10 92 c0 24 	sts	0x24C0, r1
    8bac:	10 92 c1 24 	sts	0x24C1, r1
    8bb0:	22 c0       	rjmp	.+68     	; 0x8bf6 <hal_releaseUartChannel+0x1aa>
    8bb2:	10 92 c2 24 	sts	0x24C2, r1
    8bb6:	10 92 c3 24 	sts	0x24C3, r1
    8bba:	1d c0       	rjmp	.+58     	; 0x8bf6 <hal_releaseUartChannel+0x1aa>
    8bbc:	10 92 c4 24 	sts	0x24C4, r1
    8bc0:	10 92 c5 24 	sts	0x24C5, r1
    8bc4:	18 c0       	rjmp	.+48     	; 0x8bf6 <hal_releaseUartChannel+0x1aa>
    8bc6:	10 92 c6 24 	sts	0x24C6, r1
    8bca:	10 92 c7 24 	sts	0x24C7, r1
    8bce:	13 c0       	rjmp	.+38     	; 0x8bf6 <hal_releaseUartChannel+0x1aa>
    8bd0:	10 92 c8 24 	sts	0x24C8, r1
    8bd4:	10 92 c9 24 	sts	0x24C9, r1
    8bd8:	0e c0       	rjmp	.+28     	; 0x8bf6 <hal_releaseUartChannel+0x1aa>
    8bda:	10 92 ca 24 	sts	0x24CA, r1
    8bde:	10 92 cb 24 	sts	0x24CB, r1
    8be2:	09 c0       	rjmp	.+18     	; 0x8bf6 <hal_releaseUartChannel+0x1aa>
    8be4:	10 92 cc 24 	sts	0x24CC, r1
    8be8:	10 92 cd 24 	sts	0x24CD, r1
    8bec:	04 c0       	rjmp	.+8      	; 0x8bf6 <hal_releaseUartChannel+0x1aa>
    8bee:	10 92 ce 24 	sts	0x24CE, r1
    8bf2:	10 92 cf 24 	sts	0x24CF, r1
    8bf6:	80 91 4c 21 	lds	r24, 0x214C
    8bfa:	90 91 4d 21 	lds	r25, 0x214D
    8bfe:	6a 81       	ldd	r22, Y+2	; 0x02
    8c00:	7b 81       	ldd	r23, Y+3	; 0x03
    8c02:	0e 94 c4 89 	call	0x11388	; 0x11388 <utl_destroyLink>
    8c06:	89 81       	ldd	r24, Y+1	; 0x01
    8c08:	8f bf       	out	0x3f, r24	; 63
    8c0a:	80 e0       	ldi	r24, 0x00	; 0
    8c0c:	23 96       	adiw	r28, 0x03	; 3
    8c0e:	cd bf       	out	0x3d, r28	; 61
    8c10:	de bf       	out	0x3e, r29	; 62
    8c12:	df 91       	pop	r29
    8c14:	cf 91       	pop	r28
    8c16:	08 95       	ret

00008c18 <hal_configureUartChannel>:
    8c18:	4f 92       	push	r4
    8c1a:	5f 92       	push	r5
    8c1c:	6f 92       	push	r6
    8c1e:	7f 92       	push	r7
    8c20:	8f 92       	push	r8
    8c22:	9f 92       	push	r9
    8c24:	af 92       	push	r10
    8c26:	bf 92       	push	r11
    8c28:	cf 92       	push	r12
    8c2a:	df 92       	push	r13
    8c2c:	ef 92       	push	r14
    8c2e:	ff 92       	push	r15
    8c30:	0f 93       	push	r16
    8c32:	1f 93       	push	r17
    8c34:	cf 93       	push	r28
    8c36:	df 93       	push	r29
    8c38:	cd b7       	in	r28, 0x3d	; 61
    8c3a:	de b7       	in	r29, 0x3e	; 62
    8c3c:	69 97       	sbiw	r28, 0x19	; 25
    8c3e:	cd bf       	out	0x3d, r28	; 61
    8c40:	de bf       	out	0x3e, r29	; 62
    8c42:	8a 83       	std	Y+2, r24	; 0x02
    8c44:	9b 83       	std	Y+3, r25	; 0x03
    8c46:	ac 82       	std	Y+4, r10	; 0x04
    8c48:	bd 82       	std	Y+5, r11	; 0x05
    8c4a:	ec 2d       	mov	r30, r12
    8c4c:	ce 82       	std	Y+6, r12	; 0x06
    8c4e:	df 82       	std	Y+7, r13	; 0x07
    8c50:	e8 86       	std	Y+8, r14	; 0x08
    8c52:	f9 86       	std	Y+9, r15	; 0x09
    8c54:	0a 87       	std	Y+10, r16	; 0x0a
    8c56:	1b 87       	std	Y+11, r17	; 0x0b
    8c58:	2c 87       	std	Y+12, r18	; 0x0c
    8c5a:	3d 87       	std	Y+13, r19	; 0x0d
    8c5c:	4e 87       	std	Y+14, r20	; 0x0e
    8c5e:	5f 87       	std	Y+15, r21	; 0x0f
    8c60:	68 8b       	std	Y+16, r22	; 0x10
    8c62:	79 8b       	std	Y+17, r23	; 0x11
    8c64:	0b 2d       	mov	r16, r11
    8c66:	1c 2d       	mov	r17, r12
    8c68:	28 85       	ldd	r18, Y+8	; 0x08
    8c6a:	39 85       	ldd	r19, Y+9	; 0x09
    8c6c:	4a 85       	ldd	r20, Y+10	; 0x0a
    8c6e:	5b 85       	ldd	r21, Y+11	; 0x0b
    8c70:	2e 8b       	std	Y+22, r18	; 0x16
    8c72:	3f 8b       	std	Y+23, r19	; 0x17
    8c74:	48 8f       	std	Y+24, r20	; 0x18
    8c76:	59 8f       	std	Y+25, r21	; 0x19
    8c78:	9f b7       	in	r25, 0x3f	; 63
    8c7a:	99 83       	std	Y+1, r25	; 0x01
    8c7c:	f8 94       	cli
    8c7e:	aa 20       	and	r10, r10
    8c80:	21 f0       	breq	.+8      	; 0x8c8a <hal_configureUartChannel+0x72>
    8c82:	89 81       	ldd	r24, Y+1	; 0x01
    8c84:	8f bf       	out	0x3f, r24	; 63
    8c86:	88 ef       	ldi	r24, 0xF8	; 248
    8c88:	bc c2       	rjmp	.+1400   	; 0x9202 <hal_configureUartChannel+0x5ea>
    8c8a:	e3 30       	cpi	r30, 0x03	; 3
    8c8c:	20 f0       	brcs	.+8      	; 0x8c96 <hal_configureUartChannel+0x7e>
    8c8e:	89 81       	ldd	r24, Y+1	; 0x01
    8c90:	8f bf       	out	0x3f, r24	; 63
    8c92:	86 ef       	ldi	r24, 0xF6	; 246
    8c94:	b6 c2       	rjmp	.+1388   	; 0x9202 <hal_configureUartChannel+0x5ea>
    8c96:	04 30       	cpi	r16, 0x04	; 4
    8c98:	20 f0       	brcs	.+8      	; 0x8ca2 <hal_configureUartChannel+0x8a>
    8c9a:	89 81       	ldd	r24, Y+1	; 0x01
    8c9c:	8f bf       	out	0x3f, r24	; 63
    8c9e:	87 ef       	ldi	r24, 0xF7	; 247
    8ca0:	b0 c2       	rjmp	.+1376   	; 0x9202 <hal_configureUartChannel+0x5ea>
    8ca2:	31 e0       	ldi	r19, 0x01	; 1
    8ca4:	3d 15       	cp	r19, r13
    8ca6:	20 f4       	brcc	.+8      	; 0x8cb0 <hal_configureUartChannel+0x98>
    8ca8:	89 81       	ldd	r24, Y+1	; 0x01
    8caa:	8f bf       	out	0x3f, r24	; 63
    8cac:	85 ef       	ldi	r24, 0xF5	; 245
    8cae:	a9 c2       	rjmp	.+1362   	; 0x9202 <hal_configureUartChannel+0x5ea>
    8cb0:	6e 89       	ldd	r22, Y+22	; 0x16
    8cb2:	7f 89       	ldd	r23, Y+23	; 0x17
    8cb4:	88 8d       	ldd	r24, Y+24	; 0x18
    8cb6:	99 8d       	ldd	r25, Y+25	; 0x19
    8cb8:	0e 94 a5 ac 	call	0x1594a	; 0x1594a <__floatunsisf>
    8cbc:	6a 8b       	std	Y+18, r22	; 0x12
    8cbe:	7b 8b       	std	Y+19, r23	; 0x13
    8cc0:	8c 8b       	std	Y+20, r24	; 0x14
    8cc2:	9d 8b       	std	Y+21, r25	; 0x15
    8cc4:	0e 94 15 49 	call	0x922a	; 0x922a <hal_getCpuFreq>
    8cc8:	0e 94 a5 ac 	call	0x1594a	; 0x1594a <__floatunsisf>
    8ccc:	20 e0       	ldi	r18, 0x00	; 0
    8cce:	30 e0       	ldi	r19, 0x00	; 0
    8cd0:	40 e0       	ldi	r20, 0x00	; 0
    8cd2:	54 e3       	ldi	r21, 0x34	; 52
    8cd4:	0e 94 0e ae 	call	0x15c1c	; 0x15c1c <__mulsf3>
    8cd8:	9b 01       	movw	r18, r22
    8cda:	ac 01       	movw	r20, r24
    8cdc:	6a 89       	ldd	r22, Y+18	; 0x12
    8cde:	7b 89       	ldd	r23, Y+19	; 0x13
    8ce0:	8c 89       	ldd	r24, Y+20	; 0x14
    8ce2:	9d 89       	ldd	r25, Y+21	; 0x15
    8ce4:	0e 94 cb ab 	call	0x15796	; 0x15796 <__cmpsf2>
    8ce8:	87 fd       	sbrc	r24, 7
    8cea:	14 c0       	rjmp	.+40     	; 0x8d14 <hal_configureUartChannel+0xfc>
    8cec:	0e 94 15 49 	call	0x922a	; 0x922a <hal_getCpuFreq>
    8cf0:	0e 94 a5 ac 	call	0x1594a	; 0x1594a <__floatunsisf>
    8cf4:	20 e0       	ldi	r18, 0x00	; 0
    8cf6:	30 e0       	ldi	r19, 0x00	; 0
    8cf8:	40 e8       	ldi	r20, 0x80	; 128
    8cfa:	5d e3       	ldi	r21, 0x3D	; 61
    8cfc:	0e 94 0e ae 	call	0x15c1c	; 0x15c1c <__mulsf3>
    8d00:	9b 01       	movw	r18, r22
    8d02:	ac 01       	movw	r20, r24
    8d04:	6a 89       	ldd	r22, Y+18	; 0x12
    8d06:	7b 89       	ldd	r23, Y+19	; 0x13
    8d08:	8c 89       	ldd	r24, Y+20	; 0x14
    8d0a:	9d 89       	ldd	r25, Y+21	; 0x15
    8d0c:	0e 94 03 ae 	call	0x15c06	; 0x15c06 <__gesf2>
    8d10:	18 16       	cp	r1, r24
    8d12:	24 f4       	brge	.+8      	; 0x8d1c <hal_configureUartChannel+0x104>
    8d14:	89 81       	ldd	r24, Y+1	; 0x01
    8d16:	8f bf       	out	0x3f, r24	; 63
    8d18:	84 ef       	ldi	r24, 0xF4	; 244
    8d1a:	73 c2       	rjmp	.+1254   	; 0x9202 <hal_configureUartChannel+0x5ea>
    8d1c:	ea 81       	ldd	r30, Y+2	; 0x02
    8d1e:	fb 81       	ldd	r31, Y+3	; 0x03
    8d20:	80 91 4c 21 	lds	r24, 0x214C
    8d24:	90 91 4d 21 	lds	r25, 0x214D
    8d28:	24 81       	ldd	r18, Z+4	; 0x04
    8d2a:	35 81       	ldd	r19, Z+5	; 0x05
    8d2c:	28 17       	cp	r18, r24
    8d2e:	39 07       	cpc	r19, r25
    8d30:	21 f0       	breq	.+8      	; 0x8d3a <hal_configureUartChannel+0x122>
    8d32:	89 81       	ldd	r24, Y+1	; 0x01
    8d34:	8f bf       	out	0x3f, r24	; 63
    8d36:	8e ef       	ldi	r24, 0xFE	; 254
    8d38:	64 c2       	rjmp	.+1224   	; 0x9202 <hal_configureUartChannel+0x5ea>
    8d3a:	ea 81       	ldd	r30, Y+2	; 0x02
    8d3c:	fb 81       	ldd	r31, Y+3	; 0x03
    8d3e:	80 80       	ld	r8, Z
    8d40:	91 80       	ldd	r9, Z+1	; 0x01
    8d42:	d4 01       	movw	r26, r8
    8d44:	19 96       	adiw	r26, 0x09	; 9
    8d46:	ed 91       	ld	r30, X+
    8d48:	fc 91       	ld	r31, X
    8d4a:	1a 97       	sbiw	r26, 0x0a	; 10
    8d4c:	83 81       	ldd	r24, Z+3	; 0x03
    8d4e:	8f 7c       	andi	r24, 0xCF	; 207
    8d50:	83 83       	std	Z+3, r24	; 0x03
    8d52:	19 96       	adiw	r26, 0x09	; 9
    8d54:	ed 91       	ld	r30, X+
    8d56:	fc 91       	ld	r31, X
    8d58:	1a 97       	sbiw	r26, 0x0a	; 10
    8d5a:	83 81       	ldd	r24, Z+3	; 0x03
    8d5c:	8c 7f       	andi	r24, 0xFC	; 252
    8d5e:	83 83       	std	Z+3, r24	; 0x03
    8d60:	19 96       	adiw	r26, 0x09	; 9
    8d62:	ed 91       	ld	r30, X+
    8d64:	fc 91       	ld	r31, X
    8d66:	1a 97       	sbiw	r26, 0x0a	; 10
    8d68:	83 81       	ldd	r24, Z+3	; 0x03
    8d6a:	83 7f       	andi	r24, 0xF3	; 243
    8d6c:	83 83       	std	Z+3, r24	; 0x03
    8d6e:	19 96       	adiw	r26, 0x09	; 9
    8d70:	ed 91       	ld	r30, X+
    8d72:	fc 91       	ld	r31, X
    8d74:	1a 97       	sbiw	r26, 0x0a	; 10
    8d76:	84 81       	ldd	r24, Z+4	; 0x04
    8d78:	8f 7e       	andi	r24, 0xEF	; 239
    8d7a:	84 83       	std	Z+4, r24	; 0x04
    8d7c:	19 96       	adiw	r26, 0x09	; 9
    8d7e:	ed 91       	ld	r30, X+
    8d80:	fc 91       	ld	r31, X
    8d82:	1a 97       	sbiw	r26, 0x0a	; 10
    8d84:	84 81       	ldd	r24, Z+4	; 0x04
    8d86:	87 7f       	andi	r24, 0xF7	; 247
    8d88:	84 83       	std	Z+4, r24	; 0x04
    8d8a:	19 96       	adiw	r26, 0x09	; 9
    8d8c:	ed 91       	ld	r30, X+
    8d8e:	fc 91       	ld	r31, X
    8d90:	1a 97       	sbiw	r26, 0x0a	; 10
    8d92:	85 81       	ldd	r24, Z+5	; 0x05
    8d94:	8f 73       	andi	r24, 0x3F	; 63
    8d96:	85 83       	std	Z+5, r24	; 0x05
    8d98:	19 96       	adiw	r26, 0x09	; 9
    8d9a:	ed 91       	ld	r30, X+
    8d9c:	fc 91       	ld	r31, X
    8d9e:	1a 97       	sbiw	r26, 0x0a	; 10
    8da0:	85 81       	ldd	r24, Z+5	; 0x05
    8da2:	85 83       	std	Z+5, r24	; 0x05
    8da4:	19 96       	adiw	r26, 0x09	; 9
    8da6:	ed 91       	ld	r30, X+
    8da8:	fc 91       	ld	r31, X
    8daa:	1a 97       	sbiw	r26, 0x0a	; 10
    8dac:	85 81       	ldd	r24, Z+5	; 0x05
    8dae:	8f 7c       	andi	r24, 0xCF	; 207
    8db0:	85 83       	std	Z+5, r24	; 0x05
    8db2:	19 96       	adiw	r26, 0x09	; 9
    8db4:	ed 91       	ld	r30, X+
    8db6:	fc 91       	ld	r31, X
    8db8:	1a 97       	sbiw	r26, 0x0a	; 10
    8dba:	85 81       	ldd	r24, Z+5	; 0x05
    8dbc:	11 30       	cpi	r17, 0x01	; 1
    8dbe:	19 f0       	breq	.+6      	; 0x8dc6 <hal_configureUartChannel+0x1ae>
    8dc0:	12 30       	cpi	r17, 0x02	; 2
    8dc2:	21 f4       	brne	.+8      	; 0x8dcc <hal_configureUartChannel+0x1b4>
    8dc4:	02 c0       	rjmp	.+4      	; 0x8dca <hal_configureUartChannel+0x1b2>
    8dc6:	80 62       	ori	r24, 0x20	; 32
    8dc8:	01 c0       	rjmp	.+2      	; 0x8dcc <hal_configureUartChannel+0x1b4>
    8dca:	80 63       	ori	r24, 0x30	; 48
    8dcc:	85 83       	std	Z+5, r24	; 0x05
    8dce:	d4 01       	movw	r26, r8
    8dd0:	19 96       	adiw	r26, 0x09	; 9
    8dd2:	ed 91       	ld	r30, X+
    8dd4:	fc 91       	ld	r31, X
    8dd6:	1a 97       	sbiw	r26, 0x0a	; 10
    8dd8:	85 81       	ldd	r24, Z+5	; 0x05
    8dda:	88 7f       	andi	r24, 0xF8	; 248
    8ddc:	85 83       	std	Z+5, r24	; 0x05
    8dde:	19 96       	adiw	r26, 0x09	; 9
    8de0:	ed 91       	ld	r30, X+
    8de2:	fc 91       	ld	r31, X
    8de4:	1a 97       	sbiw	r26, 0x0a	; 10
    8de6:	85 81       	ldd	r24, Z+5	; 0x05
    8de8:	80 2b       	or	r24, r16
    8dea:	85 83       	std	Z+5, r24	; 0x05
    8dec:	19 96       	adiw	r26, 0x09	; 9
    8dee:	ed 91       	ld	r30, X+
    8df0:	fc 91       	ld	r31, X
    8df2:	1a 97       	sbiw	r26, 0x0a	; 10
    8df4:	85 81       	ldd	r24, Z+5	; 0x05
    8df6:	87 7f       	andi	r24, 0xF7	; 247
    8df8:	85 83       	std	Z+5, r24	; 0x05
    8dfa:	19 96       	adiw	r26, 0x09	; 9
    8dfc:	ed 91       	ld	r30, X+
    8dfe:	fc 91       	ld	r31, X
    8e00:	1a 97       	sbiw	r26, 0x0a	; 10
    8e02:	85 81       	ldd	r24, Z+5	; 0x05
    8e04:	dd 0c       	add	r13, r13
    8e06:	dd 0c       	add	r13, r13
    8e08:	dd 0c       	add	r13, r13
    8e0a:	d8 2a       	or	r13, r24
    8e0c:	d5 82       	std	Z+5, r13	; 0x05
    8e0e:	19 96       	adiw	r26, 0x09	; 9
    8e10:	ed 91       	ld	r30, X+
    8e12:	fc 91       	ld	r31, X
    8e14:	1a 97       	sbiw	r26, 0x0a	; 10
    8e16:	86 81       	ldd	r24, Z+6	; 0x06
    8e18:	16 82       	std	Z+6, r1	; 0x06
    8e1a:	19 96       	adiw	r26, 0x09	; 9
    8e1c:	ed 91       	ld	r30, X+
    8e1e:	fc 91       	ld	r31, X
    8e20:	1a 97       	sbiw	r26, 0x0a	; 10
    8e22:	87 81       	ldd	r24, Z+7	; 0x07
    8e24:	80 7f       	andi	r24, 0xF0	; 240
    8e26:	87 83       	std	Z+7, r24	; 0x07
    8e28:	19 96       	adiw	r26, 0x09	; 9
    8e2a:	ed 91       	ld	r30, X+
    8e2c:	fc 91       	ld	r31, X
    8e2e:	1a 97       	sbiw	r26, 0x0a	; 10
    8e30:	87 81       	ldd	r24, Z+7	; 0x07
    8e32:	8f 70       	andi	r24, 0x0F	; 15
    8e34:	87 83       	std	Z+7, r24	; 0x07
    8e36:	0e 94 15 49 	call	0x922a	; 0x922a <hal_getCpuFreq>
    8e3a:	0e 94 a5 ac 	call	0x1594a	; 0x1594a <__floatunsisf>
    8e3e:	6b 01       	movw	r12, r22
    8e40:	7c 01       	movw	r14, r24
    8e42:	6a 89       	ldd	r22, Y+18	; 0x12
    8e44:	7b 89       	ldd	r23, Y+19	; 0x13
    8e46:	8c 89       	ldd	r24, Y+20	; 0x14
    8e48:	9d 89       	ldd	r25, Y+21	; 0x15
    8e4a:	20 e0       	ldi	r18, 0x00	; 0
    8e4c:	30 e0       	ldi	r19, 0x00	; 0
    8e4e:	40 e8       	ldi	r20, 0x80	; 128
    8e50:	51 e4       	ldi	r21, 0x41	; 65
    8e52:	0e 94 0e ae 	call	0x15c1c	; 0x15c1c <__mulsf3>
    8e56:	9b 01       	movw	r18, r22
    8e58:	ac 01       	movw	r20, r24
    8e5a:	c7 01       	movw	r24, r14
    8e5c:	b6 01       	movw	r22, r12
    8e5e:	0e 94 d2 ab 	call	0x157a4	; 0x157a4 <__divsf3>
    8e62:	d6 2e       	mov	r13, r22
    8e64:	c7 2e       	mov	r12, r23
    8e66:	b8 2e       	mov	r11, r24
    8e68:	a9 2e       	mov	r10, r25
    8e6a:	a6 01       	movw	r20, r12
    8e6c:	95 01       	movw	r18, r10
    8e6e:	85 2f       	mov	r24, r21
    8e70:	94 2f       	mov	r25, r20
    8e72:	a3 2f       	mov	r26, r19
    8e74:	b2 2f       	mov	r27, r18
    8e76:	bc 01       	movw	r22, r24
    8e78:	cd 01       	movw	r24, r26
    8e7a:	20 e0       	ldi	r18, 0x00	; 0
    8e7c:	30 e0       	ldi	r19, 0x00	; 0
    8e7e:	40 e8       	ldi	r20, 0x80	; 128
    8e80:	5f e3       	ldi	r21, 0x3F	; 63
    8e82:	0e 94 04 ab 	call	0x15608	; 0x15608 <__subsf3>
    8e86:	76 2e       	mov	r7, r22
    8e88:	67 2e       	mov	r6, r23
    8e8a:	58 2e       	mov	r5, r24
    8e8c:	49 2e       	mov	r4, r25
    8e8e:	06 2f       	mov	r16, r22
    8e90:	17 2f       	mov	r17, r23
    8e92:	72 01       	movw	r14, r4
    8e94:	a3 01       	movw	r20, r6
    8e96:	92 01       	movw	r18, r4
    8e98:	85 2f       	mov	r24, r21
    8e9a:	94 2f       	mov	r25, r20
    8e9c:	a3 2f       	mov	r26, r19
    8e9e:	b2 2f       	mov	r27, r18
    8ea0:	bc 01       	movw	r22, r24
    8ea2:	cd 01       	movw	r24, r26
    8ea4:	20 e0       	ldi	r18, 0x00	; 0
    8ea6:	30 ef       	ldi	r19, 0xF0	; 240
    8ea8:	4f e7       	ldi	r20, 0x7F	; 127
    8eaa:	55 e4       	ldi	r21, 0x45	; 69
    8eac:	0e 94 03 ae 	call	0x15c06	; 0x15c06 <__gesf2>
    8eb0:	87 ff       	sbrs	r24, 7
    8eb2:	18 c0       	rjmp	.+48     	; 0x8ee4 <hal_configureUartChannel+0x2cc>
    8eb4:	37 c0       	rjmp	.+110    	; 0x8f24 <hal_configureUartChannel+0x30c>
    8eb6:	a6 01       	movw	r20, r12
    8eb8:	95 01       	movw	r18, r10
    8eba:	85 2f       	mov	r24, r21
    8ebc:	9c 2d       	mov	r25, r12
    8ebe:	a3 2f       	mov	r26, r19
    8ec0:	ba 2d       	mov	r27, r10
    8ec2:	bc 01       	movw	r22, r24
    8ec4:	cd 01       	movw	r24, r26
    8ec6:	20 e0       	ldi	r18, 0x00	; 0
    8ec8:	30 e0       	ldi	r19, 0x00	; 0
    8eca:	40 e0       	ldi	r20, 0x00	; 0
    8ecc:	5f e3       	ldi	r21, 0x3F	; 63
    8ece:	0e 94 0e ae 	call	0x15c1c	; 0x15c1c <__mulsf3>
    8ed2:	d6 2e       	mov	r13, r22
    8ed4:	c7 2e       	mov	r12, r23
    8ed6:	b8 2e       	mov	r11, r24
    8ed8:	a9 2e       	mov	r10, r25
    8eda:	73 94       	inc	r7
    8edc:	b7 e0       	ldi	r27, 0x07	; 7
    8ede:	7b 16       	cp	r7, r27
    8ee0:	11 f4       	brne	.+4      	; 0x8ee6 <hal_configureUartChannel+0x2ce>
    8ee2:	11 c0       	rjmp	.+34     	; 0x8f06 <hal_configureUartChannel+0x2ee>
    8ee4:	77 24       	eor	r7, r7
    8ee6:	a6 01       	movw	r20, r12
    8ee8:	95 01       	movw	r18, r10
    8eea:	85 2f       	mov	r24, r21
    8eec:	9c 2d       	mov	r25, r12
    8eee:	a3 2f       	mov	r26, r19
    8ef0:	ba 2d       	mov	r27, r10
    8ef2:	bc 01       	movw	r22, r24
    8ef4:	cd 01       	movw	r24, r26
    8ef6:	20 e0       	ldi	r18, 0x00	; 0
    8ef8:	30 ef       	ldi	r19, 0xF0	; 240
    8efa:	4f e7       	ldi	r20, 0x7F	; 127
    8efc:	55 e4       	ldi	r21, 0x45	; 69
    8efe:	0e 94 03 ae 	call	0x15c06	; 0x15c06 <__gesf2>
    8f02:	18 16       	cp	r1, r24
    8f04:	c4 f2       	brlt	.-80     	; 0x8eb6 <hal_configureUartChannel+0x29e>
    8f06:	a6 01       	movw	r20, r12
    8f08:	95 01       	movw	r18, r10
    8f0a:	85 2f       	mov	r24, r21
    8f0c:	9c 2d       	mov	r25, r12
    8f0e:	a3 2f       	mov	r26, r19
    8f10:	ba 2d       	mov	r27, r10
    8f12:	bc 01       	movw	r22, r24
    8f14:	cd 01       	movw	r24, r26
    8f16:	20 e0       	ldi	r18, 0x00	; 0
    8f18:	30 e0       	ldi	r19, 0x00	; 0
    8f1a:	40 e8       	ldi	r20, 0x80	; 128
    8f1c:	5f e3       	ldi	r21, 0x3F	; 63
    8f1e:	0e 94 04 ab 	call	0x15608	; 0x15608 <__subsf3>
    8f22:	5f c0       	rjmp	.+190    	; 0x8fe2 <hal_configureUartChannel+0x3ca>
    8f24:	a3 01       	movw	r20, r6
    8f26:	92 01       	movw	r18, r4
    8f28:	85 2f       	mov	r24, r21
    8f2a:	94 2f       	mov	r25, r20
    8f2c:	a3 2f       	mov	r26, r19
    8f2e:	b2 2f       	mov	r27, r18
    8f30:	bc 01       	movw	r22, r24
    8f32:	cd 01       	movw	r24, r26
    8f34:	20 e0       	ldi	r18, 0x00	; 0
    8f36:	30 ef       	ldi	r19, 0xF0	; 240
    8f38:	4f e7       	ldi	r20, 0x7F	; 127
    8f3a:	55 e4       	ldi	r21, 0x45	; 69
    8f3c:	0e 94 cb ab 	call	0x15796	; 0x15796 <__cmpsf2>
    8f40:	77 24       	eor	r7, r7
    8f42:	87 fd       	sbrc	r24, 7
    8f44:	18 c0       	rjmp	.+48     	; 0x8f76 <hal_configureUartChannel+0x35e>
    8f46:	aa 24       	eor	r10, r10
    8f48:	bb 24       	eor	r11, r11
    8f4a:	71 c0       	rjmp	.+226    	; 0x902e <hal_configureUartChannel+0x416>
    8f4c:	97 01       	movw	r18, r14
    8f4e:	80 2f       	mov	r24, r16
    8f50:	91 2f       	mov	r25, r17
    8f52:	a3 2f       	mov	r26, r19
    8f54:	be 2d       	mov	r27, r14
    8f56:	bc 01       	movw	r22, r24
    8f58:	cd 01       	movw	r24, r26
    8f5a:	a7 01       	movw	r20, r14
    8f5c:	25 2f       	mov	r18, r21
    8f5e:	3b 2f       	mov	r19, r27
    8f60:	a9 01       	movw	r20, r18
    8f62:	98 01       	movw	r18, r16
    8f64:	0e 94 05 ab 	call	0x1560a	; 0x1560a <__addsf3>
    8f68:	8b 01       	movw	r16, r22
    8f6a:	f8 2e       	mov	r15, r24
    8f6c:	e9 2e       	mov	r14, r25
    8f6e:	7a 94       	dec	r7
    8f70:	e9 ef       	ldi	r30, 0xF9	; 249
    8f72:	7e 16       	cp	r7, r30
    8f74:	79 f0       	breq	.+30     	; 0x8f94 <hal_configureUartChannel+0x37c>
    8f76:	97 01       	movw	r18, r14
    8f78:	80 2f       	mov	r24, r16
    8f7a:	91 2f       	mov	r25, r17
    8f7c:	a3 2f       	mov	r26, r19
    8f7e:	be 2d       	mov	r27, r14
    8f80:	bc 01       	movw	r22, r24
    8f82:	cd 01       	movw	r24, r26
    8f84:	20 e0       	ldi	r18, 0x00	; 0
    8f86:	30 ef       	ldi	r19, 0xF0	; 240
    8f88:	4f e7       	ldi	r20, 0x7F	; 127
    8f8a:	55 e4       	ldi	r21, 0x45	; 69
    8f8c:	0e 94 cb ab 	call	0x15796	; 0x15796 <__cmpsf2>
    8f90:	87 fd       	sbrc	r24, 7
    8f92:	dc cf       	rjmp	.-72     	; 0x8f4c <hal_configureUartChannel+0x334>
    8f94:	97 01       	movw	r18, r14
    8f96:	80 2f       	mov	r24, r16
    8f98:	91 2f       	mov	r25, r17
    8f9a:	a3 2f       	mov	r26, r19
    8f9c:	be 2d       	mov	r27, r14
    8f9e:	bc 01       	movw	r22, r24
    8fa0:	cd 01       	movw	r24, r26
    8fa2:	20 e0       	ldi	r18, 0x00	; 0
    8fa4:	30 ef       	ldi	r19, 0xF0	; 240
    8fa6:	4f e7       	ldi	r20, 0x7F	; 127
    8fa8:	55 e4       	ldi	r21, 0x45	; 69
    8faa:	0e 94 03 ae 	call	0x15c06	; 0x15c06 <__gesf2>
    8fae:	18 16       	cp	r1, r24
    8fb0:	8c f4       	brge	.+34     	; 0x8fd4 <hal_configureUartChannel+0x3bc>
    8fb2:	97 01       	movw	r18, r14
    8fb4:	80 2f       	mov	r24, r16
    8fb6:	91 2f       	mov	r25, r17
    8fb8:	a3 2f       	mov	r26, r19
    8fba:	be 2d       	mov	r27, r14
    8fbc:	bc 01       	movw	r22, r24
    8fbe:	cd 01       	movw	r24, r26
    8fc0:	20 e0       	ldi	r18, 0x00	; 0
    8fc2:	30 e0       	ldi	r19, 0x00	; 0
    8fc4:	40 e0       	ldi	r20, 0x00	; 0
    8fc6:	5f e3       	ldi	r21, 0x3F	; 63
    8fc8:	0e 94 0e ae 	call	0x15c1c	; 0x15c1c <__mulsf3>
    8fcc:	8b 01       	movw	r16, r22
    8fce:	f8 2e       	mov	r15, r24
    8fd0:	e9 2e       	mov	r14, r25
    8fd2:	73 94       	inc	r7
    8fd4:	97 01       	movw	r18, r14
    8fd6:	80 2f       	mov	r24, r16
    8fd8:	91 2f       	mov	r25, r17
    8fda:	a3 2f       	mov	r26, r19
    8fdc:	be 2d       	mov	r27, r14
    8fde:	bc 01       	movw	r22, r24
    8fe0:	cd 01       	movw	r24, r26
    8fe2:	0e 94 79 ac 	call	0x158f2	; 0x158f2 <__fixunssfsi>
    8fe6:	dc 01       	movw	r26, r24
    8fe8:	cb 01       	movw	r24, r22
    8fea:	5c 01       	movw	r10, r24
    8fec:	17 14       	cp	r1, r7
    8fee:	fc f4       	brge	.+62     	; 0x902e <hal_configureUartChannel+0x416>
    8ff0:	0e 94 15 49 	call	0x922a	; 0x922a <hal_getCpuFreq>
    8ff4:	6b 01       	movw	r12, r22
    8ff6:	7c 01       	movw	r14, r24
    8ff8:	c5 01       	movw	r24, r10
    8ffa:	a0 e0       	ldi	r26, 0x00	; 0
    8ffc:	b0 e0       	ldi	r27, 0x00	; 0
    8ffe:	01 96       	adiw	r24, 0x01	; 1
    9000:	a1 1d       	adc	r26, r1
    9002:	b1 1d       	adc	r27, r1
    9004:	20 e1       	ldi	r18, 0x10	; 16
    9006:	30 e0       	ldi	r19, 0x00	; 0
    9008:	40 e0       	ldi	r20, 0x00	; 0
    900a:	50 e0       	ldi	r21, 0x00	; 0
    900c:	07 2c       	mov	r0, r7
    900e:	04 c0       	rjmp	.+8      	; 0x9018 <hal_configureUartChannel+0x400>
    9010:	22 0f       	add	r18, r18
    9012:	33 1f       	adc	r19, r19
    9014:	44 1f       	adc	r20, r20
    9016:	55 1f       	adc	r21, r21
    9018:	0a 94       	dec	r0
    901a:	d2 f7       	brpl	.-12     	; 0x9010 <hal_configureUartChannel+0x3f8>
    901c:	bc 01       	movw	r22, r24
    901e:	cd 01       	movw	r24, r26
    9020:	0e 94 e1 b3 	call	0x167c2	; 0x167c2 <__mulsi3>
    9024:	9b 01       	movw	r18, r22
    9026:	ac 01       	movw	r20, r24
    9028:	c7 01       	movw	r24, r14
    902a:	b6 01       	movw	r22, r12
    902c:	24 c0       	rjmp	.+72     	; 0x9076 <hal_configureUartChannel+0x45e>
    902e:	0e 94 15 49 	call	0x922a	; 0x922a <hal_getCpuFreq>
    9032:	ab 01       	movw	r20, r22
    9034:	bc 01       	movw	r22, r24
    9036:	85 01       	movw	r16, r10
    9038:	20 e0       	ldi	r18, 0x00	; 0
    903a:	30 e0       	ldi	r19, 0x00	; 0
    903c:	e4 e0       	ldi	r30, 0x04	; 4
    903e:	00 0f       	add	r16, r16
    9040:	11 1f       	adc	r17, r17
    9042:	22 1f       	adc	r18, r18
    9044:	33 1f       	adc	r19, r19
    9046:	ea 95       	dec	r30
    9048:	d1 f7       	brne	.-12     	; 0x903e <hal_configureUartChannel+0x426>
    904a:	87 2d       	mov	r24, r7
    904c:	99 27       	eor	r25, r25
    904e:	87 fd       	sbrc	r24, 7
    9050:	90 95       	com	r25
    9052:	90 95       	com	r25
    9054:	81 95       	neg	r24
    9056:	9f 4f       	sbci	r25, 0xFF	; 255
    9058:	04 c0       	rjmp	.+8      	; 0x9062 <hal_configureUartChannel+0x44a>
    905a:	36 95       	lsr	r19
    905c:	27 95       	ror	r18
    905e:	17 95       	ror	r17
    9060:	07 95       	ror	r16
    9062:	8a 95       	dec	r24
    9064:	d2 f7       	brpl	.-12     	; 0x905a <hal_configureUartChannel+0x442>
    9066:	00 5f       	subi	r16, 0xF0	; 240
    9068:	1f 4f       	sbci	r17, 0xFF	; 255
    906a:	2f 4f       	sbci	r18, 0xFF	; 255
    906c:	3f 4f       	sbci	r19, 0xFF	; 255
    906e:	cb 01       	movw	r24, r22
    9070:	ba 01       	movw	r22, r20
    9072:	a9 01       	movw	r20, r18
    9074:	98 01       	movw	r18, r16
    9076:	0e 94 00 b4 	call	0x16800	; 0x16800 <__udivmodsi4>
    907a:	b9 01       	movw	r22, r18
    907c:	ca 01       	movw	r24, r20
    907e:	0e 94 a5 ac 	call	0x1594a	; 0x1594a <__floatunsisf>
    9082:	2a 89       	ldd	r18, Y+18	; 0x12
    9084:	3b 89       	ldd	r19, Y+19	; 0x13
    9086:	4c 89       	ldd	r20, Y+20	; 0x14
    9088:	5d 89       	ldd	r21, Y+21	; 0x15
    908a:	0e 94 04 ab 	call	0x15608	; 0x15608 <__subsf3>
    908e:	2a 89       	ldd	r18, Y+18	; 0x12
    9090:	3b 89       	ldd	r19, Y+19	; 0x13
    9092:	4c 89       	ldd	r20, Y+20	; 0x14
    9094:	5d 89       	ldd	r21, Y+21	; 0x15
    9096:	0e 94 d2 ab 	call	0x157a4	; 0x157a4 <__divsf3>
    909a:	20 e0       	ldi	r18, 0x00	; 0
    909c:	30 e0       	ldi	r19, 0x00	; 0
    909e:	48 ec       	ldi	r20, 0xC8	; 200
    90a0:	52 e4       	ldi	r21, 0x42	; 66
    90a2:	0e 94 0e ae 	call	0x15c1c	; 0x15c1c <__mulsf3>
    90a6:	dc 01       	movw	r26, r24
    90a8:	cb 01       	movw	r24, r22
    90aa:	f4 01       	movw	r30, r8
    90ac:	85 83       	std	Z+5, r24	; 0x05
    90ae:	96 83       	std	Z+6, r25	; 0x06
    90b0:	a7 83       	std	Z+7, r26	; 0x07
    90b2:	b0 87       	std	Z+8, r27	; 0x08
    90b4:	80 81       	ld	r24, Z
    90b6:	86 31       	cpi	r24, 0x16	; 22
    90b8:	78 f4       	brcc	.+30     	; 0x90d8 <hal_configureUartChannel+0x4c0>
    90ba:	90 e0       	ldi	r25, 0x00	; 0
    90bc:	88 0f       	add	r24, r24
    90be:	99 1f       	adc	r25, r25
    90c0:	fc 01       	movw	r30, r24
    90c2:	e0 58       	subi	r30, 0x80	; 128
    90c4:	fe 4d       	sbci	r31, 0xDE	; 222
    90c6:	00 81       	ld	r16, Z
    90c8:	11 81       	ldd	r17, Z+1	; 0x01
    90ca:	84 55       	subi	r24, 0x54	; 84
    90cc:	9e 4d       	sbci	r25, 0xDE	; 222
    90ce:	dc 01       	movw	r26, r24
    90d0:	ed 90       	ld	r14, X+
    90d2:	fc 90       	ld	r15, X
    90d4:	11 97       	sbiw	r26, 0x01	; 1
    90d6:	04 c0       	rjmp	.+8      	; 0x90e0 <hal_configureUartChannel+0x4c8>
    90d8:	ee 24       	eor	r14, r14
    90da:	ff 24       	eor	r15, r15
    90dc:	00 e0       	ldi	r16, 0x00	; 0
    90de:	10 e0       	ldi	r17, 0x00	; 0
    90e0:	8d 85       	ldd	r24, Y+13	; 0x0d
    90e2:	88 23       	and	r24, r24
    90e4:	a1 f0       	breq	.+40     	; 0x910e <hal_configureUartChannel+0x4f6>
    90e6:	0e 94 87 4b 	call	0x970e	; 0x970e <hal_requestDmaChannel>
    90ea:	f4 01       	movw	r30, r8
    90ec:	83 8f       	std	Z+27, r24	; 0x1b
    90ee:	94 8f       	std	Z+28, r25	; 0x1c
    90f0:	83 8d       	ldd	r24, Z+27	; 0x1b
    90f2:	94 8d       	ldd	r25, Z+28	; 0x1c
    90f4:	97 ff       	sbrs	r25, 7
    90f6:	05 c0       	rjmp	.+10     	; 0x9102 <hal_configureUartChannel+0x4ea>
    90f8:	89 81       	ldd	r24, Y+1	; 0x01
    90fa:	8f bf       	out	0x3f, r24	; 63
    90fc:	83 8d       	ldd	r24, Z+27	; 0x1b
    90fe:	94 8d       	ldd	r25, Z+28	; 0x1c
    9100:	16 c0       	rjmp	.+44     	; 0x912e <hal_configureUartChannel+0x516>
    9102:	83 8d       	ldd	r24, Z+27	; 0x1b
    9104:	94 8d       	ldd	r25, Z+28	; 0x1c
    9106:	60 e0       	ldi	r22, 0x00	; 0
    9108:	a8 01       	movw	r20, r16
    910a:	0e 94 9b 4a 	call	0x9536	; 0x9536 <hal_requestDmaInterrupt>
    910e:	8c 85       	ldd	r24, Y+12	; 0x0c
    9110:	88 23       	and	r24, r24
    9112:	d1 f0       	breq	.+52     	; 0x9148 <hal_configureUartChannel+0x530>
    9114:	0e 94 87 4b 	call	0x970e	; 0x970e <hal_requestDmaChannel>
    9118:	f4 01       	movw	r30, r8
    911a:	81 8f       	std	Z+25, r24	; 0x19
    911c:	92 8f       	std	Z+26, r25	; 0x1a
    911e:	81 8d       	ldd	r24, Z+25	; 0x19
    9120:	92 8d       	ldd	r25, Z+26	; 0x1a
    9122:	97 ff       	sbrs	r25, 7
    9124:	0b c0       	rjmp	.+22     	; 0x913c <hal_configureUartChannel+0x524>
    9126:	89 81       	ldd	r24, Y+1	; 0x01
    9128:	8f bf       	out	0x3f, r24	; 63
    912a:	81 8d       	ldd	r24, Z+25	; 0x19
    912c:	92 8d       	ldd	r25, Z+26	; 0x1a
    912e:	ff ef       	ldi	r31, 0xFF	; 255
    9130:	89 3f       	cpi	r24, 0xF9	; 249
    9132:	9f 07       	cpc	r25, r31
    9134:	09 f0       	breq	.+2      	; 0x9138 <hal_configureUartChannel+0x520>
    9136:	64 c0       	rjmp	.+200    	; 0x9200 <hal_configureUartChannel+0x5e8>
    9138:	8a ef       	ldi	r24, 0xFA	; 250
    913a:	63 c0       	rjmp	.+198    	; 0x9202 <hal_configureUartChannel+0x5ea>
    913c:	81 8d       	ldd	r24, Z+25	; 0x19
    913e:	92 8d       	ldd	r25, Z+26	; 0x1a
    9140:	60 e0       	ldi	r22, 0x00	; 0
    9142:	a7 01       	movw	r20, r14
    9144:	0e 94 9b 4a 	call	0x9536	; 0x9536 <hal_requestDmaInterrupt>
    9148:	2e 89       	ldd	r18, Y+22	; 0x16
    914a:	3f 89       	ldd	r19, Y+23	; 0x17
    914c:	48 8d       	ldd	r20, Y+24	; 0x18
    914e:	59 8d       	ldd	r21, Y+25	; 0x19
    9150:	d4 01       	movw	r26, r8
    9152:	11 96       	adiw	r26, 0x01	; 1
    9154:	2d 93       	st	X+, r18
    9156:	3d 93       	st	X+, r19
    9158:	4d 93       	st	X+, r20
    915a:	5c 93       	st	X, r21
    915c:	14 97       	sbiw	r26, 0x04	; 4
    915e:	19 96       	adiw	r26, 0x09	; 9
    9160:	ed 91       	ld	r30, X+
    9162:	fc 91       	ld	r31, X
    9164:	1a 97       	sbiw	r26, 0x0a	; 10
    9166:	a6 82       	std	Z+6, r10	; 0x06
    9168:	19 96       	adiw	r26, 0x09	; 9
    916a:	ed 91       	ld	r30, X+
    916c:	fc 91       	ld	r31, X
    916e:	1a 97       	sbiw	r26, 0x0a	; 10
    9170:	72 94       	swap	r7
    9172:	80 ef       	ldi	r24, 0xF0	; 240
    9174:	78 22       	and	r7, r24
    9176:	7b 28       	or	r7, r11
    9178:	77 82       	std	Z+7, r7	; 0x07
    917a:	19 96       	adiw	r26, 0x09	; 9
    917c:	ed 91       	ld	r30, X+
    917e:	fc 91       	ld	r31, X
    9180:	1a 97       	sbiw	r26, 0x0a	; 10
    9182:	84 81       	ldd	r24, Z+4	; 0x04
    9184:	80 61       	ori	r24, 0x10	; 16
    9186:	84 83       	std	Z+4, r24	; 0x04
    9188:	19 96       	adiw	r26, 0x09	; 9
    918a:	ed 91       	ld	r30, X+
    918c:	fc 91       	ld	r31, X
    918e:	1a 97       	sbiw	r26, 0x0a	; 10
    9190:	84 81       	ldd	r24, Z+4	; 0x04
    9192:	88 60       	ori	r24, 0x08	; 8
    9194:	84 83       	std	Z+4, r24	; 0x04
    9196:	1b 96       	adiw	r26, 0x0b	; 11
    9198:	1c 92       	st	X, r1
    919a:	1b 97       	sbiw	r26, 0x0b	; 11
    919c:	1c 96       	adiw	r26, 0x0c	; 12
    919e:	1c 92       	st	X, r1
    91a0:	1c 97       	sbiw	r26, 0x0c	; 12
    91a2:	1f 96       	adiw	r26, 0x0f	; 15
    91a4:	1d 92       	st	X+, r1
    91a6:	1c 92       	st	X, r1
    91a8:	50 97       	sbiw	r26, 0x10	; 16
    91aa:	1d 96       	adiw	r26, 0x0d	; 13
    91ac:	1d 92       	st	X+, r1
    91ae:	1c 92       	st	X, r1
    91b0:	1e 97       	sbiw	r26, 0x0e	; 14
    91b2:	57 96       	adiw	r26, 0x17	; 23
    91b4:	1d 92       	st	X+, r1
    91b6:	1c 92       	st	X, r1
    91b8:	58 97       	sbiw	r26, 0x18	; 24
    91ba:	53 96       	adiw	r26, 0x13	; 19
    91bc:	1d 92       	st	X+, r1
    91be:	1c 92       	st	X, r1
    91c0:	54 97       	sbiw	r26, 0x14	; 20
    91c2:	55 96       	adiw	r26, 0x15	; 21
    91c4:	1d 92       	st	X+, r1
    91c6:	1c 92       	st	X, r1
    91c8:	56 97       	sbiw	r26, 0x16	; 22
    91ca:	51 96       	adiw	r26, 0x11	; 17
    91cc:	1d 92       	st	X+, r1
    91ce:	1c 92       	st	X, r1
    91d0:	52 97       	sbiw	r26, 0x12	; 18
    91d2:	8e 85       	ldd	r24, Y+14	; 0x0e
    91d4:	9f 85       	ldd	r25, Y+15	; 0x0f
    91d6:	5d 96       	adiw	r26, 0x1d	; 29
    91d8:	8d 93       	st	X+, r24
    91da:	9c 93       	st	X, r25
    91dc:	5e 97       	sbiw	r26, 0x1e	; 30
    91de:	88 89       	ldd	r24, Y+16	; 0x10
    91e0:	99 89       	ldd	r25, Y+17	; 0x11
    91e2:	5f 96       	adiw	r26, 0x1f	; 31
    91e4:	8d 93       	st	X+, r24
    91e6:	9c 93       	st	X, r25
    91e8:	90 97       	sbiw	r26, 0x20	; 32
    91ea:	19 96       	adiw	r26, 0x09	; 9
    91ec:	ed 91       	ld	r30, X+
    91ee:	fc 91       	ld	r31, X
    91f0:	1a 97       	sbiw	r26, 0x0a	; 10
    91f2:	83 81       	ldd	r24, Z+3	; 0x03
    91f4:	80 63       	ori	r24, 0x30	; 48
    91f6:	83 83       	std	Z+3, r24	; 0x03
    91f8:	89 81       	ldd	r24, Y+1	; 0x01
    91fa:	8f bf       	out	0x3f, r24	; 63
    91fc:	80 e0       	ldi	r24, 0x00	; 0
    91fe:	01 c0       	rjmp	.+2      	; 0x9202 <hal_configureUartChannel+0x5ea>
    9200:	8f ef       	ldi	r24, 0xFF	; 255
    9202:	69 96       	adiw	r28, 0x19	; 25
    9204:	cd bf       	out	0x3d, r28	; 61
    9206:	de bf       	out	0x3e, r29	; 62
    9208:	df 91       	pop	r29
    920a:	cf 91       	pop	r28
    920c:	1f 91       	pop	r17
    920e:	0f 91       	pop	r16
    9210:	ff 90       	pop	r15
    9212:	ef 90       	pop	r14
    9214:	df 90       	pop	r13
    9216:	cf 90       	pop	r12
    9218:	bf 90       	pop	r11
    921a:	af 90       	pop	r10
    921c:	9f 90       	pop	r9
    921e:	8f 90       	pop	r8
    9220:	7f 90       	pop	r7
    9222:	6f 90       	pop	r6
    9224:	5f 90       	pop	r5
    9226:	4f 90       	pop	r4
    9228:	08 95       	ret

0000922a <hal_getCpuFreq>:
    922a:	60 91 c2 27 	lds	r22, 0x27C2
    922e:	70 91 c3 27 	lds	r23, 0x27C3
    9232:	80 91 c4 27 	lds	r24, 0x27C4
    9236:	90 91 c5 27 	lds	r25, 0x27C5
    923a:	08 95       	ret

0000923c <hal_setCpuFreq>:
    923c:	dc 01       	movw	r26, r24
    923e:	cb 01       	movw	r24, r22
    9240:	22 e0       	ldi	r18, 0x02	; 2
    9242:	20 93 50 00 	sts	0x0050, r18
    9246:	28 ed       	ldi	r18, 0xD8	; 216
    9248:	24 bf       	out	0x34, r18	; 52
    924a:	e0 e4       	ldi	r30, 0x40	; 64
    924c:	f0 e0       	ldi	r31, 0x00	; 0
    924e:	11 82       	std	Z+1, r1	; 0x01
    9250:	20 91 41 00 	lds	r18, 0x0041
    9254:	21 83       	std	Z+1, r18	; 0x01
    9256:	20 91 51 00 	lds	r18, 0x0051
    925a:	21 ff       	sbrs	r18, 1
    925c:	fc cf       	rjmp	.-8      	; 0x9256 <hal_setCpuFreq+0x1a>
    925e:	28 ed       	ldi	r18, 0xD8	; 216
    9260:	24 bf       	out	0x34, r18	; 52
    9262:	21 e0       	ldi	r18, 0x01	; 1
    9264:	20 93 40 00 	sts	0x0040, r18
    9268:	20 91 50 00 	lds	r18, 0x0050
    926c:	2e 7f       	andi	r18, 0xFE	; 254
    926e:	20 93 50 00 	sts	0x0050, r18
    9272:	80 93 c2 27 	sts	0x27C2, r24
    9276:	90 93 c3 27 	sts	0x27C3, r25
    927a:	a0 93 c4 27 	sts	0x27C4, r26
    927e:	b0 93 c5 27 	sts	0x27C5, r27
    9282:	80 e0       	ldi	r24, 0x00	; 0
    9284:	08 95       	ret

00009286 <findDmaIntElement>:
    9286:	cf 93       	push	r28
    9288:	df 93       	push	r29
    928a:	0f 92       	push	r0
    928c:	0f 92       	push	r0
    928e:	cd b7       	in	r28, 0x3d	; 61
    9290:	de b7       	in	r29, 0x3e	; 62
    9292:	e0 91 d8 21 	lds	r30, 0x21D8
    9296:	f0 91 d9 21 	lds	r31, 0x21D9
    929a:	22 81       	ldd	r18, Z+2	; 0x02
    929c:	33 81       	ldd	r19, Z+3	; 0x03
    929e:	e0 91 d8 21 	lds	r30, 0x21D8
    92a2:	f0 91 d9 21 	lds	r31, 0x21D9
    92a6:	0c c0       	rjmp	.+24     	; 0x92c0 <findDmaIntElement+0x3a>
    92a8:	e9 81       	ldd	r30, Y+1	; 0x01
    92aa:	fa 81       	ldd	r31, Y+2	; 0x02
    92ac:	01 90       	ld	r0, Z+
    92ae:	f0 81       	ld	r31, Z
    92b0:	e0 2d       	mov	r30, r0
    92b2:	90 81       	ld	r25, Z
    92b4:	98 17       	cp	r25, r24
    92b6:	69 f0       	breq	.+26     	; 0x92d2 <findDmaIntElement+0x4c>
    92b8:	21 50       	subi	r18, 0x01	; 1
    92ba:	30 40       	sbci	r19, 0x00	; 0
    92bc:	e9 81       	ldd	r30, Y+1	; 0x01
    92be:	fa 81       	ldd	r31, Y+2	; 0x02
    92c0:	40 85       	ldd	r20, Z+8	; 0x08
    92c2:	51 85       	ldd	r21, Z+9	; 0x09
    92c4:	49 83       	std	Y+1, r20	; 0x01
    92c6:	5a 83       	std	Y+2, r21	; 0x02
    92c8:	12 16       	cp	r1, r18
    92ca:	13 06       	cpc	r1, r19
    92cc:	6c f3       	brlt	.-38     	; 0x92a8 <findDmaIntElement+0x22>
    92ce:	e0 e0       	ldi	r30, 0x00	; 0
    92d0:	f0 e0       	ldi	r31, 0x00	; 0
    92d2:	cf 01       	movw	r24, r30
    92d4:	0f 90       	pop	r0
    92d6:	0f 90       	pop	r0
    92d8:	df 91       	pop	r29
    92da:	cf 91       	pop	r28
    92dc:	08 95       	ret

000092de <__vector_6>:
    92de:	1f 92       	push	r1
    92e0:	0f 92       	push	r0
    92e2:	0f b6       	in	r0, 0x3f	; 63
    92e4:	0f 92       	push	r0
    92e6:	08 b6       	in	r0, 0x38	; 56
    92e8:	0f 92       	push	r0
    92ea:	09 b6       	in	r0, 0x39	; 57
    92ec:	0f 92       	push	r0
    92ee:	0b b6       	in	r0, 0x3b	; 59
    92f0:	0f 92       	push	r0
    92f2:	11 24       	eor	r1, r1
    92f4:	2f 93       	push	r18
    92f6:	3f 93       	push	r19
    92f8:	4f 93       	push	r20
    92fa:	5f 93       	push	r21
    92fc:	6f 93       	push	r22
    92fe:	7f 93       	push	r23
    9300:	8f 93       	push	r24
    9302:	9f 93       	push	r25
    9304:	af 93       	push	r26
    9306:	bf 93       	push	r27
    9308:	ef 93       	push	r30
    930a:	ff 93       	push	r31
    930c:	e0 e0       	ldi	r30, 0x00	; 0
    930e:	f1 e0       	ldi	r31, 0x01	; 1
    9310:	80 91 11 01 	lds	r24, 0x0111
    9314:	85 ff       	sbrs	r24, 5
    9316:	06 c0       	rjmp	.+12     	; 0x9324 <__vector_6+0x46>
    9318:	80 91 11 01 	lds	r24, 0x0111
    931c:	80 62       	ori	r24, 0x20	; 32
    931e:	81 8b       	std	Z+17, r24	; 0x11
    9320:	81 e0       	ldi	r24, 0x01	; 1
    9322:	05 c0       	rjmp	.+10     	; 0x932e <__vector_6+0x50>
    9324:	80 91 11 01 	lds	r24, 0x0111
    9328:	80 61       	ori	r24, 0x10	; 16
    932a:	81 8b       	std	Z+17, r24	; 0x11
    932c:	80 e0       	ldi	r24, 0x00	; 0
    932e:	0e 94 43 49 	call	0x9286	; 0x9286 <findDmaIntElement>
    9332:	00 97       	sbiw	r24, 0x00	; 0
    9334:	41 f0       	breq	.+16     	; 0x9346 <__vector_6+0x68>
    9336:	dc 01       	movw	r26, r24
    9338:	11 96       	adiw	r26, 0x01	; 1
    933a:	ed 91       	ld	r30, X+
    933c:	fc 91       	ld	r31, X
    933e:	12 97       	sbiw	r26, 0x02	; 2
    9340:	30 97       	sbiw	r30, 0x00	; 0
    9342:	09 f0       	breq	.+2      	; 0x9346 <__vector_6+0x68>
    9344:	19 95       	eicall
    9346:	ff 91       	pop	r31
    9348:	ef 91       	pop	r30
    934a:	bf 91       	pop	r27
    934c:	af 91       	pop	r26
    934e:	9f 91       	pop	r25
    9350:	8f 91       	pop	r24
    9352:	7f 91       	pop	r23
    9354:	6f 91       	pop	r22
    9356:	5f 91       	pop	r21
    9358:	4f 91       	pop	r20
    935a:	3f 91       	pop	r19
    935c:	2f 91       	pop	r18
    935e:	0f 90       	pop	r0
    9360:	0b be       	out	0x3b, r0	; 59
    9362:	0f 90       	pop	r0
    9364:	09 be       	out	0x39, r0	; 57
    9366:	0f 90       	pop	r0
    9368:	08 be       	out	0x38, r0	; 56
    936a:	0f 90       	pop	r0
    936c:	0f be       	out	0x3f, r0	; 63
    936e:	0f 90       	pop	r0
    9370:	1f 90       	pop	r1
    9372:	18 95       	reti

00009374 <__vector_7>:
    9374:	1f 92       	push	r1
    9376:	0f 92       	push	r0
    9378:	0f b6       	in	r0, 0x3f	; 63
    937a:	0f 92       	push	r0
    937c:	08 b6       	in	r0, 0x38	; 56
    937e:	0f 92       	push	r0
    9380:	09 b6       	in	r0, 0x39	; 57
    9382:	0f 92       	push	r0
    9384:	0b b6       	in	r0, 0x3b	; 59
    9386:	0f 92       	push	r0
    9388:	11 24       	eor	r1, r1
    938a:	2f 93       	push	r18
    938c:	3f 93       	push	r19
    938e:	4f 93       	push	r20
    9390:	5f 93       	push	r21
    9392:	6f 93       	push	r22
    9394:	7f 93       	push	r23
    9396:	8f 93       	push	r24
    9398:	9f 93       	push	r25
    939a:	af 93       	push	r26
    939c:	bf 93       	push	r27
    939e:	ef 93       	push	r30
    93a0:	ff 93       	push	r31
    93a2:	e0 e0       	ldi	r30, 0x00	; 0
    93a4:	f1 e0       	ldi	r31, 0x01	; 1
    93a6:	80 91 21 01 	lds	r24, 0x0121
    93aa:	85 ff       	sbrs	r24, 5
    93ac:	06 c0       	rjmp	.+12     	; 0x93ba <__vector_7+0x46>
    93ae:	80 91 21 01 	lds	r24, 0x0121
    93b2:	80 62       	ori	r24, 0x20	; 32
    93b4:	81 a3       	std	Z+33, r24	; 0x21
    93b6:	83 e0       	ldi	r24, 0x03	; 3
    93b8:	05 c0       	rjmp	.+10     	; 0x93c4 <__vector_7+0x50>
    93ba:	80 91 21 01 	lds	r24, 0x0121
    93be:	80 61       	ori	r24, 0x10	; 16
    93c0:	81 a3       	std	Z+33, r24	; 0x21
    93c2:	82 e0       	ldi	r24, 0x02	; 2
    93c4:	0e 94 43 49 	call	0x9286	; 0x9286 <findDmaIntElement>
    93c8:	00 97       	sbiw	r24, 0x00	; 0
    93ca:	41 f0       	breq	.+16     	; 0x93dc <__vector_7+0x68>
    93cc:	dc 01       	movw	r26, r24
    93ce:	11 96       	adiw	r26, 0x01	; 1
    93d0:	ed 91       	ld	r30, X+
    93d2:	fc 91       	ld	r31, X
    93d4:	12 97       	sbiw	r26, 0x02	; 2
    93d6:	30 97       	sbiw	r30, 0x00	; 0
    93d8:	09 f0       	breq	.+2      	; 0x93dc <__vector_7+0x68>
    93da:	19 95       	eicall
    93dc:	ff 91       	pop	r31
    93de:	ef 91       	pop	r30
    93e0:	bf 91       	pop	r27
    93e2:	af 91       	pop	r26
    93e4:	9f 91       	pop	r25
    93e6:	8f 91       	pop	r24
    93e8:	7f 91       	pop	r23
    93ea:	6f 91       	pop	r22
    93ec:	5f 91       	pop	r21
    93ee:	4f 91       	pop	r20
    93f0:	3f 91       	pop	r19
    93f2:	2f 91       	pop	r18
    93f4:	0f 90       	pop	r0
    93f6:	0b be       	out	0x3b, r0	; 59
    93f8:	0f 90       	pop	r0
    93fa:	09 be       	out	0x39, r0	; 57
    93fc:	0f 90       	pop	r0
    93fe:	08 be       	out	0x38, r0	; 56
    9400:	0f 90       	pop	r0
    9402:	0f be       	out	0x3f, r0	; 63
    9404:	0f 90       	pop	r0
    9406:	1f 90       	pop	r1
    9408:	18 95       	reti

0000940a <__vector_8>:
    940a:	1f 92       	push	r1
    940c:	0f 92       	push	r0
    940e:	0f b6       	in	r0, 0x3f	; 63
    9410:	0f 92       	push	r0
    9412:	08 b6       	in	r0, 0x38	; 56
    9414:	0f 92       	push	r0
    9416:	09 b6       	in	r0, 0x39	; 57
    9418:	0f 92       	push	r0
    941a:	0b b6       	in	r0, 0x3b	; 59
    941c:	0f 92       	push	r0
    941e:	11 24       	eor	r1, r1
    9420:	2f 93       	push	r18
    9422:	3f 93       	push	r19
    9424:	4f 93       	push	r20
    9426:	5f 93       	push	r21
    9428:	6f 93       	push	r22
    942a:	7f 93       	push	r23
    942c:	8f 93       	push	r24
    942e:	9f 93       	push	r25
    9430:	af 93       	push	r26
    9432:	bf 93       	push	r27
    9434:	ef 93       	push	r30
    9436:	ff 93       	push	r31
    9438:	e0 e0       	ldi	r30, 0x00	; 0
    943a:	f1 e0       	ldi	r31, 0x01	; 1
    943c:	80 91 31 01 	lds	r24, 0x0131
    9440:	85 ff       	sbrs	r24, 5
    9442:	06 c0       	rjmp	.+12     	; 0x9450 <__vector_8+0x46>
    9444:	80 91 31 01 	lds	r24, 0x0131
    9448:	80 62       	ori	r24, 0x20	; 32
    944a:	81 ab       	std	Z+49, r24	; 0x31
    944c:	85 e0       	ldi	r24, 0x05	; 5
    944e:	05 c0       	rjmp	.+10     	; 0x945a <__vector_8+0x50>
    9450:	80 91 31 01 	lds	r24, 0x0131
    9454:	80 61       	ori	r24, 0x10	; 16
    9456:	81 ab       	std	Z+49, r24	; 0x31
    9458:	84 e0       	ldi	r24, 0x04	; 4
    945a:	0e 94 43 49 	call	0x9286	; 0x9286 <findDmaIntElement>
    945e:	00 97       	sbiw	r24, 0x00	; 0
    9460:	41 f0       	breq	.+16     	; 0x9472 <__vector_8+0x68>
    9462:	dc 01       	movw	r26, r24
    9464:	11 96       	adiw	r26, 0x01	; 1
    9466:	ed 91       	ld	r30, X+
    9468:	fc 91       	ld	r31, X
    946a:	12 97       	sbiw	r26, 0x02	; 2
    946c:	30 97       	sbiw	r30, 0x00	; 0
    946e:	09 f0       	breq	.+2      	; 0x9472 <__vector_8+0x68>
    9470:	19 95       	eicall
    9472:	ff 91       	pop	r31
    9474:	ef 91       	pop	r30
    9476:	bf 91       	pop	r27
    9478:	af 91       	pop	r26
    947a:	9f 91       	pop	r25
    947c:	8f 91       	pop	r24
    947e:	7f 91       	pop	r23
    9480:	6f 91       	pop	r22
    9482:	5f 91       	pop	r21
    9484:	4f 91       	pop	r20
    9486:	3f 91       	pop	r19
    9488:	2f 91       	pop	r18
    948a:	0f 90       	pop	r0
    948c:	0b be       	out	0x3b, r0	; 59
    948e:	0f 90       	pop	r0
    9490:	09 be       	out	0x39, r0	; 57
    9492:	0f 90       	pop	r0
    9494:	08 be       	out	0x38, r0	; 56
    9496:	0f 90       	pop	r0
    9498:	0f be       	out	0x3f, r0	; 63
    949a:	0f 90       	pop	r0
    949c:	1f 90       	pop	r1
    949e:	18 95       	reti

000094a0 <__vector_9>:
    94a0:	1f 92       	push	r1
    94a2:	0f 92       	push	r0
    94a4:	0f b6       	in	r0, 0x3f	; 63
    94a6:	0f 92       	push	r0
    94a8:	08 b6       	in	r0, 0x38	; 56
    94aa:	0f 92       	push	r0
    94ac:	09 b6       	in	r0, 0x39	; 57
    94ae:	0f 92       	push	r0
    94b0:	0b b6       	in	r0, 0x3b	; 59
    94b2:	0f 92       	push	r0
    94b4:	11 24       	eor	r1, r1
    94b6:	2f 93       	push	r18
    94b8:	3f 93       	push	r19
    94ba:	4f 93       	push	r20
    94bc:	5f 93       	push	r21
    94be:	6f 93       	push	r22
    94c0:	7f 93       	push	r23
    94c2:	8f 93       	push	r24
    94c4:	9f 93       	push	r25
    94c6:	af 93       	push	r26
    94c8:	bf 93       	push	r27
    94ca:	ef 93       	push	r30
    94cc:	ff 93       	push	r31
    94ce:	80 91 41 01 	lds	r24, 0x0141
    94d2:	85 ff       	sbrs	r24, 5
    94d4:	07 c0       	rjmp	.+14     	; 0x94e4 <__vector_9+0x44>
    94d6:	80 91 41 01 	lds	r24, 0x0141
    94da:	80 62       	ori	r24, 0x20	; 32
    94dc:	80 93 41 01 	sts	0x0141, r24
    94e0:	87 e0       	ldi	r24, 0x07	; 7
    94e2:	06 c0       	rjmp	.+12     	; 0x94f0 <__vector_9+0x50>
    94e4:	80 91 41 01 	lds	r24, 0x0141
    94e8:	80 61       	ori	r24, 0x10	; 16
    94ea:	80 93 41 01 	sts	0x0141, r24
    94ee:	86 e0       	ldi	r24, 0x06	; 6
    94f0:	0e 94 43 49 	call	0x9286	; 0x9286 <findDmaIntElement>
    94f4:	00 97       	sbiw	r24, 0x00	; 0
    94f6:	41 f0       	breq	.+16     	; 0x9508 <__vector_9+0x68>
    94f8:	dc 01       	movw	r26, r24
    94fa:	11 96       	adiw	r26, 0x01	; 1
    94fc:	ed 91       	ld	r30, X+
    94fe:	fc 91       	ld	r31, X
    9500:	12 97       	sbiw	r26, 0x02	; 2
    9502:	30 97       	sbiw	r30, 0x00	; 0
    9504:	09 f0       	breq	.+2      	; 0x9508 <__vector_9+0x68>
    9506:	19 95       	eicall
    9508:	ff 91       	pop	r31
    950a:	ef 91       	pop	r30
    950c:	bf 91       	pop	r27
    950e:	af 91       	pop	r26
    9510:	9f 91       	pop	r25
    9512:	8f 91       	pop	r24
    9514:	7f 91       	pop	r23
    9516:	6f 91       	pop	r22
    9518:	5f 91       	pop	r21
    951a:	4f 91       	pop	r20
    951c:	3f 91       	pop	r19
    951e:	2f 91       	pop	r18
    9520:	0f 90       	pop	r0
    9522:	0b be       	out	0x3b, r0	; 59
    9524:	0f 90       	pop	r0
    9526:	09 be       	out	0x39, r0	; 57
    9528:	0f 90       	pop	r0
    952a:	08 be       	out	0x38, r0	; 56
    952c:	0f 90       	pop	r0
    952e:	0f be       	out	0x3f, r0	; 63
    9530:	0f 90       	pop	r0
    9532:	1f 90       	pop	r1
    9534:	18 95       	reti

00009536 <hal_requestDmaInterrupt>:
    9536:	cf 92       	push	r12
    9538:	df 92       	push	r13
    953a:	ef 92       	push	r14
    953c:	ff 92       	push	r15
    953e:	0f 93       	push	r16
    9540:	1f 93       	push	r17
    9542:	cf 93       	push	r28
    9544:	df 93       	push	r29
    9546:	cd b7       	in	r28, 0x3d	; 61
    9548:	de b7       	in	r29, 0x3e	; 62
    954a:	27 97       	sbiw	r28, 0x07	; 7
    954c:	cd bf       	out	0x3d, r28	; 61
    954e:	de bf       	out	0x3e, r29	; 62
    9550:	8e 83       	std	Y+6, r24	; 0x06
    9552:	9f 83       	std	Y+7, r25	; 0x07
    9554:	06 2f       	mov	r16, r22
    9556:	6a 01       	movw	r12, r20
    9558:	8f b7       	in	r24, 0x3f	; 63
    955a:	89 83       	std	Y+1, r24	; 0x01
    955c:	f8 94       	cli
    955e:	ee 81       	ldd	r30, Y+6	; 0x06
    9560:	ff 81       	ldd	r31, Y+7	; 0x07
    9562:	80 91 e6 21 	lds	r24, 0x21E6
    9566:	90 91 e7 21 	lds	r25, 0x21E7
    956a:	24 81       	ldd	r18, Z+4	; 0x04
    956c:	35 81       	ldd	r19, Z+5	; 0x05
    956e:	28 17       	cp	r18, r24
    9570:	39 07       	cpc	r19, r25
    9572:	21 f0       	breq	.+8      	; 0x957c <hal_requestDmaInterrupt+0x46>
    9574:	89 81       	ldd	r24, Y+1	; 0x01
    9576:	8f bf       	out	0x3f, r24	; 63
    9578:	8e ef       	ldi	r24, 0xFE	; 254
    957a:	51 c0       	rjmp	.+162    	; 0x961e <hal_requestDmaInterrupt+0xe8>
    957c:	ee 81       	ldd	r30, Y+6	; 0x06
    957e:	ff 81       	ldd	r31, Y+7	; 0x07
    9580:	e0 80       	ld	r14, Z
    9582:	f1 80       	ldd	r15, Z+1	; 0x01
    9584:	d7 01       	movw	r26, r14
    9586:	1c 91       	ld	r17, X
    9588:	16 0f       	add	r17, r22
    958a:	18 30       	cpi	r17, 0x08	; 8
    958c:	20 f0       	brcs	.+8      	; 0x9596 <hal_requestDmaInterrupt+0x60>
    958e:	89 81       	ldd	r24, Y+1	; 0x01
    9590:	8f bf       	out	0x3f, r24	; 63
    9592:	8b ef       	ldi	r24, 0xFB	; 251
    9594:	44 c0       	rjmp	.+136    	; 0x961e <hal_requestDmaInterrupt+0xe8>
    9596:	81 2f       	mov	r24, r17
    9598:	0e 94 43 49 	call	0x9286	; 0x9286 <findDmaIntElement>
    959c:	00 97       	sbiw	r24, 0x00	; 0
    959e:	e1 f5       	brne	.+120    	; 0x9618 <hal_requestDmaInterrupt+0xe2>
    95a0:	83 e0       	ldi	r24, 0x03	; 3
    95a2:	90 e0       	ldi	r25, 0x00	; 0
    95a4:	0e 94 b8 8a 	call	0x11570	; 0x11570 <utl_createLink>
    95a8:	8a 83       	std	Y+2, r24	; 0x02
    95aa:	9b 83       	std	Y+3, r25	; 0x03
    95ac:	8a 81       	ldd	r24, Y+2	; 0x02
    95ae:	9b 81       	ldd	r25, Y+3	; 0x03
    95b0:	97 fd       	sbrc	r25, 7
    95b2:	0c c0       	rjmp	.+24     	; 0x95cc <hal_requestDmaInterrupt+0x96>
    95b4:	80 91 d8 21 	lds	r24, 0x21D8
    95b8:	90 91 d9 21 	lds	r25, 0x21D9
    95bc:	6a 81       	ldd	r22, Y+2	; 0x02
    95be:	7b 81       	ldd	r23, Y+3	; 0x03
    95c0:	41 e0       	ldi	r20, 0x01	; 1
    95c2:	0e 94 c8 88 	call	0x11190	; 0x11190 <utl_insertLink>
    95c6:	8a 81       	ldd	r24, Y+2	; 0x02
    95c8:	9b 81       	ldd	r25, Y+3	; 0x03
    95ca:	02 c0       	rjmp	.+4      	; 0x95d0 <hal_requestDmaInterrupt+0x9a>
    95cc:	8f ef       	ldi	r24, 0xFF	; 255
    95ce:	9f ef       	ldi	r25, 0xFF	; 255
    95d0:	8c 83       	std	Y+4, r24	; 0x04
    95d2:	9d 83       	std	Y+5, r25	; 0x05
    95d4:	8c 81       	ldd	r24, Y+4	; 0x04
    95d6:	9d 81       	ldd	r25, Y+5	; 0x05
    95d8:	97 ff       	sbrs	r25, 7
    95da:	04 c0       	rjmp	.+8      	; 0x95e4 <hal_requestDmaInterrupt+0xae>
    95dc:	89 81       	ldd	r24, Y+1	; 0x01
    95de:	8f bf       	out	0x3f, r24	; 63
    95e0:	8f ef       	ldi	r24, 0xFF	; 255
    95e2:	1d c0       	rjmp	.+58     	; 0x961e <hal_requestDmaInterrupt+0xe8>
    95e4:	ec 81       	ldd	r30, Y+4	; 0x04
    95e6:	fd 81       	ldd	r31, Y+5	; 0x05
    95e8:	01 90       	ld	r0, Z+
    95ea:	f0 81       	ld	r31, Z
    95ec:	e0 2d       	mov	r30, r0
    95ee:	10 83       	st	Z, r17
    95f0:	c1 82       	std	Z+1, r12	; 0x01
    95f2:	d2 82       	std	Z+2, r13	; 0x02
    95f4:	f7 01       	movw	r30, r14
    95f6:	82 81       	ldd	r24, Z+2	; 0x02
    95f8:	8f 5f       	subi	r24, 0xFF	; 255
    95fa:	82 83       	std	Z+2, r24	; 0x02
    95fc:	03 80       	ldd	r0, Z+3	; 0x03
    95fe:	f4 81       	ldd	r31, Z+4	; 0x04
    9600:	e0 2d       	mov	r30, r0
    9602:	81 81       	ldd	r24, Z+1	; 0x01
    9604:	00 23       	and	r16, r16
    9606:	11 f4       	brne	.+4      	; 0x960c <hal_requestDmaInterrupt+0xd6>
    9608:	83 60       	ori	r24, 0x03	; 3
    960a:	01 c0       	rjmp	.+2      	; 0x960e <hal_requestDmaInterrupt+0xd8>
    960c:	8c 60       	ori	r24, 0x0C	; 12
    960e:	81 83       	std	Z+1, r24	; 0x01
    9610:	89 81       	ldd	r24, Y+1	; 0x01
    9612:	8f bf       	out	0x3f, r24	; 63
    9614:	80 e0       	ldi	r24, 0x00	; 0
    9616:	03 c0       	rjmp	.+6      	; 0x961e <hal_requestDmaInterrupt+0xe8>
    9618:	89 81       	ldd	r24, Y+1	; 0x01
    961a:	8f bf       	out	0x3f, r24	; 63
    961c:	8a ef       	ldi	r24, 0xFA	; 250
    961e:	27 96       	adiw	r28, 0x07	; 7
    9620:	cd bf       	out	0x3d, r28	; 61
    9622:	de bf       	out	0x3e, r29	; 62
    9624:	df 91       	pop	r29
    9626:	cf 91       	pop	r28
    9628:	1f 91       	pop	r17
    962a:	0f 91       	pop	r16
    962c:	ff 90       	pop	r15
    962e:	ef 90       	pop	r14
    9630:	df 90       	pop	r13
    9632:	cf 90       	pop	r12
    9634:	08 95       	ret

00009636 <hal_releaseDmaInterrupt>:
    9636:	cf 93       	push	r28
    9638:	df 93       	push	r29
    963a:	00 d0       	rcall	.+0      	; 0x963c <hal_releaseDmaInterrupt+0x6>
    963c:	cd b7       	in	r28, 0x3d	; 61
    963e:	de b7       	in	r29, 0x3e	; 62
    9640:	8a 83       	std	Y+2, r24	; 0x02
    9642:	9b 83       	std	Y+3, r25	; 0x03
    9644:	8f b7       	in	r24, 0x3f	; 63
    9646:	89 83       	std	Y+1, r24	; 0x01
    9648:	f8 94       	cli
    964a:	ea 81       	ldd	r30, Y+2	; 0x02
    964c:	fb 81       	ldd	r31, Y+3	; 0x03
    964e:	80 91 e6 21 	lds	r24, 0x21E6
    9652:	90 91 e7 21 	lds	r25, 0x21E7
    9656:	24 81       	ldd	r18, Z+4	; 0x04
    9658:	35 81       	ldd	r19, Z+5	; 0x05
    965a:	28 17       	cp	r18, r24
    965c:	39 07       	cpc	r19, r25
    965e:	21 f0       	breq	.+8      	; 0x9668 <hal_releaseDmaInterrupt+0x32>
    9660:	89 81       	ldd	r24, Y+1	; 0x01
    9662:	8f bf       	out	0x3f, r24	; 63
    9664:	8e ef       	ldi	r24, 0xFE	; 254
    9666:	4d c0       	rjmp	.+154    	; 0x9702 <hal_releaseDmaInterrupt+0xcc>
    9668:	ea 81       	ldd	r30, Y+2	; 0x02
    966a:	fb 81       	ldd	r31, Y+3	; 0x03
    966c:	a0 81       	ld	r26, Z
    966e:	b1 81       	ldd	r27, Z+1	; 0x01
    9670:	2c 91       	ld	r18, X
    9672:	26 0f       	add	r18, r22
    9674:	e0 91 d8 21 	lds	r30, 0x21D8
    9678:	f0 91 d9 21 	lds	r31, 0x21D9
    967c:	42 81       	ldd	r20, Z+2	; 0x02
    967e:	53 81       	ldd	r21, Z+3	; 0x03
    9680:	e0 91 d8 21 	lds	r30, 0x21D8
    9684:	f0 91 d9 21 	lds	r31, 0x21D9
    9688:	30 c0       	rjmp	.+96     	; 0x96ea <hal_releaseDmaInterrupt+0xb4>
    968a:	e0 91 d0 24 	lds	r30, 0x24D0
    968e:	f0 91 d1 24 	lds	r31, 0x24D1
    9692:	01 90       	ld	r0, Z+
    9694:	f0 81       	ld	r31, Z
    9696:	e0 2d       	mov	r30, r0
    9698:	80 81       	ld	r24, Z
    969a:	82 17       	cp	r24, r18
    969c:	01 f5       	brne	.+64     	; 0x96de <hal_releaseDmaInterrupt+0xa8>
    969e:	12 96       	adiw	r26, 0x02	; 2
    96a0:	8c 91       	ld	r24, X
    96a2:	12 97       	sbiw	r26, 0x02	; 2
    96a4:	81 50       	subi	r24, 0x01	; 1
    96a6:	12 96       	adiw	r26, 0x02	; 2
    96a8:	8c 93       	st	X, r24
    96aa:	12 97       	sbiw	r26, 0x02	; 2
    96ac:	13 96       	adiw	r26, 0x03	; 3
    96ae:	ed 91       	ld	r30, X+
    96b0:	fc 91       	ld	r31, X
    96b2:	14 97       	sbiw	r26, 0x04	; 4
    96b4:	81 81       	ldd	r24, Z+1	; 0x01
    96b6:	66 23       	and	r22, r22
    96b8:	11 f4       	brne	.+4      	; 0x96be <hal_releaseDmaInterrupt+0x88>
    96ba:	8c 7f       	andi	r24, 0xFC	; 252
    96bc:	01 c0       	rjmp	.+2      	; 0x96c0 <hal_releaseDmaInterrupt+0x8a>
    96be:	83 7f       	andi	r24, 0xF3	; 243
    96c0:	81 83       	std	Z+1, r24	; 0x01
    96c2:	80 91 d8 21 	lds	r24, 0x21D8
    96c6:	90 91 d9 21 	lds	r25, 0x21D9
    96ca:	60 91 d0 24 	lds	r22, 0x24D0
    96ce:	70 91 d1 24 	lds	r23, 0x24D1
    96d2:	0e 94 c4 89 	call	0x11388	; 0x11388 <utl_destroyLink>
    96d6:	89 81       	ldd	r24, Y+1	; 0x01
    96d8:	8f bf       	out	0x3f, r24	; 63
    96da:	80 e0       	ldi	r24, 0x00	; 0
    96dc:	12 c0       	rjmp	.+36     	; 0x9702 <hal_releaseDmaInterrupt+0xcc>
    96de:	41 50       	subi	r20, 0x01	; 1
    96e0:	50 40       	sbci	r21, 0x00	; 0
    96e2:	e0 91 d0 24 	lds	r30, 0x24D0
    96e6:	f0 91 d1 24 	lds	r31, 0x24D1
    96ea:	80 85       	ldd	r24, Z+8	; 0x08
    96ec:	91 85       	ldd	r25, Z+9	; 0x09
    96ee:	80 93 d0 24 	sts	0x24D0, r24
    96f2:	90 93 d1 24 	sts	0x24D1, r25
    96f6:	14 16       	cp	r1, r20
    96f8:	15 06       	cpc	r1, r21
    96fa:	3c f2       	brlt	.-114    	; 0x968a <hal_releaseDmaInterrupt+0x54>
    96fc:	89 81       	ldd	r24, Y+1	; 0x01
    96fe:	8f bf       	out	0x3f, r24	; 63
    9700:	8b ef       	ldi	r24, 0xFB	; 251
    9702:	23 96       	adiw	r28, 0x03	; 3
    9704:	cd bf       	out	0x3d, r28	; 61
    9706:	de bf       	out	0x3e, r29	; 62
    9708:	df 91       	pop	r29
    970a:	cf 91       	pop	r28
    970c:	08 95       	ret

0000970e <hal_requestDmaChannel>:
    970e:	1f 93       	push	r17
    9710:	cf 93       	push	r28
    9712:	df 93       	push	r29
    9714:	cd b7       	in	r28, 0x3d	; 61
    9716:	de b7       	in	r29, 0x3e	; 62
    9718:	25 97       	sbiw	r28, 0x05	; 5
    971a:	cd bf       	out	0x3d, r28	; 61
    971c:	de bf       	out	0x3e, r29	; 62
    971e:	8f b7       	in	r24, 0x3f	; 63
    9720:	89 83       	std	Y+1, r24	; 0x01
    9722:	f8 94       	cli
    9724:	80 91 f4 21 	lds	r24, 0x21F4
    9728:	88 23       	and	r24, r24
    972a:	d9 f0       	breq	.+54     	; 0x9762 <hal_requestDmaChannel+0x54>
    972c:	8f b7       	in	r24, 0x3f	; 63
    972e:	8a 83       	std	Y+2, r24	; 0x02
    9730:	f8 94       	cli
    9732:	80 91 00 01 	lds	r24, 0x0100
    9736:	8f 77       	andi	r24, 0x7F	; 127
    9738:	80 93 00 01 	sts	0x0100, r24
    973c:	80 91 00 01 	lds	r24, 0x0100
    9740:	83 7f       	andi	r24, 0xF3	; 243
    9742:	80 93 00 01 	sts	0x0100, r24
    9746:	80 91 00 01 	lds	r24, 0x0100
    974a:	83 60       	ori	r24, 0x03	; 3
    974c:	80 93 00 01 	sts	0x0100, r24
    9750:	80 91 00 01 	lds	r24, 0x0100
    9754:	80 68       	ori	r24, 0x80	; 128
    9756:	80 93 00 01 	sts	0x0100, r24
    975a:	8a 81       	ldd	r24, Y+2	; 0x02
    975c:	8f bf       	out	0x3f, r24	; 63
    975e:	10 92 f4 21 	sts	0x21F4, r1
    9762:	44 e0       	ldi	r20, 0x04	; 4
    9764:	50 e0       	ldi	r21, 0x00	; 0
    9766:	10 e0       	ldi	r17, 0x00	; 0
    9768:	e0 91 e6 21 	lds	r30, 0x21E6
    976c:	f0 91 e7 21 	lds	r31, 0x21E7
    9770:	82 81       	ldd	r24, Z+2	; 0x02
    9772:	93 81       	ldd	r25, Z+3	; 0x03
    9774:	e0 91 e6 21 	lds	r30, 0x21E6
    9778:	f0 91 e7 21 	lds	r31, 0x21E7
    977c:	0b c0       	rjmp	.+22     	; 0x9794 <hal_requestDmaChannel+0x86>
    977e:	ea 81       	ldd	r30, Y+2	; 0x02
    9780:	fb 81       	ldd	r31, Y+3	; 0x03
    9782:	01 90       	ld	r0, Z+
    9784:	f0 81       	ld	r31, Z
    9786:	e0 2d       	mov	r30, r0
    9788:	20 81       	ld	r18, Z
    978a:	21 17       	cp	r18, r17
    978c:	59 f0       	breq	.+22     	; 0x97a4 <hal_requestDmaChannel+0x96>
    978e:	01 97       	sbiw	r24, 0x01	; 1
    9790:	ea 81       	ldd	r30, Y+2	; 0x02
    9792:	fb 81       	ldd	r31, Y+3	; 0x03
    9794:	20 85       	ldd	r18, Z+8	; 0x08
    9796:	31 85       	ldd	r19, Z+9	; 0x09
    9798:	2a 83       	std	Y+2, r18	; 0x02
    979a:	3b 83       	std	Y+3, r19	; 0x03
    979c:	18 16       	cp	r1, r24
    979e:	19 06       	cpc	r1, r25
    97a0:	74 f3       	brlt	.-36     	; 0x977e <hal_requestDmaChannel+0x70>
    97a2:	07 c0       	rjmp	.+14     	; 0x97b2 <hal_requestDmaChannel+0xa4>
    97a4:	30 97       	sbiw	r30, 0x00	; 0
    97a6:	29 f0       	breq	.+10     	; 0x97b2 <hal_requestDmaChannel+0xa4>
    97a8:	1e 5f       	subi	r17, 0xFE	; 254
    97aa:	41 50       	subi	r20, 0x01	; 1
    97ac:	50 40       	sbci	r21, 0x00	; 0
    97ae:	e1 f6       	brne	.-72     	; 0x9768 <hal_requestDmaChannel+0x5a>
    97b0:	4f c0       	rjmp	.+158    	; 0x9850 <hal_requestDmaChannel+0x142>
    97b2:	85 e0       	ldi	r24, 0x05	; 5
    97b4:	90 e0       	ldi	r25, 0x00	; 0
    97b6:	0e 94 b8 8a 	call	0x11570	; 0x11570 <utl_createLink>
    97ba:	8a 83       	std	Y+2, r24	; 0x02
    97bc:	9b 83       	std	Y+3, r25	; 0x03
    97be:	8a 81       	ldd	r24, Y+2	; 0x02
    97c0:	9b 81       	ldd	r25, Y+3	; 0x03
    97c2:	97 fd       	sbrc	r25, 7
    97c4:	2d c0       	rjmp	.+90     	; 0x9820 <hal_requestDmaChannel+0x112>
    97c6:	ea 81       	ldd	r30, Y+2	; 0x02
    97c8:	fb 81       	ldd	r31, Y+3	; 0x03
    97ca:	01 90       	ld	r0, Z+
    97cc:	f0 81       	ld	r31, Z
    97ce:	e0 2d       	mov	r30, r0
    97d0:	11 82       	std	Z+1, r1	; 0x01
    97d2:	10 83       	st	Z, r17
    97d4:	12 82       	std	Z+2, r1	; 0x02
    97d6:	12 30       	cpi	r17, 0x02	; 2
    97d8:	69 f0       	breq	.+26     	; 0x97f4 <hal_requestDmaChannel+0xe6>
    97da:	13 30       	cpi	r17, 0x03	; 3
    97dc:	18 f4       	brcc	.+6      	; 0x97e4 <hal_requestDmaChannel+0xd6>
    97de:	11 23       	and	r17, r17
    97e0:	31 f0       	breq	.+12     	; 0x97ee <hal_requestDmaChannel+0xe0>
    97e2:	12 c0       	rjmp	.+36     	; 0x9808 <hal_requestDmaChannel+0xfa>
    97e4:	14 30       	cpi	r17, 0x04	; 4
    97e6:	49 f0       	breq	.+18     	; 0x97fa <hal_requestDmaChannel+0xec>
    97e8:	16 30       	cpi	r17, 0x06	; 6
    97ea:	71 f4       	brne	.+28     	; 0x9808 <hal_requestDmaChannel+0xfa>
    97ec:	09 c0       	rjmp	.+18     	; 0x9800 <hal_requestDmaChannel+0xf2>
    97ee:	80 e1       	ldi	r24, 0x10	; 16
    97f0:	91 e0       	ldi	r25, 0x01	; 1
    97f2:	08 c0       	rjmp	.+16     	; 0x9804 <hal_requestDmaChannel+0xf6>
    97f4:	80 e2       	ldi	r24, 0x20	; 32
    97f6:	91 e0       	ldi	r25, 0x01	; 1
    97f8:	05 c0       	rjmp	.+10     	; 0x9804 <hal_requestDmaChannel+0xf6>
    97fa:	80 e3       	ldi	r24, 0x30	; 48
    97fc:	91 e0       	ldi	r25, 0x01	; 1
    97fe:	02 c0       	rjmp	.+4      	; 0x9804 <hal_requestDmaChannel+0xf6>
    9800:	80 e4       	ldi	r24, 0x40	; 64
    9802:	91 e0       	ldi	r25, 0x01	; 1
    9804:	83 83       	std	Z+3, r24	; 0x03
    9806:	94 83       	std	Z+4, r25	; 0x04
    9808:	80 91 e6 21 	lds	r24, 0x21E6
    980c:	90 91 e7 21 	lds	r25, 0x21E7
    9810:	6a 81       	ldd	r22, Y+2	; 0x02
    9812:	7b 81       	ldd	r23, Y+3	; 0x03
    9814:	41 e0       	ldi	r20, 0x01	; 1
    9816:	0e 94 c8 88 	call	0x11190	; 0x11190 <utl_insertLink>
    981a:	8a 81       	ldd	r24, Y+2	; 0x02
    981c:	9b 81       	ldd	r25, Y+3	; 0x03
    981e:	02 c0       	rjmp	.+4      	; 0x9824 <hal_requestDmaChannel+0x116>
    9820:	8f ef       	ldi	r24, 0xFF	; 255
    9822:	9f ef       	ldi	r25, 0xFF	; 255
    9824:	8c 83       	std	Y+4, r24	; 0x04
    9826:	9d 83       	std	Y+5, r25	; 0x05
    9828:	8c 81       	ldd	r24, Y+4	; 0x04
    982a:	9d 81       	ldd	r25, Y+5	; 0x05
    982c:	97 ff       	sbrs	r25, 7
    982e:	05 c0       	rjmp	.+10     	; 0x983a <hal_requestDmaChannel+0x12c>
    9830:	89 81       	ldd	r24, Y+1	; 0x01
    9832:	8f bf       	out	0x3f, r24	; 63
    9834:	8f ef       	ldi	r24, 0xFF	; 255
    9836:	9f ef       	ldi	r25, 0xFF	; 255
    9838:	04 c0       	rjmp	.+8      	; 0x9842 <hal_requestDmaChannel+0x134>
    983a:	89 81       	ldd	r24, Y+1	; 0x01
    983c:	8f bf       	out	0x3f, r24	; 63
    983e:	8c 81       	ldd	r24, Y+4	; 0x04
    9840:	9d 81       	ldd	r25, Y+5	; 0x05
    9842:	25 96       	adiw	r28, 0x05	; 5
    9844:	cd bf       	out	0x3d, r28	; 61
    9846:	de bf       	out	0x3e, r29	; 62
    9848:	df 91       	pop	r29
    984a:	cf 91       	pop	r28
    984c:	1f 91       	pop	r17
    984e:	08 95       	ret
    9850:	89 81       	ldd	r24, Y+1	; 0x01
    9852:	8f bf       	out	0x3f, r24	; 63
    9854:	89 ef       	ldi	r24, 0xF9	; 249
    9856:	9f ef       	ldi	r25, 0xFF	; 255
    9858:	f4 cf       	rjmp	.-24     	; 0x9842 <hal_requestDmaChannel+0x134>

0000985a <hal_releaseDmaChannel>:
    985a:	af 92       	push	r10
    985c:	bf 92       	push	r11
    985e:	cf 92       	push	r12
    9860:	df 92       	push	r13
    9862:	ef 92       	push	r14
    9864:	ff 92       	push	r15
    9866:	0f 93       	push	r16
    9868:	1f 93       	push	r17
    986a:	cf 93       	push	r28
    986c:	df 93       	push	r29
    986e:	00 d0       	rcall	.+0      	; 0x9870 <hal_releaseDmaChannel+0x16>
    9870:	cd b7       	in	r28, 0x3d	; 61
    9872:	de b7       	in	r29, 0x3e	; 62
    9874:	8a 83       	std	Y+2, r24	; 0x02
    9876:	9b 83       	std	Y+3, r25	; 0x03
    9878:	8f b7       	in	r24, 0x3f	; 63
    987a:	89 83       	std	Y+1, r24	; 0x01
    987c:	f8 94       	cli
    987e:	ea 81       	ldd	r30, Y+2	; 0x02
    9880:	fb 81       	ldd	r31, Y+3	; 0x03
    9882:	80 91 e6 21 	lds	r24, 0x21E6
    9886:	90 91 e7 21 	lds	r25, 0x21E7
    988a:	24 81       	ldd	r18, Z+4	; 0x04
    988c:	35 81       	ldd	r19, Z+5	; 0x05
    988e:	28 17       	cp	r18, r24
    9890:	39 07       	cpc	r19, r25
    9892:	21 f0       	breq	.+8      	; 0x989c <hal_releaseDmaChannel+0x42>
    9894:	89 81       	ldd	r24, Y+1	; 0x01
    9896:	8f bf       	out	0x3f, r24	; 63
    9898:	8e ef       	ldi	r24, 0xFE	; 254
    989a:	8a c0       	rjmp	.+276    	; 0x99b0 <hal_releaseDmaChannel+0x156>
    989c:	ea 81       	ldd	r30, Y+2	; 0x02
    989e:	fb 81       	ldd	r31, Y+3	; 0x03
    98a0:	00 81       	ld	r16, Z
    98a2:	11 81       	ldd	r17, Z+1	; 0x01
    98a4:	82 e0       	ldi	r24, 0x02	; 2
    98a6:	a8 2e       	mov	r10, r24
    98a8:	b1 2c       	mov	r11, r1
    98aa:	ff 24       	eor	r15, r15
    98ac:	d8 01       	movw	r26, r16
    98ae:	ec 90       	ld	r14, X
    98b0:	ef 0c       	add	r14, r15
    98b2:	e0 91 d8 21 	lds	r30, 0x21D8
    98b6:	f0 91 d9 21 	lds	r31, 0x21D9
    98ba:	c2 80       	ldd	r12, Z+2	; 0x02
    98bc:	d3 80       	ldd	r13, Z+3	; 0x03
    98be:	e0 91 d8 21 	lds	r30, 0x21D8
    98c2:	f0 91 d9 21 	lds	r31, 0x21D9
    98c6:	3a c0       	rjmp	.+116    	; 0x993c <hal_releaseDmaChannel+0xe2>
    98c8:	e0 91 d4 24 	lds	r30, 0x24D4
    98cc:	f0 91 d5 24 	lds	r31, 0x24D5
    98d0:	a0 81       	ld	r26, Z
    98d2:	b1 81       	ldd	r27, Z+1	; 0x01
    98d4:	e0 91 d4 24 	lds	r30, 0x24D4
    98d8:	f0 91 d5 24 	lds	r31, 0x24D5
    98dc:	82 85       	ldd	r24, Z+10	; 0x0a
    98de:	93 85       	ldd	r25, Z+11	; 0x0b
    98e0:	80 93 d2 24 	sts	0x24D2, r24
    98e4:	90 93 d3 24 	sts	0x24D3, r25
    98e8:	8c 91       	ld	r24, X
    98ea:	8e 15       	cp	r24, r14
    98ec:	01 f5       	brne	.+64     	; 0x992e <hal_releaseDmaChannel+0xd4>
    98ee:	f8 01       	movw	r30, r16
    98f0:	82 81       	ldd	r24, Z+2	; 0x02
    98f2:	81 50       	subi	r24, 0x01	; 1
    98f4:	82 83       	std	Z+2, r24	; 0x02
    98f6:	03 80       	ldd	r0, Z+3	; 0x03
    98f8:	f4 81       	ldd	r31, Z+4	; 0x04
    98fa:	e0 2d       	mov	r30, r0
    98fc:	81 81       	ldd	r24, Z+1	; 0x01
    98fe:	ff 20       	and	r15, r15
    9900:	11 f4       	brne	.+4      	; 0x9906 <hal_releaseDmaChannel+0xac>
    9902:	8c 7f       	andi	r24, 0xFC	; 252
    9904:	01 c0       	rjmp	.+2      	; 0x9908 <hal_releaseDmaChannel+0xae>
    9906:	83 7f       	andi	r24, 0xF3	; 243
    9908:	81 83       	std	Z+1, r24	; 0x01
    990a:	80 91 d8 21 	lds	r24, 0x21D8
    990e:	90 91 d9 21 	lds	r25, 0x21D9
    9912:	60 91 d4 24 	lds	r22, 0x24D4
    9916:	70 91 d5 24 	lds	r23, 0x24D5
    991a:	0e 94 c4 89 	call	0x11388	; 0x11388 <utl_destroyLink>
    991e:	80 91 d2 24 	lds	r24, 0x24D2
    9922:	90 91 d3 24 	lds	r25, 0x24D3
    9926:	80 93 d4 24 	sts	0x24D4, r24
    992a:	90 93 d5 24 	sts	0x24D5, r25
    992e:	08 94       	sec
    9930:	c1 08       	sbc	r12, r1
    9932:	d1 08       	sbc	r13, r1
    9934:	e0 91 d4 24 	lds	r30, 0x24D4
    9938:	f0 91 d5 24 	lds	r31, 0x24D5
    993c:	80 85       	ldd	r24, Z+8	; 0x08
    993e:	91 85       	ldd	r25, Z+9	; 0x09
    9940:	80 93 d4 24 	sts	0x24D4, r24
    9944:	90 93 d5 24 	sts	0x24D5, r25
    9948:	1c 14       	cp	r1, r12
    994a:	1d 04       	cpc	r1, r13
    994c:	0c f4       	brge	.+2      	; 0x9950 <hal_releaseDmaChannel+0xf6>
    994e:	bc cf       	rjmp	.-136    	; 0x98c8 <hal_releaseDmaChannel+0x6e>
    9950:	f3 94       	inc	r15
    9952:	08 94       	sec
    9954:	a1 08       	sbc	r10, r1
    9956:	b1 08       	sbc	r11, r1
    9958:	a1 14       	cp	r10, r1
    995a:	b1 04       	cpc	r11, r1
    995c:	09 f0       	breq	.+2      	; 0x9960 <hal_releaseDmaChannel+0x106>
    995e:	a6 cf       	rjmp	.-180    	; 0x98ac <hal_releaseDmaChannel+0x52>
    9960:	d8 01       	movw	r26, r16
    9962:	13 96       	adiw	r26, 0x03	; 3
    9964:	ed 91       	ld	r30, X+
    9966:	fc 91       	ld	r31, X
    9968:	14 97       	sbiw	r26, 0x04	; 4
    996a:	80 81       	ld	r24, Z
    996c:	8f 77       	andi	r24, 0x7F	; 127
    996e:	80 83       	st	Z, r24
    9970:	13 96       	adiw	r26, 0x03	; 3
    9972:	ed 91       	ld	r30, X+
    9974:	fc 91       	ld	r31, X
    9976:	14 97       	sbiw	r26, 0x04	; 4
    9978:	80 81       	ld	r24, Z
    997a:	8f 77       	andi	r24, 0x7F	; 127
    997c:	80 83       	st	Z, r24
    997e:	13 96       	adiw	r26, 0x03	; 3
    9980:	ed 91       	ld	r30, X+
    9982:	fc 91       	ld	r31, X
    9984:	14 97       	sbiw	r26, 0x04	; 4
    9986:	80 81       	ld	r24, Z
    9988:	80 64       	ori	r24, 0x40	; 64
    998a:	80 83       	st	Z, r24
    998c:	13 96       	adiw	r26, 0x03	; 3
    998e:	ed 91       	ld	r30, X+
    9990:	fc 91       	ld	r31, X
    9992:	14 97       	sbiw	r26, 0x04	; 4
    9994:	80 81       	ld	r24, Z
    9996:	8f 7b       	andi	r24, 0xBF	; 191
    9998:	80 83       	st	Z, r24
    999a:	80 91 e6 21 	lds	r24, 0x21E6
    999e:	90 91 e7 21 	lds	r25, 0x21E7
    99a2:	6a 81       	ldd	r22, Y+2	; 0x02
    99a4:	7b 81       	ldd	r23, Y+3	; 0x03
    99a6:	0e 94 c4 89 	call	0x11388	; 0x11388 <utl_destroyLink>
    99aa:	89 81       	ldd	r24, Y+1	; 0x01
    99ac:	8f bf       	out	0x3f, r24	; 63
    99ae:	80 e0       	ldi	r24, 0x00	; 0
    99b0:	23 96       	adiw	r28, 0x03	; 3
    99b2:	cd bf       	out	0x3d, r28	; 61
    99b4:	de bf       	out	0x3e, r29	; 62
    99b6:	df 91       	pop	r29
    99b8:	cf 91       	pop	r28
    99ba:	1f 91       	pop	r17
    99bc:	0f 91       	pop	r16
    99be:	ff 90       	pop	r15
    99c0:	ef 90       	pop	r14
    99c2:	df 90       	pop	r13
    99c4:	cf 90       	pop	r12
    99c6:	bf 90       	pop	r11
    99c8:	af 90       	pop	r10
    99ca:	08 95       	ret

000099cc <hal_setDmaBlockSize>:
    99cc:	cf 93       	push	r28
    99ce:	df 93       	push	r29
    99d0:	00 d0       	rcall	.+0      	; 0x99d2 <hal_setDmaBlockSize+0x6>
    99d2:	cd b7       	in	r28, 0x3d	; 61
    99d4:	de b7       	in	r29, 0x3e	; 62
    99d6:	8a 83       	std	Y+2, r24	; 0x02
    99d8:	9b 83       	std	Y+3, r25	; 0x03
    99da:	8f b7       	in	r24, 0x3f	; 63
    99dc:	89 83       	std	Y+1, r24	; 0x01
    99de:	f8 94       	cli
    99e0:	61 15       	cp	r22, r1
    99e2:	71 05       	cpc	r23, r1
    99e4:	21 f4       	brne	.+8      	; 0x99ee <hal_setDmaBlockSize+0x22>
    99e6:	89 81       	ldd	r24, Y+1	; 0x01
    99e8:	8f bf       	out	0x3f, r24	; 63
    99ea:	84 ef       	ldi	r24, 0xF4	; 244
    99ec:	21 c0       	rjmp	.+66     	; 0x9a30 <hal_setDmaBlockSize+0x64>
    99ee:	ea 81       	ldd	r30, Y+2	; 0x02
    99f0:	fb 81       	ldd	r31, Y+3	; 0x03
    99f2:	80 91 e6 21 	lds	r24, 0x21E6
    99f6:	90 91 e7 21 	lds	r25, 0x21E7
    99fa:	24 81       	ldd	r18, Z+4	; 0x04
    99fc:	35 81       	ldd	r19, Z+5	; 0x05
    99fe:	28 17       	cp	r18, r24
    9a00:	39 07       	cpc	r19, r25
    9a02:	21 f0       	breq	.+8      	; 0x9a0c <hal_setDmaBlockSize+0x40>
    9a04:	89 81       	ldd	r24, Y+1	; 0x01
    9a06:	8f bf       	out	0x3f, r24	; 63
    9a08:	8e ef       	ldi	r24, 0xFE	; 254
    9a0a:	12 c0       	rjmp	.+36     	; 0x9a30 <hal_setDmaBlockSize+0x64>
    9a0c:	ea 81       	ldd	r30, Y+2	; 0x02
    9a0e:	fb 81       	ldd	r31, Y+3	; 0x03
    9a10:	01 90       	ld	r0, Z+
    9a12:	f0 81       	ld	r31, Z
    9a14:	e0 2d       	mov	r30, r0
    9a16:	a3 81       	ldd	r26, Z+3	; 0x03
    9a18:	b4 81       	ldd	r27, Z+4	; 0x04
    9a1a:	8c 91       	ld	r24, X
    9a1c:	8f 77       	andi	r24, 0x7F	; 127
    9a1e:	8c 93       	st	X, r24
    9a20:	03 80       	ldd	r0, Z+3	; 0x03
    9a22:	f4 81       	ldd	r31, Z+4	; 0x04
    9a24:	e0 2d       	mov	r30, r0
    9a26:	64 83       	std	Z+4, r22	; 0x04
    9a28:	75 83       	std	Z+5, r23	; 0x05
    9a2a:	89 81       	ldd	r24, Y+1	; 0x01
    9a2c:	8f bf       	out	0x3f, r24	; 63
    9a2e:	80 e0       	ldi	r24, 0x00	; 0
    9a30:	23 96       	adiw	r28, 0x03	; 3
    9a32:	cd bf       	out	0x3d, r28	; 61
    9a34:	de bf       	out	0x3e, r29	; 62
    9a36:	df 91       	pop	r29
    9a38:	cf 91       	pop	r28
    9a3a:	08 95       	ret

00009a3c <hal_setDmaSourceAddress>:
    9a3c:	cf 92       	push	r12
    9a3e:	df 92       	push	r13
    9a40:	ef 92       	push	r14
    9a42:	ff 92       	push	r15
    9a44:	cf 93       	push	r28
    9a46:	df 93       	push	r29
    9a48:	00 d0       	rcall	.+0      	; 0x9a4a <hal_setDmaSourceAddress+0xe>
    9a4a:	cd b7       	in	r28, 0x3d	; 61
    9a4c:	de b7       	in	r29, 0x3e	; 62
    9a4e:	8a 83       	std	Y+2, r24	; 0x02
    9a50:	9b 83       	std	Y+3, r25	; 0x03
    9a52:	6a 01       	movw	r12, r20
    9a54:	7b 01       	movw	r14, r22
    9a56:	8f b7       	in	r24, 0x3f	; 63
    9a58:	89 83       	std	Y+1, r24	; 0x01
    9a5a:	f8 94       	cli
    9a5c:	ea 81       	ldd	r30, Y+2	; 0x02
    9a5e:	fb 81       	ldd	r31, Y+3	; 0x03
    9a60:	80 91 e6 21 	lds	r24, 0x21E6
    9a64:	90 91 e7 21 	lds	r25, 0x21E7
    9a68:	24 81       	ldd	r18, Z+4	; 0x04
    9a6a:	35 81       	ldd	r19, Z+5	; 0x05
    9a6c:	28 17       	cp	r18, r24
    9a6e:	39 07       	cpc	r19, r25
    9a70:	21 f0       	breq	.+8      	; 0x9a7a <hal_setDmaSourceAddress+0x3e>
    9a72:	89 81       	ldd	r24, Y+1	; 0x01
    9a74:	8f bf       	out	0x3f, r24	; 63
    9a76:	8e ef       	ldi	r24, 0xFE	; 254
    9a78:	21 c0       	rjmp	.+66     	; 0x9abc <hal_setDmaSourceAddress+0x80>
    9a7a:	ea 81       	ldd	r30, Y+2	; 0x02
    9a7c:	fb 81       	ldd	r31, Y+3	; 0x03
    9a7e:	01 90       	ld	r0, Z+
    9a80:	f0 81       	ld	r31, Z
    9a82:	e0 2d       	mov	r30, r0
    9a84:	a3 81       	ldd	r26, Z+3	; 0x03
    9a86:	b4 81       	ldd	r27, Z+4	; 0x04
    9a88:	8c 91       	ld	r24, X
    9a8a:	8f 77       	andi	r24, 0x7F	; 127
    9a8c:	8c 93       	st	X, r24
    9a8e:	a3 81       	ldd	r26, Z+3	; 0x03
    9a90:	b4 81       	ldd	r27, Z+4	; 0x04
    9a92:	18 96       	adiw	r26, 0x08	; 8
    9a94:	4c 93       	st	X, r20
    9a96:	a3 81       	ldd	r26, Z+3	; 0x03
    9a98:	b4 81       	ldd	r27, Z+4	; 0x04
    9a9a:	45 2f       	mov	r20, r21
    9a9c:	56 2f       	mov	r21, r22
    9a9e:	67 2f       	mov	r22, r23
    9aa0:	77 27       	eor	r23, r23
    9aa2:	19 96       	adiw	r26, 0x09	; 9
    9aa4:	4c 93       	st	X, r20
    9aa6:	19 97       	sbiw	r26, 0x09	; 9
    9aa8:	03 80       	ldd	r0, Z+3	; 0x03
    9aaa:	f4 81       	ldd	r31, Z+4	; 0x04
    9aac:	e0 2d       	mov	r30, r0
    9aae:	67 01       	movw	r12, r14
    9ab0:	ee 24       	eor	r14, r14
    9ab2:	ff 24       	eor	r15, r15
    9ab4:	c2 86       	std	Z+10, r12	; 0x0a
    9ab6:	89 81       	ldd	r24, Y+1	; 0x01
    9ab8:	8f bf       	out	0x3f, r24	; 63
    9aba:	80 e0       	ldi	r24, 0x00	; 0
    9abc:	23 96       	adiw	r28, 0x03	; 3
    9abe:	cd bf       	out	0x3d, r28	; 61
    9ac0:	de bf       	out	0x3e, r29	; 62
    9ac2:	df 91       	pop	r29
    9ac4:	cf 91       	pop	r28
    9ac6:	ff 90       	pop	r15
    9ac8:	ef 90       	pop	r14
    9aca:	df 90       	pop	r13
    9acc:	cf 90       	pop	r12
    9ace:	08 95       	ret

00009ad0 <hal_setDmaDestAddress>:
    9ad0:	cf 92       	push	r12
    9ad2:	df 92       	push	r13
    9ad4:	ef 92       	push	r14
    9ad6:	ff 92       	push	r15
    9ad8:	cf 93       	push	r28
    9ada:	df 93       	push	r29
    9adc:	00 d0       	rcall	.+0      	; 0x9ade <hal_setDmaDestAddress+0xe>
    9ade:	cd b7       	in	r28, 0x3d	; 61
    9ae0:	de b7       	in	r29, 0x3e	; 62
    9ae2:	8a 83       	std	Y+2, r24	; 0x02
    9ae4:	9b 83       	std	Y+3, r25	; 0x03
    9ae6:	6a 01       	movw	r12, r20
    9ae8:	7b 01       	movw	r14, r22
    9aea:	8f b7       	in	r24, 0x3f	; 63
    9aec:	89 83       	std	Y+1, r24	; 0x01
    9aee:	f8 94       	cli
    9af0:	ea 81       	ldd	r30, Y+2	; 0x02
    9af2:	fb 81       	ldd	r31, Y+3	; 0x03
    9af4:	80 91 e6 21 	lds	r24, 0x21E6
    9af8:	90 91 e7 21 	lds	r25, 0x21E7
    9afc:	24 81       	ldd	r18, Z+4	; 0x04
    9afe:	35 81       	ldd	r19, Z+5	; 0x05
    9b00:	28 17       	cp	r18, r24
    9b02:	39 07       	cpc	r19, r25
    9b04:	21 f0       	breq	.+8      	; 0x9b0e <hal_setDmaDestAddress+0x3e>
    9b06:	89 81       	ldd	r24, Y+1	; 0x01
    9b08:	8f bf       	out	0x3f, r24	; 63
    9b0a:	8e ef       	ldi	r24, 0xFE	; 254
    9b0c:	21 c0       	rjmp	.+66     	; 0x9b50 <hal_setDmaDestAddress+0x80>
    9b0e:	ea 81       	ldd	r30, Y+2	; 0x02
    9b10:	fb 81       	ldd	r31, Y+3	; 0x03
    9b12:	01 90       	ld	r0, Z+
    9b14:	f0 81       	ld	r31, Z
    9b16:	e0 2d       	mov	r30, r0
    9b18:	a3 81       	ldd	r26, Z+3	; 0x03
    9b1a:	b4 81       	ldd	r27, Z+4	; 0x04
    9b1c:	8c 91       	ld	r24, X
    9b1e:	8f 77       	andi	r24, 0x7F	; 127
    9b20:	8c 93       	st	X, r24
    9b22:	a3 81       	ldd	r26, Z+3	; 0x03
    9b24:	b4 81       	ldd	r27, Z+4	; 0x04
    9b26:	1c 96       	adiw	r26, 0x0c	; 12
    9b28:	4c 93       	st	X, r20
    9b2a:	a3 81       	ldd	r26, Z+3	; 0x03
    9b2c:	b4 81       	ldd	r27, Z+4	; 0x04
    9b2e:	45 2f       	mov	r20, r21
    9b30:	56 2f       	mov	r21, r22
    9b32:	67 2f       	mov	r22, r23
    9b34:	77 27       	eor	r23, r23
    9b36:	1d 96       	adiw	r26, 0x0d	; 13
    9b38:	4c 93       	st	X, r20
    9b3a:	1d 97       	sbiw	r26, 0x0d	; 13
    9b3c:	03 80       	ldd	r0, Z+3	; 0x03
    9b3e:	f4 81       	ldd	r31, Z+4	; 0x04
    9b40:	e0 2d       	mov	r30, r0
    9b42:	67 01       	movw	r12, r14
    9b44:	ee 24       	eor	r14, r14
    9b46:	ff 24       	eor	r15, r15
    9b48:	c6 86       	std	Z+14, r12	; 0x0e
    9b4a:	89 81       	ldd	r24, Y+1	; 0x01
    9b4c:	8f bf       	out	0x3f, r24	; 63
    9b4e:	80 e0       	ldi	r24, 0x00	; 0
    9b50:	23 96       	adiw	r28, 0x03	; 3
    9b52:	cd bf       	out	0x3d, r28	; 61
    9b54:	de bf       	out	0x3e, r29	; 62
    9b56:	df 91       	pop	r29
    9b58:	cf 91       	pop	r28
    9b5a:	ff 90       	pop	r15
    9b5c:	ef 90       	pop	r14
    9b5e:	df 90       	pop	r13
    9b60:	cf 90       	pop	r12
    9b62:	08 95       	ret

00009b64 <hal_getDmaStatus>:
    9b64:	cf 93       	push	r28
    9b66:	df 93       	push	r29
    9b68:	0f 92       	push	r0
    9b6a:	0f 92       	push	r0
    9b6c:	cd b7       	in	r28, 0x3d	; 61
    9b6e:	de b7       	in	r29, 0x3e	; 62
    9b70:	89 83       	std	Y+1, r24	; 0x01
    9b72:	9a 83       	std	Y+2, r25	; 0x02
    9b74:	e9 81       	ldd	r30, Y+1	; 0x01
    9b76:	fa 81       	ldd	r31, Y+2	; 0x02
    9b78:	80 91 e6 21 	lds	r24, 0x21E6
    9b7c:	90 91 e7 21 	lds	r25, 0x21E7
    9b80:	24 81       	ldd	r18, Z+4	; 0x04
    9b82:	35 81       	ldd	r19, Z+5	; 0x05
    9b84:	28 17       	cp	r18, r24
    9b86:	39 07       	cpc	r19, r25
    9b88:	71 f4       	brne	.+28     	; 0x9ba6 <hal_getDmaStatus+0x42>
    9b8a:	e9 81       	ldd	r30, Y+1	; 0x01
    9b8c:	fa 81       	ldd	r31, Y+2	; 0x02
    9b8e:	01 90       	ld	r0, Z+
    9b90:	f0 81       	ld	r31, Z
    9b92:	e0 2d       	mov	r30, r0
    9b94:	03 80       	ldd	r0, Z+3	; 0x03
    9b96:	f4 81       	ldd	r31, Z+4	; 0x04
    9b98:	e0 2d       	mov	r30, r0
    9b9a:	81 81       	ldd	r24, Z+1	; 0x01
    9b9c:	88 1f       	adc	r24, r24
    9b9e:	88 27       	eor	r24, r24
    9ba0:	88 1f       	adc	r24, r24
    9ba2:	90 e0       	ldi	r25, 0x00	; 0
    9ba4:	02 c0       	rjmp	.+4      	; 0x9baa <hal_getDmaStatus+0x46>
    9ba6:	8e ef       	ldi	r24, 0xFE	; 254
    9ba8:	9f ef       	ldi	r25, 0xFF	; 255
    9baa:	0f 90       	pop	r0
    9bac:	0f 90       	pop	r0
    9bae:	df 91       	pop	r29
    9bb0:	cf 91       	pop	r28
    9bb2:	08 95       	ret

00009bb4 <hal_getDmaTransferCount>:
    9bb4:	cf 93       	push	r28
    9bb6:	df 93       	push	r29
    9bb8:	0f 92       	push	r0
    9bba:	0f 92       	push	r0
    9bbc:	cd b7       	in	r28, 0x3d	; 61
    9bbe:	de b7       	in	r29, 0x3e	; 62
    9bc0:	89 83       	std	Y+1, r24	; 0x01
    9bc2:	9a 83       	std	Y+2, r25	; 0x02
    9bc4:	e9 81       	ldd	r30, Y+1	; 0x01
    9bc6:	fa 81       	ldd	r31, Y+2	; 0x02
    9bc8:	80 91 e6 21 	lds	r24, 0x21E6
    9bcc:	90 91 e7 21 	lds	r25, 0x21E7
    9bd0:	24 81       	ldd	r18, Z+4	; 0x04
    9bd2:	35 81       	ldd	r19, Z+5	; 0x05
    9bd4:	28 17       	cp	r18, r24
    9bd6:	39 07       	cpc	r19, r25
    9bd8:	59 f4       	brne	.+22     	; 0x9bf0 <hal_getDmaTransferCount+0x3c>
    9bda:	e9 81       	ldd	r30, Y+1	; 0x01
    9bdc:	fa 81       	ldd	r31, Y+2	; 0x02
    9bde:	01 90       	ld	r0, Z+
    9be0:	f0 81       	ld	r31, Z
    9be2:	e0 2d       	mov	r30, r0
    9be4:	03 80       	ldd	r0, Z+3	; 0x03
    9be6:	f4 81       	ldd	r31, Z+4	; 0x04
    9be8:	e0 2d       	mov	r30, r0
    9bea:	84 81       	ldd	r24, Z+4	; 0x04
    9bec:	95 81       	ldd	r25, Z+5	; 0x05
    9bee:	02 c0       	rjmp	.+4      	; 0x9bf4 <hal_getDmaTransferCount+0x40>
    9bf0:	8e ef       	ldi	r24, 0xFE	; 254
    9bf2:	9f ef       	ldi	r25, 0xFF	; 255
    9bf4:	0f 90       	pop	r0
    9bf6:	0f 90       	pop	r0
    9bf8:	df 91       	pop	r29
    9bfa:	cf 91       	pop	r28
    9bfc:	08 95       	ret

00009bfe <hal_configureDmaChannel>:
    9bfe:	af 92       	push	r10
    9c00:	bf 92       	push	r11
    9c02:	cf 92       	push	r12
    9c04:	df 92       	push	r13
    9c06:	ef 92       	push	r14
    9c08:	ff 92       	push	r15
    9c0a:	0f 93       	push	r16
    9c0c:	1f 93       	push	r17
    9c0e:	cf 93       	push	r28
    9c10:	df 93       	push	r29
    9c12:	cd b7       	in	r28, 0x3d	; 61
    9c14:	de b7       	in	r29, 0x3e	; 62
    9c16:	61 97       	sbiw	r28, 0x11	; 17
    9c18:	cd bf       	out	0x3d, r28	; 61
    9c1a:	de bf       	out	0x3e, r29	; 62
    9c1c:	8a 83       	std	Y+2, r24	; 0x02
    9c1e:	9b 83       	std	Y+3, r25	; 0x03
    9c20:	ac 82       	std	Y+4, r10	; 0x04
    9c22:	bd 82       	std	Y+5, r11	; 0x05
    9c24:	ce 82       	std	Y+6, r12	; 0x06
    9c26:	df 82       	std	Y+7, r13	; 0x07
    9c28:	8e 2d       	mov	r24, r14
    9c2a:	e8 86       	std	Y+8, r14	; 0x08
    9c2c:	9f 2d       	mov	r25, r15
    9c2e:	f9 86       	std	Y+9, r15	; 0x09
    9c30:	e0 2f       	mov	r30, r16
    9c32:	0a 87       	std	Y+10, r16	; 0x0a
    9c34:	f1 2f       	mov	r31, r17
    9c36:	1b 87       	std	Y+11, r17	; 0x0b
    9c38:	2c 87       	std	Y+12, r18	; 0x0c
    9c3a:	3d 87       	std	Y+13, r19	; 0x0d
    9c3c:	24 2f       	mov	r18, r20
    9c3e:	4e 87       	std	Y+14, r20	; 0x0e
    9c40:	f5 2e       	mov	r15, r21
    9c42:	5f 87       	std	Y+15, r21	; 0x0f
    9c44:	e6 2e       	mov	r14, r22
    9c46:	68 8b       	std	Y+16, r22	; 0x10
    9c48:	37 2f       	mov	r19, r23
    9c4a:	79 8b       	std	Y+17, r23	; 0x11
    9c4c:	8f 01       	movw	r16, r30
    9c4e:	cc 84       	ldd	r12, Y+12	; 0x0c
    9c50:	dd 84       	ldd	r13, Y+13	; 0x0d
    9c52:	b9 01       	movw	r22, r18
    9c54:	2f b7       	in	r18, 0x3f	; 63
    9c56:	29 83       	std	Y+1, r18	; 0x01
    9c58:	f8 94       	cli
    9c5a:	83 30       	cpi	r24, 0x03	; 3
    9c5c:	10 f4       	brcc	.+4      	; 0x9c62 <hal_configureDmaChannel+0x64>
    9c5e:	93 30       	cpi	r25, 0x03	; 3
    9c60:	20 f0       	brcs	.+8      	; 0x9c6a <hal_configureDmaChannel+0x6c>
    9c62:	89 81       	ldd	r24, Y+1	; 0x01
    9c64:	8f bf       	out	0x3f, r24	; 63
    9c66:	86 ef       	ldi	r24, 0xF6	; 246
    9c68:	ec c0       	rjmp	.+472    	; 0x9e42 <hal_configureDmaChannel+0x244>
    9c6a:	04 30       	cpi	r16, 0x04	; 4
    9c6c:	10 f4       	brcc	.+4      	; 0x9c72 <hal_configureDmaChannel+0x74>
    9c6e:	14 30       	cpi	r17, 0x04	; 4
    9c70:	20 f0       	brcs	.+8      	; 0x9c7a <hal_configureDmaChannel+0x7c>
    9c72:	89 81       	ldd	r24, Y+1	; 0x01
    9c74:	8f bf       	out	0x3f, r24	; 63
    9c76:	85 ef       	ldi	r24, 0xF5	; 245
    9c78:	e4 c0       	rjmp	.+456    	; 0x9e42 <hal_configureDmaChannel+0x244>
    9c7a:	c1 14       	cp	r12, r1
    9c7c:	d1 04       	cpc	r13, r1
    9c7e:	21 f4       	brne	.+8      	; 0x9c88 <hal_configureDmaChannel+0x8a>
    9c80:	89 81       	ldd	r24, Y+1	; 0x01
    9c82:	8f bf       	out	0x3f, r24	; 63
    9c84:	84 ef       	ldi	r24, 0xF4	; 244
    9c86:	dd c0       	rjmp	.+442    	; 0x9e42 <hal_configureDmaChannel+0x244>
    9c88:	64 30       	cpi	r22, 0x04	; 4
    9c8a:	20 f0       	brcs	.+8      	; 0x9c94 <hal_configureDmaChannel+0x96>
    9c8c:	89 81       	ldd	r24, Y+1	; 0x01
    9c8e:	8f bf       	out	0x3f, r24	; 63
    9c90:	83 ef       	ldi	r24, 0xF3	; 243
    9c92:	d7 c0       	rjmp	.+430    	; 0x9e42 <hal_configureDmaChannel+0x244>
    9c94:	21 e0       	ldi	r18, 0x01	; 1
    9c96:	25 17       	cp	r18, r21
    9c98:	20 f4       	brcc	.+8      	; 0x9ca2 <hal_configureDmaChannel+0xa4>
    9c9a:	89 81       	ldd	r24, Y+1	; 0x01
    9c9c:	8f bf       	out	0x3f, r24	; 63
    9c9e:	82 ef       	ldi	r24, 0xF2	; 242
    9ca0:	d0 c0       	rjmp	.+416    	; 0x9e42 <hal_configureDmaChannel+0x244>
    9ca2:	2f ea       	ldi	r18, 0xAF	; 175
    9ca4:	2e 15       	cp	r18, r14
    9ca6:	20 f4       	brcc	.+8      	; 0x9cb0 <hal_configureDmaChannel+0xb2>
    9ca8:	89 81       	ldd	r24, Y+1	; 0x01
    9caa:	8f bf       	out	0x3f, r24	; 63
    9cac:	81 ef       	ldi	r24, 0xF1	; 241
    9cae:	c9 c0       	rjmp	.+402    	; 0x9e42 <hal_configureDmaChannel+0x244>
    9cb0:	ea 81       	ldd	r30, Y+2	; 0x02
    9cb2:	fb 81       	ldd	r31, Y+3	; 0x03
    9cb4:	20 91 e6 21 	lds	r18, 0x21E6
    9cb8:	30 91 e7 21 	lds	r19, 0x21E7
    9cbc:	44 81       	ldd	r20, Z+4	; 0x04
    9cbe:	55 81       	ldd	r21, Z+5	; 0x05
    9cc0:	42 17       	cp	r20, r18
    9cc2:	53 07       	cpc	r21, r19
    9cc4:	21 f0       	breq	.+8      	; 0x9cce <hal_configureDmaChannel+0xd0>
    9cc6:	89 81       	ldd	r24, Y+1	; 0x01
    9cc8:	8f bf       	out	0x3f, r24	; 63
    9cca:	8e ef       	ldi	r24, 0xFE	; 254
    9ccc:	ba c0       	rjmp	.+372    	; 0x9e42 <hal_configureDmaChannel+0x244>
    9cce:	ea 81       	ldd	r30, Y+2	; 0x02
    9cd0:	fb 81       	ldd	r31, Y+3	; 0x03
    9cd2:	01 90       	ld	r0, Z+
    9cd4:	f0 81       	ld	r31, Z
    9cd6:	e0 2d       	mov	r30, r0
    9cd8:	a3 81       	ldd	r26, Z+3	; 0x03
    9cda:	b4 81       	ldd	r27, Z+4	; 0x04
    9cdc:	2c 91       	ld	r18, X
    9cde:	2f 77       	andi	r18, 0x7F	; 127
    9ce0:	2c 93       	st	X, r18
    9ce2:	a3 81       	ldd	r26, Z+3	; 0x03
    9ce4:	b4 81       	ldd	r27, Z+4	; 0x04
    9ce6:	2c 81       	ldd	r18, Y+4	; 0x04
    9ce8:	18 96       	adiw	r26, 0x08	; 8
    9cea:	2c 93       	st	X, r18
    9cec:	a3 81       	ldd	r26, Z+3	; 0x03
    9cee:	b4 81       	ldd	r27, Z+4	; 0x04
    9cf0:	2d 81       	ldd	r18, Y+5	; 0x05
    9cf2:	19 96       	adiw	r26, 0x09	; 9
    9cf4:	2c 93       	st	X, r18
    9cf6:	a3 81       	ldd	r26, Z+3	; 0x03
    9cf8:	b4 81       	ldd	r27, Z+4	; 0x04
    9cfa:	1a 96       	adiw	r26, 0x0a	; 10
    9cfc:	1c 92       	st	X, r1
    9cfe:	a3 81       	ldd	r26, Z+3	; 0x03
    9d00:	b4 81       	ldd	r27, Z+4	; 0x04
    9d02:	2e 81       	ldd	r18, Y+6	; 0x06
    9d04:	1c 96       	adiw	r26, 0x0c	; 12
    9d06:	2c 93       	st	X, r18
    9d08:	a3 81       	ldd	r26, Z+3	; 0x03
    9d0a:	b4 81       	ldd	r27, Z+4	; 0x04
    9d0c:	2f 81       	ldd	r18, Y+7	; 0x07
    9d0e:	1d 96       	adiw	r26, 0x0d	; 13
    9d10:	2c 93       	st	X, r18
    9d12:	a3 81       	ldd	r26, Z+3	; 0x03
    9d14:	b4 81       	ldd	r27, Z+4	; 0x04
    9d16:	1e 96       	adiw	r26, 0x0e	; 14
    9d18:	1c 92       	st	X, r1
    9d1a:	a3 81       	ldd	r26, Z+3	; 0x03
    9d1c:	b4 81       	ldd	r27, Z+4	; 0x04
    9d1e:	12 96       	adiw	r26, 0x02	; 2
    9d20:	2c 91       	ld	r18, X
    9d22:	12 97       	sbiw	r26, 0x02	; 2
    9d24:	2f 7c       	andi	r18, 0xCF	; 207
    9d26:	12 96       	adiw	r26, 0x02	; 2
    9d28:	2c 93       	st	X, r18
    9d2a:	a3 81       	ldd	r26, Z+3	; 0x03
    9d2c:	b4 81       	ldd	r27, Z+4	; 0x04
    9d2e:	12 96       	adiw	r26, 0x02	; 2
    9d30:	2c 91       	ld	r18, X
    9d32:	12 97       	sbiw	r26, 0x02	; 2
    9d34:	82 95       	swap	r24
    9d36:	80 7f       	andi	r24, 0xF0	; 240
    9d38:	82 2b       	or	r24, r18
    9d3a:	12 96       	adiw	r26, 0x02	; 2
    9d3c:	8c 93       	st	X, r24
    9d3e:	a3 81       	ldd	r26, Z+3	; 0x03
    9d40:	b4 81       	ldd	r27, Z+4	; 0x04
    9d42:	12 96       	adiw	r26, 0x02	; 2
    9d44:	8c 91       	ld	r24, X
    9d46:	12 97       	sbiw	r26, 0x02	; 2
    9d48:	8c 7f       	andi	r24, 0xFC	; 252
    9d4a:	12 96       	adiw	r26, 0x02	; 2
    9d4c:	8c 93       	st	X, r24
    9d4e:	a3 81       	ldd	r26, Z+3	; 0x03
    9d50:	b4 81       	ldd	r27, Z+4	; 0x04
    9d52:	12 96       	adiw	r26, 0x02	; 2
    9d54:	8c 91       	ld	r24, X
    9d56:	12 97       	sbiw	r26, 0x02	; 2
    9d58:	89 2b       	or	r24, r25
    9d5a:	12 96       	adiw	r26, 0x02	; 2
    9d5c:	8c 93       	st	X, r24
    9d5e:	a3 81       	ldd	r26, Z+3	; 0x03
    9d60:	b4 81       	ldd	r27, Z+4	; 0x04
    9d62:	12 96       	adiw	r26, 0x02	; 2
    9d64:	8c 91       	ld	r24, X
    9d66:	12 97       	sbiw	r26, 0x02	; 2
    9d68:	8f 73       	andi	r24, 0x3F	; 63
    9d6a:	12 96       	adiw	r26, 0x02	; 2
    9d6c:	8c 93       	st	X, r24
    9d6e:	a3 81       	ldd	r26, Z+3	; 0x03
    9d70:	b4 81       	ldd	r27, Z+4	; 0x04
    9d72:	12 96       	adiw	r26, 0x02	; 2
    9d74:	8c 91       	ld	r24, X
    9d76:	12 97       	sbiw	r26, 0x02	; 2
    9d78:	02 95       	swap	r16
    9d7a:	00 0f       	add	r16, r16
    9d7c:	00 0f       	add	r16, r16
    9d7e:	00 7c       	andi	r16, 0xC0	; 192
    9d80:	08 2b       	or	r16, r24
    9d82:	12 96       	adiw	r26, 0x02	; 2
    9d84:	0c 93       	st	X, r16
    9d86:	a3 81       	ldd	r26, Z+3	; 0x03
    9d88:	b4 81       	ldd	r27, Z+4	; 0x04
    9d8a:	12 96       	adiw	r26, 0x02	; 2
    9d8c:	8c 91       	ld	r24, X
    9d8e:	12 97       	sbiw	r26, 0x02	; 2
    9d90:	83 7f       	andi	r24, 0xF3	; 243
    9d92:	12 96       	adiw	r26, 0x02	; 2
    9d94:	8c 93       	st	X, r24
    9d96:	a3 81       	ldd	r26, Z+3	; 0x03
    9d98:	b4 81       	ldd	r27, Z+4	; 0x04
    9d9a:	12 96       	adiw	r26, 0x02	; 2
    9d9c:	8c 91       	ld	r24, X
    9d9e:	12 97       	sbiw	r26, 0x02	; 2
    9da0:	11 0f       	add	r17, r17
    9da2:	11 0f       	add	r17, r17
    9da4:	18 2b       	or	r17, r24
    9da6:	12 96       	adiw	r26, 0x02	; 2
    9da8:	1c 93       	st	X, r17
    9daa:	a3 81       	ldd	r26, Z+3	; 0x03
    9dac:	b4 81       	ldd	r27, Z+4	; 0x04
    9dae:	14 96       	adiw	r26, 0x04	; 4
    9db0:	cd 92       	st	X+, r12
    9db2:	dc 92       	st	X, r13
    9db4:	15 97       	sbiw	r26, 0x05	; 5
    9db6:	a3 81       	ldd	r26, Z+3	; 0x03
    9db8:	b4 81       	ldd	r27, Z+4	; 0x04
    9dba:	8c 91       	ld	r24, X
    9dbc:	8c 7f       	andi	r24, 0xFC	; 252
    9dbe:	8c 93       	st	X, r24
    9dc0:	a3 81       	ldd	r26, Z+3	; 0x03
    9dc2:	b4 81       	ldd	r27, Z+4	; 0x04
    9dc4:	8c 91       	ld	r24, X
    9dc6:	86 2b       	or	r24, r22
    9dc8:	8c 93       	st	X, r24
    9dca:	a3 81       	ldd	r26, Z+3	; 0x03
    9dcc:	b4 81       	ldd	r27, Z+4	; 0x04
    9dce:	8c 91       	ld	r24, X
    9dd0:	8f 7d       	andi	r24, 0xDF	; 223
    9dd2:	8c 93       	st	X, r24
    9dd4:	a3 81       	ldd	r26, Z+3	; 0x03
    9dd6:	b4 81       	ldd	r27, Z+4	; 0x04
    9dd8:	16 96       	adiw	r26, 0x06	; 6
    9dda:	1c 92       	st	X, r1
    9ddc:	a3 81       	ldd	r26, Z+3	; 0x03
    9dde:	b4 81       	ldd	r27, Z+4	; 0x04
    9de0:	17 16       	cp	r1, r23
    9de2:	4c f4       	brge	.+18     	; 0x9df6 <hal_configureDmaChannel+0x1f8>
    9de4:	8c 91       	ld	r24, X
    9de6:	80 62       	ori	r24, 0x20	; 32
    9de8:	8c 93       	st	X, r24
    9dea:	a3 81       	ldd	r26, Z+3	; 0x03
    9dec:	b4 81       	ldd	r27, Z+4	; 0x04
    9dee:	16 96       	adiw	r26, 0x06	; 6
    9df0:	7c 93       	st	X, r23
    9df2:	16 97       	sbiw	r26, 0x06	; 6
    9df4:	05 c0       	rjmp	.+10     	; 0x9e00 <hal_configureDmaChannel+0x202>
    9df6:	77 23       	and	r23, r23
    9df8:	19 f0       	breq	.+6      	; 0x9e00 <hal_configureDmaChannel+0x202>
    9dfa:	8c 91       	ld	r24, X
    9dfc:	80 62       	ori	r24, 0x20	; 32
    9dfe:	8c 93       	st	X, r24
    9e00:	a3 81       	ldd	r26, Z+3	; 0x03
    9e02:	b4 81       	ldd	r27, Z+4	; 0x04
    9e04:	8c 91       	ld	r24, X
    9e06:	8b 7f       	andi	r24, 0xFB	; 251
    9e08:	8c 93       	st	X, r24
    9e0a:	a3 81       	ldd	r26, Z+3	; 0x03
    9e0c:	b4 81       	ldd	r27, Z+4	; 0x04
    9e0e:	8c 91       	ld	r24, X
    9e10:	ff 0c       	add	r15, r15
    9e12:	ff 0c       	add	r15, r15
    9e14:	f8 2a       	or	r15, r24
    9e16:	fc 92       	st	X, r15
    9e18:	a3 81       	ldd	r26, Z+3	; 0x03
    9e1a:	b4 81       	ldd	r27, Z+4	; 0x04
    9e1c:	13 96       	adiw	r26, 0x03	; 3
    9e1e:	8c 91       	ld	r24, X
    9e20:	13 97       	sbiw	r26, 0x03	; 3
    9e22:	13 96       	adiw	r26, 0x03	; 3
    9e24:	1c 92       	st	X, r1
    9e26:	a3 81       	ldd	r26, Z+3	; 0x03
    9e28:	b4 81       	ldd	r27, Z+4	; 0x04
    9e2a:	13 96       	adiw	r26, 0x03	; 3
    9e2c:	8c 91       	ld	r24, X
    9e2e:	13 97       	sbiw	r26, 0x03	; 3
    9e30:	8e 29       	or	r24, r14
    9e32:	13 96       	adiw	r26, 0x03	; 3
    9e34:	8c 93       	st	X, r24
    9e36:	13 97       	sbiw	r26, 0x03	; 3
    9e38:	81 e0       	ldi	r24, 0x01	; 1
    9e3a:	81 83       	std	Z+1, r24	; 0x01
    9e3c:	89 81       	ldd	r24, Y+1	; 0x01
    9e3e:	8f bf       	out	0x3f, r24	; 63
    9e40:	80 e0       	ldi	r24, 0x00	; 0
    9e42:	61 96       	adiw	r28, 0x11	; 17
    9e44:	cd bf       	out	0x3d, r28	; 61
    9e46:	de bf       	out	0x3e, r29	; 62
    9e48:	df 91       	pop	r29
    9e4a:	cf 91       	pop	r28
    9e4c:	1f 91       	pop	r17
    9e4e:	0f 91       	pop	r16
    9e50:	ff 90       	pop	r15
    9e52:	ef 90       	pop	r14
    9e54:	df 90       	pop	r13
    9e56:	cf 90       	pop	r12
    9e58:	bf 90       	pop	r11
    9e5a:	af 90       	pop	r10
    9e5c:	08 95       	ret

00009e5e <hal_resetDmaController>:
    9e5e:	80 91 00 01 	lds	r24, 0x0100
    9e62:	80 64       	ori	r24, 0x40	; 64
    9e64:	80 93 00 01 	sts	0x0100, r24
    9e68:	80 91 00 01 	lds	r24, 0x0100
    9e6c:	86 fd       	sbrc	r24, 6
    9e6e:	fc cf       	rjmp	.-8      	; 0x9e68 <hal_resetDmaController+0xa>
    9e70:	08 95       	ret

00009e72 <hal_dmaStartTransfer>:
    9e72:	cf 93       	push	r28
    9e74:	df 93       	push	r29
    9e76:	00 d0       	rcall	.+0      	; 0x9e78 <hal_dmaStartTransfer+0x6>
    9e78:	cd b7       	in	r28, 0x3d	; 61
    9e7a:	de b7       	in	r29, 0x3e	; 62
    9e7c:	8a 83       	std	Y+2, r24	; 0x02
    9e7e:	9b 83       	std	Y+3, r25	; 0x03
    9e80:	8f b7       	in	r24, 0x3f	; 63
    9e82:	89 83       	std	Y+1, r24	; 0x01
    9e84:	f8 94       	cli
    9e86:	ea 81       	ldd	r30, Y+2	; 0x02
    9e88:	fb 81       	ldd	r31, Y+3	; 0x03
    9e8a:	80 91 e6 21 	lds	r24, 0x21E6
    9e8e:	90 91 e7 21 	lds	r25, 0x21E7
    9e92:	24 81       	ldd	r18, Z+4	; 0x04
    9e94:	35 81       	ldd	r19, Z+5	; 0x05
    9e96:	28 17       	cp	r18, r24
    9e98:	39 07       	cpc	r19, r25
    9e9a:	21 f0       	breq	.+8      	; 0x9ea4 <hal_dmaStartTransfer+0x32>
    9e9c:	89 81       	ldd	r24, Y+1	; 0x01
    9e9e:	8f bf       	out	0x3f, r24	; 63
    9ea0:	8e ef       	ldi	r24, 0xFE	; 254
    9ea2:	1a c0       	rjmp	.+52     	; 0x9ed8 <hal_dmaStartTransfer+0x66>
    9ea4:	ea 81       	ldd	r30, Y+2	; 0x02
    9ea6:	fb 81       	ldd	r31, Y+3	; 0x03
    9ea8:	01 90       	ld	r0, Z+
    9eaa:	f0 81       	ld	r31, Z
    9eac:	e0 2d       	mov	r30, r0
    9eae:	81 81       	ldd	r24, Z+1	; 0x01
    9eb0:	88 23       	and	r24, r24
    9eb2:	79 f0       	breq	.+30     	; 0x9ed2 <hal_dmaStartTransfer+0x60>
    9eb4:	a3 81       	ldd	r26, Z+3	; 0x03
    9eb6:	b4 81       	ldd	r27, Z+4	; 0x04
    9eb8:	8c 91       	ld	r24, X
    9eba:	80 68       	ori	r24, 0x80	; 128
    9ebc:	8c 93       	st	X, r24
    9ebe:	03 80       	ldd	r0, Z+3	; 0x03
    9ec0:	f4 81       	ldd	r31, Z+4	; 0x04
    9ec2:	e0 2d       	mov	r30, r0
    9ec4:	80 81       	ld	r24, Z
    9ec6:	80 61       	ori	r24, 0x10	; 16
    9ec8:	80 83       	st	Z, r24
    9eca:	89 81       	ldd	r24, Y+1	; 0x01
    9ecc:	8f bf       	out	0x3f, r24	; 63
    9ece:	80 e0       	ldi	r24, 0x00	; 0
    9ed0:	03 c0       	rjmp	.+6      	; 0x9ed8 <hal_dmaStartTransfer+0x66>
    9ed2:	89 81       	ldd	r24, Y+1	; 0x01
    9ed4:	8f bf       	out	0x3f, r24	; 63
    9ed6:	8d ef       	ldi	r24, 0xFD	; 253
    9ed8:	23 96       	adiw	r28, 0x03	; 3
    9eda:	cd bf       	out	0x3d, r28	; 61
    9edc:	de bf       	out	0x3e, r29	; 62
    9ede:	df 91       	pop	r29
    9ee0:	cf 91       	pop	r28
    9ee2:	08 95       	ret

00009ee4 <hal_getDmaIntStatus>:
    9ee4:	cf 93       	push	r28
    9ee6:	df 93       	push	r29
    9ee8:	0f 92       	push	r0
    9eea:	0f 92       	push	r0
    9eec:	cd b7       	in	r28, 0x3d	; 61
    9eee:	de b7       	in	r29, 0x3e	; 62
    9ef0:	89 83       	std	Y+1, r24	; 0x01
    9ef2:	9a 83       	std	Y+2, r25	; 0x02
    9ef4:	e9 81       	ldd	r30, Y+1	; 0x01
    9ef6:	fa 81       	ldd	r31, Y+2	; 0x02
    9ef8:	80 91 e6 21 	lds	r24, 0x21E6
    9efc:	90 91 e7 21 	lds	r25, 0x21E7
    9f00:	24 81       	ldd	r18, Z+4	; 0x04
    9f02:	35 81       	ldd	r19, Z+5	; 0x05
    9f04:	28 17       	cp	r18, r24
    9f06:	39 07       	cpc	r19, r25
    9f08:	e1 f4       	brne	.+56     	; 0x9f42 <hal_getDmaIntStatus+0x5e>
    9f0a:	e9 81       	ldd	r30, Y+1	; 0x01
    9f0c:	fa 81       	ldd	r31, Y+2	; 0x02
    9f0e:	01 90       	ld	r0, Z+
    9f10:	f0 81       	ld	r31, Z
    9f12:	e0 2d       	mov	r30, r0
    9f14:	03 80       	ldd	r0, Z+3	; 0x03
    9f16:	f4 81       	ldd	r31, Z+4	; 0x04
    9f18:	e0 2d       	mov	r30, r0
    9f1a:	81 81       	ldd	r24, Z+1	; 0x01
    9f1c:	90 e0       	ldi	r25, 0x00	; 0
    9f1e:	66 23       	and	r22, r22
    9f20:	41 f4       	brne	.+16     	; 0x9f32 <hal_getDmaIntStatus+0x4e>
    9f22:	80 71       	andi	r24, 0x10	; 16
    9f24:	90 70       	andi	r25, 0x00	; 0
    9f26:	64 e0       	ldi	r22, 0x04	; 4
    9f28:	95 95       	asr	r25
    9f2a:	87 95       	ror	r24
    9f2c:	6a 95       	dec	r22
    9f2e:	e1 f7       	brne	.-8      	; 0x9f28 <hal_getDmaIntStatus+0x44>
    9f30:	0a c0       	rjmp	.+20     	; 0x9f46 <hal_getDmaIntStatus+0x62>
    9f32:	80 72       	andi	r24, 0x20	; 32
    9f34:	90 70       	andi	r25, 0x00	; 0
    9f36:	55 e0       	ldi	r21, 0x05	; 5
    9f38:	95 95       	asr	r25
    9f3a:	87 95       	ror	r24
    9f3c:	5a 95       	dec	r21
    9f3e:	e1 f7       	brne	.-8      	; 0x9f38 <hal_getDmaIntStatus+0x54>
    9f40:	02 c0       	rjmp	.+4      	; 0x9f46 <hal_getDmaIntStatus+0x62>
    9f42:	8e ef       	ldi	r24, 0xFE	; 254
    9f44:	9f ef       	ldi	r25, 0xFF	; 255
    9f46:	0f 90       	pop	r0
    9f48:	0f 90       	pop	r0
    9f4a:	df 91       	pop	r29
    9f4c:	cf 91       	pop	r28
    9f4e:	08 95       	ret

00009f50 <hal_getDmaChannelId>:
    9f50:	cf 93       	push	r28
    9f52:	df 93       	push	r29
    9f54:	0f 92       	push	r0
    9f56:	0f 92       	push	r0
    9f58:	cd b7       	in	r28, 0x3d	; 61
    9f5a:	de b7       	in	r29, 0x3e	; 62
    9f5c:	89 83       	std	Y+1, r24	; 0x01
    9f5e:	9a 83       	std	Y+2, r25	; 0x02
    9f60:	e9 81       	ldd	r30, Y+1	; 0x01
    9f62:	fa 81       	ldd	r31, Y+2	; 0x02
    9f64:	80 91 e6 21 	lds	r24, 0x21E6
    9f68:	90 91 e7 21 	lds	r25, 0x21E7
    9f6c:	24 81       	ldd	r18, Z+4	; 0x04
    9f6e:	35 81       	ldd	r19, Z+5	; 0x05
    9f70:	28 17       	cp	r18, r24
    9f72:	39 07       	cpc	r19, r25
    9f74:	39 f4       	brne	.+14     	; 0x9f84 <hal_getDmaChannelId+0x34>
    9f76:	e9 81       	ldd	r30, Y+1	; 0x01
    9f78:	fa 81       	ldd	r31, Y+2	; 0x02
    9f7a:	01 90       	ld	r0, Z+
    9f7c:	f0 81       	ld	r31, Z
    9f7e:	e0 2d       	mov	r30, r0
    9f80:	80 81       	ld	r24, Z
    9f82:	01 c0       	rjmp	.+2      	; 0x9f86 <hal_getDmaChannelId+0x36>
    9f84:	8e ef       	ldi	r24, 0xFE	; 254
    9f86:	0f 90       	pop	r0
    9f88:	0f 90       	pop	r0
    9f8a:	df 91       	pop	r29
    9f8c:	cf 91       	pop	r28
    9f8e:	08 95       	ret

00009f90 <hal_clearDmaIntStatus>:
    9f90:	cf 93       	push	r28
    9f92:	df 93       	push	r29
    9f94:	0f 92       	push	r0
    9f96:	0f 92       	push	r0
    9f98:	cd b7       	in	r28, 0x3d	; 61
    9f9a:	de b7       	in	r29, 0x3e	; 62
    9f9c:	89 83       	std	Y+1, r24	; 0x01
    9f9e:	9a 83       	std	Y+2, r25	; 0x02
    9fa0:	e9 81       	ldd	r30, Y+1	; 0x01
    9fa2:	fa 81       	ldd	r31, Y+2	; 0x02
    9fa4:	80 91 e6 21 	lds	r24, 0x21E6
    9fa8:	90 91 e7 21 	lds	r25, 0x21E7
    9fac:	24 81       	ldd	r18, Z+4	; 0x04
    9fae:	35 81       	ldd	r19, Z+5	; 0x05
    9fb0:	28 17       	cp	r18, r24
    9fb2:	39 07       	cpc	r19, r25
    9fb4:	81 f5       	brne	.+96     	; 0xa016 <hal_clearDmaIntStatus+0x86>
    9fb6:	e9 81       	ldd	r30, Y+1	; 0x01
    9fb8:	fa 81       	ldd	r31, Y+2	; 0x02
    9fba:	01 90       	ld	r0, Z+
    9fbc:	f0 81       	ld	r31, Z
    9fbe:	e0 2d       	mov	r30, r0
    9fc0:	80 81       	ld	r24, Z
    9fc2:	88 23       	and	r24, r24
    9fc4:	41 f4       	brne	.+16     	; 0x9fd6 <hal_clearDmaIntStatus+0x46>
    9fc6:	80 91 03 01 	lds	r24, 0x0103
    9fca:	66 23       	and	r22, r22
    9fcc:	11 f4       	brne	.+4      	; 0x9fd2 <hal_clearDmaIntStatus+0x42>
    9fce:	81 60       	ori	r24, 0x01	; 1
    9fd0:	0b c0       	rjmp	.+22     	; 0x9fe8 <hal_clearDmaIntStatus+0x58>
    9fd2:	80 61       	ori	r24, 0x10	; 16
    9fd4:	09 c0       	rjmp	.+18     	; 0x9fe8 <hal_clearDmaIntStatus+0x58>
    9fd6:	82 30       	cpi	r24, 0x02	; 2
    9fd8:	61 f4       	brne	.+24     	; 0x9ff2 <hal_clearDmaIntStatus+0x62>
    9fda:	80 91 03 01 	lds	r24, 0x0103
    9fde:	66 23       	and	r22, r22
    9fe0:	11 f4       	brne	.+4      	; 0x9fe6 <hal_clearDmaIntStatus+0x56>
    9fe2:	82 60       	ori	r24, 0x02	; 2
    9fe4:	01 c0       	rjmp	.+2      	; 0x9fe8 <hal_clearDmaIntStatus+0x58>
    9fe6:	80 62       	ori	r24, 0x20	; 32
    9fe8:	e0 e0       	ldi	r30, 0x00	; 0
    9fea:	f1 e0       	ldi	r31, 0x01	; 1
    9fec:	83 83       	std	Z+3, r24	; 0x03
    9fee:	80 e0       	ldi	r24, 0x00	; 0
    9ff0:	13 c0       	rjmp	.+38     	; 0xa018 <hal_clearDmaIntStatus+0x88>
    9ff2:	84 30       	cpi	r24, 0x04	; 4
    9ff4:	41 f4       	brne	.+16     	; 0xa006 <hal_clearDmaIntStatus+0x76>
    9ff6:	80 91 03 01 	lds	r24, 0x0103
    9ffa:	66 23       	and	r22, r22
    9ffc:	11 f4       	brne	.+4      	; 0xa002 <hal_clearDmaIntStatus+0x72>
    9ffe:	84 60       	ori	r24, 0x04	; 4
    a000:	f3 cf       	rjmp	.-26     	; 0x9fe8 <hal_clearDmaIntStatus+0x58>
    a002:	80 64       	ori	r24, 0x40	; 64
    a004:	f1 cf       	rjmp	.-30     	; 0x9fe8 <hal_clearDmaIntStatus+0x58>
    a006:	80 91 03 01 	lds	r24, 0x0103
    a00a:	66 23       	and	r22, r22
    a00c:	11 f4       	brne	.+4      	; 0xa012 <hal_clearDmaIntStatus+0x82>
    a00e:	88 60       	ori	r24, 0x08	; 8
    a010:	eb cf       	rjmp	.-42     	; 0x9fe8 <hal_clearDmaIntStatus+0x58>
    a012:	80 68       	ori	r24, 0x80	; 128
    a014:	e9 cf       	rjmp	.-46     	; 0x9fe8 <hal_clearDmaIntStatus+0x58>
    a016:	8e ef       	ldi	r24, 0xFE	; 254
    a018:	0f 90       	pop	r0
    a01a:	0f 90       	pop	r0
    a01c:	df 91       	pop	r29
    a01e:	cf 91       	pop	r28
    a020:	08 95       	ret

0000a022 <hal_dmaEnableChannel>:
    a022:	cf 93       	push	r28
    a024:	df 93       	push	r29
    a026:	00 d0       	rcall	.+0      	; 0xa028 <hal_dmaEnableChannel+0x6>
    a028:	cd b7       	in	r28, 0x3d	; 61
    a02a:	de b7       	in	r29, 0x3e	; 62
    a02c:	8a 83       	std	Y+2, r24	; 0x02
    a02e:	9b 83       	std	Y+3, r25	; 0x03
    a030:	8f b7       	in	r24, 0x3f	; 63
    a032:	89 83       	std	Y+1, r24	; 0x01
    a034:	f8 94       	cli
    a036:	ea 81       	ldd	r30, Y+2	; 0x02
    a038:	fb 81       	ldd	r31, Y+3	; 0x03
    a03a:	80 91 e6 21 	lds	r24, 0x21E6
    a03e:	90 91 e7 21 	lds	r25, 0x21E7
    a042:	24 81       	ldd	r18, Z+4	; 0x04
    a044:	35 81       	ldd	r19, Z+5	; 0x05
    a046:	28 17       	cp	r18, r24
    a048:	39 07       	cpc	r19, r25
    a04a:	21 f0       	breq	.+8      	; 0xa054 <hal_dmaEnableChannel+0x32>
    a04c:	89 81       	ldd	r24, Y+1	; 0x01
    a04e:	8f bf       	out	0x3f, r24	; 63
    a050:	8e ef       	ldi	r24, 0xFE	; 254
    a052:	0e c0       	rjmp	.+28     	; 0xa070 <hal_dmaEnableChannel+0x4e>
    a054:	ea 81       	ldd	r30, Y+2	; 0x02
    a056:	fb 81       	ldd	r31, Y+3	; 0x03
    a058:	01 90       	ld	r0, Z+
    a05a:	f0 81       	ld	r31, Z
    a05c:	e0 2d       	mov	r30, r0
    a05e:	03 80       	ldd	r0, Z+3	; 0x03
    a060:	f4 81       	ldd	r31, Z+4	; 0x04
    a062:	e0 2d       	mov	r30, r0
    a064:	80 81       	ld	r24, Z
    a066:	80 68       	ori	r24, 0x80	; 128
    a068:	80 83       	st	Z, r24
    a06a:	89 81       	ldd	r24, Y+1	; 0x01
    a06c:	8f bf       	out	0x3f, r24	; 63
    a06e:	80 e0       	ldi	r24, 0x00	; 0
    a070:	23 96       	adiw	r28, 0x03	; 3
    a072:	cd bf       	out	0x3d, r28	; 61
    a074:	de bf       	out	0x3e, r29	; 62
    a076:	df 91       	pop	r29
    a078:	cf 91       	pop	r28
    a07a:	08 95       	ret

0000a07c <hal_dmaDisableChannel>:
    a07c:	cf 93       	push	r28
    a07e:	df 93       	push	r29
    a080:	00 d0       	rcall	.+0      	; 0xa082 <hal_dmaDisableChannel+0x6>
    a082:	cd b7       	in	r28, 0x3d	; 61
    a084:	de b7       	in	r29, 0x3e	; 62
    a086:	8a 83       	std	Y+2, r24	; 0x02
    a088:	9b 83       	std	Y+3, r25	; 0x03
    a08a:	8f b7       	in	r24, 0x3f	; 63
    a08c:	89 83       	std	Y+1, r24	; 0x01
    a08e:	f8 94       	cli
    a090:	ea 81       	ldd	r30, Y+2	; 0x02
    a092:	fb 81       	ldd	r31, Y+3	; 0x03
    a094:	80 91 e6 21 	lds	r24, 0x21E6
    a098:	90 91 e7 21 	lds	r25, 0x21E7
    a09c:	24 81       	ldd	r18, Z+4	; 0x04
    a09e:	35 81       	ldd	r19, Z+5	; 0x05
    a0a0:	28 17       	cp	r18, r24
    a0a2:	39 07       	cpc	r19, r25
    a0a4:	21 f0       	breq	.+8      	; 0xa0ae <hal_dmaDisableChannel+0x32>
    a0a6:	89 81       	ldd	r24, Y+1	; 0x01
    a0a8:	8f bf       	out	0x3f, r24	; 63
    a0aa:	8e ef       	ldi	r24, 0xFE	; 254
    a0ac:	0e c0       	rjmp	.+28     	; 0xa0ca <hal_dmaDisableChannel+0x4e>
    a0ae:	ea 81       	ldd	r30, Y+2	; 0x02
    a0b0:	fb 81       	ldd	r31, Y+3	; 0x03
    a0b2:	01 90       	ld	r0, Z+
    a0b4:	f0 81       	ld	r31, Z
    a0b6:	e0 2d       	mov	r30, r0
    a0b8:	03 80       	ldd	r0, Z+3	; 0x03
    a0ba:	f4 81       	ldd	r31, Z+4	; 0x04
    a0bc:	e0 2d       	mov	r30, r0
    a0be:	80 81       	ld	r24, Z
    a0c0:	8f 77       	andi	r24, 0x7F	; 127
    a0c2:	80 83       	st	Z, r24
    a0c4:	89 81       	ldd	r24, Y+1	; 0x01
    a0c6:	8f bf       	out	0x3f, r24	; 63
    a0c8:	80 e0       	ldi	r24, 0x00	; 0
    a0ca:	23 96       	adiw	r28, 0x03	; 3
    a0cc:	cd bf       	out	0x3d, r28	; 61
    a0ce:	de bf       	out	0x3e, r29	; 62
    a0d0:	df 91       	pop	r29
    a0d2:	cf 91       	pop	r28
    a0d4:	08 95       	ret

0000a0d6 <hal_configureIntLevel>:
    a0d6:	e0 ea       	ldi	r30, 0xA0	; 160
    a0d8:	f0 e0       	ldi	r31, 0x00	; 0
    a0da:	92 81       	ldd	r25, Z+2	; 0x02
    a0dc:	98 2b       	or	r25, r24
    a0de:	92 83       	std	Z+2, r25	; 0x02
    a0e0:	08 95       	ret

0000a0e2 <findTimerIntElement>:
    a0e2:	cf 93       	push	r28
    a0e4:	df 93       	push	r29
    a0e6:	0f 92       	push	r0
    a0e8:	0f 92       	push	r0
    a0ea:	cd b7       	in	r28, 0x3d	; 61
    a0ec:	de b7       	in	r29, 0x3e	; 62
    a0ee:	e0 91 ea 23 	lds	r30, 0x23EA
    a0f2:	f0 91 eb 23 	lds	r31, 0x23EB
    a0f6:	22 81       	ldd	r18, Z+2	; 0x02
    a0f8:	33 81       	ldd	r19, Z+3	; 0x03
    a0fa:	e0 91 ea 23 	lds	r30, 0x23EA
    a0fe:	f0 91 eb 23 	lds	r31, 0x23EB
    a102:	0c c0       	rjmp	.+24     	; 0xa11c <findTimerIntElement+0x3a>
    a104:	e9 81       	ldd	r30, Y+1	; 0x01
    a106:	fa 81       	ldd	r31, Y+2	; 0x02
    a108:	01 90       	ld	r0, Z+
    a10a:	f0 81       	ld	r31, Z
    a10c:	e0 2d       	mov	r30, r0
    a10e:	90 81       	ld	r25, Z
    a110:	98 17       	cp	r25, r24
    a112:	69 f0       	breq	.+26     	; 0xa12e <findTimerIntElement+0x4c>
    a114:	21 50       	subi	r18, 0x01	; 1
    a116:	30 40       	sbci	r19, 0x00	; 0
    a118:	e9 81       	ldd	r30, Y+1	; 0x01
    a11a:	fa 81       	ldd	r31, Y+2	; 0x02
    a11c:	40 85       	ldd	r20, Z+8	; 0x08
    a11e:	51 85       	ldd	r21, Z+9	; 0x09
    a120:	49 83       	std	Y+1, r20	; 0x01
    a122:	5a 83       	std	Y+2, r21	; 0x02
    a124:	12 16       	cp	r1, r18
    a126:	13 06       	cpc	r1, r19
    a128:	6c f3       	brlt	.-38     	; 0xa104 <findTimerIntElement+0x22>
    a12a:	e0 e0       	ldi	r30, 0x00	; 0
    a12c:	f0 e0       	ldi	r31, 0x00	; 0
    a12e:	cf 01       	movw	r24, r30
    a130:	0f 90       	pop	r0
    a132:	0f 90       	pop	r0
    a134:	df 91       	pop	r29
    a136:	cf 91       	pop	r28
    a138:	08 95       	ret

0000a13a <__vector_15>:
    a13a:	1f 92       	push	r1
    a13c:	0f 92       	push	r0
    a13e:	0f b6       	in	r0, 0x3f	; 63
    a140:	0f 92       	push	r0
    a142:	08 b6       	in	r0, 0x38	; 56
    a144:	0f 92       	push	r0
    a146:	11 24       	eor	r1, r1
    a148:	0f 90       	pop	r0
    a14a:	08 be       	out	0x38, r0	; 56
    a14c:	0f 90       	pop	r0
    a14e:	0f be       	out	0x3f, r0	; 63
    a150:	0f 90       	pop	r0
    a152:	1f 90       	pop	r1
    a154:	18 95       	reti

0000a156 <__vector_16>:
    a156:	1f 92       	push	r1
    a158:	0f 92       	push	r0
    a15a:	0f b6       	in	r0, 0x3f	; 63
    a15c:	0f 92       	push	r0
    a15e:	08 b6       	in	r0, 0x38	; 56
    a160:	0f 92       	push	r0
    a162:	09 b6       	in	r0, 0x39	; 57
    a164:	0f 92       	push	r0
    a166:	0b b6       	in	r0, 0x3b	; 59
    a168:	0f 92       	push	r0
    a16a:	11 24       	eor	r1, r1
    a16c:	2f 93       	push	r18
    a16e:	3f 93       	push	r19
    a170:	4f 93       	push	r20
    a172:	5f 93       	push	r21
    a174:	6f 93       	push	r22
    a176:	7f 93       	push	r23
    a178:	8f 93       	push	r24
    a17a:	9f 93       	push	r25
    a17c:	af 93       	push	r26
    a17e:	bf 93       	push	r27
    a180:	ef 93       	push	r30
    a182:	ff 93       	push	r31
    a184:	80 e0       	ldi	r24, 0x00	; 0
    a186:	0e 94 71 50 	call	0xa0e2	; 0xa0e2 <findTimerIntElement>
    a18a:	00 97       	sbiw	r24, 0x00	; 0
    a18c:	41 f0       	breq	.+16     	; 0xa19e <__vector_16+0x48>
    a18e:	dc 01       	movw	r26, r24
    a190:	11 96       	adiw	r26, 0x01	; 1
    a192:	ed 91       	ld	r30, X+
    a194:	fc 91       	ld	r31, X
    a196:	12 97       	sbiw	r26, 0x02	; 2
    a198:	30 97       	sbiw	r30, 0x00	; 0
    a19a:	09 f0       	breq	.+2      	; 0xa19e <__vector_16+0x48>
    a19c:	19 95       	eicall
    a19e:	ff 91       	pop	r31
    a1a0:	ef 91       	pop	r30
    a1a2:	bf 91       	pop	r27
    a1a4:	af 91       	pop	r26
    a1a6:	9f 91       	pop	r25
    a1a8:	8f 91       	pop	r24
    a1aa:	7f 91       	pop	r23
    a1ac:	6f 91       	pop	r22
    a1ae:	5f 91       	pop	r21
    a1b0:	4f 91       	pop	r20
    a1b2:	3f 91       	pop	r19
    a1b4:	2f 91       	pop	r18
    a1b6:	0f 90       	pop	r0
    a1b8:	0b be       	out	0x3b, r0	; 59
    a1ba:	0f 90       	pop	r0
    a1bc:	09 be       	out	0x39, r0	; 57
    a1be:	0f 90       	pop	r0
    a1c0:	08 be       	out	0x38, r0	; 56
    a1c2:	0f 90       	pop	r0
    a1c4:	0f be       	out	0x3f, r0	; 63
    a1c6:	0f 90       	pop	r0
    a1c8:	1f 90       	pop	r1
    a1ca:	18 95       	reti

0000a1cc <__vector_17>:
    a1cc:	1f 92       	push	r1
    a1ce:	0f 92       	push	r0
    a1d0:	0f b6       	in	r0, 0x3f	; 63
    a1d2:	0f 92       	push	r0
    a1d4:	08 b6       	in	r0, 0x38	; 56
    a1d6:	0f 92       	push	r0
    a1d8:	09 b6       	in	r0, 0x39	; 57
    a1da:	0f 92       	push	r0
    a1dc:	0b b6       	in	r0, 0x3b	; 59
    a1de:	0f 92       	push	r0
    a1e0:	11 24       	eor	r1, r1
    a1e2:	2f 93       	push	r18
    a1e4:	3f 93       	push	r19
    a1e6:	4f 93       	push	r20
    a1e8:	5f 93       	push	r21
    a1ea:	6f 93       	push	r22
    a1ec:	7f 93       	push	r23
    a1ee:	8f 93       	push	r24
    a1f0:	9f 93       	push	r25
    a1f2:	af 93       	push	r26
    a1f4:	bf 93       	push	r27
    a1f6:	ef 93       	push	r30
    a1f8:	ff 93       	push	r31
    a1fa:	81 e0       	ldi	r24, 0x01	; 1
    a1fc:	0e 94 71 50 	call	0xa0e2	; 0xa0e2 <findTimerIntElement>
    a200:	00 97       	sbiw	r24, 0x00	; 0
    a202:	41 f0       	breq	.+16     	; 0xa214 <__vector_17+0x48>
    a204:	dc 01       	movw	r26, r24
    a206:	11 96       	adiw	r26, 0x01	; 1
    a208:	ed 91       	ld	r30, X+
    a20a:	fc 91       	ld	r31, X
    a20c:	12 97       	sbiw	r26, 0x02	; 2
    a20e:	30 97       	sbiw	r30, 0x00	; 0
    a210:	09 f0       	breq	.+2      	; 0xa214 <__vector_17+0x48>
    a212:	19 95       	eicall
    a214:	ff 91       	pop	r31
    a216:	ef 91       	pop	r30
    a218:	bf 91       	pop	r27
    a21a:	af 91       	pop	r26
    a21c:	9f 91       	pop	r25
    a21e:	8f 91       	pop	r24
    a220:	7f 91       	pop	r23
    a222:	6f 91       	pop	r22
    a224:	5f 91       	pop	r21
    a226:	4f 91       	pop	r20
    a228:	3f 91       	pop	r19
    a22a:	2f 91       	pop	r18
    a22c:	0f 90       	pop	r0
    a22e:	0b be       	out	0x3b, r0	; 59
    a230:	0f 90       	pop	r0
    a232:	09 be       	out	0x39, r0	; 57
    a234:	0f 90       	pop	r0
    a236:	08 be       	out	0x38, r0	; 56
    a238:	0f 90       	pop	r0
    a23a:	0f be       	out	0x3f, r0	; 63
    a23c:	0f 90       	pop	r0
    a23e:	1f 90       	pop	r1
    a240:	18 95       	reti

0000a242 <__vector_18>:
    a242:	1f 92       	push	r1
    a244:	0f 92       	push	r0
    a246:	0f b6       	in	r0, 0x3f	; 63
    a248:	0f 92       	push	r0
    a24a:	08 b6       	in	r0, 0x38	; 56
    a24c:	0f 92       	push	r0
    a24e:	09 b6       	in	r0, 0x39	; 57
    a250:	0f 92       	push	r0
    a252:	0b b6       	in	r0, 0x3b	; 59
    a254:	0f 92       	push	r0
    a256:	11 24       	eor	r1, r1
    a258:	2f 93       	push	r18
    a25a:	3f 93       	push	r19
    a25c:	4f 93       	push	r20
    a25e:	5f 93       	push	r21
    a260:	6f 93       	push	r22
    a262:	7f 93       	push	r23
    a264:	8f 93       	push	r24
    a266:	9f 93       	push	r25
    a268:	af 93       	push	r26
    a26a:	bf 93       	push	r27
    a26c:	ef 93       	push	r30
    a26e:	ff 93       	push	r31
    a270:	82 e0       	ldi	r24, 0x02	; 2
    a272:	0e 94 71 50 	call	0xa0e2	; 0xa0e2 <findTimerIntElement>
    a276:	00 97       	sbiw	r24, 0x00	; 0
    a278:	41 f0       	breq	.+16     	; 0xa28a <__vector_18+0x48>
    a27a:	dc 01       	movw	r26, r24
    a27c:	11 96       	adiw	r26, 0x01	; 1
    a27e:	ed 91       	ld	r30, X+
    a280:	fc 91       	ld	r31, X
    a282:	12 97       	sbiw	r26, 0x02	; 2
    a284:	30 97       	sbiw	r30, 0x00	; 0
    a286:	09 f0       	breq	.+2      	; 0xa28a <__vector_18+0x48>
    a288:	19 95       	eicall
    a28a:	ff 91       	pop	r31
    a28c:	ef 91       	pop	r30
    a28e:	bf 91       	pop	r27
    a290:	af 91       	pop	r26
    a292:	9f 91       	pop	r25
    a294:	8f 91       	pop	r24
    a296:	7f 91       	pop	r23
    a298:	6f 91       	pop	r22
    a29a:	5f 91       	pop	r21
    a29c:	4f 91       	pop	r20
    a29e:	3f 91       	pop	r19
    a2a0:	2f 91       	pop	r18
    a2a2:	0f 90       	pop	r0
    a2a4:	0b be       	out	0x3b, r0	; 59
    a2a6:	0f 90       	pop	r0
    a2a8:	09 be       	out	0x39, r0	; 57
    a2aa:	0f 90       	pop	r0
    a2ac:	08 be       	out	0x38, r0	; 56
    a2ae:	0f 90       	pop	r0
    a2b0:	0f be       	out	0x3f, r0	; 63
    a2b2:	0f 90       	pop	r0
    a2b4:	1f 90       	pop	r1
    a2b6:	18 95       	reti

0000a2b8 <__vector_19>:
    a2b8:	1f 92       	push	r1
    a2ba:	0f 92       	push	r0
    a2bc:	0f b6       	in	r0, 0x3f	; 63
    a2be:	0f 92       	push	r0
    a2c0:	08 b6       	in	r0, 0x38	; 56
    a2c2:	0f 92       	push	r0
    a2c4:	09 b6       	in	r0, 0x39	; 57
    a2c6:	0f 92       	push	r0
    a2c8:	0b b6       	in	r0, 0x3b	; 59
    a2ca:	0f 92       	push	r0
    a2cc:	11 24       	eor	r1, r1
    a2ce:	2f 93       	push	r18
    a2d0:	3f 93       	push	r19
    a2d2:	4f 93       	push	r20
    a2d4:	5f 93       	push	r21
    a2d6:	6f 93       	push	r22
    a2d8:	7f 93       	push	r23
    a2da:	8f 93       	push	r24
    a2dc:	9f 93       	push	r25
    a2de:	af 93       	push	r26
    a2e0:	bf 93       	push	r27
    a2e2:	ef 93       	push	r30
    a2e4:	ff 93       	push	r31
    a2e6:	83 e0       	ldi	r24, 0x03	; 3
    a2e8:	0e 94 71 50 	call	0xa0e2	; 0xa0e2 <findTimerIntElement>
    a2ec:	00 97       	sbiw	r24, 0x00	; 0
    a2ee:	41 f0       	breq	.+16     	; 0xa300 <__vector_19+0x48>
    a2f0:	dc 01       	movw	r26, r24
    a2f2:	11 96       	adiw	r26, 0x01	; 1
    a2f4:	ed 91       	ld	r30, X+
    a2f6:	fc 91       	ld	r31, X
    a2f8:	12 97       	sbiw	r26, 0x02	; 2
    a2fa:	30 97       	sbiw	r30, 0x00	; 0
    a2fc:	09 f0       	breq	.+2      	; 0xa300 <__vector_19+0x48>
    a2fe:	19 95       	eicall
    a300:	ff 91       	pop	r31
    a302:	ef 91       	pop	r30
    a304:	bf 91       	pop	r27
    a306:	af 91       	pop	r26
    a308:	9f 91       	pop	r25
    a30a:	8f 91       	pop	r24
    a30c:	7f 91       	pop	r23
    a30e:	6f 91       	pop	r22
    a310:	5f 91       	pop	r21
    a312:	4f 91       	pop	r20
    a314:	3f 91       	pop	r19
    a316:	2f 91       	pop	r18
    a318:	0f 90       	pop	r0
    a31a:	0b be       	out	0x3b, r0	; 59
    a31c:	0f 90       	pop	r0
    a31e:	09 be       	out	0x39, r0	; 57
    a320:	0f 90       	pop	r0
    a322:	08 be       	out	0x38, r0	; 56
    a324:	0f 90       	pop	r0
    a326:	0f be       	out	0x3f, r0	; 63
    a328:	0f 90       	pop	r0
    a32a:	1f 90       	pop	r1
    a32c:	18 95       	reti

0000a32e <__vector_14>:
    a32e:	1f 92       	push	r1
    a330:	0f 92       	push	r0
    a332:	0f b6       	in	r0, 0x3f	; 63
    a334:	0f 92       	push	r0
    a336:	08 b6       	in	r0, 0x38	; 56
    a338:	0f 92       	push	r0
    a33a:	09 b6       	in	r0, 0x39	; 57
    a33c:	0f 92       	push	r0
    a33e:	0b b6       	in	r0, 0x3b	; 59
    a340:	0f 92       	push	r0
    a342:	11 24       	eor	r1, r1
    a344:	2f 93       	push	r18
    a346:	3f 93       	push	r19
    a348:	4f 93       	push	r20
    a34a:	5f 93       	push	r21
    a34c:	6f 93       	push	r22
    a34e:	7f 93       	push	r23
    a350:	8f 93       	push	r24
    a352:	9f 93       	push	r25
    a354:	af 93       	push	r26
    a356:	bf 93       	push	r27
    a358:	ef 93       	push	r30
    a35a:	ff 93       	push	r31
    a35c:	84 e0       	ldi	r24, 0x04	; 4
    a35e:	0e 94 71 50 	call	0xa0e2	; 0xa0e2 <findTimerIntElement>
    a362:	00 97       	sbiw	r24, 0x00	; 0
    a364:	41 f0       	breq	.+16     	; 0xa376 <__vector_14+0x48>
    a366:	dc 01       	movw	r26, r24
    a368:	11 96       	adiw	r26, 0x01	; 1
    a36a:	ed 91       	ld	r30, X+
    a36c:	fc 91       	ld	r31, X
    a36e:	12 97       	sbiw	r26, 0x02	; 2
    a370:	30 97       	sbiw	r30, 0x00	; 0
    a372:	09 f0       	breq	.+2      	; 0xa376 <__vector_14+0x48>
    a374:	19 95       	eicall
    a376:	ff 91       	pop	r31
    a378:	ef 91       	pop	r30
    a37a:	bf 91       	pop	r27
    a37c:	af 91       	pop	r26
    a37e:	9f 91       	pop	r25
    a380:	8f 91       	pop	r24
    a382:	7f 91       	pop	r23
    a384:	6f 91       	pop	r22
    a386:	5f 91       	pop	r21
    a388:	4f 91       	pop	r20
    a38a:	3f 91       	pop	r19
    a38c:	2f 91       	pop	r18
    a38e:	0f 90       	pop	r0
    a390:	0b be       	out	0x3b, r0	; 59
    a392:	0f 90       	pop	r0
    a394:	09 be       	out	0x39, r0	; 57
    a396:	0f 90       	pop	r0
    a398:	08 be       	out	0x38, r0	; 56
    a39a:	0f 90       	pop	r0
    a39c:	0f be       	out	0x3f, r0	; 63
    a39e:	0f 90       	pop	r0
    a3a0:	1f 90       	pop	r1
    a3a2:	18 95       	reti

0000a3a4 <__vector_22>:
    a3a4:	1f 92       	push	r1
    a3a6:	0f 92       	push	r0
    a3a8:	0f b6       	in	r0, 0x3f	; 63
    a3aa:	0f 92       	push	r0
    a3ac:	08 b6       	in	r0, 0x38	; 56
    a3ae:	0f 92       	push	r0
    a3b0:	09 b6       	in	r0, 0x39	; 57
    a3b2:	0f 92       	push	r0
    a3b4:	0b b6       	in	r0, 0x3b	; 59
    a3b6:	0f 92       	push	r0
    a3b8:	11 24       	eor	r1, r1
    a3ba:	2f 93       	push	r18
    a3bc:	3f 93       	push	r19
    a3be:	4f 93       	push	r20
    a3c0:	5f 93       	push	r21
    a3c2:	6f 93       	push	r22
    a3c4:	7f 93       	push	r23
    a3c6:	8f 93       	push	r24
    a3c8:	9f 93       	push	r25
    a3ca:	af 93       	push	r26
    a3cc:	bf 93       	push	r27
    a3ce:	ef 93       	push	r30
    a3d0:	ff 93       	push	r31
    a3d2:	85 e0       	ldi	r24, 0x05	; 5
    a3d4:	0e 94 71 50 	call	0xa0e2	; 0xa0e2 <findTimerIntElement>
    a3d8:	00 97       	sbiw	r24, 0x00	; 0
    a3da:	41 f0       	breq	.+16     	; 0xa3ec <__vector_22+0x48>
    a3dc:	dc 01       	movw	r26, r24
    a3de:	11 96       	adiw	r26, 0x01	; 1
    a3e0:	ed 91       	ld	r30, X+
    a3e2:	fc 91       	ld	r31, X
    a3e4:	12 97       	sbiw	r26, 0x02	; 2
    a3e6:	30 97       	sbiw	r30, 0x00	; 0
    a3e8:	09 f0       	breq	.+2      	; 0xa3ec <__vector_22+0x48>
    a3ea:	19 95       	eicall
    a3ec:	ff 91       	pop	r31
    a3ee:	ef 91       	pop	r30
    a3f0:	bf 91       	pop	r27
    a3f2:	af 91       	pop	r26
    a3f4:	9f 91       	pop	r25
    a3f6:	8f 91       	pop	r24
    a3f8:	7f 91       	pop	r23
    a3fa:	6f 91       	pop	r22
    a3fc:	5f 91       	pop	r21
    a3fe:	4f 91       	pop	r20
    a400:	3f 91       	pop	r19
    a402:	2f 91       	pop	r18
    a404:	0f 90       	pop	r0
    a406:	0b be       	out	0x3b, r0	; 59
    a408:	0f 90       	pop	r0
    a40a:	09 be       	out	0x39, r0	; 57
    a40c:	0f 90       	pop	r0
    a40e:	08 be       	out	0x38, r0	; 56
    a410:	0f 90       	pop	r0
    a412:	0f be       	out	0x3f, r0	; 63
    a414:	0f 90       	pop	r0
    a416:	1f 90       	pop	r1
    a418:	18 95       	reti

0000a41a <__vector_23>:
    a41a:	1f 92       	push	r1
    a41c:	0f 92       	push	r0
    a41e:	0f b6       	in	r0, 0x3f	; 63
    a420:	0f 92       	push	r0
    a422:	08 b6       	in	r0, 0x38	; 56
    a424:	0f 92       	push	r0
    a426:	09 b6       	in	r0, 0x39	; 57
    a428:	0f 92       	push	r0
    a42a:	0b b6       	in	r0, 0x3b	; 59
    a42c:	0f 92       	push	r0
    a42e:	11 24       	eor	r1, r1
    a430:	2f 93       	push	r18
    a432:	3f 93       	push	r19
    a434:	4f 93       	push	r20
    a436:	5f 93       	push	r21
    a438:	6f 93       	push	r22
    a43a:	7f 93       	push	r23
    a43c:	8f 93       	push	r24
    a43e:	9f 93       	push	r25
    a440:	af 93       	push	r26
    a442:	bf 93       	push	r27
    a444:	ef 93       	push	r30
    a446:	ff 93       	push	r31
    a448:	86 e0       	ldi	r24, 0x06	; 6
    a44a:	0e 94 71 50 	call	0xa0e2	; 0xa0e2 <findTimerIntElement>
    a44e:	00 97       	sbiw	r24, 0x00	; 0
    a450:	41 f0       	breq	.+16     	; 0xa462 <__vector_23+0x48>
    a452:	dc 01       	movw	r26, r24
    a454:	11 96       	adiw	r26, 0x01	; 1
    a456:	ed 91       	ld	r30, X+
    a458:	fc 91       	ld	r31, X
    a45a:	12 97       	sbiw	r26, 0x02	; 2
    a45c:	30 97       	sbiw	r30, 0x00	; 0
    a45e:	09 f0       	breq	.+2      	; 0xa462 <__vector_23+0x48>
    a460:	19 95       	eicall
    a462:	ff 91       	pop	r31
    a464:	ef 91       	pop	r30
    a466:	bf 91       	pop	r27
    a468:	af 91       	pop	r26
    a46a:	9f 91       	pop	r25
    a46c:	8f 91       	pop	r24
    a46e:	7f 91       	pop	r23
    a470:	6f 91       	pop	r22
    a472:	5f 91       	pop	r21
    a474:	4f 91       	pop	r20
    a476:	3f 91       	pop	r19
    a478:	2f 91       	pop	r18
    a47a:	0f 90       	pop	r0
    a47c:	0b be       	out	0x3b, r0	; 59
    a47e:	0f 90       	pop	r0
    a480:	09 be       	out	0x39, r0	; 57
    a482:	0f 90       	pop	r0
    a484:	08 be       	out	0x38, r0	; 56
    a486:	0f 90       	pop	r0
    a488:	0f be       	out	0x3f, r0	; 63
    a48a:	0f 90       	pop	r0
    a48c:	1f 90       	pop	r1
    a48e:	18 95       	reti

0000a490 <__vector_20>:
    a490:	1f 92       	push	r1
    a492:	0f 92       	push	r0
    a494:	0f b6       	in	r0, 0x3f	; 63
    a496:	0f 92       	push	r0
    a498:	08 b6       	in	r0, 0x38	; 56
    a49a:	0f 92       	push	r0
    a49c:	09 b6       	in	r0, 0x39	; 57
    a49e:	0f 92       	push	r0
    a4a0:	0b b6       	in	r0, 0x3b	; 59
    a4a2:	0f 92       	push	r0
    a4a4:	11 24       	eor	r1, r1
    a4a6:	2f 93       	push	r18
    a4a8:	3f 93       	push	r19
    a4aa:	4f 93       	push	r20
    a4ac:	5f 93       	push	r21
    a4ae:	6f 93       	push	r22
    a4b0:	7f 93       	push	r23
    a4b2:	8f 93       	push	r24
    a4b4:	9f 93       	push	r25
    a4b6:	af 93       	push	r26
    a4b8:	bf 93       	push	r27
    a4ba:	ef 93       	push	r30
    a4bc:	ff 93       	push	r31
    a4be:	89 e0       	ldi	r24, 0x09	; 9
    a4c0:	0e 94 71 50 	call	0xa0e2	; 0xa0e2 <findTimerIntElement>
    a4c4:	00 97       	sbiw	r24, 0x00	; 0
    a4c6:	41 f0       	breq	.+16     	; 0xa4d8 <__vector_20+0x48>
    a4c8:	dc 01       	movw	r26, r24
    a4ca:	11 96       	adiw	r26, 0x01	; 1
    a4cc:	ed 91       	ld	r30, X+
    a4ce:	fc 91       	ld	r31, X
    a4d0:	12 97       	sbiw	r26, 0x02	; 2
    a4d2:	30 97       	sbiw	r30, 0x00	; 0
    a4d4:	09 f0       	breq	.+2      	; 0xa4d8 <__vector_20+0x48>
    a4d6:	19 95       	eicall
    a4d8:	ff 91       	pop	r31
    a4da:	ef 91       	pop	r30
    a4dc:	bf 91       	pop	r27
    a4de:	af 91       	pop	r26
    a4e0:	9f 91       	pop	r25
    a4e2:	8f 91       	pop	r24
    a4e4:	7f 91       	pop	r23
    a4e6:	6f 91       	pop	r22
    a4e8:	5f 91       	pop	r21
    a4ea:	4f 91       	pop	r20
    a4ec:	3f 91       	pop	r19
    a4ee:	2f 91       	pop	r18
    a4f0:	0f 90       	pop	r0
    a4f2:	0b be       	out	0x3b, r0	; 59
    a4f4:	0f 90       	pop	r0
    a4f6:	09 be       	out	0x39, r0	; 57
    a4f8:	0f 90       	pop	r0
    a4fa:	08 be       	out	0x38, r0	; 56
    a4fc:	0f 90       	pop	r0
    a4fe:	0f be       	out	0x3f, r0	; 63
    a500:	0f 90       	pop	r0
    a502:	1f 90       	pop	r1
    a504:	18 95       	reti

0000a506 <__vector_79>:
    a506:	1f 92       	push	r1
    a508:	0f 92       	push	r0
    a50a:	0f b6       	in	r0, 0x3f	; 63
    a50c:	0f 92       	push	r0
    a50e:	08 b6       	in	r0, 0x38	; 56
    a510:	0f 92       	push	r0
    a512:	09 b6       	in	r0, 0x39	; 57
    a514:	0f 92       	push	r0
    a516:	0b b6       	in	r0, 0x3b	; 59
    a518:	0f 92       	push	r0
    a51a:	11 24       	eor	r1, r1
    a51c:	2f 93       	push	r18
    a51e:	3f 93       	push	r19
    a520:	4f 93       	push	r20
    a522:	5f 93       	push	r21
    a524:	6f 93       	push	r22
    a526:	7f 93       	push	r23
    a528:	8f 93       	push	r24
    a52a:	9f 93       	push	r25
    a52c:	af 93       	push	r26
    a52e:	bf 93       	push	r27
    a530:	ef 93       	push	r30
    a532:	ff 93       	push	r31
    a534:	8a e0       	ldi	r24, 0x0A	; 10
    a536:	0e 94 71 50 	call	0xa0e2	; 0xa0e2 <findTimerIntElement>
    a53a:	00 97       	sbiw	r24, 0x00	; 0
    a53c:	41 f0       	breq	.+16     	; 0xa54e <__vector_79+0x48>
    a53e:	dc 01       	movw	r26, r24
    a540:	11 96       	adiw	r26, 0x01	; 1
    a542:	ed 91       	ld	r30, X+
    a544:	fc 91       	ld	r31, X
    a546:	12 97       	sbiw	r26, 0x02	; 2
    a548:	30 97       	sbiw	r30, 0x00	; 0
    a54a:	09 f0       	breq	.+2      	; 0xa54e <__vector_79+0x48>
    a54c:	19 95       	eicall
    a54e:	ff 91       	pop	r31
    a550:	ef 91       	pop	r30
    a552:	bf 91       	pop	r27
    a554:	af 91       	pop	r26
    a556:	9f 91       	pop	r25
    a558:	8f 91       	pop	r24
    a55a:	7f 91       	pop	r23
    a55c:	6f 91       	pop	r22
    a55e:	5f 91       	pop	r21
    a560:	4f 91       	pop	r20
    a562:	3f 91       	pop	r19
    a564:	2f 91       	pop	r18
    a566:	0f 90       	pop	r0
    a568:	0b be       	out	0x3b, r0	; 59
    a56a:	0f 90       	pop	r0
    a56c:	09 be       	out	0x39, r0	; 57
    a56e:	0f 90       	pop	r0
    a570:	08 be       	out	0x38, r0	; 56
    a572:	0f 90       	pop	r0
    a574:	0f be       	out	0x3f, r0	; 63
    a576:	0f 90       	pop	r0
    a578:	1f 90       	pop	r1
    a57a:	18 95       	reti

0000a57c <__vector_80>:
    a57c:	1f 92       	push	r1
    a57e:	0f 92       	push	r0
    a580:	0f b6       	in	r0, 0x3f	; 63
    a582:	0f 92       	push	r0
    a584:	08 b6       	in	r0, 0x38	; 56
    a586:	0f 92       	push	r0
    a588:	09 b6       	in	r0, 0x39	; 57
    a58a:	0f 92       	push	r0
    a58c:	0b b6       	in	r0, 0x3b	; 59
    a58e:	0f 92       	push	r0
    a590:	11 24       	eor	r1, r1
    a592:	2f 93       	push	r18
    a594:	3f 93       	push	r19
    a596:	4f 93       	push	r20
    a598:	5f 93       	push	r21
    a59a:	6f 93       	push	r22
    a59c:	7f 93       	push	r23
    a59e:	8f 93       	push	r24
    a5a0:	9f 93       	push	r25
    a5a2:	af 93       	push	r26
    a5a4:	bf 93       	push	r27
    a5a6:	ef 93       	push	r30
    a5a8:	ff 93       	push	r31
    a5aa:	8b e0       	ldi	r24, 0x0B	; 11
    a5ac:	0e 94 71 50 	call	0xa0e2	; 0xa0e2 <findTimerIntElement>
    a5b0:	00 97       	sbiw	r24, 0x00	; 0
    a5b2:	41 f0       	breq	.+16     	; 0xa5c4 <__vector_80+0x48>
    a5b4:	dc 01       	movw	r26, r24
    a5b6:	11 96       	adiw	r26, 0x01	; 1
    a5b8:	ed 91       	ld	r30, X+
    a5ba:	fc 91       	ld	r31, X
    a5bc:	12 97       	sbiw	r26, 0x02	; 2
    a5be:	30 97       	sbiw	r30, 0x00	; 0
    a5c0:	09 f0       	breq	.+2      	; 0xa5c4 <__vector_80+0x48>
    a5c2:	19 95       	eicall
    a5c4:	ff 91       	pop	r31
    a5c6:	ef 91       	pop	r30
    a5c8:	bf 91       	pop	r27
    a5ca:	af 91       	pop	r26
    a5cc:	9f 91       	pop	r25
    a5ce:	8f 91       	pop	r24
    a5d0:	7f 91       	pop	r23
    a5d2:	6f 91       	pop	r22
    a5d4:	5f 91       	pop	r21
    a5d6:	4f 91       	pop	r20
    a5d8:	3f 91       	pop	r19
    a5da:	2f 91       	pop	r18
    a5dc:	0f 90       	pop	r0
    a5de:	0b be       	out	0x3b, r0	; 59
    a5e0:	0f 90       	pop	r0
    a5e2:	09 be       	out	0x39, r0	; 57
    a5e4:	0f 90       	pop	r0
    a5e6:	08 be       	out	0x38, r0	; 56
    a5e8:	0f 90       	pop	r0
    a5ea:	0f be       	out	0x3f, r0	; 63
    a5ec:	0f 90       	pop	r0
    a5ee:	1f 90       	pop	r1
    a5f0:	18 95       	reti

0000a5f2 <__vector_81>:
    a5f2:	1f 92       	push	r1
    a5f4:	0f 92       	push	r0
    a5f6:	0f b6       	in	r0, 0x3f	; 63
    a5f8:	0f 92       	push	r0
    a5fa:	08 b6       	in	r0, 0x38	; 56
    a5fc:	0f 92       	push	r0
    a5fe:	09 b6       	in	r0, 0x39	; 57
    a600:	0f 92       	push	r0
    a602:	0b b6       	in	r0, 0x3b	; 59
    a604:	0f 92       	push	r0
    a606:	11 24       	eor	r1, r1
    a608:	2f 93       	push	r18
    a60a:	3f 93       	push	r19
    a60c:	4f 93       	push	r20
    a60e:	5f 93       	push	r21
    a610:	6f 93       	push	r22
    a612:	7f 93       	push	r23
    a614:	8f 93       	push	r24
    a616:	9f 93       	push	r25
    a618:	af 93       	push	r26
    a61a:	bf 93       	push	r27
    a61c:	ef 93       	push	r30
    a61e:	ff 93       	push	r31
    a620:	8c e0       	ldi	r24, 0x0C	; 12
    a622:	0e 94 71 50 	call	0xa0e2	; 0xa0e2 <findTimerIntElement>
    a626:	00 97       	sbiw	r24, 0x00	; 0
    a628:	41 f0       	breq	.+16     	; 0xa63a <__vector_81+0x48>
    a62a:	dc 01       	movw	r26, r24
    a62c:	11 96       	adiw	r26, 0x01	; 1
    a62e:	ed 91       	ld	r30, X+
    a630:	fc 91       	ld	r31, X
    a632:	12 97       	sbiw	r26, 0x02	; 2
    a634:	30 97       	sbiw	r30, 0x00	; 0
    a636:	09 f0       	breq	.+2      	; 0xa63a <__vector_81+0x48>
    a638:	19 95       	eicall
    a63a:	ff 91       	pop	r31
    a63c:	ef 91       	pop	r30
    a63e:	bf 91       	pop	r27
    a640:	af 91       	pop	r26
    a642:	9f 91       	pop	r25
    a644:	8f 91       	pop	r24
    a646:	7f 91       	pop	r23
    a648:	6f 91       	pop	r22
    a64a:	5f 91       	pop	r21
    a64c:	4f 91       	pop	r20
    a64e:	3f 91       	pop	r19
    a650:	2f 91       	pop	r18
    a652:	0f 90       	pop	r0
    a654:	0b be       	out	0x3b, r0	; 59
    a656:	0f 90       	pop	r0
    a658:	09 be       	out	0x39, r0	; 57
    a65a:	0f 90       	pop	r0
    a65c:	08 be       	out	0x38, r0	; 56
    a65e:	0f 90       	pop	r0
    a660:	0f be       	out	0x3f, r0	; 63
    a662:	0f 90       	pop	r0
    a664:	1f 90       	pop	r1
    a666:	18 95       	reti

0000a668 <__vector_82>:
    a668:	1f 92       	push	r1
    a66a:	0f 92       	push	r0
    a66c:	0f b6       	in	r0, 0x3f	; 63
    a66e:	0f 92       	push	r0
    a670:	08 b6       	in	r0, 0x38	; 56
    a672:	0f 92       	push	r0
    a674:	09 b6       	in	r0, 0x39	; 57
    a676:	0f 92       	push	r0
    a678:	0b b6       	in	r0, 0x3b	; 59
    a67a:	0f 92       	push	r0
    a67c:	11 24       	eor	r1, r1
    a67e:	2f 93       	push	r18
    a680:	3f 93       	push	r19
    a682:	4f 93       	push	r20
    a684:	5f 93       	push	r21
    a686:	6f 93       	push	r22
    a688:	7f 93       	push	r23
    a68a:	8f 93       	push	r24
    a68c:	9f 93       	push	r25
    a68e:	af 93       	push	r26
    a690:	bf 93       	push	r27
    a692:	ef 93       	push	r30
    a694:	ff 93       	push	r31
    a696:	8d e0       	ldi	r24, 0x0D	; 13
    a698:	0e 94 71 50 	call	0xa0e2	; 0xa0e2 <findTimerIntElement>
    a69c:	00 97       	sbiw	r24, 0x00	; 0
    a69e:	41 f0       	breq	.+16     	; 0xa6b0 <__vector_82+0x48>
    a6a0:	dc 01       	movw	r26, r24
    a6a2:	11 96       	adiw	r26, 0x01	; 1
    a6a4:	ed 91       	ld	r30, X+
    a6a6:	fc 91       	ld	r31, X
    a6a8:	12 97       	sbiw	r26, 0x02	; 2
    a6aa:	30 97       	sbiw	r30, 0x00	; 0
    a6ac:	09 f0       	breq	.+2      	; 0xa6b0 <__vector_82+0x48>
    a6ae:	19 95       	eicall
    a6b0:	ff 91       	pop	r31
    a6b2:	ef 91       	pop	r30
    a6b4:	bf 91       	pop	r27
    a6b6:	af 91       	pop	r26
    a6b8:	9f 91       	pop	r25
    a6ba:	8f 91       	pop	r24
    a6bc:	7f 91       	pop	r23
    a6be:	6f 91       	pop	r22
    a6c0:	5f 91       	pop	r21
    a6c2:	4f 91       	pop	r20
    a6c4:	3f 91       	pop	r19
    a6c6:	2f 91       	pop	r18
    a6c8:	0f 90       	pop	r0
    a6ca:	0b be       	out	0x3b, r0	; 59
    a6cc:	0f 90       	pop	r0
    a6ce:	09 be       	out	0x39, r0	; 57
    a6d0:	0f 90       	pop	r0
    a6d2:	08 be       	out	0x38, r0	; 56
    a6d4:	0f 90       	pop	r0
    a6d6:	0f be       	out	0x3f, r0	; 63
    a6d8:	0f 90       	pop	r0
    a6da:	1f 90       	pop	r1
    a6dc:	18 95       	reti

0000a6de <__vector_77>:
    a6de:	1f 92       	push	r1
    a6e0:	0f 92       	push	r0
    a6e2:	0f b6       	in	r0, 0x3f	; 63
    a6e4:	0f 92       	push	r0
    a6e6:	08 b6       	in	r0, 0x38	; 56
    a6e8:	0f 92       	push	r0
    a6ea:	09 b6       	in	r0, 0x39	; 57
    a6ec:	0f 92       	push	r0
    a6ee:	0b b6       	in	r0, 0x3b	; 59
    a6f0:	0f 92       	push	r0
    a6f2:	11 24       	eor	r1, r1
    a6f4:	2f 93       	push	r18
    a6f6:	3f 93       	push	r19
    a6f8:	4f 93       	push	r20
    a6fa:	5f 93       	push	r21
    a6fc:	6f 93       	push	r22
    a6fe:	7f 93       	push	r23
    a700:	8f 93       	push	r24
    a702:	9f 93       	push	r25
    a704:	af 93       	push	r26
    a706:	bf 93       	push	r27
    a708:	ef 93       	push	r30
    a70a:	ff 93       	push	r31
    a70c:	8e e0       	ldi	r24, 0x0E	; 14
    a70e:	0e 94 71 50 	call	0xa0e2	; 0xa0e2 <findTimerIntElement>
    a712:	00 97       	sbiw	r24, 0x00	; 0
    a714:	41 f0       	breq	.+16     	; 0xa726 <__vector_77+0x48>
    a716:	dc 01       	movw	r26, r24
    a718:	11 96       	adiw	r26, 0x01	; 1
    a71a:	ed 91       	ld	r30, X+
    a71c:	fc 91       	ld	r31, X
    a71e:	12 97       	sbiw	r26, 0x02	; 2
    a720:	30 97       	sbiw	r30, 0x00	; 0
    a722:	09 f0       	breq	.+2      	; 0xa726 <__vector_77+0x48>
    a724:	19 95       	eicall
    a726:	ff 91       	pop	r31
    a728:	ef 91       	pop	r30
    a72a:	bf 91       	pop	r27
    a72c:	af 91       	pop	r26
    a72e:	9f 91       	pop	r25
    a730:	8f 91       	pop	r24
    a732:	7f 91       	pop	r23
    a734:	6f 91       	pop	r22
    a736:	5f 91       	pop	r21
    a738:	4f 91       	pop	r20
    a73a:	3f 91       	pop	r19
    a73c:	2f 91       	pop	r18
    a73e:	0f 90       	pop	r0
    a740:	0b be       	out	0x3b, r0	; 59
    a742:	0f 90       	pop	r0
    a744:	09 be       	out	0x39, r0	; 57
    a746:	0f 90       	pop	r0
    a748:	08 be       	out	0x38, r0	; 56
    a74a:	0f 90       	pop	r0
    a74c:	0f be       	out	0x3f, r0	; 63
    a74e:	0f 90       	pop	r0
    a750:	1f 90       	pop	r1
    a752:	18 95       	reti

0000a754 <__vector_85>:
    a754:	1f 92       	push	r1
    a756:	0f 92       	push	r0
    a758:	0f b6       	in	r0, 0x3f	; 63
    a75a:	0f 92       	push	r0
    a75c:	08 b6       	in	r0, 0x38	; 56
    a75e:	0f 92       	push	r0
    a760:	09 b6       	in	r0, 0x39	; 57
    a762:	0f 92       	push	r0
    a764:	0b b6       	in	r0, 0x3b	; 59
    a766:	0f 92       	push	r0
    a768:	11 24       	eor	r1, r1
    a76a:	2f 93       	push	r18
    a76c:	3f 93       	push	r19
    a76e:	4f 93       	push	r20
    a770:	5f 93       	push	r21
    a772:	6f 93       	push	r22
    a774:	7f 93       	push	r23
    a776:	8f 93       	push	r24
    a778:	9f 93       	push	r25
    a77a:	af 93       	push	r26
    a77c:	bf 93       	push	r27
    a77e:	ef 93       	push	r30
    a780:	ff 93       	push	r31
    a782:	8f e0       	ldi	r24, 0x0F	; 15
    a784:	0e 94 71 50 	call	0xa0e2	; 0xa0e2 <findTimerIntElement>
    a788:	00 97       	sbiw	r24, 0x00	; 0
    a78a:	41 f0       	breq	.+16     	; 0xa79c <__vector_85+0x48>
    a78c:	dc 01       	movw	r26, r24
    a78e:	11 96       	adiw	r26, 0x01	; 1
    a790:	ed 91       	ld	r30, X+
    a792:	fc 91       	ld	r31, X
    a794:	12 97       	sbiw	r26, 0x02	; 2
    a796:	30 97       	sbiw	r30, 0x00	; 0
    a798:	09 f0       	breq	.+2      	; 0xa79c <__vector_85+0x48>
    a79a:	19 95       	eicall
    a79c:	ff 91       	pop	r31
    a79e:	ef 91       	pop	r30
    a7a0:	bf 91       	pop	r27
    a7a2:	af 91       	pop	r26
    a7a4:	9f 91       	pop	r25
    a7a6:	8f 91       	pop	r24
    a7a8:	7f 91       	pop	r23
    a7aa:	6f 91       	pop	r22
    a7ac:	5f 91       	pop	r21
    a7ae:	4f 91       	pop	r20
    a7b0:	3f 91       	pop	r19
    a7b2:	2f 91       	pop	r18
    a7b4:	0f 90       	pop	r0
    a7b6:	0b be       	out	0x3b, r0	; 59
    a7b8:	0f 90       	pop	r0
    a7ba:	09 be       	out	0x39, r0	; 57
    a7bc:	0f 90       	pop	r0
    a7be:	08 be       	out	0x38, r0	; 56
    a7c0:	0f 90       	pop	r0
    a7c2:	0f be       	out	0x3f, r0	; 63
    a7c4:	0f 90       	pop	r0
    a7c6:	1f 90       	pop	r1
    a7c8:	18 95       	reti

0000a7ca <__vector_86>:
    a7ca:	1f 92       	push	r1
    a7cc:	0f 92       	push	r0
    a7ce:	0f b6       	in	r0, 0x3f	; 63
    a7d0:	0f 92       	push	r0
    a7d2:	08 b6       	in	r0, 0x38	; 56
    a7d4:	0f 92       	push	r0
    a7d6:	09 b6       	in	r0, 0x39	; 57
    a7d8:	0f 92       	push	r0
    a7da:	0b b6       	in	r0, 0x3b	; 59
    a7dc:	0f 92       	push	r0
    a7de:	11 24       	eor	r1, r1
    a7e0:	2f 93       	push	r18
    a7e2:	3f 93       	push	r19
    a7e4:	4f 93       	push	r20
    a7e6:	5f 93       	push	r21
    a7e8:	6f 93       	push	r22
    a7ea:	7f 93       	push	r23
    a7ec:	8f 93       	push	r24
    a7ee:	9f 93       	push	r25
    a7f0:	af 93       	push	r26
    a7f2:	bf 93       	push	r27
    a7f4:	ef 93       	push	r30
    a7f6:	ff 93       	push	r31
    a7f8:	80 e1       	ldi	r24, 0x10	; 16
    a7fa:	0e 94 71 50 	call	0xa0e2	; 0xa0e2 <findTimerIntElement>
    a7fe:	00 97       	sbiw	r24, 0x00	; 0
    a800:	41 f0       	breq	.+16     	; 0xa812 <__vector_86+0x48>
    a802:	dc 01       	movw	r26, r24
    a804:	11 96       	adiw	r26, 0x01	; 1
    a806:	ed 91       	ld	r30, X+
    a808:	fc 91       	ld	r31, X
    a80a:	12 97       	sbiw	r26, 0x02	; 2
    a80c:	30 97       	sbiw	r30, 0x00	; 0
    a80e:	09 f0       	breq	.+2      	; 0xa812 <__vector_86+0x48>
    a810:	19 95       	eicall
    a812:	ff 91       	pop	r31
    a814:	ef 91       	pop	r30
    a816:	bf 91       	pop	r27
    a818:	af 91       	pop	r26
    a81a:	9f 91       	pop	r25
    a81c:	8f 91       	pop	r24
    a81e:	7f 91       	pop	r23
    a820:	6f 91       	pop	r22
    a822:	5f 91       	pop	r21
    a824:	4f 91       	pop	r20
    a826:	3f 91       	pop	r19
    a828:	2f 91       	pop	r18
    a82a:	0f 90       	pop	r0
    a82c:	0b be       	out	0x3b, r0	; 59
    a82e:	0f 90       	pop	r0
    a830:	09 be       	out	0x39, r0	; 57
    a832:	0f 90       	pop	r0
    a834:	08 be       	out	0x38, r0	; 56
    a836:	0f 90       	pop	r0
    a838:	0f be       	out	0x3f, r0	; 63
    a83a:	0f 90       	pop	r0
    a83c:	1f 90       	pop	r1
    a83e:	18 95       	reti

0000a840 <__vector_83>:
    a840:	1f 92       	push	r1
    a842:	0f 92       	push	r0
    a844:	0f b6       	in	r0, 0x3f	; 63
    a846:	0f 92       	push	r0
    a848:	08 b6       	in	r0, 0x38	; 56
    a84a:	0f 92       	push	r0
    a84c:	09 b6       	in	r0, 0x39	; 57
    a84e:	0f 92       	push	r0
    a850:	0b b6       	in	r0, 0x3b	; 59
    a852:	0f 92       	push	r0
    a854:	11 24       	eor	r1, r1
    a856:	2f 93       	push	r18
    a858:	3f 93       	push	r19
    a85a:	4f 93       	push	r20
    a85c:	5f 93       	push	r21
    a85e:	6f 93       	push	r22
    a860:	7f 93       	push	r23
    a862:	8f 93       	push	r24
    a864:	9f 93       	push	r25
    a866:	af 93       	push	r26
    a868:	bf 93       	push	r27
    a86a:	ef 93       	push	r30
    a86c:	ff 93       	push	r31
    a86e:	83 e1       	ldi	r24, 0x13	; 19
    a870:	0e 94 71 50 	call	0xa0e2	; 0xa0e2 <findTimerIntElement>
    a874:	00 97       	sbiw	r24, 0x00	; 0
    a876:	41 f0       	breq	.+16     	; 0xa888 <__vector_83+0x48>
    a878:	dc 01       	movw	r26, r24
    a87a:	11 96       	adiw	r26, 0x01	; 1
    a87c:	ed 91       	ld	r30, X+
    a87e:	fc 91       	ld	r31, X
    a880:	12 97       	sbiw	r26, 0x02	; 2
    a882:	30 97       	sbiw	r30, 0x00	; 0
    a884:	09 f0       	breq	.+2      	; 0xa888 <__vector_83+0x48>
    a886:	19 95       	eicall
    a888:	ff 91       	pop	r31
    a88a:	ef 91       	pop	r30
    a88c:	bf 91       	pop	r27
    a88e:	af 91       	pop	r26
    a890:	9f 91       	pop	r25
    a892:	8f 91       	pop	r24
    a894:	7f 91       	pop	r23
    a896:	6f 91       	pop	r22
    a898:	5f 91       	pop	r21
    a89a:	4f 91       	pop	r20
    a89c:	3f 91       	pop	r19
    a89e:	2f 91       	pop	r18
    a8a0:	0f 90       	pop	r0
    a8a2:	0b be       	out	0x3b, r0	; 59
    a8a4:	0f 90       	pop	r0
    a8a6:	09 be       	out	0x39, r0	; 57
    a8a8:	0f 90       	pop	r0
    a8aa:	08 be       	out	0x38, r0	; 56
    a8ac:	0f 90       	pop	r0
    a8ae:	0f be       	out	0x3f, r0	; 63
    a8b0:	0f 90       	pop	r0
    a8b2:	1f 90       	pop	r1
    a8b4:	18 95       	reti

0000a8b6 <__vector_49>:
    a8b6:	1f 92       	push	r1
    a8b8:	0f 92       	push	r0
    a8ba:	0f b6       	in	r0, 0x3f	; 63
    a8bc:	0f 92       	push	r0
    a8be:	08 b6       	in	r0, 0x38	; 56
    a8c0:	0f 92       	push	r0
    a8c2:	09 b6       	in	r0, 0x39	; 57
    a8c4:	0f 92       	push	r0
    a8c6:	0b b6       	in	r0, 0x3b	; 59
    a8c8:	0f 92       	push	r0
    a8ca:	11 24       	eor	r1, r1
    a8cc:	2f 93       	push	r18
    a8ce:	3f 93       	push	r19
    a8d0:	4f 93       	push	r20
    a8d2:	5f 93       	push	r21
    a8d4:	6f 93       	push	r22
    a8d6:	7f 93       	push	r23
    a8d8:	8f 93       	push	r24
    a8da:	9f 93       	push	r25
    a8dc:	af 93       	push	r26
    a8de:	bf 93       	push	r27
    a8e0:	ef 93       	push	r30
    a8e2:	ff 93       	push	r31
    a8e4:	84 e1       	ldi	r24, 0x14	; 20
    a8e6:	0e 94 71 50 	call	0xa0e2	; 0xa0e2 <findTimerIntElement>
    a8ea:	00 97       	sbiw	r24, 0x00	; 0
    a8ec:	41 f0       	breq	.+16     	; 0xa8fe <__vector_49+0x48>
    a8ee:	dc 01       	movw	r26, r24
    a8f0:	11 96       	adiw	r26, 0x01	; 1
    a8f2:	ed 91       	ld	r30, X+
    a8f4:	fc 91       	ld	r31, X
    a8f6:	12 97       	sbiw	r26, 0x02	; 2
    a8f8:	30 97       	sbiw	r30, 0x00	; 0
    a8fa:	09 f0       	breq	.+2      	; 0xa8fe <__vector_49+0x48>
    a8fc:	19 95       	eicall
    a8fe:	ff 91       	pop	r31
    a900:	ef 91       	pop	r30
    a902:	bf 91       	pop	r27
    a904:	af 91       	pop	r26
    a906:	9f 91       	pop	r25
    a908:	8f 91       	pop	r24
    a90a:	7f 91       	pop	r23
    a90c:	6f 91       	pop	r22
    a90e:	5f 91       	pop	r21
    a910:	4f 91       	pop	r20
    a912:	3f 91       	pop	r19
    a914:	2f 91       	pop	r18
    a916:	0f 90       	pop	r0
    a918:	0b be       	out	0x3b, r0	; 59
    a91a:	0f 90       	pop	r0
    a91c:	09 be       	out	0x39, r0	; 57
    a91e:	0f 90       	pop	r0
    a920:	08 be       	out	0x38, r0	; 56
    a922:	0f 90       	pop	r0
    a924:	0f be       	out	0x3f, r0	; 63
    a926:	0f 90       	pop	r0
    a928:	1f 90       	pop	r1
    a92a:	18 95       	reti

0000a92c <__vector_50>:
    a92c:	1f 92       	push	r1
    a92e:	0f 92       	push	r0
    a930:	0f b6       	in	r0, 0x3f	; 63
    a932:	0f 92       	push	r0
    a934:	08 b6       	in	r0, 0x38	; 56
    a936:	0f 92       	push	r0
    a938:	09 b6       	in	r0, 0x39	; 57
    a93a:	0f 92       	push	r0
    a93c:	0b b6       	in	r0, 0x3b	; 59
    a93e:	0f 92       	push	r0
    a940:	11 24       	eor	r1, r1
    a942:	2f 93       	push	r18
    a944:	3f 93       	push	r19
    a946:	4f 93       	push	r20
    a948:	5f 93       	push	r21
    a94a:	6f 93       	push	r22
    a94c:	7f 93       	push	r23
    a94e:	8f 93       	push	r24
    a950:	9f 93       	push	r25
    a952:	af 93       	push	r26
    a954:	bf 93       	push	r27
    a956:	ef 93       	push	r30
    a958:	ff 93       	push	r31
    a95a:	85 e1       	ldi	r24, 0x15	; 21
    a95c:	0e 94 71 50 	call	0xa0e2	; 0xa0e2 <findTimerIntElement>
    a960:	00 97       	sbiw	r24, 0x00	; 0
    a962:	41 f0       	breq	.+16     	; 0xa974 <__vector_50+0x48>
    a964:	dc 01       	movw	r26, r24
    a966:	11 96       	adiw	r26, 0x01	; 1
    a968:	ed 91       	ld	r30, X+
    a96a:	fc 91       	ld	r31, X
    a96c:	12 97       	sbiw	r26, 0x02	; 2
    a96e:	30 97       	sbiw	r30, 0x00	; 0
    a970:	09 f0       	breq	.+2      	; 0xa974 <__vector_50+0x48>
    a972:	19 95       	eicall
    a974:	ff 91       	pop	r31
    a976:	ef 91       	pop	r30
    a978:	bf 91       	pop	r27
    a97a:	af 91       	pop	r26
    a97c:	9f 91       	pop	r25
    a97e:	8f 91       	pop	r24
    a980:	7f 91       	pop	r23
    a982:	6f 91       	pop	r22
    a984:	5f 91       	pop	r21
    a986:	4f 91       	pop	r20
    a988:	3f 91       	pop	r19
    a98a:	2f 91       	pop	r18
    a98c:	0f 90       	pop	r0
    a98e:	0b be       	out	0x3b, r0	; 59
    a990:	0f 90       	pop	r0
    a992:	09 be       	out	0x39, r0	; 57
    a994:	0f 90       	pop	r0
    a996:	08 be       	out	0x38, r0	; 56
    a998:	0f 90       	pop	r0
    a99a:	0f be       	out	0x3f, r0	; 63
    a99c:	0f 90       	pop	r0
    a99e:	1f 90       	pop	r1
    a9a0:	18 95       	reti

0000a9a2 <__vector_51>:
    a9a2:	1f 92       	push	r1
    a9a4:	0f 92       	push	r0
    a9a6:	0f b6       	in	r0, 0x3f	; 63
    a9a8:	0f 92       	push	r0
    a9aa:	08 b6       	in	r0, 0x38	; 56
    a9ac:	0f 92       	push	r0
    a9ae:	09 b6       	in	r0, 0x39	; 57
    a9b0:	0f 92       	push	r0
    a9b2:	0b b6       	in	r0, 0x3b	; 59
    a9b4:	0f 92       	push	r0
    a9b6:	11 24       	eor	r1, r1
    a9b8:	2f 93       	push	r18
    a9ba:	3f 93       	push	r19
    a9bc:	4f 93       	push	r20
    a9be:	5f 93       	push	r21
    a9c0:	6f 93       	push	r22
    a9c2:	7f 93       	push	r23
    a9c4:	8f 93       	push	r24
    a9c6:	9f 93       	push	r25
    a9c8:	af 93       	push	r26
    a9ca:	bf 93       	push	r27
    a9cc:	ef 93       	push	r30
    a9ce:	ff 93       	push	r31
    a9d0:	86 e1       	ldi	r24, 0x16	; 22
    a9d2:	0e 94 71 50 	call	0xa0e2	; 0xa0e2 <findTimerIntElement>
    a9d6:	00 97       	sbiw	r24, 0x00	; 0
    a9d8:	41 f0       	breq	.+16     	; 0xa9ea <__vector_51+0x48>
    a9da:	dc 01       	movw	r26, r24
    a9dc:	11 96       	adiw	r26, 0x01	; 1
    a9de:	ed 91       	ld	r30, X+
    a9e0:	fc 91       	ld	r31, X
    a9e2:	12 97       	sbiw	r26, 0x02	; 2
    a9e4:	30 97       	sbiw	r30, 0x00	; 0
    a9e6:	09 f0       	breq	.+2      	; 0xa9ea <__vector_51+0x48>
    a9e8:	19 95       	eicall
    a9ea:	ff 91       	pop	r31
    a9ec:	ef 91       	pop	r30
    a9ee:	bf 91       	pop	r27
    a9f0:	af 91       	pop	r26
    a9f2:	9f 91       	pop	r25
    a9f4:	8f 91       	pop	r24
    a9f6:	7f 91       	pop	r23
    a9f8:	6f 91       	pop	r22
    a9fa:	5f 91       	pop	r21
    a9fc:	4f 91       	pop	r20
    a9fe:	3f 91       	pop	r19
    aa00:	2f 91       	pop	r18
    aa02:	0f 90       	pop	r0
    aa04:	0b be       	out	0x3b, r0	; 59
    aa06:	0f 90       	pop	r0
    aa08:	09 be       	out	0x39, r0	; 57
    aa0a:	0f 90       	pop	r0
    aa0c:	08 be       	out	0x38, r0	; 56
    aa0e:	0f 90       	pop	r0
    aa10:	0f be       	out	0x3f, r0	; 63
    aa12:	0f 90       	pop	r0
    aa14:	1f 90       	pop	r1
    aa16:	18 95       	reti

0000aa18 <__vector_52>:
    aa18:	1f 92       	push	r1
    aa1a:	0f 92       	push	r0
    aa1c:	0f b6       	in	r0, 0x3f	; 63
    aa1e:	0f 92       	push	r0
    aa20:	08 b6       	in	r0, 0x38	; 56
    aa22:	0f 92       	push	r0
    aa24:	09 b6       	in	r0, 0x39	; 57
    aa26:	0f 92       	push	r0
    aa28:	0b b6       	in	r0, 0x3b	; 59
    aa2a:	0f 92       	push	r0
    aa2c:	11 24       	eor	r1, r1
    aa2e:	2f 93       	push	r18
    aa30:	3f 93       	push	r19
    aa32:	4f 93       	push	r20
    aa34:	5f 93       	push	r21
    aa36:	6f 93       	push	r22
    aa38:	7f 93       	push	r23
    aa3a:	8f 93       	push	r24
    aa3c:	9f 93       	push	r25
    aa3e:	af 93       	push	r26
    aa40:	bf 93       	push	r27
    aa42:	ef 93       	push	r30
    aa44:	ff 93       	push	r31
    aa46:	87 e1       	ldi	r24, 0x17	; 23
    aa48:	0e 94 71 50 	call	0xa0e2	; 0xa0e2 <findTimerIntElement>
    aa4c:	00 97       	sbiw	r24, 0x00	; 0
    aa4e:	41 f0       	breq	.+16     	; 0xaa60 <__vector_52+0x48>
    aa50:	dc 01       	movw	r26, r24
    aa52:	11 96       	adiw	r26, 0x01	; 1
    aa54:	ed 91       	ld	r30, X+
    aa56:	fc 91       	ld	r31, X
    aa58:	12 97       	sbiw	r26, 0x02	; 2
    aa5a:	30 97       	sbiw	r30, 0x00	; 0
    aa5c:	09 f0       	breq	.+2      	; 0xaa60 <__vector_52+0x48>
    aa5e:	19 95       	eicall
    aa60:	ff 91       	pop	r31
    aa62:	ef 91       	pop	r30
    aa64:	bf 91       	pop	r27
    aa66:	af 91       	pop	r26
    aa68:	9f 91       	pop	r25
    aa6a:	8f 91       	pop	r24
    aa6c:	7f 91       	pop	r23
    aa6e:	6f 91       	pop	r22
    aa70:	5f 91       	pop	r21
    aa72:	4f 91       	pop	r20
    aa74:	3f 91       	pop	r19
    aa76:	2f 91       	pop	r18
    aa78:	0f 90       	pop	r0
    aa7a:	0b be       	out	0x3b, r0	; 59
    aa7c:	0f 90       	pop	r0
    aa7e:	09 be       	out	0x39, r0	; 57
    aa80:	0f 90       	pop	r0
    aa82:	08 be       	out	0x38, r0	; 56
    aa84:	0f 90       	pop	r0
    aa86:	0f be       	out	0x3f, r0	; 63
    aa88:	0f 90       	pop	r0
    aa8a:	1f 90       	pop	r1
    aa8c:	18 95       	reti

0000aa8e <__vector_47>:
    aa8e:	1f 92       	push	r1
    aa90:	0f 92       	push	r0
    aa92:	0f b6       	in	r0, 0x3f	; 63
    aa94:	0f 92       	push	r0
    aa96:	08 b6       	in	r0, 0x38	; 56
    aa98:	0f 92       	push	r0
    aa9a:	09 b6       	in	r0, 0x39	; 57
    aa9c:	0f 92       	push	r0
    aa9e:	0b b6       	in	r0, 0x3b	; 59
    aaa0:	0f 92       	push	r0
    aaa2:	11 24       	eor	r1, r1
    aaa4:	2f 93       	push	r18
    aaa6:	3f 93       	push	r19
    aaa8:	4f 93       	push	r20
    aaaa:	5f 93       	push	r21
    aaac:	6f 93       	push	r22
    aaae:	7f 93       	push	r23
    aab0:	8f 93       	push	r24
    aab2:	9f 93       	push	r25
    aab4:	af 93       	push	r26
    aab6:	bf 93       	push	r27
    aab8:	ef 93       	push	r30
    aaba:	ff 93       	push	r31
    aabc:	88 e1       	ldi	r24, 0x18	; 24
    aabe:	0e 94 71 50 	call	0xa0e2	; 0xa0e2 <findTimerIntElement>
    aac2:	00 97       	sbiw	r24, 0x00	; 0
    aac4:	41 f0       	breq	.+16     	; 0xaad6 <__vector_47+0x48>
    aac6:	dc 01       	movw	r26, r24
    aac8:	11 96       	adiw	r26, 0x01	; 1
    aaca:	ed 91       	ld	r30, X+
    aacc:	fc 91       	ld	r31, X
    aace:	12 97       	sbiw	r26, 0x02	; 2
    aad0:	30 97       	sbiw	r30, 0x00	; 0
    aad2:	09 f0       	breq	.+2      	; 0xaad6 <__vector_47+0x48>
    aad4:	19 95       	eicall
    aad6:	ff 91       	pop	r31
    aad8:	ef 91       	pop	r30
    aada:	bf 91       	pop	r27
    aadc:	af 91       	pop	r26
    aade:	9f 91       	pop	r25
    aae0:	8f 91       	pop	r24
    aae2:	7f 91       	pop	r23
    aae4:	6f 91       	pop	r22
    aae6:	5f 91       	pop	r21
    aae8:	4f 91       	pop	r20
    aaea:	3f 91       	pop	r19
    aaec:	2f 91       	pop	r18
    aaee:	0f 90       	pop	r0
    aaf0:	0b be       	out	0x3b, r0	; 59
    aaf2:	0f 90       	pop	r0
    aaf4:	09 be       	out	0x39, r0	; 57
    aaf6:	0f 90       	pop	r0
    aaf8:	08 be       	out	0x38, r0	; 56
    aafa:	0f 90       	pop	r0
    aafc:	0f be       	out	0x3f, r0	; 63
    aafe:	0f 90       	pop	r0
    ab00:	1f 90       	pop	r1
    ab02:	18 95       	reti

0000ab04 <__vector_55>:
    ab04:	1f 92       	push	r1
    ab06:	0f 92       	push	r0
    ab08:	0f b6       	in	r0, 0x3f	; 63
    ab0a:	0f 92       	push	r0
    ab0c:	08 b6       	in	r0, 0x38	; 56
    ab0e:	0f 92       	push	r0
    ab10:	09 b6       	in	r0, 0x39	; 57
    ab12:	0f 92       	push	r0
    ab14:	0b b6       	in	r0, 0x3b	; 59
    ab16:	0f 92       	push	r0
    ab18:	11 24       	eor	r1, r1
    ab1a:	2f 93       	push	r18
    ab1c:	3f 93       	push	r19
    ab1e:	4f 93       	push	r20
    ab20:	5f 93       	push	r21
    ab22:	6f 93       	push	r22
    ab24:	7f 93       	push	r23
    ab26:	8f 93       	push	r24
    ab28:	9f 93       	push	r25
    ab2a:	af 93       	push	r26
    ab2c:	bf 93       	push	r27
    ab2e:	ef 93       	push	r30
    ab30:	ff 93       	push	r31
    ab32:	89 e1       	ldi	r24, 0x19	; 25
    ab34:	0e 94 71 50 	call	0xa0e2	; 0xa0e2 <findTimerIntElement>
    ab38:	00 97       	sbiw	r24, 0x00	; 0
    ab3a:	41 f0       	breq	.+16     	; 0xab4c <__vector_55+0x48>
    ab3c:	dc 01       	movw	r26, r24
    ab3e:	11 96       	adiw	r26, 0x01	; 1
    ab40:	ed 91       	ld	r30, X+
    ab42:	fc 91       	ld	r31, X
    ab44:	12 97       	sbiw	r26, 0x02	; 2
    ab46:	30 97       	sbiw	r30, 0x00	; 0
    ab48:	09 f0       	breq	.+2      	; 0xab4c <__vector_55+0x48>
    ab4a:	19 95       	eicall
    ab4c:	ff 91       	pop	r31
    ab4e:	ef 91       	pop	r30
    ab50:	bf 91       	pop	r27
    ab52:	af 91       	pop	r26
    ab54:	9f 91       	pop	r25
    ab56:	8f 91       	pop	r24
    ab58:	7f 91       	pop	r23
    ab5a:	6f 91       	pop	r22
    ab5c:	5f 91       	pop	r21
    ab5e:	4f 91       	pop	r20
    ab60:	3f 91       	pop	r19
    ab62:	2f 91       	pop	r18
    ab64:	0f 90       	pop	r0
    ab66:	0b be       	out	0x3b, r0	; 59
    ab68:	0f 90       	pop	r0
    ab6a:	09 be       	out	0x39, r0	; 57
    ab6c:	0f 90       	pop	r0
    ab6e:	08 be       	out	0x38, r0	; 56
    ab70:	0f 90       	pop	r0
    ab72:	0f be       	out	0x3f, r0	; 63
    ab74:	0f 90       	pop	r0
    ab76:	1f 90       	pop	r1
    ab78:	18 95       	reti

0000ab7a <__vector_56>:
    ab7a:	1f 92       	push	r1
    ab7c:	0f 92       	push	r0
    ab7e:	0f b6       	in	r0, 0x3f	; 63
    ab80:	0f 92       	push	r0
    ab82:	08 b6       	in	r0, 0x38	; 56
    ab84:	0f 92       	push	r0
    ab86:	09 b6       	in	r0, 0x39	; 57
    ab88:	0f 92       	push	r0
    ab8a:	0b b6       	in	r0, 0x3b	; 59
    ab8c:	0f 92       	push	r0
    ab8e:	11 24       	eor	r1, r1
    ab90:	2f 93       	push	r18
    ab92:	3f 93       	push	r19
    ab94:	4f 93       	push	r20
    ab96:	5f 93       	push	r21
    ab98:	6f 93       	push	r22
    ab9a:	7f 93       	push	r23
    ab9c:	8f 93       	push	r24
    ab9e:	9f 93       	push	r25
    aba0:	af 93       	push	r26
    aba2:	bf 93       	push	r27
    aba4:	ef 93       	push	r30
    aba6:	ff 93       	push	r31
    aba8:	8a e1       	ldi	r24, 0x1A	; 26
    abaa:	0e 94 71 50 	call	0xa0e2	; 0xa0e2 <findTimerIntElement>
    abae:	00 97       	sbiw	r24, 0x00	; 0
    abb0:	41 f0       	breq	.+16     	; 0xabc2 <__vector_56+0x48>
    abb2:	dc 01       	movw	r26, r24
    abb4:	11 96       	adiw	r26, 0x01	; 1
    abb6:	ed 91       	ld	r30, X+
    abb8:	fc 91       	ld	r31, X
    abba:	12 97       	sbiw	r26, 0x02	; 2
    abbc:	30 97       	sbiw	r30, 0x00	; 0
    abbe:	09 f0       	breq	.+2      	; 0xabc2 <__vector_56+0x48>
    abc0:	19 95       	eicall
    abc2:	ff 91       	pop	r31
    abc4:	ef 91       	pop	r30
    abc6:	bf 91       	pop	r27
    abc8:	af 91       	pop	r26
    abca:	9f 91       	pop	r25
    abcc:	8f 91       	pop	r24
    abce:	7f 91       	pop	r23
    abd0:	6f 91       	pop	r22
    abd2:	5f 91       	pop	r21
    abd4:	4f 91       	pop	r20
    abd6:	3f 91       	pop	r19
    abd8:	2f 91       	pop	r18
    abda:	0f 90       	pop	r0
    abdc:	0b be       	out	0x3b, r0	; 59
    abde:	0f 90       	pop	r0
    abe0:	09 be       	out	0x39, r0	; 57
    abe2:	0f 90       	pop	r0
    abe4:	08 be       	out	0x38, r0	; 56
    abe6:	0f 90       	pop	r0
    abe8:	0f be       	out	0x3f, r0	; 63
    abea:	0f 90       	pop	r0
    abec:	1f 90       	pop	r1
    abee:	18 95       	reti

0000abf0 <__vector_53>:
    abf0:	1f 92       	push	r1
    abf2:	0f 92       	push	r0
    abf4:	0f b6       	in	r0, 0x3f	; 63
    abf6:	0f 92       	push	r0
    abf8:	08 b6       	in	r0, 0x38	; 56
    abfa:	0f 92       	push	r0
    abfc:	09 b6       	in	r0, 0x39	; 57
    abfe:	0f 92       	push	r0
    ac00:	0b b6       	in	r0, 0x3b	; 59
    ac02:	0f 92       	push	r0
    ac04:	11 24       	eor	r1, r1
    ac06:	2f 93       	push	r18
    ac08:	3f 93       	push	r19
    ac0a:	4f 93       	push	r20
    ac0c:	5f 93       	push	r21
    ac0e:	6f 93       	push	r22
    ac10:	7f 93       	push	r23
    ac12:	8f 93       	push	r24
    ac14:	9f 93       	push	r25
    ac16:	af 93       	push	r26
    ac18:	bf 93       	push	r27
    ac1a:	ef 93       	push	r30
    ac1c:	ff 93       	push	r31
    ac1e:	8d e1       	ldi	r24, 0x1D	; 29
    ac20:	0e 94 71 50 	call	0xa0e2	; 0xa0e2 <findTimerIntElement>
    ac24:	00 97       	sbiw	r24, 0x00	; 0
    ac26:	41 f0       	breq	.+16     	; 0xac38 <__vector_53+0x48>
    ac28:	dc 01       	movw	r26, r24
    ac2a:	11 96       	adiw	r26, 0x01	; 1
    ac2c:	ed 91       	ld	r30, X+
    ac2e:	fc 91       	ld	r31, X
    ac30:	12 97       	sbiw	r26, 0x02	; 2
    ac32:	30 97       	sbiw	r30, 0x00	; 0
    ac34:	09 f0       	breq	.+2      	; 0xac38 <__vector_53+0x48>
    ac36:	19 95       	eicall
    ac38:	ff 91       	pop	r31
    ac3a:	ef 91       	pop	r30
    ac3c:	bf 91       	pop	r27
    ac3e:	af 91       	pop	r26
    ac40:	9f 91       	pop	r25
    ac42:	8f 91       	pop	r24
    ac44:	7f 91       	pop	r23
    ac46:	6f 91       	pop	r22
    ac48:	5f 91       	pop	r21
    ac4a:	4f 91       	pop	r20
    ac4c:	3f 91       	pop	r19
    ac4e:	2f 91       	pop	r18
    ac50:	0f 90       	pop	r0
    ac52:	0b be       	out	0x3b, r0	; 59
    ac54:	0f 90       	pop	r0
    ac56:	09 be       	out	0x39, r0	; 57
    ac58:	0f 90       	pop	r0
    ac5a:	08 be       	out	0x38, r0	; 56
    ac5c:	0f 90       	pop	r0
    ac5e:	0f be       	out	0x3f, r0	; 63
    ac60:	0f 90       	pop	r0
    ac62:	1f 90       	pop	r1
    ac64:	18 95       	reti

0000ac66 <__vector_110>:
    ac66:	1f 92       	push	r1
    ac68:	0f 92       	push	r0
    ac6a:	0f b6       	in	r0, 0x3f	; 63
    ac6c:	0f 92       	push	r0
    ac6e:	08 b6       	in	r0, 0x38	; 56
    ac70:	0f 92       	push	r0
    ac72:	09 b6       	in	r0, 0x39	; 57
    ac74:	0f 92       	push	r0
    ac76:	0b b6       	in	r0, 0x3b	; 59
    ac78:	0f 92       	push	r0
    ac7a:	11 24       	eor	r1, r1
    ac7c:	2f 93       	push	r18
    ac7e:	3f 93       	push	r19
    ac80:	4f 93       	push	r20
    ac82:	5f 93       	push	r21
    ac84:	6f 93       	push	r22
    ac86:	7f 93       	push	r23
    ac88:	8f 93       	push	r24
    ac8a:	9f 93       	push	r25
    ac8c:	af 93       	push	r26
    ac8e:	bf 93       	push	r27
    ac90:	ef 93       	push	r30
    ac92:	ff 93       	push	r31
    ac94:	8e e1       	ldi	r24, 0x1E	; 30
    ac96:	0e 94 71 50 	call	0xa0e2	; 0xa0e2 <findTimerIntElement>
    ac9a:	00 97       	sbiw	r24, 0x00	; 0
    ac9c:	41 f0       	breq	.+16     	; 0xacae <__vector_110+0x48>
    ac9e:	dc 01       	movw	r26, r24
    aca0:	11 96       	adiw	r26, 0x01	; 1
    aca2:	ed 91       	ld	r30, X+
    aca4:	fc 91       	ld	r31, X
    aca6:	12 97       	sbiw	r26, 0x02	; 2
    aca8:	30 97       	sbiw	r30, 0x00	; 0
    acaa:	09 f0       	breq	.+2      	; 0xacae <__vector_110+0x48>
    acac:	19 95       	eicall
    acae:	ff 91       	pop	r31
    acb0:	ef 91       	pop	r30
    acb2:	bf 91       	pop	r27
    acb4:	af 91       	pop	r26
    acb6:	9f 91       	pop	r25
    acb8:	8f 91       	pop	r24
    acba:	7f 91       	pop	r23
    acbc:	6f 91       	pop	r22
    acbe:	5f 91       	pop	r21
    acc0:	4f 91       	pop	r20
    acc2:	3f 91       	pop	r19
    acc4:	2f 91       	pop	r18
    acc6:	0f 90       	pop	r0
    acc8:	0b be       	out	0x3b, r0	; 59
    acca:	0f 90       	pop	r0
    accc:	09 be       	out	0x39, r0	; 57
    acce:	0f 90       	pop	r0
    acd0:	08 be       	out	0x38, r0	; 56
    acd2:	0f 90       	pop	r0
    acd4:	0f be       	out	0x3f, r0	; 63
    acd6:	0f 90       	pop	r0
    acd8:	1f 90       	pop	r1
    acda:	18 95       	reti

0000acdc <__vector_111>:
    acdc:	1f 92       	push	r1
    acde:	0f 92       	push	r0
    ace0:	0f b6       	in	r0, 0x3f	; 63
    ace2:	0f 92       	push	r0
    ace4:	08 b6       	in	r0, 0x38	; 56
    ace6:	0f 92       	push	r0
    ace8:	09 b6       	in	r0, 0x39	; 57
    acea:	0f 92       	push	r0
    acec:	0b b6       	in	r0, 0x3b	; 59
    acee:	0f 92       	push	r0
    acf0:	11 24       	eor	r1, r1
    acf2:	2f 93       	push	r18
    acf4:	3f 93       	push	r19
    acf6:	4f 93       	push	r20
    acf8:	5f 93       	push	r21
    acfa:	6f 93       	push	r22
    acfc:	7f 93       	push	r23
    acfe:	8f 93       	push	r24
    ad00:	9f 93       	push	r25
    ad02:	af 93       	push	r26
    ad04:	bf 93       	push	r27
    ad06:	ef 93       	push	r30
    ad08:	ff 93       	push	r31
    ad0a:	8f e1       	ldi	r24, 0x1F	; 31
    ad0c:	0e 94 71 50 	call	0xa0e2	; 0xa0e2 <findTimerIntElement>
    ad10:	00 97       	sbiw	r24, 0x00	; 0
    ad12:	41 f0       	breq	.+16     	; 0xad24 <__vector_111+0x48>
    ad14:	dc 01       	movw	r26, r24
    ad16:	11 96       	adiw	r26, 0x01	; 1
    ad18:	ed 91       	ld	r30, X+
    ad1a:	fc 91       	ld	r31, X
    ad1c:	12 97       	sbiw	r26, 0x02	; 2
    ad1e:	30 97       	sbiw	r30, 0x00	; 0
    ad20:	09 f0       	breq	.+2      	; 0xad24 <__vector_111+0x48>
    ad22:	19 95       	eicall
    ad24:	ff 91       	pop	r31
    ad26:	ef 91       	pop	r30
    ad28:	bf 91       	pop	r27
    ad2a:	af 91       	pop	r26
    ad2c:	9f 91       	pop	r25
    ad2e:	8f 91       	pop	r24
    ad30:	7f 91       	pop	r23
    ad32:	6f 91       	pop	r22
    ad34:	5f 91       	pop	r21
    ad36:	4f 91       	pop	r20
    ad38:	3f 91       	pop	r19
    ad3a:	2f 91       	pop	r18
    ad3c:	0f 90       	pop	r0
    ad3e:	0b be       	out	0x3b, r0	; 59
    ad40:	0f 90       	pop	r0
    ad42:	09 be       	out	0x39, r0	; 57
    ad44:	0f 90       	pop	r0
    ad46:	08 be       	out	0x38, r0	; 56
    ad48:	0f 90       	pop	r0
    ad4a:	0f be       	out	0x3f, r0	; 63
    ad4c:	0f 90       	pop	r0
    ad4e:	1f 90       	pop	r1
    ad50:	18 95       	reti

0000ad52 <__vector_112>:
    ad52:	1f 92       	push	r1
    ad54:	0f 92       	push	r0
    ad56:	0f b6       	in	r0, 0x3f	; 63
    ad58:	0f 92       	push	r0
    ad5a:	08 b6       	in	r0, 0x38	; 56
    ad5c:	0f 92       	push	r0
    ad5e:	09 b6       	in	r0, 0x39	; 57
    ad60:	0f 92       	push	r0
    ad62:	0b b6       	in	r0, 0x3b	; 59
    ad64:	0f 92       	push	r0
    ad66:	11 24       	eor	r1, r1
    ad68:	2f 93       	push	r18
    ad6a:	3f 93       	push	r19
    ad6c:	4f 93       	push	r20
    ad6e:	5f 93       	push	r21
    ad70:	6f 93       	push	r22
    ad72:	7f 93       	push	r23
    ad74:	8f 93       	push	r24
    ad76:	9f 93       	push	r25
    ad78:	af 93       	push	r26
    ad7a:	bf 93       	push	r27
    ad7c:	ef 93       	push	r30
    ad7e:	ff 93       	push	r31
    ad80:	80 e2       	ldi	r24, 0x20	; 32
    ad82:	0e 94 71 50 	call	0xa0e2	; 0xa0e2 <findTimerIntElement>
    ad86:	00 97       	sbiw	r24, 0x00	; 0
    ad88:	41 f0       	breq	.+16     	; 0xad9a <__vector_112+0x48>
    ad8a:	dc 01       	movw	r26, r24
    ad8c:	11 96       	adiw	r26, 0x01	; 1
    ad8e:	ed 91       	ld	r30, X+
    ad90:	fc 91       	ld	r31, X
    ad92:	12 97       	sbiw	r26, 0x02	; 2
    ad94:	30 97       	sbiw	r30, 0x00	; 0
    ad96:	09 f0       	breq	.+2      	; 0xad9a <__vector_112+0x48>
    ad98:	19 95       	eicall
    ad9a:	ff 91       	pop	r31
    ad9c:	ef 91       	pop	r30
    ad9e:	bf 91       	pop	r27
    ada0:	af 91       	pop	r26
    ada2:	9f 91       	pop	r25
    ada4:	8f 91       	pop	r24
    ada6:	7f 91       	pop	r23
    ada8:	6f 91       	pop	r22
    adaa:	5f 91       	pop	r21
    adac:	4f 91       	pop	r20
    adae:	3f 91       	pop	r19
    adb0:	2f 91       	pop	r18
    adb2:	0f 90       	pop	r0
    adb4:	0b be       	out	0x3b, r0	; 59
    adb6:	0f 90       	pop	r0
    adb8:	09 be       	out	0x39, r0	; 57
    adba:	0f 90       	pop	r0
    adbc:	08 be       	out	0x38, r0	; 56
    adbe:	0f 90       	pop	r0
    adc0:	0f be       	out	0x3f, r0	; 63
    adc2:	0f 90       	pop	r0
    adc4:	1f 90       	pop	r1
    adc6:	18 95       	reti

0000adc8 <__vector_113>:
    adc8:	1f 92       	push	r1
    adca:	0f 92       	push	r0
    adcc:	0f b6       	in	r0, 0x3f	; 63
    adce:	0f 92       	push	r0
    add0:	08 b6       	in	r0, 0x38	; 56
    add2:	0f 92       	push	r0
    add4:	09 b6       	in	r0, 0x39	; 57
    add6:	0f 92       	push	r0
    add8:	0b b6       	in	r0, 0x3b	; 59
    adda:	0f 92       	push	r0
    addc:	11 24       	eor	r1, r1
    adde:	2f 93       	push	r18
    ade0:	3f 93       	push	r19
    ade2:	4f 93       	push	r20
    ade4:	5f 93       	push	r21
    ade6:	6f 93       	push	r22
    ade8:	7f 93       	push	r23
    adea:	8f 93       	push	r24
    adec:	9f 93       	push	r25
    adee:	af 93       	push	r26
    adf0:	bf 93       	push	r27
    adf2:	ef 93       	push	r30
    adf4:	ff 93       	push	r31
    adf6:	81 e2       	ldi	r24, 0x21	; 33
    adf8:	0e 94 71 50 	call	0xa0e2	; 0xa0e2 <findTimerIntElement>
    adfc:	00 97       	sbiw	r24, 0x00	; 0
    adfe:	41 f0       	breq	.+16     	; 0xae10 <__vector_113+0x48>
    ae00:	dc 01       	movw	r26, r24
    ae02:	11 96       	adiw	r26, 0x01	; 1
    ae04:	ed 91       	ld	r30, X+
    ae06:	fc 91       	ld	r31, X
    ae08:	12 97       	sbiw	r26, 0x02	; 2
    ae0a:	30 97       	sbiw	r30, 0x00	; 0
    ae0c:	09 f0       	breq	.+2      	; 0xae10 <__vector_113+0x48>
    ae0e:	19 95       	eicall
    ae10:	ff 91       	pop	r31
    ae12:	ef 91       	pop	r30
    ae14:	bf 91       	pop	r27
    ae16:	af 91       	pop	r26
    ae18:	9f 91       	pop	r25
    ae1a:	8f 91       	pop	r24
    ae1c:	7f 91       	pop	r23
    ae1e:	6f 91       	pop	r22
    ae20:	5f 91       	pop	r21
    ae22:	4f 91       	pop	r20
    ae24:	3f 91       	pop	r19
    ae26:	2f 91       	pop	r18
    ae28:	0f 90       	pop	r0
    ae2a:	0b be       	out	0x3b, r0	; 59
    ae2c:	0f 90       	pop	r0
    ae2e:	09 be       	out	0x39, r0	; 57
    ae30:	0f 90       	pop	r0
    ae32:	08 be       	out	0x38, r0	; 56
    ae34:	0f 90       	pop	r0
    ae36:	0f be       	out	0x3f, r0	; 63
    ae38:	0f 90       	pop	r0
    ae3a:	1f 90       	pop	r1
    ae3c:	18 95       	reti

0000ae3e <__vector_108>:
    ae3e:	1f 92       	push	r1
    ae40:	0f 92       	push	r0
    ae42:	0f b6       	in	r0, 0x3f	; 63
    ae44:	0f 92       	push	r0
    ae46:	08 b6       	in	r0, 0x38	; 56
    ae48:	0f 92       	push	r0
    ae4a:	09 b6       	in	r0, 0x39	; 57
    ae4c:	0f 92       	push	r0
    ae4e:	0b b6       	in	r0, 0x3b	; 59
    ae50:	0f 92       	push	r0
    ae52:	11 24       	eor	r1, r1
    ae54:	2f 93       	push	r18
    ae56:	3f 93       	push	r19
    ae58:	4f 93       	push	r20
    ae5a:	5f 93       	push	r21
    ae5c:	6f 93       	push	r22
    ae5e:	7f 93       	push	r23
    ae60:	8f 93       	push	r24
    ae62:	9f 93       	push	r25
    ae64:	af 93       	push	r26
    ae66:	bf 93       	push	r27
    ae68:	ef 93       	push	r30
    ae6a:	ff 93       	push	r31
    ae6c:	82 e2       	ldi	r24, 0x22	; 34
    ae6e:	0e 94 71 50 	call	0xa0e2	; 0xa0e2 <findTimerIntElement>
    ae72:	00 97       	sbiw	r24, 0x00	; 0
    ae74:	41 f0       	breq	.+16     	; 0xae86 <__vector_108+0x48>
    ae76:	dc 01       	movw	r26, r24
    ae78:	11 96       	adiw	r26, 0x01	; 1
    ae7a:	ed 91       	ld	r30, X+
    ae7c:	fc 91       	ld	r31, X
    ae7e:	12 97       	sbiw	r26, 0x02	; 2
    ae80:	30 97       	sbiw	r30, 0x00	; 0
    ae82:	09 f0       	breq	.+2      	; 0xae86 <__vector_108+0x48>
    ae84:	19 95       	eicall
    ae86:	ff 91       	pop	r31
    ae88:	ef 91       	pop	r30
    ae8a:	bf 91       	pop	r27
    ae8c:	af 91       	pop	r26
    ae8e:	9f 91       	pop	r25
    ae90:	8f 91       	pop	r24
    ae92:	7f 91       	pop	r23
    ae94:	6f 91       	pop	r22
    ae96:	5f 91       	pop	r21
    ae98:	4f 91       	pop	r20
    ae9a:	3f 91       	pop	r19
    ae9c:	2f 91       	pop	r18
    ae9e:	0f 90       	pop	r0
    aea0:	0b be       	out	0x3b, r0	; 59
    aea2:	0f 90       	pop	r0
    aea4:	09 be       	out	0x39, r0	; 57
    aea6:	0f 90       	pop	r0
    aea8:	08 be       	out	0x38, r0	; 56
    aeaa:	0f 90       	pop	r0
    aeac:	0f be       	out	0x3f, r0	; 63
    aeae:	0f 90       	pop	r0
    aeb0:	1f 90       	pop	r1
    aeb2:	18 95       	reti

0000aeb4 <__vector_116>:
    aeb4:	1f 92       	push	r1
    aeb6:	0f 92       	push	r0
    aeb8:	0f b6       	in	r0, 0x3f	; 63
    aeba:	0f 92       	push	r0
    aebc:	08 b6       	in	r0, 0x38	; 56
    aebe:	0f 92       	push	r0
    aec0:	09 b6       	in	r0, 0x39	; 57
    aec2:	0f 92       	push	r0
    aec4:	0b b6       	in	r0, 0x3b	; 59
    aec6:	0f 92       	push	r0
    aec8:	11 24       	eor	r1, r1
    aeca:	2f 93       	push	r18
    aecc:	3f 93       	push	r19
    aece:	4f 93       	push	r20
    aed0:	5f 93       	push	r21
    aed2:	6f 93       	push	r22
    aed4:	7f 93       	push	r23
    aed6:	8f 93       	push	r24
    aed8:	9f 93       	push	r25
    aeda:	af 93       	push	r26
    aedc:	bf 93       	push	r27
    aede:	ef 93       	push	r30
    aee0:	ff 93       	push	r31
    aee2:	83 e2       	ldi	r24, 0x23	; 35
    aee4:	0e 94 71 50 	call	0xa0e2	; 0xa0e2 <findTimerIntElement>
    aee8:	00 97       	sbiw	r24, 0x00	; 0
    aeea:	41 f0       	breq	.+16     	; 0xaefc <__vector_116+0x48>
    aeec:	dc 01       	movw	r26, r24
    aeee:	11 96       	adiw	r26, 0x01	; 1
    aef0:	ed 91       	ld	r30, X+
    aef2:	fc 91       	ld	r31, X
    aef4:	12 97       	sbiw	r26, 0x02	; 2
    aef6:	30 97       	sbiw	r30, 0x00	; 0
    aef8:	09 f0       	breq	.+2      	; 0xaefc <__vector_116+0x48>
    aefa:	19 95       	eicall
    aefc:	ff 91       	pop	r31
    aefe:	ef 91       	pop	r30
    af00:	bf 91       	pop	r27
    af02:	af 91       	pop	r26
    af04:	9f 91       	pop	r25
    af06:	8f 91       	pop	r24
    af08:	7f 91       	pop	r23
    af0a:	6f 91       	pop	r22
    af0c:	5f 91       	pop	r21
    af0e:	4f 91       	pop	r20
    af10:	3f 91       	pop	r19
    af12:	2f 91       	pop	r18
    af14:	0f 90       	pop	r0
    af16:	0b be       	out	0x3b, r0	; 59
    af18:	0f 90       	pop	r0
    af1a:	09 be       	out	0x39, r0	; 57
    af1c:	0f 90       	pop	r0
    af1e:	08 be       	out	0x38, r0	; 56
    af20:	0f 90       	pop	r0
    af22:	0f be       	out	0x3f, r0	; 63
    af24:	0f 90       	pop	r0
    af26:	1f 90       	pop	r1
    af28:	18 95       	reti

0000af2a <__vector_117>:
    af2a:	1f 92       	push	r1
    af2c:	0f 92       	push	r0
    af2e:	0f b6       	in	r0, 0x3f	; 63
    af30:	0f 92       	push	r0
    af32:	08 b6       	in	r0, 0x38	; 56
    af34:	0f 92       	push	r0
    af36:	09 b6       	in	r0, 0x39	; 57
    af38:	0f 92       	push	r0
    af3a:	0b b6       	in	r0, 0x3b	; 59
    af3c:	0f 92       	push	r0
    af3e:	11 24       	eor	r1, r1
    af40:	2f 93       	push	r18
    af42:	3f 93       	push	r19
    af44:	4f 93       	push	r20
    af46:	5f 93       	push	r21
    af48:	6f 93       	push	r22
    af4a:	7f 93       	push	r23
    af4c:	8f 93       	push	r24
    af4e:	9f 93       	push	r25
    af50:	af 93       	push	r26
    af52:	bf 93       	push	r27
    af54:	ef 93       	push	r30
    af56:	ff 93       	push	r31
    af58:	84 e2       	ldi	r24, 0x24	; 36
    af5a:	0e 94 71 50 	call	0xa0e2	; 0xa0e2 <findTimerIntElement>
    af5e:	00 97       	sbiw	r24, 0x00	; 0
    af60:	41 f0       	breq	.+16     	; 0xaf72 <__vector_117+0x48>
    af62:	dc 01       	movw	r26, r24
    af64:	11 96       	adiw	r26, 0x01	; 1
    af66:	ed 91       	ld	r30, X+
    af68:	fc 91       	ld	r31, X
    af6a:	12 97       	sbiw	r26, 0x02	; 2
    af6c:	30 97       	sbiw	r30, 0x00	; 0
    af6e:	09 f0       	breq	.+2      	; 0xaf72 <__vector_117+0x48>
    af70:	19 95       	eicall
    af72:	ff 91       	pop	r31
    af74:	ef 91       	pop	r30
    af76:	bf 91       	pop	r27
    af78:	af 91       	pop	r26
    af7a:	9f 91       	pop	r25
    af7c:	8f 91       	pop	r24
    af7e:	7f 91       	pop	r23
    af80:	6f 91       	pop	r22
    af82:	5f 91       	pop	r21
    af84:	4f 91       	pop	r20
    af86:	3f 91       	pop	r19
    af88:	2f 91       	pop	r18
    af8a:	0f 90       	pop	r0
    af8c:	0b be       	out	0x3b, r0	; 59
    af8e:	0f 90       	pop	r0
    af90:	09 be       	out	0x39, r0	; 57
    af92:	0f 90       	pop	r0
    af94:	08 be       	out	0x38, r0	; 56
    af96:	0f 90       	pop	r0
    af98:	0f be       	out	0x3f, r0	; 63
    af9a:	0f 90       	pop	r0
    af9c:	1f 90       	pop	r1
    af9e:	18 95       	reti

0000afa0 <__vector_114>:
    afa0:	1f 92       	push	r1
    afa2:	0f 92       	push	r0
    afa4:	0f b6       	in	r0, 0x3f	; 63
    afa6:	0f 92       	push	r0
    afa8:	08 b6       	in	r0, 0x38	; 56
    afaa:	0f 92       	push	r0
    afac:	09 b6       	in	r0, 0x39	; 57
    afae:	0f 92       	push	r0
    afb0:	0b b6       	in	r0, 0x3b	; 59
    afb2:	0f 92       	push	r0
    afb4:	11 24       	eor	r1, r1
    afb6:	2f 93       	push	r18
    afb8:	3f 93       	push	r19
    afba:	4f 93       	push	r20
    afbc:	5f 93       	push	r21
    afbe:	6f 93       	push	r22
    afc0:	7f 93       	push	r23
    afc2:	8f 93       	push	r24
    afc4:	9f 93       	push	r25
    afc6:	af 93       	push	r26
    afc8:	bf 93       	push	r27
    afca:	ef 93       	push	r30
    afcc:	ff 93       	push	r31
    afce:	87 e2       	ldi	r24, 0x27	; 39
    afd0:	0e 94 71 50 	call	0xa0e2	; 0xa0e2 <findTimerIntElement>
    afd4:	00 97       	sbiw	r24, 0x00	; 0
    afd6:	41 f0       	breq	.+16     	; 0xafe8 <__vector_114+0x48>
    afd8:	dc 01       	movw	r26, r24
    afda:	11 96       	adiw	r26, 0x01	; 1
    afdc:	ed 91       	ld	r30, X+
    afde:	fc 91       	ld	r31, X
    afe0:	12 97       	sbiw	r26, 0x02	; 2
    afe2:	30 97       	sbiw	r30, 0x00	; 0
    afe4:	09 f0       	breq	.+2      	; 0xafe8 <__vector_114+0x48>
    afe6:	19 95       	eicall
    afe8:	ff 91       	pop	r31
    afea:	ef 91       	pop	r30
    afec:	bf 91       	pop	r27
    afee:	af 91       	pop	r26
    aff0:	9f 91       	pop	r25
    aff2:	8f 91       	pop	r24
    aff4:	7f 91       	pop	r23
    aff6:	6f 91       	pop	r22
    aff8:	5f 91       	pop	r21
    affa:	4f 91       	pop	r20
    affc:	3f 91       	pop	r19
    affe:	2f 91       	pop	r18
    b000:	0f 90       	pop	r0
    b002:	0b be       	out	0x3b, r0	; 59
    b004:	0f 90       	pop	r0
    b006:	09 be       	out	0x39, r0	; 57
    b008:	0f 90       	pop	r0
    b00a:	08 be       	out	0x38, r0	; 56
    b00c:	0f 90       	pop	r0
    b00e:	0f be       	out	0x3f, r0	; 63
    b010:	0f 90       	pop	r0
    b012:	1f 90       	pop	r1
    b014:	18 95       	reti

0000b016 <hal_requestTimerInterrupt>:
    b016:	cf 92       	push	r12
    b018:	df 92       	push	r13
    b01a:	ef 92       	push	r14
    b01c:	ff 92       	push	r15
    b01e:	0f 93       	push	r16
    b020:	1f 93       	push	r17
    b022:	cf 93       	push	r28
    b024:	df 93       	push	r29
    b026:	cd b7       	in	r28, 0x3d	; 61
    b028:	de b7       	in	r29, 0x3e	; 62
    b02a:	27 97       	sbiw	r28, 0x07	; 7
    b02c:	cd bf       	out	0x3d, r28	; 61
    b02e:	de bf       	out	0x3e, r29	; 62
    b030:	8e 83       	std	Y+6, r24	; 0x06
    b032:	9f 83       	std	Y+7, r25	; 0x07
    b034:	06 2f       	mov	r16, r22
    b036:	6a 01       	movw	r12, r20
    b038:	8f b7       	in	r24, 0x3f	; 63
    b03a:	89 83       	std	Y+1, r24	; 0x01
    b03c:	f8 94       	cli
    b03e:	ee 81       	ldd	r30, Y+6	; 0x06
    b040:	ff 81       	ldd	r31, Y+7	; 0x07
    b042:	80 91 f8 23 	lds	r24, 0x23F8
    b046:	90 91 f9 23 	lds	r25, 0x23F9
    b04a:	24 81       	ldd	r18, Z+4	; 0x04
    b04c:	35 81       	ldd	r19, Z+5	; 0x05
    b04e:	28 17       	cp	r18, r24
    b050:	39 07       	cpc	r19, r25
    b052:	21 f0       	breq	.+8      	; 0xb05c <hal_requestTimerInterrupt+0x46>
    b054:	89 81       	ldd	r24, Y+1	; 0x01
    b056:	8f bf       	out	0x3f, r24	; 63
    b058:	8b ef       	ldi	r24, 0xFB	; 251
    b05a:	a5 c0       	rjmp	.+330    	; 0xb1a6 <hal_requestTimerInterrupt+0x190>
    b05c:	ee 81       	ldd	r30, Y+6	; 0x06
    b05e:	ff 81       	ldd	r31, Y+7	; 0x07
    b060:	e0 80       	ld	r14, Z
    b062:	f1 80       	ldd	r15, Z+1	; 0x01
    b064:	d7 01       	movw	r26, r14
    b066:	1c 91       	ld	r17, X
    b068:	16 0f       	add	r17, r22
    b06a:	81 2f       	mov	r24, r17
    b06c:	87 50       	subi	r24, 0x07	; 7
    b06e:	82 30       	cpi	r24, 0x02	; 2
    b070:	70 f0       	brcs	.+28     	; 0xb08e <hal_requestTimerInterrupt+0x78>
    b072:	11 31       	cpi	r17, 0x11	; 17
    b074:	61 f0       	breq	.+24     	; 0xb08e <hal_requestTimerInterrupt+0x78>
    b076:	12 31       	cpi	r17, 0x12	; 18
    b078:	51 f0       	breq	.+20     	; 0xb08e <hal_requestTimerInterrupt+0x78>
    b07a:	1b 31       	cpi	r17, 0x1B	; 27
    b07c:	41 f0       	breq	.+16     	; 0xb08e <hal_requestTimerInterrupt+0x78>
    b07e:	1c 31       	cpi	r17, 0x1C	; 28
    b080:	31 f0       	breq	.+12     	; 0xb08e <hal_requestTimerInterrupt+0x78>
    b082:	15 32       	cpi	r17, 0x25	; 37
    b084:	21 f0       	breq	.+8      	; 0xb08e <hal_requestTimerInterrupt+0x78>
    b086:	16 32       	cpi	r17, 0x26	; 38
    b088:	11 f0       	breq	.+4      	; 0xb08e <hal_requestTimerInterrupt+0x78>
    b08a:	18 32       	cpi	r17, 0x28	; 40
    b08c:	20 f0       	brcs	.+8      	; 0xb096 <hal_requestTimerInterrupt+0x80>
    b08e:	89 81       	ldd	r24, Y+1	; 0x01
    b090:	8f bf       	out	0x3f, r24	; 63
    b092:	8a ef       	ldi	r24, 0xFA	; 250
    b094:	88 c0       	rjmp	.+272    	; 0xb1a6 <hal_requestTimerInterrupt+0x190>
    b096:	81 2f       	mov	r24, r17
    b098:	0e 94 71 50 	call	0xa0e2	; 0xa0e2 <findTimerIntElement>
    b09c:	00 97       	sbiw	r24, 0x00	; 0
    b09e:	09 f0       	breq	.+2      	; 0xb0a2 <hal_requestTimerInterrupt+0x8c>
    b0a0:	7b c0       	rjmp	.+246    	; 0xb198 <hal_requestTimerInterrupt+0x182>
    b0a2:	83 e0       	ldi	r24, 0x03	; 3
    b0a4:	90 e0       	ldi	r25, 0x00	; 0
    b0a6:	0e 94 b8 8a 	call	0x11570	; 0x11570 <utl_createLink>
    b0aa:	8a 83       	std	Y+2, r24	; 0x02
    b0ac:	9b 83       	std	Y+3, r25	; 0x03
    b0ae:	8a 81       	ldd	r24, Y+2	; 0x02
    b0b0:	9b 81       	ldd	r25, Y+3	; 0x03
    b0b2:	97 fd       	sbrc	r25, 7
    b0b4:	0c c0       	rjmp	.+24     	; 0xb0ce <hal_requestTimerInterrupt+0xb8>
    b0b6:	80 91 ea 23 	lds	r24, 0x23EA
    b0ba:	90 91 eb 23 	lds	r25, 0x23EB
    b0be:	6a 81       	ldd	r22, Y+2	; 0x02
    b0c0:	7b 81       	ldd	r23, Y+3	; 0x03
    b0c2:	41 e0       	ldi	r20, 0x01	; 1
    b0c4:	0e 94 c8 88 	call	0x11190	; 0x11190 <utl_insertLink>
    b0c8:	8a 81       	ldd	r24, Y+2	; 0x02
    b0ca:	9b 81       	ldd	r25, Y+3	; 0x03
    b0cc:	02 c0       	rjmp	.+4      	; 0xb0d2 <hal_requestTimerInterrupt+0xbc>
    b0ce:	8f ef       	ldi	r24, 0xFF	; 255
    b0d0:	9f ef       	ldi	r25, 0xFF	; 255
    b0d2:	8c 83       	std	Y+4, r24	; 0x04
    b0d4:	9d 83       	std	Y+5, r25	; 0x05
    b0d6:	8c 81       	ldd	r24, Y+4	; 0x04
    b0d8:	9d 81       	ldd	r25, Y+5	; 0x05
    b0da:	97 ff       	sbrs	r25, 7
    b0dc:	04 c0       	rjmp	.+8      	; 0xb0e6 <hal_requestTimerInterrupt+0xd0>
    b0de:	89 81       	ldd	r24, Y+1	; 0x01
    b0e0:	8f bf       	out	0x3f, r24	; 63
    b0e2:	8f ef       	ldi	r24, 0xFF	; 255
    b0e4:	60 c0       	rjmp	.+192    	; 0xb1a6 <hal_requestTimerInterrupt+0x190>
    b0e6:	ec 81       	ldd	r30, Y+4	; 0x04
    b0e8:	fd 81       	ldd	r31, Y+5	; 0x05
    b0ea:	01 90       	ld	r0, Z+
    b0ec:	f0 81       	ld	r31, Z
    b0ee:	e0 2d       	mov	r30, r0
    b0f0:	10 83       	st	Z, r17
    b0f2:	c1 82       	std	Z+1, r12	; 0x01
    b0f4:	d2 82       	std	Z+2, r13	; 0x02
    b0f6:	f7 01       	movw	r30, r14
    b0f8:	82 81       	ldd	r24, Z+2	; 0x02
    b0fa:	8f 5f       	subi	r24, 0xFF	; 255
    b0fc:	82 83       	std	Z+2, r24	; 0x02
    b0fe:	04 30       	cpi	r16, 0x04	; 4
    b100:	71 f4       	brne	.+28     	; 0xb11e <hal_requestTimerInterrupt+0x108>
    b102:	04 80       	ldd	r0, Z+4	; 0x04
    b104:	f5 81       	ldd	r31, Z+5	; 0x05
    b106:	e0 2d       	mov	r30, r0
    b108:	30 97       	sbiw	r30, 0x00	; 0
    b10a:	29 f4       	brne	.+10     	; 0xb116 <hal_requestTimerInterrupt+0x100>
    b10c:	d7 01       	movw	r26, r14
    b10e:	16 96       	adiw	r26, 0x06	; 6
    b110:	ed 91       	ld	r30, X+
    b112:	fc 91       	ld	r31, X
    b114:	17 97       	sbiw	r26, 0x07	; 7
    b116:	86 81       	ldd	r24, Z+6	; 0x06
    b118:	83 60       	ori	r24, 0x03	; 3
    b11a:	86 83       	std	Z+6, r24	; 0x06
    b11c:	41 c0       	rjmp	.+130    	; 0xb1a0 <hal_requestTimerInterrupt+0x18a>
    b11e:	00 23       	and	r16, r16
    b120:	69 f4       	brne	.+26     	; 0xb13c <hal_requestTimerInterrupt+0x126>
    b122:	04 80       	ldd	r0, Z+4	; 0x04
    b124:	f5 81       	ldd	r31, Z+5	; 0x05
    b126:	e0 2d       	mov	r30, r0
    b128:	30 97       	sbiw	r30, 0x00	; 0
    b12a:	29 f4       	brne	.+10     	; 0xb136 <hal_requestTimerInterrupt+0x120>
    b12c:	d7 01       	movw	r26, r14
    b12e:	16 96       	adiw	r26, 0x06	; 6
    b130:	ed 91       	ld	r30, X+
    b132:	fc 91       	ld	r31, X
    b134:	17 97       	sbiw	r26, 0x07	; 7
    b136:	87 81       	ldd	r24, Z+7	; 0x07
    b138:	83 60       	ori	r24, 0x03	; 3
    b13a:	0e c0       	rjmp	.+28     	; 0xb158 <hal_requestTimerInterrupt+0x142>
    b13c:	01 30       	cpi	r16, 0x01	; 1
    b13e:	71 f4       	brne	.+28     	; 0xb15c <hal_requestTimerInterrupt+0x146>
    b140:	04 80       	ldd	r0, Z+4	; 0x04
    b142:	f5 81       	ldd	r31, Z+5	; 0x05
    b144:	e0 2d       	mov	r30, r0
    b146:	30 97       	sbiw	r30, 0x00	; 0
    b148:	29 f4       	brne	.+10     	; 0xb154 <hal_requestTimerInterrupt+0x13e>
    b14a:	d7 01       	movw	r26, r14
    b14c:	16 96       	adiw	r26, 0x06	; 6
    b14e:	ed 91       	ld	r30, X+
    b150:	fc 91       	ld	r31, X
    b152:	17 97       	sbiw	r26, 0x07	; 7
    b154:	87 81       	ldd	r24, Z+7	; 0x07
    b156:	8c 60       	ori	r24, 0x0C	; 12
    b158:	87 83       	std	Z+7, r24	; 0x07
    b15a:	22 c0       	rjmp	.+68     	; 0xb1a0 <hal_requestTimerInterrupt+0x18a>
    b15c:	02 30       	cpi	r16, 0x02	; 2
    b15e:	69 f4       	brne	.+26     	; 0xb17a <hal_requestTimerInterrupt+0x164>
    b160:	04 80       	ldd	r0, Z+4	; 0x04
    b162:	f5 81       	ldd	r31, Z+5	; 0x05
    b164:	e0 2d       	mov	r30, r0
    b166:	30 97       	sbiw	r30, 0x00	; 0
    b168:	29 f4       	brne	.+10     	; 0xb174 <hal_requestTimerInterrupt+0x15e>
    b16a:	d7 01       	movw	r26, r14
    b16c:	16 96       	adiw	r26, 0x06	; 6
    b16e:	ed 91       	ld	r30, X+
    b170:	fc 91       	ld	r31, X
    b172:	17 97       	sbiw	r26, 0x07	; 7
    b174:	87 81       	ldd	r24, Z+7	; 0x07
    b176:	80 63       	ori	r24, 0x30	; 48
    b178:	ef cf       	rjmp	.-34     	; 0xb158 <hal_requestTimerInterrupt+0x142>
    b17a:	03 30       	cpi	r16, 0x03	; 3
    b17c:	89 f4       	brne	.+34     	; 0xb1a0 <hal_requestTimerInterrupt+0x18a>
    b17e:	04 80       	ldd	r0, Z+4	; 0x04
    b180:	f5 81       	ldd	r31, Z+5	; 0x05
    b182:	e0 2d       	mov	r30, r0
    b184:	30 97       	sbiw	r30, 0x00	; 0
    b186:	29 f4       	brne	.+10     	; 0xb192 <hal_requestTimerInterrupt+0x17c>
    b188:	d7 01       	movw	r26, r14
    b18a:	16 96       	adiw	r26, 0x06	; 6
    b18c:	ed 91       	ld	r30, X+
    b18e:	fc 91       	ld	r31, X
    b190:	17 97       	sbiw	r26, 0x07	; 7
    b192:	87 81       	ldd	r24, Z+7	; 0x07
    b194:	80 6c       	ori	r24, 0xC0	; 192
    b196:	e0 cf       	rjmp	.-64     	; 0xb158 <hal_requestTimerInterrupt+0x142>
    b198:	89 81       	ldd	r24, Y+1	; 0x01
    b19a:	8f bf       	out	0x3f, r24	; 63
    b19c:	89 ef       	ldi	r24, 0xF9	; 249
    b19e:	03 c0       	rjmp	.+6      	; 0xb1a6 <hal_requestTimerInterrupt+0x190>
    b1a0:	89 81       	ldd	r24, Y+1	; 0x01
    b1a2:	8f bf       	out	0x3f, r24	; 63
    b1a4:	80 e0       	ldi	r24, 0x00	; 0
    b1a6:	27 96       	adiw	r28, 0x07	; 7
    b1a8:	cd bf       	out	0x3d, r28	; 61
    b1aa:	de bf       	out	0x3e, r29	; 62
    b1ac:	df 91       	pop	r29
    b1ae:	cf 91       	pop	r28
    b1b0:	1f 91       	pop	r17
    b1b2:	0f 91       	pop	r16
    b1b4:	ff 90       	pop	r15
    b1b6:	ef 90       	pop	r14
    b1b8:	df 90       	pop	r13
    b1ba:	cf 90       	pop	r12
    b1bc:	08 95       	ret

0000b1be <hal_releaseTimerInterrupt>:
    b1be:	cf 93       	push	r28
    b1c0:	df 93       	push	r29
    b1c2:	00 d0       	rcall	.+0      	; 0xb1c4 <hal_releaseTimerInterrupt+0x6>
    b1c4:	cd b7       	in	r28, 0x3d	; 61
    b1c6:	de b7       	in	r29, 0x3e	; 62
    b1c8:	8a 83       	std	Y+2, r24	; 0x02
    b1ca:	9b 83       	std	Y+3, r25	; 0x03
    b1cc:	8f b7       	in	r24, 0x3f	; 63
    b1ce:	89 83       	std	Y+1, r24	; 0x01
    b1d0:	f8 94       	cli
    b1d2:	ea 81       	ldd	r30, Y+2	; 0x02
    b1d4:	fb 81       	ldd	r31, Y+3	; 0x03
    b1d6:	80 91 f8 23 	lds	r24, 0x23F8
    b1da:	90 91 f9 23 	lds	r25, 0x23F9
    b1de:	24 81       	ldd	r18, Z+4	; 0x04
    b1e0:	35 81       	ldd	r19, Z+5	; 0x05
    b1e2:	28 17       	cp	r18, r24
    b1e4:	39 07       	cpc	r19, r25
    b1e6:	21 f0       	breq	.+8      	; 0xb1f0 <hal_releaseTimerInterrupt+0x32>
    b1e8:	89 81       	ldd	r24, Y+1	; 0x01
    b1ea:	8f bf       	out	0x3f, r24	; 63
    b1ec:	8b ef       	ldi	r24, 0xFB	; 251
    b1ee:	b7 c0       	rjmp	.+366    	; 0xb35e <hal_releaseTimerInterrupt+0x1a0>
    b1f0:	ea 81       	ldd	r30, Y+2	; 0x02
    b1f2:	fb 81       	ldd	r31, Y+3	; 0x03
    b1f4:	01 90       	ld	r0, Z+
    b1f6:	f0 81       	ld	r31, Z
    b1f8:	e0 2d       	mov	r30, r0
    b1fa:	80 81       	ld	r24, Z
    b1fc:	86 0f       	add	r24, r22
    b1fe:	98 2f       	mov	r25, r24
    b200:	97 50       	subi	r25, 0x07	; 7
    b202:	92 30       	cpi	r25, 0x02	; 2
    b204:	70 f0       	brcs	.+28     	; 0xb222 <hal_releaseTimerInterrupt+0x64>
    b206:	81 31       	cpi	r24, 0x11	; 17
    b208:	61 f0       	breq	.+24     	; 0xb222 <hal_releaseTimerInterrupt+0x64>
    b20a:	82 31       	cpi	r24, 0x12	; 18
    b20c:	51 f0       	breq	.+20     	; 0xb222 <hal_releaseTimerInterrupt+0x64>
    b20e:	8b 31       	cpi	r24, 0x1B	; 27
    b210:	41 f0       	breq	.+16     	; 0xb222 <hal_releaseTimerInterrupt+0x64>
    b212:	8c 31       	cpi	r24, 0x1C	; 28
    b214:	31 f0       	breq	.+12     	; 0xb222 <hal_releaseTimerInterrupt+0x64>
    b216:	85 32       	cpi	r24, 0x25	; 37
    b218:	21 f0       	breq	.+8      	; 0xb222 <hal_releaseTimerInterrupt+0x64>
    b21a:	86 32       	cpi	r24, 0x26	; 38
    b21c:	11 f0       	breq	.+4      	; 0xb222 <hal_releaseTimerInterrupt+0x64>
    b21e:	88 32       	cpi	r24, 0x28	; 40
    b220:	20 f0       	brcs	.+8      	; 0xb22a <hal_releaseTimerInterrupt+0x6c>
    b222:	89 81       	ldd	r24, Y+1	; 0x01
    b224:	8f bf       	out	0x3f, r24	; 63
    b226:	8a ef       	ldi	r24, 0xFA	; 250
    b228:	9a c0       	rjmp	.+308    	; 0xb35e <hal_releaseTimerInterrupt+0x1a0>
    b22a:	a0 91 ea 23 	lds	r26, 0x23EA
    b22e:	b0 91 eb 23 	lds	r27, 0x23EB
    b232:	12 96       	adiw	r26, 0x02	; 2
    b234:	4d 91       	ld	r20, X+
    b236:	5c 91       	ld	r21, X
    b238:	13 97       	sbiw	r26, 0x03	; 3
    b23a:	a0 91 ea 23 	lds	r26, 0x23EA
    b23e:	b0 91 eb 23 	lds	r27, 0x23EB
    b242:	7e c0       	rjmp	.+252    	; 0xb340 <hal_releaseTimerInterrupt+0x182>
    b244:	a0 91 b5 27 	lds	r26, 0x27B5
    b248:	b0 91 b6 27 	lds	r27, 0x27B6
    b24c:	0d 90       	ld	r0, X+
    b24e:	bc 91       	ld	r27, X
    b250:	a0 2d       	mov	r26, r0
    b252:	9c 91       	ld	r25, X
    b254:	98 17       	cp	r25, r24
    b256:	09 f0       	breq	.+2      	; 0xb25a <hal_releaseTimerInterrupt+0x9c>
    b258:	6d c0       	rjmp	.+218    	; 0xb334 <hal_releaseTimerInterrupt+0x176>
    b25a:	82 81       	ldd	r24, Z+2	; 0x02
    b25c:	81 50       	subi	r24, 0x01	; 1
    b25e:	82 83       	std	Z+2, r24	; 0x02
    b260:	64 30       	cpi	r22, 0x04	; 4
    b262:	99 f4       	brne	.+38     	; 0xb28a <hal_releaseTimerInterrupt+0xcc>
    b264:	a4 81       	ldd	r26, Z+4	; 0x04
    b266:	b5 81       	ldd	r27, Z+5	; 0x05
    b268:	10 97       	sbiw	r26, 0x00	; 0
    b26a:	41 f0       	breq	.+16     	; 0xb27c <hal_releaseTimerInterrupt+0xbe>
    b26c:	16 96       	adiw	r26, 0x06	; 6
    b26e:	8c 91       	ld	r24, X
    b270:	16 97       	sbiw	r26, 0x06	; 6
    b272:	8c 7f       	andi	r24, 0xFC	; 252
    b274:	16 96       	adiw	r26, 0x06	; 6
    b276:	8c 93       	st	X, r24
    b278:	16 97       	sbiw	r26, 0x06	; 6
    b27a:	4e c0       	rjmp	.+156    	; 0xb318 <hal_releaseTimerInterrupt+0x15a>
    b27c:	06 80       	ldd	r0, Z+6	; 0x06
    b27e:	f7 81       	ldd	r31, Z+7	; 0x07
    b280:	e0 2d       	mov	r30, r0
    b282:	86 81       	ldd	r24, Z+6	; 0x06
    b284:	8c 7f       	andi	r24, 0xFC	; 252
    b286:	86 83       	std	Z+6, r24	; 0x06
    b288:	47 c0       	rjmp	.+142    	; 0xb318 <hal_releaseTimerInterrupt+0x15a>
    b28a:	66 23       	and	r22, r22
    b28c:	79 f4       	brne	.+30     	; 0xb2ac <hal_releaseTimerInterrupt+0xee>
    b28e:	a4 81       	ldd	r26, Z+4	; 0x04
    b290:	b5 81       	ldd	r27, Z+5	; 0x05
    b292:	10 97       	sbiw	r26, 0x00	; 0
    b294:	29 f0       	breq	.+10     	; 0xb2a0 <hal_releaseTimerInterrupt+0xe2>
    b296:	17 96       	adiw	r26, 0x07	; 7
    b298:	8c 91       	ld	r24, X
    b29a:	17 97       	sbiw	r26, 0x07	; 7
    b29c:	8c 7f       	andi	r24, 0xFC	; 252
    b29e:	10 c0       	rjmp	.+32     	; 0xb2c0 <hal_releaseTimerInterrupt+0x102>
    b2a0:	06 80       	ldd	r0, Z+6	; 0x06
    b2a2:	f7 81       	ldd	r31, Z+7	; 0x07
    b2a4:	e0 2d       	mov	r30, r0
    b2a6:	87 81       	ldd	r24, Z+7	; 0x07
    b2a8:	8c 7f       	andi	r24, 0xFC	; 252
    b2aa:	35 c0       	rjmp	.+106    	; 0xb316 <hal_releaseTimerInterrupt+0x158>
    b2ac:	61 30       	cpi	r22, 0x01	; 1
    b2ae:	91 f4       	brne	.+36     	; 0xb2d4 <hal_releaseTimerInterrupt+0x116>
    b2b0:	a4 81       	ldd	r26, Z+4	; 0x04
    b2b2:	b5 81       	ldd	r27, Z+5	; 0x05
    b2b4:	10 97       	sbiw	r26, 0x00	; 0
    b2b6:	41 f0       	breq	.+16     	; 0xb2c8 <hal_releaseTimerInterrupt+0x10a>
    b2b8:	17 96       	adiw	r26, 0x07	; 7
    b2ba:	8c 91       	ld	r24, X
    b2bc:	17 97       	sbiw	r26, 0x07	; 7
    b2be:	83 7f       	andi	r24, 0xF3	; 243
    b2c0:	17 96       	adiw	r26, 0x07	; 7
    b2c2:	8c 93       	st	X, r24
    b2c4:	17 97       	sbiw	r26, 0x07	; 7
    b2c6:	28 c0       	rjmp	.+80     	; 0xb318 <hal_releaseTimerInterrupt+0x15a>
    b2c8:	06 80       	ldd	r0, Z+6	; 0x06
    b2ca:	f7 81       	ldd	r31, Z+7	; 0x07
    b2cc:	e0 2d       	mov	r30, r0
    b2ce:	87 81       	ldd	r24, Z+7	; 0x07
    b2d0:	83 7f       	andi	r24, 0xF3	; 243
    b2d2:	21 c0       	rjmp	.+66     	; 0xb316 <hal_releaseTimerInterrupt+0x158>
    b2d4:	62 30       	cpi	r22, 0x02	; 2
    b2d6:	79 f4       	brne	.+30     	; 0xb2f6 <hal_releaseTimerInterrupt+0x138>
    b2d8:	a4 81       	ldd	r26, Z+4	; 0x04
    b2da:	b5 81       	ldd	r27, Z+5	; 0x05
    b2dc:	10 97       	sbiw	r26, 0x00	; 0
    b2de:	29 f0       	breq	.+10     	; 0xb2ea <hal_releaseTimerInterrupt+0x12c>
    b2e0:	17 96       	adiw	r26, 0x07	; 7
    b2e2:	8c 91       	ld	r24, X
    b2e4:	17 97       	sbiw	r26, 0x07	; 7
    b2e6:	8f 7c       	andi	r24, 0xCF	; 207
    b2e8:	eb cf       	rjmp	.-42     	; 0xb2c0 <hal_releaseTimerInterrupt+0x102>
    b2ea:	06 80       	ldd	r0, Z+6	; 0x06
    b2ec:	f7 81       	ldd	r31, Z+7	; 0x07
    b2ee:	e0 2d       	mov	r30, r0
    b2f0:	87 81       	ldd	r24, Z+7	; 0x07
    b2f2:	8f 7c       	andi	r24, 0xCF	; 207
    b2f4:	10 c0       	rjmp	.+32     	; 0xb316 <hal_releaseTimerInterrupt+0x158>
    b2f6:	63 30       	cpi	r22, 0x03	; 3
    b2f8:	79 f4       	brne	.+30     	; 0xb318 <hal_releaseTimerInterrupt+0x15a>
    b2fa:	a4 81       	ldd	r26, Z+4	; 0x04
    b2fc:	b5 81       	ldd	r27, Z+5	; 0x05
    b2fe:	10 97       	sbiw	r26, 0x00	; 0
    b300:	29 f0       	breq	.+10     	; 0xb30c <hal_releaseTimerInterrupt+0x14e>
    b302:	17 96       	adiw	r26, 0x07	; 7
    b304:	8c 91       	ld	r24, X
    b306:	17 97       	sbiw	r26, 0x07	; 7
    b308:	8f 73       	andi	r24, 0x3F	; 63
    b30a:	da cf       	rjmp	.-76     	; 0xb2c0 <hal_releaseTimerInterrupt+0x102>
    b30c:	06 80       	ldd	r0, Z+6	; 0x06
    b30e:	f7 81       	ldd	r31, Z+7	; 0x07
    b310:	e0 2d       	mov	r30, r0
    b312:	87 81       	ldd	r24, Z+7	; 0x07
    b314:	8f 73       	andi	r24, 0x3F	; 63
    b316:	87 83       	std	Z+7, r24	; 0x07
    b318:	80 91 ea 23 	lds	r24, 0x23EA
    b31c:	90 91 eb 23 	lds	r25, 0x23EB
    b320:	60 91 b5 27 	lds	r22, 0x27B5
    b324:	70 91 b6 27 	lds	r23, 0x27B6
    b328:	0e 94 c4 89 	call	0x11388	; 0x11388 <utl_destroyLink>
    b32c:	89 81       	ldd	r24, Y+1	; 0x01
    b32e:	8f bf       	out	0x3f, r24	; 63
    b330:	80 e0       	ldi	r24, 0x00	; 0
    b332:	15 c0       	rjmp	.+42     	; 0xb35e <hal_releaseTimerInterrupt+0x1a0>
    b334:	41 50       	subi	r20, 0x01	; 1
    b336:	50 40       	sbci	r21, 0x00	; 0
    b338:	a0 91 b5 27 	lds	r26, 0x27B5
    b33c:	b0 91 b6 27 	lds	r27, 0x27B6
    b340:	18 96       	adiw	r26, 0x08	; 8
    b342:	2d 91       	ld	r18, X+
    b344:	3c 91       	ld	r19, X
    b346:	19 97       	sbiw	r26, 0x09	; 9
    b348:	20 93 b5 27 	sts	0x27B5, r18
    b34c:	30 93 b6 27 	sts	0x27B6, r19
    b350:	14 16       	cp	r1, r20
    b352:	15 06       	cpc	r1, r21
    b354:	0c f4       	brge	.+2      	; 0xb358 <hal_releaseTimerInterrupt+0x19a>
    b356:	76 cf       	rjmp	.-276    	; 0xb244 <hal_releaseTimerInterrupt+0x86>
    b358:	89 81       	ldd	r24, Y+1	; 0x01
    b35a:	8f bf       	out	0x3f, r24	; 63
    b35c:	88 ef       	ldi	r24, 0xF8	; 248
    b35e:	23 96       	adiw	r28, 0x03	; 3
    b360:	cd bf       	out	0x3d, r28	; 61
    b362:	de bf       	out	0x3e, r29	; 62
    b364:	df 91       	pop	r29
    b366:	cf 91       	pop	r28
    b368:	08 95       	ret

0000b36a <hal_requestTimer>:
    b36a:	1f 93       	push	r17
    b36c:	cf 93       	push	r28
    b36e:	df 93       	push	r29
    b370:	cd b7       	in	r28, 0x3d	; 61
    b372:	de b7       	in	r29, 0x3e	; 62
    b374:	25 97       	sbiw	r28, 0x05	; 5
    b376:	cd bf       	out	0x3d, r28	; 61
    b378:	de bf       	out	0x3e, r29	; 62
    b37a:	18 2f       	mov	r17, r24
    b37c:	8f b7       	in	r24, 0x3f	; 63
    b37e:	89 83       	std	Y+1, r24	; 0x01
    b380:	f8 94       	cli
    b382:	14 32       	cpi	r17, 0x24	; 36
    b384:	28 f0       	brcs	.+10     	; 0xb390 <hal_requestTimer+0x26>
    b386:	89 81       	ldd	r24, Y+1	; 0x01
    b388:	8f bf       	out	0x3f, r24	; 63
    b38a:	8c ef       	ldi	r24, 0xFC	; 252
    b38c:	9f ef       	ldi	r25, 0xFF	; 255
    b38e:	93 c0       	rjmp	.+294    	; 0xb4b6 <hal_requestTimer+0x14c>
    b390:	e0 91 f8 23 	lds	r30, 0x23F8
    b394:	f0 91 f9 23 	lds	r31, 0x23F9
    b398:	82 81       	ldd	r24, Z+2	; 0x02
    b39a:	93 81       	ldd	r25, Z+3	; 0x03
    b39c:	e0 91 f8 23 	lds	r30, 0x23F8
    b3a0:	f0 91 f9 23 	lds	r31, 0x23F9
    b3a4:	0b c0       	rjmp	.+22     	; 0xb3bc <hal_requestTimer+0x52>
    b3a6:	ea 81       	ldd	r30, Y+2	; 0x02
    b3a8:	fb 81       	ldd	r31, Y+3	; 0x03
    b3aa:	01 90       	ld	r0, Z+
    b3ac:	f0 81       	ld	r31, Z
    b3ae:	e0 2d       	mov	r30, r0
    b3b0:	20 81       	ld	r18, Z
    b3b2:	21 17       	cp	r18, r17
    b3b4:	59 f0       	breq	.+22     	; 0xb3cc <hal_requestTimer+0x62>
    b3b6:	01 97       	sbiw	r24, 0x01	; 1
    b3b8:	ea 81       	ldd	r30, Y+2	; 0x02
    b3ba:	fb 81       	ldd	r31, Y+3	; 0x03
    b3bc:	20 85       	ldd	r18, Z+8	; 0x08
    b3be:	31 85       	ldd	r19, Z+9	; 0x09
    b3c0:	2a 83       	std	Y+2, r18	; 0x02
    b3c2:	3b 83       	std	Y+3, r19	; 0x03
    b3c4:	18 16       	cp	r1, r24
    b3c6:	19 06       	cpc	r1, r25
    b3c8:	74 f3       	brlt	.-36     	; 0xb3a6 <hal_requestTimer+0x3c>
    b3ca:	03 c0       	rjmp	.+6      	; 0xb3d2 <hal_requestTimer+0x68>
    b3cc:	30 97       	sbiw	r30, 0x00	; 0
    b3ce:	09 f0       	breq	.+2      	; 0xb3d2 <hal_requestTimer+0x68>
    b3d0:	69 c0       	rjmp	.+210    	; 0xb4a4 <hal_requestTimer+0x13a>
    b3d2:	88 e0       	ldi	r24, 0x08	; 8
    b3d4:	90 e0       	ldi	r25, 0x00	; 0
    b3d6:	0e 94 b8 8a 	call	0x11570	; 0x11570 <utl_createLink>
    b3da:	8a 83       	std	Y+2, r24	; 0x02
    b3dc:	9b 83       	std	Y+3, r25	; 0x03
    b3de:	8a 81       	ldd	r24, Y+2	; 0x02
    b3e0:	9b 81       	ldd	r25, Y+3	; 0x03
    b3e2:	97 fd       	sbrc	r25, 7
    b3e4:	0c c0       	rjmp	.+24     	; 0xb3fe <hal_requestTimer+0x94>
    b3e6:	80 91 f8 23 	lds	r24, 0x23F8
    b3ea:	90 91 f9 23 	lds	r25, 0x23F9
    b3ee:	6a 81       	ldd	r22, Y+2	; 0x02
    b3f0:	7b 81       	ldd	r23, Y+3	; 0x03
    b3f2:	41 e0       	ldi	r20, 0x01	; 1
    b3f4:	0e 94 c8 88 	call	0x11190	; 0x11190 <utl_insertLink>
    b3f8:	8a 81       	ldd	r24, Y+2	; 0x02
    b3fa:	9b 81       	ldd	r25, Y+3	; 0x03
    b3fc:	02 c0       	rjmp	.+4      	; 0xb402 <hal_requestTimer+0x98>
    b3fe:	8f ef       	ldi	r24, 0xFF	; 255
    b400:	9f ef       	ldi	r25, 0xFF	; 255
    b402:	8c 83       	std	Y+4, r24	; 0x04
    b404:	9d 83       	std	Y+5, r25	; 0x05
    b406:	8c 81       	ldd	r24, Y+4	; 0x04
    b408:	9d 81       	ldd	r25, Y+5	; 0x05
    b40a:	97 ff       	sbrs	r25, 7
    b40c:	05 c0       	rjmp	.+10     	; 0xb418 <hal_requestTimer+0xae>
    b40e:	89 81       	ldd	r24, Y+1	; 0x01
    b410:	8f bf       	out	0x3f, r24	; 63
    b412:	8f ef       	ldi	r24, 0xFF	; 255
    b414:	9f ef       	ldi	r25, 0xFF	; 255
    b416:	4f c0       	rjmp	.+158    	; 0xb4b6 <hal_requestTimer+0x14c>
    b418:	ec 81       	ldd	r30, Y+4	; 0x04
    b41a:	fd 81       	ldd	r31, Y+5	; 0x05
    b41c:	01 90       	ld	r0, Z+
    b41e:	f0 81       	ld	r31, Z
    b420:	e0 2d       	mov	r30, r0
    b422:	11 82       	std	Z+1, r1	; 0x01
    b424:	10 83       	st	Z, r17
    b426:	13 82       	std	Z+3, r1	; 0x03
    b428:	12 82       	std	Z+2, r1	; 0x02
    b42a:	1f 30       	cpi	r17, 0x0F	; 15
    b42c:	01 f1       	breq	.+64     	; 0xb46e <hal_requestTimer+0x104>
    b42e:	10 31       	cpi	r17, 0x10	; 16
    b430:	38 f4       	brcc	.+14     	; 0xb440 <hal_requestTimer+0xd6>
    b432:	15 30       	cpi	r17, 0x05	; 5
    b434:	a1 f0       	breq	.+40     	; 0xb45e <hal_requestTimer+0xf4>
    b436:	1a 30       	cpi	r17, 0x0A	; 10
    b438:	b9 f0       	breq	.+46     	; 0xb468 <hal_requestTimer+0xfe>
    b43a:	11 23       	and	r17, r17
    b43c:	69 f0       	breq	.+26     	; 0xb458 <hal_requestTimer+0xee>
    b43e:	37 c0       	rjmp	.+110    	; 0xb4ae <hal_requestTimer+0x144>
    b440:	19 31       	cpi	r17, 0x19	; 25
    b442:	e9 f0       	breq	.+58     	; 0xb47e <hal_requestTimer+0x114>
    b444:	1a 31       	cpi	r17, 0x1A	; 26
    b446:	18 f4       	brcc	.+6      	; 0xb44e <hal_requestTimer+0xe4>
    b448:	14 31       	cpi	r17, 0x14	; 20
    b44a:	89 f5       	brne	.+98     	; 0xb4ae <hal_requestTimer+0x144>
    b44c:	15 c0       	rjmp	.+42     	; 0xb478 <hal_requestTimer+0x10e>
    b44e:	1e 31       	cpi	r17, 0x1E	; 30
    b450:	d9 f0       	breq	.+54     	; 0xb488 <hal_requestTimer+0x11e>
    b452:	13 32       	cpi	r17, 0x23	; 35
    b454:	61 f5       	brne	.+88     	; 0xb4ae <hal_requestTimer+0x144>
    b456:	1f c0       	rjmp	.+62     	; 0xb496 <hal_requestTimer+0x12c>
    b458:	80 e0       	ldi	r24, 0x00	; 0
    b45a:	98 e0       	ldi	r25, 0x08	; 8
    b45c:	17 c0       	rjmp	.+46     	; 0xb48c <hal_requestTimer+0x122>
    b45e:	14 82       	std	Z+4, r1	; 0x04
    b460:	15 82       	std	Z+5, r1	; 0x05
    b462:	80 e4       	ldi	r24, 0x40	; 64
    b464:	98 e0       	ldi	r25, 0x08	; 8
    b466:	1b c0       	rjmp	.+54     	; 0xb49e <hal_requestTimer+0x134>
    b468:	80 e0       	ldi	r24, 0x00	; 0
    b46a:	99 e0       	ldi	r25, 0x09	; 9
    b46c:	0f c0       	rjmp	.+30     	; 0xb48c <hal_requestTimer+0x122>
    b46e:	14 82       	std	Z+4, r1	; 0x04
    b470:	15 82       	std	Z+5, r1	; 0x05
    b472:	80 e4       	ldi	r24, 0x40	; 64
    b474:	99 e0       	ldi	r25, 0x09	; 9
    b476:	13 c0       	rjmp	.+38     	; 0xb49e <hal_requestTimer+0x134>
    b478:	80 e0       	ldi	r24, 0x00	; 0
    b47a:	9a e0       	ldi	r25, 0x0A	; 10
    b47c:	07 c0       	rjmp	.+14     	; 0xb48c <hal_requestTimer+0x122>
    b47e:	14 82       	std	Z+4, r1	; 0x04
    b480:	15 82       	std	Z+5, r1	; 0x05
    b482:	80 e4       	ldi	r24, 0x40	; 64
    b484:	9a e0       	ldi	r25, 0x0A	; 10
    b486:	0b c0       	rjmp	.+22     	; 0xb49e <hal_requestTimer+0x134>
    b488:	80 e0       	ldi	r24, 0x00	; 0
    b48a:	9b e0       	ldi	r25, 0x0B	; 11
    b48c:	84 83       	std	Z+4, r24	; 0x04
    b48e:	95 83       	std	Z+5, r25	; 0x05
    b490:	16 82       	std	Z+6, r1	; 0x06
    b492:	17 82       	std	Z+7, r1	; 0x07
    b494:	0c c0       	rjmp	.+24     	; 0xb4ae <hal_requestTimer+0x144>
    b496:	14 82       	std	Z+4, r1	; 0x04
    b498:	15 82       	std	Z+5, r1	; 0x05
    b49a:	80 e4       	ldi	r24, 0x40	; 64
    b49c:	9b e0       	ldi	r25, 0x0B	; 11
    b49e:	86 83       	std	Z+6, r24	; 0x06
    b4a0:	97 83       	std	Z+7, r25	; 0x07
    b4a2:	05 c0       	rjmp	.+10     	; 0xb4ae <hal_requestTimer+0x144>
    b4a4:	89 81       	ldd	r24, Y+1	; 0x01
    b4a6:	8f bf       	out	0x3f, r24	; 63
    b4a8:	87 ef       	ldi	r24, 0xF7	; 247
    b4aa:	9f ef       	ldi	r25, 0xFF	; 255
    b4ac:	04 c0       	rjmp	.+8      	; 0xb4b6 <hal_requestTimer+0x14c>
    b4ae:	89 81       	ldd	r24, Y+1	; 0x01
    b4b0:	8f bf       	out	0x3f, r24	; 63
    b4b2:	8c 81       	ldd	r24, Y+4	; 0x04
    b4b4:	9d 81       	ldd	r25, Y+5	; 0x05
    b4b6:	25 96       	adiw	r28, 0x05	; 5
    b4b8:	cd bf       	out	0x3d, r28	; 61
    b4ba:	de bf       	out	0x3e, r29	; 62
    b4bc:	df 91       	pop	r29
    b4be:	cf 91       	pop	r28
    b4c0:	1f 91       	pop	r17
    b4c2:	08 95       	ret

0000b4c4 <hal_releaseTimer>:
    b4c4:	af 92       	push	r10
    b4c6:	bf 92       	push	r11
    b4c8:	cf 92       	push	r12
    b4ca:	df 92       	push	r13
    b4cc:	ff 92       	push	r15
    b4ce:	0f 93       	push	r16
    b4d0:	1f 93       	push	r17
    b4d2:	cf 93       	push	r28
    b4d4:	df 93       	push	r29
    b4d6:	00 d0       	rcall	.+0      	; 0xb4d8 <hal_releaseTimer+0x14>
    b4d8:	0f 92       	push	r0
    b4da:	cd b7       	in	r28, 0x3d	; 61
    b4dc:	de b7       	in	r29, 0x3e	; 62
    b4de:	8a 83       	std	Y+2, r24	; 0x02
    b4e0:	9b 83       	std	Y+3, r25	; 0x03
    b4e2:	8f b7       	in	r24, 0x3f	; 63
    b4e4:	89 83       	std	Y+1, r24	; 0x01
    b4e6:	f8 94       	cli
    b4e8:	ea 81       	ldd	r30, Y+2	; 0x02
    b4ea:	fb 81       	ldd	r31, Y+3	; 0x03
    b4ec:	80 91 f8 23 	lds	r24, 0x23F8
    b4f0:	90 91 f9 23 	lds	r25, 0x23F9
    b4f4:	24 81       	ldd	r18, Z+4	; 0x04
    b4f6:	35 81       	ldd	r19, Z+5	; 0x05
    b4f8:	28 17       	cp	r18, r24
    b4fa:	39 07       	cpc	r19, r25
    b4fc:	21 f0       	breq	.+8      	; 0xb506 <hal_releaseTimer+0x42>
    b4fe:	89 81       	ldd	r24, Y+1	; 0x01
    b500:	8f bf       	out	0x3f, r24	; 63
    b502:	8b ef       	ldi	r24, 0xFB	; 251
    b504:	ce c0       	rjmp	.+412    	; 0xb6a2 <hal_releaseTimer+0x1de>
    b506:	ea 81       	ldd	r30, Y+2	; 0x02
    b508:	fb 81       	ldd	r31, Y+3	; 0x03
    b50a:	00 81       	ld	r16, Z
    b50c:	11 81       	ldd	r17, Z+1	; 0x01
    b50e:	85 e0       	ldi	r24, 0x05	; 5
    b510:	a8 2e       	mov	r10, r24
    b512:	b1 2c       	mov	r11, r1
    b514:	20 e0       	ldi	r18, 0x00	; 0
    b516:	d8 01       	movw	r26, r16
    b518:	fc 90       	ld	r15, X
    b51a:	f2 0e       	add	r15, r18
    b51c:	e0 91 ea 23 	lds	r30, 0x23EA
    b520:	f0 91 eb 23 	lds	r31, 0x23EB
    b524:	c2 80       	ldd	r12, Z+2	; 0x02
    b526:	d3 80       	ldd	r13, Z+3	; 0x03
    b528:	e0 91 ea 23 	lds	r30, 0x23EA
    b52c:	f0 91 eb 23 	lds	r31, 0x23EB
    b530:	71 c0       	rjmp	.+226    	; 0xb614 <hal_releaseTimer+0x150>
    b532:	e0 91 b9 27 	lds	r30, 0x27B9
    b536:	f0 91 ba 27 	lds	r31, 0x27BA
    b53a:	a0 81       	ld	r26, Z
    b53c:	b1 81       	ldd	r27, Z+1	; 0x01
    b53e:	e0 91 b9 27 	lds	r30, 0x27B9
    b542:	f0 91 ba 27 	lds	r31, 0x27BA
    b546:	82 85       	ldd	r24, Z+10	; 0x0a
    b548:	93 85       	ldd	r25, Z+11	; 0x0b
    b54a:	80 93 b7 27 	sts	0x27B7, r24
    b54e:	90 93 b8 27 	sts	0x27B8, r25
    b552:	8c 91       	ld	r24, X
    b554:	8f 15       	cp	r24, r15
    b556:	09 f0       	breq	.+2      	; 0xb55a <hal_releaseTimer+0x96>
    b558:	56 c0       	rjmp	.+172    	; 0xb606 <hal_releaseTimer+0x142>
    b55a:	f8 01       	movw	r30, r16
    b55c:	82 81       	ldd	r24, Z+2	; 0x02
    b55e:	81 50       	subi	r24, 0x01	; 1
    b560:	82 83       	std	Z+2, r24	; 0x02
    b562:	04 80       	ldd	r0, Z+4	; 0x04
    b564:	f5 81       	ldd	r31, Z+5	; 0x05
    b566:	e0 2d       	mov	r30, r0
    b568:	24 30       	cpi	r18, 0x04	; 4
    b56a:	59 f4       	brne	.+22     	; 0xb582 <hal_releaseTimer+0xbe>
    b56c:	30 97       	sbiw	r30, 0x00	; 0
    b56e:	29 f4       	brne	.+10     	; 0xb57a <hal_releaseTimer+0xb6>
    b570:	d8 01       	movw	r26, r16
    b572:	16 96       	adiw	r26, 0x06	; 6
    b574:	ed 91       	ld	r30, X+
    b576:	fc 91       	ld	r31, X
    b578:	17 97       	sbiw	r26, 0x07	; 7
    b57a:	86 81       	ldd	r24, Z+6	; 0x06
    b57c:	8c 7f       	andi	r24, 0xFC	; 252
    b57e:	86 83       	std	Z+6, r24	; 0x06
    b580:	2e c0       	rjmp	.+92     	; 0xb5de <hal_releaseTimer+0x11a>
    b582:	22 23       	and	r18, r18
    b584:	51 f4       	brne	.+20     	; 0xb59a <hal_releaseTimer+0xd6>
    b586:	30 97       	sbiw	r30, 0x00	; 0
    b588:	29 f4       	brne	.+10     	; 0xb594 <hal_releaseTimer+0xd0>
    b58a:	d8 01       	movw	r26, r16
    b58c:	16 96       	adiw	r26, 0x06	; 6
    b58e:	ed 91       	ld	r30, X+
    b590:	fc 91       	ld	r31, X
    b592:	17 97       	sbiw	r26, 0x07	; 7
    b594:	87 81       	ldd	r24, Z+7	; 0x07
    b596:	8c 7f       	andi	r24, 0xFC	; 252
    b598:	21 c0       	rjmp	.+66     	; 0xb5dc <hal_releaseTimer+0x118>
    b59a:	21 30       	cpi	r18, 0x01	; 1
    b59c:	51 f4       	brne	.+20     	; 0xb5b2 <hal_releaseTimer+0xee>
    b59e:	30 97       	sbiw	r30, 0x00	; 0
    b5a0:	29 f4       	brne	.+10     	; 0xb5ac <hal_releaseTimer+0xe8>
    b5a2:	d8 01       	movw	r26, r16
    b5a4:	16 96       	adiw	r26, 0x06	; 6
    b5a6:	ed 91       	ld	r30, X+
    b5a8:	fc 91       	ld	r31, X
    b5aa:	17 97       	sbiw	r26, 0x07	; 7
    b5ac:	87 81       	ldd	r24, Z+7	; 0x07
    b5ae:	83 7f       	andi	r24, 0xF3	; 243
    b5b0:	15 c0       	rjmp	.+42     	; 0xb5dc <hal_releaseTimer+0x118>
    b5b2:	22 30       	cpi	r18, 0x02	; 2
    b5b4:	51 f4       	brne	.+20     	; 0xb5ca <hal_releaseTimer+0x106>
    b5b6:	30 97       	sbiw	r30, 0x00	; 0
    b5b8:	29 f4       	brne	.+10     	; 0xb5c4 <hal_releaseTimer+0x100>
    b5ba:	d8 01       	movw	r26, r16
    b5bc:	16 96       	adiw	r26, 0x06	; 6
    b5be:	ed 91       	ld	r30, X+
    b5c0:	fc 91       	ld	r31, X
    b5c2:	17 97       	sbiw	r26, 0x07	; 7
    b5c4:	87 81       	ldd	r24, Z+7	; 0x07
    b5c6:	8f 7c       	andi	r24, 0xCF	; 207
    b5c8:	09 c0       	rjmp	.+18     	; 0xb5dc <hal_releaseTimer+0x118>
    b5ca:	30 97       	sbiw	r30, 0x00	; 0
    b5cc:	29 f4       	brne	.+10     	; 0xb5d8 <hal_releaseTimer+0x114>
    b5ce:	d8 01       	movw	r26, r16
    b5d0:	16 96       	adiw	r26, 0x06	; 6
    b5d2:	ed 91       	ld	r30, X+
    b5d4:	fc 91       	ld	r31, X
    b5d6:	17 97       	sbiw	r26, 0x07	; 7
    b5d8:	87 81       	ldd	r24, Z+7	; 0x07
    b5da:	8f 73       	andi	r24, 0x3F	; 63
    b5dc:	87 83       	std	Z+7, r24	; 0x07
    b5de:	80 91 ea 23 	lds	r24, 0x23EA
    b5e2:	90 91 eb 23 	lds	r25, 0x23EB
    b5e6:	60 91 b9 27 	lds	r22, 0x27B9
    b5ea:	70 91 ba 27 	lds	r23, 0x27BA
    b5ee:	2c 83       	std	Y+4, r18	; 0x04
    b5f0:	0e 94 c4 89 	call	0x11388	; 0x11388 <utl_destroyLink>
    b5f4:	80 91 b7 27 	lds	r24, 0x27B7
    b5f8:	90 91 b8 27 	lds	r25, 0x27B8
    b5fc:	80 93 b9 27 	sts	0x27B9, r24
    b600:	90 93 ba 27 	sts	0x27BA, r25
    b604:	2c 81       	ldd	r18, Y+4	; 0x04
    b606:	08 94       	sec
    b608:	c1 08       	sbc	r12, r1
    b60a:	d1 08       	sbc	r13, r1
    b60c:	e0 91 b9 27 	lds	r30, 0x27B9
    b610:	f0 91 ba 27 	lds	r31, 0x27BA
    b614:	80 85       	ldd	r24, Z+8	; 0x08
    b616:	91 85       	ldd	r25, Z+9	; 0x09
    b618:	80 93 b9 27 	sts	0x27B9, r24
    b61c:	90 93 ba 27 	sts	0x27BA, r25
    b620:	1c 14       	cp	r1, r12
    b622:	1d 04       	cpc	r1, r13
    b624:	0c f4       	brge	.+2      	; 0xb628 <hal_releaseTimer+0x164>
    b626:	85 cf       	rjmp	.-246    	; 0xb532 <hal_releaseTimer+0x6e>
    b628:	2f 5f       	subi	r18, 0xFF	; 255
    b62a:	08 94       	sec
    b62c:	a1 08       	sbc	r10, r1
    b62e:	b1 08       	sbc	r11, r1
    b630:	a1 14       	cp	r10, r1
    b632:	b1 04       	cpc	r11, r1
    b634:	09 f0       	breq	.+2      	; 0xb638 <hal_releaseTimer+0x174>
    b636:	6f cf       	rjmp	.-290    	; 0xb516 <hal_releaseTimer+0x52>
    b638:	f8 01       	movw	r30, r16
    b63a:	12 82       	std	Z+2, r1	; 0x02
    b63c:	04 80       	ldd	r0, Z+4	; 0x04
    b63e:	f5 81       	ldd	r31, Z+5	; 0x05
    b640:	e0 2d       	mov	r30, r0
    b642:	30 97       	sbiw	r30, 0x00	; 0
    b644:	79 f0       	breq	.+30     	; 0xb664 <hal_releaseTimer+0x1a0>
    b646:	80 81       	ld	r24, Z
    b648:	80 7f       	andi	r24, 0xF0	; 240
    b64a:	80 83       	st	Z, r24
    b64c:	d8 01       	movw	r26, r16
    b64e:	14 96       	adiw	r26, 0x04	; 4
    b650:	ed 91       	ld	r30, X+
    b652:	fc 91       	ld	r31, X
    b654:	15 97       	sbiw	r26, 0x05	; 5
    b656:	80 81       	ld	r24, Z
    b658:	80 83       	st	Z, r24
    b65a:	14 96       	adiw	r26, 0x04	; 4
    b65c:	ed 91       	ld	r30, X+
    b65e:	fc 91       	ld	r31, X
    b660:	15 97       	sbiw	r26, 0x05	; 5
    b662:	12 c0       	rjmp	.+36     	; 0xb688 <hal_releaseTimer+0x1c4>
    b664:	d8 01       	movw	r26, r16
    b666:	16 96       	adiw	r26, 0x06	; 6
    b668:	ed 91       	ld	r30, X+
    b66a:	fc 91       	ld	r31, X
    b66c:	17 97       	sbiw	r26, 0x07	; 7
    b66e:	80 81       	ld	r24, Z
    b670:	80 7f       	andi	r24, 0xF0	; 240
    b672:	80 83       	st	Z, r24
    b674:	16 96       	adiw	r26, 0x06	; 6
    b676:	ed 91       	ld	r30, X+
    b678:	fc 91       	ld	r31, X
    b67a:	17 97       	sbiw	r26, 0x07	; 7
    b67c:	80 81       	ld	r24, Z
    b67e:	80 83       	st	Z, r24
    b680:	16 96       	adiw	r26, 0x06	; 6
    b682:	ed 91       	ld	r30, X+
    b684:	fc 91       	ld	r31, X
    b686:	17 97       	sbiw	r26, 0x07	; 7
    b688:	8c e0       	ldi	r24, 0x0C	; 12
    b68a:	81 87       	std	Z+9, r24	; 0x09
    b68c:	80 91 f8 23 	lds	r24, 0x23F8
    b690:	90 91 f9 23 	lds	r25, 0x23F9
    b694:	6a 81       	ldd	r22, Y+2	; 0x02
    b696:	7b 81       	ldd	r23, Y+3	; 0x03
    b698:	0e 94 c4 89 	call	0x11388	; 0x11388 <utl_destroyLink>
    b69c:	89 81       	ldd	r24, Y+1	; 0x01
    b69e:	8f bf       	out	0x3f, r24	; 63
    b6a0:	80 e0       	ldi	r24, 0x00	; 0
    b6a2:	24 96       	adiw	r28, 0x04	; 4
    b6a4:	cd bf       	out	0x3d, r28	; 61
    b6a6:	de bf       	out	0x3e, r29	; 62
    b6a8:	df 91       	pop	r29
    b6aa:	cf 91       	pop	r28
    b6ac:	1f 91       	pop	r17
    b6ae:	0f 91       	pop	r16
    b6b0:	ff 90       	pop	r15
    b6b2:	df 90       	pop	r13
    b6b4:	cf 90       	pop	r12
    b6b6:	bf 90       	pop	r11
    b6b8:	af 90       	pop	r10
    b6ba:	08 95       	ret

0000b6bc <hal_configureTimer>:
    b6bc:	6f 92       	push	r6
    b6be:	7f 92       	push	r7
    b6c0:	9f 92       	push	r9
    b6c2:	af 92       	push	r10
    b6c4:	bf 92       	push	r11
    b6c6:	cf 92       	push	r12
    b6c8:	df 92       	push	r13
    b6ca:	ef 92       	push	r14
    b6cc:	ff 92       	push	r15
    b6ce:	0f 93       	push	r16
    b6d0:	1f 93       	push	r17
    b6d2:	cf 93       	push	r28
    b6d4:	df 93       	push	r29
    b6d6:	cd b7       	in	r28, 0x3d	; 61
    b6d8:	de b7       	in	r29, 0x3e	; 62
    b6da:	67 97       	sbiw	r28, 0x17	; 23
    b6dc:	cd bf       	out	0x3d, r28	; 61
    b6de:	de bf       	out	0x3e, r29	; 62
    b6e0:	88 8b       	std	Y+16, r24	; 0x10
    b6e2:	99 8b       	std	Y+17, r25	; 0x11
    b6e4:	d2 2e       	mov	r13, r18
    b6e6:	2a 8b       	std	Y+18, r18	; 0x12
    b6e8:	e3 2e       	mov	r14, r19
    b6ea:	3b 8b       	std	Y+19, r19	; 0x13
    b6ec:	4c 8b       	std	Y+20, r20	; 0x14
    b6ee:	5d 8b       	std	Y+21, r21	; 0x15
    b6f0:	6e 8b       	std	Y+22, r22	; 0x16
    b6f2:	7f 8b       	std	Y+23, r23	; 0x17
    b6f4:	de 01       	movw	r26, r28
    b6f6:	12 96       	adiw	r26, 0x02	; 2
    b6f8:	ec ed       	ldi	r30, 0xDC	; 220
    b6fa:	f3 e2       	ldi	r31, 0x23	; 35
    b6fc:	8e e0       	ldi	r24, 0x0E	; 14
    b6fe:	01 90       	ld	r0, Z+
    b700:	0d 92       	st	X+, r0
    b702:	81 50       	subi	r24, 0x01	; 1
    b704:	e1 f7       	brne	.-8      	; 0xb6fe <hal_configureTimer+0x42>
    b706:	8f b7       	in	r24, 0x3f	; 63
    b708:	89 83       	std	Y+1, r24	; 0x01
    b70a:	f8 94       	cli
    b70c:	e8 89       	ldd	r30, Y+16	; 0x10
    b70e:	f9 89       	ldd	r31, Y+17	; 0x11
    b710:	80 91 f8 23 	lds	r24, 0x23F8
    b714:	90 91 f9 23 	lds	r25, 0x23F9
    b718:	24 81       	ldd	r18, Z+4	; 0x04
    b71a:	35 81       	ldd	r19, Z+5	; 0x05
    b71c:	28 17       	cp	r18, r24
    b71e:	39 07       	cpc	r19, r25
    b720:	21 f0       	breq	.+8      	; 0xb72a <hal_configureTimer+0x6e>
    b722:	89 81       	ldd	r24, Y+1	; 0x01
    b724:	8f bf       	out	0x3f, r24	; 63
    b726:	8b ef       	ldi	r24, 0xFB	; 251
    b728:	e9 c0       	rjmp	.+466    	; 0xb8fc <hal_configureTimer+0x240>
    b72a:	e8 89       	ldd	r30, Y+16	; 0x10
    b72c:	f9 89       	ldd	r31, Y+17	; 0x11
    b72e:	00 81       	ld	r16, Z
    b730:	11 81       	ldd	r17, Z+1	; 0x01
    b732:	26 e0       	ldi	r18, 0x06	; 6
    b734:	2d 15       	cp	r18, r13
    b736:	18 f0       	brcs	.+6      	; 0xb73e <hal_configureTimer+0x82>
    b738:	82 e0       	ldi	r24, 0x02	; 2
    b73a:	d8 16       	cp	r13, r24
    b73c:	21 f4       	brne	.+8      	; 0xb746 <hal_configureTimer+0x8a>
    b73e:	89 81       	ldd	r24, Y+1	; 0x01
    b740:	8f bf       	out	0x3f, r24	; 63
    b742:	86 ef       	ldi	r24, 0xF6	; 246
    b744:	db c0       	rjmp	.+438    	; 0xb8fc <hal_configureTimer+0x240>
    b746:	a1 e0       	ldi	r26, 0x01	; 1
    b748:	ae 15       	cp	r26, r14
    b74a:	20 f4       	brcc	.+8      	; 0xb754 <hal_configureTimer+0x98>
    b74c:	89 81       	ldd	r24, Y+1	; 0x01
    b74e:	8f bf       	out	0x3f, r24	; 63
    b750:	85 ef       	ldi	r24, 0xF5	; 245
    b752:	d4 c0       	rjmp	.+424    	; 0xb8fc <hal_configureTimer+0x240>
    b754:	6c 89       	ldd	r22, Y+20	; 0x14
    b756:	7d 89       	ldd	r23, Y+21	; 0x15
    b758:	8e 89       	ldd	r24, Y+22	; 0x16
    b75a:	9f 89       	ldd	r25, Y+23	; 0x17
    b75c:	20 e0       	ldi	r18, 0x00	; 0
    b75e:	34 e2       	ldi	r19, 0x24	; 36
    b760:	44 ef       	ldi	r20, 0xF4	; 244
    b762:	5b e4       	ldi	r21, 0x4B	; 75
    b764:	0e 94 0e ae 	call	0x15c1c	; 0x15c1c <__mulsf3>
    b768:	c6 2e       	mov	r12, r22
    b76a:	b7 2e       	mov	r11, r23
    b76c:	a8 2e       	mov	r10, r24
    b76e:	99 2e       	mov	r9, r25
    b770:	62 e0       	ldi	r22, 0x02	; 2
    b772:	66 2e       	mov	r6, r22
    b774:	71 2c       	mov	r7, r1
    b776:	6c 0e       	add	r6, r28
    b778:	7d 1e       	adc	r7, r29
    b77a:	ff 24       	eor	r15, r15
    b77c:	f3 01       	movw	r30, r6
    b77e:	61 91       	ld	r22, Z+
    b780:	71 91       	ld	r23, Z+
    b782:	3f 01       	movw	r6, r30
    b784:	80 e0       	ldi	r24, 0x00	; 0
    b786:	90 e0       	ldi	r25, 0x00	; 0
    b788:	0e 94 a5 ac 	call	0x1594a	; 0x1594a <__floatunsisf>
    b78c:	9b 01       	movw	r18, r22
    b78e:	ac 01       	movw	r20, r24
    b790:	8c 2d       	mov	r24, r12
    b792:	9b 2d       	mov	r25, r11
    b794:	aa 2d       	mov	r26, r10
    b796:	b9 2d       	mov	r27, r9
    b798:	bc 01       	movw	r22, r24
    b79a:	cd 01       	movw	r24, r26
    b79c:	0e 94 d2 ab 	call	0x157a4	; 0x157a4 <__divsf3>
    b7a0:	0e 94 74 ac 	call	0x158e8	; 0x158e8 <__fixsfsi>
    b7a4:	ab 01       	movw	r20, r22
    b7a6:	bc 01       	movw	r22, r24
    b7a8:	4f 3f       	cpi	r20, 0xFF	; 255
    b7aa:	ff e7       	ldi	r31, 0x7F	; 127
    b7ac:	5f 07       	cpc	r21, r31
    b7ae:	f0 e0       	ldi	r31, 0x00	; 0
    b7b0:	6f 07       	cpc	r22, r31
    b7b2:	f0 e0       	ldi	r31, 0x00	; 0
    b7b4:	7f 07       	cpc	r23, r31
    b7b6:	24 f0       	brlt	.+8      	; 0xb7c0 <hal_configureTimer+0x104>
    b7b8:	f3 94       	inc	r15
    b7ba:	27 e0       	ldi	r18, 0x07	; 7
    b7bc:	f2 16       	cp	r15, r18
    b7be:	f1 f6       	brne	.-68     	; 0xb77c <hal_configureTimer+0xc0>
    b7c0:	ef 2d       	mov	r30, r15
    b7c2:	f0 e0       	ldi	r31, 0x00	; 0
    b7c4:	ee 0f       	add	r30, r30
    b7c6:	ff 1f       	adc	r31, r31
    b7c8:	ec 0f       	add	r30, r28
    b7ca:	fd 1f       	adc	r31, r29
    b7cc:	82 81       	ldd	r24, Z+2	; 0x02
    b7ce:	93 81       	ldd	r25, Z+3	; 0x03
    b7d0:	88 30       	cpi	r24, 0x08	; 8
    b7d2:	91 05       	cpc	r25, r1
    b7d4:	09 f1       	breq	.+66     	; 0xb818 <hal_configureTimer+0x15c>
    b7d6:	89 30       	cpi	r24, 0x09	; 9
    b7d8:	91 05       	cpc	r25, r1
    b7da:	50 f4       	brcc	.+20     	; 0xb7f0 <hal_configureTimer+0x134>
    b7dc:	82 30       	cpi	r24, 0x02	; 2
    b7de:	91 05       	cpc	r25, r1
    b7e0:	a9 f0       	breq	.+42     	; 0xb80c <hal_configureTimer+0x150>
    b7e2:	84 30       	cpi	r24, 0x04	; 4
    b7e4:	91 05       	cpc	r25, r1
    b7e6:	a1 f0       	breq	.+40     	; 0xb810 <hal_configureTimer+0x154>
    b7e8:	81 30       	cpi	r24, 0x01	; 1
    b7ea:	91 05       	cpc	r25, r1
    b7ec:	09 f5       	brne	.+66     	; 0xb830 <hal_configureTimer+0x174>
    b7ee:	0c c0       	rjmp	.+24     	; 0xb808 <hal_configureTimer+0x14c>
    b7f0:	a1 e0       	ldi	r26, 0x01	; 1
    b7f2:	80 30       	cpi	r24, 0x00	; 0
    b7f4:	9a 07       	cpc	r25, r26
    b7f6:	a1 f0       	breq	.+40     	; 0xb820 <hal_configureTimer+0x164>
    b7f8:	b4 e0       	ldi	r27, 0x04	; 4
    b7fa:	80 30       	cpi	r24, 0x00	; 0
    b7fc:	9b 07       	cpc	r25, r27
    b7fe:	b1 f0       	breq	.+44     	; 0xb82c <hal_configureTimer+0x170>
    b800:	80 34       	cpi	r24, 0x40	; 64
    b802:	91 05       	cpc	r25, r1
    b804:	a9 f4       	brne	.+42     	; 0xb830 <hal_configureTimer+0x174>
    b806:	0a c0       	rjmp	.+20     	; 0xb81c <hal_configureTimer+0x160>
    b808:	81 e0       	ldi	r24, 0x01	; 1
    b80a:	03 c0       	rjmp	.+6      	; 0xb812 <hal_configureTimer+0x156>
    b80c:	82 e0       	ldi	r24, 0x02	; 2
    b80e:	09 c0       	rjmp	.+18     	; 0xb822 <hal_configureTimer+0x166>
    b810:	83 e0       	ldi	r24, 0x03	; 3
    b812:	f8 01       	movw	r30, r16
    b814:	83 83       	std	Z+3, r24	; 0x03
    b816:	10 c0       	rjmp	.+32     	; 0xb838 <hal_configureTimer+0x17c>
    b818:	84 e0       	ldi	r24, 0x04	; 4
    b81a:	03 c0       	rjmp	.+6      	; 0xb822 <hal_configureTimer+0x166>
    b81c:	85 e0       	ldi	r24, 0x05	; 5
    b81e:	f9 cf       	rjmp	.-14     	; 0xb812 <hal_configureTimer+0x156>
    b820:	86 e0       	ldi	r24, 0x06	; 6
    b822:	d8 01       	movw	r26, r16
    b824:	13 96       	adiw	r26, 0x03	; 3
    b826:	8c 93       	st	X, r24
    b828:	13 97       	sbiw	r26, 0x03	; 3
    b82a:	06 c0       	rjmp	.+12     	; 0xb838 <hal_configureTimer+0x17c>
    b82c:	87 e0       	ldi	r24, 0x07	; 7
    b82e:	f1 cf       	rjmp	.-30     	; 0xb812 <hal_configureTimer+0x156>
    b830:	89 81       	ldd	r24, Y+1	; 0x01
    b832:	8f bf       	out	0x3f, r24	; 63
    b834:	84 ef       	ldi	r24, 0xF4	; 244
    b836:	62 c0       	rjmp	.+196    	; 0xb8fc <hal_configureTimer+0x240>
    b838:	d8 01       	movw	r26, r16
    b83a:	14 96       	adiw	r26, 0x04	; 4
    b83c:	ed 91       	ld	r30, X+
    b83e:	fc 91       	ld	r31, X
    b840:	15 97       	sbiw	r26, 0x05	; 5
    b842:	30 97       	sbiw	r30, 0x00	; 0
    b844:	11 f1       	breq	.+68     	; 0xb88a <hal_configureTimer+0x1ce>
    b846:	80 81       	ld	r24, Z
    b848:	80 7f       	andi	r24, 0xF0	; 240
    b84a:	80 83       	st	Z, r24
    b84c:	14 96       	adiw	r26, 0x04	; 4
    b84e:	ed 91       	ld	r30, X+
    b850:	fc 91       	ld	r31, X
    b852:	15 97       	sbiw	r26, 0x05	; 5
    b854:	80 81       	ld	r24, Z
    b856:	80 83       	st	Z, r24
    b858:	14 96       	adiw	r26, 0x04	; 4
    b85a:	ed 91       	ld	r30, X+
    b85c:	fc 91       	ld	r31, X
    b85e:	15 97       	sbiw	r26, 0x05	; 5
    b860:	8c e0       	ldi	r24, 0x0C	; 12
    b862:	81 87       	std	Z+9, r24	; 0x09
    b864:	14 96       	adiw	r26, 0x04	; 4
    b866:	ed 91       	ld	r30, X+
    b868:	fc 91       	ld	r31, X
    b86a:	15 97       	sbiw	r26, 0x05	; 5
    b86c:	81 81       	ldd	r24, Z+1	; 0x01
    b86e:	88 7f       	andi	r24, 0xF8	; 248
    b870:	81 83       	std	Z+1, r24	; 0x01
    b872:	14 96       	adiw	r26, 0x04	; 4
    b874:	ed 91       	ld	r30, X+
    b876:	fc 91       	ld	r31, X
    b878:	15 97       	sbiw	r26, 0x05	; 5
    b87a:	81 81       	ldd	r24, Z+1	; 0x01
    b87c:	8d 29       	or	r24, r13
    b87e:	81 83       	std	Z+1, r24	; 0x01
    b880:	14 96       	adiw	r26, 0x04	; 4
    b882:	ed 91       	ld	r30, X+
    b884:	fc 91       	ld	r31, X
    b886:	15 97       	sbiw	r26, 0x05	; 5
    b888:	26 c0       	rjmp	.+76     	; 0xb8d6 <hal_configureTimer+0x21a>
    b88a:	d8 01       	movw	r26, r16
    b88c:	16 96       	adiw	r26, 0x06	; 6
    b88e:	ed 91       	ld	r30, X+
    b890:	fc 91       	ld	r31, X
    b892:	17 97       	sbiw	r26, 0x07	; 7
    b894:	80 81       	ld	r24, Z
    b896:	80 7f       	andi	r24, 0xF0	; 240
    b898:	80 83       	st	Z, r24
    b89a:	16 96       	adiw	r26, 0x06	; 6
    b89c:	ed 91       	ld	r30, X+
    b89e:	fc 91       	ld	r31, X
    b8a0:	17 97       	sbiw	r26, 0x07	; 7
    b8a2:	80 81       	ld	r24, Z
    b8a4:	80 83       	st	Z, r24
    b8a6:	16 96       	adiw	r26, 0x06	; 6
    b8a8:	ed 91       	ld	r30, X+
    b8aa:	fc 91       	ld	r31, X
    b8ac:	17 97       	sbiw	r26, 0x07	; 7
    b8ae:	8c e0       	ldi	r24, 0x0C	; 12
    b8b0:	81 87       	std	Z+9, r24	; 0x09
    b8b2:	16 96       	adiw	r26, 0x06	; 6
    b8b4:	ed 91       	ld	r30, X+
    b8b6:	fc 91       	ld	r31, X
    b8b8:	17 97       	sbiw	r26, 0x07	; 7
    b8ba:	81 81       	ldd	r24, Z+1	; 0x01
    b8bc:	88 7f       	andi	r24, 0xF8	; 248
    b8be:	81 83       	std	Z+1, r24	; 0x01
    b8c0:	16 96       	adiw	r26, 0x06	; 6
    b8c2:	ed 91       	ld	r30, X+
    b8c4:	fc 91       	ld	r31, X
    b8c6:	17 97       	sbiw	r26, 0x07	; 7
    b8c8:	81 81       	ldd	r24, Z+1	; 0x01
    b8ca:	8d 29       	or	r24, r13
    b8cc:	81 83       	std	Z+1, r24	; 0x01
    b8ce:	16 96       	adiw	r26, 0x06	; 6
    b8d0:	ed 91       	ld	r30, X+
    b8d2:	fc 91       	ld	r31, X
    b8d4:	17 97       	sbiw	r26, 0x07	; 7
    b8d6:	46 a3       	std	Z+38, r20	; 0x26
    b8d8:	57 a3       	std	Z+39, r21	; 0x27
    b8da:	14 96       	adiw	r26, 0x04	; 4
    b8dc:	ed 91       	ld	r30, X+
    b8de:	fc 91       	ld	r31, X
    b8e0:	15 97       	sbiw	r26, 0x05	; 5
    b8e2:	b1 e0       	ldi	r27, 0x01	; 1
    b8e4:	eb 16       	cp	r14, r27
    b8e6:	11 f4       	brne	.+4      	; 0xb8ec <hal_configureTimer+0x230>
    b8e8:	e1 86       	std	Z+9, r14	; 0x09
    b8ea:	02 c0       	rjmp	.+4      	; 0xb8f0 <hal_configureTimer+0x234>
    b8ec:	81 e0       	ldi	r24, 0x01	; 1
    b8ee:	80 87       	std	Z+8, r24	; 0x08
    b8f0:	81 e0       	ldi	r24, 0x01	; 1
    b8f2:	f8 01       	movw	r30, r16
    b8f4:	81 83       	std	Z+1, r24	; 0x01
    b8f6:	89 81       	ldd	r24, Y+1	; 0x01
    b8f8:	8f bf       	out	0x3f, r24	; 63
    b8fa:	80 e0       	ldi	r24, 0x00	; 0
    b8fc:	67 96       	adiw	r28, 0x17	; 23
    b8fe:	cd bf       	out	0x3d, r28	; 61
    b900:	de bf       	out	0x3e, r29	; 62
    b902:	df 91       	pop	r29
    b904:	cf 91       	pop	r28
    b906:	1f 91       	pop	r17
    b908:	0f 91       	pop	r16
    b90a:	ff 90       	pop	r15
    b90c:	ef 90       	pop	r14
    b90e:	df 90       	pop	r13
    b910:	cf 90       	pop	r12
    b912:	bf 90       	pop	r11
    b914:	af 90       	pop	r10
    b916:	9f 90       	pop	r9
    b918:	7f 90       	pop	r7
    b91a:	6f 90       	pop	r6
    b91c:	08 95       	ret

0000b91e <hal_startTimer>:
    b91e:	cf 93       	push	r28
    b920:	df 93       	push	r29
    b922:	00 d0       	rcall	.+0      	; 0xb924 <hal_startTimer+0x6>
    b924:	cd b7       	in	r28, 0x3d	; 61
    b926:	de b7       	in	r29, 0x3e	; 62
    b928:	8a 83       	std	Y+2, r24	; 0x02
    b92a:	9b 83       	std	Y+3, r25	; 0x03
    b92c:	8f b7       	in	r24, 0x3f	; 63
    b92e:	89 83       	std	Y+1, r24	; 0x01
    b930:	f8 94       	cli
    b932:	ea 81       	ldd	r30, Y+2	; 0x02
    b934:	fb 81       	ldd	r31, Y+3	; 0x03
    b936:	80 91 f8 23 	lds	r24, 0x23F8
    b93a:	90 91 f9 23 	lds	r25, 0x23F9
    b93e:	24 81       	ldd	r18, Z+4	; 0x04
    b940:	35 81       	ldd	r19, Z+5	; 0x05
    b942:	28 17       	cp	r18, r24
    b944:	39 07       	cpc	r19, r25
    b946:	21 f0       	breq	.+8      	; 0xb950 <hal_startTimer+0x32>
    b948:	89 81       	ldd	r24, Y+1	; 0x01
    b94a:	8f bf       	out	0x3f, r24	; 63
    b94c:	8b ef       	ldi	r24, 0xFB	; 251
    b94e:	24 c0       	rjmp	.+72     	; 0xb998 <hal_startTimer+0x7a>
    b950:	ea 81       	ldd	r30, Y+2	; 0x02
    b952:	fb 81       	ldd	r31, Y+3	; 0x03
    b954:	01 90       	ld	r0, Z+
    b956:	f0 81       	ld	r31, Z
    b958:	e0 2d       	mov	r30, r0
    b95a:	81 81       	ldd	r24, Z+1	; 0x01
    b95c:	88 23       	and	r24, r24
    b95e:	21 f4       	brne	.+8      	; 0xb968 <hal_startTimer+0x4a>
    b960:	89 81       	ldd	r24, Y+1	; 0x01
    b962:	8f bf       	out	0x3f, r24	; 63
    b964:	83 ef       	ldi	r24, 0xF3	; 243
    b966:	18 c0       	rjmp	.+48     	; 0xb998 <hal_startTimer+0x7a>
    b968:	a4 81       	ldd	r26, Z+4	; 0x04
    b96a:	b5 81       	ldd	r27, Z+5	; 0x05
    b96c:	10 97       	sbiw	r26, 0x00	; 0
    b96e:	31 f0       	breq	.+12     	; 0xb97c <hal_startTimer+0x5e>
    b970:	8c 91       	ld	r24, X
    b972:	80 7f       	andi	r24, 0xF0	; 240
    b974:	8c 93       	st	X, r24
    b976:	a4 81       	ldd	r26, Z+4	; 0x04
    b978:	b5 81       	ldd	r27, Z+5	; 0x05
    b97a:	07 c0       	rjmp	.+14     	; 0xb98a <hal_startTimer+0x6c>
    b97c:	a6 81       	ldd	r26, Z+6	; 0x06
    b97e:	b7 81       	ldd	r27, Z+7	; 0x07
    b980:	8c 91       	ld	r24, X
    b982:	80 7f       	andi	r24, 0xF0	; 240
    b984:	8c 93       	st	X, r24
    b986:	a6 81       	ldd	r26, Z+6	; 0x06
    b988:	b7 81       	ldd	r27, Z+7	; 0x07
    b98a:	8c 91       	ld	r24, X
    b98c:	93 81       	ldd	r25, Z+3	; 0x03
    b98e:	89 2b       	or	r24, r25
    b990:	8c 93       	st	X, r24
    b992:	89 81       	ldd	r24, Y+1	; 0x01
    b994:	8f bf       	out	0x3f, r24	; 63
    b996:	80 e0       	ldi	r24, 0x00	; 0
    b998:	23 96       	adiw	r28, 0x03	; 3
    b99a:	cd bf       	out	0x3d, r28	; 61
    b99c:	de bf       	out	0x3e, r29	; 62
    b99e:	df 91       	pop	r29
    b9a0:	cf 91       	pop	r28
    b9a2:	08 95       	ret

0000b9a4 <hal_stopTimer>:
    b9a4:	cf 93       	push	r28
    b9a6:	df 93       	push	r29
    b9a8:	00 d0       	rcall	.+0      	; 0xb9aa <hal_stopTimer+0x6>
    b9aa:	cd b7       	in	r28, 0x3d	; 61
    b9ac:	de b7       	in	r29, 0x3e	; 62
    b9ae:	8a 83       	std	Y+2, r24	; 0x02
    b9b0:	9b 83       	std	Y+3, r25	; 0x03
    b9b2:	8f b7       	in	r24, 0x3f	; 63
    b9b4:	89 83       	std	Y+1, r24	; 0x01
    b9b6:	f8 94       	cli
    b9b8:	ea 81       	ldd	r30, Y+2	; 0x02
    b9ba:	fb 81       	ldd	r31, Y+3	; 0x03
    b9bc:	80 91 f8 23 	lds	r24, 0x23F8
    b9c0:	90 91 f9 23 	lds	r25, 0x23F9
    b9c4:	24 81       	ldd	r18, Z+4	; 0x04
    b9c6:	35 81       	ldd	r19, Z+5	; 0x05
    b9c8:	28 17       	cp	r18, r24
    b9ca:	39 07       	cpc	r19, r25
    b9cc:	21 f0       	breq	.+8      	; 0xb9d6 <hal_stopTimer+0x32>
    b9ce:	89 81       	ldd	r24, Y+1	; 0x01
    b9d0:	8f bf       	out	0x3f, r24	; 63
    b9d2:	8b ef       	ldi	r24, 0xFB	; 251
    b9d4:	1d c0       	rjmp	.+58     	; 0xba10 <hal_stopTimer+0x6c>
    b9d6:	ea 81       	ldd	r30, Y+2	; 0x02
    b9d8:	fb 81       	ldd	r31, Y+3	; 0x03
    b9da:	01 90       	ld	r0, Z+
    b9dc:	f0 81       	ld	r31, Z
    b9de:	e0 2d       	mov	r30, r0
    b9e0:	a4 81       	ldd	r26, Z+4	; 0x04
    b9e2:	b5 81       	ldd	r27, Z+5	; 0x05
    b9e4:	10 97       	sbiw	r26, 0x00	; 0
    b9e6:	39 f0       	breq	.+14     	; 0xb9f6 <hal_stopTimer+0x52>
    b9e8:	8c 91       	ld	r24, X
    b9ea:	80 7f       	andi	r24, 0xF0	; 240
    b9ec:	8c 93       	st	X, r24
    b9ee:	04 80       	ldd	r0, Z+4	; 0x04
    b9f0:	f5 81       	ldd	r31, Z+5	; 0x05
    b9f2:	e0 2d       	mov	r30, r0
    b9f4:	08 c0       	rjmp	.+16     	; 0xba06 <hal_stopTimer+0x62>
    b9f6:	a6 81       	ldd	r26, Z+6	; 0x06
    b9f8:	b7 81       	ldd	r27, Z+7	; 0x07
    b9fa:	8c 91       	ld	r24, X
    b9fc:	80 7f       	andi	r24, 0xF0	; 240
    b9fe:	8c 93       	st	X, r24
    ba00:	06 80       	ldd	r0, Z+6	; 0x06
    ba02:	f7 81       	ldd	r31, Z+7	; 0x07
    ba04:	e0 2d       	mov	r30, r0
    ba06:	80 81       	ld	r24, Z
    ba08:	80 83       	st	Z, r24
    ba0a:	89 81       	ldd	r24, Y+1	; 0x01
    ba0c:	8f bf       	out	0x3f, r24	; 63
    ba0e:	80 e0       	ldi	r24, 0x00	; 0
    ba10:	23 96       	adiw	r28, 0x03	; 3
    ba12:	cd bf       	out	0x3d, r28	; 61
    ba14:	de bf       	out	0x3e, r29	; 62
    ba16:	df 91       	pop	r29
    ba18:	cf 91       	pop	r28
    ba1a:	08 95       	ret

0000ba1c <hal_getTimerCount>:
    ba1c:	0f 93       	push	r16
    ba1e:	1f 93       	push	r17
    ba20:	cf 93       	push	r28
    ba22:	df 93       	push	r29
    ba24:	0f 92       	push	r0
    ba26:	0f 92       	push	r0
    ba28:	cd b7       	in	r28, 0x3d	; 61
    ba2a:	de b7       	in	r29, 0x3e	; 62
    ba2c:	89 83       	std	Y+1, r24	; 0x01
    ba2e:	9a 83       	std	Y+2, r25	; 0x02
    ba30:	e9 81       	ldd	r30, Y+1	; 0x01
    ba32:	fa 81       	ldd	r31, Y+2	; 0x02
    ba34:	80 91 f8 23 	lds	r24, 0x23F8
    ba38:	90 91 f9 23 	lds	r25, 0x23F9
    ba3c:	24 81       	ldd	r18, Z+4	; 0x04
    ba3e:	35 81       	ldd	r19, Z+5	; 0x05
    ba40:	28 17       	cp	r18, r24
    ba42:	39 07       	cpc	r19, r25
    ba44:	b1 f4       	brne	.+44     	; 0xba72 <hal_getTimerCount+0x56>
    ba46:	e9 81       	ldd	r30, Y+1	; 0x01
    ba48:	fa 81       	ldd	r31, Y+2	; 0x02
    ba4a:	01 90       	ld	r0, Z+
    ba4c:	f0 81       	ld	r31, Z
    ba4e:	e0 2d       	mov	r30, r0
    ba50:	a4 81       	ldd	r26, Z+4	; 0x04
    ba52:	b5 81       	ldd	r27, Z+5	; 0x05
    ba54:	10 97       	sbiw	r26, 0x00	; 0
    ba56:	29 f0       	breq	.+10     	; 0xba62 <hal_getTimerCount+0x46>
    ba58:	90 96       	adiw	r26, 0x20	; 32
    ba5a:	0d 91       	ld	r16, X+
    ba5c:	1c 91       	ld	r17, X
    ba5e:	91 97       	sbiw	r26, 0x21	; 33
    ba60:	05 c0       	rjmp	.+10     	; 0xba6c <hal_getTimerCount+0x50>
    ba62:	06 80       	ldd	r0, Z+6	; 0x06
    ba64:	f7 81       	ldd	r31, Z+7	; 0x07
    ba66:	e0 2d       	mov	r30, r0
    ba68:	00 a1       	ldd	r16, Z+32	; 0x20
    ba6a:	11 a1       	ldd	r17, Z+33	; 0x21
    ba6c:	20 e0       	ldi	r18, 0x00	; 0
    ba6e:	30 e0       	ldi	r19, 0x00	; 0
    ba70:	04 c0       	rjmp	.+8      	; 0xba7a <hal_getTimerCount+0x5e>
    ba72:	0b ef       	ldi	r16, 0xFB	; 251
    ba74:	1f ef       	ldi	r17, 0xFF	; 255
    ba76:	2f ef       	ldi	r18, 0xFF	; 255
    ba78:	3f ef       	ldi	r19, 0xFF	; 255
    ba7a:	b8 01       	movw	r22, r16
    ba7c:	c9 01       	movw	r24, r18
    ba7e:	0f 90       	pop	r0
    ba80:	0f 90       	pop	r0
    ba82:	df 91       	pop	r29
    ba84:	cf 91       	pop	r28
    ba86:	1f 91       	pop	r17
    ba88:	0f 91       	pop	r16
    ba8a:	08 95       	ret

0000ba8c <hal_setCompareValue>:
    ba8c:	cf 93       	push	r28
    ba8e:	df 93       	push	r29
    ba90:	0f 92       	push	r0
    ba92:	0f 92       	push	r0
    ba94:	cd b7       	in	r28, 0x3d	; 61
    ba96:	de b7       	in	r29, 0x3e	; 62
    ba98:	89 83       	std	Y+1, r24	; 0x01
    ba9a:	9a 83       	std	Y+2, r25	; 0x02
    ba9c:	e9 81       	ldd	r30, Y+1	; 0x01
    ba9e:	fa 81       	ldd	r31, Y+2	; 0x02
    baa0:	20 91 f8 23 	lds	r18, 0x23F8
    baa4:	30 91 f9 23 	lds	r19, 0x23F9
    baa8:	84 81       	ldd	r24, Z+4	; 0x04
    baaa:	95 81       	ldd	r25, Z+5	; 0x05
    baac:	82 17       	cp	r24, r18
    baae:	93 07       	cpc	r25, r19
    bab0:	99 f5       	brne	.+102    	; 0xbb18 <hal_setCompareValue+0x8c>
    bab2:	e9 81       	ldd	r30, Y+1	; 0x01
    bab4:	fa 81       	ldd	r31, Y+2	; 0x02
    bab6:	a0 81       	ld	r26, Z
    bab8:	b1 81       	ldd	r27, Z+1	; 0x01
    baba:	14 96       	adiw	r26, 0x04	; 4
    babc:	ed 91       	ld	r30, X+
    babe:	fc 91       	ld	r31, X
    bac0:	15 97       	sbiw	r26, 0x05	; 5
    bac2:	30 97       	sbiw	r30, 0x00	; 0
    bac4:	a1 f0       	breq	.+40     	; 0xbaee <hal_setCompareValue+0x62>
    bac6:	86 a1       	ldd	r24, Z+38	; 0x26
    bac8:	97 a1       	ldd	r25, Z+39	; 0x27
    baca:	84 17       	cp	r24, r20
    bacc:	95 07       	cpc	r25, r21
    bace:	30 f1       	brcs	.+76     	; 0xbb1c <hal_setCompareValue+0x90>
    bad0:	61 30       	cpi	r22, 0x01	; 1
    bad2:	f1 f0       	breq	.+60     	; 0xbb10 <hal_setCompareValue+0x84>
    bad4:	61 30       	cpi	r22, 0x01	; 1
    bad6:	c8 f0       	brcs	.+50     	; 0xbb0a <hal_setCompareValue+0x7e>
    bad8:	62 30       	cpi	r22, 0x02	; 2
    bada:	19 f0       	breq	.+6      	; 0xbae2 <hal_setCompareValue+0x56>
    badc:	63 30       	cpi	r22, 0x03	; 3
    bade:	01 f5       	brne	.+64     	; 0xbb20 <hal_setCompareValue+0x94>
    bae0:	03 c0       	rjmp	.+6      	; 0xbae8 <hal_setCompareValue+0x5c>
    bae2:	44 a7       	std	Z+44, r20	; 0x2c
    bae4:	55 a7       	std	Z+45, r21	; 0x2d
    bae6:	16 c0       	rjmp	.+44     	; 0xbb14 <hal_setCompareValue+0x88>
    bae8:	46 a7       	std	Z+46, r20	; 0x2e
    baea:	57 a7       	std	Z+47, r21	; 0x2f
    baec:	13 c0       	rjmp	.+38     	; 0xbb14 <hal_setCompareValue+0x88>
    baee:	16 96       	adiw	r26, 0x06	; 6
    baf0:	ed 91       	ld	r30, X+
    baf2:	fc 91       	ld	r31, X
    baf4:	17 97       	sbiw	r26, 0x07	; 7
    baf6:	86 a9       	ldd	r24, Z+54	; 0x36
    baf8:	97 a9       	ldd	r25, Z+55	; 0x37
    bafa:	84 17       	cp	r24, r20
    bafc:	95 07       	cpc	r25, r21
    bafe:	70 f0       	brcs	.+28     	; 0xbb1c <hal_setCompareValue+0x90>
    bb00:	66 23       	and	r22, r22
    bb02:	19 f0       	breq	.+6      	; 0xbb0a <hal_setCompareValue+0x7e>
    bb04:	61 30       	cpi	r22, 0x01	; 1
    bb06:	61 f4       	brne	.+24     	; 0xbb20 <hal_setCompareValue+0x94>
    bb08:	03 c0       	rjmp	.+6      	; 0xbb10 <hal_setCompareValue+0x84>
    bb0a:	40 a7       	std	Z+40, r20	; 0x28
    bb0c:	51 a7       	std	Z+41, r21	; 0x29
    bb0e:	02 c0       	rjmp	.+4      	; 0xbb14 <hal_setCompareValue+0x88>
    bb10:	42 a7       	std	Z+42, r20	; 0x2a
    bb12:	53 a7       	std	Z+43, r21	; 0x2b
    bb14:	80 e0       	ldi	r24, 0x00	; 0
    bb16:	05 c0       	rjmp	.+10     	; 0xbb22 <hal_setCompareValue+0x96>
    bb18:	8b ef       	ldi	r24, 0xFB	; 251
    bb1a:	03 c0       	rjmp	.+6      	; 0xbb22 <hal_setCompareValue+0x96>
    bb1c:	82 ef       	ldi	r24, 0xF2	; 242
    bb1e:	01 c0       	rjmp	.+2      	; 0xbb22 <hal_setCompareValue+0x96>
    bb20:	8a ef       	ldi	r24, 0xFA	; 250
    bb22:	0f 90       	pop	r0
    bb24:	0f 90       	pop	r0
    bb26:	df 91       	pop	r29
    bb28:	cf 91       	pop	r28
    bb2a:	08 95       	ret

0000bb2c <hal_getPeriodValue>:
    bb2c:	0f 93       	push	r16
    bb2e:	1f 93       	push	r17
    bb30:	cf 93       	push	r28
    bb32:	df 93       	push	r29
    bb34:	0f 92       	push	r0
    bb36:	0f 92       	push	r0
    bb38:	cd b7       	in	r28, 0x3d	; 61
    bb3a:	de b7       	in	r29, 0x3e	; 62
    bb3c:	89 83       	std	Y+1, r24	; 0x01
    bb3e:	9a 83       	std	Y+2, r25	; 0x02
    bb40:	e9 81       	ldd	r30, Y+1	; 0x01
    bb42:	fa 81       	ldd	r31, Y+2	; 0x02
    bb44:	80 91 f8 23 	lds	r24, 0x23F8
    bb48:	90 91 f9 23 	lds	r25, 0x23F9
    bb4c:	24 81       	ldd	r18, Z+4	; 0x04
    bb4e:	35 81       	ldd	r19, Z+5	; 0x05
    bb50:	28 17       	cp	r18, r24
    bb52:	39 07       	cpc	r19, r25
    bb54:	b1 f4       	brne	.+44     	; 0xbb82 <hal_getPeriodValue+0x56>
    bb56:	e9 81       	ldd	r30, Y+1	; 0x01
    bb58:	fa 81       	ldd	r31, Y+2	; 0x02
    bb5a:	01 90       	ld	r0, Z+
    bb5c:	f0 81       	ld	r31, Z
    bb5e:	e0 2d       	mov	r30, r0
    bb60:	a4 81       	ldd	r26, Z+4	; 0x04
    bb62:	b5 81       	ldd	r27, Z+5	; 0x05
    bb64:	10 97       	sbiw	r26, 0x00	; 0
    bb66:	29 f0       	breq	.+10     	; 0xbb72 <hal_getPeriodValue+0x46>
    bb68:	96 96       	adiw	r26, 0x26	; 38
    bb6a:	0d 91       	ld	r16, X+
    bb6c:	1c 91       	ld	r17, X
    bb6e:	97 97       	sbiw	r26, 0x27	; 39
    bb70:	05 c0       	rjmp	.+10     	; 0xbb7c <hal_getPeriodValue+0x50>
    bb72:	06 80       	ldd	r0, Z+6	; 0x06
    bb74:	f7 81       	ldd	r31, Z+7	; 0x07
    bb76:	e0 2d       	mov	r30, r0
    bb78:	06 a1       	ldd	r16, Z+38	; 0x26
    bb7a:	17 a1       	ldd	r17, Z+39	; 0x27
    bb7c:	20 e0       	ldi	r18, 0x00	; 0
    bb7e:	30 e0       	ldi	r19, 0x00	; 0
    bb80:	04 c0       	rjmp	.+8      	; 0xbb8a <hal_getPeriodValue+0x5e>
    bb82:	0b ef       	ldi	r16, 0xFB	; 251
    bb84:	1f ef       	ldi	r17, 0xFF	; 255
    bb86:	2f ef       	ldi	r18, 0xFF	; 255
    bb88:	3f ef       	ldi	r19, 0xFF	; 255
    bb8a:	b8 01       	movw	r22, r16
    bb8c:	c9 01       	movw	r24, r18
    bb8e:	0f 90       	pop	r0
    bb90:	0f 90       	pop	r0
    bb92:	df 91       	pop	r29
    bb94:	cf 91       	pop	r28
    bb96:	1f 91       	pop	r17
    bb98:	0f 91       	pop	r16
    bb9a:	08 95       	ret

0000bb9c <hal_getCompareValue>:
    bb9c:	0f 93       	push	r16
    bb9e:	1f 93       	push	r17
    bba0:	cf 93       	push	r28
    bba2:	df 93       	push	r29
    bba4:	0f 92       	push	r0
    bba6:	0f 92       	push	r0
    bba8:	cd b7       	in	r28, 0x3d	; 61
    bbaa:	de b7       	in	r29, 0x3e	; 62
    bbac:	89 83       	std	Y+1, r24	; 0x01
    bbae:	9a 83       	std	Y+2, r25	; 0x02
    bbb0:	e9 81       	ldd	r30, Y+1	; 0x01
    bbb2:	fa 81       	ldd	r31, Y+2	; 0x02
    bbb4:	80 91 f8 23 	lds	r24, 0x23F8
    bbb8:	90 91 f9 23 	lds	r25, 0x23F9
    bbbc:	24 81       	ldd	r18, Z+4	; 0x04
    bbbe:	35 81       	ldd	r19, Z+5	; 0x05
    bbc0:	28 17       	cp	r18, r24
    bbc2:	39 07       	cpc	r19, r25
    bbc4:	79 f5       	brne	.+94     	; 0xbc24 <hal_getCompareValue+0x88>
    bbc6:	e9 81       	ldd	r30, Y+1	; 0x01
    bbc8:	fa 81       	ldd	r31, Y+2	; 0x02
    bbca:	a0 81       	ld	r26, Z
    bbcc:	b1 81       	ldd	r27, Z+1	; 0x01
    bbce:	14 96       	adiw	r26, 0x04	; 4
    bbd0:	ed 91       	ld	r30, X+
    bbd2:	fc 91       	ld	r31, X
    bbd4:	15 97       	sbiw	r26, 0x05	; 5
    bbd6:	30 97       	sbiw	r30, 0x00	; 0
    bbd8:	a1 f0       	breq	.+40     	; 0xbc02 <hal_getCompareValue+0x66>
    bbda:	61 30       	cpi	r22, 0x01	; 1
    bbdc:	39 f0       	breq	.+14     	; 0xbbec <hal_getCompareValue+0x50>
    bbde:	61 30       	cpi	r22, 0x01	; 1
    bbe0:	c8 f0       	brcs	.+50     	; 0xbc14 <hal_getCompareValue+0x78>
    bbe2:	62 30       	cpi	r22, 0x02	; 2
    bbe4:	41 f0       	breq	.+16     	; 0xbbf6 <hal_getCompareValue+0x5a>
    bbe6:	63 30       	cpi	r22, 0x03	; 3
    bbe8:	11 f5       	brne	.+68     	; 0xbc2e <hal_getCompareValue+0x92>
    bbea:	08 c0       	rjmp	.+16     	; 0xbbfc <hal_getCompareValue+0x60>
    bbec:	02 a5       	ldd	r16, Z+42	; 0x2a
    bbee:	13 a5       	ldd	r17, Z+43	; 0x2b
    bbf0:	20 e0       	ldi	r18, 0x00	; 0
    bbf2:	30 e0       	ldi	r19, 0x00	; 0
    bbf4:	20 c0       	rjmp	.+64     	; 0xbc36 <hal_getCompareValue+0x9a>
    bbf6:	04 a5       	ldd	r16, Z+44	; 0x2c
    bbf8:	15 a5       	ldd	r17, Z+45	; 0x2d
    bbfa:	fa cf       	rjmp	.-12     	; 0xbbf0 <hal_getCompareValue+0x54>
    bbfc:	06 a5       	ldd	r16, Z+46	; 0x2e
    bbfe:	17 a5       	ldd	r17, Z+47	; 0x2f
    bc00:	f7 cf       	rjmp	.-18     	; 0xbbf0 <hal_getCompareValue+0x54>
    bc02:	66 23       	and	r22, r22
    bc04:	19 f0       	breq	.+6      	; 0xbc0c <hal_getCompareValue+0x70>
    bc06:	61 30       	cpi	r22, 0x01	; 1
    bc08:	91 f4       	brne	.+36     	; 0xbc2e <hal_getCompareValue+0x92>
    bc0a:	07 c0       	rjmp	.+14     	; 0xbc1a <hal_getCompareValue+0x7e>
    bc0c:	16 96       	adiw	r26, 0x06	; 6
    bc0e:	ed 91       	ld	r30, X+
    bc10:	fc 91       	ld	r31, X
    bc12:	17 97       	sbiw	r26, 0x07	; 7
    bc14:	00 a5       	ldd	r16, Z+40	; 0x28
    bc16:	11 a5       	ldd	r17, Z+41	; 0x29
    bc18:	eb cf       	rjmp	.-42     	; 0xbbf0 <hal_getCompareValue+0x54>
    bc1a:	16 96       	adiw	r26, 0x06	; 6
    bc1c:	ed 91       	ld	r30, X+
    bc1e:	fc 91       	ld	r31, X
    bc20:	17 97       	sbiw	r26, 0x07	; 7
    bc22:	e4 cf       	rjmp	.-56     	; 0xbbec <hal_getCompareValue+0x50>
    bc24:	0b ef       	ldi	r16, 0xFB	; 251
    bc26:	1f ef       	ldi	r17, 0xFF	; 255
    bc28:	2f ef       	ldi	r18, 0xFF	; 255
    bc2a:	3f ef       	ldi	r19, 0xFF	; 255
    bc2c:	04 c0       	rjmp	.+8      	; 0xbc36 <hal_getCompareValue+0x9a>
    bc2e:	0a ef       	ldi	r16, 0xFA	; 250
    bc30:	1f ef       	ldi	r17, 0xFF	; 255
    bc32:	2f ef       	ldi	r18, 0xFF	; 255
    bc34:	3f ef       	ldi	r19, 0xFF	; 255
    bc36:	b8 01       	movw	r22, r16
    bc38:	c9 01       	movw	r24, r18
    bc3a:	0f 90       	pop	r0
    bc3c:	0f 90       	pop	r0
    bc3e:	df 91       	pop	r29
    bc40:	cf 91       	pop	r28
    bc42:	1f 91       	pop	r17
    bc44:	0f 91       	pop	r16
    bc46:	08 95       	ret

0000bc48 <hal_getIntStatus>:
    bc48:	cf 93       	push	r28
    bc4a:	df 93       	push	r29
    bc4c:	0f 92       	push	r0
    bc4e:	0f 92       	push	r0
    bc50:	cd b7       	in	r28, 0x3d	; 61
    bc52:	de b7       	in	r29, 0x3e	; 62
    bc54:	89 83       	std	Y+1, r24	; 0x01
    bc56:	9a 83       	std	Y+2, r25	; 0x02
    bc58:	e9 81       	ldd	r30, Y+1	; 0x01
    bc5a:	fa 81       	ldd	r31, Y+2	; 0x02
    bc5c:	80 91 f8 23 	lds	r24, 0x23F8
    bc60:	90 91 f9 23 	lds	r25, 0x23F9
    bc64:	24 81       	ldd	r18, Z+4	; 0x04
    bc66:	35 81       	ldd	r19, Z+5	; 0x05
    bc68:	28 17       	cp	r18, r24
    bc6a:	39 07       	cpc	r19, r25
    bc6c:	09 f0       	breq	.+2      	; 0xbc70 <hal_getIntStatus+0x28>
    bc6e:	44 c0       	rjmp	.+136    	; 0xbcf8 <hal_getIntStatus+0xb0>
    bc70:	e9 81       	ldd	r30, Y+1	; 0x01
    bc72:	fa 81       	ldd	r31, Y+2	; 0x02
    bc74:	a0 81       	ld	r26, Z
    bc76:	b1 81       	ldd	r27, Z+1	; 0x01
    bc78:	14 96       	adiw	r26, 0x04	; 4
    bc7a:	ed 91       	ld	r30, X+
    bc7c:	fc 91       	ld	r31, X
    bc7e:	15 97       	sbiw	r26, 0x05	; 5
    bc80:	30 97       	sbiw	r30, 0x00	; 0
    bc82:	c1 f0       	breq	.+48     	; 0xbcb4 <hal_getIntStatus+0x6c>
    bc84:	62 30       	cpi	r22, 0x02	; 2
    bc86:	61 f0       	breq	.+24     	; 0xbca0 <hal_getIntStatus+0x58>
    bc88:	63 30       	cpi	r22, 0x03	; 3
    bc8a:	28 f4       	brcc	.+10     	; 0xbc96 <hal_getIntStatus+0x4e>
    bc8c:	66 23       	and	r22, r22
    bc8e:	e9 f0       	breq	.+58     	; 0xbcca <hal_getIntStatus+0x82>
    bc90:	61 30       	cpi	r22, 0x01	; 1
    bc92:	a9 f5       	brne	.+106    	; 0xbcfe <hal_getIntStatus+0xb6>
    bc94:	23 c0       	rjmp	.+70     	; 0xbcdc <hal_getIntStatus+0x94>
    bc96:	63 30       	cpi	r22, 0x03	; 3
    bc98:	41 f0       	breq	.+16     	; 0xbcaa <hal_getIntStatus+0x62>
    bc9a:	64 30       	cpi	r22, 0x04	; 4
    bc9c:	81 f5       	brne	.+96     	; 0xbcfe <hal_getIntStatus+0xb6>
    bc9e:	27 c0       	rjmp	.+78     	; 0xbcee <hal_getIntStatus+0xa6>
    bca0:	84 85       	ldd	r24, Z+12	; 0x0c
    bca2:	90 e0       	ldi	r25, 0x00	; 0
    bca4:	80 74       	andi	r24, 0x40	; 64
    bca6:	90 70       	andi	r25, 0x00	; 0
    bca8:	2c c0       	rjmp	.+88     	; 0xbd02 <hal_getIntStatus+0xba>
    bcaa:	84 85       	ldd	r24, Z+12	; 0x0c
    bcac:	90 e0       	ldi	r25, 0x00	; 0
    bcae:	80 78       	andi	r24, 0x80	; 128
    bcb0:	90 70       	andi	r25, 0x00	; 0
    bcb2:	27 c0       	rjmp	.+78     	; 0xbd02 <hal_getIntStatus+0xba>
    bcb4:	61 30       	cpi	r22, 0x01	; 1
    bcb6:	71 f0       	breq	.+28     	; 0xbcd4 <hal_getIntStatus+0x8c>
    bcb8:	61 30       	cpi	r22, 0x01	; 1
    bcba:	18 f0       	brcs	.+6      	; 0xbcc2 <hal_getIntStatus+0x7a>
    bcbc:	64 30       	cpi	r22, 0x04	; 4
    bcbe:	f9 f4       	brne	.+62     	; 0xbcfe <hal_getIntStatus+0xb6>
    bcc0:	12 c0       	rjmp	.+36     	; 0xbce6 <hal_getIntStatus+0x9e>
    bcc2:	16 96       	adiw	r26, 0x06	; 6
    bcc4:	ed 91       	ld	r30, X+
    bcc6:	fc 91       	ld	r31, X
    bcc8:	17 97       	sbiw	r26, 0x07	; 7
    bcca:	84 85       	ldd	r24, Z+12	; 0x0c
    bccc:	90 e0       	ldi	r25, 0x00	; 0
    bcce:	80 71       	andi	r24, 0x10	; 16
    bcd0:	90 70       	andi	r25, 0x00	; 0
    bcd2:	17 c0       	rjmp	.+46     	; 0xbd02 <hal_getIntStatus+0xba>
    bcd4:	16 96       	adiw	r26, 0x06	; 6
    bcd6:	ed 91       	ld	r30, X+
    bcd8:	fc 91       	ld	r31, X
    bcda:	17 97       	sbiw	r26, 0x07	; 7
    bcdc:	84 85       	ldd	r24, Z+12	; 0x0c
    bcde:	90 e0       	ldi	r25, 0x00	; 0
    bce0:	80 72       	andi	r24, 0x20	; 32
    bce2:	90 70       	andi	r25, 0x00	; 0
    bce4:	0e c0       	rjmp	.+28     	; 0xbd02 <hal_getIntStatus+0xba>
    bce6:	16 96       	adiw	r26, 0x06	; 6
    bce8:	ed 91       	ld	r30, X+
    bcea:	fc 91       	ld	r31, X
    bcec:	17 97       	sbiw	r26, 0x07	; 7
    bcee:	84 85       	ldd	r24, Z+12	; 0x0c
    bcf0:	90 e0       	ldi	r25, 0x00	; 0
    bcf2:	81 70       	andi	r24, 0x01	; 1
    bcf4:	90 70       	andi	r25, 0x00	; 0
    bcf6:	05 c0       	rjmp	.+10     	; 0xbd02 <hal_getIntStatus+0xba>
    bcf8:	8b ef       	ldi	r24, 0xFB	; 251
    bcfa:	9f ef       	ldi	r25, 0xFF	; 255
    bcfc:	02 c0       	rjmp	.+4      	; 0xbd02 <hal_getIntStatus+0xba>
    bcfe:	8a ef       	ldi	r24, 0xFA	; 250
    bd00:	9f ef       	ldi	r25, 0xFF	; 255
    bd02:	0f 90       	pop	r0
    bd04:	0f 90       	pop	r0
    bd06:	df 91       	pop	r29
    bd08:	cf 91       	pop	r28
    bd0a:	08 95       	ret

0000bd0c <hal_clearIntStatus>:
    bd0c:	cf 93       	push	r28
    bd0e:	df 93       	push	r29
    bd10:	0f 92       	push	r0
    bd12:	0f 92       	push	r0
    bd14:	cd b7       	in	r28, 0x3d	; 61
    bd16:	de b7       	in	r29, 0x3e	; 62
    bd18:	89 83       	std	Y+1, r24	; 0x01
    bd1a:	9a 83       	std	Y+2, r25	; 0x02
    bd1c:	e9 81       	ldd	r30, Y+1	; 0x01
    bd1e:	fa 81       	ldd	r31, Y+2	; 0x02
    bd20:	80 91 f8 23 	lds	r24, 0x23F8
    bd24:	90 91 f9 23 	lds	r25, 0x23F9
    bd28:	24 81       	ldd	r18, Z+4	; 0x04
    bd2a:	35 81       	ldd	r19, Z+5	; 0x05
    bd2c:	28 17       	cp	r18, r24
    bd2e:	39 07       	cpc	r19, r25
    bd30:	e1 f5       	brne	.+120    	; 0xbdaa <hal_clearIntStatus+0x9e>
    bd32:	e9 81       	ldd	r30, Y+1	; 0x01
    bd34:	fa 81       	ldd	r31, Y+2	; 0x02
    bd36:	a0 81       	ld	r26, Z
    bd38:	b1 81       	ldd	r27, Z+1	; 0x01
    bd3a:	14 96       	adiw	r26, 0x04	; 4
    bd3c:	ed 91       	ld	r30, X+
    bd3e:	fc 91       	ld	r31, X
    bd40:	15 97       	sbiw	r26, 0x05	; 5
    bd42:	30 97       	sbiw	r30, 0x00	; 0
    bd44:	a1 f0       	breq	.+40     	; 0xbd6e <hal_clearIntStatus+0x62>
    bd46:	62 30       	cpi	r22, 0x02	; 2
    bd48:	61 f0       	breq	.+24     	; 0xbd62 <hal_clearIntStatus+0x56>
    bd4a:	63 30       	cpi	r22, 0x03	; 3
    bd4c:	28 f4       	brcc	.+10     	; 0xbd58 <hal_clearIntStatus+0x4c>
    bd4e:	66 23       	and	r22, r22
    bd50:	c9 f0       	breq	.+50     	; 0xbd84 <hal_clearIntStatus+0x78>
    bd52:	61 30       	cpi	r22, 0x01	; 1
    bd54:	61 f5       	brne	.+88     	; 0xbdae <hal_clearIntStatus+0xa2>
    bd56:	1d c0       	rjmp	.+58     	; 0xbd92 <hal_clearIntStatus+0x86>
    bd58:	63 30       	cpi	r22, 0x03	; 3
    bd5a:	31 f0       	breq	.+12     	; 0xbd68 <hal_clearIntStatus+0x5c>
    bd5c:	64 30       	cpi	r22, 0x04	; 4
    bd5e:	39 f5       	brne	.+78     	; 0xbdae <hal_clearIntStatus+0xa2>
    bd60:	1f c0       	rjmp	.+62     	; 0xbda0 <hal_clearIntStatus+0x94>
    bd62:	84 85       	ldd	r24, Z+12	; 0x0c
    bd64:	80 64       	ori	r24, 0x40	; 64
    bd66:	1e c0       	rjmp	.+60     	; 0xbda4 <hal_clearIntStatus+0x98>
    bd68:	84 85       	ldd	r24, Z+12	; 0x0c
    bd6a:	80 68       	ori	r24, 0x80	; 128
    bd6c:	1b c0       	rjmp	.+54     	; 0xbda4 <hal_clearIntStatus+0x98>
    bd6e:	61 30       	cpi	r22, 0x01	; 1
    bd70:	61 f0       	breq	.+24     	; 0xbd8a <hal_clearIntStatus+0x7e>
    bd72:	61 30       	cpi	r22, 0x01	; 1
    bd74:	18 f0       	brcs	.+6      	; 0xbd7c <hal_clearIntStatus+0x70>
    bd76:	64 30       	cpi	r22, 0x04	; 4
    bd78:	d1 f4       	brne	.+52     	; 0xbdae <hal_clearIntStatus+0xa2>
    bd7a:	0e c0       	rjmp	.+28     	; 0xbd98 <hal_clearIntStatus+0x8c>
    bd7c:	16 96       	adiw	r26, 0x06	; 6
    bd7e:	ed 91       	ld	r30, X+
    bd80:	fc 91       	ld	r31, X
    bd82:	17 97       	sbiw	r26, 0x07	; 7
    bd84:	84 85       	ldd	r24, Z+12	; 0x0c
    bd86:	80 61       	ori	r24, 0x10	; 16
    bd88:	0d c0       	rjmp	.+26     	; 0xbda4 <hal_clearIntStatus+0x98>
    bd8a:	16 96       	adiw	r26, 0x06	; 6
    bd8c:	ed 91       	ld	r30, X+
    bd8e:	fc 91       	ld	r31, X
    bd90:	17 97       	sbiw	r26, 0x07	; 7
    bd92:	84 85       	ldd	r24, Z+12	; 0x0c
    bd94:	80 62       	ori	r24, 0x20	; 32
    bd96:	06 c0       	rjmp	.+12     	; 0xbda4 <hal_clearIntStatus+0x98>
    bd98:	16 96       	adiw	r26, 0x06	; 6
    bd9a:	ed 91       	ld	r30, X+
    bd9c:	fc 91       	ld	r31, X
    bd9e:	17 97       	sbiw	r26, 0x07	; 7
    bda0:	84 85       	ldd	r24, Z+12	; 0x0c
    bda2:	81 60       	ori	r24, 0x01	; 1
    bda4:	84 87       	std	Z+12, r24	; 0x0c
    bda6:	80 e0       	ldi	r24, 0x00	; 0
    bda8:	03 c0       	rjmp	.+6      	; 0xbdb0 <hal_clearIntStatus+0xa4>
    bdaa:	8b ef       	ldi	r24, 0xFB	; 251
    bdac:	01 c0       	rjmp	.+2      	; 0xbdb0 <hal_clearIntStatus+0xa4>
    bdae:	8a ef       	ldi	r24, 0xFA	; 250
    bdb0:	0f 90       	pop	r0
    bdb2:	0f 90       	pop	r0
    bdb4:	df 91       	pop	r29
    bdb6:	cf 91       	pop	r28
    bdb8:	08 95       	ret

0000bdba <hal_enableCompareChannel>:
    bdba:	0f 93       	push	r16
    bdbc:	1f 93       	push	r17
    bdbe:	cf 93       	push	r28
    bdc0:	df 93       	push	r29
    bdc2:	cd b7       	in	r28, 0x3d	; 61
    bdc4:	de b7       	in	r29, 0x3e	; 62
    bdc6:	28 97       	sbiw	r28, 0x08	; 8
    bdc8:	cd bf       	out	0x3d, r28	; 61
    bdca:	de bf       	out	0x3e, r29	; 62
    bdcc:	8e 83       	std	Y+6, r24	; 0x06
    bdce:	9f 83       	std	Y+7, r25	; 0x07
    bdd0:	04 2f       	mov	r16, r20
    bdd2:	ee 81       	ldd	r30, Y+6	; 0x06
    bdd4:	ff 81       	ldd	r31, Y+7	; 0x07
    bdd6:	80 91 f8 23 	lds	r24, 0x23F8
    bdda:	90 91 f9 23 	lds	r25, 0x23F9
    bdde:	24 81       	ldd	r18, Z+4	; 0x04
    bde0:	35 81       	ldd	r19, Z+5	; 0x05
    bde2:	28 17       	cp	r18, r24
    bde4:	39 07       	cpc	r19, r25
    bde6:	09 f0       	breq	.+2      	; 0xbdea <hal_enableCompareChannel+0x30>
    bde8:	f1 c0       	rjmp	.+482    	; 0xbfcc <hal_enableCompareChannel+0x212>
    bdea:	ee 81       	ldd	r30, Y+6	; 0x06
    bdec:	ff 81       	ldd	r31, Y+7	; 0x07
    bdee:	01 90       	ld	r0, Z+
    bdf0:	f0 81       	ld	r31, Z
    bdf2:	e0 2d       	mov	r30, r0
    bdf4:	a4 81       	ldd	r26, Z+4	; 0x04
    bdf6:	b5 81       	ldd	r27, Z+5	; 0x05
    bdf8:	10 97       	sbiw	r26, 0x00	; 0
    bdfa:	71 f1       	breq	.+92     	; 0xbe58 <hal_enableCompareChannel+0x9e>
    bdfc:	61 30       	cpi	r22, 0x01	; 1
    bdfe:	89 f0       	breq	.+34     	; 0xbe22 <hal_enableCompareChannel+0x68>
    be00:	61 30       	cpi	r22, 0x01	; 1
    be02:	30 f0       	brcs	.+12     	; 0xbe10 <hal_enableCompareChannel+0x56>
    be04:	62 30       	cpi	r22, 0x02	; 2
    be06:	b1 f0       	breq	.+44     	; 0xbe34 <hal_enableCompareChannel+0x7a>
    be08:	63 30       	cpi	r22, 0x03	; 3
    be0a:	09 f0       	breq	.+2      	; 0xbe0e <hal_enableCompareChannel+0x54>
    be0c:	e1 c0       	rjmp	.+450    	; 0xbfd0 <hal_enableCompareChannel+0x216>
    be0e:	1b c0       	rjmp	.+54     	; 0xbe46 <hal_enableCompareChannel+0x8c>
    be10:	11 96       	adiw	r26, 0x01	; 1
    be12:	8c 91       	ld	r24, X
    be14:	11 97       	sbiw	r26, 0x01	; 1
    be16:	80 61       	ori	r24, 0x10	; 16
    be18:	11 96       	adiw	r26, 0x01	; 1
    be1a:	8c 93       	st	X, r24
    be1c:	11 97       	sbiw	r26, 0x01	; 1
    be1e:	11 e0       	ldi	r17, 0x01	; 1
    be20:	36 c0       	rjmp	.+108    	; 0xbe8e <hal_enableCompareChannel+0xd4>
    be22:	11 96       	adiw	r26, 0x01	; 1
    be24:	8c 91       	ld	r24, X
    be26:	11 97       	sbiw	r26, 0x01	; 1
    be28:	80 62       	ori	r24, 0x20	; 32
    be2a:	11 96       	adiw	r26, 0x01	; 1
    be2c:	8c 93       	st	X, r24
    be2e:	11 97       	sbiw	r26, 0x01	; 1
    be30:	12 e0       	ldi	r17, 0x02	; 2
    be32:	2d c0       	rjmp	.+90     	; 0xbe8e <hal_enableCompareChannel+0xd4>
    be34:	11 96       	adiw	r26, 0x01	; 1
    be36:	8c 91       	ld	r24, X
    be38:	11 97       	sbiw	r26, 0x01	; 1
    be3a:	80 64       	ori	r24, 0x40	; 64
    be3c:	11 96       	adiw	r26, 0x01	; 1
    be3e:	8c 93       	st	X, r24
    be40:	11 97       	sbiw	r26, 0x01	; 1
    be42:	14 e0       	ldi	r17, 0x04	; 4
    be44:	24 c0       	rjmp	.+72     	; 0xbe8e <hal_enableCompareChannel+0xd4>
    be46:	11 96       	adiw	r26, 0x01	; 1
    be48:	8c 91       	ld	r24, X
    be4a:	11 97       	sbiw	r26, 0x01	; 1
    be4c:	80 68       	ori	r24, 0x80	; 128
    be4e:	11 96       	adiw	r26, 0x01	; 1
    be50:	8c 93       	st	X, r24
    be52:	11 97       	sbiw	r26, 0x01	; 1
    be54:	18 e0       	ldi	r17, 0x08	; 8
    be56:	1b c0       	rjmp	.+54     	; 0xbe8e <hal_enableCompareChannel+0xd4>
    be58:	66 23       	and	r22, r22
    be5a:	21 f0       	breq	.+8      	; 0xbe64 <hal_enableCompareChannel+0xaa>
    be5c:	61 30       	cpi	r22, 0x01	; 1
    be5e:	09 f0       	breq	.+2      	; 0xbe62 <hal_enableCompareChannel+0xa8>
    be60:	b7 c0       	rjmp	.+366    	; 0xbfd0 <hal_enableCompareChannel+0x216>
    be62:	0b c0       	rjmp	.+22     	; 0xbe7a <hal_enableCompareChannel+0xc0>
    be64:	a6 81       	ldd	r26, Z+6	; 0x06
    be66:	b7 81       	ldd	r27, Z+7	; 0x07
    be68:	11 96       	adiw	r26, 0x01	; 1
    be6a:	8c 91       	ld	r24, X
    be6c:	11 97       	sbiw	r26, 0x01	; 1
    be6e:	80 61       	ori	r24, 0x10	; 16
    be70:	11 96       	adiw	r26, 0x01	; 1
    be72:	8c 93       	st	X, r24
    be74:	11 97       	sbiw	r26, 0x01	; 1
    be76:	10 e1       	ldi	r17, 0x10	; 16
    be78:	0a c0       	rjmp	.+20     	; 0xbe8e <hal_enableCompareChannel+0xd4>
    be7a:	a6 81       	ldd	r26, Z+6	; 0x06
    be7c:	b7 81       	ldd	r27, Z+7	; 0x07
    be7e:	11 96       	adiw	r26, 0x01	; 1
    be80:	8c 91       	ld	r24, X
    be82:	11 97       	sbiw	r26, 0x01	; 1
    be84:	80 62       	ori	r24, 0x20	; 32
    be86:	11 96       	adiw	r26, 0x01	; 1
    be88:	8c 93       	st	X, r24
    be8a:	11 97       	sbiw	r26, 0x01	; 1
    be8c:	10 e2       	ldi	r17, 0x20	; 32
    be8e:	e0 81       	ld	r30, Z
    be90:	ea 50       	subi	r30, 0x0A	; 10
    be92:	ea 31       	cpi	r30, 0x1A	; 26
    be94:	28 f4       	brcc	.+10     	; 0xbea0 <hal_enableCompareChannel+0xe6>
    be96:	f0 e0       	ldi	r31, 0x00	; 0
    be98:	ea 5f       	subi	r30, 0xFA	; 250
    be9a:	fb 4d       	sbci	r31, 0xDB	; 219
    be9c:	90 81       	ld	r25, Z
    be9e:	01 c0       	rjmp	.+2      	; 0xbea2 <hal_enableCompareChannel+0xe8>
    bea0:	92 e0       	ldi	r25, 0x02	; 2
    bea2:	00 23       	and	r16, r16
    bea4:	31 f0       	breq	.+12     	; 0xbeb2 <hal_enableCompareChannel+0xf8>
    bea6:	1a 83       	std	Y+2, r17	; 0x02
    bea8:	81 e0       	ldi	r24, 0x01	; 1
    beaa:	8b 83       	std	Y+3, r24	; 0x03
    beac:	19 82       	std	Y+1, r1	; 0x01
    beae:	1d 82       	std	Y+5, r1	; 0x05
    beb0:	04 c0       	rjmp	.+8      	; 0xbeba <hal_enableCompareChannel+0x100>
    beb2:	1a 82       	std	Y+2, r1	; 0x02
    beb4:	19 83       	std	Y+1, r17	; 0x01
    beb6:	84 e0       	ldi	r24, 0x04	; 4
    beb8:	8c 83       	std	Y+4, r24	; 0x04
    beba:	89 2f       	mov	r24, r25
    bebc:	29 81       	ldd	r18, Y+1	; 0x01
    bebe:	3a 81       	ldd	r19, Y+2	; 0x02
    bec0:	4b 81       	ldd	r20, Y+3	; 0x03
    bec2:	5c 81       	ldd	r21, Y+4	; 0x04
    bec4:	6d 81       	ldd	r22, Y+5	; 0x05
    bec6:	98 87       	std	Y+8, r25	; 0x08
    bec8:	0e 94 e6 29 	call	0x53cc	; 0x53cc <hal_configureGpioPort>
    becc:	98 85       	ldd	r25, Y+8	; 0x08
    bece:	87 fd       	sbrc	r24, 7
    bed0:	81 c0       	rjmp	.+258    	; 0xbfd4 <hal_enableCompareChannel+0x21a>
    bed2:	00 23       	and	r16, r16
    bed4:	09 f4       	brne	.+2      	; 0xbed8 <hal_enableCompareChannel+0x11e>
    bed6:	80 c0       	rjmp	.+256    	; 0xbfd8 <hal_enableCompareChannel+0x21e>
    bed8:	95 30       	cpi	r25, 0x05	; 5
    beda:	09 f4       	brne	.+2      	; 0xbede <hal_enableCompareChannel+0x124>
    bedc:	4d c0       	rjmp	.+154    	; 0xbf78 <hal_enableCompareChannel+0x1be>
    bede:	96 30       	cpi	r25, 0x06	; 6
    bee0:	80 f4       	brcc	.+32     	; 0xbf02 <hal_enableCompareChannel+0x148>
    bee2:	92 30       	cpi	r25, 0x02	; 2
    bee4:	91 f1       	breq	.+100    	; 0xbf4a <hal_enableCompareChannel+0x190>
    bee6:	93 30       	cpi	r25, 0x03	; 3
    bee8:	30 f4       	brcc	.+12     	; 0xbef6 <hal_enableCompareChannel+0x13c>
    beea:	99 23       	and	r25, r25
    beec:	e9 f0       	breq	.+58     	; 0xbf28 <hal_enableCompareChannel+0x16e>
    beee:	91 30       	cpi	r25, 0x01	; 1
    bef0:	09 f0       	breq	.+2      	; 0xbef4 <hal_enableCompareChannel+0x13a>
    bef2:	72 c0       	rjmp	.+228    	; 0xbfd8 <hal_enableCompareChannel+0x21e>
    bef4:	21 c0       	rjmp	.+66     	; 0xbf38 <hal_enableCompareChannel+0x17e>
    bef6:	93 30       	cpi	r25, 0x03	; 3
    bef8:	81 f1       	breq	.+96     	; 0xbf5a <hal_enableCompareChannel+0x1a0>
    befa:	94 30       	cpi	r25, 0x04	; 4
    befc:	09 f0       	breq	.+2      	; 0xbf00 <hal_enableCompareChannel+0x146>
    befe:	6c c0       	rjmp	.+216    	; 0xbfd8 <hal_enableCompareChannel+0x21e>
    bf00:	34 c0       	rjmp	.+104    	; 0xbf6a <hal_enableCompareChannel+0x1b0>
    bf02:	98 30       	cpi	r25, 0x08	; 8
    bf04:	09 f4       	brne	.+2      	; 0xbf08 <hal_enableCompareChannel+0x14e>
    bf06:	4d c0       	rjmp	.+154    	; 0xbfa2 <hal_enableCompareChannel+0x1e8>
    bf08:	99 30       	cpi	r25, 0x09	; 9
    bf0a:	38 f4       	brcc	.+14     	; 0xbf1a <hal_enableCompareChannel+0x160>
    bf0c:	96 30       	cpi	r25, 0x06	; 6
    bf0e:	09 f4       	brne	.+2      	; 0xbf12 <hal_enableCompareChannel+0x158>
    bf10:	3a c0       	rjmp	.+116    	; 0xbf86 <hal_enableCompareChannel+0x1cc>
    bf12:	97 30       	cpi	r25, 0x07	; 7
    bf14:	09 f0       	breq	.+2      	; 0xbf18 <hal_enableCompareChannel+0x15e>
    bf16:	60 c0       	rjmp	.+192    	; 0xbfd8 <hal_enableCompareChannel+0x21e>
    bf18:	3d c0       	rjmp	.+122    	; 0xbf94 <hal_enableCompareChannel+0x1da>
    bf1a:	99 30       	cpi	r25, 0x09	; 9
    bf1c:	09 f4       	brne	.+2      	; 0xbf20 <hal_enableCompareChannel+0x166>
    bf1e:	48 c0       	rjmp	.+144    	; 0xbfb0 <hal_enableCompareChannel+0x1f6>
    bf20:	9a 30       	cpi	r25, 0x0A	; 10
    bf22:	09 f0       	breq	.+2      	; 0xbf26 <hal_enableCompareChannel+0x16c>
    bf24:	59 c0       	rjmp	.+178    	; 0xbfd8 <hal_enableCompareChannel+0x21e>
    bf26:	4b c0       	rjmp	.+150    	; 0xbfbe <hal_enableCompareChannel+0x204>
    bf28:	80 91 00 06 	lds	r24, 0x0600
    bf2c:	81 23       	and	r24, r17
    bf2e:	09 f4       	brne	.+2      	; 0xbf32 <hal_enableCompareChannel+0x178>
    bf30:	53 c0       	rjmp	.+166    	; 0xbfd8 <hal_enableCompareChannel+0x21e>
    bf32:	e0 e0       	ldi	r30, 0x00	; 0
    bf34:	f6 e0       	ldi	r31, 0x06	; 6
    bf36:	07 c0       	rjmp	.+14     	; 0xbf46 <hal_enableCompareChannel+0x18c>
    bf38:	80 91 20 06 	lds	r24, 0x0620
    bf3c:	81 23       	and	r24, r17
    bf3e:	09 f4       	brne	.+2      	; 0xbf42 <hal_enableCompareChannel+0x188>
    bf40:	4b c0       	rjmp	.+150    	; 0xbfd8 <hal_enableCompareChannel+0x21e>
    bf42:	e0 e2       	ldi	r30, 0x20	; 32
    bf44:	f6 e0       	ldi	r31, 0x06	; 6
    bf46:	16 83       	std	Z+6, r17	; 0x06
    bf48:	47 c0       	rjmp	.+142    	; 0xbfd8 <hal_enableCompareChannel+0x21e>
    bf4a:	80 91 40 06 	lds	r24, 0x0640
    bf4e:	81 23       	and	r24, r17
    bf50:	09 f4       	brne	.+2      	; 0xbf54 <hal_enableCompareChannel+0x19a>
    bf52:	42 c0       	rjmp	.+132    	; 0xbfd8 <hal_enableCompareChannel+0x21e>
    bf54:	e0 e4       	ldi	r30, 0x40	; 64
    bf56:	f6 e0       	ldi	r31, 0x06	; 6
    bf58:	f6 cf       	rjmp	.-20     	; 0xbf46 <hal_enableCompareChannel+0x18c>
    bf5a:	80 91 60 06 	lds	r24, 0x0660
    bf5e:	81 23       	and	r24, r17
    bf60:	09 f4       	brne	.+2      	; 0xbf64 <hal_enableCompareChannel+0x1aa>
    bf62:	3a c0       	rjmp	.+116    	; 0xbfd8 <hal_enableCompareChannel+0x21e>
    bf64:	e0 e6       	ldi	r30, 0x60	; 96
    bf66:	f6 e0       	ldi	r31, 0x06	; 6
    bf68:	ee cf       	rjmp	.-36     	; 0xbf46 <hal_enableCompareChannel+0x18c>
    bf6a:	80 91 80 06 	lds	r24, 0x0680
    bf6e:	81 23       	and	r24, r17
    bf70:	99 f1       	breq	.+102    	; 0xbfd8 <hal_enableCompareChannel+0x21e>
    bf72:	e0 e8       	ldi	r30, 0x80	; 128
    bf74:	f6 e0       	ldi	r31, 0x06	; 6
    bf76:	e7 cf       	rjmp	.-50     	; 0xbf46 <hal_enableCompareChannel+0x18c>
    bf78:	80 91 a0 06 	lds	r24, 0x06A0
    bf7c:	81 23       	and	r24, r17
    bf7e:	61 f1       	breq	.+88     	; 0xbfd8 <hal_enableCompareChannel+0x21e>
    bf80:	e0 ea       	ldi	r30, 0xA0	; 160
    bf82:	f6 e0       	ldi	r31, 0x06	; 6
    bf84:	e0 cf       	rjmp	.-64     	; 0xbf46 <hal_enableCompareChannel+0x18c>
    bf86:	80 91 e0 06 	lds	r24, 0x06E0
    bf8a:	81 23       	and	r24, r17
    bf8c:	29 f1       	breq	.+74     	; 0xbfd8 <hal_enableCompareChannel+0x21e>
    bf8e:	e0 ee       	ldi	r30, 0xE0	; 224
    bf90:	f6 e0       	ldi	r31, 0x06	; 6
    bf92:	d9 cf       	rjmp	.-78     	; 0xbf46 <hal_enableCompareChannel+0x18c>
    bf94:	80 91 00 07 	lds	r24, 0x0700
    bf98:	81 23       	and	r24, r17
    bf9a:	f1 f0       	breq	.+60     	; 0xbfd8 <hal_enableCompareChannel+0x21e>
    bf9c:	e0 e0       	ldi	r30, 0x00	; 0
    bf9e:	f7 e0       	ldi	r31, 0x07	; 7
    bfa0:	d2 cf       	rjmp	.-92     	; 0xbf46 <hal_enableCompareChannel+0x18c>
    bfa2:	80 91 20 07 	lds	r24, 0x0720
    bfa6:	81 23       	and	r24, r17
    bfa8:	b9 f0       	breq	.+46     	; 0xbfd8 <hal_enableCompareChannel+0x21e>
    bfaa:	e0 e2       	ldi	r30, 0x20	; 32
    bfac:	f7 e0       	ldi	r31, 0x07	; 7
    bfae:	cb cf       	rjmp	.-106    	; 0xbf46 <hal_enableCompareChannel+0x18c>
    bfb0:	80 91 c0 07 	lds	r24, 0x07C0
    bfb4:	81 23       	and	r24, r17
    bfb6:	81 f0       	breq	.+32     	; 0xbfd8 <hal_enableCompareChannel+0x21e>
    bfb8:	e0 ec       	ldi	r30, 0xC0	; 192
    bfba:	f7 e0       	ldi	r31, 0x07	; 7
    bfbc:	c4 cf       	rjmp	.-120    	; 0xbf46 <hal_enableCompareChannel+0x18c>
    bfbe:	80 91 e0 07 	lds	r24, 0x07E0
    bfc2:	81 23       	and	r24, r17
    bfc4:	49 f0       	breq	.+18     	; 0xbfd8 <hal_enableCompareChannel+0x21e>
    bfc6:	e0 ee       	ldi	r30, 0xE0	; 224
    bfc8:	f7 e0       	ldi	r31, 0x07	; 7
    bfca:	bd cf       	rjmp	.-134    	; 0xbf46 <hal_enableCompareChannel+0x18c>
    bfcc:	8b ef       	ldi	r24, 0xFB	; 251
    bfce:	05 c0       	rjmp	.+10     	; 0xbfda <hal_enableCompareChannel+0x220>
    bfd0:	8a ef       	ldi	r24, 0xFA	; 250
    bfd2:	03 c0       	rjmp	.+6      	; 0xbfda <hal_enableCompareChannel+0x220>
    bfd4:	81 ef       	ldi	r24, 0xF1	; 241
    bfd6:	01 c0       	rjmp	.+2      	; 0xbfda <hal_enableCompareChannel+0x220>
    bfd8:	80 e0       	ldi	r24, 0x00	; 0
    bfda:	28 96       	adiw	r28, 0x08	; 8
    bfdc:	cd bf       	out	0x3d, r28	; 61
    bfde:	de bf       	out	0x3e, r29	; 62
    bfe0:	df 91       	pop	r29
    bfe2:	cf 91       	pop	r28
    bfe4:	1f 91       	pop	r17
    bfe6:	0f 91       	pop	r16
    bfe8:	08 95       	ret

0000bfea <hal_disableCompareChannel>:
    bfea:	cf 93       	push	r28
    bfec:	df 93       	push	r29
    bfee:	cd b7       	in	r28, 0x3d	; 61
    bff0:	de b7       	in	r29, 0x3e	; 62
    bff2:	27 97       	sbiw	r28, 0x07	; 7
    bff4:	cd bf       	out	0x3d, r28	; 61
    bff6:	de bf       	out	0x3e, r29	; 62
    bff8:	8e 83       	std	Y+6, r24	; 0x06
    bffa:	9f 83       	std	Y+7, r25	; 0x07
    bffc:	ee 81       	ldd	r30, Y+6	; 0x06
    bffe:	ff 81       	ldd	r31, Y+7	; 0x07
    c000:	80 91 f8 23 	lds	r24, 0x23F8
    c004:	90 91 f9 23 	lds	r25, 0x23F9
    c008:	24 81       	ldd	r18, Z+4	; 0x04
    c00a:	35 81       	ldd	r19, Z+5	; 0x05
    c00c:	28 17       	cp	r18, r24
    c00e:	39 07       	cpc	r19, r25
    c010:	09 f0       	breq	.+2      	; 0xc014 <hal_disableCompareChannel+0x2a>
    c012:	57 c0       	rjmp	.+174    	; 0xc0c2 <hal_disableCompareChannel+0xd8>
    c014:	ee 81       	ldd	r30, Y+6	; 0x06
    c016:	ff 81       	ldd	r31, Y+7	; 0x07
    c018:	a0 81       	ld	r26, Z
    c01a:	b1 81       	ldd	r27, Z+1	; 0x01
    c01c:	14 96       	adiw	r26, 0x04	; 4
    c01e:	ed 91       	ld	r30, X+
    c020:	fc 91       	ld	r31, X
    c022:	15 97       	sbiw	r26, 0x05	; 5
    c024:	30 97       	sbiw	r30, 0x00	; 0
    c026:	f1 f0       	breq	.+60     	; 0xc064 <hal_disableCompareChannel+0x7a>
    c028:	61 30       	cpi	r22, 0x01	; 1
    c02a:	69 f0       	breq	.+26     	; 0xc046 <hal_disableCompareChannel+0x5c>
    c02c:	61 30       	cpi	r22, 0x01	; 1
    c02e:	30 f0       	brcs	.+12     	; 0xc03c <hal_disableCompareChannel+0x52>
    c030:	62 30       	cpi	r22, 0x02	; 2
    c032:	71 f0       	breq	.+28     	; 0xc050 <hal_disableCompareChannel+0x66>
    c034:	63 30       	cpi	r22, 0x03	; 3
    c036:	09 f0       	breq	.+2      	; 0xc03a <hal_disableCompareChannel+0x50>
    c038:	46 c0       	rjmp	.+140    	; 0xc0c6 <hal_disableCompareChannel+0xdc>
    c03a:	0f c0       	rjmp	.+30     	; 0xc05a <hal_disableCompareChannel+0x70>
    c03c:	81 81       	ldd	r24, Z+1	; 0x01
    c03e:	8f 7e       	andi	r24, 0xEF	; 239
    c040:	81 83       	std	Z+1, r24	; 0x01
    c042:	21 e0       	ldi	r18, 0x01	; 1
    c044:	25 c0       	rjmp	.+74     	; 0xc090 <hal_disableCompareChannel+0xa6>
    c046:	81 81       	ldd	r24, Z+1	; 0x01
    c048:	8f 7d       	andi	r24, 0xDF	; 223
    c04a:	81 83       	std	Z+1, r24	; 0x01
    c04c:	22 e0       	ldi	r18, 0x02	; 2
    c04e:	20 c0       	rjmp	.+64     	; 0xc090 <hal_disableCompareChannel+0xa6>
    c050:	81 81       	ldd	r24, Z+1	; 0x01
    c052:	8f 7b       	andi	r24, 0xBF	; 191
    c054:	81 83       	std	Z+1, r24	; 0x01
    c056:	24 e0       	ldi	r18, 0x04	; 4
    c058:	1b c0       	rjmp	.+54     	; 0xc090 <hal_disableCompareChannel+0xa6>
    c05a:	81 81       	ldd	r24, Z+1	; 0x01
    c05c:	8f 77       	andi	r24, 0x7F	; 127
    c05e:	81 83       	std	Z+1, r24	; 0x01
    c060:	28 e0       	ldi	r18, 0x08	; 8
    c062:	16 c0       	rjmp	.+44     	; 0xc090 <hal_disableCompareChannel+0xa6>
    c064:	66 23       	and	r22, r22
    c066:	19 f0       	breq	.+6      	; 0xc06e <hal_disableCompareChannel+0x84>
    c068:	61 30       	cpi	r22, 0x01	; 1
    c06a:	69 f5       	brne	.+90     	; 0xc0c6 <hal_disableCompareChannel+0xdc>
    c06c:	09 c0       	rjmp	.+18     	; 0xc080 <hal_disableCompareChannel+0x96>
    c06e:	16 96       	adiw	r26, 0x06	; 6
    c070:	ed 91       	ld	r30, X+
    c072:	fc 91       	ld	r31, X
    c074:	17 97       	sbiw	r26, 0x07	; 7
    c076:	81 81       	ldd	r24, Z+1	; 0x01
    c078:	8f 7e       	andi	r24, 0xEF	; 239
    c07a:	81 83       	std	Z+1, r24	; 0x01
    c07c:	20 e1       	ldi	r18, 0x10	; 16
    c07e:	08 c0       	rjmp	.+16     	; 0xc090 <hal_disableCompareChannel+0xa6>
    c080:	16 96       	adiw	r26, 0x06	; 6
    c082:	ed 91       	ld	r30, X+
    c084:	fc 91       	ld	r31, X
    c086:	17 97       	sbiw	r26, 0x07	; 7
    c088:	81 81       	ldd	r24, Z+1	; 0x01
    c08a:	8f 7d       	andi	r24, 0xDF	; 223
    c08c:	81 83       	std	Z+1, r24	; 0x01
    c08e:	20 e2       	ldi	r18, 0x20	; 32
    c090:	ec 91       	ld	r30, X
    c092:	ea 50       	subi	r30, 0x0A	; 10
    c094:	ea 31       	cpi	r30, 0x1A	; 26
    c096:	28 f4       	brcc	.+10     	; 0xc0a2 <hal_disableCompareChannel+0xb8>
    c098:	f0 e0       	ldi	r31, 0x00	; 0
    c09a:	e0 5e       	subi	r30, 0xE0	; 224
    c09c:	fb 4d       	sbci	r31, 0xDB	; 219
    c09e:	80 81       	ld	r24, Z
    c0a0:	01 c0       	rjmp	.+2      	; 0xc0a4 <hal_disableCompareChannel+0xba>
    c0a2:	82 e0       	ldi	r24, 0x02	; 2
    c0a4:	29 83       	std	Y+1, r18	; 0x01
    c0a6:	1a 82       	std	Y+2, r1	; 0x02
    c0a8:	1b 82       	std	Y+3, r1	; 0x03
    c0aa:	94 e0       	ldi	r25, 0x04	; 4
    c0ac:	9c 83       	std	Y+4, r25	; 0x04
    c0ae:	30 e0       	ldi	r19, 0x00	; 0
    c0b0:	40 e0       	ldi	r20, 0x00	; 0
    c0b2:	54 e0       	ldi	r21, 0x04	; 4
    c0b4:	6d 81       	ldd	r22, Y+5	; 0x05
    c0b6:	0e 94 e6 29 	call	0x53cc	; 0x53cc <hal_configureGpioPort>
    c0ba:	87 ff       	sbrs	r24, 7
    c0bc:	06 c0       	rjmp	.+12     	; 0xc0ca <hal_disableCompareChannel+0xe0>
    c0be:	81 ef       	ldi	r24, 0xF1	; 241
    c0c0:	05 c0       	rjmp	.+10     	; 0xc0cc <hal_disableCompareChannel+0xe2>
    c0c2:	8b ef       	ldi	r24, 0xFB	; 251
    c0c4:	03 c0       	rjmp	.+6      	; 0xc0cc <hal_disableCompareChannel+0xe2>
    c0c6:	8a ef       	ldi	r24, 0xFA	; 250
    c0c8:	01 c0       	rjmp	.+2      	; 0xc0cc <hal_disableCompareChannel+0xe2>
    c0ca:	80 e0       	ldi	r24, 0x00	; 0
    c0cc:	27 96       	adiw	r28, 0x07	; 7
    c0ce:	cd bf       	out	0x3d, r28	; 61
    c0d0:	de bf       	out	0x3e, r29	; 62
    c0d2:	df 91       	pop	r29
    c0d4:	cf 91       	pop	r28
    c0d6:	08 95       	ret

0000c0d8 <hal_requestWdAccess>:
    c0d8:	cf 93       	push	r28
    c0da:	df 93       	push	r29
    c0dc:	00 d0       	rcall	.+0      	; 0xc0de <hal_requestWdAccess+0x6>
    c0de:	cd b7       	in	r28, 0x3d	; 61
    c0e0:	de b7       	in	r29, 0x3e	; 62
    c0e2:	8f b7       	in	r24, 0x3f	; 63
    c0e4:	89 83       	std	Y+1, r24	; 0x01
    c0e6:	f8 94       	cli
    c0e8:	e0 91 3a 24 	lds	r30, 0x243A
    c0ec:	f0 91 3b 24 	lds	r31, 0x243B
    c0f0:	82 81       	ldd	r24, Z+2	; 0x02
    c0f2:	93 81       	ldd	r25, Z+3	; 0x03
    c0f4:	00 97       	sbiw	r24, 0x00	; 0
    c0f6:	11 f5       	brne	.+68     	; 0xc13c <hal_requestWdAccess+0x64>
    c0f8:	85 e0       	ldi	r24, 0x05	; 5
    c0fa:	90 e0       	ldi	r25, 0x00	; 0
    c0fc:	0e 94 b8 8a 	call	0x11570	; 0x11570 <utl_createLink>
    c100:	8a 83       	std	Y+2, r24	; 0x02
    c102:	9b 83       	std	Y+3, r25	; 0x03
    c104:	8a 81       	ldd	r24, Y+2	; 0x02
    c106:	9b 81       	ldd	r25, Y+3	; 0x03
    c108:	97 fd       	sbrc	r25, 7
    c10a:	1d c0       	rjmp	.+58     	; 0xc146 <hal_requestWdAccess+0x6e>
    c10c:	ea 81       	ldd	r30, Y+2	; 0x02
    c10e:	fb 81       	ldd	r31, Y+3	; 0x03
    c110:	01 90       	ld	r0, Z+
    c112:	f0 81       	ld	r31, Z
    c114:	e0 2d       	mov	r30, r0
    c116:	10 82       	st	Z, r1
    c118:	11 82       	std	Z+1, r1	; 0x01
    c11a:	12 82       	std	Z+2, r1	; 0x02
    c11c:	13 82       	std	Z+3, r1	; 0x03
    c11e:	14 82       	std	Z+4, r1	; 0x04
    c120:	80 91 3a 24 	lds	r24, 0x243A
    c124:	90 91 3b 24 	lds	r25, 0x243B
    c128:	6a 81       	ldd	r22, Y+2	; 0x02
    c12a:	7b 81       	ldd	r23, Y+3	; 0x03
    c12c:	41 e0       	ldi	r20, 0x01	; 1
    c12e:	0e 94 c8 88 	call	0x11190	; 0x11190 <utl_insertLink>
    c132:	89 81       	ldd	r24, Y+1	; 0x01
    c134:	8f bf       	out	0x3f, r24	; 63
    c136:	8a 81       	ldd	r24, Y+2	; 0x02
    c138:	9b 81       	ldd	r25, Y+3	; 0x03
    c13a:	07 c0       	rjmp	.+14     	; 0xc14a <hal_requestWdAccess+0x72>
    c13c:	89 81       	ldd	r24, Y+1	; 0x01
    c13e:	8f bf       	out	0x3f, r24	; 63
    c140:	8d ef       	ldi	r24, 0xFD	; 253
    c142:	9f ef       	ldi	r25, 0xFF	; 255
    c144:	02 c0       	rjmp	.+4      	; 0xc14a <hal_requestWdAccess+0x72>
    c146:	8f ef       	ldi	r24, 0xFF	; 255
    c148:	9f ef       	ldi	r25, 0xFF	; 255
    c14a:	23 96       	adiw	r28, 0x03	; 3
    c14c:	cd bf       	out	0x3d, r28	; 61
    c14e:	de bf       	out	0x3e, r29	; 62
    c150:	df 91       	pop	r29
    c152:	cf 91       	pop	r28
    c154:	08 95       	ret

0000c156 <hal_releaseWdAccess>:
    c156:	cf 93       	push	r28
    c158:	df 93       	push	r29
    c15a:	00 d0       	rcall	.+0      	; 0xc15c <hal_releaseWdAccess+0x6>
    c15c:	cd b7       	in	r28, 0x3d	; 61
    c15e:	de b7       	in	r29, 0x3e	; 62
    c160:	8a 83       	std	Y+2, r24	; 0x02
    c162:	9b 83       	std	Y+3, r25	; 0x03
    c164:	8f b7       	in	r24, 0x3f	; 63
    c166:	89 83       	std	Y+1, r24	; 0x01
    c168:	f8 94       	cli
    c16a:	ea 81       	ldd	r30, Y+2	; 0x02
    c16c:	fb 81       	ldd	r31, Y+3	; 0x03
    c16e:	80 91 3a 24 	lds	r24, 0x243A
    c172:	90 91 3b 24 	lds	r25, 0x243B
    c176:	24 81       	ldd	r18, Z+4	; 0x04
    c178:	35 81       	ldd	r19, Z+5	; 0x05
    c17a:	28 17       	cp	r18, r24
    c17c:	39 07       	cpc	r19, r25
    c17e:	21 f0       	breq	.+8      	; 0xc188 <hal_releaseWdAccess+0x32>
    c180:	89 81       	ldd	r24, Y+1	; 0x01
    c182:	8f bf       	out	0x3f, r24	; 63
    c184:	8e ef       	ldi	r24, 0xFE	; 254
    c186:	11 c0       	rjmp	.+34     	; 0xc1aa <hal_releaseWdAccess+0x54>
    c188:	8a 81       	ldd	r24, Y+2	; 0x02
    c18a:	9b 81       	ldd	r25, Y+3	; 0x03
    c18c:	88 ed       	ldi	r24, 0xD8	; 216
    c18e:	84 bf       	out	0x34, r24	; 52
    c190:	10 92 80 00 	sts	0x0080, r1
    c194:	80 91 3a 24 	lds	r24, 0x243A
    c198:	90 91 3b 24 	lds	r25, 0x243B
    c19c:	6a 81       	ldd	r22, Y+2	; 0x02
    c19e:	7b 81       	ldd	r23, Y+3	; 0x03
    c1a0:	0e 94 c4 89 	call	0x11388	; 0x11388 <utl_destroyLink>
    c1a4:	89 81       	ldd	r24, Y+1	; 0x01
    c1a6:	8f bf       	out	0x3f, r24	; 63
    c1a8:	80 e0       	ldi	r24, 0x00	; 0
    c1aa:	23 96       	adiw	r28, 0x03	; 3
    c1ac:	cd bf       	out	0x3d, r28	; 61
    c1ae:	de bf       	out	0x3e, r29	; 62
    c1b0:	df 91       	pop	r29
    c1b2:	cf 91       	pop	r28
    c1b4:	08 95       	ret

0000c1b6 <hal_configureWd>:
    c1b6:	cf 93       	push	r28
    c1b8:	df 93       	push	r29
    c1ba:	00 d0       	rcall	.+0      	; 0xc1bc <hal_configureWd+0x6>
    c1bc:	cd b7       	in	r28, 0x3d	; 61
    c1be:	de b7       	in	r29, 0x3e	; 62
    c1c0:	8a 83       	std	Y+2, r24	; 0x02
    c1c2:	9b 83       	std	Y+3, r25	; 0x03
    c1c4:	ca 01       	movw	r24, r20
    c1c6:	db 01       	movw	r26, r22
    c1c8:	2f b7       	in	r18, 0x3f	; 63
    c1ca:	29 83       	std	Y+1, r18	; 0x01
    c1cc:	f8 94       	cli
    c1ce:	89 30       	cpi	r24, 0x09	; 9
    c1d0:	91 05       	cpc	r25, r1
    c1d2:	a1 05       	cpc	r26, r1
    c1d4:	b1 05       	cpc	r27, r1
    c1d6:	08 f4       	brcc	.+2      	; 0xc1da <hal_configureWd+0x24>
    c1d8:	47 c0       	rjmp	.+142    	; 0xc268 <hal_configureWd+0xb2>
    c1da:	81 31       	cpi	r24, 0x11	; 17
    c1dc:	91 05       	cpc	r25, r1
    c1de:	a1 05       	cpc	r26, r1
    c1e0:	b1 05       	cpc	r27, r1
    c1e2:	08 f4       	brcc	.+2      	; 0xc1e6 <hal_configureWd+0x30>
    c1e4:	43 c0       	rjmp	.+134    	; 0xc26c <hal_configureWd+0xb6>
    c1e6:	81 32       	cpi	r24, 0x21	; 33
    c1e8:	91 05       	cpc	r25, r1
    c1ea:	a1 05       	cpc	r26, r1
    c1ec:	b1 05       	cpc	r27, r1
    c1ee:	08 f4       	brcc	.+2      	; 0xc1f2 <hal_configureWd+0x3c>
    c1f0:	3f c0       	rjmp	.+126    	; 0xc270 <hal_configureWd+0xba>
    c1f2:	81 34       	cpi	r24, 0x41	; 65
    c1f4:	91 05       	cpc	r25, r1
    c1f6:	a1 05       	cpc	r26, r1
    c1f8:	b1 05       	cpc	r27, r1
    c1fa:	e0 f1       	brcs	.+120    	; 0xc274 <hal_configureWd+0xbe>
    c1fc:	8e 37       	cpi	r24, 0x7E	; 126
    c1fe:	91 05       	cpc	r25, r1
    c200:	a1 05       	cpc	r26, r1
    c202:	b1 05       	cpc	r27, r1
    c204:	c8 f1       	brcs	.+114    	; 0xc278 <hal_configureWd+0xc2>
    c206:	8b 3f       	cpi	r24, 0xFB	; 251
    c208:	91 05       	cpc	r25, r1
    c20a:	a1 05       	cpc	r26, r1
    c20c:	b1 05       	cpc	r27, r1
    c20e:	b0 f1       	brcs	.+108    	; 0xc27c <hal_configureWd+0xc6>
    c210:	85 3f       	cpi	r24, 0xF5	; 245
    c212:	21 e0       	ldi	r18, 0x01	; 1
    c214:	92 07       	cpc	r25, r18
    c216:	20 e0       	ldi	r18, 0x00	; 0
    c218:	a2 07       	cpc	r26, r18
    c21a:	20 e0       	ldi	r18, 0x00	; 0
    c21c:	b2 07       	cpc	r27, r18
    c21e:	80 f1       	brcs	.+96     	; 0xc280 <hal_configureWd+0xca>
    c220:	89 3e       	cpi	r24, 0xE9	; 233
    c222:	23 e0       	ldi	r18, 0x03	; 3
    c224:	92 07       	cpc	r25, r18
    c226:	20 e0       	ldi	r18, 0x00	; 0
    c228:	a2 07       	cpc	r26, r18
    c22a:	20 e0       	ldi	r18, 0x00	; 0
    c22c:	b2 07       	cpc	r27, r18
    c22e:	50 f1       	brcs	.+84     	; 0xc284 <hal_configureWd+0xce>
    c230:	81 3d       	cpi	r24, 0xD1	; 209
    c232:	27 e0       	ldi	r18, 0x07	; 7
    c234:	92 07       	cpc	r25, r18
    c236:	20 e0       	ldi	r18, 0x00	; 0
    c238:	a2 07       	cpc	r26, r18
    c23a:	20 e0       	ldi	r18, 0x00	; 0
    c23c:	b2 07       	cpc	r27, r18
    c23e:	20 f1       	brcs	.+72     	; 0xc288 <hal_configureWd+0xd2>
    c240:	81 3a       	cpi	r24, 0xA1	; 161
    c242:	2f e0       	ldi	r18, 0x0F	; 15
    c244:	92 07       	cpc	r25, r18
    c246:	20 e0       	ldi	r18, 0x00	; 0
    c248:	a2 07       	cpc	r26, r18
    c24a:	20 e0       	ldi	r18, 0x00	; 0
    c24c:	b2 07       	cpc	r27, r18
    c24e:	f0 f0       	brcs	.+60     	; 0xc28c <hal_configureWd+0xd6>
    c250:	81 34       	cpi	r24, 0x41	; 65
    c252:	2f e1       	ldi	r18, 0x1F	; 31
    c254:	92 07       	cpc	r25, r18
    c256:	20 e0       	ldi	r18, 0x00	; 0
    c258:	a2 07       	cpc	r26, r18
    c25a:	20 e0       	ldi	r18, 0x00	; 0
    c25c:	b2 07       	cpc	r27, r18
    c25e:	c0 f0       	brcs	.+48     	; 0xc290 <hal_configureWd+0xda>
    c260:	89 81       	ldd	r24, Y+1	; 0x01
    c262:	8f bf       	out	0x3f, r24	; 63
    c264:	8c ef       	ldi	r24, 0xFC	; 252
    c266:	3e c0       	rjmp	.+124    	; 0xc2e4 <hal_configureWd+0x12e>
    c268:	60 e0       	ldi	r22, 0x00	; 0
    c26a:	13 c0       	rjmp	.+38     	; 0xc292 <hal_configureWd+0xdc>
    c26c:	64 e0       	ldi	r22, 0x04	; 4
    c26e:	11 c0       	rjmp	.+34     	; 0xc292 <hal_configureWd+0xdc>
    c270:	68 e0       	ldi	r22, 0x08	; 8
    c272:	0f c0       	rjmp	.+30     	; 0xc292 <hal_configureWd+0xdc>
    c274:	6c e0       	ldi	r22, 0x0C	; 12
    c276:	0d c0       	rjmp	.+26     	; 0xc292 <hal_configureWd+0xdc>
    c278:	60 e1       	ldi	r22, 0x10	; 16
    c27a:	0b c0       	rjmp	.+22     	; 0xc292 <hal_configureWd+0xdc>
    c27c:	64 e1       	ldi	r22, 0x14	; 20
    c27e:	09 c0       	rjmp	.+18     	; 0xc292 <hal_configureWd+0xdc>
    c280:	68 e1       	ldi	r22, 0x18	; 24
    c282:	07 c0       	rjmp	.+14     	; 0xc292 <hal_configureWd+0xdc>
    c284:	6c e1       	ldi	r22, 0x1C	; 28
    c286:	05 c0       	rjmp	.+10     	; 0xc292 <hal_configureWd+0xdc>
    c288:	60 e2       	ldi	r22, 0x20	; 32
    c28a:	03 c0       	rjmp	.+6      	; 0xc292 <hal_configureWd+0xdc>
    c28c:	64 e2       	ldi	r22, 0x24	; 36
    c28e:	01 c0       	rjmp	.+2      	; 0xc292 <hal_configureWd+0xdc>
    c290:	68 e2       	ldi	r22, 0x28	; 40
    c292:	ea 81       	ldd	r30, Y+2	; 0x02
    c294:	fb 81       	ldd	r31, Y+3	; 0x03
    c296:	40 91 3a 24 	lds	r20, 0x243A
    c29a:	50 91 3b 24 	lds	r21, 0x243B
    c29e:	24 81       	ldd	r18, Z+4	; 0x04
    c2a0:	35 81       	ldd	r19, Z+5	; 0x05
    c2a2:	24 17       	cp	r18, r20
    c2a4:	35 07       	cpc	r19, r21
    c2a6:	21 f0       	breq	.+8      	; 0xc2b0 <hal_configureWd+0xfa>
    c2a8:	89 81       	ldd	r24, Y+1	; 0x01
    c2aa:	8f bf       	out	0x3f, r24	; 63
    c2ac:	8e ef       	ldi	r24, 0xFE	; 254
    c2ae:	1a c0       	rjmp	.+52     	; 0xc2e4 <hal_configureWd+0x12e>
    c2b0:	ea 81       	ldd	r30, Y+2	; 0x02
    c2b2:	fb 81       	ldd	r31, Y+3	; 0x03
    c2b4:	01 90       	ld	r0, Z+
    c2b6:	f0 81       	ld	r31, Z
    c2b8:	e0 2d       	mov	r30, r0
    c2ba:	28 ed       	ldi	r18, 0xD8	; 216
    c2bc:	24 bf       	out	0x34, r18	; 52
    c2be:	10 92 80 00 	sts	0x0080, r1
    c2c2:	63 60       	ori	r22, 0x03	; 3
    c2c4:	24 bf       	out	0x34, r18	; 52
    c2c6:	60 93 80 00 	sts	0x0080, r22
    c2ca:	81 83       	std	Z+1, r24	; 0x01
    c2cc:	92 83       	std	Z+2, r25	; 0x02
    c2ce:	a3 83       	std	Z+3, r26	; 0x03
    c2d0:	b4 83       	std	Z+4, r27	; 0x04
    c2d2:	81 e0       	ldi	r24, 0x01	; 1
    c2d4:	80 83       	st	Z, r24
    c2d6:	80 91 82 00 	lds	r24, 0x0082
    c2da:	80 fd       	sbrc	r24, 0
    c2dc:	fc cf       	rjmp	.-8      	; 0xc2d6 <hal_configureWd+0x120>
    c2de:	89 81       	ldd	r24, Y+1	; 0x01
    c2e0:	8f bf       	out	0x3f, r24	; 63
    c2e2:	80 e0       	ldi	r24, 0x00	; 0
    c2e4:	23 96       	adiw	r28, 0x03	; 3
    c2e6:	cd bf       	out	0x3d, r28	; 61
    c2e8:	de bf       	out	0x3e, r29	; 62
    c2ea:	df 91       	pop	r29
    c2ec:	cf 91       	pop	r28
    c2ee:	08 95       	ret

0000c2f0 <hal_wdDisable>:
    c2f0:	cf 93       	push	r28
    c2f2:	df 93       	push	r29
    c2f4:	00 d0       	rcall	.+0      	; 0xc2f6 <hal_wdDisable+0x6>
    c2f6:	cd b7       	in	r28, 0x3d	; 61
    c2f8:	de b7       	in	r29, 0x3e	; 62
    c2fa:	8a 83       	std	Y+2, r24	; 0x02
    c2fc:	9b 83       	std	Y+3, r25	; 0x03
    c2fe:	8f b7       	in	r24, 0x3f	; 63
    c300:	89 83       	std	Y+1, r24	; 0x01
    c302:	f8 94       	cli
    c304:	ea 81       	ldd	r30, Y+2	; 0x02
    c306:	fb 81       	ldd	r31, Y+3	; 0x03
    c308:	80 91 3a 24 	lds	r24, 0x243A
    c30c:	90 91 3b 24 	lds	r25, 0x243B
    c310:	24 81       	ldd	r18, Z+4	; 0x04
    c312:	35 81       	ldd	r19, Z+5	; 0x05
    c314:	28 17       	cp	r18, r24
    c316:	39 07       	cpc	r19, r25
    c318:	21 f0       	breq	.+8      	; 0xc322 <hal_wdDisable+0x32>
    c31a:	89 81       	ldd	r24, Y+1	; 0x01
    c31c:	8f bf       	out	0x3f, r24	; 63
    c31e:	8e ef       	ldi	r24, 0xFE	; 254
    c320:	0c c0       	rjmp	.+24     	; 0xc33a <hal_wdDisable+0x4a>
    c322:	8a 81       	ldd	r24, Y+2	; 0x02
    c324:	9b 81       	ldd	r25, Y+3	; 0x03
    c326:	88 ed       	ldi	r24, 0xD8	; 216
    c328:	84 bf       	out	0x34, r24	; 52
    c32a:	80 91 80 00 	lds	r24, 0x0080
    c32e:	8d 7f       	andi	r24, 0xFD	; 253
    c330:	80 93 80 00 	sts	0x0080, r24
    c334:	89 81       	ldd	r24, Y+1	; 0x01
    c336:	8f bf       	out	0x3f, r24	; 63
    c338:	80 e0       	ldi	r24, 0x00	; 0
    c33a:	23 96       	adiw	r28, 0x03	; 3
    c33c:	cd bf       	out	0x3d, r28	; 61
    c33e:	de bf       	out	0x3e, r29	; 62
    c340:	df 91       	pop	r29
    c342:	cf 91       	pop	r28
    c344:	08 95       	ret

0000c346 <hal_wdEnable>:
    c346:	cf 93       	push	r28
    c348:	df 93       	push	r29
    c34a:	00 d0       	rcall	.+0      	; 0xc34c <hal_wdEnable+0x6>
    c34c:	cd b7       	in	r28, 0x3d	; 61
    c34e:	de b7       	in	r29, 0x3e	; 62
    c350:	8a 83       	std	Y+2, r24	; 0x02
    c352:	9b 83       	std	Y+3, r25	; 0x03
    c354:	8f b7       	in	r24, 0x3f	; 63
    c356:	89 83       	std	Y+1, r24	; 0x01
    c358:	f8 94       	cli
    c35a:	ea 81       	ldd	r30, Y+2	; 0x02
    c35c:	fb 81       	ldd	r31, Y+3	; 0x03
    c35e:	80 91 3a 24 	lds	r24, 0x243A
    c362:	90 91 3b 24 	lds	r25, 0x243B
    c366:	24 81       	ldd	r18, Z+4	; 0x04
    c368:	35 81       	ldd	r19, Z+5	; 0x05
    c36a:	28 17       	cp	r18, r24
    c36c:	39 07       	cpc	r19, r25
    c36e:	21 f0       	breq	.+8      	; 0xc378 <hal_wdEnable+0x32>
    c370:	89 81       	ldd	r24, Y+1	; 0x01
    c372:	8f bf       	out	0x3f, r24	; 63
    c374:	8e ef       	ldi	r24, 0xFE	; 254
    c376:	1a c0       	rjmp	.+52     	; 0xc3ac <hal_wdEnable+0x66>
    c378:	ea 81       	ldd	r30, Y+2	; 0x02
    c37a:	fb 81       	ldd	r31, Y+3	; 0x03
    c37c:	01 90       	ld	r0, Z+
    c37e:	f0 81       	ld	r31, Z
    c380:	e0 2d       	mov	r30, r0
    c382:	80 81       	ld	r24, Z
    c384:	88 23       	and	r24, r24
    c386:	21 f4       	brne	.+8      	; 0xc390 <hal_wdEnable+0x4a>
    c388:	89 81       	ldd	r24, Y+1	; 0x01
    c38a:	8f bf       	out	0x3f, r24	; 63
    c38c:	8b ef       	ldi	r24, 0xFB	; 251
    c38e:	0e c0       	rjmp	.+28     	; 0xc3ac <hal_wdEnable+0x66>
    c390:	88 ed       	ldi	r24, 0xD8	; 216
    c392:	84 bf       	out	0x34, r24	; 52
    c394:	80 91 80 00 	lds	r24, 0x0080
    c398:	83 60       	ori	r24, 0x03	; 3
    c39a:	80 93 80 00 	sts	0x0080, r24
    c39e:	80 91 82 00 	lds	r24, 0x0082
    c3a2:	80 fd       	sbrc	r24, 0
    c3a4:	fc cf       	rjmp	.-8      	; 0xc39e <hal_wdEnable+0x58>
    c3a6:	89 81       	ldd	r24, Y+1	; 0x01
    c3a8:	8f bf       	out	0x3f, r24	; 63
    c3aa:	80 e0       	ldi	r24, 0x00	; 0
    c3ac:	23 96       	adiw	r28, 0x03	; 3
    c3ae:	cd bf       	out	0x3d, r28	; 61
    c3b0:	de bf       	out	0x3e, r29	; 62
    c3b2:	df 91       	pop	r29
    c3b4:	cf 91       	pop	r28
    c3b6:	08 95       	ret

0000c3b8 <__lshrdi3>:
    c3b8:	ef 92       	push	r14
    c3ba:	ff 92       	push	r15
    c3bc:	0f 93       	push	r16
    c3be:	df 93       	push	r29
    c3c0:	cf 93       	push	r28
    c3c2:	cd b7       	in	r28, 0x3d	; 61
    c3c4:	de b7       	in	r29, 0x3e	; 62
    c3c6:	60 97       	sbiw	r28, 0x10	; 16
    c3c8:	cd bf       	out	0x3d, r28	; 61
    c3ca:	de bf       	out	0x3e, r29	; 62
    c3cc:	a8 2f       	mov	r26, r24
    c3ce:	00 23       	and	r16, r16
    c3d0:	09 f4       	brne	.+2      	; 0xc3d4 <__lshrdi3+0x1c>
    c3d2:	61 c0       	rjmp	.+194    	; 0xc496 <__lshrdi3+0xde>
    c3d4:	7e 01       	movw	r14, r28
    c3d6:	08 94       	sec
    c3d8:	e1 1c       	adc	r14, r1
    c3da:	f1 1c       	adc	r15, r1
    c3dc:	88 e0       	ldi	r24, 0x08	; 8
    c3de:	f7 01       	movw	r30, r14
    c3e0:	11 92       	st	Z+, r1
    c3e2:	8a 95       	dec	r24
    c3e4:	e9 f7       	brne	.-6      	; 0xc3e0 <__lshrdi3+0x28>
    c3e6:	29 83       	std	Y+1, r18	; 0x01
    c3e8:	3a 83       	std	Y+2, r19	; 0x02
    c3ea:	4b 83       	std	Y+3, r20	; 0x03
    c3ec:	5c 83       	std	Y+4, r21	; 0x04
    c3ee:	6d 83       	std	Y+5, r22	; 0x05
    c3f0:	7e 83       	std	Y+6, r23	; 0x06
    c3f2:	af 83       	std	Y+7, r26	; 0x07
    c3f4:	98 87       	std	Y+8, r25	; 0x08
    c3f6:	80 e2       	ldi	r24, 0x20	; 32
    c3f8:	80 1b       	sub	r24, r16
    c3fa:	e8 2f       	mov	r30, r24
    c3fc:	ff 27       	eor	r31, r31
    c3fe:	e7 fd       	sbrc	r30, 7
    c400:	f0 95       	com	r31
    c402:	4d 81       	ldd	r20, Y+5	; 0x05
    c404:	5e 81       	ldd	r21, Y+6	; 0x06
    c406:	6f 81       	ldd	r22, Y+7	; 0x07
    c408:	78 85       	ldd	r23, Y+8	; 0x08
    c40a:	18 16       	cp	r1, r24
    c40c:	84 f0       	brlt	.+32     	; 0xc42e <__lshrdi3+0x76>
    c40e:	1d 86       	std	Y+13, r1	; 0x0d
    c410:	1e 86       	std	Y+14, r1	; 0x0e
    c412:	1f 86       	std	Y+15, r1	; 0x0f
    c414:	18 8a       	std	Y+16, r1	; 0x10
    c416:	88 27       	eor	r24, r24
    c418:	99 27       	eor	r25, r25
    c41a:	8e 1b       	sub	r24, r30
    c41c:	9f 0b       	sbc	r25, r31
    c41e:	04 c0       	rjmp	.+8      	; 0xc428 <__lshrdi3+0x70>
    c420:	76 95       	lsr	r23
    c422:	67 95       	ror	r22
    c424:	57 95       	ror	r21
    c426:	47 95       	ror	r20
    c428:	8a 95       	dec	r24
    c42a:	d2 f7       	brpl	.-12     	; 0xc420 <__lshrdi3+0x68>
    c42c:	28 c0       	rjmp	.+80     	; 0xc47e <__lshrdi3+0xc6>
    c42e:	20 2f       	mov	r18, r16
    c430:	33 27       	eor	r19, r19
    c432:	27 fd       	sbrc	r18, 7
    c434:	30 95       	com	r19
    c436:	db 01       	movw	r26, r22
    c438:	ca 01       	movw	r24, r20
    c43a:	02 2e       	mov	r0, r18
    c43c:	04 c0       	rjmp	.+8      	; 0xc446 <__lshrdi3+0x8e>
    c43e:	b6 95       	lsr	r27
    c440:	a7 95       	ror	r26
    c442:	97 95       	ror	r25
    c444:	87 95       	ror	r24
    c446:	0a 94       	dec	r0
    c448:	d2 f7       	brpl	.-12     	; 0xc43e <__lshrdi3+0x86>
    c44a:	8d 87       	std	Y+13, r24	; 0x0d
    c44c:	9e 87       	std	Y+14, r25	; 0x0e
    c44e:	af 87       	std	Y+15, r26	; 0x0f
    c450:	b8 8b       	std	Y+16, r27	; 0x10
    c452:	04 c0       	rjmp	.+8      	; 0xc45c <__lshrdi3+0xa4>
    c454:	44 0f       	add	r20, r20
    c456:	55 1f       	adc	r21, r21
    c458:	66 1f       	adc	r22, r22
    c45a:	77 1f       	adc	r23, r23
    c45c:	ea 95       	dec	r30
    c45e:	d2 f7       	brpl	.-12     	; 0xc454 <__lshrdi3+0x9c>
    c460:	89 81       	ldd	r24, Y+1	; 0x01
    c462:	9a 81       	ldd	r25, Y+2	; 0x02
    c464:	ab 81       	ldd	r26, Y+3	; 0x03
    c466:	bc 81       	ldd	r27, Y+4	; 0x04
    c468:	04 c0       	rjmp	.+8      	; 0xc472 <__lshrdi3+0xba>
    c46a:	b6 95       	lsr	r27
    c46c:	a7 95       	ror	r26
    c46e:	97 95       	ror	r25
    c470:	87 95       	ror	r24
    c472:	2a 95       	dec	r18
    c474:	d2 f7       	brpl	.-12     	; 0xc46a <__lshrdi3+0xb2>
    c476:	48 2b       	or	r20, r24
    c478:	59 2b       	or	r21, r25
    c47a:	6a 2b       	or	r22, r26
    c47c:	7b 2b       	or	r23, r27
    c47e:	49 87       	std	Y+9, r20	; 0x09
    c480:	5a 87       	std	Y+10, r21	; 0x0a
    c482:	6b 87       	std	Y+11, r22	; 0x0b
    c484:	7c 87       	std	Y+12, r23	; 0x0c
    c486:	29 85       	ldd	r18, Y+9	; 0x09
    c488:	3a 85       	ldd	r19, Y+10	; 0x0a
    c48a:	4b 85       	ldd	r20, Y+11	; 0x0b
    c48c:	5c 85       	ldd	r21, Y+12	; 0x0c
    c48e:	6d 85       	ldd	r22, Y+13	; 0x0d
    c490:	7e 85       	ldd	r23, Y+14	; 0x0e
    c492:	af 85       	ldd	r26, Y+15	; 0x0f
    c494:	98 89       	ldd	r25, Y+16	; 0x10
    c496:	8a 2f       	mov	r24, r26
    c498:	60 96       	adiw	r28, 0x10	; 16
    c49a:	cd bf       	out	0x3d, r28	; 61
    c49c:	de bf       	out	0x3e, r29	; 62
    c49e:	cf 91       	pop	r28
    c4a0:	df 91       	pop	r29
    c4a2:	0f 91       	pop	r16
    c4a4:	ff 90       	pop	r15
    c4a6:	ef 90       	pop	r14
    c4a8:	08 95       	ret

0000c4aa <arb_consoleInit>:
    c4aa:	cf 92       	push	r12
    c4ac:	df 92       	push	r13
    c4ae:	ef 92       	push	r14
    c4b0:	ff 92       	push	r15
    c4b2:	0f 93       	push	r16
    c4b4:	1f 93       	push	r17
    c4b6:	cf 93       	push	r28
    c4b8:	df 93       	push	r29
    c4ba:	ec 01       	movw	r28, r24
    c4bc:	6b 01       	movw	r12, r22
    c4be:	fa 01       	movw	r30, r20
    c4c0:	a2 2f       	mov	r26, r18
    c4c2:	78 01       	movw	r14, r16
    c4c4:	8b eb       	ldi	r24, 0xBB	; 187
    c4c6:	92 e6       	ldi	r25, 0x62	; 98
    c4c8:	61 e0       	ldi	r22, 0x01	; 1
    c4ca:	70 e0       	ldi	r23, 0x00	; 0
    c4cc:	40 e0       	ldi	r20, 0x00	; 0
    c4ce:	50 e0       	ldi	r21, 0x00	; 0
    c4d0:	9f 01       	movw	r18, r30
    c4d2:	0a 2f       	mov	r16, r26
    c4d4:	0e 94 5b 83 	call	0x106b6	; 0x106b6 <arb_threadCreate>
    c4d8:	80 93 d6 24 	sts	0x24D6, r24
    c4dc:	90 93 d7 24 	sts	0x24D7, r25
    c4e0:	80 91 d6 24 	lds	r24, 0x24D6
    c4e4:	90 91 d7 24 	lds	r25, 0x24D7
    c4e8:	97 ff       	sbrs	r25, 7
    c4ea:	05 c0       	rjmp	.+10     	; 0xc4f6 <arb_consoleInit+0x4c>
    c4ec:	80 91 d6 24 	lds	r24, 0x24D6
    c4f0:	90 91 d7 24 	lds	r25, 0x24D7
    c4f4:	37 c0       	rjmp	.+110    	; 0xc564 <arb_consoleInit+0xba>
    c4f6:	ce 01       	movw	r24, r28
    c4f8:	63 e0       	ldi	r22, 0x03	; 3
    c4fa:	0e 94 22 6f 	call	0xde44	; 0xde44 <arb_open>
    c4fe:	80 93 d8 24 	sts	0x24D8, r24
    c502:	90 93 d9 24 	sts	0x24D9, r25
    c506:	80 91 d8 24 	lds	r24, 0x24D8
    c50a:	90 91 d9 24 	lds	r25, 0x24D9
    c50e:	97 ff       	sbrs	r25, 7
    c510:	05 c0       	rjmp	.+10     	; 0xc51c <arb_consoleInit+0x72>
    c512:	80 91 d8 24 	lds	r24, 0x24D8
    c516:	90 91 d9 24 	lds	r25, 0x24D9
    c51a:	24 c0       	rjmp	.+72     	; 0xc564 <arb_consoleInit+0xba>
    c51c:	e0 92 dc 24 	sts	0x24DC, r14
    c520:	f0 92 dd 24 	sts	0x24DD, r15
    c524:	c6 01       	movw	r24, r12
    c526:	63 e0       	ldi	r22, 0x03	; 3
    c528:	0e 94 22 6f 	call	0xde44	; 0xde44 <arb_open>
    c52c:	80 93 da 24 	sts	0x24DA, r24
    c530:	90 93 db 24 	sts	0x24DB, r25
    c534:	80 91 da 24 	lds	r24, 0x24DA
    c538:	90 91 db 24 	lds	r25, 0x24DB
    c53c:	87 5f       	subi	r24, 0xF7	; 247
    c53e:	9f 4f       	sbci	r25, 0xFF	; 255
    c540:	29 f4       	brne	.+10     	; 0xc54c <arb_consoleInit+0xa2>
    c542:	10 92 da 24 	sts	0x24DA, r1
    c546:	10 92 db 24 	sts	0x24DB, r1
    c54a:	06 c0       	rjmp	.+12     	; 0xc558 <arb_consoleInit+0xae>
    c54c:	80 91 da 24 	lds	r24, 0x24DA
    c550:	90 91 db 24 	lds	r25, 0x24DB
    c554:	97 fd       	sbrc	r25, 7
    c556:	02 c0       	rjmp	.+4      	; 0xc55c <arb_consoleInit+0xb2>
    c558:	80 e0       	ldi	r24, 0x00	; 0
    c55a:	04 c0       	rjmp	.+8      	; 0xc564 <arb_consoleInit+0xba>
    c55c:	80 91 da 24 	lds	r24, 0x24DA
    c560:	90 91 db 24 	lds	r25, 0x24DB
    c564:	df 91       	pop	r29
    c566:	cf 91       	pop	r28
    c568:	1f 91       	pop	r17
    c56a:	0f 91       	pop	r16
    c56c:	ff 90       	pop	r15
    c56e:	ef 90       	pop	r14
    c570:	df 90       	pop	r13
    c572:	cf 90       	pop	r12
    c574:	08 95       	ret

0000c576 <arb_console>:
    c576:	2f 92       	push	r2
    c578:	3f 92       	push	r3
    c57a:	4f 92       	push	r4
    c57c:	5f 92       	push	r5
    c57e:	6f 92       	push	r6
    c580:	7f 92       	push	r7
    c582:	8f 92       	push	r8
    c584:	9f 92       	push	r9
    c586:	af 92       	push	r10
    c588:	bf 92       	push	r11
    c58a:	cf 92       	push	r12
    c58c:	df 92       	push	r13
    c58e:	ef 92       	push	r14
    c590:	ff 92       	push	r15
    c592:	0f 93       	push	r16
    c594:	1f 93       	push	r17
    c596:	df 93       	push	r29
    c598:	cf 93       	push	r28
    c59a:	cd b7       	in	r28, 0x3d	; 61
    c59c:	de b7       	in	r29, 0x3e	; 62
    c59e:	cb 50       	subi	r28, 0x0B	; 11
    c5a0:	d2 40       	sbci	r29, 0x02	; 2
    c5a2:	cd bf       	out	0x3d, r28	; 61
    c5a4:	de bf       	out	0x3e, r29	; 62
    c5a6:	de 01       	movw	r26, r28
    c5a8:	5a 96       	adiw	r26, 0x1a	; 26
    c5aa:	ed ef       	ldi	r30, 0xFD	; 253
    c5ac:	f1 e2       	ldi	r31, 0x21	; 33
    c5ae:	81 e3       	ldi	r24, 0x31	; 49
    c5b0:	01 90       	ld	r0, Z+
    c5b2:	0d 92       	st	X+, r0
    c5b4:	81 50       	subi	r24, 0x01	; 1
    c5b6:	e1 f7       	brne	.-8      	; 0xc5b0 <arb_console+0x3a>
    c5b8:	80 91 d8 24 	lds	r24, 0x24D8
    c5bc:	90 91 d9 24 	lds	r25, 0x24D9
    c5c0:	66 e0       	ldi	r22, 0x06	; 6
    c5c2:	70 e0       	ldi	r23, 0x00	; 0
    c5c4:	20 e0       	ldi	r18, 0x00	; 0
    c5c6:	30 e0       	ldi	r19, 0x00	; 0
    c5c8:	40 e0       	ldi	r20, 0x00	; 0
    c5ca:	50 e0       	ldi	r21, 0x00	; 0
    c5cc:	0e 94 4a 6d 	call	0xda94	; 0xda94 <arb_ioctl>
    c5d0:	80 91 d8 24 	lds	r24, 0x24D8
    c5d4:	90 91 d9 24 	lds	r25, 0x24D9
    c5d8:	67 e0       	ldi	r22, 0x07	; 7
    c5da:	70 e0       	ldi	r23, 0x00	; 0
    c5dc:	20 e3       	ldi	r18, 0x30	; 48
    c5de:	30 e0       	ldi	r19, 0x00	; 0
    c5e0:	40 e0       	ldi	r20, 0x00	; 0
    c5e2:	50 e0       	ldi	r21, 0x00	; 0
    c5e4:	0e 94 4a 6d 	call	0xda94	; 0xda94 <arb_ioctl>
    c5e8:	80 91 d8 24 	lds	r24, 0x24D8
    c5ec:	90 91 d9 24 	lds	r25, 0x24D9
    c5f0:	68 e0       	ldi	r22, 0x08	; 8
    c5f2:	70 e0       	ldi	r23, 0x00	; 0
    c5f4:	22 e3       	ldi	r18, 0x32	; 50
    c5f6:	30 e0       	ldi	r19, 0x00	; 0
    c5f8:	40 e0       	ldi	r20, 0x00	; 0
    c5fa:	50 e0       	ldi	r21, 0x00	; 0
    c5fc:	0e 94 4a 6d 	call	0xda94	; 0xda94 <arb_ioctl>
    c600:	80 91 d8 24 	lds	r24, 0x24D8
    c604:	90 91 d9 24 	lds	r25, 0x24D9
    c608:	69 e0       	ldi	r22, 0x09	; 9
    c60a:	70 e0       	ldi	r23, 0x00	; 0
    c60c:	21 e3       	ldi	r18, 0x31	; 49
    c60e:	30 e0       	ldi	r19, 0x00	; 0
    c610:	40 e0       	ldi	r20, 0x00	; 0
    c612:	50 e0       	ldi	r21, 0x00	; 0
    c614:	0e 94 4a 6d 	call	0xda94	; 0xda94 <arb_ioctl>
    c618:	80 91 d8 24 	lds	r24, 0x24D8
    c61c:	90 91 d9 24 	lds	r25, 0x24D9
    c620:	be 01       	movw	r22, r28
    c622:	66 5e       	subi	r22, 0xE6	; 230
    c624:	7f 4f       	sbci	r23, 0xFF	; 255
    c626:	41 e3       	ldi	r20, 0x31	; 49
    c628:	50 e0       	ldi	r21, 0x00	; 0
    c62a:	0e 94 ef 6c 	call	0xd9de	; 0xd9de <arb_write>
    c62e:	80 91 d8 24 	lds	r24, 0x24D8
    c632:	90 91 d9 24 	lds	r25, 0x24D9
    c636:	69 e0       	ldi	r22, 0x09	; 9
    c638:	70 e0       	ldi	r23, 0x00	; 0
    c63a:	27 e3       	ldi	r18, 0x37	; 55
    c63c:	30 e0       	ldi	r19, 0x00	; 0
    c63e:	40 e0       	ldi	r20, 0x00	; 0
    c640:	50 e0       	ldi	r21, 0x00	; 0
    c642:	0e 94 4a 6d 	call	0xda94	; 0xda94 <arb_ioctl>
    c646:	80 91 d8 24 	lds	r24, 0x24D8
    c64a:	90 91 d9 24 	lds	r25, 0x24D9
    c64e:	64 e0       	ldi	r22, 0x04	; 4
    c650:	70 e0       	ldi	r23, 0x00	; 0
    c652:	20 e0       	ldi	r18, 0x00	; 0
    c654:	30 e0       	ldi	r19, 0x00	; 0
    c656:	40 e0       	ldi	r20, 0x00	; 0
    c658:	50 e0       	ldi	r21, 0x00	; 0
    c65a:	0e 94 4a 6d 	call	0xda94	; 0xda94 <arb_ioctl>
    c65e:	8e 01       	movw	r16, r28
    c660:	05 5b       	subi	r16, 0xB5	; 181
    c662:	1f 4f       	sbci	r17, 0xFF	; 255
    c664:	c6 5f       	subi	r28, 0xF6	; 246
    c666:	dd 4f       	sbci	r29, 0xFD	; 253
    c668:	08 83       	st	Y, r16
    c66a:	19 83       	std	Y+1, r17	; 0x01
    c66c:	ca 50       	subi	r28, 0x0A	; 10
    c66e:	d2 40       	sbci	r29, 0x02	; 2
    c670:	98 01       	movw	r18, r16
    c672:	40 e0       	ldi	r20, 0x00	; 0
    c674:	50 e0       	ldi	r21, 0x00	; 0
    c676:	c4 51       	subi	r28, 0x14	; 20
    c678:	de 4f       	sbci	r29, 0xFE	; 254
    c67a:	28 83       	st	Y, r18
    c67c:	39 83       	std	Y+1, r19	; 0x01
    c67e:	4a 83       	std	Y+2, r20	; 0x02
    c680:	5b 83       	std	Y+3, r21	; 0x03
    c682:	cc 5e       	subi	r28, 0xEC	; 236
    c684:	d1 40       	sbci	r29, 0x01	; 1
    c686:	b8 01       	movw	r22, r16
    c688:	60 5f       	subi	r22, 0xF0	; 240
    c68a:	7f 4f       	sbci	r23, 0xFF	; 255
    c68c:	c0 51       	subi	r28, 0x10	; 16
    c68e:	de 4f       	sbci	r29, 0xFE	; 254
    c690:	68 83       	st	Y, r22
    c692:	79 83       	std	Y+1, r23	; 0x01
    c694:	c0 5f       	subi	r28, 0xF0	; 240
    c696:	d1 40       	sbci	r29, 0x01	; 1
    c698:	cb 01       	movw	r24, r22
    c69a:	a0 e0       	ldi	r26, 0x00	; 0
    c69c:	b0 e0       	ldi	r27, 0x00	; 0
    c69e:	ce 50       	subi	r28, 0x0E	; 14
    c6a0:	de 4f       	sbci	r29, 0xFE	; 254
    c6a2:	88 83       	st	Y, r24
    c6a4:	99 83       	std	Y+1, r25	; 0x01
    c6a6:	aa 83       	std	Y+2, r26	; 0x02
    c6a8:	bb 83       	std	Y+3, r27	; 0x03
    c6aa:	c2 5f       	subi	r28, 0xF2	; 242
    c6ac:	d1 40       	sbci	r29, 0x01	; 1
    c6ae:	e8 e4       	ldi	r30, 0x48	; 72
    c6b0:	f4 e2       	ldi	r31, 0x24	; 36
    c6b2:	cf 01       	movw	r24, r30
    c6b4:	a0 e0       	ldi	r26, 0x00	; 0
    c6b6:	b0 e0       	ldi	r27, 0x00	; 0
    c6b8:	70 e0       	ldi	r23, 0x00	; 0
    c6ba:	e7 2e       	mov	r14, r23
    c6bc:	70 e2       	ldi	r23, 0x20	; 32
    c6be:	f7 2e       	mov	r15, r23
    c6c0:	97 01       	movw	r18, r14
    c6c2:	40 e0       	ldi	r20, 0x00	; 0
    c6c4:	50 e0       	ldi	r21, 0x00	; 0
    c6c6:	7c 01       	movw	r14, r24
    c6c8:	8d 01       	movw	r16, r26
    c6ca:	e2 1a       	sub	r14, r18
    c6cc:	f3 0a       	sbc	r15, r19
    c6ce:	04 0b       	sbc	r16, r20
    c6d0:	15 0b       	sbc	r17, r21
    c6d2:	ca 50       	subi	r28, 0x0A	; 10
    c6d4:	de 4f       	sbci	r29, 0xFE	; 254
    c6d6:	e8 82       	st	Y, r14
    c6d8:	f9 82       	std	Y+1, r15	; 0x01
    c6da:	0a 83       	std	Y+2, r16	; 0x02
    c6dc:	1b 83       	std	Y+3, r17	; 0x03
    c6de:	c6 5f       	subi	r28, 0xF6	; 246
    c6e0:	d1 40       	sbci	r29, 0x01	; 1
    c6e2:	0e ec       	ldi	r16, 0xCE	; 206
    c6e4:	17 e2       	ldi	r17, 0x27	; 39
    c6e6:	78 01       	movw	r14, r16
    c6e8:	00 e0       	ldi	r16, 0x00	; 0
    c6ea:	10 e0       	ldi	r17, 0x00	; 0
    c6ec:	c6 50       	subi	r28, 0x06	; 6
    c6ee:	de 4f       	sbci	r29, 0xFE	; 254
    c6f0:	e8 82       	st	Y, r14
    c6f2:	f9 82       	std	Y+1, r15	; 0x01
    c6f4:	0a 83       	std	Y+2, r16	; 0x02
    c6f6:	1b 83       	std	Y+3, r17	; 0x03
    c6f8:	ca 5f       	subi	r28, 0xFA	; 250
    c6fa:	d1 40       	sbci	r29, 0x01	; 1
    c6fc:	e8 1a       	sub	r14, r24
    c6fe:	f9 0a       	sbc	r15, r25
    c700:	0a 0b       	sbc	r16, r26
    c702:	1b 0b       	sbc	r17, r27
    c704:	c2 50       	subi	r28, 0x02	; 2
    c706:	de 4f       	sbci	r29, 0xFE	; 254
    c708:	e8 82       	st	Y, r14
    c70a:	f9 82       	std	Y+1, r15	; 0x01
    c70c:	0a 83       	std	Y+2, r16	; 0x02
    c70e:	1b 83       	std	Y+3, r17	; 0x03
    c710:	ce 5f       	subi	r28, 0xFE	; 254
    c712:	d1 40       	sbci	r29, 0x01	; 1
    c714:	ca 50       	subi	r28, 0x0A	; 10
    c716:	de 4f       	sbci	r29, 0xFE	; 254
    c718:	68 81       	ld	r22, Y
    c71a:	79 81       	ldd	r23, Y+1	; 0x01
    c71c:	8a 81       	ldd	r24, Y+2	; 0x02
    c71e:	9b 81       	ldd	r25, Y+3	; 0x03
    c720:	c6 5f       	subi	r28, 0xF6	; 246
    c722:	d1 40       	sbci	r29, 0x01	; 1
    c724:	e6 0e       	add	r14, r22
    c726:	f7 1e       	adc	r15, r23
    c728:	08 1f       	adc	r16, r24
    c72a:	19 1f       	adc	r17, r25
    c72c:	ce 5f       	subi	r28, 0xFE	; 254
    c72e:	dd 4f       	sbci	r29, 0xFD	; 253
    c730:	e8 82       	st	Y, r14
    c732:	f9 82       	std	Y+1, r15	; 0x01
    c734:	0a 83       	std	Y+2, r16	; 0x02
    c736:	1b 83       	std	Y+3, r17	; 0x03
    c738:	c2 50       	subi	r28, 0x02	; 2
    c73a:	d2 40       	sbci	r29, 0x02	; 2
    c73c:	8f ef       	ldi	r24, 0xFF	; 255
    c73e:	9f e3       	ldi	r25, 0x3F	; 63
    c740:	a0 e0       	ldi	r26, 0x00	; 0
    c742:	b0 e0       	ldi	r27, 0x00	; 0
    c744:	82 1b       	sub	r24, r18
    c746:	93 0b       	sbc	r25, r19
    c748:	a4 0b       	sbc	r26, r20
    c74a:	b5 0b       	sbc	r27, r21
    c74c:	ca 5f       	subi	r28, 0xFA	; 250
    c74e:	dd 4f       	sbci	r29, 0xFD	; 253
    c750:	88 83       	st	Y, r24
    c752:	99 83       	std	Y+1, r25	; 0x01
    c754:	aa 83       	std	Y+2, r26	; 0x02
    c756:	bb 83       	std	Y+3, r27	; 0x03
    c758:	c6 50       	subi	r28, 0x06	; 6
    c75a:	d2 40       	sbci	r29, 0x02	; 2
    c75c:	80 91 d8 24 	lds	r24, 0x24D8
    c760:	90 91 d9 24 	lds	r25, 0x24D9
    c764:	63 e0       	ldi	r22, 0x03	; 3
    c766:	70 e0       	ldi	r23, 0x00	; 0
    c768:	c4 51       	subi	r28, 0x14	; 20
    c76a:	de 4f       	sbci	r29, 0xFE	; 254
    c76c:	28 81       	ld	r18, Y
    c76e:	39 81       	ldd	r19, Y+1	; 0x01
    c770:	4a 81       	ldd	r20, Y+2	; 0x02
    c772:	5b 81       	ldd	r21, Y+3	; 0x03
    c774:	cc 5e       	subi	r28, 0xEC	; 236
    c776:	d1 40       	sbci	r29, 0x01	; 1
    c778:	0e 94 4a 6d 	call	0xda94	; 0xda94 <arb_ioctl>
    c77c:	6b 3f       	cpi	r22, 0xFB	; 251
    c77e:	79 f4       	brne	.+30     	; 0xc79e <arb_console+0x228>
    c780:	00 d0       	rcall	.+0      	; 0xc782 <arb_console+0x20c>
    c782:	0f 92       	push	r0
    c784:	ec eb       	ldi	r30, 0xBC	; 188
    c786:	f0 e0       	ldi	r31, 0x00	; 0
    c788:	ec 0f       	add	r30, r28
    c78a:	fd 1f       	adc	r31, r29
    c78c:	ad b7       	in	r26, 0x3d	; 61
    c78e:	be b7       	in	r27, 0x3e	; 62
    c790:	11 96       	adiw	r26, 0x01	; 1
    c792:	ed 93       	st	X+, r30
    c794:	fc 93       	st	X, r31
    c796:	12 97       	sbiw	r26, 0x02	; 2
    c798:	82 eb       	ldi	r24, 0xB2	; 178
    c79a:	93 e0       	ldi	r25, 0x03	; 3
    c79c:	10 c0       	rjmp	.+32     	; 0xc7be <arb_console+0x248>
    c79e:	6a 3f       	cpi	r22, 0xFA	; 250
    c7a0:	a1 f4       	brne	.+40     	; 0xc7ca <arb_console+0x254>
    c7a2:	00 d0       	rcall	.+0      	; 0xc7a4 <arb_console+0x22e>
    c7a4:	0f 92       	push	r0
    c7a6:	ec eb       	ldi	r30, 0xBC	; 188
    c7a8:	f0 e0       	ldi	r31, 0x00	; 0
    c7aa:	ec 0f       	add	r30, r28
    c7ac:	fd 1f       	adc	r31, r29
    c7ae:	ad b7       	in	r26, 0x3d	; 61
    c7b0:	be b7       	in	r27, 0x3e	; 62
    c7b2:	11 96       	adiw	r26, 0x01	; 1
    c7b4:	ed 93       	st	X+, r30
    c7b6:	fc 93       	st	X, r31
    c7b8:	12 97       	sbiw	r26, 0x02	; 2
    c7ba:	87 e9       	ldi	r24, 0x97	; 151
    c7bc:	93 e0       	ldi	r25, 0x03	; 3
    c7be:	13 96       	adiw	r26, 0x03	; 3
    c7c0:	8d 93       	st	X+, r24
    c7c2:	9c 93       	st	X, r25
    c7c4:	14 97       	sbiw	r26, 0x04	; 4
    c7c6:	0c 94 93 6c 	jmp	0xd926	; 0xd926 <arb_console+0x13b0>
    c7ca:	ce 01       	movw	r24, r28
    c7cc:	85 5b       	subi	r24, 0xB5	; 181
    c7ce:	9f 4f       	sbci	r25, 0xFF	; 255
    c7d0:	63 e9       	ldi	r22, 0x93	; 147
    c7d2:	73 e0       	ldi	r23, 0x03	; 3
    c7d4:	0e 94 97 b0 	call	0x1612e	; 0x1612e <strcasecmp_P>
    c7d8:	89 2b       	or	r24, r25
    c7da:	31 f5       	brne	.+76     	; 0xc828 <arb_console+0x2b2>
    c7dc:	c5 54       	subi	r28, 0x45	; 69
    c7de:	df 4f       	sbci	r29, 0xFF	; 255
    c7e0:	88 81       	ld	r24, Y
    c7e2:	cb 5b       	subi	r28, 0xBB	; 187
    c7e4:	d0 40       	sbci	r29, 0x00	; 0
    c7e6:	84 30       	cpi	r24, 0x04	; 4
    c7e8:	f9 f4       	brne	.+62     	; 0xc828 <arb_console+0x2b2>
    c7ea:	c0 51       	subi	r28, 0x10	; 16
    c7ec:	de 4f       	sbci	r29, 0xFE	; 254
    c7ee:	88 81       	ld	r24, Y
    c7f0:	99 81       	ldd	r25, Y+1	; 0x01
    c7f2:	c0 5f       	subi	r28, 0xF0	; 240
    c7f4:	d1 40       	sbci	r29, 0x01	; 1
    c7f6:	0e 94 9e af 	call	0x15f3c	; 0x15f3c <atoi>
    c7fa:	08 2f       	mov	r16, r24
    c7fc:	8b e4       	ldi	r24, 0x4B	; 75
    c7fe:	90 e0       	ldi	r25, 0x00	; 0
    c800:	8c 0f       	add	r24, r28
    c802:	9d 1f       	adc	r25, r29
    c804:	80 96       	adiw	r24, 0x20	; 32
    c806:	0e 94 9e af 	call	0x15f3c	; 0x15f3c <atoi>
    c80a:	18 2f       	mov	r17, r24
    c80c:	8b e4       	ldi	r24, 0x4B	; 75
    c80e:	90 e0       	ldi	r25, 0x00	; 0
    c810:	8c 0f       	add	r24, r28
    c812:	9d 1f       	adc	r25, r29
    c814:	c0 96       	adiw	r24, 0x30	; 48
    c816:	0e 94 9e af 	call	0x15f3c	; 0x15f3c <atoi>
    c81a:	48 2f       	mov	r20, r24
    c81c:	80 2f       	mov	r24, r16
    c81e:	61 2f       	mov	r22, r17
    c820:	0e 94 4d 80 	call	0x1009a	; 0x1009a <arb_setSysTime>
    c824:	0c 94 a3 6c 	jmp	0xd946	; 0xd946 <arb_console+0x13d0>
    c828:	ce 01       	movw	r24, r28
    c82a:	85 5b       	subi	r24, 0xB5	; 181
    c82c:	9f 4f       	sbci	r25, 0xFF	; 255
    c82e:	6e e8       	ldi	r22, 0x8E	; 142
    c830:	73 e0       	ldi	r23, 0x03	; 3
    c832:	0e 94 97 b0 	call	0x1612e	; 0x1612e <strcasecmp_P>
    c836:	89 2b       	or	r24, r25
    c838:	09 f0       	breq	.+2      	; 0xc83c <arb_console+0x2c6>
    c83a:	eb c1       	rjmp	.+982    	; 0xcc12 <arb_console+0x69c>
    c83c:	00 d0       	rcall	.+0      	; 0xc83e <arb_console+0x2c8>
    c83e:	0f 92       	push	r0
    c840:	ec eb       	ldi	r30, 0xBC	; 188
    c842:	f0 e0       	ldi	r31, 0x00	; 0
    c844:	ec 0f       	add	r30, r28
    c846:	fd 1f       	adc	r31, r29
    c848:	ad b7       	in	r26, 0x3d	; 61
    c84a:	be b7       	in	r27, 0x3e	; 62
    c84c:	11 96       	adiw	r26, 0x01	; 1
    c84e:	ed 93       	st	X+, r30
    c850:	fc 93       	st	X, r31
    c852:	12 97       	sbiw	r26, 0x02	; 2
    c854:	8d ef       	ldi	r24, 0xFD	; 253
    c856:	97 e0       	ldi	r25, 0x07	; 7
    c858:	13 96       	adiw	r26, 0x03	; 3
    c85a:	8d 93       	st	X+, r24
    c85c:	9c 93       	st	X, r25
    c85e:	14 97       	sbiw	r26, 0x04	; 4
    c860:	0e 94 a5 b1 	call	0x1634a	; 0x1634a <sprintf_P>
    c864:	ac 01       	movw	r20, r24
    c866:	80 91 d8 24 	lds	r24, 0x24D8
    c86a:	90 91 d9 24 	lds	r25, 0x24D9
    c86e:	0f 90       	pop	r0
    c870:	0f 90       	pop	r0
    c872:	0f 90       	pop	r0
    c874:	0f 90       	pop	r0
    c876:	be 01       	movw	r22, r28
    c878:	64 54       	subi	r22, 0x44	; 68
    c87a:	7f 4f       	sbci	r23, 0xFF	; 255
    c87c:	0e 94 ef 6c 	call	0xd9de	; 0xd9de <arb_write>
    c880:	00 d0       	rcall	.+0      	; 0xc882 <arb_console+0x30c>
    c882:	0f 92       	push	r0
    c884:	ec eb       	ldi	r30, 0xBC	; 188
    c886:	f0 e0       	ldi	r31, 0x00	; 0
    c888:	ec 0f       	add	r30, r28
    c88a:	fd 1f       	adc	r31, r29
    c88c:	ad b7       	in	r26, 0x3d	; 61
    c88e:	be b7       	in	r27, 0x3e	; 62
    c890:	11 96       	adiw	r26, 0x01	; 1
    c892:	ed 93       	st	X+, r30
    c894:	fc 93       	st	X, r31
    c896:	12 97       	sbiw	r26, 0x02	; 2
    c898:	80 eb       	ldi	r24, 0xB0	; 176
    c89a:	97 e0       	ldi	r25, 0x07	; 7
    c89c:	13 96       	adiw	r26, 0x03	; 3
    c89e:	8d 93       	st	X+, r24
    c8a0:	9c 93       	st	X, r25
    c8a2:	14 97       	sbiw	r26, 0x04	; 4
    c8a4:	0e 94 a5 b1 	call	0x1634a	; 0x1634a <sprintf_P>
    c8a8:	ac 01       	movw	r20, r24
    c8aa:	80 91 d8 24 	lds	r24, 0x24D8
    c8ae:	90 91 d9 24 	lds	r25, 0x24D9
    c8b2:	0f 90       	pop	r0
    c8b4:	0f 90       	pop	r0
    c8b6:	0f 90       	pop	r0
    c8b8:	0f 90       	pop	r0
    c8ba:	be 01       	movw	r22, r28
    c8bc:	64 54       	subi	r22, 0x44	; 68
    c8be:	7f 4f       	sbci	r23, 0xFF	; 255
    c8c0:	0e 94 ef 6c 	call	0xd9de	; 0xd9de <arb_write>
    c8c4:	00 d0       	rcall	.+0      	; 0xc8c6 <arb_console+0x350>
    c8c6:	0f 92       	push	r0
    c8c8:	ec eb       	ldi	r30, 0xBC	; 188
    c8ca:	f0 e0       	ldi	r31, 0x00	; 0
    c8cc:	ec 0f       	add	r30, r28
    c8ce:	fd 1f       	adc	r31, r29
    c8d0:	ad b7       	in	r26, 0x3d	; 61
    c8d2:	be b7       	in	r27, 0x3e	; 62
    c8d4:	11 96       	adiw	r26, 0x01	; 1
    c8d6:	ed 93       	st	X+, r30
    c8d8:	fc 93       	st	X, r31
    c8da:	12 97       	sbiw	r26, 0x02	; 2
    c8dc:	83 e6       	ldi	r24, 0x63	; 99
    c8de:	97 e0       	ldi	r25, 0x07	; 7
    c8e0:	13 96       	adiw	r26, 0x03	; 3
    c8e2:	8d 93       	st	X+, r24
    c8e4:	9c 93       	st	X, r25
    c8e6:	14 97       	sbiw	r26, 0x04	; 4
    c8e8:	0e 94 a5 b1 	call	0x1634a	; 0x1634a <sprintf_P>
    c8ec:	ac 01       	movw	r20, r24
    c8ee:	80 91 d8 24 	lds	r24, 0x24D8
    c8f2:	90 91 d9 24 	lds	r25, 0x24D9
    c8f6:	0f 90       	pop	r0
    c8f8:	0f 90       	pop	r0
    c8fa:	0f 90       	pop	r0
    c8fc:	0f 90       	pop	r0
    c8fe:	be 01       	movw	r22, r28
    c900:	64 54       	subi	r22, 0x44	; 68
    c902:	7f 4f       	sbci	r23, 0xFF	; 255
    c904:	0e 94 ef 6c 	call	0xd9de	; 0xd9de <arb_write>
    c908:	00 d0       	rcall	.+0      	; 0xc90a <arb_console+0x394>
    c90a:	0f 92       	push	r0
    c90c:	ec eb       	ldi	r30, 0xBC	; 188
    c90e:	f0 e0       	ldi	r31, 0x00	; 0
    c910:	ec 0f       	add	r30, r28
    c912:	fd 1f       	adc	r31, r29
    c914:	ad b7       	in	r26, 0x3d	; 61
    c916:	be b7       	in	r27, 0x3e	; 62
    c918:	11 96       	adiw	r26, 0x01	; 1
    c91a:	ed 93       	st	X+, r30
    c91c:	fc 93       	st	X, r31
    c91e:	12 97       	sbiw	r26, 0x02	; 2
    c920:	86 e1       	ldi	r24, 0x16	; 22
    c922:	97 e0       	ldi	r25, 0x07	; 7
    c924:	13 96       	adiw	r26, 0x03	; 3
    c926:	8d 93       	st	X+, r24
    c928:	9c 93       	st	X, r25
    c92a:	14 97       	sbiw	r26, 0x04	; 4
    c92c:	0e 94 a5 b1 	call	0x1634a	; 0x1634a <sprintf_P>
    c930:	ac 01       	movw	r20, r24
    c932:	80 91 d8 24 	lds	r24, 0x24D8
    c936:	90 91 d9 24 	lds	r25, 0x24D9
    c93a:	0f 90       	pop	r0
    c93c:	0f 90       	pop	r0
    c93e:	0f 90       	pop	r0
    c940:	0f 90       	pop	r0
    c942:	be 01       	movw	r22, r28
    c944:	64 54       	subi	r22, 0x44	; 68
    c946:	7f 4f       	sbci	r23, 0xFF	; 255
    c948:	0e 94 ef 6c 	call	0xd9de	; 0xd9de <arb_write>
    c94c:	00 d0       	rcall	.+0      	; 0xc94e <arb_console+0x3d8>
    c94e:	0f 92       	push	r0
    c950:	ec eb       	ldi	r30, 0xBC	; 188
    c952:	f0 e0       	ldi	r31, 0x00	; 0
    c954:	ec 0f       	add	r30, r28
    c956:	fd 1f       	adc	r31, r29
    c958:	ad b7       	in	r26, 0x3d	; 61
    c95a:	be b7       	in	r27, 0x3e	; 62
    c95c:	11 96       	adiw	r26, 0x01	; 1
    c95e:	ed 93       	st	X+, r30
    c960:	fc 93       	st	X, r31
    c962:	12 97       	sbiw	r26, 0x02	; 2
    c964:	89 ec       	ldi	r24, 0xC9	; 201
    c966:	96 e0       	ldi	r25, 0x06	; 6
    c968:	13 96       	adiw	r26, 0x03	; 3
    c96a:	8d 93       	st	X+, r24
    c96c:	9c 93       	st	X, r25
    c96e:	14 97       	sbiw	r26, 0x04	; 4
    c970:	0e 94 a5 b1 	call	0x1634a	; 0x1634a <sprintf_P>
    c974:	ac 01       	movw	r20, r24
    c976:	80 91 d8 24 	lds	r24, 0x24D8
    c97a:	90 91 d9 24 	lds	r25, 0x24D9
    c97e:	0f 90       	pop	r0
    c980:	0f 90       	pop	r0
    c982:	0f 90       	pop	r0
    c984:	0f 90       	pop	r0
    c986:	be 01       	movw	r22, r28
    c988:	64 54       	subi	r22, 0x44	; 68
    c98a:	7f 4f       	sbci	r23, 0xFF	; 255
    c98c:	0e 94 ef 6c 	call	0xd9de	; 0xd9de <arb_write>
    c990:	00 d0       	rcall	.+0      	; 0xc992 <arb_console+0x41c>
    c992:	0f 92       	push	r0
    c994:	ec eb       	ldi	r30, 0xBC	; 188
    c996:	f0 e0       	ldi	r31, 0x00	; 0
    c998:	ec 0f       	add	r30, r28
    c99a:	fd 1f       	adc	r31, r29
    c99c:	ad b7       	in	r26, 0x3d	; 61
    c99e:	be b7       	in	r27, 0x3e	; 62
    c9a0:	11 96       	adiw	r26, 0x01	; 1
    c9a2:	ed 93       	st	X+, r30
    c9a4:	fc 93       	st	X, r31
    c9a6:	12 97       	sbiw	r26, 0x02	; 2
    c9a8:	8c e7       	ldi	r24, 0x7C	; 124
    c9aa:	96 e0       	ldi	r25, 0x06	; 6
    c9ac:	13 96       	adiw	r26, 0x03	; 3
    c9ae:	8d 93       	st	X+, r24
    c9b0:	9c 93       	st	X, r25
    c9b2:	14 97       	sbiw	r26, 0x04	; 4
    c9b4:	0e 94 a5 b1 	call	0x1634a	; 0x1634a <sprintf_P>
    c9b8:	ac 01       	movw	r20, r24
    c9ba:	80 91 d8 24 	lds	r24, 0x24D8
    c9be:	90 91 d9 24 	lds	r25, 0x24D9
    c9c2:	0f 90       	pop	r0
    c9c4:	0f 90       	pop	r0
    c9c6:	0f 90       	pop	r0
    c9c8:	0f 90       	pop	r0
    c9ca:	be 01       	movw	r22, r28
    c9cc:	64 54       	subi	r22, 0x44	; 68
    c9ce:	7f 4f       	sbci	r23, 0xFF	; 255
    c9d0:	0e 94 ef 6c 	call	0xd9de	; 0xd9de <arb_write>
    c9d4:	00 d0       	rcall	.+0      	; 0xc9d6 <arb_console+0x460>
    c9d6:	0f 92       	push	r0
    c9d8:	ec eb       	ldi	r30, 0xBC	; 188
    c9da:	f0 e0       	ldi	r31, 0x00	; 0
    c9dc:	ec 0f       	add	r30, r28
    c9de:	fd 1f       	adc	r31, r29
    c9e0:	ad b7       	in	r26, 0x3d	; 61
    c9e2:	be b7       	in	r27, 0x3e	; 62
    c9e4:	11 96       	adiw	r26, 0x01	; 1
    c9e6:	ed 93       	st	X+, r30
    c9e8:	fc 93       	st	X, r31
    c9ea:	12 97       	sbiw	r26, 0x02	; 2
    c9ec:	8f e2       	ldi	r24, 0x2F	; 47
    c9ee:	96 e0       	ldi	r25, 0x06	; 6
    c9f0:	13 96       	adiw	r26, 0x03	; 3
    c9f2:	8d 93       	st	X+, r24
    c9f4:	9c 93       	st	X, r25
    c9f6:	14 97       	sbiw	r26, 0x04	; 4
    c9f8:	0e 94 a5 b1 	call	0x1634a	; 0x1634a <sprintf_P>
    c9fc:	ac 01       	movw	r20, r24
    c9fe:	80 91 d8 24 	lds	r24, 0x24D8
    ca02:	90 91 d9 24 	lds	r25, 0x24D9
    ca06:	0f 90       	pop	r0
    ca08:	0f 90       	pop	r0
    ca0a:	0f 90       	pop	r0
    ca0c:	0f 90       	pop	r0
    ca0e:	be 01       	movw	r22, r28
    ca10:	64 54       	subi	r22, 0x44	; 68
    ca12:	7f 4f       	sbci	r23, 0xFF	; 255
    ca14:	0e 94 ef 6c 	call	0xd9de	; 0xd9de <arb_write>
    ca18:	00 d0       	rcall	.+0      	; 0xca1a <arb_console+0x4a4>
    ca1a:	0f 92       	push	r0
    ca1c:	ec eb       	ldi	r30, 0xBC	; 188
    ca1e:	f0 e0       	ldi	r31, 0x00	; 0
    ca20:	ec 0f       	add	r30, r28
    ca22:	fd 1f       	adc	r31, r29
    ca24:	ad b7       	in	r26, 0x3d	; 61
    ca26:	be b7       	in	r27, 0x3e	; 62
    ca28:	11 96       	adiw	r26, 0x01	; 1
    ca2a:	ed 93       	st	X+, r30
    ca2c:	fc 93       	st	X, r31
    ca2e:	12 97       	sbiw	r26, 0x02	; 2
    ca30:	82 ee       	ldi	r24, 0xE2	; 226
    ca32:	95 e0       	ldi	r25, 0x05	; 5
    ca34:	13 96       	adiw	r26, 0x03	; 3
    ca36:	8d 93       	st	X+, r24
    ca38:	9c 93       	st	X, r25
    ca3a:	14 97       	sbiw	r26, 0x04	; 4
    ca3c:	0e 94 a5 b1 	call	0x1634a	; 0x1634a <sprintf_P>
    ca40:	ac 01       	movw	r20, r24
    ca42:	80 91 d8 24 	lds	r24, 0x24D8
    ca46:	90 91 d9 24 	lds	r25, 0x24D9
    ca4a:	0f 90       	pop	r0
    ca4c:	0f 90       	pop	r0
    ca4e:	0f 90       	pop	r0
    ca50:	0f 90       	pop	r0
    ca52:	be 01       	movw	r22, r28
    ca54:	64 54       	subi	r22, 0x44	; 68
    ca56:	7f 4f       	sbci	r23, 0xFF	; 255
    ca58:	0e 94 ef 6c 	call	0xd9de	; 0xd9de <arb_write>
    ca5c:	00 d0       	rcall	.+0      	; 0xca5e <arb_console+0x4e8>
    ca5e:	0f 92       	push	r0
    ca60:	ec eb       	ldi	r30, 0xBC	; 188
    ca62:	f0 e0       	ldi	r31, 0x00	; 0
    ca64:	ec 0f       	add	r30, r28
    ca66:	fd 1f       	adc	r31, r29
    ca68:	ad b7       	in	r26, 0x3d	; 61
    ca6a:	be b7       	in	r27, 0x3e	; 62
    ca6c:	11 96       	adiw	r26, 0x01	; 1
    ca6e:	ed 93       	st	X+, r30
    ca70:	fc 93       	st	X, r31
    ca72:	12 97       	sbiw	r26, 0x02	; 2
    ca74:	85 e9       	ldi	r24, 0x95	; 149
    ca76:	95 e0       	ldi	r25, 0x05	; 5
    ca78:	13 96       	adiw	r26, 0x03	; 3
    ca7a:	8d 93       	st	X+, r24
    ca7c:	9c 93       	st	X, r25
    ca7e:	14 97       	sbiw	r26, 0x04	; 4
    ca80:	0e 94 a5 b1 	call	0x1634a	; 0x1634a <sprintf_P>
    ca84:	ac 01       	movw	r20, r24
    ca86:	80 91 d8 24 	lds	r24, 0x24D8
    ca8a:	90 91 d9 24 	lds	r25, 0x24D9
    ca8e:	0f 90       	pop	r0
    ca90:	0f 90       	pop	r0
    ca92:	0f 90       	pop	r0
    ca94:	0f 90       	pop	r0
    ca96:	be 01       	movw	r22, r28
    ca98:	64 54       	subi	r22, 0x44	; 68
    ca9a:	7f 4f       	sbci	r23, 0xFF	; 255
    ca9c:	0e 94 ef 6c 	call	0xd9de	; 0xd9de <arb_write>
    caa0:	00 d0       	rcall	.+0      	; 0xcaa2 <arb_console+0x52c>
    caa2:	0f 92       	push	r0
    caa4:	ec eb       	ldi	r30, 0xBC	; 188
    caa6:	f0 e0       	ldi	r31, 0x00	; 0
    caa8:	ec 0f       	add	r30, r28
    caaa:	fd 1f       	adc	r31, r29
    caac:	ad b7       	in	r26, 0x3d	; 61
    caae:	be b7       	in	r27, 0x3e	; 62
    cab0:	11 96       	adiw	r26, 0x01	; 1
    cab2:	ed 93       	st	X+, r30
    cab4:	fc 93       	st	X, r31
    cab6:	12 97       	sbiw	r26, 0x02	; 2
    cab8:	88 e4       	ldi	r24, 0x48	; 72
    caba:	95 e0       	ldi	r25, 0x05	; 5
    cabc:	13 96       	adiw	r26, 0x03	; 3
    cabe:	8d 93       	st	X+, r24
    cac0:	9c 93       	st	X, r25
    cac2:	14 97       	sbiw	r26, 0x04	; 4
    cac4:	0e 94 a5 b1 	call	0x1634a	; 0x1634a <sprintf_P>
    cac8:	ac 01       	movw	r20, r24
    caca:	80 91 d8 24 	lds	r24, 0x24D8
    cace:	90 91 d9 24 	lds	r25, 0x24D9
    cad2:	0f 90       	pop	r0
    cad4:	0f 90       	pop	r0
    cad6:	0f 90       	pop	r0
    cad8:	0f 90       	pop	r0
    cada:	be 01       	movw	r22, r28
    cadc:	64 54       	subi	r22, 0x44	; 68
    cade:	7f 4f       	sbci	r23, 0xFF	; 255
    cae0:	0e 94 ef 6c 	call	0xd9de	; 0xd9de <arb_write>
    cae4:	00 d0       	rcall	.+0      	; 0xcae6 <arb_console+0x570>
    cae6:	0f 92       	push	r0
    cae8:	ec eb       	ldi	r30, 0xBC	; 188
    caea:	f0 e0       	ldi	r31, 0x00	; 0
    caec:	ec 0f       	add	r30, r28
    caee:	fd 1f       	adc	r31, r29
    caf0:	ad b7       	in	r26, 0x3d	; 61
    caf2:	be b7       	in	r27, 0x3e	; 62
    caf4:	11 96       	adiw	r26, 0x01	; 1
    caf6:	ed 93       	st	X+, r30
    caf8:	fc 93       	st	X, r31
    cafa:	12 97       	sbiw	r26, 0x02	; 2
    cafc:	8b ef       	ldi	r24, 0xFB	; 251
    cafe:	94 e0       	ldi	r25, 0x04	; 4
    cb00:	13 96       	adiw	r26, 0x03	; 3
    cb02:	8d 93       	st	X+, r24
    cb04:	9c 93       	st	X, r25
    cb06:	14 97       	sbiw	r26, 0x04	; 4
    cb08:	0e 94 a5 b1 	call	0x1634a	; 0x1634a <sprintf_P>
    cb0c:	ac 01       	movw	r20, r24
    cb0e:	80 91 d8 24 	lds	r24, 0x24D8
    cb12:	90 91 d9 24 	lds	r25, 0x24D9
    cb16:	0f 90       	pop	r0
    cb18:	0f 90       	pop	r0
    cb1a:	0f 90       	pop	r0
    cb1c:	0f 90       	pop	r0
    cb1e:	be 01       	movw	r22, r28
    cb20:	64 54       	subi	r22, 0x44	; 68
    cb22:	7f 4f       	sbci	r23, 0xFF	; 255
    cb24:	0e 94 ef 6c 	call	0xd9de	; 0xd9de <arb_write>
    cb28:	00 d0       	rcall	.+0      	; 0xcb2a <arb_console+0x5b4>
    cb2a:	0f 92       	push	r0
    cb2c:	ec eb       	ldi	r30, 0xBC	; 188
    cb2e:	f0 e0       	ldi	r31, 0x00	; 0
    cb30:	ec 0f       	add	r30, r28
    cb32:	fd 1f       	adc	r31, r29
    cb34:	ad b7       	in	r26, 0x3d	; 61
    cb36:	be b7       	in	r27, 0x3e	; 62
    cb38:	11 96       	adiw	r26, 0x01	; 1
    cb3a:	ed 93       	st	X+, r30
    cb3c:	fc 93       	st	X, r31
    cb3e:	12 97       	sbiw	r26, 0x02	; 2
    cb40:	8e ea       	ldi	r24, 0xAE	; 174
    cb42:	94 e0       	ldi	r25, 0x04	; 4
    cb44:	13 96       	adiw	r26, 0x03	; 3
    cb46:	8d 93       	st	X+, r24
    cb48:	9c 93       	st	X, r25
    cb4a:	14 97       	sbiw	r26, 0x04	; 4
    cb4c:	0e 94 a5 b1 	call	0x1634a	; 0x1634a <sprintf_P>
    cb50:	ac 01       	movw	r20, r24
    cb52:	80 91 d8 24 	lds	r24, 0x24D8
    cb56:	90 91 d9 24 	lds	r25, 0x24D9
    cb5a:	0f 90       	pop	r0
    cb5c:	0f 90       	pop	r0
    cb5e:	0f 90       	pop	r0
    cb60:	0f 90       	pop	r0
    cb62:	be 01       	movw	r22, r28
    cb64:	64 54       	subi	r22, 0x44	; 68
    cb66:	7f 4f       	sbci	r23, 0xFF	; 255
    cb68:	0e 94 ef 6c 	call	0xd9de	; 0xd9de <arb_write>
    cb6c:	00 d0       	rcall	.+0      	; 0xcb6e <arb_console+0x5f8>
    cb6e:	0f 92       	push	r0
    cb70:	ec eb       	ldi	r30, 0xBC	; 188
    cb72:	f0 e0       	ldi	r31, 0x00	; 0
    cb74:	ec 0f       	add	r30, r28
    cb76:	fd 1f       	adc	r31, r29
    cb78:	ad b7       	in	r26, 0x3d	; 61
    cb7a:	be b7       	in	r27, 0x3e	; 62
    cb7c:	11 96       	adiw	r26, 0x01	; 1
    cb7e:	ed 93       	st	X+, r30
    cb80:	fc 93       	st	X, r31
    cb82:	12 97       	sbiw	r26, 0x02	; 2
    cb84:	81 e6       	ldi	r24, 0x61	; 97
    cb86:	94 e0       	ldi	r25, 0x04	; 4
    cb88:	13 96       	adiw	r26, 0x03	; 3
    cb8a:	8d 93       	st	X+, r24
    cb8c:	9c 93       	st	X, r25
    cb8e:	14 97       	sbiw	r26, 0x04	; 4
    cb90:	0e 94 a5 b1 	call	0x1634a	; 0x1634a <sprintf_P>
    cb94:	ac 01       	movw	r20, r24
    cb96:	80 91 d8 24 	lds	r24, 0x24D8
    cb9a:	90 91 d9 24 	lds	r25, 0x24D9
    cb9e:	0f 90       	pop	r0
    cba0:	0f 90       	pop	r0
    cba2:	0f 90       	pop	r0
    cba4:	0f 90       	pop	r0
    cba6:	be 01       	movw	r22, r28
    cba8:	64 54       	subi	r22, 0x44	; 68
    cbaa:	7f 4f       	sbci	r23, 0xFF	; 255
    cbac:	0e 94 ef 6c 	call	0xd9de	; 0xd9de <arb_write>
    cbb0:	00 d0       	rcall	.+0      	; 0xcbb2 <arb_console+0x63c>
    cbb2:	0f 92       	push	r0
    cbb4:	ec eb       	ldi	r30, 0xBC	; 188
    cbb6:	f0 e0       	ldi	r31, 0x00	; 0
    cbb8:	ec 0f       	add	r30, r28
    cbba:	fd 1f       	adc	r31, r29
    cbbc:	ad b7       	in	r26, 0x3d	; 61
    cbbe:	be b7       	in	r27, 0x3e	; 62
    cbc0:	11 96       	adiw	r26, 0x01	; 1
    cbc2:	ed 93       	st	X+, r30
    cbc4:	fc 93       	st	X, r31
    cbc6:	12 97       	sbiw	r26, 0x02	; 2
    cbc8:	84 e1       	ldi	r24, 0x14	; 20
    cbca:	94 e0       	ldi	r25, 0x04	; 4
    cbcc:	13 96       	adiw	r26, 0x03	; 3
    cbce:	8d 93       	st	X+, r24
    cbd0:	9c 93       	st	X, r25
    cbd2:	14 97       	sbiw	r26, 0x04	; 4
    cbd4:	0e 94 a5 b1 	call	0x1634a	; 0x1634a <sprintf_P>
    cbd8:	ac 01       	movw	r20, r24
    cbda:	80 91 d8 24 	lds	r24, 0x24D8
    cbde:	90 91 d9 24 	lds	r25, 0x24D9
    cbe2:	0f 90       	pop	r0
    cbe4:	0f 90       	pop	r0
    cbe6:	0f 90       	pop	r0
    cbe8:	0f 90       	pop	r0
    cbea:	be 01       	movw	r22, r28
    cbec:	64 54       	subi	r22, 0x44	; 68
    cbee:	7f 4f       	sbci	r23, 0xFF	; 255
    cbf0:	0e 94 ef 6c 	call	0xd9de	; 0xd9de <arb_write>
    cbf4:	00 d0       	rcall	.+0      	; 0xcbf6 <arb_console+0x680>
    cbf6:	0f 92       	push	r0
    cbf8:	ec eb       	ldi	r30, 0xBC	; 188
    cbfa:	f0 e0       	ldi	r31, 0x00	; 0
    cbfc:	ec 0f       	add	r30, r28
    cbfe:	fd 1f       	adc	r31, r29
    cc00:	ad b7       	in	r26, 0x3d	; 61
    cc02:	be b7       	in	r27, 0x3e	; 62
    cc04:	11 96       	adiw	r26, 0x01	; 1
    cc06:	ed 93       	st	X+, r30
    cc08:	fc 93       	st	X, r31
    cc0a:	12 97       	sbiw	r26, 0x02	; 2
    cc0c:	87 ec       	ldi	r24, 0xC7	; 199
    cc0e:	93 e0       	ldi	r25, 0x03	; 3
    cc10:	d6 cd       	rjmp	.-1108   	; 0xc7be <arb_console+0x248>
    cc12:	ce 01       	movw	r24, r28
    cc14:	85 5b       	subi	r24, 0xB5	; 181
    cc16:	9f 4f       	sbci	r25, 0xFF	; 255
    cc18:	6a e8       	ldi	r22, 0x8A	; 138
    cc1a:	73 e0       	ldi	r23, 0x03	; 3
    cc1c:	0e 94 97 b0 	call	0x1612e	; 0x1612e <strcasecmp_P>
    cc20:	89 2b       	or	r24, r25
    cc22:	09 f0       	breq	.+2      	; 0xcc26 <arb_console+0x6b0>
    cc24:	6e c0       	rjmp	.+220    	; 0xcd02 <arb_console+0x78c>
    cc26:	c5 54       	subi	r28, 0x45	; 69
    cc28:	df 4f       	sbci	r29, 0xFF	; 255
    cc2a:	88 81       	ld	r24, Y
    cc2c:	cb 5b       	subi	r28, 0xBB	; 187
    cc2e:	d0 40       	sbci	r29, 0x00	; 0
    cc30:	82 30       	cpi	r24, 0x02	; 2
    cc32:	09 f0       	breq	.+2      	; 0xcc36 <arb_console+0x6c0>
    cc34:	66 c0       	rjmp	.+204    	; 0xcd02 <arb_console+0x78c>
    cc36:	6c 96       	adiw	r28, 0x1c	; 28
    cc38:	8f ad       	ldd	r24, Y+63	; 0x3f
    cc3a:	6c 97       	sbiw	r28, 0x1c	; 28
    cc3c:	80 33       	cpi	r24, 0x30	; 48
    cc3e:	b9 f0       	breq	.+46     	; 0xcc6e <arb_console+0x6f8>
    cc40:	81 33       	cpi	r24, 0x31	; 49
    cc42:	11 f4       	brne	.+4      	; 0xcc48 <arb_console+0x6d2>
    cc44:	12 e0       	ldi	r17, 0x02	; 2
    cc46:	14 c0       	rjmp	.+40     	; 0xcc70 <arb_console+0x6fa>
    cc48:	82 33       	cpi	r24, 0x32	; 50
    cc4a:	11 f4       	brne	.+4      	; 0xcc50 <arb_console+0x6da>
    cc4c:	14 e0       	ldi	r17, 0x04	; 4
    cc4e:	10 c0       	rjmp	.+32     	; 0xcc70 <arb_console+0x6fa>
    cc50:	00 d0       	rcall	.+0      	; 0xcc52 <arb_console+0x6dc>
    cc52:	0f 92       	push	r0
    cc54:	ec eb       	ldi	r30, 0xBC	; 188
    cc56:	f0 e0       	ldi	r31, 0x00	; 0
    cc58:	ec 0f       	add	r30, r28
    cc5a:	fd 1f       	adc	r31, r29
    cc5c:	ad b7       	in	r26, 0x3d	; 61
    cc5e:	be b7       	in	r27, 0x3e	; 62
    cc60:	11 96       	adiw	r26, 0x01	; 1
    cc62:	ed 93       	st	X+, r30
    cc64:	fc 93       	st	X, r31
    cc66:	12 97       	sbiw	r26, 0x02	; 2
    cc68:	82 ea       	ldi	r24, 0xA2	; 162
    cc6a:	98 e0       	ldi	r25, 0x08	; 8
    cc6c:	a8 cd       	rjmp	.-1200   	; 0xc7be <arb_console+0x248>
    cc6e:	11 e0       	ldi	r17, 0x01	; 1
    cc70:	00 d0       	rcall	.+0      	; 0xcc72 <arb_console+0x6fc>
    cc72:	0f 92       	push	r0
    cc74:	ec eb       	ldi	r30, 0xBC	; 188
    cc76:	f0 e0       	ldi	r31, 0x00	; 0
    cc78:	ec 0f       	add	r30, r28
    cc7a:	fd 1f       	adc	r31, r29
    cc7c:	ad b7       	in	r26, 0x3d	; 61
    cc7e:	be b7       	in	r27, 0x3e	; 62
    cc80:	11 96       	adiw	r26, 0x01	; 1
    cc82:	ed 93       	st	X+, r30
    cc84:	fc 93       	st	X, r31
    cc86:	12 97       	sbiw	r26, 0x02	; 2
    cc88:	8a e4       	ldi	r24, 0x4A	; 74
    cc8a:	98 e0       	ldi	r25, 0x08	; 8
    cc8c:	13 96       	adiw	r26, 0x03	; 3
    cc8e:	8d 93       	st	X+, r24
    cc90:	9c 93       	st	X, r25
    cc92:	14 97       	sbiw	r26, 0x04	; 4
    cc94:	0e 94 a5 b1 	call	0x1634a	; 0x1634a <sprintf_P>
    cc98:	ac 01       	movw	r20, r24
    cc9a:	80 91 d8 24 	lds	r24, 0x24D8
    cc9e:	90 91 d9 24 	lds	r25, 0x24D9
    cca2:	0f 90       	pop	r0
    cca4:	0f 90       	pop	r0
    cca6:	0f 90       	pop	r0
    cca8:	0f 90       	pop	r0
    ccaa:	be 01       	movw	r22, r28
    ccac:	64 54       	subi	r22, 0x44	; 68
    ccae:	7f 4f       	sbci	r23, 0xFF	; 255
    ccb0:	0e 94 ef 6c 	call	0xd9de	; 0xd9de <arb_write>
    ccb4:	80 91 d8 24 	lds	r24, 0x24D8
    ccb8:	90 91 d9 24 	lds	r25, 0x24D9
    ccbc:	63 e0       	ldi	r22, 0x03	; 3
    ccbe:	70 e0       	ldi	r23, 0x00	; 0
    ccc0:	c4 51       	subi	r28, 0x14	; 20
    ccc2:	de 4f       	sbci	r29, 0xFE	; 254
    ccc4:	28 81       	ld	r18, Y
    ccc6:	39 81       	ldd	r19, Y+1	; 0x01
    ccc8:	4a 81       	ldd	r20, Y+2	; 0x02
    ccca:	5b 81       	ldd	r21, Y+3	; 0x03
    cccc:	cc 5e       	subi	r28, 0xEC	; 236
    ccce:	d1 40       	sbci	r29, 0x01	; 1
    ccd0:	0e 94 4a 6d 	call	0xda94	; 0xda94 <arb_ioctl>
    ccd4:	81 2f       	mov	r24, r17
    ccd6:	0e 94 f8 6f 	call	0xdff0	; 0xdff0 <arb_setPrintfDbgLevel>
    ccda:	80 91 d8 24 	lds	r24, 0x24D8
    ccde:	90 91 d9 24 	lds	r25, 0x24D9
    cce2:	63 e0       	ldi	r22, 0x03	; 3
    cce4:	70 e0       	ldi	r23, 0x00	; 0
    cce6:	c4 51       	subi	r28, 0x14	; 20
    cce8:	de 4f       	sbci	r29, 0xFE	; 254
    ccea:	28 81       	ld	r18, Y
    ccec:	39 81       	ldd	r19, Y+1	; 0x01
    ccee:	4a 81       	ldd	r20, Y+2	; 0x02
    ccf0:	5b 81       	ldd	r21, Y+3	; 0x03
    ccf2:	cc 5e       	subi	r28, 0xEC	; 236
    ccf4:	d1 40       	sbci	r29, 0x01	; 1
    ccf6:	0e 94 4a 6d 	call	0xda94	; 0xda94 <arb_ioctl>
    ccfa:	80 e2       	ldi	r24, 0x20	; 32
    ccfc:	0e 94 f8 6f 	call	0xdff0	; 0xdff0 <arb_setPrintfDbgLevel>
    cd00:	22 c6       	rjmp	.+3140   	; 0xd946 <arb_console+0x13d0>
    cd02:	ce 01       	movw	r24, r28
    cd04:	85 5b       	subi	r24, 0xB5	; 181
    cd06:	9f 4f       	sbci	r25, 0xFF	; 255
    cd08:	66 e8       	ldi	r22, 0x86	; 134
    cd0a:	73 e0       	ldi	r23, 0x03	; 3
    cd0c:	0e 94 97 b0 	call	0x1612e	; 0x1612e <strcasecmp_P>
    cd10:	89 2b       	or	r24, r25
    cd12:	09 f0       	breq	.+2      	; 0xcd16 <arb_console+0x7a0>
    cd14:	d8 c0       	rjmp	.+432    	; 0xcec6 <arb_console+0x950>
    cd16:	c5 54       	subi	r28, 0x45	; 69
    cd18:	df 4f       	sbci	r29, 0xFF	; 255
    cd1a:	88 81       	ld	r24, Y
    cd1c:	cb 5b       	subi	r28, 0xBB	; 187
    cd1e:	d0 40       	sbci	r29, 0x00	; 0
    cd20:	81 30       	cpi	r24, 0x01	; 1
    cd22:	09 f0       	breq	.+2      	; 0xcd26 <arb_console+0x7b0>
    cd24:	d0 c0       	rjmp	.+416    	; 0xcec6 <arb_console+0x950>
    cd26:	0e 94 b1 6c 	call	0xd962	; 0xd962 <arb_getDeviceList>
    cd2a:	89 83       	std	Y+1, r24	; 0x01
    cd2c:	9a 83       	std	Y+2, r25	; 0x02
    cd2e:	00 d0       	rcall	.+0      	; 0xcd30 <arb_console+0x7ba>
    cd30:	0f 92       	push	r0
    cd32:	ec eb       	ldi	r30, 0xBC	; 188
    cd34:	f0 e0       	ldi	r31, 0x00	; 0
    cd36:	ec 0f       	add	r30, r28
    cd38:	fd 1f       	adc	r31, r29
    cd3a:	ad b7       	in	r26, 0x3d	; 61
    cd3c:	be b7       	in	r27, 0x3e	; 62
    cd3e:	11 96       	adiw	r26, 0x01	; 1
    cd40:	ed 93       	st	X+, r30
    cd42:	fc 93       	st	X, r31
    cd44:	12 97       	sbiw	r26, 0x02	; 2
    cd46:	81 eb       	ldi	r24, 0xB1	; 177
    cd48:	99 e0       	ldi	r25, 0x09	; 9
    cd4a:	13 96       	adiw	r26, 0x03	; 3
    cd4c:	8d 93       	st	X+, r24
    cd4e:	9c 93       	st	X, r25
    cd50:	14 97       	sbiw	r26, 0x04	; 4
    cd52:	0e 94 a5 b1 	call	0x1634a	; 0x1634a <sprintf_P>
    cd56:	ac 01       	movw	r20, r24
    cd58:	80 91 d8 24 	lds	r24, 0x24D8
    cd5c:	90 91 d9 24 	lds	r25, 0x24D9
    cd60:	0f 90       	pop	r0
    cd62:	0f 90       	pop	r0
    cd64:	0f 90       	pop	r0
    cd66:	0f 90       	pop	r0
    cd68:	be 01       	movw	r22, r28
    cd6a:	64 54       	subi	r22, 0x44	; 68
    cd6c:	7f 4f       	sbci	r23, 0xFF	; 255
    cd6e:	0e 94 ef 6c 	call	0xd9de	; 0xd9de <arb_write>
    cd72:	00 d0       	rcall	.+0      	; 0xcd74 <arb_console+0x7fe>
    cd74:	0f 92       	push	r0
    cd76:	ec eb       	ldi	r30, 0xBC	; 188
    cd78:	f0 e0       	ldi	r31, 0x00	; 0
    cd7a:	ec 0f       	add	r30, r28
    cd7c:	fd 1f       	adc	r31, r29
    cd7e:	ad b7       	in	r26, 0x3d	; 61
    cd80:	be b7       	in	r27, 0x3e	; 62
    cd82:	11 96       	adiw	r26, 0x01	; 1
    cd84:	ed 93       	st	X+, r30
    cd86:	fc 93       	st	X, r31
    cd88:	12 97       	sbiw	r26, 0x02	; 2
    cd8a:	8f e6       	ldi	r24, 0x6F	; 111
    cd8c:	99 e0       	ldi	r25, 0x09	; 9
    cd8e:	13 96       	adiw	r26, 0x03	; 3
    cd90:	8d 93       	st	X+, r24
    cd92:	9c 93       	st	X, r25
    cd94:	14 97       	sbiw	r26, 0x04	; 4
    cd96:	0e 94 a5 b1 	call	0x1634a	; 0x1634a <sprintf_P>
    cd9a:	ac 01       	movw	r20, r24
    cd9c:	80 91 d8 24 	lds	r24, 0x24D8
    cda0:	90 91 d9 24 	lds	r25, 0x24D9
    cda4:	0f 90       	pop	r0
    cda6:	0f 90       	pop	r0
    cda8:	0f 90       	pop	r0
    cdaa:	0f 90       	pop	r0
    cdac:	be 01       	movw	r22, r28
    cdae:	64 54       	subi	r22, 0x44	; 68
    cdb0:	7f 4f       	sbci	r23, 0xFF	; 255
    cdb2:	0e 94 ef 6c 	call	0xd9de	; 0xd9de <arb_write>
    cdb6:	00 d0       	rcall	.+0      	; 0xcdb8 <arb_console+0x842>
    cdb8:	0f 92       	push	r0
    cdba:	ec eb       	ldi	r30, 0xBC	; 188
    cdbc:	f0 e0       	ldi	r31, 0x00	; 0
    cdbe:	ec 0f       	add	r30, r28
    cdc0:	fd 1f       	adc	r31, r29
    cdc2:	ad b7       	in	r26, 0x3d	; 61
    cdc4:	be b7       	in	r27, 0x3e	; 62
    cdc6:	11 96       	adiw	r26, 0x01	; 1
    cdc8:	ed 93       	st	X+, r30
    cdca:	fc 93       	st	X, r31
    cdcc:	12 97       	sbiw	r26, 0x02	; 2
    cdce:	8d e2       	ldi	r24, 0x2D	; 45
    cdd0:	99 e0       	ldi	r25, 0x09	; 9
    cdd2:	13 96       	adiw	r26, 0x03	; 3
    cdd4:	8d 93       	st	X+, r24
    cdd6:	9c 93       	st	X, r25
    cdd8:	14 97       	sbiw	r26, 0x04	; 4
    cdda:	0e 94 a5 b1 	call	0x1634a	; 0x1634a <sprintf_P>
    cdde:	ac 01       	movw	r20, r24
    cde0:	80 91 d8 24 	lds	r24, 0x24D8
    cde4:	90 91 d9 24 	lds	r25, 0x24D9
    cde8:	0f 90       	pop	r0
    cdea:	0f 90       	pop	r0
    cdec:	0f 90       	pop	r0
    cdee:	0f 90       	pop	r0
    cdf0:	be 01       	movw	r22, r28
    cdf2:	64 54       	subi	r22, 0x44	; 68
    cdf4:	7f 4f       	sbci	r23, 0xFF	; 255
    cdf6:	0e 94 ef 6c 	call	0xd9de	; 0xd9de <arb_write>
    cdfa:	e9 81       	ldd	r30, Y+1	; 0x01
    cdfc:	fa 81       	ldd	r31, Y+2	; 0x02
    cdfe:	02 81       	ldd	r16, Z+2	; 0x02
    ce00:	13 81       	ldd	r17, Z+3	; 0x03
    ce02:	e9 81       	ldd	r30, Y+1	; 0x01
    ce04:	fa 81       	ldd	r31, Y+2	; 0x02
    ce06:	48 c0       	rjmp	.+144    	; 0xce98 <arb_console+0x922>
    ce08:	eb 81       	ldd	r30, Y+3	; 0x03
    ce0a:	fc 81       	ldd	r31, Y+4	; 0x04
    ce0c:	20 81       	ld	r18, Z
    ce0e:	31 81       	ldd	r19, Z+1	; 0x01
    ce10:	d9 01       	movw	r26, r18
    ce12:	8d 91       	ld	r24, X+
    ce14:	9c 91       	ld	r25, X
    ce16:	f9 01       	movw	r30, r18
    ce18:	41 91       	ld	r20, Z+
    ce1a:	51 91       	ld	r21, Z+
    ce1c:	7f 01       	movw	r14, r30
    ce1e:	6d b7       	in	r22, 0x3d	; 61
    ce20:	7e b7       	in	r23, 0x3e	; 62
    ce22:	6c 50       	subi	r22, 0x0C	; 12
    ce24:	70 40       	sbci	r23, 0x00	; 0
    ce26:	6d bf       	out	0x3d, r22	; 61
    ce28:	7e bf       	out	0x3e, r23	; 62
    ce2a:	ed b7       	in	r30, 0x3d	; 61
    ce2c:	fe b7       	in	r31, 0x3e	; 62
    ce2e:	31 96       	adiw	r30, 0x01	; 1
    ce30:	6c eb       	ldi	r22, 0xBC	; 188
    ce32:	70 e0       	ldi	r23, 0x00	; 0
    ce34:	6c 0f       	add	r22, r28
    ce36:	7d 1f       	adc	r23, r29
    ce38:	ad b7       	in	r26, 0x3d	; 61
    ce3a:	be b7       	in	r27, 0x3e	; 62
    ce3c:	11 96       	adiw	r26, 0x01	; 1
    ce3e:	6d 93       	st	X+, r22
    ce40:	7c 93       	st	X, r23
    ce42:	12 97       	sbiw	r26, 0x02	; 2
    ce44:	a4 ef       	ldi	r26, 0xF4	; 244
    ce46:	b8 e0       	ldi	r27, 0x08	; 8
    ce48:	a2 83       	std	Z+2, r26	; 0x02
    ce4a:	b3 83       	std	Z+3, r27	; 0x03
    ce4c:	e4 82       	std	Z+4, r14	; 0x04
    ce4e:	f5 82       	std	Z+5, r15	; 0x05
    ce50:	89 2f       	mov	r24, r25
    ce52:	99 0f       	add	r25, r25
    ce54:	99 0b       	sbc	r25, r25
    ce56:	86 83       	std	Z+6, r24	; 0x06
    ce58:	17 82       	std	Z+7, r1	; 0x07
    ce5a:	40 87       	std	Z+8, r20	; 0x08
    ce5c:	11 86       	std	Z+9, r1	; 0x09
    ce5e:	d9 01       	movw	r26, r18
    ce60:	52 96       	adiw	r26, 0x12	; 18
    ce62:	8c 91       	ld	r24, X
    ce64:	99 27       	eor	r25, r25
    ce66:	87 fd       	sbrc	r24, 7
    ce68:	90 95       	com	r25
    ce6a:	82 87       	std	Z+10, r24	; 0x0a
    ce6c:	93 87       	std	Z+11, r25	; 0x0b
    ce6e:	0e 94 a5 b1 	call	0x1634a	; 0x1634a <sprintf_P>
    ce72:	ac 01       	movw	r20, r24
    ce74:	80 91 d8 24 	lds	r24, 0x24D8
    ce78:	90 91 d9 24 	lds	r25, 0x24D9
    ce7c:	ed b7       	in	r30, 0x3d	; 61
    ce7e:	fe b7       	in	r31, 0x3e	; 62
    ce80:	3c 96       	adiw	r30, 0x0c	; 12
    ce82:	ed bf       	out	0x3d, r30	; 61
    ce84:	fe bf       	out	0x3e, r31	; 62
    ce86:	be 01       	movw	r22, r28
    ce88:	64 54       	subi	r22, 0x44	; 68
    ce8a:	7f 4f       	sbci	r23, 0xFF	; 255
    ce8c:	0e 94 ef 6c 	call	0xd9de	; 0xd9de <arb_write>
    ce90:	01 50       	subi	r16, 0x01	; 1
    ce92:	10 40       	sbci	r17, 0x00	; 0
    ce94:	eb 81       	ldd	r30, Y+3	; 0x03
    ce96:	fc 81       	ldd	r31, Y+4	; 0x04
    ce98:	80 85       	ldd	r24, Z+8	; 0x08
    ce9a:	91 85       	ldd	r25, Z+9	; 0x09
    ce9c:	8b 83       	std	Y+3, r24	; 0x03
    ce9e:	9c 83       	std	Y+4, r25	; 0x04
    cea0:	01 15       	cp	r16, r1
    cea2:	11 05       	cpc	r17, r1
    cea4:	09 f0       	breq	.+2      	; 0xcea8 <arb_console+0x932>
    cea6:	b0 cf       	rjmp	.-160    	; 0xce08 <arb_console+0x892>
    cea8:	00 d0       	rcall	.+0      	; 0xceaa <arb_console+0x934>
    ceaa:	0f 92       	push	r0
    ceac:	ec eb       	ldi	r30, 0xBC	; 188
    ceae:	f0 e0       	ldi	r31, 0x00	; 0
    ceb0:	ec 0f       	add	r30, r28
    ceb2:	fd 1f       	adc	r31, r29
    ceb4:	ad b7       	in	r26, 0x3d	; 61
    ceb6:	be b7       	in	r27, 0x3e	; 62
    ceb8:	11 96       	adiw	r26, 0x01	; 1
    ceba:	ed 93       	st	X+, r30
    cebc:	fc 93       	st	X, r31
    cebe:	12 97       	sbiw	r26, 0x02	; 2
    cec0:	82 eb       	ldi	r24, 0xB2	; 178
    cec2:	98 e0       	ldi	r25, 0x08	; 8
    cec4:	7c cc       	rjmp	.-1800   	; 0xc7be <arb_console+0x248>
    cec6:	ce 01       	movw	r24, r28
    cec8:	85 5b       	subi	r24, 0xB5	; 181
    ceca:	9f 4f       	sbci	r25, 0xFF	; 255
    cecc:	62 e8       	ldi	r22, 0x82	; 130
    cece:	73 e0       	ldi	r23, 0x03	; 3
    ced0:	0e 94 97 b0 	call	0x1612e	; 0x1612e <strcasecmp_P>
    ced4:	89 2b       	or	r24, r25
    ced6:	09 f0       	breq	.+2      	; 0xceda <arb_console+0x964>
    ced8:	33 c3       	rjmp	.+1638   	; 0xd540 <arb_console+0xfca>
    ceda:	c5 54       	subi	r28, 0x45	; 69
    cedc:	df 4f       	sbci	r29, 0xFF	; 255
    cede:	88 81       	ld	r24, Y
    cee0:	cb 5b       	subi	r28, 0xBB	; 187
    cee2:	d0 40       	sbci	r29, 0x00	; 0
    cee4:	81 30       	cpi	r24, 0x01	; 1
    cee6:	09 f0       	breq	.+2      	; 0xceea <arb_console+0x974>
    cee8:	2b c3       	rjmp	.+1622   	; 0xd540 <arb_console+0xfca>
    ceea:	80 91 ca 27 	lds	r24, 0x27CA
    ceee:	90 91 cb 27 	lds	r25, 0x27CB
    cef2:	a0 e0       	ldi	r26, 0x00	; 0
    cef4:	b0 e0       	ldi	r27, 0x00	; 0
    cef6:	1c 01       	movw	r2, r24
    cef8:	2d 01       	movw	r4, r26
    cefa:	c6 50       	subi	r28, 0x06	; 6
    cefc:	de 4f       	sbci	r29, 0xFE	; 254
    cefe:	e8 80       	ld	r14, Y
    cf00:	f9 80       	ldd	r15, Y+1	; 0x01
    cf02:	0a 81       	ldd	r16, Y+2	; 0x02
    cf04:	1b 81       	ldd	r17, Y+3	; 0x03
    cf06:	ca 5f       	subi	r28, 0xFA	; 250
    cf08:	d1 40       	sbci	r29, 0x01	; 1
    cf0a:	2e 18       	sub	r2, r14
    cf0c:	3f 08       	sbc	r3, r15
    cf0e:	40 0a       	sbc	r4, r16
    cf10:	51 0a       	sbc	r5, r17
    cf12:	5f ef       	ldi	r21, 0xFF	; 255
    cf14:	a5 2e       	mov	r10, r21
    cf16:	5f e3       	ldi	r21, 0x3F	; 63
    cf18:	b5 2e       	mov	r11, r21
    cf1a:	c1 2c       	mov	r12, r1
    cf1c:	d1 2c       	mov	r13, r1
    cf1e:	a8 1a       	sub	r10, r24
    cf20:	b9 0a       	sbc	r11, r25
    cf22:	ca 0a       	sbc	r12, r26
    cf24:	db 0a       	sbc	r13, r27
    cf26:	80 91 d6 23 	lds	r24, 0x23D6
    cf2a:	90 91 d7 23 	lds	r25, 0x23D7
    cf2e:	a0 e0       	ldi	r26, 0x00	; 0
    cf30:	b0 e0       	ldi	r27, 0x00	; 0
    cf32:	a8 1a       	sub	r10, r24
    cf34:	b9 0a       	sbc	r11, r25
    cf36:	ca 0a       	sbc	r12, r26
    cf38:	db 0a       	sbc	r13, r27
    cf3a:	ce 5f       	subi	r28, 0xFE	; 254
    cf3c:	dd 4f       	sbci	r29, 0xFD	; 253
    cf3e:	08 81       	ld	r16, Y
    cf40:	19 81       	ldd	r17, Y+1	; 0x01
    cf42:	2a 81       	ldd	r18, Y+2	; 0x02
    cf44:	3b 81       	ldd	r19, Y+3	; 0x03
    cf46:	c2 50       	subi	r28, 0x02	; 2
    cf48:	d2 40       	sbci	r29, 0x02	; 2
    cf4a:	02 0d       	add	r16, r2
    cf4c:	13 1d       	adc	r17, r3
    cf4e:	24 1d       	adc	r18, r4
    cf50:	35 1d       	adc	r19, r5
    cf52:	c8 51       	subi	r28, 0x18	; 24
    cf54:	de 4f       	sbci	r29, 0xFE	; 254
    cf56:	08 83       	st	Y, r16
    cf58:	19 83       	std	Y+1, r17	; 0x01
    cf5a:	2a 83       	std	Y+2, r18	; 0x02
    cf5c:	3b 83       	std	Y+3, r19	; 0x03
    cf5e:	c8 5e       	subi	r28, 0xE8	; 232
    cf60:	d1 40       	sbci	r29, 0x01	; 1
    cf62:	44 e6       	ldi	r20, 0x64	; 100
    cf64:	64 2e       	mov	r6, r20
    cf66:	71 2c       	mov	r7, r1
    cf68:	81 2c       	mov	r8, r1
    cf6a:	91 2c       	mov	r9, r1
    cf6c:	c9 01       	movw	r24, r18
    cf6e:	b8 01       	movw	r22, r16
    cf70:	24 e6       	ldi	r18, 0x64	; 100
    cf72:	30 e0       	ldi	r19, 0x00	; 0
    cf74:	40 e0       	ldi	r20, 0x00	; 0
    cf76:	50 e0       	ldi	r21, 0x00	; 0
    cf78:	0e 94 e1 b3 	call	0x167c2	; 0x167c2 <__mulsi3>
    cf7c:	ca 5f       	subi	r28, 0xFA	; 250
    cf7e:	dd 4f       	sbci	r29, 0xFD	; 253
    cf80:	28 81       	ld	r18, Y
    cf82:	39 81       	ldd	r19, Y+1	; 0x01
    cf84:	4a 81       	ldd	r20, Y+2	; 0x02
    cf86:	5b 81       	ldd	r21, Y+3	; 0x03
    cf88:	c6 50       	subi	r28, 0x06	; 6
    cf8a:	d2 40       	sbci	r29, 0x02	; 2
    cf8c:	0e 94 22 b4 	call	0x16844	; 0x16844 <__divmodsi4>
    cf90:	79 01       	movw	r14, r18
    cf92:	8a 01       	movw	r16, r20
    cf94:	00 d0       	rcall	.+0      	; 0xcf96 <arb_console+0xa20>
    cf96:	0f 92       	push	r0
    cf98:	ec eb       	ldi	r30, 0xBC	; 188
    cf9a:	f0 e0       	ldi	r31, 0x00	; 0
    cf9c:	ec 0f       	add	r30, r28
    cf9e:	fd 1f       	adc	r31, r29
    cfa0:	ad b7       	in	r26, 0x3d	; 61
    cfa2:	be b7       	in	r27, 0x3e	; 62
    cfa4:	11 96       	adiw	r26, 0x01	; 1
    cfa6:	ed 93       	st	X+, r30
    cfa8:	fc 93       	st	X, r31
    cfaa:	12 97       	sbiw	r26, 0x02	; 2
    cfac:	28 e8       	ldi	r18, 0x88	; 136
    cfae:	3c e0       	ldi	r19, 0x0C	; 12
    cfb0:	13 96       	adiw	r26, 0x03	; 3
    cfb2:	2d 93       	st	X+, r18
    cfb4:	3c 93       	st	X, r19
    cfb6:	14 97       	sbiw	r26, 0x04	; 4
    cfb8:	0e 94 a5 b1 	call	0x1634a	; 0x1634a <sprintf_P>
    cfbc:	ac 01       	movw	r20, r24
    cfbe:	80 91 d8 24 	lds	r24, 0x24D8
    cfc2:	90 91 d9 24 	lds	r25, 0x24D9
    cfc6:	0f 90       	pop	r0
    cfc8:	0f 90       	pop	r0
    cfca:	0f 90       	pop	r0
    cfcc:	0f 90       	pop	r0
    cfce:	be 01       	movw	r22, r28
    cfd0:	64 54       	subi	r22, 0x44	; 68
    cfd2:	7f 4f       	sbci	r23, 0xFF	; 255
    cfd4:	0e 94 ef 6c 	call	0xd9de	; 0xd9de <arb_write>
    cfd8:	00 d0       	rcall	.+0      	; 0xcfda <arb_console+0xa64>
    cfda:	0f 92       	push	r0
    cfdc:	ec eb       	ldi	r30, 0xBC	; 188
    cfde:	f0 e0       	ldi	r31, 0x00	; 0
    cfe0:	ec 0f       	add	r30, r28
    cfe2:	fd 1f       	adc	r31, r29
    cfe4:	ad b7       	in	r26, 0x3d	; 61
    cfe6:	be b7       	in	r27, 0x3e	; 62
    cfe8:	11 96       	adiw	r26, 0x01	; 1
    cfea:	ed 93       	st	X+, r30
    cfec:	fc 93       	st	X, r31
    cfee:	12 97       	sbiw	r26, 0x02	; 2
    cff0:	8a e5       	ldi	r24, 0x5A	; 90
    cff2:	9c e0       	ldi	r25, 0x0C	; 12
    cff4:	13 96       	adiw	r26, 0x03	; 3
    cff6:	8d 93       	st	X+, r24
    cff8:	9c 93       	st	X, r25
    cffa:	14 97       	sbiw	r26, 0x04	; 4
    cffc:	0e 94 a5 b1 	call	0x1634a	; 0x1634a <sprintf_P>
    d000:	ac 01       	movw	r20, r24
    d002:	80 91 d8 24 	lds	r24, 0x24D8
    d006:	90 91 d9 24 	lds	r25, 0x24D9
    d00a:	0f 90       	pop	r0
    d00c:	0f 90       	pop	r0
    d00e:	0f 90       	pop	r0
    d010:	0f 90       	pop	r0
    d012:	be 01       	movw	r22, r28
    d014:	64 54       	subi	r22, 0x44	; 68
    d016:	7f 4f       	sbci	r23, 0xFF	; 255
    d018:	0e 94 ef 6c 	call	0xd9de	; 0xd9de <arb_write>
    d01c:	00 d0       	rcall	.+0      	; 0xd01e <arb_console+0xaa8>
    d01e:	0f 92       	push	r0
    d020:	ec eb       	ldi	r30, 0xBC	; 188
    d022:	f0 e0       	ldi	r31, 0x00	; 0
    d024:	ec 0f       	add	r30, r28
    d026:	fd 1f       	adc	r31, r29
    d028:	ad b7       	in	r26, 0x3d	; 61
    d02a:	be b7       	in	r27, 0x3e	; 62
    d02c:	11 96       	adiw	r26, 0x01	; 1
    d02e:	ed 93       	st	X+, r30
    d030:	fc 93       	st	X, r31
    d032:	12 97       	sbiw	r26, 0x02	; 2
    d034:	8c e2       	ldi	r24, 0x2C	; 44
    d036:	9c e0       	ldi	r25, 0x0C	; 12
    d038:	13 96       	adiw	r26, 0x03	; 3
    d03a:	8d 93       	st	X+, r24
    d03c:	9c 93       	st	X, r25
    d03e:	14 97       	sbiw	r26, 0x04	; 4
    d040:	0e 94 a5 b1 	call	0x1634a	; 0x1634a <sprintf_P>
    d044:	ac 01       	movw	r20, r24
    d046:	80 91 d8 24 	lds	r24, 0x24D8
    d04a:	90 91 d9 24 	lds	r25, 0x24D9
    d04e:	0f 90       	pop	r0
    d050:	0f 90       	pop	r0
    d052:	0f 90       	pop	r0
    d054:	0f 90       	pop	r0
    d056:	be 01       	movw	r22, r28
    d058:	64 54       	subi	r22, 0x44	; 68
    d05a:	7f 4f       	sbci	r23, 0xFF	; 255
    d05c:	0e 94 ef 6c 	call	0xd9de	; 0xd9de <arb_write>
    d060:	2d b7       	in	r18, 0x3d	; 61
    d062:	3e b7       	in	r19, 0x3e	; 62
    d064:	2a 50       	subi	r18, 0x0A	; 10
    d066:	30 40       	sbci	r19, 0x00	; 0
    d068:	2d bf       	out	0x3d, r18	; 61
    d06a:	3e bf       	out	0x3e, r19	; 62
    d06c:	ed b7       	in	r30, 0x3d	; 61
    d06e:	fe b7       	in	r31, 0x3e	; 62
    d070:	31 96       	adiw	r30, 0x01	; 1
    d072:	2c eb       	ldi	r18, 0xBC	; 188
    d074:	30 e0       	ldi	r19, 0x00	; 0
    d076:	2c 0f       	add	r18, r28
    d078:	3d 1f       	adc	r19, r29
    d07a:	ad b7       	in	r26, 0x3d	; 61
    d07c:	be b7       	in	r27, 0x3e	; 62
    d07e:	11 96       	adiw	r26, 0x01	; 1
    d080:	2d 93       	st	X+, r18
    d082:	3c 93       	st	X, r19
    d084:	12 97       	sbiw	r26, 0x02	; 2
    d086:	89 e0       	ldi	r24, 0x09	; 9
    d088:	9c e0       	ldi	r25, 0x0C	; 12
    d08a:	82 83       	std	Z+2, r24	; 0x02
    d08c:	93 83       	std	Z+3, r25	; 0x03
    d08e:	40 e0       	ldi	r20, 0x00	; 0
    d090:	50 e2       	ldi	r21, 0x20	; 32
    d092:	44 83       	std	Z+4, r20	; 0x04
    d094:	55 83       	std	Z+5, r21	; 0x05
    d096:	ca 50       	subi	r28, 0x0A	; 10
    d098:	de 4f       	sbci	r29, 0xFE	; 254
    d09a:	68 81       	ld	r22, Y
    d09c:	79 81       	ldd	r23, Y+1	; 0x01
    d09e:	8a 81       	ldd	r24, Y+2	; 0x02
    d0a0:	9b 81       	ldd	r25, Y+3	; 0x03
    d0a2:	c6 5f       	subi	r28, 0xF6	; 246
    d0a4:	d1 40       	sbci	r29, 0x01	; 1
    d0a6:	66 83       	std	Z+6, r22	; 0x06
    d0a8:	77 83       	std	Z+7, r23	; 0x07
    d0aa:	80 87       	std	Z+8, r24	; 0x08
    d0ac:	91 87       	std	Z+9, r25	; 0x09
    d0ae:	0e 94 a5 b1 	call	0x1634a	; 0x1634a <sprintf_P>
    d0b2:	ac 01       	movw	r20, r24
    d0b4:	80 91 d8 24 	lds	r24, 0x24D8
    d0b8:	90 91 d9 24 	lds	r25, 0x24D9
    d0bc:	ad b7       	in	r26, 0x3d	; 61
    d0be:	be b7       	in	r27, 0x3e	; 62
    d0c0:	1a 96       	adiw	r26, 0x0a	; 10
    d0c2:	ad bf       	out	0x3d, r26	; 61
    d0c4:	be bf       	out	0x3e, r27	; 62
    d0c6:	be 01       	movw	r22, r28
    d0c8:	64 54       	subi	r22, 0x44	; 68
    d0ca:	7f 4f       	sbci	r23, 0xFF	; 255
    d0cc:	0e 94 ef 6c 	call	0xd9de	; 0xd9de <arb_write>
    d0d0:	ed b7       	in	r30, 0x3d	; 61
    d0d2:	fe b7       	in	r31, 0x3e	; 62
    d0d4:	3a 97       	sbiw	r30, 0x0a	; 10
    d0d6:	ed bf       	out	0x3d, r30	; 61
    d0d8:	fe bf       	out	0x3e, r31	; 62
    d0da:	31 96       	adiw	r30, 0x01	; 1
    d0dc:	2c eb       	ldi	r18, 0xBC	; 188
    d0de:	30 e0       	ldi	r19, 0x00	; 0
    d0e0:	2c 0f       	add	r18, r28
    d0e2:	3d 1f       	adc	r19, r29
    d0e4:	ad b7       	in	r26, 0x3d	; 61
    d0e6:	be b7       	in	r27, 0x3e	; 62
    d0e8:	11 96       	adiw	r26, 0x01	; 1
    d0ea:	2d 93       	st	X+, r18
    d0ec:	3c 93       	st	X, r19
    d0ee:	12 97       	sbiw	r26, 0x02	; 2
    d0f0:	86 ee       	ldi	r24, 0xE6	; 230
    d0f2:	9b e0       	ldi	r25, 0x0B	; 11
    d0f4:	82 83       	std	Z+2, r24	; 0x02
    d0f6:	93 83       	std	Z+3, r25	; 0x03
    d0f8:	48 e4       	ldi	r20, 0x48	; 72
    d0fa:	54 e2       	ldi	r21, 0x24	; 36
    d0fc:	44 83       	std	Z+4, r20	; 0x04
    d0fe:	55 83       	std	Z+5, r21	; 0x05
    d100:	c2 50       	subi	r28, 0x02	; 2
    d102:	de 4f       	sbci	r29, 0xFE	; 254
    d104:	68 81       	ld	r22, Y
    d106:	79 81       	ldd	r23, Y+1	; 0x01
    d108:	8a 81       	ldd	r24, Y+2	; 0x02
    d10a:	9b 81       	ldd	r25, Y+3	; 0x03
    d10c:	ce 5f       	subi	r28, 0xFE	; 254
    d10e:	d1 40       	sbci	r29, 0x01	; 1
    d110:	66 83       	std	Z+6, r22	; 0x06
    d112:	77 83       	std	Z+7, r23	; 0x07
    d114:	80 87       	std	Z+8, r24	; 0x08
    d116:	91 87       	std	Z+9, r25	; 0x09
    d118:	0e 94 a5 b1 	call	0x1634a	; 0x1634a <sprintf_P>
    d11c:	ac 01       	movw	r20, r24
    d11e:	80 91 d8 24 	lds	r24, 0x24D8
    d122:	90 91 d9 24 	lds	r25, 0x24D9
    d126:	ad b7       	in	r26, 0x3d	; 61
    d128:	be b7       	in	r27, 0x3e	; 62
    d12a:	1a 96       	adiw	r26, 0x0a	; 10
    d12c:	ad bf       	out	0x3d, r26	; 61
    d12e:	be bf       	out	0x3e, r27	; 62
    d130:	be 01       	movw	r22, r28
    d132:	64 54       	subi	r22, 0x44	; 68
    d134:	7f 4f       	sbci	r23, 0xFF	; 255
    d136:	0e 94 ef 6c 	call	0xd9de	; 0xd9de <arb_write>
    d13a:	ed b7       	in	r30, 0x3d	; 61
    d13c:	fe b7       	in	r31, 0x3e	; 62
    d13e:	3a 97       	sbiw	r30, 0x0a	; 10
    d140:	ed bf       	out	0x3d, r30	; 61
    d142:	fe bf       	out	0x3e, r31	; 62
    d144:	31 96       	adiw	r30, 0x01	; 1
    d146:	2c eb       	ldi	r18, 0xBC	; 188
    d148:	30 e0       	ldi	r19, 0x00	; 0
    d14a:	2c 0f       	add	r18, r28
    d14c:	3d 1f       	adc	r19, r29
    d14e:	ad b7       	in	r26, 0x3d	; 61
    d150:	be b7       	in	r27, 0x3e	; 62
    d152:	11 96       	adiw	r26, 0x01	; 1
    d154:	2d 93       	st	X+, r18
    d156:	3c 93       	st	X, r19
    d158:	12 97       	sbiw	r26, 0x02	; 2
    d15a:	83 ec       	ldi	r24, 0xC3	; 195
    d15c:	9b e0       	ldi	r25, 0x0B	; 11
    d15e:	82 83       	std	Z+2, r24	; 0x02
    d160:	93 83       	std	Z+3, r25	; 0x03
    d162:	4e ec       	ldi	r20, 0xCE	; 206
    d164:	57 e2       	ldi	r21, 0x27	; 39
    d166:	44 83       	std	Z+4, r20	; 0x04
    d168:	55 83       	std	Z+5, r21	; 0x05
    d16a:	26 82       	std	Z+6, r2	; 0x06
    d16c:	37 82       	std	Z+7, r3	; 0x07
    d16e:	40 86       	std	Z+8, r4	; 0x08
    d170:	51 86       	std	Z+9, r5	; 0x09
    d172:	0e 94 a5 b1 	call	0x1634a	; 0x1634a <sprintf_P>
    d176:	ac 01       	movw	r20, r24
    d178:	80 91 d8 24 	lds	r24, 0x24D8
    d17c:	90 91 d9 24 	lds	r25, 0x24D9
    d180:	6d b7       	in	r22, 0x3d	; 61
    d182:	7e b7       	in	r23, 0x3e	; 62
    d184:	66 5f       	subi	r22, 0xF6	; 246
    d186:	7f 4f       	sbci	r23, 0xFF	; 255
    d188:	6d bf       	out	0x3d, r22	; 61
    d18a:	7e bf       	out	0x3e, r23	; 62
    d18c:	be 01       	movw	r22, r28
    d18e:	64 54       	subi	r22, 0x44	; 68
    d190:	7f 4f       	sbci	r23, 0xFF	; 255
    d192:	0e 94 ef 6c 	call	0xd9de	; 0xd9de <arb_write>
    d196:	00 d0       	rcall	.+0      	; 0xd198 <arb_console+0xc22>
    d198:	0f 92       	push	r0
    d19a:	ec eb       	ldi	r30, 0xBC	; 188
    d19c:	f0 e0       	ldi	r31, 0x00	; 0
    d19e:	ec 0f       	add	r30, r28
    d1a0:	fd 1f       	adc	r31, r29
    d1a2:	ad b7       	in	r26, 0x3d	; 61
    d1a4:	be b7       	in	r27, 0x3e	; 62
    d1a6:	11 96       	adiw	r26, 0x01	; 1
    d1a8:	ed 93       	st	X+, r30
    d1aa:	fc 93       	st	X, r31
    d1ac:	12 97       	sbiw	r26, 0x02	; 2
    d1ae:	85 e9       	ldi	r24, 0x95	; 149
    d1b0:	9b e0       	ldi	r25, 0x0B	; 11
    d1b2:	13 96       	adiw	r26, 0x03	; 3
    d1b4:	8d 93       	st	X+, r24
    d1b6:	9c 93       	st	X, r25
    d1b8:	14 97       	sbiw	r26, 0x04	; 4
    d1ba:	0e 94 a5 b1 	call	0x1634a	; 0x1634a <sprintf_P>
    d1be:	ac 01       	movw	r20, r24
    d1c0:	80 91 d8 24 	lds	r24, 0x24D8
    d1c4:	90 91 d9 24 	lds	r25, 0x24D9
    d1c8:	0f 90       	pop	r0
    d1ca:	0f 90       	pop	r0
    d1cc:	0f 90       	pop	r0
    d1ce:	0f 90       	pop	r0
    d1d0:	be 01       	movw	r22, r28
    d1d2:	64 54       	subi	r22, 0x44	; 68
    d1d4:	7f 4f       	sbci	r23, 0xFF	; 255
    d1d6:	0e 94 ef 6c 	call	0xd9de	; 0xd9de <arb_write>
    d1da:	2d b7       	in	r18, 0x3d	; 61
    d1dc:	3e b7       	in	r19, 0x3e	; 62
    d1de:	28 50       	subi	r18, 0x08	; 8
    d1e0:	30 40       	sbci	r19, 0x00	; 0
    d1e2:	2d bf       	out	0x3d, r18	; 61
    d1e4:	3e bf       	out	0x3e, r19	; 62
    d1e6:	ed b7       	in	r30, 0x3d	; 61
    d1e8:	fe b7       	in	r31, 0x3e	; 62
    d1ea:	31 96       	adiw	r30, 0x01	; 1
    d1ec:	2c eb       	ldi	r18, 0xBC	; 188
    d1ee:	30 e0       	ldi	r19, 0x00	; 0
    d1f0:	2c 0f       	add	r18, r28
    d1f2:	3d 1f       	adc	r19, r29
    d1f4:	ad b7       	in	r26, 0x3d	; 61
    d1f6:	be b7       	in	r27, 0x3e	; 62
    d1f8:	11 96       	adiw	r26, 0x01	; 1
    d1fa:	2d 93       	st	X+, r18
    d1fc:	3c 93       	st	X, r19
    d1fe:	12 97       	sbiw	r26, 0x02	; 2
    d200:	80 e7       	ldi	r24, 0x70	; 112
    d202:	9b e0       	ldi	r25, 0x0B	; 11
    d204:	82 83       	std	Z+2, r24	; 0x02
    d206:	93 83       	std	Z+3, r25	; 0x03
    d208:	c8 51       	subi	r28, 0x18	; 24
    d20a:	de 4f       	sbci	r29, 0xFE	; 254
    d20c:	48 81       	ld	r20, Y
    d20e:	59 81       	ldd	r21, Y+1	; 0x01
    d210:	6a 81       	ldd	r22, Y+2	; 0x02
    d212:	7b 81       	ldd	r23, Y+3	; 0x03
    d214:	c8 5e       	subi	r28, 0xE8	; 232
    d216:	d1 40       	sbci	r29, 0x01	; 1
    d218:	44 83       	std	Z+4, r20	; 0x04
    d21a:	55 83       	std	Z+5, r21	; 0x05
    d21c:	66 83       	std	Z+6, r22	; 0x06
    d21e:	77 83       	std	Z+7, r23	; 0x07
    d220:	0e 94 a5 b1 	call	0x1634a	; 0x1634a <sprintf_P>
    d224:	ac 01       	movw	r20, r24
    d226:	80 91 d8 24 	lds	r24, 0x24D8
    d22a:	90 91 d9 24 	lds	r25, 0x24D9
    d22e:	6d b7       	in	r22, 0x3d	; 61
    d230:	7e b7       	in	r23, 0x3e	; 62
    d232:	68 5f       	subi	r22, 0xF8	; 248
    d234:	7f 4f       	sbci	r23, 0xFF	; 255
    d236:	6d bf       	out	0x3d, r22	; 61
    d238:	7e bf       	out	0x3e, r23	; 62
    d23a:	be 01       	movw	r22, r28
    d23c:	64 54       	subi	r22, 0x44	; 68
    d23e:	7f 4f       	sbci	r23, 0xFF	; 255
    d240:	0e 94 ef 6c 	call	0xd9de	; 0xd9de <arb_write>
    d244:	8d b7       	in	r24, 0x3d	; 61
    d246:	9e b7       	in	r25, 0x3e	; 62
    d248:	08 97       	sbiw	r24, 0x08	; 8
    d24a:	8d bf       	out	0x3d, r24	; 61
    d24c:	9e bf       	out	0x3e, r25	; 62
    d24e:	ed b7       	in	r30, 0x3d	; 61
    d250:	fe b7       	in	r31, 0x3e	; 62
    d252:	31 96       	adiw	r30, 0x01	; 1
    d254:	2c eb       	ldi	r18, 0xBC	; 188
    d256:	30 e0       	ldi	r19, 0x00	; 0
    d258:	2c 0f       	add	r18, r28
    d25a:	3d 1f       	adc	r19, r29
    d25c:	ad b7       	in	r26, 0x3d	; 61
    d25e:	be b7       	in	r27, 0x3e	; 62
    d260:	11 96       	adiw	r26, 0x01	; 1
    d262:	2d 93       	st	X+, r18
    d264:	3c 93       	st	X, r19
    d266:	12 97       	sbiw	r26, 0x02	; 2
    d268:	89 e4       	ldi	r24, 0x49	; 73
    d26a:	9b e0       	ldi	r25, 0x0B	; 11
    d26c:	82 83       	std	Z+2, r24	; 0x02
    d26e:	93 83       	std	Z+3, r25	; 0x03
    d270:	e4 82       	std	Z+4, r14	; 0x04
    d272:	f5 82       	std	Z+5, r15	; 0x05
    d274:	06 83       	std	Z+6, r16	; 0x06
    d276:	17 83       	std	Z+7, r17	; 0x07
    d278:	0e 94 a5 b1 	call	0x1634a	; 0x1634a <sprintf_P>
    d27c:	ac 01       	movw	r20, r24
    d27e:	80 91 d8 24 	lds	r24, 0x24D8
    d282:	90 91 d9 24 	lds	r25, 0x24D9
    d286:	6d b7       	in	r22, 0x3d	; 61
    d288:	7e b7       	in	r23, 0x3e	; 62
    d28a:	68 5f       	subi	r22, 0xF8	; 248
    d28c:	7f 4f       	sbci	r23, 0xFF	; 255
    d28e:	6d bf       	out	0x3d, r22	; 61
    d290:	7e bf       	out	0x3e, r23	; 62
    d292:	be 01       	movw	r22, r28
    d294:	64 54       	subi	r22, 0x44	; 68
    d296:	7f 4f       	sbci	r23, 0xFF	; 255
    d298:	0e 94 ef 6c 	call	0xd9de	; 0xd9de <arb_write>
    d29c:	00 d0       	rcall	.+0      	; 0xd29e <arb_console+0xd28>
    d29e:	0f 92       	push	r0
    d2a0:	ec eb       	ldi	r30, 0xBC	; 188
    d2a2:	f0 e0       	ldi	r31, 0x00	; 0
    d2a4:	ec 0f       	add	r30, r28
    d2a6:	fd 1f       	adc	r31, r29
    d2a8:	ad b7       	in	r26, 0x3d	; 61
    d2aa:	be b7       	in	r27, 0x3e	; 62
    d2ac:	11 96       	adiw	r26, 0x01	; 1
    d2ae:	ed 93       	st	X+, r30
    d2b0:	fc 93       	st	X, r31
    d2b2:	12 97       	sbiw	r26, 0x02	; 2
    d2b4:	8b e1       	ldi	r24, 0x1B	; 27
    d2b6:	9b e0       	ldi	r25, 0x0B	; 11
    d2b8:	13 96       	adiw	r26, 0x03	; 3
    d2ba:	8d 93       	st	X+, r24
    d2bc:	9c 93       	st	X, r25
    d2be:	14 97       	sbiw	r26, 0x04	; 4
    d2c0:	0e 94 a5 b1 	call	0x1634a	; 0x1634a <sprintf_P>
    d2c4:	ac 01       	movw	r20, r24
    d2c6:	80 91 d8 24 	lds	r24, 0x24D8
    d2ca:	90 91 d9 24 	lds	r25, 0x24D9
    d2ce:	0f 90       	pop	r0
    d2d0:	0f 90       	pop	r0
    d2d2:	0f 90       	pop	r0
    d2d4:	0f 90       	pop	r0
    d2d6:	be 01       	movw	r22, r28
    d2d8:	64 54       	subi	r22, 0x44	; 68
    d2da:	7f 4f       	sbci	r23, 0xFF	; 255
    d2dc:	0e 94 ef 6c 	call	0xd9de	; 0xd9de <arb_write>
    d2e0:	2d b7       	in	r18, 0x3d	; 61
    d2e2:	3e b7       	in	r19, 0x3e	; 62
    d2e4:	28 50       	subi	r18, 0x08	; 8
    d2e6:	30 40       	sbci	r19, 0x00	; 0
    d2e8:	2d bf       	out	0x3d, r18	; 61
    d2ea:	3e bf       	out	0x3e, r19	; 62
    d2ec:	ed b7       	in	r30, 0x3d	; 61
    d2ee:	fe b7       	in	r31, 0x3e	; 62
    d2f0:	31 96       	adiw	r30, 0x01	; 1
    d2f2:	2c eb       	ldi	r18, 0xBC	; 188
    d2f4:	30 e0       	ldi	r19, 0x00	; 0
    d2f6:	2c 0f       	add	r18, r28
    d2f8:	3d 1f       	adc	r19, r29
    d2fa:	ad b7       	in	r26, 0x3d	; 61
    d2fc:	be b7       	in	r27, 0x3e	; 62
    d2fe:	11 96       	adiw	r26, 0x01	; 1
    d300:	2d 93       	st	X+, r18
    d302:	3c 93       	st	X, r19
    d304:	12 97       	sbiw	r26, 0x02	; 2
    d306:	86 ef       	ldi	r24, 0xF6	; 246
    d308:	9a e0       	ldi	r25, 0x0A	; 10
    d30a:	82 83       	std	Z+2, r24	; 0x02
    d30c:	93 83       	std	Z+3, r25	; 0x03
    d30e:	a4 82       	std	Z+4, r10	; 0x04
    d310:	b5 82       	std	Z+5, r11	; 0x05
    d312:	c6 82       	std	Z+6, r12	; 0x06
    d314:	d7 82       	std	Z+7, r13	; 0x07
    d316:	0e 94 a5 b1 	call	0x1634a	; 0x1634a <sprintf_P>
    d31a:	ac 01       	movw	r20, r24
    d31c:	80 91 d8 24 	lds	r24, 0x24D8
    d320:	90 91 d9 24 	lds	r25, 0x24D9
    d324:	6d b7       	in	r22, 0x3d	; 61
    d326:	7e b7       	in	r23, 0x3e	; 62
    d328:	68 5f       	subi	r22, 0xF8	; 248
    d32a:	7f 4f       	sbci	r23, 0xFF	; 255
    d32c:	6d bf       	out	0x3d, r22	; 61
    d32e:	7e bf       	out	0x3e, r23	; 62
    d330:	be 01       	movw	r22, r28
    d332:	64 54       	subi	r22, 0x44	; 68
    d334:	7f 4f       	sbci	r23, 0xFF	; 255
    d336:	0e 94 ef 6c 	call	0xd9de	; 0xd9de <arb_write>
    d33a:	8d b7       	in	r24, 0x3d	; 61
    d33c:	9e b7       	in	r25, 0x3e	; 62
    d33e:	08 97       	sbiw	r24, 0x08	; 8
    d340:	8d bf       	out	0x3d, r24	; 61
    d342:	9e bf       	out	0x3e, r25	; 62
    d344:	ed b7       	in	r30, 0x3d	; 61
    d346:	fe b7       	in	r31, 0x3e	; 62
    d348:	31 96       	adiw	r30, 0x01	; 1
    d34a:	2c eb       	ldi	r18, 0xBC	; 188
    d34c:	30 e0       	ldi	r19, 0x00	; 0
    d34e:	2c 0f       	add	r18, r28
    d350:	3d 1f       	adc	r19, r29
    d352:	ad b7       	in	r26, 0x3d	; 61
    d354:	be b7       	in	r27, 0x3e	; 62
    d356:	11 96       	adiw	r26, 0x01	; 1
    d358:	2d 93       	st	X+, r18
    d35a:	3c 93       	st	X, r19
    d35c:	12 97       	sbiw	r26, 0x02	; 2
    d35e:	8f ec       	ldi	r24, 0xCF	; 207
    d360:	9a e0       	ldi	r25, 0x0A	; 10
    d362:	82 83       	std	Z+2, r24	; 0x02
    d364:	93 83       	std	Z+3, r25	; 0x03
    d366:	6e 18       	sub	r6, r14
    d368:	7f 08       	sbc	r7, r15
    d36a:	80 0a       	sbc	r8, r16
    d36c:	91 0a       	sbc	r9, r17
    d36e:	64 82       	std	Z+4, r6	; 0x04
    d370:	75 82       	std	Z+5, r7	; 0x05
    d372:	86 82       	std	Z+6, r8	; 0x06
    d374:	97 82       	std	Z+7, r9	; 0x07
    d376:	0e 94 a5 b1 	call	0x1634a	; 0x1634a <sprintf_P>
    d37a:	ac 01       	movw	r20, r24
    d37c:	80 91 d8 24 	lds	r24, 0x24D8
    d380:	90 91 d9 24 	lds	r25, 0x24D9
    d384:	6d b7       	in	r22, 0x3d	; 61
    d386:	7e b7       	in	r23, 0x3e	; 62
    d388:	68 5f       	subi	r22, 0xF8	; 248
    d38a:	7f 4f       	sbci	r23, 0xFF	; 255
    d38c:	6d bf       	out	0x3d, r22	; 61
    d38e:	7e bf       	out	0x3e, r23	; 62
    d390:	be 01       	movw	r22, r28
    d392:	64 54       	subi	r22, 0x44	; 68
    d394:	7f 4f       	sbci	r23, 0xFF	; 255
    d396:	0e 94 ef 6c 	call	0xd9de	; 0xd9de <arb_write>
    d39a:	00 d0       	rcall	.+0      	; 0xd39c <arb_console+0xe26>
    d39c:	0f 92       	push	r0
    d39e:	ec eb       	ldi	r30, 0xBC	; 188
    d3a0:	f0 e0       	ldi	r31, 0x00	; 0
    d3a2:	ec 0f       	add	r30, r28
    d3a4:	fd 1f       	adc	r31, r29
    d3a6:	ad b7       	in	r26, 0x3d	; 61
    d3a8:	be b7       	in	r27, 0x3e	; 62
    d3aa:	11 96       	adiw	r26, 0x01	; 1
    d3ac:	ed 93       	st	X+, r30
    d3ae:	fc 93       	st	X, r31
    d3b0:	12 97       	sbiw	r26, 0x02	; 2
    d3b2:	81 ea       	ldi	r24, 0xA1	; 161
    d3b4:	9a e0       	ldi	r25, 0x0A	; 10
    d3b6:	13 96       	adiw	r26, 0x03	; 3
    d3b8:	8d 93       	st	X+, r24
    d3ba:	9c 93       	st	X, r25
    d3bc:	14 97       	sbiw	r26, 0x04	; 4
    d3be:	0e 94 a5 b1 	call	0x1634a	; 0x1634a <sprintf_P>
    d3c2:	ac 01       	movw	r20, r24
    d3c4:	80 91 d8 24 	lds	r24, 0x24D8
    d3c8:	90 91 d9 24 	lds	r25, 0x24D9
    d3cc:	0f 90       	pop	r0
    d3ce:	0f 90       	pop	r0
    d3d0:	0f 90       	pop	r0
    d3d2:	0f 90       	pop	r0
    d3d4:	be 01       	movw	r22, r28
    d3d6:	64 54       	subi	r22, 0x44	; 68
    d3d8:	7f 4f       	sbci	r23, 0xFF	; 255
    d3da:	0e 94 ef 6c 	call	0xd9de	; 0xd9de <arb_write>
    d3de:	0e 94 cf 72 	call	0xe59e	; 0xe59e <arb_getOneMinLoadingEst>
    d3e2:	0d b7       	in	r16, 0x3d	; 61
    d3e4:	1e b7       	in	r17, 0x3e	; 62
    d3e6:	08 50       	subi	r16, 0x08	; 8
    d3e8:	10 40       	sbci	r17, 0x00	; 0
    d3ea:	0d bf       	out	0x3d, r16	; 61
    d3ec:	1e bf       	out	0x3e, r17	; 62
    d3ee:	0f 5f       	subi	r16, 0xFF	; 255
    d3f0:	1f 4f       	sbci	r17, 0xFF	; 255
    d3f2:	ec eb       	ldi	r30, 0xBC	; 188
    d3f4:	f0 e0       	ldi	r31, 0x00	; 0
    d3f6:	ec 0f       	add	r30, r28
    d3f8:	fd 1f       	adc	r31, r29
    d3fa:	ad b7       	in	r26, 0x3d	; 61
    d3fc:	be b7       	in	r27, 0x3e	; 62
    d3fe:	11 96       	adiw	r26, 0x01	; 1
    d400:	ed 93       	st	X+, r30
    d402:	fc 93       	st	X, r31
    d404:	12 97       	sbiw	r26, 0x02	; 2
    d406:	28 e7       	ldi	r18, 0x78	; 120
    d408:	3a e0       	ldi	r19, 0x0A	; 10
    d40a:	d8 01       	movw	r26, r16
    d40c:	12 96       	adiw	r26, 0x02	; 2
    d40e:	2d 93       	st	X+, r18
    d410:	3c 93       	st	X, r19
    d412:	13 97       	sbiw	r26, 0x03	; 3
    d414:	0e 94 a5 ac 	call	0x1594a	; 0x1594a <__floatunsisf>
    d418:	20 e0       	ldi	r18, 0x00	; 0
    d41a:	30 e0       	ldi	r19, 0x00	; 0
    d41c:	48 ec       	ldi	r20, 0xC8	; 200
    d41e:	52 e4       	ldi	r21, 0x42	; 66
    d420:	0e 94 0e ae 	call	0x15c1c	; 0x15c1c <__mulsf3>
    d424:	20 e0       	ldi	r18, 0x00	; 0
    d426:	30 e0       	ldi	r19, 0x00	; 0
    d428:	40 e0       	ldi	r20, 0x00	; 0
    d42a:	58 e3       	ldi	r21, 0x38	; 56
    d42c:	0e 94 0e ae 	call	0x15c1c	; 0x15c1c <__mulsf3>
    d430:	f8 01       	movw	r30, r16
    d432:	64 83       	std	Z+4, r22	; 0x04
    d434:	75 83       	std	Z+5, r23	; 0x05
    d436:	86 83       	std	Z+6, r24	; 0x06
    d438:	97 83       	std	Z+7, r25	; 0x07
    d43a:	0e 94 a5 b1 	call	0x1634a	; 0x1634a <sprintf_P>
    d43e:	ac 01       	movw	r20, r24
    d440:	80 91 d8 24 	lds	r24, 0x24D8
    d444:	90 91 d9 24 	lds	r25, 0x24D9
    d448:	0d b7       	in	r16, 0x3d	; 61
    d44a:	1e b7       	in	r17, 0x3e	; 62
    d44c:	08 5f       	subi	r16, 0xF8	; 248
    d44e:	1f 4f       	sbci	r17, 0xFF	; 255
    d450:	0d bf       	out	0x3d, r16	; 61
    d452:	1e bf       	out	0x3e, r17	; 62
    d454:	be 01       	movw	r22, r28
    d456:	64 54       	subi	r22, 0x44	; 68
    d458:	7f 4f       	sbci	r23, 0xFF	; 255
    d45a:	0e 94 ef 6c 	call	0xd9de	; 0xd9de <arb_write>
    d45e:	00 d0       	rcall	.+0      	; 0xd460 <arb_console+0xeea>
    d460:	0f 92       	push	r0
    d462:	ec eb       	ldi	r30, 0xBC	; 188
    d464:	f0 e0       	ldi	r31, 0x00	; 0
    d466:	ec 0f       	add	r30, r28
    d468:	fd 1f       	adc	r31, r29
    d46a:	ad b7       	in	r26, 0x3d	; 61
    d46c:	be b7       	in	r27, 0x3e	; 62
    d46e:	11 96       	adiw	r26, 0x01	; 1
    d470:	ed 93       	st	X+, r30
    d472:	fc 93       	st	X, r31
    d474:	12 97       	sbiw	r26, 0x02	; 2
    d476:	8a e4       	ldi	r24, 0x4A	; 74
    d478:	9a e0       	ldi	r25, 0x0A	; 10
    d47a:	13 96       	adiw	r26, 0x03	; 3
    d47c:	8d 93       	st	X+, r24
    d47e:	9c 93       	st	X, r25
    d480:	14 97       	sbiw	r26, 0x04	; 4
    d482:	0e 94 a5 b1 	call	0x1634a	; 0x1634a <sprintf_P>
    d486:	ac 01       	movw	r20, r24
    d488:	80 91 d8 24 	lds	r24, 0x24D8
    d48c:	90 91 d9 24 	lds	r25, 0x24D9
    d490:	0f 90       	pop	r0
    d492:	0f 90       	pop	r0
    d494:	0f 90       	pop	r0
    d496:	0f 90       	pop	r0
    d498:	be 01       	movw	r22, r28
    d49a:	64 54       	subi	r22, 0x44	; 68
    d49c:	7f 4f       	sbci	r23, 0xFF	; 255
    d49e:	0e 94 ef 6c 	call	0xd9de	; 0xd9de <arb_write>
    d4a2:	0e 94 d8 72 	call	0xe5b0	; 0xe5b0 <arb_getFiveMinLoadingEst>
    d4a6:	0d b7       	in	r16, 0x3d	; 61
    d4a8:	1e b7       	in	r17, 0x3e	; 62
    d4aa:	08 50       	subi	r16, 0x08	; 8
    d4ac:	10 40       	sbci	r17, 0x00	; 0
    d4ae:	0d bf       	out	0x3d, r16	; 61
    d4b0:	1e bf       	out	0x3e, r17	; 62
    d4b2:	0f 5f       	subi	r16, 0xFF	; 255
    d4b4:	1f 4f       	sbci	r17, 0xFF	; 255
    d4b6:	ec eb       	ldi	r30, 0xBC	; 188
    d4b8:	f0 e0       	ldi	r31, 0x00	; 0
    d4ba:	ec 0f       	add	r30, r28
    d4bc:	fd 1f       	adc	r31, r29
    d4be:	ad b7       	in	r26, 0x3d	; 61
    d4c0:	be b7       	in	r27, 0x3e	; 62
    d4c2:	11 96       	adiw	r26, 0x01	; 1
    d4c4:	ed 93       	st	X+, r30
    d4c6:	fc 93       	st	X, r31
    d4c8:	12 97       	sbiw	r26, 0x02	; 2
    d4ca:	21 e2       	ldi	r18, 0x21	; 33
    d4cc:	3a e0       	ldi	r19, 0x0A	; 10
    d4ce:	d8 01       	movw	r26, r16
    d4d0:	12 96       	adiw	r26, 0x02	; 2
    d4d2:	2d 93       	st	X+, r18
    d4d4:	3c 93       	st	X, r19
    d4d6:	13 97       	sbiw	r26, 0x03	; 3
    d4d8:	0e 94 a5 ac 	call	0x1594a	; 0x1594a <__floatunsisf>
    d4dc:	20 e0       	ldi	r18, 0x00	; 0
    d4de:	30 e0       	ldi	r19, 0x00	; 0
    d4e0:	48 ec       	ldi	r20, 0xC8	; 200
    d4e2:	52 e4       	ldi	r21, 0x42	; 66
    d4e4:	0e 94 0e ae 	call	0x15c1c	; 0x15c1c <__mulsf3>
    d4e8:	20 e0       	ldi	r18, 0x00	; 0
    d4ea:	30 e0       	ldi	r19, 0x00	; 0
    d4ec:	40 e0       	ldi	r20, 0x00	; 0
    d4ee:	58 e3       	ldi	r21, 0x38	; 56
    d4f0:	0e 94 0e ae 	call	0x15c1c	; 0x15c1c <__mulsf3>
    d4f4:	f8 01       	movw	r30, r16
    d4f6:	64 83       	std	Z+4, r22	; 0x04
    d4f8:	75 83       	std	Z+5, r23	; 0x05
    d4fa:	86 83       	std	Z+6, r24	; 0x06
    d4fc:	97 83       	std	Z+7, r25	; 0x07
    d4fe:	0e 94 a5 b1 	call	0x1634a	; 0x1634a <sprintf_P>
    d502:	ac 01       	movw	r20, r24
    d504:	80 91 d8 24 	lds	r24, 0x24D8
    d508:	90 91 d9 24 	lds	r25, 0x24D9
    d50c:	0d b7       	in	r16, 0x3d	; 61
    d50e:	1e b7       	in	r17, 0x3e	; 62
    d510:	08 5f       	subi	r16, 0xF8	; 248
    d512:	1f 4f       	sbci	r17, 0xFF	; 255
    d514:	0d bf       	out	0x3d, r16	; 61
    d516:	1e bf       	out	0x3e, r17	; 62
    d518:	be 01       	movw	r22, r28
    d51a:	64 54       	subi	r22, 0x44	; 68
    d51c:	7f 4f       	sbci	r23, 0xFF	; 255
    d51e:	0e 94 ef 6c 	call	0xd9de	; 0xd9de <arb_write>
    d522:	00 d0       	rcall	.+0      	; 0xd524 <arb_console+0xfae>
    d524:	0f 92       	push	r0
    d526:	ec eb       	ldi	r30, 0xBC	; 188
    d528:	f0 e0       	ldi	r31, 0x00	; 0
    d52a:	ec 0f       	add	r30, r28
    d52c:	fd 1f       	adc	r31, r29
    d52e:	ad b7       	in	r26, 0x3d	; 61
    d530:	be b7       	in	r27, 0x3e	; 62
    d532:	11 96       	adiw	r26, 0x01	; 1
    d534:	ed 93       	st	X+, r30
    d536:	fc 93       	st	X, r31
    d538:	12 97       	sbiw	r26, 0x02	; 2
    d53a:	83 ef       	ldi	r24, 0xF3	; 243
    d53c:	99 e0       	ldi	r25, 0x09	; 9
    d53e:	3f c9       	rjmp	.-3458   	; 0xc7be <arb_console+0x248>
    d540:	ce 01       	movw	r24, r28
    d542:	85 5b       	subi	r24, 0xB5	; 181
    d544:	9f 4f       	sbci	r25, 0xFF	; 255
    d546:	6f e7       	ldi	r22, 0x7F	; 127
    d548:	73 e0       	ldi	r23, 0x03	; 3
    d54a:	0e 94 97 b0 	call	0x1612e	; 0x1612e <strcasecmp_P>
    d54e:	89 2b       	or	r24, r25
    d550:	71 f4       	brne	.+28     	; 0xd56e <arb_console+0xff8>
    d552:	c5 54       	subi	r28, 0x45	; 69
    d554:	df 4f       	sbci	r29, 0xFF	; 255
    d556:	88 81       	ld	r24, Y
    d558:	cb 5b       	subi	r28, 0xBB	; 187
    d55a:	d0 40       	sbci	r29, 0x00	; 0
    d55c:	81 30       	cpi	r24, 0x01	; 1
    d55e:	39 f4       	brne	.+14     	; 0xd56e <arb_console+0xff8>
    d560:	80 91 da 24 	lds	r24, 0x24DA
    d564:	90 91 db 24 	lds	r25, 0x24DB
    d568:	65 e0       	ldi	r22, 0x05	; 5
    d56a:	70 e0       	ldi	r23, 0x00	; 0
    d56c:	22 c0       	rjmp	.+68     	; 0xd5b2 <arb_console+0x103c>
    d56e:	ce 01       	movw	r24, r28
    d570:	85 5b       	subi	r24, 0xB5	; 181
    d572:	9f 4f       	sbci	r25, 0xFF	; 255
    d574:	6c e7       	ldi	r22, 0x7C	; 124
    d576:	73 e0       	ldi	r23, 0x03	; 3
    d578:	0e 94 97 b0 	call	0x1612e	; 0x1612e <strcasecmp_P>
    d57c:	89 2b       	or	r24, r25
    d57e:	39 f5       	brne	.+78     	; 0xd5ce <arb_console+0x1058>
    d580:	c5 54       	subi	r28, 0x45	; 69
    d582:	df 4f       	sbci	r29, 0xFF	; 255
    d584:	88 81       	ld	r24, Y
    d586:	cb 5b       	subi	r28, 0xBB	; 187
    d588:	d0 40       	sbci	r29, 0x00	; 0
    d58a:	82 30       	cpi	r24, 0x02	; 2
    d58c:	01 f5       	brne	.+64     	; 0xd5ce <arb_console+0x1058>
    d58e:	c0 51       	subi	r28, 0x10	; 16
    d590:	de 4f       	sbci	r29, 0xFE	; 254
    d592:	88 81       	ld	r24, Y
    d594:	99 81       	ldd	r25, Y+1	; 0x01
    d596:	c0 5f       	subi	r28, 0xF0	; 240
    d598:	d1 40       	sbci	r29, 0x01	; 1
    d59a:	69 e7       	ldi	r22, 0x79	; 121
    d59c:	73 e0       	ldi	r23, 0x03	; 3
    d59e:	0e 94 97 b0 	call	0x1612e	; 0x1612e <strcasecmp_P>
    d5a2:	89 2b       	or	r24, r25
    d5a4:	69 f4       	brne	.+26     	; 0xd5c0 <arb_console+0x104a>
    d5a6:	80 91 da 24 	lds	r24, 0x24DA
    d5aa:	90 91 db 24 	lds	r25, 0x24DB
    d5ae:	61 e0       	ldi	r22, 0x01	; 1
    d5b0:	70 e0       	ldi	r23, 0x00	; 0
    d5b2:	20 e0       	ldi	r18, 0x00	; 0
    d5b4:	30 e0       	ldi	r19, 0x00	; 0
    d5b6:	40 e0       	ldi	r20, 0x00	; 0
    d5b8:	50 e0       	ldi	r21, 0x00	; 0
    d5ba:	0e 94 4a 6d 	call	0xda94	; 0xda94 <arb_ioctl>
    d5be:	c3 c1       	rjmp	.+902    	; 0xd946 <arb_console+0x13d0>
    d5c0:	80 91 da 24 	lds	r24, 0x24DA
    d5c4:	90 91 db 24 	lds	r25, 0x24DB
    d5c8:	68 e0       	ldi	r22, 0x08	; 8
    d5ca:	70 e0       	ldi	r23, 0x00	; 0
    d5cc:	2d c0       	rjmp	.+90     	; 0xd628 <arb_console+0x10b2>
    d5ce:	ce 01       	movw	r24, r28
    d5d0:	85 5b       	subi	r24, 0xB5	; 181
    d5d2:	9f 4f       	sbci	r25, 0xFF	; 255
    d5d4:	63 e7       	ldi	r22, 0x73	; 115
    d5d6:	73 e0       	ldi	r23, 0x03	; 3
    d5d8:	0e 94 97 b0 	call	0x1612e	; 0x1612e <strcasecmp_P>
    d5dc:	89 2b       	or	r24, r25
    d5de:	71 f4       	brne	.+28     	; 0xd5fc <arb_console+0x1086>
    d5e0:	c5 54       	subi	r28, 0x45	; 69
    d5e2:	df 4f       	sbci	r29, 0xFF	; 255
    d5e4:	88 81       	ld	r24, Y
    d5e6:	cb 5b       	subi	r28, 0xBB	; 187
    d5e8:	d0 40       	sbci	r29, 0x00	; 0
    d5ea:	82 30       	cpi	r24, 0x02	; 2
    d5ec:	39 f4       	brne	.+14     	; 0xd5fc <arb_console+0x1086>
    d5ee:	80 91 da 24 	lds	r24, 0x24DA
    d5f2:	90 91 db 24 	lds	r25, 0x24DB
    d5f6:	67 e0       	ldi	r22, 0x07	; 7
    d5f8:	70 e0       	ldi	r23, 0x00	; 0
    d5fa:	16 c0       	rjmp	.+44     	; 0xd628 <arb_console+0x10b2>
    d5fc:	ce 01       	movw	r24, r28
    d5fe:	85 5b       	subi	r24, 0xB5	; 181
    d600:	9f 4f       	sbci	r25, 0xFF	; 255
    d602:	6d e6       	ldi	r22, 0x6D	; 109
    d604:	73 e0       	ldi	r23, 0x03	; 3
    d606:	0e 94 97 b0 	call	0x1612e	; 0x1612e <strcasecmp_P>
    d60a:	89 2b       	or	r24, r25
    d60c:	b1 f4       	brne	.+44     	; 0xd63a <arb_console+0x10c4>
    d60e:	c5 54       	subi	r28, 0x45	; 69
    d610:	df 4f       	sbci	r29, 0xFF	; 255
    d612:	88 81       	ld	r24, Y
    d614:	cb 5b       	subi	r28, 0xBB	; 187
    d616:	d0 40       	sbci	r29, 0x00	; 0
    d618:	82 30       	cpi	r24, 0x02	; 2
    d61a:	79 f4       	brne	.+30     	; 0xd63a <arb_console+0x10c4>
    d61c:	80 91 da 24 	lds	r24, 0x24DA
    d620:	90 91 db 24 	lds	r25, 0x24DB
    d624:	66 e0       	ldi	r22, 0x06	; 6
    d626:	70 e0       	ldi	r23, 0x00	; 0
    d628:	ce 50       	subi	r28, 0x0E	; 14
    d62a:	de 4f       	sbci	r29, 0xFE	; 254
    d62c:	28 81       	ld	r18, Y
    d62e:	39 81       	ldd	r19, Y+1	; 0x01
    d630:	4a 81       	ldd	r20, Y+2	; 0x02
    d632:	5b 81       	ldd	r21, Y+3	; 0x03
    d634:	c2 5f       	subi	r28, 0xF2	; 242
    d636:	d1 40       	sbci	r29, 0x01	; 1
    d638:	c0 cf       	rjmp	.-128    	; 0xd5ba <arb_console+0x1044>
    d63a:	ce 01       	movw	r24, r28
    d63c:	85 5b       	subi	r24, 0xB5	; 181
    d63e:	9f 4f       	sbci	r25, 0xFF	; 255
    d640:	6a e6       	ldi	r22, 0x6A	; 106
    d642:	73 e0       	ldi	r23, 0x03	; 3
    d644:	0e 94 97 b0 	call	0x1612e	; 0x1612e <strcasecmp_P>
    d648:	89 2b       	or	r24, r25
    d64a:	09 f0       	breq	.+2      	; 0xd64e <arb_console+0x10d8>
    d64c:	4d c0       	rjmp	.+154    	; 0xd6e8 <arb_console+0x1172>
    d64e:	c5 54       	subi	r28, 0x45	; 69
    d650:	df 4f       	sbci	r29, 0xFF	; 255
    d652:	88 81       	ld	r24, Y
    d654:	cb 5b       	subi	r28, 0xBB	; 187
    d656:	d0 40       	sbci	r29, 0x00	; 0
    d658:	82 30       	cpi	r24, 0x02	; 2
    d65a:	09 f0       	breq	.+2      	; 0xd65e <arb_console+0x10e8>
    d65c:	45 c0       	rjmp	.+138    	; 0xd6e8 <arb_console+0x1172>
    d65e:	80 91 da 24 	lds	r24, 0x24DA
    d662:	90 91 db 24 	lds	r25, 0x24DB
    d666:	69 e0       	ldi	r22, 0x09	; 9
    d668:	70 e0       	ldi	r23, 0x00	; 0
    d66a:	ce 50       	subi	r28, 0x0E	; 14
    d66c:	de 4f       	sbci	r29, 0xFE	; 254
    d66e:	28 81       	ld	r18, Y
    d670:	39 81       	ldd	r19, Y+1	; 0x01
    d672:	4a 81       	ldd	r20, Y+2	; 0x02
    d674:	5b 81       	ldd	r21, Y+3	; 0x03
    d676:	c2 5f       	subi	r28, 0xF2	; 242
    d678:	d1 40       	sbci	r29, 0x01	; 1
    d67a:	0e 94 4a 6d 	call	0xda94	; 0xda94 <arb_ioctl>
    d67e:	66 23       	and	r22, r22
    d680:	09 f0       	breq	.+2      	; 0xd684 <arb_console+0x110e>
    d682:	61 c1       	rjmp	.+706    	; 0xd946 <arb_console+0x13d0>
    d684:	80 91 d8 24 	lds	r24, 0x24D8
    d688:	90 91 d9 24 	lds	r25, 0x24D9
    d68c:	65 e0       	ldi	r22, 0x05	; 5
    d68e:	70 e0       	ldi	r23, 0x00	; 0
    d690:	ce 50       	subi	r28, 0x0E	; 14
    d692:	de 4f       	sbci	r29, 0xFE	; 254
    d694:	28 81       	ld	r18, Y
    d696:	39 81       	ldd	r19, Y+1	; 0x01
    d698:	4a 81       	ldd	r20, Y+2	; 0x02
    d69a:	5b 81       	ldd	r21, Y+3	; 0x03
    d69c:	c2 5f       	subi	r28, 0xF2	; 242
    d69e:	d1 40       	sbci	r29, 0x01	; 1
    d6a0:	0e 94 4a 6d 	call	0xda94	; 0xda94 <arb_ioctl>
    d6a4:	c0 51       	subi	r28, 0x10	; 16
    d6a6:	de 4f       	sbci	r29, 0xFE	; 254
    d6a8:	88 81       	ld	r24, Y
    d6aa:	99 81       	ldd	r25, Y+1	; 0x01
    d6ac:	c0 5f       	subi	r28, 0xF0	; 240
    d6ae:	d1 40       	sbci	r29, 0x01	; 1
    d6b0:	68 e6       	ldi	r22, 0x68	; 104
    d6b2:	73 e0       	ldi	r23, 0x03	; 3
    d6b4:	0e 94 97 b0 	call	0x1612e	; 0x1612e <strcasecmp_P>
    d6b8:	89 2b       	or	r24, r25
    d6ba:	59 f4       	brne	.+22     	; 0xd6d2 <arb_console+0x115c>
    d6bc:	80 91 d8 24 	lds	r24, 0x24D8
    d6c0:	90 91 d9 24 	lds	r25, 0x24D9
    d6c4:	68 e0       	ldi	r22, 0x08	; 8
    d6c6:	70 e0       	ldi	r23, 0x00	; 0
    d6c8:	22 e3       	ldi	r18, 0x32	; 50
    d6ca:	30 e0       	ldi	r19, 0x00	; 0
    d6cc:	40 e0       	ldi	r20, 0x00	; 0
    d6ce:	50 e0       	ldi	r21, 0x00	; 0
    d6d0:	74 cf       	rjmp	.-280    	; 0xd5ba <arb_console+0x1044>
    d6d2:	80 91 d8 24 	lds	r24, 0x24D8
    d6d6:	90 91 d9 24 	lds	r25, 0x24D9
    d6da:	68 e0       	ldi	r22, 0x08	; 8
    d6dc:	70 e0       	ldi	r23, 0x00	; 0
    d6de:	21 e3       	ldi	r18, 0x31	; 49
    d6e0:	30 e0       	ldi	r19, 0x00	; 0
    d6e2:	40 e0       	ldi	r20, 0x00	; 0
    d6e4:	50 e0       	ldi	r21, 0x00	; 0
    d6e6:	69 cf       	rjmp	.-302    	; 0xd5ba <arb_console+0x1044>
    d6e8:	ce 01       	movw	r24, r28
    d6ea:	85 5b       	subi	r24, 0xB5	; 181
    d6ec:	9f 4f       	sbci	r25, 0xFF	; 255
    d6ee:	63 e6       	ldi	r22, 0x63	; 99
    d6f0:	73 e0       	ldi	r23, 0x03	; 3
    d6f2:	0e 94 97 b0 	call	0x1612e	; 0x1612e <strcasecmp_P>
    d6f6:	89 2b       	or	r24, r25
    d6f8:	09 f0       	breq	.+2      	; 0xd6fc <arb_console+0x1186>
    d6fa:	ee c0       	rjmp	.+476    	; 0xd8d8 <arb_console+0x1362>
    d6fc:	c5 54       	subi	r28, 0x45	; 69
    d6fe:	df 4f       	sbci	r29, 0xFF	; 255
    d700:	88 81       	ld	r24, Y
    d702:	cb 5b       	subi	r28, 0xBB	; 187
    d704:	d0 40       	sbci	r29, 0x00	; 0
    d706:	82 30       	cpi	r24, 0x02	; 2
    d708:	09 f0       	breq	.+2      	; 0xd70c <arb_console+0x1196>
    d70a:	e6 c0       	rjmp	.+460    	; 0xd8d8 <arb_console+0x1362>
    d70c:	19 8e       	std	Y+25, r1	; 0x19
    d70e:	80 91 da 24 	lds	r24, 0x24DA
    d712:	90 91 db 24 	lds	r25, 0x24DB
    d716:	0e 94 27 6d 	call	0xda4e	; 0xda4e <arb_getDevName>
    d71a:	0d b7       	in	r16, 0x3d	; 61
    d71c:	1e b7       	in	r17, 0x3e	; 62
    d71e:	08 50       	subi	r16, 0x08	; 8
    d720:	10 40       	sbci	r17, 0x00	; 0
    d722:	0d bf       	out	0x3d, r16	; 61
    d724:	1e bf       	out	0x3e, r17	; 62
    d726:	ed b7       	in	r30, 0x3d	; 61
    d728:	fe b7       	in	r31, 0x3e	; 62
    d72a:	31 96       	adiw	r30, 0x01	; 1
    d72c:	2c eb       	ldi	r18, 0xBC	; 188
    d72e:	e2 2e       	mov	r14, r18
    d730:	f1 2c       	mov	r15, r1
    d732:	ec 0e       	add	r14, r28
    d734:	fd 1e       	adc	r15, r29
    d736:	ad b7       	in	r26, 0x3d	; 61
    d738:	be b7       	in	r27, 0x3e	; 62
    d73a:	11 96       	adiw	r26, 0x01	; 1
    d73c:	ed 92       	st	X+, r14
    d73e:	fc 92       	st	X, r15
    d740:	12 97       	sbiw	r26, 0x02	; 2
    d742:	05 ef       	ldi	r16, 0xF5	; 245
    d744:	11 e2       	ldi	r17, 0x21	; 33
    d746:	02 83       	std	Z+2, r16	; 0x02
    d748:	13 83       	std	Z+3, r17	; 0x03
    d74a:	84 83       	std	Z+4, r24	; 0x04
    d74c:	95 83       	std	Z+5, r25	; 0x05
    d74e:	c0 51       	subi	r28, 0x10	; 16
    d750:	de 4f       	sbci	r29, 0xFE	; 254
    d752:	28 81       	ld	r18, Y
    d754:	39 81       	ldd	r19, Y+1	; 0x01
    d756:	c0 5f       	subi	r28, 0xF0	; 240
    d758:	d1 40       	sbci	r29, 0x01	; 1
    d75a:	26 83       	std	Z+6, r18	; 0x06
    d75c:	37 83       	std	Z+7, r19	; 0x07
    d75e:	0e 94 7a b1 	call	0x162f4	; 0x162f4 <sprintf>
    d762:	4d b7       	in	r20, 0x3d	; 61
    d764:	5e b7       	in	r21, 0x3e	; 62
    d766:	48 5f       	subi	r20, 0xF8	; 248
    d768:	5f 4f       	sbci	r21, 0xFF	; 255
    d76a:	4d bf       	out	0x3d, r20	; 61
    d76c:	5e bf       	out	0x3e, r21	; 62
    d76e:	c7 01       	movw	r24, r14
    d770:	61 e0       	ldi	r22, 0x01	; 1
    d772:	0e 94 22 6f 	call	0xde44	; 0xde44 <arb_open>
    d776:	8b 83       	std	Y+3, r24	; 0x03
    d778:	9c 83       	std	Y+4, r25	; 0x04
    d77a:	8b 81       	ldd	r24, Y+3	; 0x03
    d77c:	9c 81       	ldd	r25, Y+4	; 0x04
    d77e:	18 16       	cp	r1, r24
    d780:	19 06       	cpc	r1, r25
    d782:	0c f0       	brlt	.+2      	; 0xd786 <arb_console+0x1210>
    d784:	e0 c0       	rjmp	.+448    	; 0xd946 <arb_console+0x13d0>
    d786:	8b 81       	ldd	r24, Y+3	; 0x03
    d788:	9c 81       	ldd	r25, Y+4	; 0x04
    d78a:	6a e0       	ldi	r22, 0x0A	; 10
    d78c:	70 e0       	ldi	r23, 0x00	; 0
    d78e:	20 e0       	ldi	r18, 0x00	; 0
    d790:	30 e0       	ldi	r19, 0x00	; 0
    d792:	40 e0       	ldi	r20, 0x00	; 0
    d794:	50 e0       	ldi	r21, 0x00	; 0
    d796:	0e 94 4a 6d 	call	0xda94	; 0xda94 <arb_ioctl>
    d79a:	5b 01       	movw	r10, r22
    d79c:	6c 01       	movw	r12, r24
    d79e:	ff 24       	eor	r15, r15
    d7a0:	95 e0       	ldi	r25, 0x05	; 5
    d7a2:	69 2e       	mov	r6, r25
    d7a4:	71 2c       	mov	r7, r1
    d7a6:	6c 0e       	add	r6, r28
    d7a8:	7d 1e       	adc	r7, r29
    d7aa:	8b 81       	ldd	r24, Y+3	; 0x03
    d7ac:	9c 81       	ldd	r25, Y+4	; 0x04
    d7ae:	b3 01       	movw	r22, r6
    d7b0:	44 e1       	ldi	r20, 0x14	; 20
    d7b2:	50 e0       	ldi	r21, 0x00	; 0
    d7b4:	0e 94 b7 6c 	call	0xd96e	; 0xd96e <arb_read>
    d7b8:	4c 01       	movw	r8, r24
    d7ba:	c3 01       	movw	r24, r6
    d7bc:	6a e0       	ldi	r22, 0x0A	; 10
    d7be:	70 e0       	ldi	r23, 0x00	; 0
    d7c0:	0e 94 ea b0 	call	0x161d4	; 0x161d4 <strchr>
    d7c4:	8c 01       	movw	r16, r24
    d7c6:	00 97       	sbiw	r24, 0x00	; 0
    d7c8:	09 f4       	brne	.+2      	; 0xd7cc <arb_console+0x1256>
    d7ca:	62 c0       	rjmp	.+196    	; 0xd890 <arb_console+0x131a>
    d7cc:	f3 94       	inc	r15
    d7ce:	54 e1       	ldi	r21, 0x14	; 20
    d7d0:	f5 16       	cp	r15, r21
    d7d2:	09 f0       	breq	.+2      	; 0xd7d6 <arb_console+0x1260>
    d7d4:	5d c0       	rjmp	.+186    	; 0xd890 <arb_console+0x131a>
    d7d6:	7c 01       	movw	r14, r24
    d7d8:	e6 18       	sub	r14, r6
    d7da:	f7 08       	sbc	r15, r7
    d7dc:	1e 14       	cp	r1, r14
    d7de:	1f 04       	cpc	r1, r15
    d7e0:	54 f4       	brge	.+20     	; 0xd7f6 <arb_console+0x1280>
    d7e2:	80 91 d8 24 	lds	r24, 0x24D8
    d7e6:	90 91 d9 24 	lds	r25, 0x24D9
    d7ea:	a7 01       	movw	r20, r14
    d7ec:	4f 5f       	subi	r20, 0xFF	; 255
    d7ee:	5f 4f       	sbci	r21, 0xFF	; 255
    d7f0:	b3 01       	movw	r22, r6
    d7f2:	0e 94 ef 6c 	call	0xd9de	; 0xd9de <arb_write>
    d7f6:	00 d0       	rcall	.+0      	; 0xd7f8 <arb_console+0x1282>
    d7f8:	0f 92       	push	r0
    d7fa:	ec eb       	ldi	r30, 0xBC	; 188
    d7fc:	f0 e0       	ldi	r31, 0x00	; 0
    d7fe:	ec 0f       	add	r30, r28
    d800:	fd 1f       	adc	r31, r29
    d802:	ad b7       	in	r26, 0x3d	; 61
    d804:	be b7       	in	r27, 0x3e	; 62
    d806:	11 96       	adiw	r26, 0x01	; 1
    d808:	ed 93       	st	X+, r30
    d80a:	fc 93       	st	X, r31
    d80c:	12 97       	sbiw	r26, 0x02	; 2
    d80e:	26 eb       	ldi	r18, 0xB6	; 182
    d810:	3c e0       	ldi	r19, 0x0C	; 12
    d812:	13 96       	adiw	r26, 0x03	; 3
    d814:	2d 93       	st	X+, r18
    d816:	3c 93       	st	X, r19
    d818:	14 97       	sbiw	r26, 0x04	; 4
    d81a:	0e 94 a5 b1 	call	0x1634a	; 0x1634a <sprintf_P>
    d81e:	ac 01       	movw	r20, r24
    d820:	80 91 d8 24 	lds	r24, 0x24D8
    d824:	90 91 d9 24 	lds	r25, 0x24D9
    d828:	0f 90       	pop	r0
    d82a:	0f 90       	pop	r0
    d82c:	0f 90       	pop	r0
    d82e:	0f 90       	pop	r0
    d830:	be 01       	movw	r22, r28
    d832:	64 54       	subi	r22, 0x44	; 68
    d834:	7f 4f       	sbci	r23, 0xFF	; 255
    d836:	0e 94 ef 6c 	call	0xd9de	; 0xd9de <arb_write>
    d83a:	80 91 d8 24 	lds	r24, 0x24D8
    d83e:	90 91 d9 24 	lds	r25, 0x24D9
    d842:	63 e0       	ldi	r22, 0x03	; 3
    d844:	70 e0       	ldi	r23, 0x00	; 0
    d846:	c4 51       	subi	r28, 0x14	; 20
    d848:	de 4f       	sbci	r29, 0xFE	; 254
    d84a:	28 81       	ld	r18, Y
    d84c:	39 81       	ldd	r19, Y+1	; 0x01
    d84e:	4a 81       	ldd	r20, Y+2	; 0x02
    d850:	5b 81       	ldd	r21, Y+3	; 0x03
    d852:	cc 5e       	subi	r28, 0xEC	; 236
    d854:	d1 40       	sbci	r29, 0x01	; 1
    d856:	0e 94 4a 6d 	call	0xda94	; 0xda94 <arb_ioctl>
    d85a:	ce 01       	movw	r24, r28
    d85c:	85 5b       	subi	r24, 0xB5	; 181
    d85e:	9f 4f       	sbci	r25, 0xFF	; 255
    d860:	6b ef       	ldi	r22, 0xFB	; 251
    d862:	71 e2       	ldi	r23, 0x21	; 33
    d864:	0e 94 d7 b0 	call	0x161ae	; 0x161ae <strcasecmp>
    d868:	89 2b       	or	r24, r25
    d86a:	89 f1       	breq	.+98     	; 0xd8ce <arb_console+0x1358>
    d86c:	a7 01       	movw	r20, r14
    d86e:	40 95       	com	r20
    d870:	50 95       	com	r21
    d872:	48 0d       	add	r20, r8
    d874:	59 1d       	adc	r21, r9
    d876:	14 16       	cp	r1, r20
    d878:	15 06       	cpc	r1, r21
    d87a:	cc f4       	brge	.+50     	; 0xd8ae <arb_console+0x1338>
    d87c:	80 91 d8 24 	lds	r24, 0x24D8
    d880:	90 91 d9 24 	lds	r25, 0x24D9
    d884:	0f 5f       	subi	r16, 0xFF	; 255
    d886:	1f 4f       	sbci	r17, 0xFF	; 255
    d888:	b8 01       	movw	r22, r16
    d88a:	0e 94 ef 6c 	call	0xd9de	; 0xd9de <arb_write>
    d88e:	0f c0       	rjmp	.+30     	; 0xd8ae <arb_console+0x1338>
    d890:	33 e1       	ldi	r19, 0x13	; 19
    d892:	3f 15       	cp	r19, r15
    d894:	60 f0       	brcs	.+24     	; 0xd8ae <arb_console+0x1338>
    d896:	18 14       	cp	r1, r8
    d898:	19 04       	cpc	r1, r9
    d89a:	54 f4       	brge	.+20     	; 0xd8b0 <arb_console+0x133a>
    d89c:	80 91 d8 24 	lds	r24, 0x24D8
    d8a0:	90 91 d9 24 	lds	r25, 0x24D9
    d8a4:	b3 01       	movw	r22, r6
    d8a6:	a4 01       	movw	r20, r8
    d8a8:	0e 94 ef 6c 	call	0xd9de	; 0xd9de <arb_write>
    d8ac:	01 c0       	rjmp	.+2      	; 0xd8b0 <arb_console+0x133a>
    d8ae:	ff 24       	eor	r15, r15
    d8b0:	c4 01       	movw	r24, r8
    d8b2:	aa 27       	eor	r26, r26
    d8b4:	97 fd       	sbrc	r25, 7
    d8b6:	a0 95       	com	r26
    d8b8:	ba 2f       	mov	r27, r26
    d8ba:	a8 1a       	sub	r10, r24
    d8bc:	b9 0a       	sbc	r11, r25
    d8be:	ca 0a       	sbc	r12, r26
    d8c0:	db 0a       	sbc	r13, r27
    d8c2:	1a 14       	cp	r1, r10
    d8c4:	1b 04       	cpc	r1, r11
    d8c6:	1c 04       	cpc	r1, r12
    d8c8:	1d 04       	cpc	r1, r13
    d8ca:	0c f4       	brge	.+2      	; 0xd8ce <arb_console+0x1358>
    d8cc:	6e cf       	rjmp	.-292    	; 0xd7aa <arb_console+0x1234>
    d8ce:	8b 81       	ldd	r24, Y+3	; 0x03
    d8d0:	9c 81       	ldd	r25, Y+4	; 0x04
    d8d2:	0e 94 8e 6d 	call	0xdb1c	; 0xdb1c <arb_close>
    d8d6:	37 c0       	rjmp	.+110    	; 0xd946 <arb_console+0x13d0>
    d8d8:	e0 91 dc 24 	lds	r30, 0x24DC
    d8dc:	f0 91 dd 24 	lds	r31, 0x24DD
    d8e0:	30 97       	sbiw	r30, 0x00	; 0
    d8e2:	89 f1       	breq	.+98     	; 0xd946 <arb_console+0x13d0>
    d8e4:	80 91 d8 24 	lds	r24, 0x24D8
    d8e8:	90 91 d9 24 	lds	r25, 0x24D9
    d8ec:	be 01       	movw	r22, r28
    d8ee:	64 54       	subi	r22, 0x44	; 68
    d8f0:	7f 4f       	sbci	r23, 0xFF	; 255
    d8f2:	ae 01       	movw	r20, r28
    d8f4:	45 5b       	subi	r20, 0xB5	; 181
    d8f6:	5f 4f       	sbci	r21, 0xFF	; 255
    d8f8:	19 95       	eicall
    d8fa:	88 23       	and	r24, r24
    d8fc:	21 f5       	brne	.+72     	; 0xd946 <arb_console+0x13d0>
    d8fe:	00 d0       	rcall	.+0      	; 0xd900 <arb_console+0x138a>
    d900:	0f 92       	push	r0
    d902:	ec eb       	ldi	r30, 0xBC	; 188
    d904:	f0 e0       	ldi	r31, 0x00	; 0
    d906:	ec 0f       	add	r30, r28
    d908:	fd 1f       	adc	r31, r29
    d90a:	ad b7       	in	r26, 0x3d	; 61
    d90c:	be b7       	in	r27, 0x3e	; 62
    d90e:	11 96       	adiw	r26, 0x01	; 1
    d910:	ed 93       	st	X+, r30
    d912:	fc 93       	st	X, r31
    d914:	12 97       	sbiw	r26, 0x02	; 2
    d916:	85 e5       	ldi	r24, 0x55	; 85
    d918:	e8 2e       	mov	r14, r24
    d91a:	83 e0       	ldi	r24, 0x03	; 3
    d91c:	f8 2e       	mov	r15, r24
    d91e:	13 96       	adiw	r26, 0x03	; 3
    d920:	ed 92       	st	X+, r14
    d922:	fc 92       	st	X, r15
    d924:	14 97       	sbiw	r26, 0x04	; 4
    d926:	0e 94 a5 b1 	call	0x1634a	; 0x1634a <sprintf_P>
    d92a:	ac 01       	movw	r20, r24
    d92c:	80 91 d8 24 	lds	r24, 0x24D8
    d930:	90 91 d9 24 	lds	r25, 0x24D9
    d934:	0f 90       	pop	r0
    d936:	0f 90       	pop	r0
    d938:	0f 90       	pop	r0
    d93a:	0f 90       	pop	r0
    d93c:	be 01       	movw	r22, r28
    d93e:	64 54       	subi	r22, 0x44	; 68
    d940:	7f 4f       	sbci	r23, 0xFF	; 255
    d942:	0e 94 ef 6c 	call	0xd9de	; 0xd9de <arb_write>
    d946:	80 91 d8 24 	lds	r24, 0x24D8
    d94a:	90 91 d9 24 	lds	r25, 0x24D9
    d94e:	64 e0       	ldi	r22, 0x04	; 4
    d950:	70 e0       	ldi	r23, 0x00	; 0
    d952:	20 e0       	ldi	r18, 0x00	; 0
    d954:	30 e0       	ldi	r19, 0x00	; 0
    d956:	40 e0       	ldi	r20, 0x00	; 0
    d958:	50 e0       	ldi	r21, 0x00	; 0
    d95a:	0e 94 4a 6d 	call	0xda94	; 0xda94 <arb_ioctl>
    d95e:	0c 94 ae 63 	jmp	0xc75c	; 0xc75c <arb_console+0x1e6>

0000d962 <arb_getDeviceList>:
    d962:	20 91 3c 22 	lds	r18, 0x223C
    d966:	30 91 3d 22 	lds	r19, 0x223D
    d96a:	c9 01       	movw	r24, r18
    d96c:	08 95       	ret

0000d96e <arb_read>:
    d96e:	0f 93       	push	r16
    d970:	1f 93       	push	r17
    d972:	df 93       	push	r29
    d974:	cf 93       	push	r28
    d976:	0f 92       	push	r0
    d978:	0f 92       	push	r0
    d97a:	cd b7       	in	r28, 0x3d	; 61
    d97c:	de b7       	in	r29, 0x3e	; 62
    d97e:	89 83       	std	Y+1, r24	; 0x01
    d980:	9a 83       	std	Y+2, r25	; 0x02
    d982:	8a 01       	movw	r16, r20
    d984:	e9 81       	ldd	r30, Y+1	; 0x01
    d986:	fa 81       	ldd	r31, Y+2	; 0x02
    d988:	40 81       	ld	r20, Z
    d98a:	51 81       	ldd	r21, Z+1	; 0x01
    d98c:	e9 81       	ldd	r30, Y+1	; 0x01
    d98e:	fa 81       	ldd	r31, Y+2	; 0x02
    d990:	20 91 4a 22 	lds	r18, 0x224A
    d994:	30 91 4b 22 	lds	r19, 0x224B
    d998:	84 81       	ldd	r24, Z+4	; 0x04
    d99a:	95 81       	ldd	r25, Z+5	; 0x05
    d99c:	82 17       	cp	r24, r18
    d99e:	93 07       	cpc	r25, r19
    d9a0:	19 f0       	breq	.+6      	; 0xd9a8 <arb_read+0x3a>
    d9a2:	29 ef       	ldi	r18, 0xF9	; 249
    d9a4:	3f ef       	ldi	r19, 0xFF	; 255
    d9a6:	13 c0       	rjmp	.+38     	; 0xd9ce <arb_read+0x60>
    d9a8:	da 01       	movw	r26, r20
    d9aa:	ed 91       	ld	r30, X+
    d9ac:	fc 91       	ld	r31, X
    d9ae:	11 97       	sbiw	r26, 0x01	; 1
    d9b0:	03 88       	ldd	r0, Z+19	; 0x13
    d9b2:	f4 89       	ldd	r31, Z+20	; 0x14
    d9b4:	e0 2d       	mov	r30, r0
    d9b6:	30 97       	sbiw	r30, 0x00	; 0
    d9b8:	19 f4       	brne	.+6      	; 0xd9c0 <arb_read+0x52>
    d9ba:	2d ef       	ldi	r18, 0xFD	; 253
    d9bc:	3f ef       	ldi	r19, 0xFF	; 255
    d9be:	07 c0       	rjmp	.+14     	; 0xd9ce <arb_read+0x60>
    d9c0:	02 80       	ldd	r0, Z+2	; 0x02
    d9c2:	f3 81       	ldd	r31, Z+3	; 0x03
    d9c4:	e0 2d       	mov	r30, r0
    d9c6:	cd 01       	movw	r24, r26
    d9c8:	a8 01       	movw	r20, r16
    d9ca:	19 95       	eicall
    d9cc:	9c 01       	movw	r18, r24
    d9ce:	c9 01       	movw	r24, r18
    d9d0:	0f 90       	pop	r0
    d9d2:	0f 90       	pop	r0
    d9d4:	cf 91       	pop	r28
    d9d6:	df 91       	pop	r29
    d9d8:	1f 91       	pop	r17
    d9da:	0f 91       	pop	r16
    d9dc:	08 95       	ret

0000d9de <arb_write>:
    d9de:	0f 93       	push	r16
    d9e0:	1f 93       	push	r17
    d9e2:	df 93       	push	r29
    d9e4:	cf 93       	push	r28
    d9e6:	0f 92       	push	r0
    d9e8:	0f 92       	push	r0
    d9ea:	cd b7       	in	r28, 0x3d	; 61
    d9ec:	de b7       	in	r29, 0x3e	; 62
    d9ee:	89 83       	std	Y+1, r24	; 0x01
    d9f0:	9a 83       	std	Y+2, r25	; 0x02
    d9f2:	8a 01       	movw	r16, r20
    d9f4:	e9 81       	ldd	r30, Y+1	; 0x01
    d9f6:	fa 81       	ldd	r31, Y+2	; 0x02
    d9f8:	40 81       	ld	r20, Z
    d9fa:	51 81       	ldd	r21, Z+1	; 0x01
    d9fc:	e9 81       	ldd	r30, Y+1	; 0x01
    d9fe:	fa 81       	ldd	r31, Y+2	; 0x02
    da00:	20 91 4a 22 	lds	r18, 0x224A
    da04:	30 91 4b 22 	lds	r19, 0x224B
    da08:	84 81       	ldd	r24, Z+4	; 0x04
    da0a:	95 81       	ldd	r25, Z+5	; 0x05
    da0c:	82 17       	cp	r24, r18
    da0e:	93 07       	cpc	r25, r19
    da10:	19 f0       	breq	.+6      	; 0xda18 <arb_write+0x3a>
    da12:	29 ef       	ldi	r18, 0xF9	; 249
    da14:	3f ef       	ldi	r19, 0xFF	; 255
    da16:	13 c0       	rjmp	.+38     	; 0xda3e <arb_write+0x60>
    da18:	da 01       	movw	r26, r20
    da1a:	ed 91       	ld	r30, X+
    da1c:	fc 91       	ld	r31, X
    da1e:	11 97       	sbiw	r26, 0x01	; 1
    da20:	03 88       	ldd	r0, Z+19	; 0x13
    da22:	f4 89       	ldd	r31, Z+20	; 0x14
    da24:	e0 2d       	mov	r30, r0
    da26:	30 97       	sbiw	r30, 0x00	; 0
    da28:	19 f4       	brne	.+6      	; 0xda30 <arb_write+0x52>
    da2a:	2d ef       	ldi	r18, 0xFD	; 253
    da2c:	3f ef       	ldi	r19, 0xFF	; 255
    da2e:	07 c0       	rjmp	.+14     	; 0xda3e <arb_write+0x60>
    da30:	04 80       	ldd	r0, Z+4	; 0x04
    da32:	f5 81       	ldd	r31, Z+5	; 0x05
    da34:	e0 2d       	mov	r30, r0
    da36:	cd 01       	movw	r24, r26
    da38:	a8 01       	movw	r20, r16
    da3a:	19 95       	eicall
    da3c:	9c 01       	movw	r18, r24
    da3e:	c9 01       	movw	r24, r18
    da40:	0f 90       	pop	r0
    da42:	0f 90       	pop	r0
    da44:	cf 91       	pop	r28
    da46:	df 91       	pop	r29
    da48:	1f 91       	pop	r17
    da4a:	0f 91       	pop	r16
    da4c:	08 95       	ret

0000da4e <arb_getDevName>:
    da4e:	df 93       	push	r29
    da50:	cf 93       	push	r28
    da52:	0f 92       	push	r0
    da54:	0f 92       	push	r0
    da56:	cd b7       	in	r28, 0x3d	; 61
    da58:	de b7       	in	r29, 0x3e	; 62
    da5a:	89 83       	std	Y+1, r24	; 0x01
    da5c:	9a 83       	std	Y+2, r25	; 0x02
    da5e:	e9 81       	ldd	r30, Y+1	; 0x01
    da60:	fa 81       	ldd	r31, Y+2	; 0x02
    da62:	a0 81       	ld	r26, Z
    da64:	b1 81       	ldd	r27, Z+1	; 0x01
    da66:	e9 81       	ldd	r30, Y+1	; 0x01
    da68:	fa 81       	ldd	r31, Y+2	; 0x02
    da6a:	20 91 4a 22 	lds	r18, 0x224A
    da6e:	30 91 4b 22 	lds	r19, 0x224B
    da72:	84 81       	ldd	r24, Z+4	; 0x04
    da74:	95 81       	ldd	r25, Z+5	; 0x05
    da76:	82 17       	cp	r24, r18
    da78:	93 07       	cpc	r25, r19
    da7a:	19 f0       	breq	.+6      	; 0xda82 <arb_getDevName+0x34>
    da7c:	e0 e0       	ldi	r30, 0x00	; 0
    da7e:	f0 e0       	ldi	r31, 0x00	; 0
    da80:	03 c0       	rjmp	.+6      	; 0xda88 <arb_getDevName+0x3a>
    da82:	ed 91       	ld	r30, X+
    da84:	fc 91       	ld	r31, X
    da86:	32 96       	adiw	r30, 0x02	; 2
    da88:	cf 01       	movw	r24, r30
    da8a:	0f 90       	pop	r0
    da8c:	0f 90       	pop	r0
    da8e:	cf 91       	pop	r28
    da90:	df 91       	pop	r29
    da92:	08 95       	ret

0000da94 <arb_ioctl>:
    da94:	ef 92       	push	r14
    da96:	ff 92       	push	r15
    da98:	0f 93       	push	r16
    da9a:	1f 93       	push	r17
    da9c:	df 93       	push	r29
    da9e:	cf 93       	push	r28
    daa0:	0f 92       	push	r0
    daa2:	0f 92       	push	r0
    daa4:	cd b7       	in	r28, 0x3d	; 61
    daa6:	de b7       	in	r29, 0x3e	; 62
    daa8:	89 83       	std	Y+1, r24	; 0x01
    daaa:	9a 83       	std	Y+2, r25	; 0x02
    daac:	79 01       	movw	r14, r18
    daae:	8a 01       	movw	r16, r20
    dab0:	e9 81       	ldd	r30, Y+1	; 0x01
    dab2:	fa 81       	ldd	r31, Y+2	; 0x02
    dab4:	40 81       	ld	r20, Z
    dab6:	51 81       	ldd	r21, Z+1	; 0x01
    dab8:	e9 81       	ldd	r30, Y+1	; 0x01
    daba:	fa 81       	ldd	r31, Y+2	; 0x02
    dabc:	20 91 4a 22 	lds	r18, 0x224A
    dac0:	30 91 4b 22 	lds	r19, 0x224B
    dac4:	84 81       	ldd	r24, Z+4	; 0x04
    dac6:	95 81       	ldd	r25, Z+5	; 0x05
    dac8:	82 17       	cp	r24, r18
    daca:	93 07       	cpc	r25, r19
    dacc:	29 f0       	breq	.+10     	; 0xdad8 <arb_ioctl+0x44>
    dace:	29 ef       	ldi	r18, 0xF9	; 249
    dad0:	3f ef       	ldi	r19, 0xFF	; 255
    dad2:	4f ef       	ldi	r20, 0xFF	; 255
    dad4:	5f ef       	ldi	r21, 0xFF	; 255
    dad6:	17 c0       	rjmp	.+46     	; 0xdb06 <arb_ioctl+0x72>
    dad8:	da 01       	movw	r26, r20
    dada:	ed 91       	ld	r30, X+
    dadc:	fc 91       	ld	r31, X
    dade:	11 97       	sbiw	r26, 0x01	; 1
    dae0:	03 88       	ldd	r0, Z+19	; 0x13
    dae2:	f4 89       	ldd	r31, Z+20	; 0x14
    dae4:	e0 2d       	mov	r30, r0
    dae6:	30 97       	sbiw	r30, 0x00	; 0
    dae8:	29 f4       	brne	.+10     	; 0xdaf4 <arb_ioctl+0x60>
    daea:	2d ef       	ldi	r18, 0xFD	; 253
    daec:	3f ef       	ldi	r19, 0xFF	; 255
    daee:	4f ef       	ldi	r20, 0xFF	; 255
    daf0:	5f ef       	ldi	r21, 0xFF	; 255
    daf2:	09 c0       	rjmp	.+18     	; 0xdb06 <arb_ioctl+0x72>
    daf4:	06 80       	ldd	r0, Z+6	; 0x06
    daf6:	f7 81       	ldd	r31, Z+7	; 0x07
    daf8:	e0 2d       	mov	r30, r0
    dafa:	cd 01       	movw	r24, r26
    dafc:	a8 01       	movw	r20, r16
    dafe:	97 01       	movw	r18, r14
    db00:	19 95       	eicall
    db02:	9b 01       	movw	r18, r22
    db04:	ac 01       	movw	r20, r24
    db06:	b9 01       	movw	r22, r18
    db08:	ca 01       	movw	r24, r20
    db0a:	0f 90       	pop	r0
    db0c:	0f 90       	pop	r0
    db0e:	cf 91       	pop	r28
    db10:	df 91       	pop	r29
    db12:	1f 91       	pop	r17
    db14:	0f 91       	pop	r16
    db16:	ff 90       	pop	r15
    db18:	ef 90       	pop	r14
    db1a:	08 95       	ret

0000db1c <arb_close>:
    db1c:	0f 93       	push	r16
    db1e:	1f 93       	push	r17
    db20:	df 93       	push	r29
    db22:	cf 93       	push	r28
    db24:	0f 92       	push	r0
    db26:	0f 92       	push	r0
    db28:	cd b7       	in	r28, 0x3d	; 61
    db2a:	de b7       	in	r29, 0x3e	; 62
    db2c:	89 83       	std	Y+1, r24	; 0x01
    db2e:	9a 83       	std	Y+2, r25	; 0x02
    db30:	e9 81       	ldd	r30, Y+1	; 0x01
    db32:	fa 81       	ldd	r31, Y+2	; 0x02
    db34:	40 81       	ld	r20, Z
    db36:	51 81       	ldd	r21, Z+1	; 0x01
    db38:	e9 81       	ldd	r30, Y+1	; 0x01
    db3a:	fa 81       	ldd	r31, Y+2	; 0x02
    db3c:	20 91 4a 22 	lds	r18, 0x224A
    db40:	30 91 4b 22 	lds	r19, 0x224B
    db44:	84 81       	ldd	r24, Z+4	; 0x04
    db46:	95 81       	ldd	r25, Z+5	; 0x05
    db48:	82 17       	cp	r24, r18
    db4a:	93 07       	cpc	r25, r19
    db4c:	11 f0       	breq	.+4      	; 0xdb52 <arb_close+0x36>
    db4e:	89 ef       	ldi	r24, 0xF9	; 249
    db50:	21 c0       	rjmp	.+66     	; 0xdb94 <arb_close+0x78>
    db52:	8a 01       	movw	r16, r20
    db54:	d8 01       	movw	r26, r16
    db56:	ed 91       	ld	r30, X+
    db58:	fc 91       	ld	r31, X
    db5a:	03 88       	ldd	r0, Z+19	; 0x13
    db5c:	f4 89       	ldd	r31, Z+20	; 0x14
    db5e:	e0 2d       	mov	r30, r0
    db60:	30 97       	sbiw	r30, 0x00	; 0
    db62:	11 f4       	brne	.+4      	; 0xdb68 <arb_close+0x4c>
    db64:	8d ef       	ldi	r24, 0xFD	; 253
    db66:	16 c0       	rjmp	.+44     	; 0xdb94 <arb_close+0x78>
    db68:	00 84       	ldd	r0, Z+8	; 0x08
    db6a:	f1 85       	ldd	r31, Z+9	; 0x09
    db6c:	e0 2d       	mov	r30, r0
    db6e:	c8 01       	movw	r24, r16
    db70:	19 95       	eicall
    db72:	87 fd       	sbrc	r24, 7
    db74:	0f c0       	rjmp	.+30     	; 0xdb94 <arb_close+0x78>
    db76:	d8 01       	movw	r26, r16
    db78:	ed 91       	ld	r30, X+
    db7a:	fc 91       	ld	r31, X
    db7c:	82 89       	ldd	r24, Z+18	; 0x12
    db7e:	81 50       	subi	r24, 0x01	; 1
    db80:	82 8b       	std	Z+18, r24	; 0x12
    db82:	80 91 4a 22 	lds	r24, 0x224A
    db86:	90 91 4b 22 	lds	r25, 0x224B
    db8a:	69 81       	ldd	r22, Y+1	; 0x01
    db8c:	7a 81       	ldd	r23, Y+2	; 0x02
    db8e:	0e 94 c4 89 	call	0x11388	; 0x11388 <utl_destroyLink>
    db92:	80 e0       	ldi	r24, 0x00	; 0
    db94:	0f 90       	pop	r0
    db96:	0f 90       	pop	r0
    db98:	cf 91       	pop	r28
    db9a:	df 91       	pop	r29
    db9c:	1f 91       	pop	r17
    db9e:	0f 91       	pop	r16
    dba0:	08 95       	ret

0000dba2 <arb_getDeviceLinkByName>:
    dba2:	ef 92       	push	r14
    dba4:	ff 92       	push	r15
    dba6:	0f 93       	push	r16
    dba8:	1f 93       	push	r17
    dbaa:	df 93       	push	r29
    dbac:	cf 93       	push	r28
    dbae:	0f 92       	push	r0
    dbb0:	0f 92       	push	r0
    dbb2:	cd b7       	in	r28, 0x3d	; 61
    dbb4:	de b7       	in	r29, 0x3e	; 62
    dbb6:	7c 01       	movw	r14, r24
    dbb8:	e0 91 3c 22 	lds	r30, 0x223C
    dbbc:	f0 91 3d 22 	lds	r31, 0x223D
    dbc0:	02 81       	ldd	r16, Z+2	; 0x02
    dbc2:	13 81       	ldd	r17, Z+3	; 0x03
    dbc4:	e0 91 3c 22 	lds	r30, 0x223C
    dbc8:	f0 91 3d 22 	lds	r31, 0x223D
    dbcc:	11 c0       	rjmp	.+34     	; 0xdbf0 <arb_getDeviceLinkByName+0x4e>
    dbce:	e9 81       	ldd	r30, Y+1	; 0x01
    dbd0:	fa 81       	ldd	r31, Y+2	; 0x02
    dbd2:	80 81       	ld	r24, Z
    dbd4:	91 81       	ldd	r25, Z+1	; 0x01
    dbd6:	02 96       	adiw	r24, 0x02	; 2
    dbd8:	b7 01       	movw	r22, r14
    dbda:	0e 94 f5 b0 	call	0x161ea	; 0x161ea <strcmp>
    dbde:	00 97       	sbiw	r24, 0x00	; 0
    dbe0:	19 f4       	brne	.+6      	; 0xdbe8 <arb_getDeviceLinkByName+0x46>
    dbe2:	29 81       	ldd	r18, Y+1	; 0x01
    dbe4:	3a 81       	ldd	r19, Y+2	; 0x02
    dbe6:	0d c0       	rjmp	.+26     	; 0xdc02 <arb_getDeviceLinkByName+0x60>
    dbe8:	01 50       	subi	r16, 0x01	; 1
    dbea:	10 40       	sbci	r17, 0x00	; 0
    dbec:	e9 81       	ldd	r30, Y+1	; 0x01
    dbee:	fa 81       	ldd	r31, Y+2	; 0x02
    dbf0:	80 85       	ldd	r24, Z+8	; 0x08
    dbf2:	91 85       	ldd	r25, Z+9	; 0x09
    dbf4:	89 83       	std	Y+1, r24	; 0x01
    dbf6:	9a 83       	std	Y+2, r25	; 0x02
    dbf8:	10 16       	cp	r1, r16
    dbfa:	11 06       	cpc	r1, r17
    dbfc:	44 f3       	brlt	.-48     	; 0xdbce <arb_getDeviceLinkByName+0x2c>
    dbfe:	27 ef       	ldi	r18, 0xF7	; 247
    dc00:	3f ef       	ldi	r19, 0xFF	; 255
    dc02:	c9 01       	movw	r24, r18
    dc04:	0f 90       	pop	r0
    dc06:	0f 90       	pop	r0
    dc08:	cf 91       	pop	r28
    dc0a:	df 91       	pop	r29
    dc0c:	1f 91       	pop	r17
    dc0e:	0f 91       	pop	r16
    dc10:	ff 90       	pop	r15
    dc12:	ef 90       	pop	r14
    dc14:	08 95       	ret

0000dc16 <arb_destroyDevice>:
    dc16:	ef 92       	push	r14
    dc18:	ff 92       	push	r15
    dc1a:	0f 93       	push	r16
    dc1c:	1f 93       	push	r17
    dc1e:	df 93       	push	r29
    dc20:	cf 93       	push	r28
    dc22:	0f 92       	push	r0
    dc24:	cd b7       	in	r28, 0x3d	; 61
    dc26:	de b7       	in	r29, 0x3e	; 62
    dc28:	2f b7       	in	r18, 0x3f	; 63
    dc2a:	29 83       	std	Y+1, r18	; 0x01
    dc2c:	f8 94       	cli
    dc2e:	0e 94 d1 6d 	call	0xdba2	; 0xdba2 <arb_getDeviceLinkByName>
    dc32:	80 93 e2 24 	sts	0x24E2, r24
    dc36:	90 93 e3 24 	sts	0x24E3, r25
    dc3a:	80 91 e2 24 	lds	r24, 0x24E2
    dc3e:	90 91 e3 24 	lds	r25, 0x24E3
    dc42:	87 5f       	subi	r24, 0xF7	; 247
    dc44:	9f 4f       	sbci	r25, 0xFF	; 255
    dc46:	21 f4       	brne	.+8      	; 0xdc50 <arb_destroyDevice+0x3a>
    dc48:	89 81       	ldd	r24, Y+1	; 0x01
    dc4a:	8f bf       	out	0x3f, r24	; 63
    dc4c:	87 ef       	ldi	r24, 0xF7	; 247
    dc4e:	54 c0       	rjmp	.+168    	; 0xdcf8 <arb_destroyDevice+0xe2>
    dc50:	e0 91 e2 24 	lds	r30, 0x24E2
    dc54:	f0 91 e3 24 	lds	r31, 0x24E3
    dc58:	e0 80       	ld	r14, Z
    dc5a:	f1 80       	ldd	r15, Z+1	; 0x01
    dc5c:	e0 91 4a 22 	lds	r30, 0x224A
    dc60:	f0 91 4b 22 	lds	r31, 0x224B
    dc64:	02 81       	ldd	r16, Z+2	; 0x02
    dc66:	13 81       	ldd	r17, Z+3	; 0x03
    dc68:	e0 91 4a 22 	lds	r30, 0x224A
    dc6c:	f0 91 4b 22 	lds	r31, 0x224B
    dc70:	2d c0       	rjmp	.+90     	; 0xdccc <arb_destroyDevice+0xb6>
    dc72:	e0 91 e0 24 	lds	r30, 0x24E0
    dc76:	f0 91 e1 24 	lds	r31, 0x24E1
    dc7a:	a0 81       	ld	r26, Z
    dc7c:	b1 81       	ldd	r27, Z+1	; 0x01
    dc7e:	e0 91 e0 24 	lds	r30, 0x24E0
    dc82:	f0 91 e1 24 	lds	r31, 0x24E1
    dc86:	82 85       	ldd	r24, Z+10	; 0x0a
    dc88:	93 85       	ldd	r25, Z+11	; 0x0b
    dc8a:	80 93 de 24 	sts	0x24DE, r24
    dc8e:	90 93 df 24 	sts	0x24DF, r25
    dc92:	8d 91       	ld	r24, X+
    dc94:	9c 91       	ld	r25, X
    dc96:	8e 15       	cp	r24, r14
    dc98:	9f 05       	cpc	r25, r15
    dc9a:	91 f4       	brne	.+36     	; 0xdcc0 <arb_destroyDevice+0xaa>
    dc9c:	80 91 4a 22 	lds	r24, 0x224A
    dca0:	90 91 4b 22 	lds	r25, 0x224B
    dca4:	60 91 e0 24 	lds	r22, 0x24E0
    dca8:	70 91 e1 24 	lds	r23, 0x24E1
    dcac:	0e 94 c4 89 	call	0x11388	; 0x11388 <utl_destroyLink>
    dcb0:	80 91 de 24 	lds	r24, 0x24DE
    dcb4:	90 91 df 24 	lds	r25, 0x24DF
    dcb8:	80 93 e0 24 	sts	0x24E0, r24
    dcbc:	90 93 e1 24 	sts	0x24E1, r25
    dcc0:	01 50       	subi	r16, 0x01	; 1
    dcc2:	10 40       	sbci	r17, 0x00	; 0
    dcc4:	e0 91 e0 24 	lds	r30, 0x24E0
    dcc8:	f0 91 e1 24 	lds	r31, 0x24E1
    dccc:	80 85       	ldd	r24, Z+8	; 0x08
    dcce:	91 85       	ldd	r25, Z+9	; 0x09
    dcd0:	80 93 e0 24 	sts	0x24E0, r24
    dcd4:	90 93 e1 24 	sts	0x24E1, r25
    dcd8:	10 16       	cp	r1, r16
    dcda:	11 06       	cpc	r1, r17
    dcdc:	54 f2       	brlt	.-108    	; 0xdc72 <arb_destroyDevice+0x5c>
    dcde:	80 91 3c 22 	lds	r24, 0x223C
    dce2:	90 91 3d 22 	lds	r25, 0x223D
    dce6:	60 91 e2 24 	lds	r22, 0x24E2
    dcea:	70 91 e3 24 	lds	r23, 0x24E3
    dcee:	0e 94 c4 89 	call	0x11388	; 0x11388 <utl_destroyLink>
    dcf2:	89 81       	ldd	r24, Y+1	; 0x01
    dcf4:	8f bf       	out	0x3f, r24	; 63
    dcf6:	80 e0       	ldi	r24, 0x00	; 0
    dcf8:	0f 90       	pop	r0
    dcfa:	cf 91       	pop	r28
    dcfc:	df 91       	pop	r29
    dcfe:	1f 91       	pop	r17
    dd00:	0f 91       	pop	r16
    dd02:	ff 90       	pop	r15
    dd04:	ef 90       	pop	r14
    dd06:	08 95       	ret

0000dd08 <arb_registerDevice>:
    dd08:	ef 92       	push	r14
    dd0a:	ff 92       	push	r15
    dd0c:	0f 93       	push	r16
    dd0e:	1f 93       	push	r17
    dd10:	df 93       	push	r29
    dd12:	cf 93       	push	r28
    dd14:	cd b7       	in	r28, 0x3d	; 61
    dd16:	de b7       	in	r29, 0x3e	; 62
    dd18:	29 97       	sbiw	r28, 0x09	; 9
    dd1a:	cd bf       	out	0x3d, r28	; 61
    dd1c:	de bf       	out	0x3e, r29	; 62
    dd1e:	18 2f       	mov	r17, r24
    dd20:	09 2f       	mov	r16, r25
    dd22:	68 87       	std	Y+8, r22	; 0x08
    dd24:	79 87       	std	Y+9, r23	; 0x09
    dd26:	7a 01       	movw	r14, r20
    dd28:	8f b7       	in	r24, 0x3f	; 63
    dd2a:	89 83       	std	Y+1, r24	; 0x01
    dd2c:	f8 94       	cli
    dd2e:	a1 2f       	mov	r26, r17
    dd30:	b9 2f       	mov	r27, r25
    dd32:	fd 01       	movw	r30, r26
    dd34:	01 90       	ld	r0, Z+
    dd36:	00 20       	and	r0, r0
    dd38:	e9 f7       	brne	.-6      	; 0xdd34 <arb_registerDevice+0x2c>
    dd3a:	31 97       	sbiw	r30, 0x01	; 1
    dd3c:	ea 1b       	sub	r30, r26
    dd3e:	fb 0b       	sbc	r31, r27
    dd40:	71 97       	sbiw	r30, 0x11	; 17
    dd42:	20 f0       	brcs	.+8      	; 0xdd4c <arb_registerDevice+0x44>
    dd44:	89 81       	ldd	r24, Y+1	; 0x01
    dd46:	8f bf       	out	0x3f, r24	; 63
    dd48:	8c ef       	ldi	r24, 0xFC	; 252
    dd4a:	72 c0       	rjmp	.+228    	; 0xde30 <arb_registerDevice+0x128>
    dd4c:	81 2f       	mov	r24, r17
    dd4e:	0e 94 d1 6d 	call	0xdba2	; 0xdba2 <arb_getDeviceLinkByName>
    dd52:	8a 83       	std	Y+2, r24	; 0x02
    dd54:	9b 83       	std	Y+3, r25	; 0x03
    dd56:	88 85       	ldd	r24, Y+8	; 0x08
    dd58:	99 85       	ldd	r25, Y+9	; 0x09
    dd5a:	78 2f       	mov	r23, r24
    dd5c:	69 2f       	mov	r22, r25
    dd5e:	e0 91 3c 22 	lds	r30, 0x223C
    dd62:	f0 91 3d 22 	lds	r31, 0x223D
    dd66:	42 81       	ldd	r20, Z+2	; 0x02
    dd68:	53 81       	ldd	r21, Z+3	; 0x03
    dd6a:	e0 91 3c 22 	lds	r30, 0x223C
    dd6e:	f0 91 3d 22 	lds	r31, 0x223D
    dd72:	13 c0       	rjmp	.+38     	; 0xdd9a <arb_registerDevice+0x92>
    dd74:	ee 81       	ldd	r30, Y+6	; 0x06
    dd76:	ff 81       	ldd	r31, Y+7	; 0x07
    dd78:	01 90       	ld	r0, Z+
    dd7a:	f0 81       	ld	r31, Z
    dd7c:	e0 2d       	mov	r30, r0
    dd7e:	20 81       	ld	r18, Z
    dd80:	31 81       	ldd	r19, Z+1	; 0x01
    dd82:	87 2f       	mov	r24, r23
    dd84:	96 2f       	mov	r25, r22
    dd86:	28 17       	cp	r18, r24
    dd88:	39 07       	cpc	r19, r25
    dd8a:	19 f4       	brne	.+6      	; 0xdd92 <arb_registerDevice+0x8a>
    dd8c:	8e 81       	ldd	r24, Y+6	; 0x06
    dd8e:	9f 81       	ldd	r25, Y+7	; 0x07
    dd90:	0d c0       	rjmp	.+26     	; 0xddac <arb_registerDevice+0xa4>
    dd92:	41 50       	subi	r20, 0x01	; 1
    dd94:	50 40       	sbci	r21, 0x00	; 0
    dd96:	ee 81       	ldd	r30, Y+6	; 0x06
    dd98:	ff 81       	ldd	r31, Y+7	; 0x07
    dd9a:	80 85       	ldd	r24, Z+8	; 0x08
    dd9c:	91 85       	ldd	r25, Z+9	; 0x09
    dd9e:	8e 83       	std	Y+6, r24	; 0x06
    dda0:	9f 83       	std	Y+7, r25	; 0x07
    dda2:	14 16       	cp	r1, r20
    dda4:	15 06       	cpc	r1, r21
    dda6:	34 f3       	brlt	.-52     	; 0xdd74 <arb_registerDevice+0x6c>
    dda8:	87 ef       	ldi	r24, 0xF7	; 247
    ddaa:	9f ef       	ldi	r25, 0xFF	; 255
    ddac:	8c 83       	std	Y+4, r24	; 0x04
    ddae:	9d 83       	std	Y+5, r25	; 0x05
    ddb0:	8a 81       	ldd	r24, Y+2	; 0x02
    ddb2:	9b 81       	ldd	r25, Y+3	; 0x03
    ddb4:	87 5f       	subi	r24, 0xF7	; 247
    ddb6:	9f 4f       	sbci	r25, 0xFF	; 255
    ddb8:	c1 f5       	brne	.+112    	; 0xde2a <arb_registerDevice+0x122>
    ddba:	8c 81       	ldd	r24, Y+4	; 0x04
    ddbc:	9d 81       	ldd	r25, Y+5	; 0x05
    ddbe:	87 5f       	subi	r24, 0xF7	; 247
    ddc0:	9f 4f       	sbci	r25, 0xFF	; 255
    ddc2:	99 f5       	brne	.+102    	; 0xde2a <arb_registerDevice+0x122>
    ddc4:	85 e1       	ldi	r24, 0x15	; 21
    ddc6:	90 e0       	ldi	r25, 0x00	; 0
    ddc8:	0e 94 b8 8a 	call	0x11570	; 0x11570 <utl_createLink>
    ddcc:	8a 83       	std	Y+2, r24	; 0x02
    ddce:	9b 83       	std	Y+3, r25	; 0x03
    ddd0:	8a 81       	ldd	r24, Y+2	; 0x02
    ddd2:	9b 81       	ldd	r25, Y+3	; 0x03
    ddd4:	97 ff       	sbrs	r25, 7
    ddd6:	04 c0       	rjmp	.+8      	; 0xdde0 <arb_registerDevice+0xd8>
    ddd8:	89 81       	ldd	r24, Y+1	; 0x01
    ddda:	8f bf       	out	0x3f, r24	; 63
    dddc:	8f ef       	ldi	r24, 0xFF	; 255
    ddde:	28 c0       	rjmp	.+80     	; 0xde30 <arb_registerDevice+0x128>
    dde0:	ea 81       	ldd	r30, Y+2	; 0x02
    dde2:	fb 81       	ldd	r31, Y+3	; 0x03
    dde4:	01 90       	ld	r0, Z+
    dde6:	f0 81       	ld	r31, Z
    dde8:	e0 2d       	mov	r30, r0
    ddea:	28 85       	ldd	r18, Y+8	; 0x08
    ddec:	39 85       	ldd	r19, Y+9	; 0x09
    ddee:	85 e1       	ldi	r24, 0x15	; 21
    ddf0:	df 01       	movw	r26, r30
    ddf2:	1d 92       	st	X+, r1
    ddf4:	8a 95       	dec	r24
    ddf6:	e9 f7       	brne	.-6      	; 0xddf2 <arb_registerDevice+0xea>
    ddf8:	20 83       	st	Z, r18
    ddfa:	31 83       	std	Z+1, r19	; 0x01
    ddfc:	e3 8a       	std	Z+19, r14	; 0x13
    ddfe:	f4 8a       	std	Z+20, r15	; 0x14
    de00:	cf 01       	movw	r24, r30
    de02:	02 96       	adiw	r24, 0x02	; 2
    de04:	61 2f       	mov	r22, r17
    de06:	70 2f       	mov	r23, r16
    de08:	40 e1       	ldi	r20, 0x10	; 16
    de0a:	50 e0       	ldi	r21, 0x00	; 0
    de0c:	0e 94 05 b1 	call	0x1620a	; 0x1620a <strncpy>
    de10:	80 91 3c 22 	lds	r24, 0x223C
    de14:	90 91 3d 22 	lds	r25, 0x223D
    de18:	6a 81       	ldd	r22, Y+2	; 0x02
    de1a:	7b 81       	ldd	r23, Y+3	; 0x03
    de1c:	41 e0       	ldi	r20, 0x01	; 1
    de1e:	0e 94 c8 88 	call	0x11190	; 0x11190 <utl_insertLink>
    de22:	89 81       	ldd	r24, Y+1	; 0x01
    de24:	8f bf       	out	0x3f, r24	; 63
    de26:	80 e0       	ldi	r24, 0x00	; 0
    de28:	03 c0       	rjmp	.+6      	; 0xde30 <arb_registerDevice+0x128>
    de2a:	89 81       	ldd	r24, Y+1	; 0x01
    de2c:	8f bf       	out	0x3f, r24	; 63
    de2e:	8e ef       	ldi	r24, 0xFE	; 254
    de30:	29 96       	adiw	r28, 0x09	; 9
    de32:	cd bf       	out	0x3d, r28	; 61
    de34:	de bf       	out	0x3e, r29	; 62
    de36:	cf 91       	pop	r28
    de38:	df 91       	pop	r29
    de3a:	1f 91       	pop	r17
    de3c:	0f 91       	pop	r16
    de3e:	ff 90       	pop	r15
    de40:	ef 90       	pop	r14
    de42:	08 95       	ret

0000de44 <arb_open>:
    de44:	9f 92       	push	r9
    de46:	af 92       	push	r10
    de48:	bf 92       	push	r11
    de4a:	cf 92       	push	r12
    de4c:	df 92       	push	r13
    de4e:	ef 92       	push	r14
    de50:	ff 92       	push	r15
    de52:	0f 93       	push	r16
    de54:	1f 93       	push	r17
    de56:	df 93       	push	r29
    de58:	cf 93       	push	r28
    de5a:	cd b7       	in	r28, 0x3d	; 61
    de5c:	de b7       	in	r29, 0x3e	; 62
    de5e:	25 97       	sbiw	r28, 0x05	; 5
    de60:	cd bf       	out	0x3d, r28	; 61
    de62:	de bf       	out	0x3e, r29	; 62
    de64:	96 2e       	mov	r9, r22
    de66:	2f b7       	in	r18, 0x3f	; 63
    de68:	29 83       	std	Y+1, r18	; 0x01
    de6a:	f8 94       	cli
    de6c:	dc 01       	movw	r26, r24
    de6e:	0d 90       	ld	r0, X+
    de70:	00 20       	and	r0, r0
    de72:	e9 f7       	brne	.-6      	; 0xde6e <arb_open+0x2a>
    de74:	7d 01       	movw	r14, r26
    de76:	08 94       	sec
    de78:	e1 08       	sbc	r14, r1
    de7a:	f1 08       	sbc	r15, r1
    de7c:	e8 1a       	sub	r14, r24
    de7e:	f9 0a       	sbc	r15, r25
    de80:	6e e2       	ldi	r22, 0x2E	; 46
    de82:	72 e2       	ldi	r23, 0x22	; 34
    de84:	0e 94 b5 b0 	call	0x1616a	; 0x1616a <strtok>
    de88:	b8 2e       	mov	r11, r24
    de8a:	a9 2e       	mov	r10, r25
    de8c:	e8 2f       	mov	r30, r24
    de8e:	f9 2f       	mov	r31, r25
    de90:	df 01       	movw	r26, r30
    de92:	0d 90       	ld	r0, X+
    de94:	00 20       	and	r0, r0
    de96:	e9 f7       	brne	.-6      	; 0xde92 <arb_open+0x4e>
    de98:	8d 01       	movw	r16, r26
    de9a:	01 50       	subi	r16, 0x01	; 1
    de9c:	10 40       	sbci	r17, 0x00	; 0
    de9e:	0e 1b       	sub	r16, r30
    dea0:	1f 0b       	sbc	r17, r31
    dea2:	80 e0       	ldi	r24, 0x00	; 0
    dea4:	90 e0       	ldi	r25, 0x00	; 0
    dea6:	6e e2       	ldi	r22, 0x2E	; 46
    dea8:	72 e2       	ldi	r23, 0x22	; 34
    deaa:	0e 94 b5 b0 	call	0x1616a	; 0x1616a <strtok>
    deae:	6c 01       	movw	r12, r24
    deb0:	dc 01       	movw	r26, r24
    deb2:	0d 90       	ld	r0, X+
    deb4:	00 20       	and	r0, r0
    deb6:	e9 f7       	brne	.-6      	; 0xdeb2 <arb_open+0x6e>
    deb8:	11 97       	sbiw	r26, 0x01	; 1
    deba:	a8 1b       	sub	r26, r24
    debc:	b9 0b       	sbc	r27, r25
    debe:	00 95       	com	r16
    dec0:	10 95       	com	r17
    dec2:	0e 0d       	add	r16, r14
    dec4:	1f 1d       	adc	r17, r15
    dec6:	a0 17       	cp	r26, r16
    dec8:	b1 07       	cpc	r27, r17
    deca:	34 f4       	brge	.+12     	; 0xded8 <arb_open+0x94>
    decc:	00 97       	sbiw	r24, 0x00	; 0
    dece:	21 f0       	breq	.+8      	; 0xded8 <arb_open+0x94>
    ded0:	a8 0f       	add	r26, r24
    ded2:	b9 1f       	adc	r27, r25
    ded4:	8f e2       	ldi	r24, 0x2F	; 47
    ded6:	8c 93       	st	X, r24
    ded8:	8b 2d       	mov	r24, r11
    deda:	9a 2d       	mov	r25, r10
    dedc:	0e 94 d1 6d 	call	0xdba2	; 0xdba2 <arb_getDeviceLinkByName>
    dee0:	8a 83       	std	Y+2, r24	; 0x02
    dee2:	9b 83       	std	Y+3, r25	; 0x03
    dee4:	8a 81       	ldd	r24, Y+2	; 0x02
    dee6:	9b 81       	ldd	r25, Y+3	; 0x03
    dee8:	87 5f       	subi	r24, 0xF7	; 247
    deea:	9f 4f       	sbci	r25, 0xFF	; 255
    deec:	29 f4       	brne	.+10     	; 0xdef8 <arb_open+0xb4>
    deee:	89 81       	ldd	r24, Y+1	; 0x01
    def0:	8f bf       	out	0x3f, r24	; 63
    def2:	27 ef       	ldi	r18, 0xF7	; 247
    def4:	3f ef       	ldi	r19, 0xFF	; 255
    def6:	5c c0       	rjmp	.+184    	; 0xdfb0 <arb_open+0x16c>
    def8:	89 e0       	ldi	r24, 0x09	; 9
    defa:	90 e0       	ldi	r25, 0x00	; 0
    defc:	0e 94 b8 8a 	call	0x11570	; 0x11570 <utl_createLink>
    df00:	8c 83       	std	Y+4, r24	; 0x04
    df02:	9d 83       	std	Y+5, r25	; 0x05
    df04:	8c 81       	ldd	r24, Y+4	; 0x04
    df06:	9d 81       	ldd	r25, Y+5	; 0x05
    df08:	97 ff       	sbrs	r25, 7
    df0a:	05 c0       	rjmp	.+10     	; 0xdf16 <arb_open+0xd2>
    df0c:	89 81       	ldd	r24, Y+1	; 0x01
    df0e:	8f bf       	out	0x3f, r24	; 63
    df10:	2f ef       	ldi	r18, 0xFF	; 255
    df12:	3f ef       	ldi	r19, 0xFF	; 255
    df14:	4d c0       	rjmp	.+154    	; 0xdfb0 <arb_open+0x16c>
    df16:	ea 81       	ldd	r30, Y+2	; 0x02
    df18:	fb 81       	ldd	r31, Y+3	; 0x03
    df1a:	a0 81       	ld	r26, Z
    df1c:	b1 81       	ldd	r27, Z+1	; 0x01
    df1e:	ec 81       	ldd	r30, Y+4	; 0x04
    df20:	fd 81       	ldd	r31, Y+5	; 0x05
    df22:	00 81       	ld	r16, Z
    df24:	11 81       	ldd	r17, Z+1	; 0x01
    df26:	89 e0       	ldi	r24, 0x09	; 9
    df28:	f8 01       	movw	r30, r16
    df2a:	11 92       	st	Z+, r1
    df2c:	8a 95       	dec	r24
    df2e:	e9 f7       	brne	.-6      	; 0xdf2a <arb_open+0xe6>
    df30:	52 96       	adiw	r26, 0x12	; 18
    df32:	8c 91       	ld	r24, X
    df34:	52 97       	sbiw	r26, 0x12	; 18
    df36:	8f 5f       	subi	r24, 0xFF	; 255
    df38:	52 96       	adiw	r26, 0x12	; 18
    df3a:	8c 93       	st	X, r24
    df3c:	52 97       	sbiw	r26, 0x12	; 18
    df3e:	f8 01       	movw	r30, r16
    df40:	a0 83       	st	Z, r26
    df42:	b1 83       	std	Z+1, r27	; 0x01
    df44:	94 82       	std	Z+4, r9	; 0x04
    df46:	c2 82       	std	Z+2, r12	; 0x02
    df48:	d3 82       	std	Z+3, r13	; 0x03
    df4a:	80 91 4a 22 	lds	r24, 0x224A
    df4e:	90 91 4b 22 	lds	r25, 0x224B
    df52:	6c 81       	ldd	r22, Y+4	; 0x04
    df54:	7d 81       	ldd	r23, Y+5	; 0x05
    df56:	41 e0       	ldi	r20, 0x01	; 1
    df58:	0e 94 c8 88 	call	0x11190	; 0x11190 <utl_insertLink>
    df5c:	89 81       	ldd	r24, Y+1	; 0x01
    df5e:	8f bf       	out	0x3f, r24	; 63
    df60:	d8 01       	movw	r26, r16
    df62:	ed 91       	ld	r30, X+
    df64:	fc 91       	ld	r31, X
    df66:	03 88       	ldd	r0, Z+19	; 0x13
    df68:	f4 89       	ldd	r31, Z+20	; 0x14
    df6a:	e0 2d       	mov	r30, r0
    df6c:	30 97       	sbiw	r30, 0x00	; 0
    df6e:	19 f4       	brne	.+6      	; 0xdf76 <arb_open+0x132>
    df70:	2d ef       	ldi	r18, 0xFD	; 253
    df72:	3f ef       	ldi	r19, 0xFF	; 255
    df74:	1d c0       	rjmp	.+58     	; 0xdfb0 <arb_open+0x16c>
    df76:	01 90       	ld	r0, Z+
    df78:	f0 81       	ld	r31, Z
    df7a:	e0 2d       	mov	r30, r0
    df7c:	c8 01       	movw	r24, r16
    df7e:	19 95       	eicall
    df80:	e8 2e       	mov	r14, r24
    df82:	87 ff       	sbrs	r24, 7
    df84:	13 c0       	rjmp	.+38     	; 0xdfac <arb_open+0x168>
    df86:	d8 01       	movw	r26, r16
    df88:	ed 91       	ld	r30, X+
    df8a:	fc 91       	ld	r31, X
    df8c:	82 89       	ldd	r24, Z+18	; 0x12
    df8e:	81 50       	subi	r24, 0x01	; 1
    df90:	82 8b       	std	Z+18, r24	; 0x12
    df92:	80 91 4a 22 	lds	r24, 0x224A
    df96:	90 91 4b 22 	lds	r25, 0x224B
    df9a:	6c 81       	ldd	r22, Y+4	; 0x04
    df9c:	7d 81       	ldd	r23, Y+5	; 0x05
    df9e:	0e 94 c4 89 	call	0x11388	; 0x11388 <utl_destroyLink>
    dfa2:	2e 2d       	mov	r18, r14
    dfa4:	33 27       	eor	r19, r19
    dfa6:	27 fd       	sbrc	r18, 7
    dfa8:	30 95       	com	r19
    dfaa:	02 c0       	rjmp	.+4      	; 0xdfb0 <arb_open+0x16c>
    dfac:	2c 81       	ldd	r18, Y+4	; 0x04
    dfae:	3d 81       	ldd	r19, Y+5	; 0x05
    dfb0:	c9 01       	movw	r24, r18
    dfb2:	25 96       	adiw	r28, 0x05	; 5
    dfb4:	cd bf       	out	0x3d, r28	; 61
    dfb6:	de bf       	out	0x3e, r29	; 62
    dfb8:	cf 91       	pop	r28
    dfba:	df 91       	pop	r29
    dfbc:	1f 91       	pop	r17
    dfbe:	0f 91       	pop	r16
    dfc0:	ff 90       	pop	r15
    dfc2:	ef 90       	pop	r14
    dfc4:	df 90       	pop	r13
    dfc6:	cf 90       	pop	r12
    dfc8:	bf 90       	pop	r11
    dfca:	af 90       	pop	r10
    dfcc:	9f 90       	pop	r9
    dfce:	08 95       	ret

0000dfd0 <main>:
    dfd0:	60 e0       	ldi	r22, 0x00	; 0
    dfd2:	78 e4       	ldi	r23, 0x48	; 72
    dfd4:	88 ee       	ldi	r24, 0xE8	; 232
    dfd6:	91 e0       	ldi	r25, 0x01	; 1
    dfd8:	0e 94 1e 49 	call	0x923c	; 0x923c <hal_setCpuFreq>
    dfdc:	84 e0       	ldi	r24, 0x04	; 4
    dfde:	0e 94 6b 50 	call	0xa0d6	; 0xa0d6 <hal_configureIntLevel>
    dfe2:	0e 94 45 1a 	call	0x348a	; 0x348a <usr_appInit>
    dfe6:	0e 94 bd 76 	call	0xed7a	; 0xed7a <arb_schedulerStart>
    dfea:	80 e0       	ldi	r24, 0x00	; 0
    dfec:	90 e0       	ldi	r25, 0x00	; 0
    dfee:	08 95       	ret

0000dff0 <arb_setPrintfDbgLevel>:
    dff0:	80 93 ea 24 	sts	0x24EA, r24
    dff4:	84 30       	cpi	r24, 0x04	; 4
    dff6:	59 f0       	breq	.+22     	; 0xe00e <arb_setPrintfDbgLevel+0x1e>
    dff8:	85 30       	cpi	r24, 0x05	; 5
    dffa:	20 f4       	brcc	.+8      	; 0xe004 <arb_setPrintfDbgLevel+0x14>
    dffc:	81 50       	subi	r24, 0x01	; 1
    dffe:	82 30       	cpi	r24, 0x02	; 2
    e000:	18 f4       	brcc	.+6      	; 0xe008 <arb_setPrintfDbgLevel+0x18>
    e002:	05 c0       	rjmp	.+10     	; 0xe00e <arb_setPrintfDbgLevel+0x1e>
    e004:	80 32       	cpi	r24, 0x20	; 32
    e006:	19 f0       	breq	.+6      	; 0xe00e <arb_setPrintfDbgLevel+0x1e>
    e008:	84 e0       	ldi	r24, 0x04	; 4
    e00a:	80 93 ea 24 	sts	0x24EA, r24
    e00e:	80 e0       	ldi	r24, 0x00	; 0
    e010:	08 95       	ret

0000e012 <arb_printfInit>:
    e012:	0f 93       	push	r16
    e014:	1f 93       	push	r17
    e016:	cf 93       	push	r28
    e018:	df 93       	push	r29
    e01a:	8b 01       	movw	r16, r22
    e01c:	ea 01       	movw	r28, r20
    e01e:	20 e2       	ldi	r18, 0x20	; 32
    e020:	20 93 ea 24 	sts	0x24EA, r18
    e024:	10 92 eb 24 	sts	0x24EB, r1
    e028:	63 e0       	ldi	r22, 0x03	; 3
    e02a:	0e 94 22 6f 	call	0xde44	; 0xde44 <arb_open>
    e02e:	80 93 e4 24 	sts	0x24E4, r24
    e032:	90 93 e5 24 	sts	0x24E5, r25
    e036:	80 91 e4 24 	lds	r24, 0x24E4
    e03a:	90 91 e5 24 	lds	r25, 0x24E5
    e03e:	97 ff       	sbrs	r25, 7
    e040:	05 c0       	rjmp	.+10     	; 0xe04c <arb_printfInit+0x3a>
    e042:	80 91 e4 24 	lds	r24, 0x24E4
    e046:	90 91 e5 24 	lds	r25, 0x24E5
    e04a:	36 c0       	rjmp	.+108    	; 0xe0b8 <arb_printfInit+0xa6>
    e04c:	20 97       	sbiw	r28, 0x00	; 0
    e04e:	31 f1       	breq	.+76     	; 0xe09c <arb_printfInit+0x8a>
    e050:	ce 01       	movw	r24, r28
    e052:	6a e4       	ldi	r22, 0x4A	; 74
    e054:	0e 94 22 6f 	call	0xde44	; 0xde44 <arb_open>
    e058:	80 93 e6 24 	sts	0x24E6, r24
    e05c:	90 93 e7 24 	sts	0x24E7, r25
    e060:	80 91 e6 24 	lds	r24, 0x24E6
    e064:	90 91 e7 24 	lds	r25, 0x24E7
    e068:	97 ff       	sbrs	r25, 7
    e06a:	05 c0       	rjmp	.+10     	; 0xe076 <arb_printfInit+0x64>
    e06c:	80 91 e6 24 	lds	r24, 0x24E6
    e070:	90 91 e7 24 	lds	r25, 0x24E7
    e074:	21 c0       	rjmp	.+66     	; 0xe0b8 <arb_printfInit+0xa6>
    e076:	80 91 e6 24 	lds	r24, 0x24E6
    e07a:	90 91 e7 24 	lds	r25, 0x24E7
    e07e:	62 e0       	ldi	r22, 0x02	; 2
    e080:	70 e0       	ldi	r23, 0x00	; 0
    e082:	20 e0       	ldi	r18, 0x00	; 0
    e084:	30 e0       	ldi	r19, 0x00	; 0
    e086:	40 e0       	ldi	r20, 0x00	; 0
    e088:	50 e0       	ldi	r21, 0x00	; 0
    e08a:	0e 94 4a 6d 	call	0xda94	; 0xda94 <arb_ioctl>
    e08e:	97 ff       	sbrs	r25, 7
    e090:	02 c0       	rjmp	.+4      	; 0xe096 <arb_printfInit+0x84>
    e092:	80 ef       	ldi	r24, 0xF0	; 240
    e094:	11 c0       	rjmp	.+34     	; 0xe0b8 <arb_printfInit+0xa6>
    e096:	81 e0       	ldi	r24, 0x01	; 1
    e098:	80 93 eb 24 	sts	0x24EB, r24
    e09c:	c8 01       	movw	r24, r16
    e09e:	0e 94 b8 87 	call	0x10f70	; 0x10f70 <utl_createBuffer>
    e0a2:	80 93 e8 24 	sts	0x24E8, r24
    e0a6:	90 93 e9 24 	sts	0x24E9, r25
    e0aa:	80 91 e8 24 	lds	r24, 0x24E8
    e0ae:	90 91 e9 24 	lds	r25, 0x24E9
    e0b2:	89 2f       	mov	r24, r25
    e0b4:	88 0f       	add	r24, r24
    e0b6:	88 0b       	sbc	r24, r24
    e0b8:	df 91       	pop	r29
    e0ba:	cf 91       	pop	r28
    e0bc:	1f 91       	pop	r17
    e0be:	0f 91       	pop	r16
    e0c0:	08 95       	ret

0000e0c2 <arb_sysPrintChar>:
    e0c2:	df 93       	push	r29
    e0c4:	cf 93       	push	r28
    e0c6:	0f 92       	push	r0
    e0c8:	cd b7       	in	r28, 0x3d	; 61
    e0ca:	de b7       	in	r29, 0x3e	; 62
    e0cc:	89 83       	std	Y+1, r24	; 0x01
    e0ce:	80 91 e4 24 	lds	r24, 0x24E4
    e0d2:	90 91 e5 24 	lds	r25, 0x24E5
    e0d6:	be 01       	movw	r22, r28
    e0d8:	6f 5f       	subi	r22, 0xFF	; 255
    e0da:	7f 4f       	sbci	r23, 0xFF	; 255
    e0dc:	41 e0       	ldi	r20, 0x01	; 1
    e0de:	50 e0       	ldi	r21, 0x00	; 0
    e0e0:	0e 94 ef 6c 	call	0xd9de	; 0xd9de <arb_write>
    e0e4:	0f 90       	pop	r0
    e0e6:	cf 91       	pop	r28
    e0e8:	df 91       	pop	r29
    e0ea:	08 95       	ret

0000e0ec <arb_printfFlushBuf>:
    e0ec:	6f 92       	push	r6
    e0ee:	7f 92       	push	r7
    e0f0:	8f 92       	push	r8
    e0f2:	9f 92       	push	r9
    e0f4:	af 92       	push	r10
    e0f6:	bf 92       	push	r11
    e0f8:	cf 92       	push	r12
    e0fa:	df 92       	push	r13
    e0fc:	ef 92       	push	r14
    e0fe:	ff 92       	push	r15
    e100:	0f 93       	push	r16
    e102:	1f 93       	push	r17
    e104:	df 93       	push	r29
    e106:	cf 93       	push	r28
    e108:	cd b7       	in	r28, 0x3d	; 61
    e10a:	de b7       	in	r29, 0x3e	; 62
    e10c:	66 97       	sbiw	r28, 0x16	; 22
    e10e:	cd bf       	out	0x3d, r28	; 61
    e110:	de bf       	out	0x3e, r29	; 62
    e112:	8f b7       	in	r24, 0x3f	; 63
    e114:	89 83       	std	Y+1, r24	; 0x01
    e116:	f8 94       	cli
    e118:	80 91 e8 24 	lds	r24, 0x24E8
    e11c:	90 91 e9 24 	lds	r25, 0x24E9
    e120:	0e 94 c6 86 	call	0x10d8c	; 0x10d8c <utl_getBufferPtr>
    e124:	4c 01       	movw	r8, r24
    e126:	80 91 e8 24 	lds	r24, 0x24E8
    e12a:	90 91 e9 24 	lds	r25, 0x24E9
    e12e:	0e 94 9e 86 	call	0x10d3c	; 0x10d3c <utl_getBufferFullLevel>
    e132:	6c 01       	movw	r12, r24
    e134:	80 91 e8 24 	lds	r24, 0x24E8
    e138:	90 91 e9 24 	lds	r25, 0x24E9
    e13c:	0e 94 b2 86 	call	0x10d64	; 0x10d64 <utl_getBufferSize>
    e140:	8c 01       	movw	r16, r24
    e142:	80 91 e8 24 	lds	r24, 0x24E8
    e146:	90 91 e9 24 	lds	r25, 0x24E9
    e14a:	0e 94 36 87 	call	0x10e6c	; 0x10e6c <utl_getBufRdPtr>
    e14e:	bc 01       	movw	r22, r24
    e150:	89 81       	ldd	r24, Y+1	; 0x01
    e152:	8f bf       	out	0x3f, r24	; 63
    e154:	c0 16       	cp	r12, r16
    e156:	d1 06       	cpc	r13, r17
    e158:	c4 f1       	brlt	.+112    	; 0xe1ca <arb_printfFlushBuf+0xde>
    e15a:	80 91 e4 24 	lds	r24, 0x24E4
    e15e:	90 91 e5 24 	lds	r25, 0x24E5
    e162:	b4 01       	movw	r22, r8
    e164:	a8 01       	movw	r20, r16
    e166:	0e 94 ef 6c 	call	0xd9de	; 0xd9de <arb_write>
    e16a:	80 91 eb 24 	lds	r24, 0x24EB
    e16e:	88 23       	and	r24, r24
    e170:	11 f1       	breq	.+68     	; 0xe1b6 <arb_printfFlushBuf+0xca>
    e172:	80 91 e6 24 	lds	r24, 0x24E6
    e176:	90 91 e7 24 	lds	r25, 0x24E7
    e17a:	b4 01       	movw	r22, r8
    e17c:	a8 01       	movw	r20, r16
    e17e:	0e 94 ef 6c 	call	0xd9de	; 0xd9de <arb_write>
    e182:	80 17       	cp	r24, r16
    e184:	91 07       	cpc	r25, r17
    e186:	b9 f0       	breq	.+46     	; 0xe1b6 <arb_printfFlushBuf+0xca>
    e188:	8e 01       	movw	r16, r28
    e18a:	0d 5f       	subi	r16, 0xFD	; 253
    e18c:	1f 4f       	sbci	r17, 0xFF	; 255
    e18e:	c8 01       	movw	r24, r16
    e190:	6c e4       	ldi	r22, 0x4C	; 76
    e192:	72 e2       	ldi	r23, 0x22	; 34
    e194:	0e 94 fe b0 	call	0x161fc	; 0x161fc <strcpy>
    e198:	80 91 e4 24 	lds	r24, 0x24E4
    e19c:	90 91 e5 24 	lds	r25, 0x24E5
    e1a0:	f8 01       	movw	r30, r16
    e1a2:	01 90       	ld	r0, Z+
    e1a4:	00 20       	and	r0, r0
    e1a6:	e9 f7       	brne	.-6      	; 0xe1a2 <arb_printfFlushBuf+0xb6>
    e1a8:	31 97       	sbiw	r30, 0x01	; 1
    e1aa:	e0 1b       	sub	r30, r16
    e1ac:	f1 0b       	sbc	r31, r17
    e1ae:	b8 01       	movw	r22, r16
    e1b0:	af 01       	movw	r20, r30
    e1b2:	0e 94 ef 6c 	call	0xd9de	; 0xd9de <arb_write>
    e1b6:	8f b7       	in	r24, 0x3f	; 63
    e1b8:	8a 83       	std	Y+2, r24	; 0x02
    e1ba:	f8 94       	cli
    e1bc:	80 91 e8 24 	lds	r24, 0x24E8
    e1c0:	90 91 e9 24 	lds	r25, 0x24E9
    e1c4:	0e 94 7f 87 	call	0x10efe	; 0x10efe <ult_resetBuffer>
    e1c8:	8e c0       	rjmp	.+284    	; 0xe2e6 <arb_printfFlushBuf+0x1fa>
    e1ca:	1c 14       	cp	r1, r12
    e1cc:	1d 04       	cpc	r1, r13
    e1ce:	0c f0       	brlt	.+2      	; 0xe1d2 <arb_printfFlushBuf+0xe6>
    e1d0:	8c c0       	rjmp	.+280    	; 0xe2ea <arb_printfFlushBuf+0x1fe>
    e1d2:	06 1b       	sub	r16, r22
    e1d4:	17 0b       	sbc	r17, r23
    e1d6:	54 01       	movw	r10, r8
    e1d8:	a6 0e       	add	r10, r22
    e1da:	b7 1e       	adc	r11, r23
    e1dc:	0c 15       	cp	r16, r12
    e1de:	1d 05       	cpc	r17, r13
    e1e0:	0c f0       	brlt	.+2      	; 0xe1e4 <arb_printfFlushBuf+0xf8>
    e1e2:	49 c0       	rjmp	.+146    	; 0xe276 <arb_printfFlushBuf+0x18a>
    e1e4:	80 91 e4 24 	lds	r24, 0x24E4
    e1e8:	90 91 e5 24 	lds	r25, 0x24E5
    e1ec:	b5 01       	movw	r22, r10
    e1ee:	a8 01       	movw	r20, r16
    e1f0:	0e 94 ef 6c 	call	0xd9de	; 0xd9de <arb_write>
    e1f4:	80 91 e4 24 	lds	r24, 0x24E4
    e1f8:	90 91 e5 24 	lds	r25, 0x24E5
    e1fc:	76 01       	movw	r14, r12
    e1fe:	e0 1a       	sub	r14, r16
    e200:	f1 0a       	sbc	r15, r17
    e202:	7e 2c       	mov	r7, r14
    e204:	6f 2c       	mov	r6, r15
    e206:	b4 01       	movw	r22, r8
    e208:	a7 01       	movw	r20, r14
    e20a:	0e 94 ef 6c 	call	0xd9de	; 0xd9de <arb_write>
    e20e:	80 91 eb 24 	lds	r24, 0x24EB
    e212:	88 23       	and	r24, r24
    e214:	09 f4       	brne	.+2      	; 0xe218 <arb_printfFlushBuf+0x12c>
    e216:	5d c0       	rjmp	.+186    	; 0xe2d2 <arb_printfFlushBuf+0x1e6>
    e218:	80 91 e6 24 	lds	r24, 0x24E6
    e21c:	90 91 e7 24 	lds	r25, 0x24E7
    e220:	b5 01       	movw	r22, r10
    e222:	a8 01       	movw	r20, r16
    e224:	0e 94 ef 6c 	call	0xd9de	; 0xd9de <arb_write>
    e228:	80 17       	cp	r24, r16
    e22a:	91 07       	cpc	r25, r17
    e22c:	b9 f0       	breq	.+46     	; 0xe25c <arb_printfFlushBuf+0x170>
    e22e:	8e 01       	movw	r16, r28
    e230:	0d 5f       	subi	r16, 0xFD	; 253
    e232:	1f 4f       	sbci	r17, 0xFF	; 255
    e234:	c8 01       	movw	r24, r16
    e236:	6c e4       	ldi	r22, 0x4C	; 76
    e238:	72 e2       	ldi	r23, 0x22	; 34
    e23a:	0e 94 fe b0 	call	0x161fc	; 0x161fc <strcpy>
    e23e:	80 91 e4 24 	lds	r24, 0x24E4
    e242:	90 91 e5 24 	lds	r25, 0x24E5
    e246:	f8 01       	movw	r30, r16
    e248:	01 90       	ld	r0, Z+
    e24a:	00 20       	and	r0, r0
    e24c:	e9 f7       	brne	.-6      	; 0xe248 <arb_printfFlushBuf+0x15c>
    e24e:	31 97       	sbiw	r30, 0x01	; 1
    e250:	e0 1b       	sub	r30, r16
    e252:	f1 0b       	sbc	r31, r17
    e254:	b8 01       	movw	r22, r16
    e256:	af 01       	movw	r20, r30
    e258:	0e 94 ef 6c 	call	0xd9de	; 0xd9de <arb_write>
    e25c:	80 91 e6 24 	lds	r24, 0x24E6
    e260:	90 91 e7 24 	lds	r25, 0x24E7
    e264:	b4 01       	movw	r22, r8
    e266:	47 2d       	mov	r20, r7
    e268:	56 2d       	mov	r21, r6
    e26a:	0e 94 ef 6c 	call	0xd9de	; 0xd9de <arb_write>
    e26e:	8e 15       	cp	r24, r14
    e270:	9f 05       	cpc	r25, r15
    e272:	79 f1       	breq	.+94     	; 0xe2d2 <arb_printfFlushBuf+0x1e6>
    e274:	17 c0       	rjmp	.+46     	; 0xe2a4 <arb_printfFlushBuf+0x1b8>
    e276:	80 91 e4 24 	lds	r24, 0x24E4
    e27a:	90 91 e5 24 	lds	r25, 0x24E5
    e27e:	b5 01       	movw	r22, r10
    e280:	a6 01       	movw	r20, r12
    e282:	0e 94 ef 6c 	call	0xd9de	; 0xd9de <arb_write>
    e286:	80 91 eb 24 	lds	r24, 0x24EB
    e28a:	88 23       	and	r24, r24
    e28c:	11 f1       	breq	.+68     	; 0xe2d2 <arb_printfFlushBuf+0x1e6>
    e28e:	80 91 e6 24 	lds	r24, 0x24E6
    e292:	90 91 e7 24 	lds	r25, 0x24E7
    e296:	b5 01       	movw	r22, r10
    e298:	a6 01       	movw	r20, r12
    e29a:	0e 94 ef 6c 	call	0xd9de	; 0xd9de <arb_write>
    e29e:	8c 15       	cp	r24, r12
    e2a0:	9d 05       	cpc	r25, r13
    e2a2:	b9 f0       	breq	.+46     	; 0xe2d2 <arb_printfFlushBuf+0x1e6>
    e2a4:	8e 01       	movw	r16, r28
    e2a6:	0d 5f       	subi	r16, 0xFD	; 253
    e2a8:	1f 4f       	sbci	r17, 0xFF	; 255
    e2aa:	c8 01       	movw	r24, r16
    e2ac:	6c e4       	ldi	r22, 0x4C	; 76
    e2ae:	72 e2       	ldi	r23, 0x22	; 34
    e2b0:	0e 94 fe b0 	call	0x161fc	; 0x161fc <strcpy>
    e2b4:	80 91 e4 24 	lds	r24, 0x24E4
    e2b8:	90 91 e5 24 	lds	r25, 0x24E5
    e2bc:	f8 01       	movw	r30, r16
    e2be:	01 90       	ld	r0, Z+
    e2c0:	00 20       	and	r0, r0
    e2c2:	e9 f7       	brne	.-6      	; 0xe2be <arb_printfFlushBuf+0x1d2>
    e2c4:	31 97       	sbiw	r30, 0x01	; 1
    e2c6:	e0 1b       	sub	r30, r16
    e2c8:	f1 0b       	sbc	r31, r17
    e2ca:	b8 01       	movw	r22, r16
    e2cc:	af 01       	movw	r20, r30
    e2ce:	0e 94 ef 6c 	call	0xd9de	; 0xd9de <arb_write>
    e2d2:	8f b7       	in	r24, 0x3f	; 63
    e2d4:	8a 83       	std	Y+2, r24	; 0x02
    e2d6:	f8 94       	cli
    e2d8:	80 91 e8 24 	lds	r24, 0x24E8
    e2dc:	90 91 e9 24 	lds	r25, 0x24E9
    e2e0:	b6 01       	movw	r22, r12
    e2e2:	0e 94 0f 87 	call	0x10e1e	; 0x10e1e <utl_incrBufRdPtr>
    e2e6:	8a 81       	ldd	r24, Y+2	; 0x02
    e2e8:	8f bf       	out	0x3f, r24	; 63
    e2ea:	66 96       	adiw	r28, 0x16	; 22
    e2ec:	cd bf       	out	0x3d, r28	; 61
    e2ee:	de bf       	out	0x3e, r29	; 62
    e2f0:	cf 91       	pop	r28
    e2f2:	df 91       	pop	r29
    e2f4:	1f 91       	pop	r17
    e2f6:	0f 91       	pop	r16
    e2f8:	ff 90       	pop	r15
    e2fa:	ef 90       	pop	r14
    e2fc:	df 90       	pop	r13
    e2fe:	cf 90       	pop	r12
    e300:	bf 90       	pop	r11
    e302:	af 90       	pop	r10
    e304:	9f 90       	pop	r9
    e306:	8f 90       	pop	r8
    e308:	7f 90       	pop	r7
    e30a:	6f 90       	pop	r6
    e30c:	08 95       	ret

0000e30e <arb_printf>:
    e30e:	af 92       	push	r10
    e310:	bf 92       	push	r11
    e312:	cf 92       	push	r12
    e314:	df 92       	push	r13
    e316:	ef 92       	push	r14
    e318:	ff 92       	push	r15
    e31a:	0f 93       	push	r16
    e31c:	1f 93       	push	r17
    e31e:	df 93       	push	r29
    e320:	cf 93       	push	r28
    e322:	cd b7       	in	r28, 0x3d	; 61
    e324:	de b7       	in	r29, 0x3e	; 62
    e326:	ae 97       	sbiw	r28, 0x2e	; 46
    e328:	cd bf       	out	0x3d, r28	; 61
    e32a:	de bf       	out	0x3e, r29	; 62
    e32c:	b6 2e       	mov	r11, r22
    e32e:	a7 2e       	mov	r10, r23
    e330:	9f b7       	in	r25, 0x3f	; 63
    e332:	99 83       	std	Y+1, r25	; 0x01
    e334:	f8 94       	cli
    e336:	e8 2e       	mov	r14, r24
    e338:	ff 24       	eor	r15, r15
    e33a:	86 ff       	sbrs	r24, 6
    e33c:	fe c0       	rjmp	.+508    	; 0xe53a <arb_printf+0x22c>
    e33e:	97 01       	movw	r18, r14
    e340:	27 70       	andi	r18, 0x07	; 7
    e342:	30 70       	andi	r19, 0x00	; 0
    e344:	80 91 ea 24 	lds	r24, 0x24EA
    e348:	90 e0       	ldi	r25, 0x00	; 0
    e34a:	28 17       	cp	r18, r24
    e34c:	39 07       	cpc	r19, r25
    e34e:	0c f4       	brge	.+2      	; 0xe352 <arb_printf+0x44>
    e350:	f4 c0       	rjmp	.+488    	; 0xe53a <arb_printf+0x22c>
    e352:	ce 01       	movw	r24, r28
    e354:	46 96       	adiw	r24, 0x16	; 22
    e356:	0e 94 a4 81 	call	0x10348	; 0x10348 <arb_sysTimeNow>
    e35a:	ca a4       	ldd	r12, Y+42	; 0x2a
    e35c:	d9 a4       	ldd	r13, Y+41	; 0x29
    e35e:	28 a5       	ldd	r18, Y+40	; 0x28
    e360:	ce 01       	movw	r24, r28
    e362:	02 96       	adiw	r24, 0x02	; 2
    e364:	2a 30       	cpi	r18, 0x0A	; 10
    e366:	70 f4       	brcc	.+28     	; 0xe384 <arb_printf+0x76>
    e368:	00 d0       	rcall	.+0      	; 0xe36a <arb_printf+0x5c>
    e36a:	00 d0       	rcall	.+0      	; 0xe36c <arb_printf+0x5e>
    e36c:	ed b7       	in	r30, 0x3d	; 61
    e36e:	fe b7       	in	r31, 0x3e	; 62
    e370:	31 96       	adiw	r30, 0x01	; 1
    e372:	ad b7       	in	r26, 0x3d	; 61
    e374:	be b7       	in	r27, 0x3e	; 62
    e376:	11 96       	adiw	r26, 0x01	; 1
    e378:	8d 93       	st	X+, r24
    e37a:	9c 93       	st	X, r25
    e37c:	12 97       	sbiw	r26, 0x02	; 2
    e37e:	84 e1       	ldi	r24, 0x14	; 20
    e380:	9d e0       	ldi	r25, 0x0D	; 13
    e382:	0d c0       	rjmp	.+26     	; 0xe39e <arb_printf+0x90>
    e384:	00 d0       	rcall	.+0      	; 0xe386 <arb_printf+0x78>
    e386:	00 d0       	rcall	.+0      	; 0xe388 <arb_printf+0x7a>
    e388:	ed b7       	in	r30, 0x3d	; 61
    e38a:	fe b7       	in	r31, 0x3e	; 62
    e38c:	31 96       	adiw	r30, 0x01	; 1
    e38e:	ad b7       	in	r26, 0x3d	; 61
    e390:	be b7       	in	r27, 0x3e	; 62
    e392:	11 96       	adiw	r26, 0x01	; 1
    e394:	8d 93       	st	X+, r24
    e396:	9c 93       	st	X, r25
    e398:	12 97       	sbiw	r26, 0x02	; 2
    e39a:	8e e0       	ldi	r24, 0x0E	; 14
    e39c:	9d e0       	ldi	r25, 0x0D	; 13
    e39e:	82 83       	std	Z+2, r24	; 0x02
    e3a0:	93 83       	std	Z+3, r25	; 0x03
    e3a2:	24 83       	std	Z+4, r18	; 0x04
    e3a4:	15 82       	std	Z+5, r1	; 0x05
    e3a6:	0e 94 a5 b1 	call	0x1634a	; 0x1634a <sprintf_P>
    e3aa:	8c 01       	movw	r16, r24
    e3ac:	8d b7       	in	r24, 0x3d	; 61
    e3ae:	9e b7       	in	r25, 0x3e	; 62
    e3b0:	06 96       	adiw	r24, 0x06	; 6
    e3b2:	8d bf       	out	0x3d, r24	; 61
    e3b4:	9e bf       	out	0x3e, r25	; 62
    e3b6:	ce 01       	movw	r24, r28
    e3b8:	02 96       	adiw	r24, 0x02	; 2
    e3ba:	a9 e0       	ldi	r26, 0x09	; 9
    e3bc:	ad 15       	cp	r26, r13
    e3be:	80 f0       	brcs	.+32     	; 0xe3e0 <arb_printf+0xd2>
    e3c0:	00 d0       	rcall	.+0      	; 0xe3c2 <arb_printf+0xb4>
    e3c2:	00 d0       	rcall	.+0      	; 0xe3c4 <arb_printf+0xb6>
    e3c4:	ed b7       	in	r30, 0x3d	; 61
    e3c6:	fe b7       	in	r31, 0x3e	; 62
    e3c8:	31 96       	adiw	r30, 0x01	; 1
    e3ca:	80 0f       	add	r24, r16
    e3cc:	91 1f       	adc	r25, r17
    e3ce:	ad b7       	in	r26, 0x3d	; 61
    e3d0:	be b7       	in	r27, 0x3e	; 62
    e3d2:	11 96       	adiw	r26, 0x01	; 1
    e3d4:	8d 93       	st	X+, r24
    e3d6:	9c 93       	st	X, r25
    e3d8:	12 97       	sbiw	r26, 0x02	; 2
    e3da:	88 e0       	ldi	r24, 0x08	; 8
    e3dc:	9d e0       	ldi	r25, 0x0D	; 13
    e3de:	0f c0       	rjmp	.+30     	; 0xe3fe <arb_printf+0xf0>
    e3e0:	00 d0       	rcall	.+0      	; 0xe3e2 <arb_printf+0xd4>
    e3e2:	00 d0       	rcall	.+0      	; 0xe3e4 <arb_printf+0xd6>
    e3e4:	ed b7       	in	r30, 0x3d	; 61
    e3e6:	fe b7       	in	r31, 0x3e	; 62
    e3e8:	31 96       	adiw	r30, 0x01	; 1
    e3ea:	80 0f       	add	r24, r16
    e3ec:	91 1f       	adc	r25, r17
    e3ee:	ad b7       	in	r26, 0x3d	; 61
    e3f0:	be b7       	in	r27, 0x3e	; 62
    e3f2:	11 96       	adiw	r26, 0x01	; 1
    e3f4:	8d 93       	st	X+, r24
    e3f6:	9c 93       	st	X, r25
    e3f8:	12 97       	sbiw	r26, 0x02	; 2
    e3fa:	83 e0       	ldi	r24, 0x03	; 3
    e3fc:	9d e0       	ldi	r25, 0x0D	; 13
    e3fe:	82 83       	std	Z+2, r24	; 0x02
    e400:	93 83       	std	Z+3, r25	; 0x03
    e402:	d4 82       	std	Z+4, r13	; 0x04
    e404:	15 82       	std	Z+5, r1	; 0x05
    e406:	0e 94 a5 b1 	call	0x1634a	; 0x1634a <sprintf_P>
    e40a:	08 0f       	add	r16, r24
    e40c:	19 1f       	adc	r17, r25
    e40e:	8d b7       	in	r24, 0x3d	; 61
    e410:	9e b7       	in	r25, 0x3e	; 62
    e412:	06 96       	adiw	r24, 0x06	; 6
    e414:	8d bf       	out	0x3d, r24	; 61
    e416:	9e bf       	out	0x3e, r25	; 62
    e418:	ce 01       	movw	r24, r28
    e41a:	02 96       	adiw	r24, 0x02	; 2
    e41c:	a9 e0       	ldi	r26, 0x09	; 9
    e41e:	ac 15       	cp	r26, r12
    e420:	80 f0       	brcs	.+32     	; 0xe442 <arb_printf+0x134>
    e422:	00 d0       	rcall	.+0      	; 0xe424 <arb_printf+0x116>
    e424:	00 d0       	rcall	.+0      	; 0xe426 <arb_printf+0x118>
    e426:	ed b7       	in	r30, 0x3d	; 61
    e428:	fe b7       	in	r31, 0x3e	; 62
    e42a:	31 96       	adiw	r30, 0x01	; 1
    e42c:	80 0f       	add	r24, r16
    e42e:	91 1f       	adc	r25, r17
    e430:	ad b7       	in	r26, 0x3d	; 61
    e432:	be b7       	in	r27, 0x3e	; 62
    e434:	11 96       	adiw	r26, 0x01	; 1
    e436:	8d 93       	st	X+, r24
    e438:	9c 93       	st	X, r25
    e43a:	12 97       	sbiw	r26, 0x02	; 2
    e43c:	8d ef       	ldi	r24, 0xFD	; 253
    e43e:	9c e0       	ldi	r25, 0x0C	; 12
    e440:	0f c0       	rjmp	.+30     	; 0xe460 <arb_printf+0x152>
    e442:	00 d0       	rcall	.+0      	; 0xe444 <arb_printf+0x136>
    e444:	00 d0       	rcall	.+0      	; 0xe446 <arb_printf+0x138>
    e446:	ed b7       	in	r30, 0x3d	; 61
    e448:	fe b7       	in	r31, 0x3e	; 62
    e44a:	31 96       	adiw	r30, 0x01	; 1
    e44c:	80 0f       	add	r24, r16
    e44e:	91 1f       	adc	r25, r17
    e450:	ad b7       	in	r26, 0x3d	; 61
    e452:	be b7       	in	r27, 0x3e	; 62
    e454:	11 96       	adiw	r26, 0x01	; 1
    e456:	8d 93       	st	X+, r24
    e458:	9c 93       	st	X, r25
    e45a:	12 97       	sbiw	r26, 0x02	; 2
    e45c:	88 ef       	ldi	r24, 0xF8	; 248
    e45e:	9c e0       	ldi	r25, 0x0C	; 12
    e460:	82 83       	std	Z+2, r24	; 0x02
    e462:	93 83       	std	Z+3, r25	; 0x03
    e464:	c4 82       	std	Z+4, r12	; 0x04
    e466:	15 82       	std	Z+5, r1	; 0x05
    e468:	0e 94 a5 b1 	call	0x1634a	; 0x1634a <sprintf_P>
    e46c:	08 0f       	add	r16, r24
    e46e:	19 1f       	adc	r17, r25
    e470:	8d b7       	in	r24, 0x3d	; 61
    e472:	9e b7       	in	r25, 0x3e	; 62
    e474:	06 96       	adiw	r24, 0x06	; 6
    e476:	8d bf       	out	0x3d, r24	; 61
    e478:	9e bf       	out	0x3e, r25	; 62
    e47a:	6b a5       	ldd	r22, Y+43	; 0x2b
    e47c:	7c a5       	ldd	r23, Y+44	; 0x2c
    e47e:	8d a5       	ldd	r24, Y+45	; 0x2d
    e480:	9e a5       	ldd	r25, Y+46	; 0x2e
    e482:	28 ee       	ldi	r18, 0xE8	; 232
    e484:	33 e0       	ldi	r19, 0x03	; 3
    e486:	40 e0       	ldi	r20, 0x00	; 0
    e488:	50 e0       	ldi	r21, 0x00	; 0
    e48a:	0e 94 00 b4 	call	0x16800	; 0x16800 <__udivmodsi4>
    e48e:	2a 30       	cpi	r18, 0x0A	; 10
    e490:	31 05       	cpc	r19, r1
    e492:	94 f4       	brge	.+36     	; 0xe4b8 <arb_printf+0x1aa>
    e494:	00 d0       	rcall	.+0      	; 0xe496 <arb_printf+0x188>
    e496:	00 d0       	rcall	.+0      	; 0xe498 <arb_printf+0x18a>
    e498:	ed b7       	in	r30, 0x3d	; 61
    e49a:	fe b7       	in	r31, 0x3e	; 62
    e49c:	31 96       	adiw	r30, 0x01	; 1
    e49e:	ce 01       	movw	r24, r28
    e4a0:	02 96       	adiw	r24, 0x02	; 2
    e4a2:	80 0f       	add	r24, r16
    e4a4:	91 1f       	adc	r25, r17
    e4a6:	ad b7       	in	r26, 0x3d	; 61
    e4a8:	be b7       	in	r27, 0x3e	; 62
    e4aa:	11 96       	adiw	r26, 0x01	; 1
    e4ac:	8d 93       	st	X+, r24
    e4ae:	9c 93       	st	X, r25
    e4b0:	12 97       	sbiw	r26, 0x02	; 2
    e4b2:	8f ee       	ldi	r24, 0xEF	; 239
    e4b4:	9c e0       	ldi	r25, 0x0C	; 12
    e4b6:	2a c0       	rjmp	.+84     	; 0xe50c <arb_printf+0x1fe>
    e4b8:	24 36       	cpi	r18, 0x64	; 100
    e4ba:	31 05       	cpc	r19, r1
    e4bc:	94 f4       	brge	.+36     	; 0xe4e2 <arb_printf+0x1d4>
    e4be:	00 d0       	rcall	.+0      	; 0xe4c0 <arb_printf+0x1b2>
    e4c0:	00 d0       	rcall	.+0      	; 0xe4c2 <arb_printf+0x1b4>
    e4c2:	ed b7       	in	r30, 0x3d	; 61
    e4c4:	fe b7       	in	r31, 0x3e	; 62
    e4c6:	31 96       	adiw	r30, 0x01	; 1
    e4c8:	ce 01       	movw	r24, r28
    e4ca:	02 96       	adiw	r24, 0x02	; 2
    e4cc:	80 0f       	add	r24, r16
    e4ce:	91 1f       	adc	r25, r17
    e4d0:	ad b7       	in	r26, 0x3d	; 61
    e4d2:	be b7       	in	r27, 0x3e	; 62
    e4d4:	11 96       	adiw	r26, 0x01	; 1
    e4d6:	8d 93       	st	X+, r24
    e4d8:	9c 93       	st	X, r25
    e4da:	12 97       	sbiw	r26, 0x02	; 2
    e4dc:	87 ee       	ldi	r24, 0xE7	; 231
    e4de:	9c e0       	ldi	r25, 0x0C	; 12
    e4e0:	15 c0       	rjmp	.+42     	; 0xe50c <arb_printf+0x1fe>
    e4e2:	a3 e0       	ldi	r26, 0x03	; 3
    e4e4:	28 3e       	cpi	r18, 0xE8	; 232
    e4e6:	3a 07       	cpc	r19, r26
    e4e8:	f4 f4       	brge	.+60     	; 0xe526 <arb_printf+0x218>
    e4ea:	00 d0       	rcall	.+0      	; 0xe4ec <arb_printf+0x1de>
    e4ec:	00 d0       	rcall	.+0      	; 0xe4ee <arb_printf+0x1e0>
    e4ee:	ed b7       	in	r30, 0x3d	; 61
    e4f0:	fe b7       	in	r31, 0x3e	; 62
    e4f2:	31 96       	adiw	r30, 0x01	; 1
    e4f4:	ce 01       	movw	r24, r28
    e4f6:	02 96       	adiw	r24, 0x02	; 2
    e4f8:	80 0f       	add	r24, r16
    e4fa:	91 1f       	adc	r25, r17
    e4fc:	ad b7       	in	r26, 0x3d	; 61
    e4fe:	be b7       	in	r27, 0x3e	; 62
    e500:	11 96       	adiw	r26, 0x01	; 1
    e502:	8d 93       	st	X+, r24
    e504:	9c 93       	st	X, r25
    e506:	12 97       	sbiw	r26, 0x02	; 2
    e508:	80 ee       	ldi	r24, 0xE0	; 224
    e50a:	9c e0       	ldi	r25, 0x0C	; 12
    e50c:	82 83       	std	Z+2, r24	; 0x02
    e50e:	93 83       	std	Z+3, r25	; 0x03
    e510:	24 83       	std	Z+4, r18	; 0x04
    e512:	35 83       	std	Z+5, r19	; 0x05
    e514:	0e 94 a5 b1 	call	0x1634a	; 0x1634a <sprintf_P>
    e518:	08 0f       	add	r16, r24
    e51a:	19 1f       	adc	r17, r25
    e51c:	8d b7       	in	r24, 0x3d	; 61
    e51e:	9e b7       	in	r25, 0x3e	; 62
    e520:	06 96       	adiw	r24, 0x06	; 6
    e522:	8d bf       	out	0x3d, r24	; 61
    e524:	9e bf       	out	0x3e, r25	; 62
    e526:	80 91 e8 24 	lds	r24, 0x24E8
    e52a:	90 91 e9 24 	lds	r25, 0x24E9
    e52e:	be 01       	movw	r22, r28
    e530:	6e 5f       	subi	r22, 0xFE	; 254
    e532:	7f 4f       	sbci	r23, 0xFF	; 255
    e534:	a8 01       	movw	r20, r16
    e536:	0e 94 6a 88 	call	0x110d4	; 0x110d4 <utl_writeBlock>
    e53a:	97 e0       	ldi	r25, 0x07	; 7
    e53c:	e9 22       	and	r14, r25
    e53e:	ff 24       	eor	r15, r15
    e540:	80 91 ea 24 	lds	r24, 0x24EA
    e544:	90 e0       	ldi	r25, 0x00	; 0
    e546:	e8 16       	cp	r14, r24
    e548:	f9 06       	cpc	r15, r25
    e54a:	cc f0       	brlt	.+50     	; 0xe57e <arb_printf+0x270>
    e54c:	80 91 e8 24 	lds	r24, 0x24E8
    e550:	90 91 e9 24 	lds	r25, 0x24E9
    e554:	eb 2d       	mov	r30, r11
    e556:	fa 2d       	mov	r31, r10
    e558:	df 01       	movw	r26, r30
    e55a:	0d 90       	ld	r0, X+
    e55c:	00 20       	and	r0, r0
    e55e:	e9 f7       	brne	.-6      	; 0xe55a <arb_printf+0x24c>
    e560:	11 97       	sbiw	r26, 0x01	; 1
    e562:	ae 1b       	sub	r26, r30
    e564:	bf 0b       	sbc	r27, r31
    e566:	6b 2d       	mov	r22, r11
    e568:	7a 2d       	mov	r23, r10
    e56a:	ad 01       	movw	r20, r26
    e56c:	0e 94 6a 88 	call	0x110d4	; 0x110d4 <utl_writeBlock>
    e570:	80 91 e8 24 	lds	r24, 0x24E8
    e574:	90 91 e9 24 	lds	r25, 0x24E9
    e578:	6a e0       	ldi	r22, 0x0A	; 10
    e57a:	0e 94 da 86 	call	0x10db4	; 0x10db4 <utl_writeByte>
    e57e:	89 81       	ldd	r24, Y+1	; 0x01
    e580:	8f bf       	out	0x3f, r24	; 63
    e582:	ae 96       	adiw	r28, 0x2e	; 46
    e584:	cd bf       	out	0x3d, r28	; 61
    e586:	de bf       	out	0x3e, r29	; 62
    e588:	cf 91       	pop	r28
    e58a:	df 91       	pop	r29
    e58c:	1f 91       	pop	r17
    e58e:	0f 91       	pop	r16
    e590:	ff 90       	pop	r15
    e592:	ef 90       	pop	r14
    e594:	df 90       	pop	r13
    e596:	cf 90       	pop	r12
    e598:	bf 90       	pop	r11
    e59a:	af 90       	pop	r10
    e59c:	08 95       	ret

0000e59e <arb_getOneMinLoadingEst>:
    e59e:	60 91 f3 24 	lds	r22, 0x24F3
    e5a2:	70 91 f4 24 	lds	r23, 0x24F4
    e5a6:	80 91 f5 24 	lds	r24, 0x24F5
    e5aa:	90 91 f6 24 	lds	r25, 0x24F6
    e5ae:	08 95       	ret

0000e5b0 <arb_getFiveMinLoadingEst>:
    e5b0:	60 91 f7 24 	lds	r22, 0x24F7
    e5b4:	70 91 f8 24 	lds	r23, 0x24F8
    e5b8:	80 91 f9 24 	lds	r24, 0x24F9
    e5bc:	90 91 fa 24 	lds	r25, 0x24FA
    e5c0:	08 95       	ret

0000e5c2 <arb_roundRobinScheduler>:
    e5c2:	4f 92       	push	r4
    e5c4:	5f 92       	push	r5
    e5c6:	6f 92       	push	r6
    e5c8:	7f 92       	push	r7
    e5ca:	8f 92       	push	r8
    e5cc:	9f 92       	push	r9
    e5ce:	af 92       	push	r10
    e5d0:	bf 92       	push	r11
    e5d2:	cf 92       	push	r12
    e5d4:	df 92       	push	r13
    e5d6:	ef 92       	push	r14
    e5d8:	ff 92       	push	r15
    e5da:	0f 93       	push	r16
    e5dc:	1f 93       	push	r17
    e5de:	df 93       	push	r29
    e5e0:	cf 93       	push	r28
    e5e2:	00 d0       	rcall	.+0      	; 0xe5e4 <arb_roundRobinScheduler+0x22>
    e5e4:	0f 92       	push	r0
    e5e6:	cd b7       	in	r28, 0x3d	; 61
    e5e8:	de b7       	in	r29, 0x3e	; 62
    e5ea:	e0 91 ab 22 	lds	r30, 0x22AB
    e5ee:	f0 91 ac 22 	lds	r31, 0x22AC
    e5f2:	86 81       	ldd	r24, Z+6	; 0x06
    e5f4:	97 81       	ldd	r25, Z+7	; 0x07
    e5f6:	89 83       	std	Y+1, r24	; 0x01
    e5f8:	9a 83       	std	Y+2, r25	; 0x02
    e5fa:	80 91 f0 24 	lds	r24, 0x24F0
    e5fe:	88 23       	and	r24, r24
    e600:	09 f4       	brne	.+2      	; 0xe604 <arb_roundRobinScheduler+0x42>
    e602:	a3 c1       	rjmp	.+838    	; 0xe94a <arb_roundRobinScheduler+0x388>
    e604:	e9 81       	ldd	r30, Y+1	; 0x01
    e606:	fa 81       	ldd	r31, Y+2	; 0x02
    e608:	80 85       	ldd	r24, Z+8	; 0x08
    e60a:	91 85       	ldd	r25, Z+9	; 0x09
    e60c:	89 83       	std	Y+1, r24	; 0x01
    e60e:	9a 83       	std	Y+2, r25	; 0x02
    e610:	e9 81       	ldd	r30, Y+1	; 0x01
    e612:	fa 81       	ldd	r31, Y+2	; 0x02
    e614:	a0 81       	ld	r26, Z
    e616:	b1 81       	ldd	r27, Z+1	; 0x01
    e618:	11 96       	adiw	r26, 0x01	; 1
    e61a:	8c 91       	ld	r24, X
    e61c:	11 97       	sbiw	r26, 0x01	; 1
    e61e:	83 30       	cpi	r24, 0x03	; 3
    e620:	89 f3       	breq	.-30     	; 0xe604 <arb_roundRobinScheduler+0x42>
    e622:	e0 91 ab 22 	lds	r30, 0x22AB
    e626:	f0 91 ac 22 	lds	r31, 0x22AC
    e62a:	89 81       	ldd	r24, Y+1	; 0x01
    e62c:	9a 81       	ldd	r25, Y+2	; 0x02
    e62e:	86 83       	std	Z+6, r24	; 0x06
    e630:	97 83       	std	Z+7, r25	; 0x07
    e632:	a0 93 ec 24 	sts	0x24EC, r26
    e636:	b0 93 ed 24 	sts	0x24ED, r27
    e63a:	81 e0       	ldi	r24, 0x01	; 1
    e63c:	11 96       	adiw	r26, 0x01	; 1
    e63e:	8c 93       	st	X, r24
    e640:	e0 91 ab 22 	lds	r30, 0x22AB
    e644:	f0 91 ac 22 	lds	r31, 0x22AC
    e648:	62 81       	ldd	r22, Z+2	; 0x02
    e64a:	73 81       	ldd	r23, Z+3	; 0x03
    e64c:	e0 91 ab 22 	lds	r30, 0x22AB
    e650:	f0 91 ac 22 	lds	r31, 0x22AC
    e654:	80 85       	ldd	r24, Z+8	; 0x08
    e656:	91 85       	ldd	r25, Z+9	; 0x09
    e658:	8b 83       	std	Y+3, r24	; 0x03
    e65a:	9c 83       	std	Y+4, r25	; 0x04
    e65c:	20 91 fb 24 	lds	r18, 0x24FB
    e660:	30 91 fc 24 	lds	r19, 0x24FC
    e664:	40 91 fd 24 	lds	r20, 0x24FD
    e668:	50 91 fe 24 	lds	r21, 0x24FE
    e66c:	17 c0       	rjmp	.+46     	; 0xe69c <arb_roundRobinScheduler+0xda>
    e66e:	eb 81       	ldd	r30, Y+3	; 0x03
    e670:	fc 81       	ldd	r31, Y+4	; 0x04
    e672:	01 90       	ld	r0, Z+
    e674:	f0 81       	ld	r31, Z
    e676:	e0 2d       	mov	r30, r0
    e678:	81 81       	ldd	r24, Z+1	; 0x01
    e67a:	82 30       	cpi	r24, 0x02	; 2
    e67c:	38 f4       	brcc	.+14     	; 0xe68c <arb_roundRobinScheduler+0xca>
    e67e:	82 81       	ldd	r24, Z+2	; 0x02
    e680:	8f 3f       	cpi	r24, 0xFF	; 255
    e682:	21 f0       	breq	.+8      	; 0xe68c <arb_roundRobinScheduler+0xca>
    e684:	2f 5f       	subi	r18, 0xFF	; 255
    e686:	3f 4f       	sbci	r19, 0xFF	; 255
    e688:	4f 4f       	sbci	r20, 0xFF	; 255
    e68a:	5f 4f       	sbci	r21, 0xFF	; 255
    e68c:	61 50       	subi	r22, 0x01	; 1
    e68e:	70 40       	sbci	r23, 0x00	; 0
    e690:	eb 81       	ldd	r30, Y+3	; 0x03
    e692:	fc 81       	ldd	r31, Y+4	; 0x04
    e694:	80 85       	ldd	r24, Z+8	; 0x08
    e696:	91 85       	ldd	r25, Z+9	; 0x09
    e698:	8b 83       	std	Y+3, r24	; 0x03
    e69a:	9c 83       	std	Y+4, r25	; 0x04
    e69c:	61 15       	cp	r22, r1
    e69e:	71 05       	cpc	r23, r1
    e6a0:	31 f7       	brne	.-52     	; 0xe66e <arb_roundRobinScheduler+0xac>
    e6a2:	20 93 fb 24 	sts	0x24FB, r18
    e6a6:	30 93 fc 24 	sts	0x24FC, r19
    e6aa:	40 93 fd 24 	sts	0x24FD, r20
    e6ae:	50 93 fe 24 	sts	0x24FE, r21
    e6b2:	80 91 f1 24 	lds	r24, 0x24F1
    e6b6:	90 91 f2 24 	lds	r25, 0x24F2
    e6ba:	01 96       	adiw	r24, 0x01	; 1
    e6bc:	80 93 f1 24 	sts	0x24F1, r24
    e6c0:	90 93 f2 24 	sts	0x24F2, r25
    e6c4:	84 5f       	subi	r24, 0xF4	; 244
    e6c6:	91 40       	sbci	r25, 0x01	; 1
    e6c8:	09 f0       	breq	.+2      	; 0xe6cc <arb_roundRobinScheduler+0x10a>
    e6ca:	3f c1       	rjmp	.+638    	; 0xe94a <arb_roundRobinScheduler+0x388>
    e6cc:	6f e0       	ldi	r22, 0x0F	; 15
    e6ce:	22 0f       	add	r18, r18
    e6d0:	33 1f       	adc	r19, r19
    e6d2:	44 1f       	adc	r20, r20
    e6d4:	55 1f       	adc	r21, r21
    e6d6:	6a 95       	dec	r22
    e6d8:	d1 f7       	brne	.-12     	; 0xe6ce <arb_roundRobinScheduler+0x10c>
    e6da:	ca 01       	movw	r24, r20
    e6dc:	b9 01       	movw	r22, r18
    e6de:	24 ef       	ldi	r18, 0xF4	; 244
    e6e0:	31 e0       	ldi	r19, 0x01	; 1
    e6e2:	40 e0       	ldi	r20, 0x00	; 0
    e6e4:	50 e0       	ldi	r21, 0x00	; 0
    e6e6:	0e 94 00 b4 	call	0x16800	; 0x16800 <__udivmodsi4>
    e6ea:	72 2e       	mov	r7, r18
    e6ec:	63 2e       	mov	r6, r19
    e6ee:	54 2e       	mov	r5, r20
    e6f0:	45 2e       	mov	r4, r21
    e6f2:	10 92 fb 24 	sts	0x24FB, r1
    e6f6:	10 92 fc 24 	sts	0x24FC, r1
    e6fa:	10 92 fd 24 	sts	0x24FD, r1
    e6fe:	10 92 fe 24 	sts	0x24FE, r1
    e702:	10 92 f1 24 	sts	0x24F1, r1
    e706:	10 92 f2 24 	sts	0x24F2, r1
    e70a:	60 91 f3 24 	lds	r22, 0x24F3
    e70e:	70 91 f4 24 	lds	r23, 0x24F4
    e712:	80 91 f5 24 	lds	r24, 0x24F5
    e716:	90 91 f6 24 	lds	r25, 0x24F6
    e71a:	25 e5       	ldi	r18, 0x55	; 85
    e71c:	35 e7       	ldi	r19, 0x75	; 117
    e71e:	40 e0       	ldi	r20, 0x00	; 0
    e720:	50 e0       	ldi	r21, 0x00	; 0
    e722:	0e 94 e1 b3 	call	0x167c2	; 0x167c2 <__mulsi3>
    e726:	8b 01       	movw	r16, r22
    e728:	9c 01       	movw	r18, r24
    e72a:	40 e0       	ldi	r20, 0x00	; 0
    e72c:	50 e0       	ldi	r21, 0x00	; 0
    e72e:	60 e0       	ldi	r22, 0x00	; 0
    e730:	70 e0       	ldi	r23, 0x00	; 0
    e732:	a0 2e       	mov	r10, r16
    e734:	90 e4       	ldi	r25, 0x40	; 64
    e736:	f9 2e       	mov	r15, r25
    e738:	f1 0e       	add	r15, r17
    e73a:	91 e0       	ldi	r25, 0x01	; 1
    e73c:	f1 16       	cp	r15, r17
    e73e:	08 f0       	brcs	.+2      	; 0xe742 <arb_roundRobinScheduler+0x180>
    e740:	90 e0       	ldi	r25, 0x00	; 0
    e742:	e9 2e       	mov	r14, r25
    e744:	e2 0e       	add	r14, r18
    e746:	91 e0       	ldi	r25, 0x01	; 1
    e748:	e2 16       	cp	r14, r18
    e74a:	08 f0       	brcs	.+2      	; 0xe74e <arb_roundRobinScheduler+0x18c>
    e74c:	90 e0       	ldi	r25, 0x00	; 0
    e74e:	d9 2e       	mov	r13, r25
    e750:	d3 0e       	add	r13, r19
    e752:	91 e0       	ldi	r25, 0x01	; 1
    e754:	d3 16       	cp	r13, r19
    e756:	08 f0       	brcs	.+2      	; 0xe75a <arb_roundRobinScheduler+0x198>
    e758:	90 e0       	ldi	r25, 0x00	; 0
    e75a:	99 2e       	mov	r9, r25
    e75c:	cc 24       	eor	r12, r12
    e75e:	c3 94       	inc	r12
    e760:	44 23       	and	r20, r20
    e762:	09 f4       	brne	.+2      	; 0xe766 <arb_roundRobinScheduler+0x1a4>
    e764:	cc 24       	eor	r12, r12
    e766:	bb 24       	eor	r11, r11
    e768:	b3 94       	inc	r11
    e76a:	55 23       	and	r21, r21
    e76c:	09 f4       	brne	.+2      	; 0xe770 <arb_roundRobinScheduler+0x1ae>
    e76e:	bb 24       	eor	r11, r11
    e770:	88 24       	eor	r8, r8
    e772:	83 94       	inc	r8
    e774:	66 23       	and	r22, r22
    e776:	09 f4       	brne	.+2      	; 0xe77a <arb_roundRobinScheduler+0x1b8>
    e778:	88 24       	eor	r8, r8
    e77a:	67 2d       	mov	r22, r7
    e77c:	76 2d       	mov	r23, r6
    e77e:	85 2d       	mov	r24, r5
    e780:	94 2d       	mov	r25, r4
    e782:	2b ea       	ldi	r18, 0xAB	; 171
    e784:	3a e0       	ldi	r19, 0x0A	; 10
    e786:	40 e0       	ldi	r20, 0x00	; 0
    e788:	50 e0       	ldi	r21, 0x00	; 0
    e78a:	0e 94 e1 b3 	call	0x167c2	; 0x167c2 <__mulsi3>
    e78e:	9b 01       	movw	r18, r22
    e790:	ac 01       	movw	r20, r24
    e792:	0a 2d       	mov	r16, r10
    e794:	06 0f       	add	r16, r22
    e796:	f1 e0       	ldi	r31, 0x01	; 1
    e798:	0a 15       	cp	r16, r10
    e79a:	08 f0       	brcs	.+2      	; 0xe79e <arb_roundRobinScheduler+0x1dc>
    e79c:	f0 e0       	ldi	r31, 0x00	; 0
    e79e:	ef 2d       	mov	r30, r15
    e7a0:	e3 0f       	add	r30, r19
    e7a2:	a1 e0       	ldi	r26, 0x01	; 1
    e7a4:	ef 15       	cp	r30, r15
    e7a6:	08 f0       	brcs	.+2      	; 0xe7aa <arb_roundRobinScheduler+0x1e8>
    e7a8:	a0 e0       	ldi	r26, 0x00	; 0
    e7aa:	1f 2f       	mov	r17, r31
    e7ac:	1e 0f       	add	r17, r30
    e7ae:	f1 e0       	ldi	r31, 0x01	; 1
    e7b0:	1e 17       	cp	r17, r30
    e7b2:	08 f0       	brcs	.+2      	; 0xe7b6 <arb_roundRobinScheduler+0x1f4>
    e7b4:	f0 e0       	ldi	r31, 0x00	; 0
    e7b6:	af 2b       	or	r26, r31
    e7b8:	ee 2d       	mov	r30, r14
    e7ba:	e4 0f       	add	r30, r20
    e7bc:	b1 e0       	ldi	r27, 0x01	; 1
    e7be:	ee 15       	cp	r30, r14
    e7c0:	08 f0       	brcs	.+2      	; 0xe7c4 <arb_roundRobinScheduler+0x202>
    e7c2:	b0 e0       	ldi	r27, 0x00	; 0
    e7c4:	ae 0f       	add	r26, r30
    e7c6:	f1 e0       	ldi	r31, 0x01	; 1
    e7c8:	ae 17       	cp	r26, r30
    e7ca:	08 f0       	brcs	.+2      	; 0xe7ce <arb_roundRobinScheduler+0x20c>
    e7cc:	f0 e0       	ldi	r31, 0x00	; 0
    e7ce:	bf 2b       	or	r27, r31
    e7d0:	6d 2d       	mov	r22, r13
    e7d2:	65 0f       	add	r22, r21
    e7d4:	91 e0       	ldi	r25, 0x01	; 1
    e7d6:	6d 15       	cp	r22, r13
    e7d8:	08 f0       	brcs	.+2      	; 0xe7dc <arb_roundRobinScheduler+0x21a>
    e7da:	90 e0       	ldi	r25, 0x00	; 0
    e7dc:	5b 2f       	mov	r21, r27
    e7de:	56 0f       	add	r21, r22
    e7e0:	81 e0       	ldi	r24, 0x01	; 1
    e7e2:	56 17       	cp	r21, r22
    e7e4:	08 f0       	brcs	.+2      	; 0xe7e8 <arb_roundRobinScheduler+0x226>
    e7e6:	80 e0       	ldi	r24, 0x00	; 0
    e7e8:	69 2f       	mov	r22, r25
    e7ea:	68 2b       	or	r22, r24
    e7ec:	69 0d       	add	r22, r9
    e7ee:	71 e0       	ldi	r23, 0x01	; 1
    e7f0:	69 15       	cp	r22, r9
    e7f2:	08 f0       	brcs	.+2      	; 0xe7f6 <arb_roundRobinScheduler+0x234>
    e7f4:	70 e0       	ldi	r23, 0x00	; 0
    e7f6:	7c 0d       	add	r23, r12
    e7f8:	81 e0       	ldi	r24, 0x01	; 1
    e7fa:	7c 15       	cp	r23, r12
    e7fc:	08 f0       	brcs	.+2      	; 0xe800 <arb_roundRobinScheduler+0x23e>
    e7fe:	80 e0       	ldi	r24, 0x00	; 0
    e800:	8b 0d       	add	r24, r11
    e802:	91 e0       	ldi	r25, 0x01	; 1
    e804:	8b 15       	cp	r24, r11
    e806:	08 f0       	brcs	.+2      	; 0xe80a <arb_roundRobinScheduler+0x248>
    e808:	90 e0       	ldi	r25, 0x00	; 0
    e80a:	98 01       	movw	r18, r16
    e80c:	4a 2f       	mov	r20, r26
    e80e:	98 0d       	add	r25, r8
    e810:	0f e0       	ldi	r16, 0x0F	; 15
    e812:	0e 94 dc 61 	call	0xc3b8	; 0xc3b8 <__lshrdi3>
    e816:	c9 01       	movw	r24, r18
    e818:	ba 01       	movw	r22, r20
    e81a:	20 93 f3 24 	sts	0x24F3, r18
    e81e:	90 93 f4 24 	sts	0x24F4, r25
    e822:	40 93 f5 24 	sts	0x24F5, r20
    e826:	70 93 f6 24 	sts	0x24F6, r23
    e82a:	60 91 f7 24 	lds	r22, 0x24F7
    e82e:	70 91 f8 24 	lds	r23, 0x24F8
    e832:	80 91 f9 24 	lds	r24, 0x24F9
    e836:	90 91 fa 24 	lds	r25, 0x24FA
    e83a:	2d ed       	ldi	r18, 0xDD	; 221
    e83c:	3d e7       	ldi	r19, 0x7D	; 125
    e83e:	40 e0       	ldi	r20, 0x00	; 0
    e840:	50 e0       	ldi	r21, 0x00	; 0
    e842:	0e 94 e1 b3 	call	0x167c2	; 0x167c2 <__mulsi3>
    e846:	8b 01       	movw	r16, r22
    e848:	9c 01       	movw	r18, r24
    e84a:	40 e0       	ldi	r20, 0x00	; 0
    e84c:	50 e0       	ldi	r21, 0x00	; 0
    e84e:	60 e0       	ldi	r22, 0x00	; 0
    e850:	70 e0       	ldi	r23, 0x00	; 0
    e852:	a0 2e       	mov	r10, r16
    e854:	80 e4       	ldi	r24, 0x40	; 64
    e856:	f8 2e       	mov	r15, r24
    e858:	f1 0e       	add	r15, r17
    e85a:	91 e0       	ldi	r25, 0x01	; 1
    e85c:	f1 16       	cp	r15, r17
    e85e:	08 f0       	brcs	.+2      	; 0xe862 <arb_roundRobinScheduler+0x2a0>
    e860:	90 e0       	ldi	r25, 0x00	; 0
    e862:	e9 2e       	mov	r14, r25
    e864:	e2 0e       	add	r14, r18
    e866:	91 e0       	ldi	r25, 0x01	; 1
    e868:	e2 16       	cp	r14, r18
    e86a:	08 f0       	brcs	.+2      	; 0xe86e <arb_roundRobinScheduler+0x2ac>
    e86c:	90 e0       	ldi	r25, 0x00	; 0
    e86e:	d9 2e       	mov	r13, r25
    e870:	d3 0e       	add	r13, r19
    e872:	91 e0       	ldi	r25, 0x01	; 1
    e874:	d3 16       	cp	r13, r19
    e876:	08 f0       	brcs	.+2      	; 0xe87a <arb_roundRobinScheduler+0x2b8>
    e878:	90 e0       	ldi	r25, 0x00	; 0
    e87a:	99 2e       	mov	r9, r25
    e87c:	cc 24       	eor	r12, r12
    e87e:	c3 94       	inc	r12
    e880:	44 23       	and	r20, r20
    e882:	09 f4       	brne	.+2      	; 0xe886 <arb_roundRobinScheduler+0x2c4>
    e884:	cc 24       	eor	r12, r12
    e886:	bb 24       	eor	r11, r11
    e888:	b3 94       	inc	r11
    e88a:	55 23       	and	r21, r21
    e88c:	09 f4       	brne	.+2      	; 0xe890 <arb_roundRobinScheduler+0x2ce>
    e88e:	bb 24       	eor	r11, r11
    e890:	88 24       	eor	r8, r8
    e892:	83 94       	inc	r8
    e894:	66 23       	and	r22, r22
    e896:	09 f4       	brne	.+2      	; 0xe89a <arb_roundRobinScheduler+0x2d8>
    e898:	88 24       	eor	r8, r8
    e89a:	67 2d       	mov	r22, r7
    e89c:	76 2d       	mov	r23, r6
    e89e:	85 2d       	mov	r24, r5
    e8a0:	94 2d       	mov	r25, r4
    e8a2:	23 e2       	ldi	r18, 0x23	; 35
    e8a4:	32 e0       	ldi	r19, 0x02	; 2
    e8a6:	40 e0       	ldi	r20, 0x00	; 0
    e8a8:	50 e0       	ldi	r21, 0x00	; 0
    e8aa:	0e 94 e1 b3 	call	0x167c2	; 0x167c2 <__mulsi3>
    e8ae:	9b 01       	movw	r18, r22
    e8b0:	ac 01       	movw	r20, r24
    e8b2:	0a 2d       	mov	r16, r10
    e8b4:	06 0f       	add	r16, r22
    e8b6:	f1 e0       	ldi	r31, 0x01	; 1
    e8b8:	0a 15       	cp	r16, r10
    e8ba:	08 f0       	brcs	.+2      	; 0xe8be <arb_roundRobinScheduler+0x2fc>
    e8bc:	f0 e0       	ldi	r31, 0x00	; 0
    e8be:	ef 2d       	mov	r30, r15
    e8c0:	e3 0f       	add	r30, r19
    e8c2:	a1 e0       	ldi	r26, 0x01	; 1
    e8c4:	ef 15       	cp	r30, r15
    e8c6:	08 f0       	brcs	.+2      	; 0xe8ca <arb_roundRobinScheduler+0x308>
    e8c8:	a0 e0       	ldi	r26, 0x00	; 0
    e8ca:	1f 2f       	mov	r17, r31
    e8cc:	1e 0f       	add	r17, r30
    e8ce:	f1 e0       	ldi	r31, 0x01	; 1
    e8d0:	1e 17       	cp	r17, r30
    e8d2:	08 f0       	brcs	.+2      	; 0xe8d6 <arb_roundRobinScheduler+0x314>
    e8d4:	f0 e0       	ldi	r31, 0x00	; 0
    e8d6:	af 2b       	or	r26, r31
    e8d8:	ee 2d       	mov	r30, r14
    e8da:	e4 0f       	add	r30, r20
    e8dc:	b1 e0       	ldi	r27, 0x01	; 1
    e8de:	ee 15       	cp	r30, r14
    e8e0:	08 f0       	brcs	.+2      	; 0xe8e4 <arb_roundRobinScheduler+0x322>
    e8e2:	b0 e0       	ldi	r27, 0x00	; 0
    e8e4:	ae 0f       	add	r26, r30
    e8e6:	f1 e0       	ldi	r31, 0x01	; 1
    e8e8:	ae 17       	cp	r26, r30
    e8ea:	08 f0       	brcs	.+2      	; 0xe8ee <arb_roundRobinScheduler+0x32c>
    e8ec:	f0 e0       	ldi	r31, 0x00	; 0
    e8ee:	bf 2b       	or	r27, r31
    e8f0:	6d 2d       	mov	r22, r13
    e8f2:	65 0f       	add	r22, r21
    e8f4:	91 e0       	ldi	r25, 0x01	; 1
    e8f6:	6d 15       	cp	r22, r13
    e8f8:	08 f0       	brcs	.+2      	; 0xe8fc <arb_roundRobinScheduler+0x33a>
    e8fa:	90 e0       	ldi	r25, 0x00	; 0
    e8fc:	5b 2f       	mov	r21, r27
    e8fe:	56 0f       	add	r21, r22
    e900:	81 e0       	ldi	r24, 0x01	; 1
    e902:	56 17       	cp	r21, r22
    e904:	08 f0       	brcs	.+2      	; 0xe908 <arb_roundRobinScheduler+0x346>
    e906:	80 e0       	ldi	r24, 0x00	; 0
    e908:	69 2f       	mov	r22, r25
    e90a:	68 2b       	or	r22, r24
    e90c:	69 0d       	add	r22, r9
    e90e:	71 e0       	ldi	r23, 0x01	; 1
    e910:	69 15       	cp	r22, r9
    e912:	08 f0       	brcs	.+2      	; 0xe916 <arb_roundRobinScheduler+0x354>
    e914:	70 e0       	ldi	r23, 0x00	; 0
    e916:	7c 0d       	add	r23, r12
    e918:	81 e0       	ldi	r24, 0x01	; 1
    e91a:	7c 15       	cp	r23, r12
    e91c:	08 f0       	brcs	.+2      	; 0xe920 <arb_roundRobinScheduler+0x35e>
    e91e:	80 e0       	ldi	r24, 0x00	; 0
    e920:	8b 0d       	add	r24, r11
    e922:	91 e0       	ldi	r25, 0x01	; 1
    e924:	8b 15       	cp	r24, r11
    e926:	08 f0       	brcs	.+2      	; 0xe92a <arb_roundRobinScheduler+0x368>
    e928:	90 e0       	ldi	r25, 0x00	; 0
    e92a:	98 01       	movw	r18, r16
    e92c:	4a 2f       	mov	r20, r26
    e92e:	98 0d       	add	r25, r8
    e930:	0f e0       	ldi	r16, 0x0F	; 15
    e932:	0e 94 dc 61 	call	0xc3b8	; 0xc3b8 <__lshrdi3>
    e936:	c9 01       	movw	r24, r18
    e938:	ba 01       	movw	r22, r20
    e93a:	20 93 f7 24 	sts	0x24F7, r18
    e93e:	90 93 f8 24 	sts	0x24F8, r25
    e942:	40 93 f9 24 	sts	0x24F9, r20
    e946:	70 93 fa 24 	sts	0x24FA, r23
    e94a:	24 96       	adiw	r28, 0x04	; 4
    e94c:	cd bf       	out	0x3d, r28	; 61
    e94e:	de bf       	out	0x3e, r29	; 62
    e950:	cf 91       	pop	r28
    e952:	df 91       	pop	r29
    e954:	1f 91       	pop	r17
    e956:	0f 91       	pop	r16
    e958:	ff 90       	pop	r15
    e95a:	ef 90       	pop	r14
    e95c:	df 90       	pop	r13
    e95e:	cf 90       	pop	r12
    e960:	bf 90       	pop	r11
    e962:	af 90       	pop	r10
    e964:	9f 90       	pop	r9
    e966:	8f 90       	pop	r8
    e968:	7f 90       	pop	r7
    e96a:	6f 90       	pop	r6
    e96c:	5f 90       	pop	r5
    e96e:	4f 90       	pop	r4
    e970:	08 95       	ret

0000e972 <arb_priorityScheduler>:
    e972:	4f 92       	push	r4
    e974:	5f 92       	push	r5
    e976:	6f 92       	push	r6
    e978:	7f 92       	push	r7
    e97a:	8f 92       	push	r8
    e97c:	9f 92       	push	r9
    e97e:	af 92       	push	r10
    e980:	bf 92       	push	r11
    e982:	cf 92       	push	r12
    e984:	df 92       	push	r13
    e986:	ef 92       	push	r14
    e988:	ff 92       	push	r15
    e98a:	0f 93       	push	r16
    e98c:	1f 93       	push	r17
    e98e:	df 93       	push	r29
    e990:	cf 93       	push	r28
    e992:	00 d0       	rcall	.+0      	; 0xe994 <arb_priorityScheduler+0x22>
    e994:	00 d0       	rcall	.+0      	; 0xe996 <arb_priorityScheduler+0x24>
    e996:	cd b7       	in	r28, 0x3d	; 61
    e998:	de b7       	in	r29, 0x3e	; 62
    e99a:	80 91 f0 24 	lds	r24, 0x24F0
    e99e:	88 23       	and	r24, r24
    e9a0:	09 f4       	brne	.+2      	; 0xe9a4 <arb_priorityScheduler+0x32>
    e9a2:	d7 c1       	rjmp	.+942    	; 0xed52 <arb_priorityScheduler+0x3e0>
    e9a4:	e0 91 ab 22 	lds	r30, 0x22AB
    e9a8:	f0 91 ac 22 	lds	r31, 0x22AC
    e9ac:	80 85       	ldd	r24, Z+8	; 0x08
    e9ae:	91 85       	ldd	r25, Z+9	; 0x09
    e9b0:	8b 83       	std	Y+3, r24	; 0x03
    e9b2:	9c 83       	std	Y+4, r25	; 0x04
    e9b4:	eb 81       	ldd	r30, Y+3	; 0x03
    e9b6:	fc 81       	ldd	r31, Y+4	; 0x04
    e9b8:	01 90       	ld	r0, Z+
    e9ba:	f0 81       	ld	r31, Z
    e9bc:	e0 2d       	mov	r30, r0
    e9be:	82 81       	ldd	r24, Z+2	; 0x02
    e9c0:	48 2f       	mov	r20, r24
    e9c2:	50 e0       	ldi	r21, 0x00	; 0
    e9c4:	e0 91 ab 22 	lds	r30, 0x22AB
    e9c8:	f0 91 ac 22 	lds	r31, 0x22AC
    e9cc:	62 81       	ldd	r22, Z+2	; 0x02
    e9ce:	73 81       	ldd	r23, Z+3	; 0x03
    e9d0:	e0 91 ab 22 	lds	r30, 0x22AB
    e9d4:	f0 91 ac 22 	lds	r31, 0x22AC
    e9d8:	80 85       	ldd	r24, Z+8	; 0x08
    e9da:	91 85       	ldd	r25, Z+9	; 0x09
    e9dc:	89 83       	std	Y+1, r24	; 0x01
    e9de:	9a 83       	std	Y+2, r25	; 0x02
    e9e0:	1d c0       	rjmp	.+58     	; 0xea1c <arb_priorityScheduler+0xaa>
    e9e2:	e9 81       	ldd	r30, Y+1	; 0x01
    e9e4:	fa 81       	ldd	r31, Y+2	; 0x02
    e9e6:	01 90       	ld	r0, Z+
    e9e8:	f0 81       	ld	r31, Z
    e9ea:	e0 2d       	mov	r30, r0
    e9ec:	82 81       	ldd	r24, Z+2	; 0x02
    e9ee:	28 2f       	mov	r18, r24
    e9f0:	30 e0       	ldi	r19, 0x00	; 0
    e9f2:	24 17       	cp	r18, r20
    e9f4:	35 07       	cpc	r19, r21
    e9f6:	40 f4       	brcc	.+16     	; 0xea08 <arb_priorityScheduler+0x96>
    e9f8:	81 81       	ldd	r24, Z+1	; 0x01
    e9fa:	83 30       	cpi	r24, 0x03	; 3
    e9fc:	29 f0       	breq	.+10     	; 0xea08 <arb_priorityScheduler+0x96>
    e9fe:	89 81       	ldd	r24, Y+1	; 0x01
    ea00:	9a 81       	ldd	r25, Y+2	; 0x02
    ea02:	8b 83       	std	Y+3, r24	; 0x03
    ea04:	9c 83       	std	Y+4, r25	; 0x04
    ea06:	01 c0       	rjmp	.+2      	; 0xea0a <arb_priorityScheduler+0x98>
    ea08:	9a 01       	movw	r18, r20
    ea0a:	61 50       	subi	r22, 0x01	; 1
    ea0c:	70 40       	sbci	r23, 0x00	; 0
    ea0e:	e9 81       	ldd	r30, Y+1	; 0x01
    ea10:	fa 81       	ldd	r31, Y+2	; 0x02
    ea12:	80 85       	ldd	r24, Z+8	; 0x08
    ea14:	91 85       	ldd	r25, Z+9	; 0x09
    ea16:	89 83       	std	Y+1, r24	; 0x01
    ea18:	9a 83       	std	Y+2, r25	; 0x02
    ea1a:	a9 01       	movw	r20, r18
    ea1c:	61 15       	cp	r22, r1
    ea1e:	71 05       	cpc	r23, r1
    ea20:	01 f7       	brne	.-64     	; 0xe9e2 <arb_priorityScheduler+0x70>
    ea22:	e0 91 ab 22 	lds	r30, 0x22AB
    ea26:	f0 91 ac 22 	lds	r31, 0x22AC
    ea2a:	8b 81       	ldd	r24, Y+3	; 0x03
    ea2c:	9c 81       	ldd	r25, Y+4	; 0x04
    ea2e:	86 83       	std	Z+6, r24	; 0x06
    ea30:	97 83       	std	Z+7, r25	; 0x07
    ea32:	eb 81       	ldd	r30, Y+3	; 0x03
    ea34:	fc 81       	ldd	r31, Y+4	; 0x04
    ea36:	01 90       	ld	r0, Z+
    ea38:	f0 81       	ld	r31, Z
    ea3a:	e0 2d       	mov	r30, r0
    ea3c:	e0 93 ec 24 	sts	0x24EC, r30
    ea40:	f0 93 ed 24 	sts	0x24ED, r31
    ea44:	81 e0       	ldi	r24, 0x01	; 1
    ea46:	81 83       	std	Z+1, r24	; 0x01
    ea48:	e0 91 ab 22 	lds	r30, 0x22AB
    ea4c:	f0 91 ac 22 	lds	r31, 0x22AC
    ea50:	62 81       	ldd	r22, Z+2	; 0x02
    ea52:	73 81       	ldd	r23, Z+3	; 0x03
    ea54:	e0 91 ab 22 	lds	r30, 0x22AB
    ea58:	f0 91 ac 22 	lds	r31, 0x22AC
    ea5c:	80 85       	ldd	r24, Z+8	; 0x08
    ea5e:	91 85       	ldd	r25, Z+9	; 0x09
    ea60:	8d 83       	std	Y+5, r24	; 0x05
    ea62:	9e 83       	std	Y+6, r25	; 0x06
    ea64:	20 91 fb 24 	lds	r18, 0x24FB
    ea68:	30 91 fc 24 	lds	r19, 0x24FC
    ea6c:	40 91 fd 24 	lds	r20, 0x24FD
    ea70:	50 91 fe 24 	lds	r21, 0x24FE
    ea74:	17 c0       	rjmp	.+46     	; 0xeaa4 <arb_priorityScheduler+0x132>
    ea76:	ed 81       	ldd	r30, Y+5	; 0x05
    ea78:	fe 81       	ldd	r31, Y+6	; 0x06
    ea7a:	01 90       	ld	r0, Z+
    ea7c:	f0 81       	ld	r31, Z
    ea7e:	e0 2d       	mov	r30, r0
    ea80:	81 81       	ldd	r24, Z+1	; 0x01
    ea82:	82 30       	cpi	r24, 0x02	; 2
    ea84:	38 f4       	brcc	.+14     	; 0xea94 <arb_priorityScheduler+0x122>
    ea86:	82 81       	ldd	r24, Z+2	; 0x02
    ea88:	8f 3f       	cpi	r24, 0xFF	; 255
    ea8a:	21 f0       	breq	.+8      	; 0xea94 <arb_priorityScheduler+0x122>
    ea8c:	2f 5f       	subi	r18, 0xFF	; 255
    ea8e:	3f 4f       	sbci	r19, 0xFF	; 255
    ea90:	4f 4f       	sbci	r20, 0xFF	; 255
    ea92:	5f 4f       	sbci	r21, 0xFF	; 255
    ea94:	61 50       	subi	r22, 0x01	; 1
    ea96:	70 40       	sbci	r23, 0x00	; 0
    ea98:	ed 81       	ldd	r30, Y+5	; 0x05
    ea9a:	fe 81       	ldd	r31, Y+6	; 0x06
    ea9c:	80 85       	ldd	r24, Z+8	; 0x08
    ea9e:	91 85       	ldd	r25, Z+9	; 0x09
    eaa0:	8d 83       	std	Y+5, r24	; 0x05
    eaa2:	9e 83       	std	Y+6, r25	; 0x06
    eaa4:	61 15       	cp	r22, r1
    eaa6:	71 05       	cpc	r23, r1
    eaa8:	31 f7       	brne	.-52     	; 0xea76 <arb_priorityScheduler+0x104>
    eaaa:	20 93 fb 24 	sts	0x24FB, r18
    eaae:	30 93 fc 24 	sts	0x24FC, r19
    eab2:	40 93 fd 24 	sts	0x24FD, r20
    eab6:	50 93 fe 24 	sts	0x24FE, r21
    eaba:	80 91 f1 24 	lds	r24, 0x24F1
    eabe:	90 91 f2 24 	lds	r25, 0x24F2
    eac2:	01 96       	adiw	r24, 0x01	; 1
    eac4:	80 93 f1 24 	sts	0x24F1, r24
    eac8:	90 93 f2 24 	sts	0x24F2, r25
    eacc:	84 5f       	subi	r24, 0xF4	; 244
    eace:	91 40       	sbci	r25, 0x01	; 1
    ead0:	09 f0       	breq	.+2      	; 0xead4 <arb_priorityScheduler+0x162>
    ead2:	3f c1       	rjmp	.+638    	; 0xed52 <arb_priorityScheduler+0x3e0>
    ead4:	ff e0       	ldi	r31, 0x0F	; 15
    ead6:	22 0f       	add	r18, r18
    ead8:	33 1f       	adc	r19, r19
    eada:	44 1f       	adc	r20, r20
    eadc:	55 1f       	adc	r21, r21
    eade:	fa 95       	dec	r31
    eae0:	d1 f7       	brne	.-12     	; 0xead6 <arb_priorityScheduler+0x164>
    eae2:	ca 01       	movw	r24, r20
    eae4:	b9 01       	movw	r22, r18
    eae6:	24 ef       	ldi	r18, 0xF4	; 244
    eae8:	31 e0       	ldi	r19, 0x01	; 1
    eaea:	40 e0       	ldi	r20, 0x00	; 0
    eaec:	50 e0       	ldi	r21, 0x00	; 0
    eaee:	0e 94 00 b4 	call	0x16800	; 0x16800 <__udivmodsi4>
    eaf2:	72 2e       	mov	r7, r18
    eaf4:	63 2e       	mov	r6, r19
    eaf6:	54 2e       	mov	r5, r20
    eaf8:	45 2e       	mov	r4, r21
    eafa:	10 92 fb 24 	sts	0x24FB, r1
    eafe:	10 92 fc 24 	sts	0x24FC, r1
    eb02:	10 92 fd 24 	sts	0x24FD, r1
    eb06:	10 92 fe 24 	sts	0x24FE, r1
    eb0a:	10 92 f1 24 	sts	0x24F1, r1
    eb0e:	10 92 f2 24 	sts	0x24F2, r1
    eb12:	60 91 f3 24 	lds	r22, 0x24F3
    eb16:	70 91 f4 24 	lds	r23, 0x24F4
    eb1a:	80 91 f5 24 	lds	r24, 0x24F5
    eb1e:	90 91 f6 24 	lds	r25, 0x24F6
    eb22:	25 e5       	ldi	r18, 0x55	; 85
    eb24:	35 e7       	ldi	r19, 0x75	; 117
    eb26:	40 e0       	ldi	r20, 0x00	; 0
    eb28:	50 e0       	ldi	r21, 0x00	; 0
    eb2a:	0e 94 e1 b3 	call	0x167c2	; 0x167c2 <__mulsi3>
    eb2e:	8b 01       	movw	r16, r22
    eb30:	9c 01       	movw	r18, r24
    eb32:	40 e0       	ldi	r20, 0x00	; 0
    eb34:	50 e0       	ldi	r21, 0x00	; 0
    eb36:	60 e0       	ldi	r22, 0x00	; 0
    eb38:	70 e0       	ldi	r23, 0x00	; 0
    eb3a:	a0 2e       	mov	r10, r16
    eb3c:	e0 e4       	ldi	r30, 0x40	; 64
    eb3e:	fe 2e       	mov	r15, r30
    eb40:	f1 0e       	add	r15, r17
    eb42:	91 e0       	ldi	r25, 0x01	; 1
    eb44:	f1 16       	cp	r15, r17
    eb46:	08 f0       	brcs	.+2      	; 0xeb4a <arb_priorityScheduler+0x1d8>
    eb48:	90 e0       	ldi	r25, 0x00	; 0
    eb4a:	e9 2e       	mov	r14, r25
    eb4c:	e2 0e       	add	r14, r18
    eb4e:	91 e0       	ldi	r25, 0x01	; 1
    eb50:	e2 16       	cp	r14, r18
    eb52:	08 f0       	brcs	.+2      	; 0xeb56 <arb_priorityScheduler+0x1e4>
    eb54:	90 e0       	ldi	r25, 0x00	; 0
    eb56:	d9 2e       	mov	r13, r25
    eb58:	d3 0e       	add	r13, r19
    eb5a:	91 e0       	ldi	r25, 0x01	; 1
    eb5c:	d3 16       	cp	r13, r19
    eb5e:	08 f0       	brcs	.+2      	; 0xeb62 <arb_priorityScheduler+0x1f0>
    eb60:	90 e0       	ldi	r25, 0x00	; 0
    eb62:	99 2e       	mov	r9, r25
    eb64:	cc 24       	eor	r12, r12
    eb66:	c3 94       	inc	r12
    eb68:	44 23       	and	r20, r20
    eb6a:	09 f4       	brne	.+2      	; 0xeb6e <arb_priorityScheduler+0x1fc>
    eb6c:	cc 24       	eor	r12, r12
    eb6e:	bb 24       	eor	r11, r11
    eb70:	b3 94       	inc	r11
    eb72:	55 23       	and	r21, r21
    eb74:	09 f4       	brne	.+2      	; 0xeb78 <arb_priorityScheduler+0x206>
    eb76:	bb 24       	eor	r11, r11
    eb78:	88 24       	eor	r8, r8
    eb7a:	83 94       	inc	r8
    eb7c:	66 23       	and	r22, r22
    eb7e:	09 f4       	brne	.+2      	; 0xeb82 <arb_priorityScheduler+0x210>
    eb80:	88 24       	eor	r8, r8
    eb82:	67 2d       	mov	r22, r7
    eb84:	76 2d       	mov	r23, r6
    eb86:	85 2d       	mov	r24, r5
    eb88:	94 2d       	mov	r25, r4
    eb8a:	2b ea       	ldi	r18, 0xAB	; 171
    eb8c:	3a e0       	ldi	r19, 0x0A	; 10
    eb8e:	40 e0       	ldi	r20, 0x00	; 0
    eb90:	50 e0       	ldi	r21, 0x00	; 0
    eb92:	0e 94 e1 b3 	call	0x167c2	; 0x167c2 <__mulsi3>
    eb96:	9b 01       	movw	r18, r22
    eb98:	ac 01       	movw	r20, r24
    eb9a:	0a 2d       	mov	r16, r10
    eb9c:	06 0f       	add	r16, r22
    eb9e:	f1 e0       	ldi	r31, 0x01	; 1
    eba0:	0a 15       	cp	r16, r10
    eba2:	08 f0       	brcs	.+2      	; 0xeba6 <arb_priorityScheduler+0x234>
    eba4:	f0 e0       	ldi	r31, 0x00	; 0
    eba6:	ef 2d       	mov	r30, r15
    eba8:	e3 0f       	add	r30, r19
    ebaa:	a1 e0       	ldi	r26, 0x01	; 1
    ebac:	ef 15       	cp	r30, r15
    ebae:	08 f0       	brcs	.+2      	; 0xebb2 <arb_priorityScheduler+0x240>
    ebb0:	a0 e0       	ldi	r26, 0x00	; 0
    ebb2:	1f 2f       	mov	r17, r31
    ebb4:	1e 0f       	add	r17, r30
    ebb6:	f1 e0       	ldi	r31, 0x01	; 1
    ebb8:	1e 17       	cp	r17, r30
    ebba:	08 f0       	brcs	.+2      	; 0xebbe <arb_priorityScheduler+0x24c>
    ebbc:	f0 e0       	ldi	r31, 0x00	; 0
    ebbe:	af 2b       	or	r26, r31
    ebc0:	ee 2d       	mov	r30, r14
    ebc2:	e4 0f       	add	r30, r20
    ebc4:	b1 e0       	ldi	r27, 0x01	; 1
    ebc6:	ee 15       	cp	r30, r14
    ebc8:	08 f0       	brcs	.+2      	; 0xebcc <arb_priorityScheduler+0x25a>
    ebca:	b0 e0       	ldi	r27, 0x00	; 0
    ebcc:	ae 0f       	add	r26, r30
    ebce:	f1 e0       	ldi	r31, 0x01	; 1
    ebd0:	ae 17       	cp	r26, r30
    ebd2:	08 f0       	brcs	.+2      	; 0xebd6 <arb_priorityScheduler+0x264>
    ebd4:	f0 e0       	ldi	r31, 0x00	; 0
    ebd6:	bf 2b       	or	r27, r31
    ebd8:	6d 2d       	mov	r22, r13
    ebda:	65 0f       	add	r22, r21
    ebdc:	91 e0       	ldi	r25, 0x01	; 1
    ebde:	6d 15       	cp	r22, r13
    ebe0:	08 f0       	brcs	.+2      	; 0xebe4 <arb_priorityScheduler+0x272>
    ebe2:	90 e0       	ldi	r25, 0x00	; 0
    ebe4:	5b 2f       	mov	r21, r27
    ebe6:	56 0f       	add	r21, r22
    ebe8:	81 e0       	ldi	r24, 0x01	; 1
    ebea:	56 17       	cp	r21, r22
    ebec:	08 f0       	brcs	.+2      	; 0xebf0 <arb_priorityScheduler+0x27e>
    ebee:	80 e0       	ldi	r24, 0x00	; 0
    ebf0:	69 2f       	mov	r22, r25
    ebf2:	68 2b       	or	r22, r24
    ebf4:	69 0d       	add	r22, r9
    ebf6:	71 e0       	ldi	r23, 0x01	; 1
    ebf8:	69 15       	cp	r22, r9
    ebfa:	08 f0       	brcs	.+2      	; 0xebfe <arb_priorityScheduler+0x28c>
    ebfc:	70 e0       	ldi	r23, 0x00	; 0
    ebfe:	7c 0d       	add	r23, r12
    ec00:	81 e0       	ldi	r24, 0x01	; 1
    ec02:	7c 15       	cp	r23, r12
    ec04:	08 f0       	brcs	.+2      	; 0xec08 <arb_priorityScheduler+0x296>
    ec06:	80 e0       	ldi	r24, 0x00	; 0
    ec08:	8b 0d       	add	r24, r11
    ec0a:	91 e0       	ldi	r25, 0x01	; 1
    ec0c:	8b 15       	cp	r24, r11
    ec0e:	08 f0       	brcs	.+2      	; 0xec12 <arb_priorityScheduler+0x2a0>
    ec10:	90 e0       	ldi	r25, 0x00	; 0
    ec12:	98 01       	movw	r18, r16
    ec14:	4a 2f       	mov	r20, r26
    ec16:	98 0d       	add	r25, r8
    ec18:	0f e0       	ldi	r16, 0x0F	; 15
    ec1a:	0e 94 dc 61 	call	0xc3b8	; 0xc3b8 <__lshrdi3>
    ec1e:	c9 01       	movw	r24, r18
    ec20:	ba 01       	movw	r22, r20
    ec22:	20 93 f3 24 	sts	0x24F3, r18
    ec26:	90 93 f4 24 	sts	0x24F4, r25
    ec2a:	40 93 f5 24 	sts	0x24F5, r20
    ec2e:	70 93 f6 24 	sts	0x24F6, r23
    ec32:	60 91 f7 24 	lds	r22, 0x24F7
    ec36:	70 91 f8 24 	lds	r23, 0x24F8
    ec3a:	80 91 f9 24 	lds	r24, 0x24F9
    ec3e:	90 91 fa 24 	lds	r25, 0x24FA
    ec42:	2d ed       	ldi	r18, 0xDD	; 221
    ec44:	3d e7       	ldi	r19, 0x7D	; 125
    ec46:	40 e0       	ldi	r20, 0x00	; 0
    ec48:	50 e0       	ldi	r21, 0x00	; 0
    ec4a:	0e 94 e1 b3 	call	0x167c2	; 0x167c2 <__mulsi3>
    ec4e:	8b 01       	movw	r16, r22
    ec50:	9c 01       	movw	r18, r24
    ec52:	40 e0       	ldi	r20, 0x00	; 0
    ec54:	50 e0       	ldi	r21, 0x00	; 0
    ec56:	60 e0       	ldi	r22, 0x00	; 0
    ec58:	70 e0       	ldi	r23, 0x00	; 0
    ec5a:	a0 2e       	mov	r10, r16
    ec5c:	70 e4       	ldi	r23, 0x40	; 64
    ec5e:	f7 2e       	mov	r15, r23
    ec60:	f1 0e       	add	r15, r17
    ec62:	91 e0       	ldi	r25, 0x01	; 1
    ec64:	f1 16       	cp	r15, r17
    ec66:	08 f0       	brcs	.+2      	; 0xec6a <arb_priorityScheduler+0x2f8>
    ec68:	90 e0       	ldi	r25, 0x00	; 0
    ec6a:	e9 2e       	mov	r14, r25
    ec6c:	e2 0e       	add	r14, r18
    ec6e:	91 e0       	ldi	r25, 0x01	; 1
    ec70:	e2 16       	cp	r14, r18
    ec72:	08 f0       	brcs	.+2      	; 0xec76 <arb_priorityScheduler+0x304>
    ec74:	90 e0       	ldi	r25, 0x00	; 0
    ec76:	d9 2e       	mov	r13, r25
    ec78:	d3 0e       	add	r13, r19
    ec7a:	91 e0       	ldi	r25, 0x01	; 1
    ec7c:	d3 16       	cp	r13, r19
    ec7e:	08 f0       	brcs	.+2      	; 0xec82 <arb_priorityScheduler+0x310>
    ec80:	90 e0       	ldi	r25, 0x00	; 0
    ec82:	99 2e       	mov	r9, r25
    ec84:	cc 24       	eor	r12, r12
    ec86:	c3 94       	inc	r12
    ec88:	44 23       	and	r20, r20
    ec8a:	09 f4       	brne	.+2      	; 0xec8e <arb_priorityScheduler+0x31c>
    ec8c:	cc 24       	eor	r12, r12
    ec8e:	bb 24       	eor	r11, r11
    ec90:	b3 94       	inc	r11
    ec92:	55 23       	and	r21, r21
    ec94:	09 f4       	brne	.+2      	; 0xec98 <arb_priorityScheduler+0x326>
    ec96:	bb 24       	eor	r11, r11
    ec98:	88 24       	eor	r8, r8
    ec9a:	83 94       	inc	r8
    ec9c:	66 23       	and	r22, r22
    ec9e:	09 f4       	brne	.+2      	; 0xeca2 <arb_priorityScheduler+0x330>
    eca0:	88 24       	eor	r8, r8
    eca2:	67 2d       	mov	r22, r7
    eca4:	76 2d       	mov	r23, r6
    eca6:	85 2d       	mov	r24, r5
    eca8:	94 2d       	mov	r25, r4
    ecaa:	23 e2       	ldi	r18, 0x23	; 35
    ecac:	32 e0       	ldi	r19, 0x02	; 2
    ecae:	40 e0       	ldi	r20, 0x00	; 0
    ecb0:	50 e0       	ldi	r21, 0x00	; 0
    ecb2:	0e 94 e1 b3 	call	0x167c2	; 0x167c2 <__mulsi3>
    ecb6:	9b 01       	movw	r18, r22
    ecb8:	ac 01       	movw	r20, r24
    ecba:	0a 2d       	mov	r16, r10
    ecbc:	06 0f       	add	r16, r22
    ecbe:	f1 e0       	ldi	r31, 0x01	; 1
    ecc0:	0a 15       	cp	r16, r10
    ecc2:	08 f0       	brcs	.+2      	; 0xecc6 <arb_priorityScheduler+0x354>
    ecc4:	f0 e0       	ldi	r31, 0x00	; 0
    ecc6:	ef 2d       	mov	r30, r15
    ecc8:	e3 0f       	add	r30, r19
    ecca:	a1 e0       	ldi	r26, 0x01	; 1
    eccc:	ef 15       	cp	r30, r15
    ecce:	08 f0       	brcs	.+2      	; 0xecd2 <arb_priorityScheduler+0x360>
    ecd0:	a0 e0       	ldi	r26, 0x00	; 0
    ecd2:	1f 2f       	mov	r17, r31
    ecd4:	1e 0f       	add	r17, r30
    ecd6:	f1 e0       	ldi	r31, 0x01	; 1
    ecd8:	1e 17       	cp	r17, r30
    ecda:	08 f0       	brcs	.+2      	; 0xecde <arb_priorityScheduler+0x36c>
    ecdc:	f0 e0       	ldi	r31, 0x00	; 0
    ecde:	af 2b       	or	r26, r31
    ece0:	ee 2d       	mov	r30, r14
    ece2:	e4 0f       	add	r30, r20
    ece4:	b1 e0       	ldi	r27, 0x01	; 1
    ece6:	ee 15       	cp	r30, r14
    ece8:	08 f0       	brcs	.+2      	; 0xecec <arb_priorityScheduler+0x37a>
    ecea:	b0 e0       	ldi	r27, 0x00	; 0
    ecec:	ae 0f       	add	r26, r30
    ecee:	f1 e0       	ldi	r31, 0x01	; 1
    ecf0:	ae 17       	cp	r26, r30
    ecf2:	08 f0       	brcs	.+2      	; 0xecf6 <arb_priorityScheduler+0x384>
    ecf4:	f0 e0       	ldi	r31, 0x00	; 0
    ecf6:	bf 2b       	or	r27, r31
    ecf8:	6d 2d       	mov	r22, r13
    ecfa:	65 0f       	add	r22, r21
    ecfc:	91 e0       	ldi	r25, 0x01	; 1
    ecfe:	6d 15       	cp	r22, r13
    ed00:	08 f0       	brcs	.+2      	; 0xed04 <arb_priorityScheduler+0x392>
    ed02:	90 e0       	ldi	r25, 0x00	; 0
    ed04:	5b 2f       	mov	r21, r27
    ed06:	56 0f       	add	r21, r22
    ed08:	81 e0       	ldi	r24, 0x01	; 1
    ed0a:	56 17       	cp	r21, r22
    ed0c:	08 f0       	brcs	.+2      	; 0xed10 <arb_priorityScheduler+0x39e>
    ed0e:	80 e0       	ldi	r24, 0x00	; 0
    ed10:	69 2f       	mov	r22, r25
    ed12:	68 2b       	or	r22, r24
    ed14:	69 0d       	add	r22, r9
    ed16:	71 e0       	ldi	r23, 0x01	; 1
    ed18:	69 15       	cp	r22, r9
    ed1a:	08 f0       	brcs	.+2      	; 0xed1e <arb_priorityScheduler+0x3ac>
    ed1c:	70 e0       	ldi	r23, 0x00	; 0
    ed1e:	7c 0d       	add	r23, r12
    ed20:	81 e0       	ldi	r24, 0x01	; 1
    ed22:	7c 15       	cp	r23, r12
    ed24:	08 f0       	brcs	.+2      	; 0xed28 <arb_priorityScheduler+0x3b6>
    ed26:	80 e0       	ldi	r24, 0x00	; 0
    ed28:	8b 0d       	add	r24, r11
    ed2a:	91 e0       	ldi	r25, 0x01	; 1
    ed2c:	8b 15       	cp	r24, r11
    ed2e:	08 f0       	brcs	.+2      	; 0xed32 <arb_priorityScheduler+0x3c0>
    ed30:	90 e0       	ldi	r25, 0x00	; 0
    ed32:	98 01       	movw	r18, r16
    ed34:	4a 2f       	mov	r20, r26
    ed36:	98 0d       	add	r25, r8
    ed38:	0f e0       	ldi	r16, 0x0F	; 15
    ed3a:	0e 94 dc 61 	call	0xc3b8	; 0xc3b8 <__lshrdi3>
    ed3e:	c9 01       	movw	r24, r18
    ed40:	ba 01       	movw	r22, r20
    ed42:	20 93 f7 24 	sts	0x24F7, r18
    ed46:	90 93 f8 24 	sts	0x24F8, r25
    ed4a:	40 93 f9 24 	sts	0x24F9, r20
    ed4e:	70 93 fa 24 	sts	0x24FA, r23
    ed52:	26 96       	adiw	r28, 0x06	; 6
    ed54:	cd bf       	out	0x3d, r28	; 61
    ed56:	de bf       	out	0x3e, r29	; 62
    ed58:	cf 91       	pop	r28
    ed5a:	df 91       	pop	r29
    ed5c:	1f 91       	pop	r17
    ed5e:	0f 91       	pop	r16
    ed60:	ff 90       	pop	r15
    ed62:	ef 90       	pop	r14
    ed64:	df 90       	pop	r13
    ed66:	cf 90       	pop	r12
    ed68:	bf 90       	pop	r11
    ed6a:	af 90       	pop	r10
    ed6c:	9f 90       	pop	r9
    ed6e:	8f 90       	pop	r8
    ed70:	7f 90       	pop	r7
    ed72:	6f 90       	pop	r6
    ed74:	5f 90       	pop	r5
    ed76:	4f 90       	pop	r4
    ed78:	08 95       	ret

0000ed7a <arb_schedulerStart>:
    ed7a:	ef 92       	push	r14
    ed7c:	ff 92       	push	r15
    ed7e:	0f 93       	push	r16
    ed80:	1f 93       	push	r17
    ed82:	df 93       	push	r29
    ed84:	cf 93       	push	r28
    ed86:	cd b7       	in	r28, 0x3d	; 61
    ed88:	de b7       	in	r29, 0x3e	; 62
    ed8a:	e3 97       	sbiw	r28, 0x33	; 51
    ed8c:	cd bf       	out	0x3d, r28	; 61
    ed8e:	de bf       	out	0x3e, r29	; 62
    ed90:	11 e0       	ldi	r17, 0x01	; 1
    ed92:	10 93 f0 24 	sts	0x24F0, r17
    ed96:	0e 94 93 81 	call	0x10326	; 0x10326 <arb_sysTimerStart>
    ed9a:	28 2f       	mov	r18, r24
    ed9c:	87 ff       	sbrs	r24, 7
    ed9e:	27 c0       	rjmp	.+78     	; 0xedee <arb_schedulerStart+0x74>
    eda0:	00 d0       	rcall	.+0      	; 0xeda2 <arb_schedulerStart+0x28>
    eda2:	00 d0       	rcall	.+0      	; 0xeda4 <arb_schedulerStart+0x2a>
    eda4:	ed b7       	in	r30, 0x3d	; 61
    eda6:	fe b7       	in	r31, 0x3e	; 62
    eda8:	31 96       	adiw	r30, 0x01	; 1
    edaa:	8e 01       	movw	r16, r28
    edac:	0e 5f       	subi	r16, 0xFE	; 254
    edae:	1f 4f       	sbci	r17, 0xFF	; 255
    edb0:	ad b7       	in	r26, 0x3d	; 61
    edb2:	be b7       	in	r27, 0x3e	; 62
    edb4:	11 96       	adiw	r26, 0x01	; 1
    edb6:	0d 93       	st	X+, r16
    edb8:	1c 93       	st	X, r17
    edba:	12 97       	sbiw	r26, 0x02	; 2
    edbc:	8b e1       	ldi	r24, 0x1B	; 27
    edbe:	9d e0       	ldi	r25, 0x0D	; 13
    edc0:	82 83       	std	Z+2, r24	; 0x02
    edc2:	93 83       	std	Z+3, r25	; 0x03
    edc4:	82 2f       	mov	r24, r18
    edc6:	99 27       	eor	r25, r25
    edc8:	87 fd       	sbrc	r24, 7
    edca:	90 95       	com	r25
    edcc:	84 83       	std	Z+4, r24	; 0x04
    edce:	95 83       	std	Z+5, r25	; 0x05
    edd0:	0e 94 a5 b1 	call	0x1634a	; 0x1634a <sprintf_P>
    edd4:	8d b7       	in	r24, 0x3d	; 61
    edd6:	9e b7       	in	r25, 0x3e	; 62
    edd8:	06 96       	adiw	r24, 0x06	; 6
    edda:	8d bf       	out	0x3d, r24	; 61
    eddc:	9e bf       	out	0x3e, r25	; 62
    edde:	84 e0       	ldi	r24, 0x04	; 4
    ede0:	b8 01       	movw	r22, r16
    ede2:	0e 94 87 71 	call	0xe30e	; 0xe30e <arb_printf>
    ede6:	80 e0       	ldi	r24, 0x00	; 0
    ede8:	90 e0       	ldi	r25, 0x00	; 0
    edea:	0e 94 bc af 	call	0x15f78	; 0x15f78 <exit>
    edee:	e0 91 ab 22 	lds	r30, 0x22AB
    edf2:	f0 91 ac 22 	lds	r31, 0x22AC
    edf6:	06 80       	ldd	r0, Z+6	; 0x06
    edf8:	f7 81       	ldd	r31, Z+7	; 0x07
    edfa:	e0 2d       	mov	r30, r0
    edfc:	01 90       	ld	r0, Z+
    edfe:	f0 81       	ld	r31, Z
    ee00:	e0 2d       	mov	r30, r0
    ee02:	e0 93 ee 24 	sts	0x24EE, r30
    ee06:	f0 93 ef 24 	sts	0x24EF, r31
    ee0a:	11 83       	std	Z+1, r17	; 0x01
    ee0c:	80 e2       	ldi	r24, 0x20	; 32
    ee0e:	0e 94 f8 6f 	call	0xdff0	; 0xdff0 <arb_setPrintfDbgLevel>
    ee12:	0e 94 15 49 	call	0x922a	; 0x922a <hal_getCpuFreq>
    ee16:	0e 94 a5 ac 	call	0x1594a	; 0x1594a <__floatunsisf>
    ee1a:	20 e0       	ldi	r18, 0x00	; 0
    ee1c:	30 e0       	ldi	r19, 0x00	; 0
    ee1e:	4a e7       	ldi	r20, 0x7A	; 122
    ee20:	55 e4       	ldi	r21, 0x45	; 69
    ee22:	0e 94 d2 ab 	call	0x157a4	; 0x157a4 <__divsf3>
    ee26:	20 e0       	ldi	r18, 0x00	; 0
    ee28:	30 e0       	ldi	r19, 0x00	; 0
    ee2a:	4a e7       	ldi	r20, 0x7A	; 122
    ee2c:	54 e4       	ldi	r21, 0x44	; 68
    ee2e:	0e 94 0e ae 	call	0x15c1c	; 0x15c1c <__mulsf3>
    ee32:	7b 01       	movw	r14, r22
    ee34:	8c 01       	movw	r16, r24
    ee36:	8f b7       	in	r24, 0x3f	; 63
    ee38:	89 83       	std	Y+1, r24	; 0x01
    ee3a:	f8 94       	cli
    ee3c:	c8 01       	movw	r24, r16
    ee3e:	b7 01       	movw	r22, r14
    ee40:	20 e0       	ldi	r18, 0x00	; 0
    ee42:	30 e0       	ldi	r19, 0x00	; 0
    ee44:	40 e8       	ldi	r20, 0x80	; 128
    ee46:	5f e3       	ldi	r21, 0x3F	; 63
    ee48:	0e 94 cb ab 	call	0x15796	; 0x15796 <__cmpsf2>
    ee4c:	88 23       	and	r24, r24
    ee4e:	1c f4       	brge	.+6      	; 0xee56 <arb_schedulerStart+0xdc>
    ee50:	81 e0       	ldi	r24, 0x01	; 1
    ee52:	90 e0       	ldi	r25, 0x00	; 0
    ee54:	19 c0       	rjmp	.+50     	; 0xee88 <arb_schedulerStart+0x10e>
    ee56:	c8 01       	movw	r24, r16
    ee58:	b7 01       	movw	r22, r14
    ee5a:	20 e0       	ldi	r18, 0x00	; 0
    ee5c:	3f ef       	ldi	r19, 0xFF	; 255
    ee5e:	4f e7       	ldi	r20, 0x7F	; 127
    ee60:	57 e4       	ldi	r21, 0x47	; 71
    ee62:	0e 94 03 ae 	call	0x15c06	; 0x15c06 <__gesf2>
    ee66:	18 16       	cp	r1, r24
    ee68:	54 f4       	brge	.+20     	; 0xee7e <arb_schedulerStart+0x104>
    ee6a:	80 e1       	ldi	r24, 0x10	; 16
    ee6c:	97 e2       	ldi	r25, 0x27	; 39
    ee6e:	20 e2       	ldi	r18, 0x20	; 32
    ee70:	33 e0       	ldi	r19, 0x03	; 3
    ee72:	f9 01       	movw	r30, r18
    ee74:	31 97       	sbiw	r30, 0x01	; 1
    ee76:	f1 f7       	brne	.-4      	; 0xee74 <arb_schedulerStart+0xfa>
    ee78:	01 97       	sbiw	r24, 0x01	; 1
    ee7a:	d9 f7       	brne	.-10     	; 0xee72 <arb_schedulerStart+0xf8>
    ee7c:	09 c0       	rjmp	.+18     	; 0xee90 <arb_schedulerStart+0x116>
    ee7e:	c8 01       	movw	r24, r16
    ee80:	b7 01       	movw	r22, r14
    ee82:	0e 94 79 ac 	call	0x158f2	; 0x158f2 <__fixunssfsi>
    ee86:	cb 01       	movw	r24, r22
    ee88:	01 97       	sbiw	r24, 0x01	; 1
    ee8a:	f1 f7       	brne	.-4      	; 0xee88 <arb_schedulerStart+0x10e>
    ee8c:	89 81       	ldd	r24, Y+1	; 0x01
    ee8e:	8f bf       	out	0x3f, r24	; 63
    ee90:	e0 91 ab 22 	lds	r30, 0x22AB
    ee94:	f0 91 ac 22 	lds	r31, 0x22AC
    ee98:	06 80       	ldd	r0, Z+6	; 0x06
    ee9a:	f7 81       	ldd	r31, Z+7	; 0x07
    ee9c:	e0 2d       	mov	r30, r0
    ee9e:	01 90       	ld	r0, Z+
    eea0:	f0 81       	ld	r31, Z
    eea2:	e0 2d       	mov	r30, r0
    eea4:	e0 93 c8 27 	sts	0x27C8, r30
    eea8:	f0 93 c9 27 	sts	0x27C9, r31
    eeac:	81 85       	ldd	r24, Z+9	; 0x09
    eeae:	92 85       	ldd	r25, Z+10	; 0x0a
    eeb0:	8d bf       	out	0x3d, r24	; 61
    eeb2:	9e bf       	out	0x3e, r25	; 62
    eeb4:	ff 91       	pop	r31
    eeb6:	ef 91       	pop	r30
    eeb8:	df 91       	pop	r29
    eeba:	cf 91       	pop	r28
    eebc:	bf 91       	pop	r27
    eebe:	af 91       	pop	r26
    eec0:	9f 91       	pop	r25
    eec2:	8f 91       	pop	r24
    eec4:	7f 91       	pop	r23
    eec6:	6f 91       	pop	r22
    eec8:	5f 91       	pop	r21
    eeca:	4f 91       	pop	r20
    eecc:	3f 91       	pop	r19
    eece:	2f 91       	pop	r18
    eed0:	1f 91       	pop	r17
    eed2:	0f 91       	pop	r16
    eed4:	ff 90       	pop	r15
    eed6:	ef 90       	pop	r14
    eed8:	df 90       	pop	r13
    eeda:	cf 90       	pop	r12
    eedc:	bf 90       	pop	r11
    eede:	af 90       	pop	r10
    eee0:	9f 90       	pop	r9
    eee2:	8f 90       	pop	r8
    eee4:	7f 90       	pop	r7
    eee6:	6f 90       	pop	r6
    eee8:	5f 90       	pop	r5
    eeea:	4f 90       	pop	r4
    eeec:	3f 90       	pop	r3
    eeee:	2f 90       	pop	r2
    eef0:	1f 90       	pop	r1
    eef2:	0f 90       	pop	r0
    eef4:	0f be       	out	0x3f, r0	; 63
    eef6:	0f 90       	pop	r0
    eef8:	08 95       	ret
    eefa:	e3 96       	adiw	r28, 0x33	; 51
    eefc:	cd bf       	out	0x3d, r28	; 61
    eefe:	de bf       	out	0x3e, r29	; 62
    ef00:	cf 91       	pop	r28
    ef02:	df 91       	pop	r29
    ef04:	1f 91       	pop	r17
    ef06:	0f 91       	pop	r16
    ef08:	ff 90       	pop	r15
    ef0a:	ef 90       	pop	r14
    ef0c:	08 95       	ret

0000ef0e <arb_schedulerInit>:
    ef0e:	ff 92       	push	r15
    ef10:	0f 93       	push	r16
    ef12:	1f 93       	push	r17
    ef14:	df 93       	push	r29
    ef16:	cf 93       	push	r28
    ef18:	0f 92       	push	r0
    ef1a:	0f 92       	push	r0
    ef1c:	cd b7       	in	r28, 0x3d	; 61
    ef1e:	de b7       	in	r29, 0x3e	; 62
    ef20:	f8 2e       	mov	r15, r24
    ef22:	8b 01       	movw	r16, r22
    ef24:	84 2f       	mov	r24, r20
    ef26:	10 92 f0 24 	sts	0x24F0, r1
    ef2a:	10 92 f3 24 	sts	0x24F3, r1
    ef2e:	10 92 f4 24 	sts	0x24F4, r1
    ef32:	10 92 f5 24 	sts	0x24F5, r1
    ef36:	10 92 f6 24 	sts	0x24F6, r1
    ef3a:	10 92 f7 24 	sts	0x24F7, r1
    ef3e:	10 92 f8 24 	sts	0x24F8, r1
    ef42:	10 92 f9 24 	sts	0x24F9, r1
    ef46:	10 92 fa 24 	sts	0x24FA, r1
    ef4a:	10 92 f1 24 	sts	0x24F1, r1
    ef4e:	10 92 f2 24 	sts	0x24F2, r1
    ef52:	10 92 fb 24 	sts	0x24FB, r1
    ef56:	10 92 fc 24 	sts	0x24FC, r1
    ef5a:	10 92 fd 24 	sts	0x24FD, r1
    ef5e:	10 92 fe 24 	sts	0x24FE, r1
    ef62:	f8 94       	cli
    ef64:	0e 94 a4 80 	call	0x10148	; 0x10148 <arb_sysTimerInit>
    ef68:	c8 01       	movw	r24, r16
    ef6a:	6f ef       	ldi	r22, 0xFF	; 255
    ef6c:	0e 94 cb 85 	call	0x10b96	; 0x10b96 <arb_idleInit>
    ef70:	89 83       	std	Y+1, r24	; 0x01
    ef72:	9a 83       	std	Y+2, r25	; 0x02
    ef74:	89 81       	ldd	r24, Y+1	; 0x01
    ef76:	9a 81       	ldd	r25, Y+2	; 0x02
    ef78:	97 ff       	sbrs	r25, 7
    ef7a:	08 c0       	rjmp	.+16     	; 0xef8c <arb_schedulerInit+0x7e>
    ef7c:	84 e0       	ldi	r24, 0x04	; 4
    ef7e:	6d e5       	ldi	r22, 0x5D	; 93
    ef80:	72 e2       	ldi	r23, 0x22	; 34
    ef82:	0e 94 87 71 	call	0xe30e	; 0xe30e <arb_printf>
    ef86:	89 81       	ldd	r24, Y+1	; 0x01
    ef88:	9a 81       	ldd	r25, Y+2	; 0x02
    ef8a:	1c c0       	rjmp	.+56     	; 0xefc4 <arb_schedulerInit+0xb6>
    ef8c:	e0 91 ab 22 	lds	r30, 0x22AB
    ef90:	f0 91 ac 22 	lds	r31, 0x22AC
    ef94:	89 81       	ldd	r24, Y+1	; 0x01
    ef96:	9a 81       	ldd	r25, Y+2	; 0x02
    ef98:	86 83       	std	Z+6, r24	; 0x06
    ef9a:	97 83       	std	Z+7, r25	; 0x07
    ef9c:	ff 20       	and	r15, r15
    ef9e:	31 f0       	breq	.+12     	; 0xefac <arb_schedulerInit+0x9e>
    efa0:	81 e0       	ldi	r24, 0x01	; 1
    efa2:	f8 16       	cp	r15, r24
    efa4:	19 f4       	brne	.+6      	; 0xefac <arb_schedulerInit+0x9e>
    efa6:	89 eb       	ldi	r24, 0xB9	; 185
    efa8:	94 e7       	ldi	r25, 0x74	; 116
    efaa:	02 c0       	rjmp	.+4      	; 0xefb0 <arb_schedulerInit+0xa2>
    efac:	81 ee       	ldi	r24, 0xE1	; 225
    efae:	92 e7       	ldi	r25, 0x72	; 114
    efb0:	80 93 c6 27 	sts	0x27C6, r24
    efb4:	90 93 c7 27 	sts	0x27C7, r25
    efb8:	84 e0       	ldi	r24, 0x04	; 4
    efba:	68 e7       	ldi	r22, 0x78	; 120
    efbc:	72 e2       	ldi	r23, 0x22	; 34
    efbe:	0e 94 87 71 	call	0xe30e	; 0xe30e <arb_printf>
    efc2:	80 e0       	ldi	r24, 0x00	; 0
    efc4:	0f 90       	pop	r0
    efc6:	0f 90       	pop	r0
    efc8:	cf 91       	pop	r28
    efca:	df 91       	pop	r29
    efcc:	1f 91       	pop	r17
    efce:	0f 91       	pop	r16
    efd0:	ff 90       	pop	r15
    efd2:	08 95       	ret

0000efd4 <arb_semaphoreDestroy>:
    efd4:	ef 92       	push	r14
    efd6:	ff 92       	push	r15
    efd8:	0f 93       	push	r16
    efda:	1f 93       	push	r17
    efdc:	df 93       	push	r29
    efde:	cf 93       	push	r28
    efe0:	cd b7       	in	r28, 0x3d	; 61
    efe2:	de b7       	in	r29, 0x3e	; 62
    efe4:	27 97       	sbiw	r28, 0x07	; 7
    efe6:	cd bf       	out	0x3d, r28	; 61
    efe8:	de bf       	out	0x3e, r29	; 62
    efea:	8e 83       	std	Y+6, r24	; 0x06
    efec:	9f 83       	std	Y+7, r25	; 0x07
    efee:	8f b7       	in	r24, 0x3f	; 63
    eff0:	89 83       	std	Y+1, r24	; 0x01
    eff2:	f8 94       	cli
    eff4:	ee 81       	ldd	r30, Y+6	; 0x06
    eff6:	ff 81       	ldd	r31, Y+7	; 0x07
    eff8:	20 91 9c 22 	lds	r18, 0x229C
    effc:	30 91 9d 22 	lds	r19, 0x229D
    f000:	84 81       	ldd	r24, Z+4	; 0x04
    f002:	95 81       	ldd	r25, Z+5	; 0x05
    f004:	82 17       	cp	r24, r18
    f006:	93 07       	cpc	r25, r19
    f008:	21 f0       	breq	.+8      	; 0xf012 <arb_semaphoreDestroy+0x3e>
    f00a:	89 81       	ldd	r24, Y+1	; 0x01
    f00c:	8f bf       	out	0x3f, r24	; 63
    f00e:	89 ef       	ldi	r24, 0xF9	; 249
    f010:	4e c0       	rjmp	.+156    	; 0xf0ae <arb_semaphoreDestroy+0xda>
    f012:	ee 81       	ldd	r30, Y+6	; 0x06
    f014:	ff 81       	ldd	r31, Y+7	; 0x07
    f016:	00 81       	ld	r16, Z
    f018:	11 81       	ldd	r17, Z+1	; 0x01
    f01a:	d8 01       	movw	r26, r16
    f01c:	13 96       	adiw	r26, 0x03	; 3
    f01e:	ed 91       	ld	r30, X+
    f020:	fc 91       	ld	r31, X
    f022:	14 97       	sbiw	r26, 0x04	; 4
    f024:	e2 80       	ldd	r14, Z+2	; 0x02
    f026:	f3 80       	ldd	r15, Z+3	; 0x03
    f028:	13 96       	adiw	r26, 0x03	; 3
    f02a:	ed 91       	ld	r30, X+
    f02c:	fc 91       	ld	r31, X
    f02e:	14 97       	sbiw	r26, 0x04	; 4
    f030:	25 c0       	rjmp	.+74     	; 0xf07c <arb_semaphoreDestroy+0xa8>
    f032:	ea 81       	ldd	r30, Y+2	; 0x02
    f034:	fb 81       	ldd	r31, Y+3	; 0x03
    f036:	01 90       	ld	r0, Z+
    f038:	f0 81       	ld	r31, Z
    f03a:	e0 2d       	mov	r30, r0
    f03c:	11 82       	std	Z+1, r1	; 0x01
    f03e:	ea 81       	ldd	r30, Y+2	; 0x02
    f040:	fb 81       	ldd	r31, Y+3	; 0x03
    f042:	82 85       	ldd	r24, Z+10	; 0x0a
    f044:	93 85       	ldd	r25, Z+11	; 0x0b
    f046:	8c 83       	std	Y+4, r24	; 0x04
    f048:	9d 83       	std	Y+5, r25	; 0x05
    f04a:	f8 01       	movw	r30, r16
    f04c:	83 81       	ldd	r24, Z+3	; 0x03
    f04e:	94 81       	ldd	r25, Z+4	; 0x04
    f050:	6a 81       	ldd	r22, Y+2	; 0x02
    f052:	7b 81       	ldd	r23, Y+3	; 0x03
    f054:	0e 94 43 89 	call	0x11286	; 0x11286 <utl_removeLink>
    f058:	80 91 ab 22 	lds	r24, 0x22AB
    f05c:	90 91 ac 22 	lds	r25, 0x22AC
    f060:	6a 81       	ldd	r22, Y+2	; 0x02
    f062:	7b 81       	ldd	r23, Y+3	; 0x03
    f064:	41 e0       	ldi	r20, 0x01	; 1
    f066:	0e 94 c8 88 	call	0x11190	; 0x11190 <utl_insertLink>
    f06a:	8c 81       	ldd	r24, Y+4	; 0x04
    f06c:	9d 81       	ldd	r25, Y+5	; 0x05
    f06e:	8a 83       	std	Y+2, r24	; 0x02
    f070:	9b 83       	std	Y+3, r25	; 0x03
    f072:	08 94       	sec
    f074:	e1 08       	sbc	r14, r1
    f076:	f1 08       	sbc	r15, r1
    f078:	ea 81       	ldd	r30, Y+2	; 0x02
    f07a:	fb 81       	ldd	r31, Y+3	; 0x03
    f07c:	80 85       	ldd	r24, Z+8	; 0x08
    f07e:	91 85       	ldd	r25, Z+9	; 0x09
    f080:	8a 83       	std	Y+2, r24	; 0x02
    f082:	9b 83       	std	Y+3, r25	; 0x03
    f084:	e1 14       	cp	r14, r1
    f086:	f1 04       	cpc	r15, r1
    f088:	a1 f6       	brne	.-88     	; 0xf032 <arb_semaphoreDestroy+0x5e>
    f08a:	d8 01       	movw	r26, r16
    f08c:	13 96       	adiw	r26, 0x03	; 3
    f08e:	8d 91       	ld	r24, X+
    f090:	9c 91       	ld	r25, X
    f092:	14 97       	sbiw	r26, 0x04	; 4
    f094:	0e 94 73 8a 	call	0x114e6	; 0x114e6 <utl_destroyContainer>
    f098:	80 91 9c 22 	lds	r24, 0x229C
    f09c:	90 91 9d 22 	lds	r25, 0x229D
    f0a0:	6e 81       	ldd	r22, Y+6	; 0x06
    f0a2:	7f 81       	ldd	r23, Y+7	; 0x07
    f0a4:	0e 94 c4 89 	call	0x11388	; 0x11388 <utl_destroyLink>
    f0a8:	89 81       	ldd	r24, Y+1	; 0x01
    f0aa:	8f bf       	out	0x3f, r24	; 63
    f0ac:	80 e0       	ldi	r24, 0x00	; 0
    f0ae:	27 96       	adiw	r28, 0x07	; 7
    f0b0:	cd bf       	out	0x3d, r28	; 61
    f0b2:	de bf       	out	0x3e, r29	; 62
    f0b4:	cf 91       	pop	r28
    f0b6:	df 91       	pop	r29
    f0b8:	1f 91       	pop	r17
    f0ba:	0f 91       	pop	r16
    f0bc:	ff 90       	pop	r15
    f0be:	ef 90       	pop	r14
    f0c0:	08 95       	ret

0000f0c2 <arb_semaphoreCreate>:
    f0c2:	ff 92       	push	r15
    f0c4:	0f 93       	push	r16
    f0c6:	1f 93       	push	r17
    f0c8:	df 93       	push	r29
    f0ca:	cf 93       	push	r28
    f0cc:	00 d0       	rcall	.+0      	; 0xf0ce <arb_semaphoreCreate+0xc>
    f0ce:	cd b7       	in	r28, 0x3d	; 61
    f0d0:	de b7       	in	r29, 0x3e	; 62
    f0d2:	f8 2e       	mov	r15, r24
    f0d4:	8f b7       	in	r24, 0x3f	; 63
    f0d6:	89 83       	std	Y+1, r24	; 0x01
    f0d8:	f8 94       	cli
    f0da:	85 e0       	ldi	r24, 0x05	; 5
    f0dc:	90 e0       	ldi	r25, 0x00	; 0
    f0de:	0e 94 b8 8a 	call	0x11570	; 0x11570 <utl_createLink>
    f0e2:	8a 83       	std	Y+2, r24	; 0x02
    f0e4:	9b 83       	std	Y+3, r25	; 0x03
    f0e6:	8a 81       	ldd	r24, Y+2	; 0x02
    f0e8:	9b 81       	ldd	r25, Y+3	; 0x03
    f0ea:	97 fd       	sbrc	r25, 7
    f0ec:	1e c0       	rjmp	.+60     	; 0xf12a <arb_semaphoreCreate+0x68>
    f0ee:	80 91 9c 22 	lds	r24, 0x229C
    f0f2:	90 91 9d 22 	lds	r25, 0x229D
    f0f6:	6a 81       	ldd	r22, Y+2	; 0x02
    f0f8:	7b 81       	ldd	r23, Y+3	; 0x03
    f0fa:	41 e0       	ldi	r20, 0x01	; 1
    f0fc:	0e 94 c8 88 	call	0x11190	; 0x11190 <utl_insertLink>
    f100:	ea 81       	ldd	r30, Y+2	; 0x02
    f102:	fb 81       	ldd	r31, Y+3	; 0x03
    f104:	00 81       	ld	r16, Z
    f106:	11 81       	ldd	r17, Z+1	; 0x01
    f108:	0e 94 22 8b 	call	0x11644	; 0x11644 <utl_createContainer>
    f10c:	f8 01       	movw	r30, r16
    f10e:	83 83       	std	Z+3, r24	; 0x03
    f110:	94 83       	std	Z+4, r25	; 0x04
    f112:	83 81       	ldd	r24, Z+3	; 0x03
    f114:	94 81       	ldd	r25, Z+4	; 0x04
    f116:	97 ff       	sbrs	r25, 7
    f118:	0d c0       	rjmp	.+26     	; 0xf134 <arb_semaphoreCreate+0x72>
    f11a:	80 91 9c 22 	lds	r24, 0x229C
    f11e:	90 91 9d 22 	lds	r25, 0x229D
    f122:	6a 81       	ldd	r22, Y+2	; 0x02
    f124:	7b 81       	ldd	r23, Y+3	; 0x03
    f126:	0e 94 c4 89 	call	0x11388	; 0x11388 <utl_destroyLink>
    f12a:	89 81       	ldd	r24, Y+1	; 0x01
    f12c:	8f bf       	out	0x3f, r24	; 63
    f12e:	2f ef       	ldi	r18, 0xFF	; 255
    f130:	3f ef       	ldi	r19, 0xFF	; 255
    f132:	12 c0       	rjmp	.+36     	; 0xf158 <arb_semaphoreCreate+0x96>
    f134:	f8 01       	movw	r30, r16
    f136:	f0 82       	st	Z, r15
    f138:	f2 e0       	ldi	r31, 0x02	; 2
    f13a:	ff 16       	cp	r15, r31
    f13c:	31 f4       	brne	.+12     	; 0xf14a <arb_semaphoreCreate+0x88>
    f13e:	81 e0       	ldi	r24, 0x01	; 1
    f140:	90 e0       	ldi	r25, 0x00	; 0
    f142:	f8 01       	movw	r30, r16
    f144:	81 83       	std	Z+1, r24	; 0x01
    f146:	92 83       	std	Z+2, r25	; 0x02
    f148:	03 c0       	rjmp	.+6      	; 0xf150 <arb_semaphoreCreate+0x8e>
    f14a:	f8 01       	movw	r30, r16
    f14c:	11 82       	std	Z+1, r1	; 0x01
    f14e:	12 82       	std	Z+2, r1	; 0x02
    f150:	89 81       	ldd	r24, Y+1	; 0x01
    f152:	8f bf       	out	0x3f, r24	; 63
    f154:	2a 81       	ldd	r18, Y+2	; 0x02
    f156:	3b 81       	ldd	r19, Y+3	; 0x03
    f158:	c9 01       	movw	r24, r18
    f15a:	23 96       	adiw	r28, 0x03	; 3
    f15c:	cd bf       	out	0x3d, r28	; 61
    f15e:	de bf       	out	0x3e, r29	; 62
    f160:	cf 91       	pop	r28
    f162:	df 91       	pop	r29
    f164:	1f 91       	pop	r17
    f166:	0f 91       	pop	r16
    f168:	ff 90       	pop	r15
    f16a:	08 95       	ret

0000f16c <arb_yieldFromSignalActiveInt>:
    f16c:	0f 92       	push	r0
    f16e:	0f b6       	in	r0, 0x3f	; 63
    f170:	0f 93       	push	r16
    f172:	00 2d       	mov	r16, r0
    f174:	00 68       	ori	r16, 0x80	; 128
    f176:	00 2e       	mov	r0, r16
    f178:	0f 91       	pop	r16
    f17a:	0f 92       	push	r0
    f17c:	1f 92       	push	r1
    f17e:	11 24       	eor	r1, r1
    f180:	2f 92       	push	r2
    f182:	3f 92       	push	r3
    f184:	4f 92       	push	r4
    f186:	5f 92       	push	r5
    f188:	6f 92       	push	r6
    f18a:	7f 92       	push	r7
    f18c:	8f 92       	push	r8
    f18e:	9f 92       	push	r9
    f190:	af 92       	push	r10
    f192:	bf 92       	push	r11
    f194:	cf 92       	push	r12
    f196:	df 92       	push	r13
    f198:	ef 92       	push	r14
    f19a:	ff 92       	push	r15
    f19c:	0f 93       	push	r16
    f19e:	1f 93       	push	r17
    f1a0:	2f 93       	push	r18
    f1a2:	3f 93       	push	r19
    f1a4:	4f 93       	push	r20
    f1a6:	5f 93       	push	r21
    f1a8:	6f 93       	push	r22
    f1aa:	7f 93       	push	r23
    f1ac:	8f 93       	push	r24
    f1ae:	9f 93       	push	r25
    f1b0:	af 93       	push	r26
    f1b2:	bf 93       	push	r27
    f1b4:	cf 93       	push	r28
    f1b6:	df 93       	push	r29
    f1b8:	ef 93       	push	r30
    f1ba:	ff 93       	push	r31
    f1bc:	e0 91 ab 22 	lds	r30, 0x22AB
    f1c0:	f0 91 ac 22 	lds	r31, 0x22AC
    f1c4:	06 80       	ldd	r0, Z+6	; 0x06
    f1c6:	f7 81       	ldd	r31, Z+7	; 0x07
    f1c8:	e0 2d       	mov	r30, r0
    f1ca:	01 90       	ld	r0, Z+
    f1cc:	f0 81       	ld	r31, Z
    f1ce:	e0 2d       	mov	r30, r0
    f1d0:	e0 93 c8 27 	sts	0x27C8, r30
    f1d4:	f0 93 c9 27 	sts	0x27C9, r31
    f1d8:	2d b7       	in	r18, 0x3d	; 61
    f1da:	4e b7       	in	r20, 0x3e	; 62
    f1dc:	94 2f       	mov	r25, r20
    f1de:	80 e0       	ldi	r24, 0x00	; 0
    f1e0:	30 e0       	ldi	r19, 0x00	; 0
    f1e2:	82 2b       	or	r24, r18
    f1e4:	93 2b       	or	r25, r19
    f1e6:	81 87       	std	Z+9, r24	; 0x09
    f1e8:	92 87       	std	Z+10, r25	; 0x0a
    f1ea:	8f ef       	ldi	r24, 0xFF	; 255
    f1ec:	8d bf       	out	0x3d, r24	; 61
    f1ee:	8f e3       	ldi	r24, 0x3F	; 63
    f1f0:	8e bf       	out	0x3e, r24	; 62
    f1f2:	c0 91 3d 00 	lds	r28, 0x003D
    f1f6:	d0 91 3e 00 	lds	r29, 0x003E
    f1fa:	e0 91 ab 22 	lds	r30, 0x22AB
    f1fe:	f0 91 ac 22 	lds	r31, 0x22AC
    f202:	06 80       	ldd	r0, Z+6	; 0x06
    f204:	f7 81       	ldd	r31, Z+7	; 0x07
    f206:	e0 2d       	mov	r30, r0
    f208:	01 90       	ld	r0, Z+
    f20a:	f0 81       	ld	r31, Z
    f20c:	e0 2d       	mov	r30, r0
    f20e:	e0 93 01 25 	sts	0x2501, r30
    f212:	f0 93 02 25 	sts	0x2502, r31
    f216:	03 84       	ldd	r0, Z+11	; 0x0b
    f218:	f4 85       	ldd	r31, Z+12	; 0x0c
    f21a:	e0 2d       	mov	r30, r0
    f21c:	80 81       	ld	r24, Z
    f21e:	91 81       	ldd	r25, Z+1	; 0x01
    f220:	8d 5a       	subi	r24, 0xAD	; 173
    f222:	9e 4d       	sbci	r25, 0xDE	; 222
    f224:	11 f0       	breq	.+4      	; 0xf22a <arb_yieldFromSignalActiveInt+0xbe>
    f226:	0e 94 92 85 	call	0x10b24	; 0x10b24 <arb_stackOverflow>
    f22a:	e0 91 c6 27 	lds	r30, 0x27C6
    f22e:	f0 91 c7 27 	lds	r31, 0x27C7
    f232:	19 95       	eicall
    f234:	e0 91 ab 22 	lds	r30, 0x22AB
    f238:	f0 91 ac 22 	lds	r31, 0x22AC
    f23c:	06 80       	ldd	r0, Z+6	; 0x06
    f23e:	f7 81       	ldd	r31, Z+7	; 0x07
    f240:	e0 2d       	mov	r30, r0
    f242:	01 90       	ld	r0, Z+
    f244:	f0 81       	ld	r31, Z
    f246:	e0 2d       	mov	r30, r0
    f248:	e0 93 c8 27 	sts	0x27C8, r30
    f24c:	f0 93 c9 27 	sts	0x27C9, r31
    f250:	81 85       	ldd	r24, Z+9	; 0x09
    f252:	92 85       	ldd	r25, Z+10	; 0x0a
    f254:	8d bf       	out	0x3d, r24	; 61
    f256:	9e bf       	out	0x3e, r25	; 62
    f258:	ff 91       	pop	r31
    f25a:	ef 91       	pop	r30
    f25c:	df 91       	pop	r29
    f25e:	cf 91       	pop	r28
    f260:	bf 91       	pop	r27
    f262:	af 91       	pop	r26
    f264:	9f 91       	pop	r25
    f266:	8f 91       	pop	r24
    f268:	7f 91       	pop	r23
    f26a:	6f 91       	pop	r22
    f26c:	5f 91       	pop	r21
    f26e:	4f 91       	pop	r20
    f270:	3f 91       	pop	r19
    f272:	2f 91       	pop	r18
    f274:	1f 91       	pop	r17
    f276:	0f 91       	pop	r16
    f278:	ff 90       	pop	r15
    f27a:	ef 90       	pop	r14
    f27c:	df 90       	pop	r13
    f27e:	cf 90       	pop	r12
    f280:	bf 90       	pop	r11
    f282:	af 90       	pop	r10
    f284:	9f 90       	pop	r9
    f286:	8f 90       	pop	r8
    f288:	7f 90       	pop	r7
    f28a:	6f 90       	pop	r6
    f28c:	5f 90       	pop	r5
    f28e:	4f 90       	pop	r4
    f290:	3f 90       	pop	r3
    f292:	2f 90       	pop	r2
    f294:	1f 90       	pop	r1
    f296:	0f 90       	pop	r0
    f298:	0f be       	out	0x3f, r0	; 63
    f29a:	0f 90       	pop	r0
    f29c:	18 95       	reti

0000f29e <arb_yieldFromSignalIntsOn>:
    f29e:	0f 92       	push	r0
    f2a0:	0f b6       	in	r0, 0x3f	; 63
    f2a2:	0f 93       	push	r16
    f2a4:	00 2d       	mov	r16, r0
    f2a6:	00 68       	ori	r16, 0x80	; 128
    f2a8:	00 2e       	mov	r0, r16
    f2aa:	0f 91       	pop	r16
    f2ac:	0f 92       	push	r0
    f2ae:	1f 92       	push	r1
    f2b0:	11 24       	eor	r1, r1
    f2b2:	2f 92       	push	r2
    f2b4:	3f 92       	push	r3
    f2b6:	4f 92       	push	r4
    f2b8:	5f 92       	push	r5
    f2ba:	6f 92       	push	r6
    f2bc:	7f 92       	push	r7
    f2be:	8f 92       	push	r8
    f2c0:	9f 92       	push	r9
    f2c2:	af 92       	push	r10
    f2c4:	bf 92       	push	r11
    f2c6:	cf 92       	push	r12
    f2c8:	df 92       	push	r13
    f2ca:	ef 92       	push	r14
    f2cc:	ff 92       	push	r15
    f2ce:	0f 93       	push	r16
    f2d0:	1f 93       	push	r17
    f2d2:	2f 93       	push	r18
    f2d4:	3f 93       	push	r19
    f2d6:	4f 93       	push	r20
    f2d8:	5f 93       	push	r21
    f2da:	6f 93       	push	r22
    f2dc:	7f 93       	push	r23
    f2de:	8f 93       	push	r24
    f2e0:	9f 93       	push	r25
    f2e2:	af 93       	push	r26
    f2e4:	bf 93       	push	r27
    f2e6:	cf 93       	push	r28
    f2e8:	df 93       	push	r29
    f2ea:	ef 93       	push	r30
    f2ec:	ff 93       	push	r31
    f2ee:	e0 91 ab 22 	lds	r30, 0x22AB
    f2f2:	f0 91 ac 22 	lds	r31, 0x22AC
    f2f6:	06 80       	ldd	r0, Z+6	; 0x06
    f2f8:	f7 81       	ldd	r31, Z+7	; 0x07
    f2fa:	e0 2d       	mov	r30, r0
    f2fc:	01 90       	ld	r0, Z+
    f2fe:	f0 81       	ld	r31, Z
    f300:	e0 2d       	mov	r30, r0
    f302:	e0 93 c8 27 	sts	0x27C8, r30
    f306:	f0 93 c9 27 	sts	0x27C9, r31
    f30a:	2d b7       	in	r18, 0x3d	; 61
    f30c:	4e b7       	in	r20, 0x3e	; 62
    f30e:	94 2f       	mov	r25, r20
    f310:	80 e0       	ldi	r24, 0x00	; 0
    f312:	30 e0       	ldi	r19, 0x00	; 0
    f314:	82 2b       	or	r24, r18
    f316:	93 2b       	or	r25, r19
    f318:	81 87       	std	Z+9, r24	; 0x09
    f31a:	92 87       	std	Z+10, r25	; 0x0a
    f31c:	8f ef       	ldi	r24, 0xFF	; 255
    f31e:	8d bf       	out	0x3d, r24	; 61
    f320:	8f e3       	ldi	r24, 0x3F	; 63
    f322:	8e bf       	out	0x3e, r24	; 62
    f324:	c0 91 3d 00 	lds	r28, 0x003D
    f328:	d0 91 3e 00 	lds	r29, 0x003E
    f32c:	e0 91 ab 22 	lds	r30, 0x22AB
    f330:	f0 91 ac 22 	lds	r31, 0x22AC
    f334:	06 80       	ldd	r0, Z+6	; 0x06
    f336:	f7 81       	ldd	r31, Z+7	; 0x07
    f338:	e0 2d       	mov	r30, r0
    f33a:	01 90       	ld	r0, Z+
    f33c:	f0 81       	ld	r31, Z
    f33e:	e0 2d       	mov	r30, r0
    f340:	e0 93 01 25 	sts	0x2501, r30
    f344:	f0 93 02 25 	sts	0x2502, r31
    f348:	03 84       	ldd	r0, Z+11	; 0x0b
    f34a:	f4 85       	ldd	r31, Z+12	; 0x0c
    f34c:	e0 2d       	mov	r30, r0
    f34e:	80 81       	ld	r24, Z
    f350:	91 81       	ldd	r25, Z+1	; 0x01
    f352:	8d 5a       	subi	r24, 0xAD	; 173
    f354:	9e 4d       	sbci	r25, 0xDE	; 222
    f356:	11 f0       	breq	.+4      	; 0xf35c <arb_yieldFromSignalIntsOn+0xbe>
    f358:	0e 94 92 85 	call	0x10b24	; 0x10b24 <arb_stackOverflow>
    f35c:	e0 91 c6 27 	lds	r30, 0x27C6
    f360:	f0 91 c7 27 	lds	r31, 0x27C7
    f364:	19 95       	eicall
    f366:	e0 91 ab 22 	lds	r30, 0x22AB
    f36a:	f0 91 ac 22 	lds	r31, 0x22AC
    f36e:	06 80       	ldd	r0, Z+6	; 0x06
    f370:	f7 81       	ldd	r31, Z+7	; 0x07
    f372:	e0 2d       	mov	r30, r0
    f374:	01 90       	ld	r0, Z+
    f376:	f0 81       	ld	r31, Z
    f378:	e0 2d       	mov	r30, r0
    f37a:	e0 93 c8 27 	sts	0x27C8, r30
    f37e:	f0 93 c9 27 	sts	0x27C9, r31
    f382:	81 85       	ldd	r24, Z+9	; 0x09
    f384:	92 85       	ldd	r25, Z+10	; 0x0a
    f386:	8d bf       	out	0x3d, r24	; 61
    f388:	9e bf       	out	0x3e, r25	; 62
    f38a:	ff 91       	pop	r31
    f38c:	ef 91       	pop	r30
    f38e:	df 91       	pop	r29
    f390:	cf 91       	pop	r28
    f392:	bf 91       	pop	r27
    f394:	af 91       	pop	r26
    f396:	9f 91       	pop	r25
    f398:	8f 91       	pop	r24
    f39a:	7f 91       	pop	r23
    f39c:	6f 91       	pop	r22
    f39e:	5f 91       	pop	r21
    f3a0:	4f 91       	pop	r20
    f3a2:	3f 91       	pop	r19
    f3a4:	2f 91       	pop	r18
    f3a6:	1f 91       	pop	r17
    f3a8:	0f 91       	pop	r16
    f3aa:	ff 90       	pop	r15
    f3ac:	ef 90       	pop	r14
    f3ae:	df 90       	pop	r13
    f3b0:	cf 90       	pop	r12
    f3b2:	bf 90       	pop	r11
    f3b4:	af 90       	pop	r10
    f3b6:	9f 90       	pop	r9
    f3b8:	8f 90       	pop	r8
    f3ba:	7f 90       	pop	r7
    f3bc:	6f 90       	pop	r6
    f3be:	5f 90       	pop	r5
    f3c0:	4f 90       	pop	r4
    f3c2:	3f 90       	pop	r3
    f3c4:	2f 90       	pop	r2
    f3c6:	1f 90       	pop	r1
    f3c8:	0f 90       	pop	r0
    f3ca:	0f be       	out	0x3f, r0	; 63
    f3cc:	0f 90       	pop	r0
    f3ce:	08 95       	ret

0000f3d0 <arb_yieldFromSignalIntsOff>:
    f3d0:	0f 92       	push	r0
    f3d2:	0f b6       	in	r0, 0x3f	; 63
    f3d4:	0f 92       	push	r0
    f3d6:	1f 92       	push	r1
    f3d8:	11 24       	eor	r1, r1
    f3da:	2f 92       	push	r2
    f3dc:	3f 92       	push	r3
    f3de:	4f 92       	push	r4
    f3e0:	5f 92       	push	r5
    f3e2:	6f 92       	push	r6
    f3e4:	7f 92       	push	r7
    f3e6:	8f 92       	push	r8
    f3e8:	9f 92       	push	r9
    f3ea:	af 92       	push	r10
    f3ec:	bf 92       	push	r11
    f3ee:	cf 92       	push	r12
    f3f0:	df 92       	push	r13
    f3f2:	ef 92       	push	r14
    f3f4:	ff 92       	push	r15
    f3f6:	0f 93       	push	r16
    f3f8:	1f 93       	push	r17
    f3fa:	2f 93       	push	r18
    f3fc:	3f 93       	push	r19
    f3fe:	4f 93       	push	r20
    f400:	5f 93       	push	r21
    f402:	6f 93       	push	r22
    f404:	7f 93       	push	r23
    f406:	8f 93       	push	r24
    f408:	9f 93       	push	r25
    f40a:	af 93       	push	r26
    f40c:	bf 93       	push	r27
    f40e:	cf 93       	push	r28
    f410:	df 93       	push	r29
    f412:	ef 93       	push	r30
    f414:	ff 93       	push	r31
    f416:	e0 91 ab 22 	lds	r30, 0x22AB
    f41a:	f0 91 ac 22 	lds	r31, 0x22AC
    f41e:	06 80       	ldd	r0, Z+6	; 0x06
    f420:	f7 81       	ldd	r31, Z+7	; 0x07
    f422:	e0 2d       	mov	r30, r0
    f424:	01 90       	ld	r0, Z+
    f426:	f0 81       	ld	r31, Z
    f428:	e0 2d       	mov	r30, r0
    f42a:	e0 93 c8 27 	sts	0x27C8, r30
    f42e:	f0 93 c9 27 	sts	0x27C9, r31
    f432:	2d b7       	in	r18, 0x3d	; 61
    f434:	4e b7       	in	r20, 0x3e	; 62
    f436:	94 2f       	mov	r25, r20
    f438:	80 e0       	ldi	r24, 0x00	; 0
    f43a:	30 e0       	ldi	r19, 0x00	; 0
    f43c:	82 2b       	or	r24, r18
    f43e:	93 2b       	or	r25, r19
    f440:	81 87       	std	Z+9, r24	; 0x09
    f442:	92 87       	std	Z+10, r25	; 0x0a
    f444:	8f ef       	ldi	r24, 0xFF	; 255
    f446:	8d bf       	out	0x3d, r24	; 61
    f448:	8f e3       	ldi	r24, 0x3F	; 63
    f44a:	8e bf       	out	0x3e, r24	; 62
    f44c:	c0 91 3d 00 	lds	r28, 0x003D
    f450:	d0 91 3e 00 	lds	r29, 0x003E
    f454:	e0 91 ab 22 	lds	r30, 0x22AB
    f458:	f0 91 ac 22 	lds	r31, 0x22AC
    f45c:	06 80       	ldd	r0, Z+6	; 0x06
    f45e:	f7 81       	ldd	r31, Z+7	; 0x07
    f460:	e0 2d       	mov	r30, r0
    f462:	01 90       	ld	r0, Z+
    f464:	f0 81       	ld	r31, Z
    f466:	e0 2d       	mov	r30, r0
    f468:	e0 93 01 25 	sts	0x2501, r30
    f46c:	f0 93 02 25 	sts	0x2502, r31
    f470:	03 84       	ldd	r0, Z+11	; 0x0b
    f472:	f4 85       	ldd	r31, Z+12	; 0x0c
    f474:	e0 2d       	mov	r30, r0
    f476:	80 81       	ld	r24, Z
    f478:	91 81       	ldd	r25, Z+1	; 0x01
    f47a:	8d 5a       	subi	r24, 0xAD	; 173
    f47c:	9e 4d       	sbci	r25, 0xDE	; 222
    f47e:	11 f0       	breq	.+4      	; 0xf484 <arb_yieldFromSignalIntsOff+0xb4>
    f480:	0e 94 92 85 	call	0x10b24	; 0x10b24 <arb_stackOverflow>
    f484:	e0 91 c6 27 	lds	r30, 0x27C6
    f488:	f0 91 c7 27 	lds	r31, 0x27C7
    f48c:	19 95       	eicall
    f48e:	e0 91 ab 22 	lds	r30, 0x22AB
    f492:	f0 91 ac 22 	lds	r31, 0x22AC
    f496:	06 80       	ldd	r0, Z+6	; 0x06
    f498:	f7 81       	ldd	r31, Z+7	; 0x07
    f49a:	e0 2d       	mov	r30, r0
    f49c:	01 90       	ld	r0, Z+
    f49e:	f0 81       	ld	r31, Z
    f4a0:	e0 2d       	mov	r30, r0
    f4a2:	e0 93 c8 27 	sts	0x27C8, r30
    f4a6:	f0 93 c9 27 	sts	0x27C9, r31
    f4aa:	81 85       	ldd	r24, Z+9	; 0x09
    f4ac:	92 85       	ldd	r25, Z+10	; 0x0a
    f4ae:	8d bf       	out	0x3d, r24	; 61
    f4b0:	9e bf       	out	0x3e, r25	; 62
    f4b2:	ff 91       	pop	r31
    f4b4:	ef 91       	pop	r30
    f4b6:	df 91       	pop	r29
    f4b8:	cf 91       	pop	r28
    f4ba:	bf 91       	pop	r27
    f4bc:	af 91       	pop	r26
    f4be:	9f 91       	pop	r25
    f4c0:	8f 91       	pop	r24
    f4c2:	7f 91       	pop	r23
    f4c4:	6f 91       	pop	r22
    f4c6:	5f 91       	pop	r21
    f4c8:	4f 91       	pop	r20
    f4ca:	3f 91       	pop	r19
    f4cc:	2f 91       	pop	r18
    f4ce:	1f 91       	pop	r17
    f4d0:	0f 91       	pop	r16
    f4d2:	ff 90       	pop	r15
    f4d4:	ef 90       	pop	r14
    f4d6:	df 90       	pop	r13
    f4d8:	cf 90       	pop	r12
    f4da:	bf 90       	pop	r11
    f4dc:	af 90       	pop	r10
    f4de:	9f 90       	pop	r9
    f4e0:	8f 90       	pop	r8
    f4e2:	7f 90       	pop	r7
    f4e4:	6f 90       	pop	r6
    f4e6:	5f 90       	pop	r5
    f4e8:	4f 90       	pop	r4
    f4ea:	3f 90       	pop	r3
    f4ec:	2f 90       	pop	r2
    f4ee:	1f 90       	pop	r1
    f4f0:	0f 90       	pop	r0
    f4f2:	0f be       	out	0x3f, r0	; 63
    f4f4:	0f 90       	pop	r0
    f4f6:	08 95       	ret

0000f4f8 <arb_signal>:
    f4f8:	0f 93       	push	r16
    f4fa:	1f 93       	push	r17
    f4fc:	df 93       	push	r29
    f4fe:	cf 93       	push	r28
    f500:	cd b7       	in	r28, 0x3d	; 61
    f502:	de b7       	in	r29, 0x3e	; 62
    f504:	28 97       	sbiw	r28, 0x08	; 8
    f506:	cd bf       	out	0x3d, r28	; 61
    f508:	de bf       	out	0x3e, r29	; 62
    f50a:	8f 83       	std	Y+7, r24	; 0x07
    f50c:	98 87       	std	Y+8, r25	; 0x08
    f50e:	0f b6       	in	r0, 0x3f	; 63
    f510:	07 fe       	sbrs	r0, 7
    f512:	e3 c0       	rjmp	.+454    	; 0xf6da <arb_signal+0x1e2>
    f514:	f8 94       	cli
    f516:	ef 81       	ldd	r30, Y+7	; 0x07
    f518:	f8 85       	ldd	r31, Y+8	; 0x08
    f51a:	20 91 9c 22 	lds	r18, 0x229C
    f51e:	30 91 9d 22 	lds	r19, 0x229D
    f522:	84 81       	ldd	r24, Z+4	; 0x04
    f524:	95 81       	ldd	r25, Z+5	; 0x05
    f526:	82 17       	cp	r24, r18
    f528:	93 07       	cpc	r25, r19
    f52a:	11 f0       	breq	.+4      	; 0xf530 <arb_signal+0x38>
    f52c:	78 94       	sei
    f52e:	e0 c0       	rjmp	.+448    	; 0xf6f0 <arb_signal+0x1f8>
    f530:	ef 81       	ldd	r30, Y+7	; 0x07
    f532:	f8 85       	ldd	r31, Y+8	; 0x08
    f534:	a0 81       	ld	r26, Z
    f536:	b1 81       	ldd	r27, Z+1	; 0x01
    f538:	a0 93 ff 24 	sts	0x24FF, r26
    f53c:	b0 93 00 25 	sts	0x2500, r27
    f540:	11 96       	adiw	r26, 0x01	; 1
    f542:	8d 91       	ld	r24, X+
    f544:	9c 91       	ld	r25, X
    f546:	12 97       	sbiw	r26, 0x02	; 2
    f548:	01 96       	adiw	r24, 0x01	; 1
    f54a:	11 96       	adiw	r26, 0x01	; 1
    f54c:	8d 93       	st	X+, r24
    f54e:	9c 93       	st	X, r25
    f550:	12 97       	sbiw	r26, 0x02	; 2
    f552:	18 16       	cp	r1, r24
    f554:	19 06       	cpc	r1, r25
    f556:	0c f4       	brge	.+2      	; 0xf55a <arb_signal+0x62>
    f558:	be c0       	rjmp	.+380    	; 0xf6d6 <arb_signal+0x1de>
    f55a:	13 96       	adiw	r26, 0x03	; 3
    f55c:	ed 91       	ld	r30, X+
    f55e:	fc 91       	ld	r31, X
    f560:	14 97       	sbiw	r26, 0x04	; 4
    f562:	82 81       	ldd	r24, Z+2	; 0x02
    f564:	93 81       	ldd	r25, Z+3	; 0x03
    f566:	89 2b       	or	r24, r25
    f568:	09 f4       	brne	.+2      	; 0xf56c <arb_signal+0x74>
    f56a:	b5 c0       	rjmp	.+362    	; 0xf6d6 <arb_signal+0x1de>
    f56c:	13 96       	adiw	r26, 0x03	; 3
    f56e:	ed 91       	ld	r30, X+
    f570:	fc 91       	ld	r31, X
    f572:	14 97       	sbiw	r26, 0x04	; 4
    f574:	80 85       	ldd	r24, Z+8	; 0x08
    f576:	91 85       	ldd	r25, Z+9	; 0x09
    f578:	8b 83       	std	Y+3, r24	; 0x03
    f57a:	9c 83       	std	Y+4, r25	; 0x04
    f57c:	eb 81       	ldd	r30, Y+3	; 0x03
    f57e:	fc 81       	ldd	r31, Y+4	; 0x04
    f580:	01 90       	ld	r0, Z+
    f582:	f0 81       	ld	r31, Z
    f584:	e0 2d       	mov	r30, r0
    f586:	82 81       	ldd	r24, Z+2	; 0x02
    f588:	48 2f       	mov	r20, r24
    f58a:	50 e0       	ldi	r21, 0x00	; 0
    f58c:	13 96       	adiw	r26, 0x03	; 3
    f58e:	ed 91       	ld	r30, X+
    f590:	fc 91       	ld	r31, X
    f592:	14 97       	sbiw	r26, 0x04	; 4
    f594:	62 81       	ldd	r22, Z+2	; 0x02
    f596:	73 81       	ldd	r23, Z+3	; 0x03
    f598:	13 96       	adiw	r26, 0x03	; 3
    f59a:	ed 91       	ld	r30, X+
    f59c:	fc 91       	ld	r31, X
    f59e:	14 97       	sbiw	r26, 0x04	; 4
    f5a0:	80 85       	ldd	r24, Z+8	; 0x08
    f5a2:	91 85       	ldd	r25, Z+9	; 0x09
    f5a4:	89 83       	std	Y+1, r24	; 0x01
    f5a6:	9a 83       	std	Y+2, r25	; 0x02
    f5a8:	1a c0       	rjmp	.+52     	; 0xf5de <arb_signal+0xe6>
    f5aa:	e9 81       	ldd	r30, Y+1	; 0x01
    f5ac:	fa 81       	ldd	r31, Y+2	; 0x02
    f5ae:	01 90       	ld	r0, Z+
    f5b0:	f0 81       	ld	r31, Z
    f5b2:	e0 2d       	mov	r30, r0
    f5b4:	82 81       	ldd	r24, Z+2	; 0x02
    f5b6:	28 2f       	mov	r18, r24
    f5b8:	30 e0       	ldi	r19, 0x00	; 0
    f5ba:	24 17       	cp	r18, r20
    f5bc:	35 07       	cpc	r19, r21
    f5be:	10 f0       	brcs	.+4      	; 0xf5c4 <arb_signal+0xcc>
    f5c0:	9a 01       	movw	r18, r20
    f5c2:	04 c0       	rjmp	.+8      	; 0xf5cc <arb_signal+0xd4>
    f5c4:	89 81       	ldd	r24, Y+1	; 0x01
    f5c6:	9a 81       	ldd	r25, Y+2	; 0x02
    f5c8:	8b 83       	std	Y+3, r24	; 0x03
    f5ca:	9c 83       	std	Y+4, r25	; 0x04
    f5cc:	61 50       	subi	r22, 0x01	; 1
    f5ce:	70 40       	sbci	r23, 0x00	; 0
    f5d0:	e9 81       	ldd	r30, Y+1	; 0x01
    f5d2:	fa 81       	ldd	r31, Y+2	; 0x02
    f5d4:	80 85       	ldd	r24, Z+8	; 0x08
    f5d6:	91 85       	ldd	r25, Z+9	; 0x09
    f5d8:	89 83       	std	Y+1, r24	; 0x01
    f5da:	9a 83       	std	Y+2, r25	; 0x02
    f5dc:	a9 01       	movw	r20, r18
    f5de:	61 15       	cp	r22, r1
    f5e0:	71 05       	cpc	r23, r1
    f5e2:	19 f7       	brne	.-58     	; 0xf5aa <arb_signal+0xb2>
    f5e4:	8c 91       	ld	r24, X
    f5e6:	81 30       	cpi	r24, 0x01	; 1
    f5e8:	c1 f0       	breq	.+48     	; 0xf61a <arb_signal+0x122>
    f5ea:	eb 81       	ldd	r30, Y+3	; 0x03
    f5ec:	fc 81       	ldd	r31, Y+4	; 0x04
    f5ee:	01 90       	ld	r0, Z+
    f5f0:	f0 81       	ld	r31, Z
    f5f2:	e0 2d       	mov	r30, r0
    f5f4:	11 82       	std	Z+1, r1	; 0x01
    f5f6:	13 96       	adiw	r26, 0x03	; 3
    f5f8:	8d 91       	ld	r24, X+
    f5fa:	9c 91       	ld	r25, X
    f5fc:	14 97       	sbiw	r26, 0x04	; 4
    f5fe:	6b 81       	ldd	r22, Y+3	; 0x03
    f600:	7c 81       	ldd	r23, Y+4	; 0x04
    f602:	0e 94 43 89 	call	0x11286	; 0x11286 <utl_removeLink>
    f606:	80 91 ab 22 	lds	r24, 0x22AB
    f60a:	90 91 ac 22 	lds	r25, 0x22AC
    f60e:	6b 81       	ldd	r22, Y+3	; 0x03
    f610:	7c 81       	ldd	r23, Y+4	; 0x04
    f612:	41 e0       	ldi	r20, 0x01	; 1
    f614:	0e 94 c8 88 	call	0x11190	; 0x11190 <utl_insertLink>
    f618:	3f c0       	rjmp	.+126    	; 0xf698 <arb_signal+0x1a0>
    f61a:	13 96       	adiw	r26, 0x03	; 3
    f61c:	ed 91       	ld	r30, X+
    f61e:	fc 91       	ld	r31, X
    f620:	14 97       	sbiw	r26, 0x04	; 4
    f622:	02 81       	ldd	r16, Z+2	; 0x02
    f624:	13 81       	ldd	r17, Z+3	; 0x03
    f626:	13 96       	adiw	r26, 0x03	; 3
    f628:	ed 91       	ld	r30, X+
    f62a:	fc 91       	ld	r31, X
    f62c:	14 97       	sbiw	r26, 0x04	; 4
    f62e:	25 c0       	rjmp	.+74     	; 0xf67a <arb_signal+0x182>
    f630:	e9 81       	ldd	r30, Y+1	; 0x01
    f632:	fa 81       	ldd	r31, Y+2	; 0x02
    f634:	01 90       	ld	r0, Z+
    f636:	f0 81       	ld	r31, Z
    f638:	e0 2d       	mov	r30, r0
    f63a:	11 82       	std	Z+1, r1	; 0x01
    f63c:	e9 81       	ldd	r30, Y+1	; 0x01
    f63e:	fa 81       	ldd	r31, Y+2	; 0x02
    f640:	82 85       	ldd	r24, Z+10	; 0x0a
    f642:	93 85       	ldd	r25, Z+11	; 0x0b
    f644:	8d 83       	std	Y+5, r24	; 0x05
    f646:	9e 83       	std	Y+6, r25	; 0x06
    f648:	13 96       	adiw	r26, 0x03	; 3
    f64a:	8d 91       	ld	r24, X+
    f64c:	9c 91       	ld	r25, X
    f64e:	14 97       	sbiw	r26, 0x04	; 4
    f650:	69 81       	ldd	r22, Y+1	; 0x01
    f652:	7a 81       	ldd	r23, Y+2	; 0x02
    f654:	0e 94 43 89 	call	0x11286	; 0x11286 <utl_removeLink>
    f658:	80 91 ab 22 	lds	r24, 0x22AB
    f65c:	90 91 ac 22 	lds	r25, 0x22AC
    f660:	69 81       	ldd	r22, Y+1	; 0x01
    f662:	7a 81       	ldd	r23, Y+2	; 0x02
    f664:	41 e0       	ldi	r20, 0x01	; 1
    f666:	0e 94 c8 88 	call	0x11190	; 0x11190 <utl_insertLink>
    f66a:	8d 81       	ldd	r24, Y+5	; 0x05
    f66c:	9e 81       	ldd	r25, Y+6	; 0x06
    f66e:	89 83       	std	Y+1, r24	; 0x01
    f670:	9a 83       	std	Y+2, r25	; 0x02
    f672:	01 50       	subi	r16, 0x01	; 1
    f674:	10 40       	sbci	r17, 0x00	; 0
    f676:	e9 81       	ldd	r30, Y+1	; 0x01
    f678:	fa 81       	ldd	r31, Y+2	; 0x02
    f67a:	80 85       	ldd	r24, Z+8	; 0x08
    f67c:	91 85       	ldd	r25, Z+9	; 0x09
    f67e:	89 83       	std	Y+1, r24	; 0x01
    f680:	9a 83       	std	Y+2, r25	; 0x02
    f682:	a0 91 ff 24 	lds	r26, 0x24FF
    f686:	b0 91 00 25 	lds	r27, 0x2500
    f68a:	01 15       	cp	r16, r1
    f68c:	11 05       	cpc	r17, r1
    f68e:	81 f6       	brne	.-96     	; 0xf630 <arb_signal+0x138>
    f690:	11 96       	adiw	r26, 0x01	; 1
    f692:	1d 92       	st	X+, r1
    f694:	1c 92       	st	X, r1
    f696:	12 97       	sbiw	r26, 0x02	; 2
    f698:	ab 81       	ldd	r26, Y+3	; 0x03
    f69a:	bc 81       	ldd	r27, Y+4	; 0x04
    f69c:	e0 91 ab 22 	lds	r30, 0x22AB
    f6a0:	f0 91 ac 22 	lds	r31, 0x22AC
    f6a4:	06 80       	ldd	r0, Z+6	; 0x06
    f6a6:	f7 81       	ldd	r31, Z+7	; 0x07
    f6a8:	e0 2d       	mov	r30, r0
    f6aa:	20 81       	ld	r18, Z
    f6ac:	31 81       	ldd	r19, Z+1	; 0x01
    f6ae:	ed 91       	ld	r30, X+
    f6b0:	fc 91       	ld	r31, X
    f6b2:	92 81       	ldd	r25, Z+2	; 0x02
    f6b4:	f9 01       	movw	r30, r18
    f6b6:	82 81       	ldd	r24, Z+2	; 0x02
    f6b8:	89 17       	cp	r24, r25
    f6ba:	58 f0       	brcs	.+22     	; 0xf6d2 <arb_signal+0x1da>
    f6bc:	11 82       	std	Z+1, r1	; 0x01
    f6be:	80 91 a0 00 	lds	r24, 0x00A0
    f6c2:	88 23       	and	r24, r24
    f6c4:	19 f0       	breq	.+6      	; 0xf6cc <arb_signal+0x1d4>
    f6c6:	0e 94 b6 78 	call	0xf16c	; 0xf16c <arb_yieldFromSignalActiveInt>
    f6ca:	dd c0       	rjmp	.+442    	; 0xf886 <arb_signal+0x38e>
    f6cc:	0e 94 4f 79 	call	0xf29e	; 0xf29e <arb_yieldFromSignalIntsOn>
    f6d0:	da c0       	rjmp	.+436    	; 0xf886 <arb_signal+0x38e>
    f6d2:	78 94       	sei
    f6d4:	d8 c0       	rjmp	.+432    	; 0xf886 <arb_signal+0x38e>
    f6d6:	78 94       	sei
    f6d8:	d6 c0       	rjmp	.+428    	; 0xf886 <arb_signal+0x38e>
    f6da:	ef 81       	ldd	r30, Y+7	; 0x07
    f6dc:	f8 85       	ldd	r31, Y+8	; 0x08
    f6de:	20 91 9c 22 	lds	r18, 0x229C
    f6e2:	30 91 9d 22 	lds	r19, 0x229D
    f6e6:	84 81       	ldd	r24, Z+4	; 0x04
    f6e8:	95 81       	ldd	r25, Z+5	; 0x05
    f6ea:	82 17       	cp	r24, r18
    f6ec:	93 07       	cpc	r25, r19
    f6ee:	11 f0       	breq	.+4      	; 0xf6f4 <arb_signal+0x1fc>
    f6f0:	89 ef       	ldi	r24, 0xF9	; 249
    f6f2:	ca c0       	rjmp	.+404    	; 0xf888 <arb_signal+0x390>
    f6f4:	ef 81       	ldd	r30, Y+7	; 0x07
    f6f6:	f8 85       	ldd	r31, Y+8	; 0x08
    f6f8:	a0 81       	ld	r26, Z
    f6fa:	b1 81       	ldd	r27, Z+1	; 0x01
    f6fc:	a0 93 ff 24 	sts	0x24FF, r26
    f700:	b0 93 00 25 	sts	0x2500, r27
    f704:	11 96       	adiw	r26, 0x01	; 1
    f706:	8d 91       	ld	r24, X+
    f708:	9c 91       	ld	r25, X
    f70a:	12 97       	sbiw	r26, 0x02	; 2
    f70c:	01 96       	adiw	r24, 0x01	; 1
    f70e:	11 96       	adiw	r26, 0x01	; 1
    f710:	8d 93       	st	X+, r24
    f712:	9c 93       	st	X, r25
    f714:	12 97       	sbiw	r26, 0x02	; 2
    f716:	18 16       	cp	r1, r24
    f718:	19 06       	cpc	r1, r25
    f71a:	0c f4       	brge	.+2      	; 0xf71e <arb_signal+0x226>
    f71c:	b4 c0       	rjmp	.+360    	; 0xf886 <arb_signal+0x38e>
    f71e:	13 96       	adiw	r26, 0x03	; 3
    f720:	ed 91       	ld	r30, X+
    f722:	fc 91       	ld	r31, X
    f724:	14 97       	sbiw	r26, 0x04	; 4
    f726:	82 81       	ldd	r24, Z+2	; 0x02
    f728:	93 81       	ldd	r25, Z+3	; 0x03
    f72a:	89 2b       	or	r24, r25
    f72c:	09 f4       	brne	.+2      	; 0xf730 <arb_signal+0x238>
    f72e:	ab c0       	rjmp	.+342    	; 0xf886 <arb_signal+0x38e>
    f730:	13 96       	adiw	r26, 0x03	; 3
    f732:	ed 91       	ld	r30, X+
    f734:	fc 91       	ld	r31, X
    f736:	14 97       	sbiw	r26, 0x04	; 4
    f738:	80 85       	ldd	r24, Z+8	; 0x08
    f73a:	91 85       	ldd	r25, Z+9	; 0x09
    f73c:	8b 83       	std	Y+3, r24	; 0x03
    f73e:	9c 83       	std	Y+4, r25	; 0x04
    f740:	eb 81       	ldd	r30, Y+3	; 0x03
    f742:	fc 81       	ldd	r31, Y+4	; 0x04
    f744:	01 90       	ld	r0, Z+
    f746:	f0 81       	ld	r31, Z
    f748:	e0 2d       	mov	r30, r0
    f74a:	82 81       	ldd	r24, Z+2	; 0x02
    f74c:	48 2f       	mov	r20, r24
    f74e:	50 e0       	ldi	r21, 0x00	; 0
    f750:	13 96       	adiw	r26, 0x03	; 3
    f752:	ed 91       	ld	r30, X+
    f754:	fc 91       	ld	r31, X
    f756:	14 97       	sbiw	r26, 0x04	; 4
    f758:	62 81       	ldd	r22, Z+2	; 0x02
    f75a:	73 81       	ldd	r23, Z+3	; 0x03
    f75c:	13 96       	adiw	r26, 0x03	; 3
    f75e:	ed 91       	ld	r30, X+
    f760:	fc 91       	ld	r31, X
    f762:	14 97       	sbiw	r26, 0x04	; 4
    f764:	80 85       	ldd	r24, Z+8	; 0x08
    f766:	91 85       	ldd	r25, Z+9	; 0x09
    f768:	89 83       	std	Y+1, r24	; 0x01
    f76a:	9a 83       	std	Y+2, r25	; 0x02
    f76c:	1a c0       	rjmp	.+52     	; 0xf7a2 <arb_signal+0x2aa>
    f76e:	e9 81       	ldd	r30, Y+1	; 0x01
    f770:	fa 81       	ldd	r31, Y+2	; 0x02
    f772:	01 90       	ld	r0, Z+
    f774:	f0 81       	ld	r31, Z
    f776:	e0 2d       	mov	r30, r0
    f778:	82 81       	ldd	r24, Z+2	; 0x02
    f77a:	28 2f       	mov	r18, r24
    f77c:	30 e0       	ldi	r19, 0x00	; 0
    f77e:	24 17       	cp	r18, r20
    f780:	35 07       	cpc	r19, r21
    f782:	10 f0       	brcs	.+4      	; 0xf788 <arb_signal+0x290>
    f784:	9a 01       	movw	r18, r20
    f786:	04 c0       	rjmp	.+8      	; 0xf790 <arb_signal+0x298>
    f788:	89 81       	ldd	r24, Y+1	; 0x01
    f78a:	9a 81       	ldd	r25, Y+2	; 0x02
    f78c:	8b 83       	std	Y+3, r24	; 0x03
    f78e:	9c 83       	std	Y+4, r25	; 0x04
    f790:	61 50       	subi	r22, 0x01	; 1
    f792:	70 40       	sbci	r23, 0x00	; 0
    f794:	e9 81       	ldd	r30, Y+1	; 0x01
    f796:	fa 81       	ldd	r31, Y+2	; 0x02
    f798:	80 85       	ldd	r24, Z+8	; 0x08
    f79a:	91 85       	ldd	r25, Z+9	; 0x09
    f79c:	89 83       	std	Y+1, r24	; 0x01
    f79e:	9a 83       	std	Y+2, r25	; 0x02
    f7a0:	a9 01       	movw	r20, r18
    f7a2:	61 15       	cp	r22, r1
    f7a4:	71 05       	cpc	r23, r1
    f7a6:	19 f7       	brne	.-58     	; 0xf76e <arb_signal+0x276>
    f7a8:	8c 91       	ld	r24, X
    f7aa:	81 30       	cpi	r24, 0x01	; 1
    f7ac:	c1 f0       	breq	.+48     	; 0xf7de <arb_signal+0x2e6>
    f7ae:	eb 81       	ldd	r30, Y+3	; 0x03
    f7b0:	fc 81       	ldd	r31, Y+4	; 0x04
    f7b2:	01 90       	ld	r0, Z+
    f7b4:	f0 81       	ld	r31, Z
    f7b6:	e0 2d       	mov	r30, r0
    f7b8:	11 82       	std	Z+1, r1	; 0x01
    f7ba:	13 96       	adiw	r26, 0x03	; 3
    f7bc:	8d 91       	ld	r24, X+
    f7be:	9c 91       	ld	r25, X
    f7c0:	14 97       	sbiw	r26, 0x04	; 4
    f7c2:	6b 81       	ldd	r22, Y+3	; 0x03
    f7c4:	7c 81       	ldd	r23, Y+4	; 0x04
    f7c6:	0e 94 43 89 	call	0x11286	; 0x11286 <utl_removeLink>
    f7ca:	80 91 ab 22 	lds	r24, 0x22AB
    f7ce:	90 91 ac 22 	lds	r25, 0x22AC
    f7d2:	6b 81       	ldd	r22, Y+3	; 0x03
    f7d4:	7c 81       	ldd	r23, Y+4	; 0x04
    f7d6:	41 e0       	ldi	r20, 0x01	; 1
    f7d8:	0e 94 c8 88 	call	0x11190	; 0x11190 <utl_insertLink>
    f7dc:	3f c0       	rjmp	.+126    	; 0xf85c <arb_signal+0x364>
    f7de:	13 96       	adiw	r26, 0x03	; 3
    f7e0:	ed 91       	ld	r30, X+
    f7e2:	fc 91       	ld	r31, X
    f7e4:	14 97       	sbiw	r26, 0x04	; 4
    f7e6:	02 81       	ldd	r16, Z+2	; 0x02
    f7e8:	13 81       	ldd	r17, Z+3	; 0x03
    f7ea:	13 96       	adiw	r26, 0x03	; 3
    f7ec:	ed 91       	ld	r30, X+
    f7ee:	fc 91       	ld	r31, X
    f7f0:	14 97       	sbiw	r26, 0x04	; 4
    f7f2:	25 c0       	rjmp	.+74     	; 0xf83e <arb_signal+0x346>
    f7f4:	e9 81       	ldd	r30, Y+1	; 0x01
    f7f6:	fa 81       	ldd	r31, Y+2	; 0x02
    f7f8:	01 90       	ld	r0, Z+
    f7fa:	f0 81       	ld	r31, Z
    f7fc:	e0 2d       	mov	r30, r0
    f7fe:	11 82       	std	Z+1, r1	; 0x01
    f800:	e9 81       	ldd	r30, Y+1	; 0x01
    f802:	fa 81       	ldd	r31, Y+2	; 0x02
    f804:	82 85       	ldd	r24, Z+10	; 0x0a
    f806:	93 85       	ldd	r25, Z+11	; 0x0b
    f808:	8d 83       	std	Y+5, r24	; 0x05
    f80a:	9e 83       	std	Y+6, r25	; 0x06
    f80c:	13 96       	adiw	r26, 0x03	; 3
    f80e:	8d 91       	ld	r24, X+
    f810:	9c 91       	ld	r25, X
    f812:	14 97       	sbiw	r26, 0x04	; 4
    f814:	69 81       	ldd	r22, Y+1	; 0x01
    f816:	7a 81       	ldd	r23, Y+2	; 0x02
    f818:	0e 94 43 89 	call	0x11286	; 0x11286 <utl_removeLink>
    f81c:	80 91 ab 22 	lds	r24, 0x22AB
    f820:	90 91 ac 22 	lds	r25, 0x22AC
    f824:	69 81       	ldd	r22, Y+1	; 0x01
    f826:	7a 81       	ldd	r23, Y+2	; 0x02
    f828:	41 e0       	ldi	r20, 0x01	; 1
    f82a:	0e 94 c8 88 	call	0x11190	; 0x11190 <utl_insertLink>
    f82e:	8d 81       	ldd	r24, Y+5	; 0x05
    f830:	9e 81       	ldd	r25, Y+6	; 0x06
    f832:	89 83       	std	Y+1, r24	; 0x01
    f834:	9a 83       	std	Y+2, r25	; 0x02
    f836:	01 50       	subi	r16, 0x01	; 1
    f838:	10 40       	sbci	r17, 0x00	; 0
    f83a:	e9 81       	ldd	r30, Y+1	; 0x01
    f83c:	fa 81       	ldd	r31, Y+2	; 0x02
    f83e:	80 85       	ldd	r24, Z+8	; 0x08
    f840:	91 85       	ldd	r25, Z+9	; 0x09
    f842:	89 83       	std	Y+1, r24	; 0x01
    f844:	9a 83       	std	Y+2, r25	; 0x02
    f846:	a0 91 ff 24 	lds	r26, 0x24FF
    f84a:	b0 91 00 25 	lds	r27, 0x2500
    f84e:	01 15       	cp	r16, r1
    f850:	11 05       	cpc	r17, r1
    f852:	81 f6       	brne	.-96     	; 0xf7f4 <arb_signal+0x2fc>
    f854:	11 96       	adiw	r26, 0x01	; 1
    f856:	1d 92       	st	X+, r1
    f858:	1c 92       	st	X, r1
    f85a:	12 97       	sbiw	r26, 0x02	; 2
    f85c:	ab 81       	ldd	r26, Y+3	; 0x03
    f85e:	bc 81       	ldd	r27, Y+4	; 0x04
    f860:	e0 91 ab 22 	lds	r30, 0x22AB
    f864:	f0 91 ac 22 	lds	r31, 0x22AC
    f868:	06 80       	ldd	r0, Z+6	; 0x06
    f86a:	f7 81       	ldd	r31, Z+7	; 0x07
    f86c:	e0 2d       	mov	r30, r0
    f86e:	20 81       	ld	r18, Z
    f870:	31 81       	ldd	r19, Z+1	; 0x01
    f872:	ed 91       	ld	r30, X+
    f874:	fc 91       	ld	r31, X
    f876:	92 81       	ldd	r25, Z+2	; 0x02
    f878:	f9 01       	movw	r30, r18
    f87a:	82 81       	ldd	r24, Z+2	; 0x02
    f87c:	89 17       	cp	r24, r25
    f87e:	18 f0       	brcs	.+6      	; 0xf886 <arb_signal+0x38e>
    f880:	11 82       	std	Z+1, r1	; 0x01
    f882:	0e 94 e8 79 	call	0xf3d0	; 0xf3d0 <arb_yieldFromSignalIntsOff>
    f886:	80 e0       	ldi	r24, 0x00	; 0
    f888:	28 96       	adiw	r28, 0x08	; 8
    f88a:	cd bf       	out	0x3d, r28	; 61
    f88c:	de bf       	out	0x3e, r29	; 62
    f88e:	cf 91       	pop	r28
    f890:	df 91       	pop	r29
    f892:	1f 91       	pop	r17
    f894:	0f 91       	pop	r16
    f896:	08 95       	ret

0000f898 <arb_yieldFromWaitIntsOn>:
    f898:	0f 92       	push	r0
    f89a:	0f b6       	in	r0, 0x3f	; 63
    f89c:	0f 93       	push	r16
    f89e:	00 2d       	mov	r16, r0
    f8a0:	00 68       	ori	r16, 0x80	; 128
    f8a2:	00 2e       	mov	r0, r16
    f8a4:	0f 91       	pop	r16
    f8a6:	0f 92       	push	r0
    f8a8:	1f 92       	push	r1
    f8aa:	11 24       	eor	r1, r1
    f8ac:	2f 92       	push	r2
    f8ae:	3f 92       	push	r3
    f8b0:	4f 92       	push	r4
    f8b2:	5f 92       	push	r5
    f8b4:	6f 92       	push	r6
    f8b6:	7f 92       	push	r7
    f8b8:	8f 92       	push	r8
    f8ba:	9f 92       	push	r9
    f8bc:	af 92       	push	r10
    f8be:	bf 92       	push	r11
    f8c0:	cf 92       	push	r12
    f8c2:	df 92       	push	r13
    f8c4:	ef 92       	push	r14
    f8c6:	ff 92       	push	r15
    f8c8:	0f 93       	push	r16
    f8ca:	1f 93       	push	r17
    f8cc:	2f 93       	push	r18
    f8ce:	3f 93       	push	r19
    f8d0:	4f 93       	push	r20
    f8d2:	5f 93       	push	r21
    f8d4:	6f 93       	push	r22
    f8d6:	7f 93       	push	r23
    f8d8:	8f 93       	push	r24
    f8da:	9f 93       	push	r25
    f8dc:	af 93       	push	r26
    f8de:	bf 93       	push	r27
    f8e0:	cf 93       	push	r28
    f8e2:	df 93       	push	r29
    f8e4:	ef 93       	push	r30
    f8e6:	ff 93       	push	r31
    f8e8:	e0 91 ab 22 	lds	r30, 0x22AB
    f8ec:	f0 91 ac 22 	lds	r31, 0x22AC
    f8f0:	06 80       	ldd	r0, Z+6	; 0x06
    f8f2:	f7 81       	ldd	r31, Z+7	; 0x07
    f8f4:	e0 2d       	mov	r30, r0
    f8f6:	01 90       	ld	r0, Z+
    f8f8:	f0 81       	ld	r31, Z
    f8fa:	e0 2d       	mov	r30, r0
    f8fc:	e0 93 c8 27 	sts	0x27C8, r30
    f900:	f0 93 c9 27 	sts	0x27C9, r31
    f904:	2d b7       	in	r18, 0x3d	; 61
    f906:	4e b7       	in	r20, 0x3e	; 62
    f908:	94 2f       	mov	r25, r20
    f90a:	80 e0       	ldi	r24, 0x00	; 0
    f90c:	30 e0       	ldi	r19, 0x00	; 0
    f90e:	82 2b       	or	r24, r18
    f910:	93 2b       	or	r25, r19
    f912:	81 87       	std	Z+9, r24	; 0x09
    f914:	92 87       	std	Z+10, r25	; 0x0a
    f916:	8f ef       	ldi	r24, 0xFF	; 255
    f918:	8d bf       	out	0x3d, r24	; 61
    f91a:	8f e3       	ldi	r24, 0x3F	; 63
    f91c:	8e bf       	out	0x3e, r24	; 62
    f91e:	c0 91 3d 00 	lds	r28, 0x003D
    f922:	d0 91 3e 00 	lds	r29, 0x003E
    f926:	e0 91 ab 22 	lds	r30, 0x22AB
    f92a:	f0 91 ac 22 	lds	r31, 0x22AC
    f92e:	06 80       	ldd	r0, Z+6	; 0x06
    f930:	f7 81       	ldd	r31, Z+7	; 0x07
    f932:	e0 2d       	mov	r30, r0
    f934:	01 90       	ld	r0, Z+
    f936:	f0 81       	ld	r31, Z
    f938:	e0 2d       	mov	r30, r0
    f93a:	e0 93 01 25 	sts	0x2501, r30
    f93e:	f0 93 02 25 	sts	0x2502, r31
    f942:	03 84       	ldd	r0, Z+11	; 0x0b
    f944:	f4 85       	ldd	r31, Z+12	; 0x0c
    f946:	e0 2d       	mov	r30, r0
    f948:	80 81       	ld	r24, Z
    f94a:	91 81       	ldd	r25, Z+1	; 0x01
    f94c:	8d 5a       	subi	r24, 0xAD	; 173
    f94e:	9e 4d       	sbci	r25, 0xDE	; 222
    f950:	11 f0       	breq	.+4      	; 0xf956 <arb_yieldFromWaitIntsOn+0xbe>
    f952:	0e 94 92 85 	call	0x10b24	; 0x10b24 <arb_stackOverflow>
    f956:	e0 91 01 25 	lds	r30, 0x2501
    f95a:	f0 91 02 25 	lds	r31, 0x2502
    f95e:	82 e0       	ldi	r24, 0x02	; 2
    f960:	81 83       	std	Z+1, r24	; 0x01
    f962:	80 91 ab 22 	lds	r24, 0x22AB
    f966:	90 91 ac 22 	lds	r25, 0x22AC
    f96a:	e0 91 ab 22 	lds	r30, 0x22AB
    f96e:	f0 91 ac 22 	lds	r31, 0x22AC
    f972:	66 81       	ldd	r22, Z+6	; 0x06
    f974:	77 81       	ldd	r23, Z+7	; 0x07
    f976:	0e 94 43 89 	call	0x11286	; 0x11286 <utl_removeLink>
    f97a:	80 93 03 25 	sts	0x2503, r24
    f97e:	e0 91 ff 24 	lds	r30, 0x24FF
    f982:	f0 91 00 25 	lds	r31, 0x2500
    f986:	83 81       	ldd	r24, Z+3	; 0x03
    f988:	94 81       	ldd	r25, Z+4	; 0x04
    f98a:	e0 91 ab 22 	lds	r30, 0x22AB
    f98e:	f0 91 ac 22 	lds	r31, 0x22AC
    f992:	66 81       	ldd	r22, Z+6	; 0x06
    f994:	77 81       	ldd	r23, Z+7	; 0x07
    f996:	41 e0       	ldi	r20, 0x01	; 1
    f998:	0e 94 c8 88 	call	0x11190	; 0x11190 <utl_insertLink>
    f99c:	80 93 03 25 	sts	0x2503, r24
    f9a0:	e0 91 c6 27 	lds	r30, 0x27C6
    f9a4:	f0 91 c7 27 	lds	r31, 0x27C7
    f9a8:	19 95       	eicall
    f9aa:	e0 91 ab 22 	lds	r30, 0x22AB
    f9ae:	f0 91 ac 22 	lds	r31, 0x22AC
    f9b2:	06 80       	ldd	r0, Z+6	; 0x06
    f9b4:	f7 81       	ldd	r31, Z+7	; 0x07
    f9b6:	e0 2d       	mov	r30, r0
    f9b8:	01 90       	ld	r0, Z+
    f9ba:	f0 81       	ld	r31, Z
    f9bc:	e0 2d       	mov	r30, r0
    f9be:	e0 93 c8 27 	sts	0x27C8, r30
    f9c2:	f0 93 c9 27 	sts	0x27C9, r31
    f9c6:	81 85       	ldd	r24, Z+9	; 0x09
    f9c8:	92 85       	ldd	r25, Z+10	; 0x0a
    f9ca:	8d bf       	out	0x3d, r24	; 61
    f9cc:	9e bf       	out	0x3e, r25	; 62
    f9ce:	ff 91       	pop	r31
    f9d0:	ef 91       	pop	r30
    f9d2:	df 91       	pop	r29
    f9d4:	cf 91       	pop	r28
    f9d6:	bf 91       	pop	r27
    f9d8:	af 91       	pop	r26
    f9da:	9f 91       	pop	r25
    f9dc:	8f 91       	pop	r24
    f9de:	7f 91       	pop	r23
    f9e0:	6f 91       	pop	r22
    f9e2:	5f 91       	pop	r21
    f9e4:	4f 91       	pop	r20
    f9e6:	3f 91       	pop	r19
    f9e8:	2f 91       	pop	r18
    f9ea:	1f 91       	pop	r17
    f9ec:	0f 91       	pop	r16
    f9ee:	ff 90       	pop	r15
    f9f0:	ef 90       	pop	r14
    f9f2:	df 90       	pop	r13
    f9f4:	cf 90       	pop	r12
    f9f6:	bf 90       	pop	r11
    f9f8:	af 90       	pop	r10
    f9fa:	9f 90       	pop	r9
    f9fc:	8f 90       	pop	r8
    f9fe:	7f 90       	pop	r7
    fa00:	6f 90       	pop	r6
    fa02:	5f 90       	pop	r5
    fa04:	4f 90       	pop	r4
    fa06:	3f 90       	pop	r3
    fa08:	2f 90       	pop	r2
    fa0a:	1f 90       	pop	r1
    fa0c:	0f 90       	pop	r0
    fa0e:	0f be       	out	0x3f, r0	; 63
    fa10:	0f 90       	pop	r0
    fa12:	08 95       	ret

0000fa14 <arb_yieldFromWaitIntsOff>:
    fa14:	0f 92       	push	r0
    fa16:	0f b6       	in	r0, 0x3f	; 63
    fa18:	0f 92       	push	r0
    fa1a:	1f 92       	push	r1
    fa1c:	11 24       	eor	r1, r1
    fa1e:	2f 92       	push	r2
    fa20:	3f 92       	push	r3
    fa22:	4f 92       	push	r4
    fa24:	5f 92       	push	r5
    fa26:	6f 92       	push	r6
    fa28:	7f 92       	push	r7
    fa2a:	8f 92       	push	r8
    fa2c:	9f 92       	push	r9
    fa2e:	af 92       	push	r10
    fa30:	bf 92       	push	r11
    fa32:	cf 92       	push	r12
    fa34:	df 92       	push	r13
    fa36:	ef 92       	push	r14
    fa38:	ff 92       	push	r15
    fa3a:	0f 93       	push	r16
    fa3c:	1f 93       	push	r17
    fa3e:	2f 93       	push	r18
    fa40:	3f 93       	push	r19
    fa42:	4f 93       	push	r20
    fa44:	5f 93       	push	r21
    fa46:	6f 93       	push	r22
    fa48:	7f 93       	push	r23
    fa4a:	8f 93       	push	r24
    fa4c:	9f 93       	push	r25
    fa4e:	af 93       	push	r26
    fa50:	bf 93       	push	r27
    fa52:	cf 93       	push	r28
    fa54:	df 93       	push	r29
    fa56:	ef 93       	push	r30
    fa58:	ff 93       	push	r31
    fa5a:	e0 91 ab 22 	lds	r30, 0x22AB
    fa5e:	f0 91 ac 22 	lds	r31, 0x22AC
    fa62:	06 80       	ldd	r0, Z+6	; 0x06
    fa64:	f7 81       	ldd	r31, Z+7	; 0x07
    fa66:	e0 2d       	mov	r30, r0
    fa68:	01 90       	ld	r0, Z+
    fa6a:	f0 81       	ld	r31, Z
    fa6c:	e0 2d       	mov	r30, r0
    fa6e:	e0 93 c8 27 	sts	0x27C8, r30
    fa72:	f0 93 c9 27 	sts	0x27C9, r31
    fa76:	2d b7       	in	r18, 0x3d	; 61
    fa78:	4e b7       	in	r20, 0x3e	; 62
    fa7a:	94 2f       	mov	r25, r20
    fa7c:	80 e0       	ldi	r24, 0x00	; 0
    fa7e:	30 e0       	ldi	r19, 0x00	; 0
    fa80:	82 2b       	or	r24, r18
    fa82:	93 2b       	or	r25, r19
    fa84:	81 87       	std	Z+9, r24	; 0x09
    fa86:	92 87       	std	Z+10, r25	; 0x0a
    fa88:	8f ef       	ldi	r24, 0xFF	; 255
    fa8a:	8d bf       	out	0x3d, r24	; 61
    fa8c:	8f e3       	ldi	r24, 0x3F	; 63
    fa8e:	8e bf       	out	0x3e, r24	; 62
    fa90:	c0 91 3d 00 	lds	r28, 0x003D
    fa94:	d0 91 3e 00 	lds	r29, 0x003E
    fa98:	e0 91 ab 22 	lds	r30, 0x22AB
    fa9c:	f0 91 ac 22 	lds	r31, 0x22AC
    faa0:	06 80       	ldd	r0, Z+6	; 0x06
    faa2:	f7 81       	ldd	r31, Z+7	; 0x07
    faa4:	e0 2d       	mov	r30, r0
    faa6:	01 90       	ld	r0, Z+
    faa8:	f0 81       	ld	r31, Z
    faaa:	e0 2d       	mov	r30, r0
    faac:	e0 93 01 25 	sts	0x2501, r30
    fab0:	f0 93 02 25 	sts	0x2502, r31
    fab4:	03 84       	ldd	r0, Z+11	; 0x0b
    fab6:	f4 85       	ldd	r31, Z+12	; 0x0c
    fab8:	e0 2d       	mov	r30, r0
    faba:	80 81       	ld	r24, Z
    fabc:	91 81       	ldd	r25, Z+1	; 0x01
    fabe:	8d 5a       	subi	r24, 0xAD	; 173
    fac0:	9e 4d       	sbci	r25, 0xDE	; 222
    fac2:	11 f0       	breq	.+4      	; 0xfac8 <arb_yieldFromWaitIntsOff+0xb4>
    fac4:	0e 94 92 85 	call	0x10b24	; 0x10b24 <arb_stackOverflow>
    fac8:	e0 91 01 25 	lds	r30, 0x2501
    facc:	f0 91 02 25 	lds	r31, 0x2502
    fad0:	82 e0       	ldi	r24, 0x02	; 2
    fad2:	81 83       	std	Z+1, r24	; 0x01
    fad4:	80 91 ab 22 	lds	r24, 0x22AB
    fad8:	90 91 ac 22 	lds	r25, 0x22AC
    fadc:	e0 91 ab 22 	lds	r30, 0x22AB
    fae0:	f0 91 ac 22 	lds	r31, 0x22AC
    fae4:	66 81       	ldd	r22, Z+6	; 0x06
    fae6:	77 81       	ldd	r23, Z+7	; 0x07
    fae8:	0e 94 43 89 	call	0x11286	; 0x11286 <utl_removeLink>
    faec:	80 93 03 25 	sts	0x2503, r24
    faf0:	e0 91 ff 24 	lds	r30, 0x24FF
    faf4:	f0 91 00 25 	lds	r31, 0x2500
    faf8:	83 81       	ldd	r24, Z+3	; 0x03
    fafa:	94 81       	ldd	r25, Z+4	; 0x04
    fafc:	e0 91 ab 22 	lds	r30, 0x22AB
    fb00:	f0 91 ac 22 	lds	r31, 0x22AC
    fb04:	66 81       	ldd	r22, Z+6	; 0x06
    fb06:	77 81       	ldd	r23, Z+7	; 0x07
    fb08:	41 e0       	ldi	r20, 0x01	; 1
    fb0a:	0e 94 c8 88 	call	0x11190	; 0x11190 <utl_insertLink>
    fb0e:	80 93 03 25 	sts	0x2503, r24
    fb12:	e0 91 c6 27 	lds	r30, 0x27C6
    fb16:	f0 91 c7 27 	lds	r31, 0x27C7
    fb1a:	19 95       	eicall
    fb1c:	e0 91 ab 22 	lds	r30, 0x22AB
    fb20:	f0 91 ac 22 	lds	r31, 0x22AC
    fb24:	06 80       	ldd	r0, Z+6	; 0x06
    fb26:	f7 81       	ldd	r31, Z+7	; 0x07
    fb28:	e0 2d       	mov	r30, r0
    fb2a:	01 90       	ld	r0, Z+
    fb2c:	f0 81       	ld	r31, Z
    fb2e:	e0 2d       	mov	r30, r0
    fb30:	e0 93 c8 27 	sts	0x27C8, r30
    fb34:	f0 93 c9 27 	sts	0x27C9, r31
    fb38:	81 85       	ldd	r24, Z+9	; 0x09
    fb3a:	92 85       	ldd	r25, Z+10	; 0x0a
    fb3c:	8d bf       	out	0x3d, r24	; 61
    fb3e:	9e bf       	out	0x3e, r25	; 62
    fb40:	ff 91       	pop	r31
    fb42:	ef 91       	pop	r30
    fb44:	df 91       	pop	r29
    fb46:	cf 91       	pop	r28
    fb48:	bf 91       	pop	r27
    fb4a:	af 91       	pop	r26
    fb4c:	9f 91       	pop	r25
    fb4e:	8f 91       	pop	r24
    fb50:	7f 91       	pop	r23
    fb52:	6f 91       	pop	r22
    fb54:	5f 91       	pop	r21
    fb56:	4f 91       	pop	r20
    fb58:	3f 91       	pop	r19
    fb5a:	2f 91       	pop	r18
    fb5c:	1f 91       	pop	r17
    fb5e:	0f 91       	pop	r16
    fb60:	ff 90       	pop	r15
    fb62:	ef 90       	pop	r14
    fb64:	df 90       	pop	r13
    fb66:	cf 90       	pop	r12
    fb68:	bf 90       	pop	r11
    fb6a:	af 90       	pop	r10
    fb6c:	9f 90       	pop	r9
    fb6e:	8f 90       	pop	r8
    fb70:	7f 90       	pop	r7
    fb72:	6f 90       	pop	r6
    fb74:	5f 90       	pop	r5
    fb76:	4f 90       	pop	r4
    fb78:	3f 90       	pop	r3
    fb7a:	2f 90       	pop	r2
    fb7c:	1f 90       	pop	r1
    fb7e:	0f 90       	pop	r0
    fb80:	0f be       	out	0x3f, r0	; 63
    fb82:	0f 90       	pop	r0
    fb84:	08 95       	ret

0000fb86 <arb_wait>:
    fb86:	df 93       	push	r29
    fb88:	cf 93       	push	r28
    fb8a:	0f 92       	push	r0
    fb8c:	0f 92       	push	r0
    fb8e:	cd b7       	in	r28, 0x3d	; 61
    fb90:	de b7       	in	r29, 0x3e	; 62
    fb92:	89 83       	std	Y+1, r24	; 0x01
    fb94:	9a 83       	std	Y+2, r25	; 0x02
    fb96:	0f b6       	in	r0, 0x3f	; 63
    fb98:	07 fe       	sbrs	r0, 7
    fb9a:	33 c0       	rjmp	.+102    	; 0xfc02 <arb_wait+0x7c>
    fb9c:	f8 94       	cli
    fb9e:	e9 81       	ldd	r30, Y+1	; 0x01
    fba0:	fa 81       	ldd	r31, Y+2	; 0x02
    fba2:	20 91 9c 22 	lds	r18, 0x229C
    fba6:	30 91 9d 22 	lds	r19, 0x229D
    fbaa:	84 81       	ldd	r24, Z+4	; 0x04
    fbac:	95 81       	ldd	r25, Z+5	; 0x05
    fbae:	82 17       	cp	r24, r18
    fbb0:	93 07       	cpc	r25, r19
    fbb2:	11 f0       	breq	.+4      	; 0xfbb8 <arb_wait+0x32>
    fbb4:	78 94       	sei
    fbb6:	30 c0       	rjmp	.+96     	; 0xfc18 <arb_wait+0x92>
    fbb8:	e9 81       	ldd	r30, Y+1	; 0x01
    fbba:	fa 81       	ldd	r31, Y+2	; 0x02
    fbbc:	01 90       	ld	r0, Z+
    fbbe:	f0 81       	ld	r31, Z
    fbc0:	e0 2d       	mov	r30, r0
    fbc2:	e0 93 ff 24 	sts	0x24FF, r30
    fbc6:	f0 93 00 25 	sts	0x2500, r31
    fbca:	81 81       	ldd	r24, Z+1	; 0x01
    fbcc:	92 81       	ldd	r25, Z+2	; 0x02
    fbce:	66 23       	and	r22, r22
    fbd0:	71 f4       	brne	.+28     	; 0xfbee <arb_wait+0x68>
    fbd2:	01 97       	sbiw	r24, 0x01	; 1
    fbd4:	81 83       	std	Z+1, r24	; 0x01
    fbd6:	92 83       	std	Z+2, r25	; 0x02
    fbd8:	97 ff       	sbrs	r25, 7
    fbda:	07 c0       	rjmp	.+14     	; 0xfbea <arb_wait+0x64>
    fbdc:	80 91 ab 22 	lds	r24, 0x22AB
    fbe0:	90 91 ac 22 	lds	r25, 0x22AC
    fbe4:	0e 94 4c 7c 	call	0xf898	; 0xf898 <arb_yieldFromWaitIntsOn>
    fbe8:	3a c0       	rjmp	.+116    	; 0xfc5e <arb_wait+0xd8>
    fbea:	78 94       	sei
    fbec:	38 c0       	rjmp	.+112    	; 0xfc5e <arb_wait+0xd8>
    fbee:	18 16       	cp	r1, r24
    fbf0:	19 06       	cpc	r1, r25
    fbf2:	2c f4       	brge	.+10     	; 0xfbfe <arb_wait+0x78>
    fbf4:	01 97       	sbiw	r24, 0x01	; 1
    fbf6:	81 83       	std	Z+1, r24	; 0x01
    fbf8:	92 83       	std	Z+2, r25	; 0x02
    fbfa:	78 94       	sei
    fbfc:	30 c0       	rjmp	.+96     	; 0xfc5e <arb_wait+0xd8>
    fbfe:	78 94       	sei
    fc00:	29 c0       	rjmp	.+82     	; 0xfc54 <arb_wait+0xce>
    fc02:	e9 81       	ldd	r30, Y+1	; 0x01
    fc04:	fa 81       	ldd	r31, Y+2	; 0x02
    fc06:	20 91 9c 22 	lds	r18, 0x229C
    fc0a:	30 91 9d 22 	lds	r19, 0x229D
    fc0e:	84 81       	ldd	r24, Z+4	; 0x04
    fc10:	95 81       	ldd	r25, Z+5	; 0x05
    fc12:	82 17       	cp	r24, r18
    fc14:	93 07       	cpc	r25, r19
    fc16:	11 f0       	breq	.+4      	; 0xfc1c <arb_wait+0x96>
    fc18:	89 ef       	ldi	r24, 0xF9	; 249
    fc1a:	22 c0       	rjmp	.+68     	; 0xfc60 <arb_wait+0xda>
    fc1c:	e9 81       	ldd	r30, Y+1	; 0x01
    fc1e:	fa 81       	ldd	r31, Y+2	; 0x02
    fc20:	01 90       	ld	r0, Z+
    fc22:	f0 81       	ld	r31, Z
    fc24:	e0 2d       	mov	r30, r0
    fc26:	e0 93 ff 24 	sts	0x24FF, r30
    fc2a:	f0 93 00 25 	sts	0x2500, r31
    fc2e:	81 81       	ldd	r24, Z+1	; 0x01
    fc30:	92 81       	ldd	r25, Z+2	; 0x02
    fc32:	66 23       	and	r22, r22
    fc34:	61 f4       	brne	.+24     	; 0xfc4e <arb_wait+0xc8>
    fc36:	01 97       	sbiw	r24, 0x01	; 1
    fc38:	81 83       	std	Z+1, r24	; 0x01
    fc3a:	92 83       	std	Z+2, r25	; 0x02
    fc3c:	97 ff       	sbrs	r25, 7
    fc3e:	0f c0       	rjmp	.+30     	; 0xfc5e <arb_wait+0xd8>
    fc40:	80 91 ab 22 	lds	r24, 0x22AB
    fc44:	90 91 ac 22 	lds	r25, 0x22AC
    fc48:	0e 94 0a 7d 	call	0xfa14	; 0xfa14 <arb_yieldFromWaitIntsOff>
    fc4c:	08 c0       	rjmp	.+16     	; 0xfc5e <arb_wait+0xd8>
    fc4e:	18 16       	cp	r1, r24
    fc50:	19 06       	cpc	r1, r25
    fc52:	14 f0       	brlt	.+4      	; 0xfc58 <arb_wait+0xd2>
    fc54:	83 ef       	ldi	r24, 0xF3	; 243
    fc56:	04 c0       	rjmp	.+8      	; 0xfc60 <arb_wait+0xda>
    fc58:	01 97       	sbiw	r24, 0x01	; 1
    fc5a:	81 83       	std	Z+1, r24	; 0x01
    fc5c:	92 83       	std	Z+2, r25	; 0x02
    fc5e:	80 e0       	ldi	r24, 0x00	; 0
    fc60:	0f 90       	pop	r0
    fc62:	0f 90       	pop	r0
    fc64:	cf 91       	pop	r28
    fc66:	df 91       	pop	r29
    fc68:	08 95       	ret

0000fc6a <updateSystemTime>:
    fc6a:	cf 92       	push	r12
    fc6c:	df 92       	push	r13
    fc6e:	ef 92       	push	r14
    fc70:	ff 92       	push	r15
    fc72:	0f 93       	push	r16
    fc74:	1f 93       	push	r17
    fc76:	80 91 0c 25 	lds	r24, 0x250C
    fc7a:	30 91 0d 25 	lds	r19, 0x250D
    fc7e:	40 91 0e 25 	lds	r20, 0x250E
    fc82:	60 91 0f 25 	lds	r22, 0x250F
    fc86:	70 91 10 25 	lds	r23, 0x2510
    fc8a:	f0 91 11 25 	lds	r31, 0x2511
    fc8e:	a0 91 12 25 	lds	r26, 0x2512
    fc92:	00 91 13 25 	lds	r16, 0x2513
    fc96:	b8 2f       	mov	r27, r24
    fc98:	b9 57       	subi	r27, 0x79	; 121
    fc9a:	91 e0       	ldi	r25, 0x01	; 1
    fc9c:	b8 17       	cp	r27, r24
    fc9e:	08 f0       	brcs	.+2      	; 0xfca2 <updateSystemTime+0x38>
    fca0:	90 e0       	ldi	r25, 0x00	; 0
    fca2:	83 2f       	mov	r24, r19
    fca4:	8d 5e       	subi	r24, 0xED	; 237
    fca6:	21 e0       	ldi	r18, 0x01	; 1
    fca8:	83 17       	cp	r24, r19
    fcaa:	08 f0       	brcs	.+2      	; 0xfcae <updateSystemTime+0x44>
    fcac:	20 e0       	ldi	r18, 0x00	; 0
    fcae:	e9 2f       	mov	r30, r25
    fcb0:	e8 0f       	add	r30, r24
    fcb2:	91 e0       	ldi	r25, 0x01	; 1
    fcb4:	e8 17       	cp	r30, r24
    fcb6:	08 f0       	brcs	.+2      	; 0xfcba <updateSystemTime+0x50>
    fcb8:	90 e0       	ldi	r25, 0x00	; 0
    fcba:	92 2b       	or	r25, r18
    fcbc:	94 0f       	add	r25, r20
    fcbe:	81 e0       	ldi	r24, 0x01	; 1
    fcc0:	94 17       	cp	r25, r20
    fcc2:	08 f0       	brcs	.+2      	; 0xfcc6 <updateSystemTime+0x5c>
    fcc4:	80 e0       	ldi	r24, 0x00	; 0
    fcc6:	58 2f       	mov	r21, r24
    fcc8:	56 0f       	add	r21, r22
    fcca:	81 e0       	ldi	r24, 0x01	; 1
    fccc:	56 17       	cp	r21, r22
    fcce:	08 f0       	brcs	.+2      	; 0xfcd2 <updateSystemTime+0x68>
    fcd0:	80 e0       	ldi	r24, 0x00	; 0
    fcd2:	48 2f       	mov	r20, r24
    fcd4:	47 0f       	add	r20, r23
    fcd6:	81 e0       	ldi	r24, 0x01	; 1
    fcd8:	47 17       	cp	r20, r23
    fcda:	08 f0       	brcs	.+2      	; 0xfcde <updateSystemTime+0x74>
    fcdc:	80 e0       	ldi	r24, 0x00	; 0
    fcde:	38 2f       	mov	r19, r24
    fce0:	3f 0f       	add	r19, r31
    fce2:	81 e0       	ldi	r24, 0x01	; 1
    fce4:	3f 17       	cp	r19, r31
    fce6:	08 f0       	brcs	.+2      	; 0xfcea <updateSystemTime+0x80>
    fce8:	80 e0       	ldi	r24, 0x00	; 0
    fcea:	28 2f       	mov	r18, r24
    fcec:	2a 0f       	add	r18, r26
    fcee:	81 e0       	ldi	r24, 0x01	; 1
    fcf0:	2a 17       	cp	r18, r26
    fcf2:	08 f0       	brcs	.+2      	; 0xfcf6 <updateSystemTime+0x8c>
    fcf4:	80 e0       	ldi	r24, 0x00	; 0
    fcf6:	80 0f       	add	r24, r16
    fcf8:	b0 93 0c 25 	sts	0x250C, r27
    fcfc:	e0 93 0d 25 	sts	0x250D, r30
    fd00:	90 93 0e 25 	sts	0x250E, r25
    fd04:	50 93 0f 25 	sts	0x250F, r21
    fd08:	40 93 10 25 	sts	0x2510, r20
    fd0c:	30 93 11 25 	sts	0x2511, r19
    fd10:	20 93 12 25 	sts	0x2512, r18
    fd14:	80 93 13 25 	sts	0x2513, r24
    fd18:	60 91 19 25 	lds	r22, 0x2519
    fd1c:	70 91 1a 25 	lds	r23, 0x251A
    fd20:	80 91 1b 25 	lds	r24, 0x251B
    fd24:	90 91 1c 25 	lds	r25, 0x251C
    fd28:	0e 94 a5 ac 	call	0x1594a	; 0x1594a <__floatunsisf>
    fd2c:	20 e0       	ldi	r18, 0x00	; 0
    fd2e:	30 e4       	ldi	r19, 0x40	; 64
    fd30:	4c e1       	ldi	r20, 0x1C	; 28
    fd32:	56 e4       	ldi	r21, 0x46	; 70
    fd34:	0e 94 05 ab 	call	0x1560a	; 0x1560a <__addsf3>
    fd38:	0e 94 79 ac 	call	0x158f2	; 0x158f2 <__fixunssfsi>
    fd3c:	6b 01       	movw	r12, r22
    fd3e:	7c 01       	movw	r14, r24
    fd40:	60 93 19 25 	sts	0x2519, r22
    fd44:	70 93 1a 25 	sts	0x251A, r23
    fd48:	80 93 1b 25 	sts	0x251B, r24
    fd4c:	90 93 1c 25 	sts	0x251C, r25
    fd50:	04 e0       	ldi	r16, 0x04	; 4
    fd52:	15 e2       	ldi	r17, 0x25	; 37
    fd54:	20 91 04 25 	lds	r18, 0x2504
    fd58:	30 91 05 25 	lds	r19, 0x2505
    fd5c:	40 91 06 25 	lds	r20, 0x2506
    fd60:	50 91 07 25 	lds	r21, 0x2507
    fd64:	60 91 08 25 	lds	r22, 0x2508
    fd68:	70 91 09 25 	lds	r23, 0x2509
    fd6c:	80 91 0a 25 	lds	r24, 0x250A
    fd70:	90 91 0b 25 	lds	r25, 0x250B
    fd74:	0e 94 e2 ac 	call	0x159c4	; 0x159c4 <__floatundisf>
    fd78:	20 e0       	ldi	r18, 0x00	; 0
    fd7a:	30 e0       	ldi	r19, 0x00	; 0
    fd7c:	40 e2       	ldi	r20, 0x20	; 32
    fd7e:	51 e4       	ldi	r21, 0x41	; 65
    fd80:	0e 94 05 ab 	call	0x1560a	; 0x1560a <__addsf3>
    fd84:	0e 94 3f ac 	call	0x1587e	; 0x1587e <__fixunssfdi>
    fd88:	20 93 04 25 	sts	0x2504, r18
    fd8c:	f8 01       	movw	r30, r16
    fd8e:	31 83       	std	Z+1, r19	; 0x01
    fd90:	42 83       	std	Z+2, r20	; 0x02
    fd92:	53 83       	std	Z+3, r21	; 0x03
    fd94:	64 83       	std	Z+4, r22	; 0x04
    fd96:	75 83       	std	Z+5, r23	; 0x05
    fd98:	86 83       	std	Z+6, r24	; 0x06
    fd9a:	97 83       	std	Z+7, r25	; 0x07
    fd9c:	99 23       	and	r25, r25
    fd9e:	a9 f4       	brne	.+42     	; 0xfdca <updateSystemTime+0x160>
    fda0:	88 23       	and	r24, r24
    fda2:	99 f4       	brne	.+38     	; 0xfdca <updateSystemTime+0x160>
    fda4:	77 23       	and	r23, r23
    fda6:	89 f4       	brne	.+34     	; 0xfdca <updateSystemTime+0x160>
    fda8:	66 23       	and	r22, r22
    fdaa:	79 f4       	brne	.+30     	; 0xfdca <updateSystemTime+0x160>
    fdac:	55 23       	and	r21, r21
    fdae:	69 f4       	brne	.+26     	; 0xfdca <updateSystemTime+0x160>
    fdb0:	47 33       	cpi	r20, 0x37	; 55
    fdb2:	58 f4       	brcc	.+22     	; 0xfdca <updateSystemTime+0x160>
    fdb4:	46 33       	cpi	r20, 0x36	; 54
    fdb6:	09 f0       	breq	.+2      	; 0xfdba <updateSystemTime+0x150>
    fdb8:	6c c0       	rjmp	.+216    	; 0xfe92 <updateSystemTime+0x228>
    fdba:	3f 3e       	cpi	r19, 0xEF	; 239
    fdbc:	30 f4       	brcc	.+12     	; 0xfdca <updateSystemTime+0x160>
    fdbe:	3e 3e       	cpi	r19, 0xEE	; 238
    fdc0:	09 f0       	breq	.+2      	; 0xfdc4 <updateSystemTime+0x15a>
    fdc2:	67 c0       	rjmp	.+206    	; 0xfe92 <updateSystemTime+0x228>
    fdc4:	20 38       	cpi	r18, 0x80	; 128
    fdc6:	08 f4       	brcc	.+2      	; 0xfdca <updateSystemTime+0x160>
    fdc8:	64 c0       	rjmp	.+200    	; 0xfe92 <updateSystemTime+0x228>
    fdca:	02 2f       	mov	r16, r18
    fdcc:	00 58       	subi	r16, 0x80	; 128
    fdce:	f1 e0       	ldi	r31, 0x01	; 1
    fdd0:	02 17       	cp	r16, r18
    fdd2:	08 f0       	brcs	.+2      	; 0xfdd6 <updateSystemTime+0x16c>
    fdd4:	f0 e0       	ldi	r31, 0x00	; 0
    fdd6:	23 2f       	mov	r18, r19
    fdd8:	2f 5e       	subi	r18, 0xEF	; 239
    fdda:	e1 e0       	ldi	r30, 0x01	; 1
    fddc:	23 17       	cp	r18, r19
    fdde:	08 f0       	brcs	.+2      	; 0xfde2 <updateSystemTime+0x178>
    fde0:	e0 e0       	ldi	r30, 0x00	; 0
    fde2:	bf 2f       	mov	r27, r31
    fde4:	b2 0f       	add	r27, r18
    fde6:	31 e0       	ldi	r19, 0x01	; 1
    fde8:	b2 17       	cp	r27, r18
    fdea:	08 f0       	brcs	.+2      	; 0xfdee <updateSystemTime+0x184>
    fdec:	30 e0       	ldi	r19, 0x00	; 0
    fdee:	e3 2b       	or	r30, r19
    fdf0:	24 2f       	mov	r18, r20
    fdf2:	27 53       	subi	r18, 0x37	; 55
    fdf4:	f1 e0       	ldi	r31, 0x01	; 1
    fdf6:	24 17       	cp	r18, r20
    fdf8:	08 f0       	brcs	.+2      	; 0xfdfc <updateSystemTime+0x192>
    fdfa:	f0 e0       	ldi	r31, 0x00	; 0
    fdfc:	ae 2f       	mov	r26, r30
    fdfe:	a2 0f       	add	r26, r18
    fe00:	31 e0       	ldi	r19, 0x01	; 1
    fe02:	a2 17       	cp	r26, r18
    fe04:	08 f0       	brcs	.+2      	; 0xfe08 <updateSystemTime+0x19e>
    fe06:	30 e0       	ldi	r19, 0x00	; 0
    fe08:	f3 2b       	or	r31, r19
    fe0a:	25 2f       	mov	r18, r21
    fe0c:	21 50       	subi	r18, 0x01	; 1
    fe0e:	41 e0       	ldi	r20, 0x01	; 1
    fe10:	25 17       	cp	r18, r21
    fe12:	08 f0       	brcs	.+2      	; 0xfe16 <updateSystemTime+0x1ac>
    fe14:	40 e0       	ldi	r20, 0x00	; 0
    fe16:	ef 2f       	mov	r30, r31
    fe18:	e2 0f       	add	r30, r18
    fe1a:	31 e0       	ldi	r19, 0x01	; 1
    fe1c:	e2 17       	cp	r30, r18
    fe1e:	08 f0       	brcs	.+2      	; 0xfe22 <updateSystemTime+0x1b8>
    fe20:	30 e0       	ldi	r19, 0x00	; 0
    fe22:	43 2b       	or	r20, r19
    fe24:	26 2f       	mov	r18, r22
    fe26:	21 50       	subi	r18, 0x01	; 1
    fe28:	51 e0       	ldi	r21, 0x01	; 1
    fe2a:	26 17       	cp	r18, r22
    fe2c:	08 f0       	brcs	.+2      	; 0xfe30 <updateSystemTime+0x1c6>
    fe2e:	50 e0       	ldi	r21, 0x00	; 0
    fe30:	64 2f       	mov	r22, r20
    fe32:	62 0f       	add	r22, r18
    fe34:	31 e0       	ldi	r19, 0x01	; 1
    fe36:	62 17       	cp	r22, r18
    fe38:	08 f0       	brcs	.+2      	; 0xfe3c <updateSystemTime+0x1d2>
    fe3a:	30 e0       	ldi	r19, 0x00	; 0
    fe3c:	53 2b       	or	r21, r19
    fe3e:	27 2f       	mov	r18, r23
    fe40:	21 50       	subi	r18, 0x01	; 1
    fe42:	41 e0       	ldi	r20, 0x01	; 1
    fe44:	27 17       	cp	r18, r23
    fe46:	08 f0       	brcs	.+2      	; 0xfe4a <updateSystemTime+0x1e0>
    fe48:	40 e0       	ldi	r20, 0x00	; 0
    fe4a:	52 0f       	add	r21, r18
    fe4c:	31 e0       	ldi	r19, 0x01	; 1
    fe4e:	52 17       	cp	r21, r18
    fe50:	08 f0       	brcs	.+2      	; 0xfe54 <updateSystemTime+0x1ea>
    fe52:	30 e0       	ldi	r19, 0x00	; 0
    fe54:	43 2b       	or	r20, r19
    fe56:	28 2f       	mov	r18, r24
    fe58:	21 50       	subi	r18, 0x01	; 1
    fe5a:	31 e0       	ldi	r19, 0x01	; 1
    fe5c:	28 17       	cp	r18, r24
    fe5e:	08 f0       	brcs	.+2      	; 0xfe62 <updateSystemTime+0x1f8>
    fe60:	30 e0       	ldi	r19, 0x00	; 0
    fe62:	42 0f       	add	r20, r18
    fe64:	81 e0       	ldi	r24, 0x01	; 1
    fe66:	42 17       	cp	r20, r18
    fe68:	08 f0       	brcs	.+2      	; 0xfe6c <updateSystemTime+0x202>
    fe6a:	80 e0       	ldi	r24, 0x00	; 0
    fe6c:	38 2b       	or	r19, r24
    fe6e:	91 50       	subi	r25, 0x01	; 1
    fe70:	39 0f       	add	r19, r25
    fe72:	00 93 04 25 	sts	0x2504, r16
    fe76:	b0 93 05 25 	sts	0x2505, r27
    fe7a:	a0 93 06 25 	sts	0x2506, r26
    fe7e:	e0 93 07 25 	sts	0x2507, r30
    fe82:	60 93 08 25 	sts	0x2508, r22
    fe86:	50 93 09 25 	sts	0x2509, r21
    fe8a:	40 93 0a 25 	sts	0x250A, r20
    fe8e:	30 93 0b 25 	sts	0x250B, r19
    fe92:	f0 e4       	ldi	r31, 0x40	; 64
    fe94:	cf 16       	cp	r12, r31
    fe96:	f2 e4       	ldi	r31, 0x42	; 66
    fe98:	df 06       	cpc	r13, r31
    fe9a:	ff e0       	ldi	r31, 0x0F	; 15
    fe9c:	ef 06       	cpc	r14, r31
    fe9e:	f0 e0       	ldi	r31, 0x00	; 0
    fea0:	ff 06       	cpc	r15, r31
    fea2:	90 f1       	brcs	.+100    	; 0xff08 <updateSystemTime+0x29e>
    fea4:	d7 01       	movw	r26, r14
    fea6:	c6 01       	movw	r24, r12
    fea8:	80 54       	subi	r24, 0x40	; 64
    feaa:	92 44       	sbci	r25, 0x42	; 66
    feac:	af 40       	sbci	r26, 0x0F	; 15
    feae:	b0 40       	sbci	r27, 0x00	; 0
    feb0:	80 93 19 25 	sts	0x2519, r24
    feb4:	90 93 1a 25 	sts	0x251A, r25
    feb8:	a0 93 1b 25 	sts	0x251B, r26
    febc:	b0 93 1c 25 	sts	0x251C, r27
    fec0:	80 91 18 25 	lds	r24, 0x2518
    fec4:	8f 5f       	subi	r24, 0xFF	; 255
    fec6:	80 93 18 25 	sts	0x2518, r24
    feca:	8c 33       	cpi	r24, 0x3C	; 60
    fecc:	e9 f4       	brne	.+58     	; 0xff08 <updateSystemTime+0x29e>
    fece:	10 92 18 25 	sts	0x2518, r1
    fed2:	80 91 17 25 	lds	r24, 0x2517
    fed6:	8f 5f       	subi	r24, 0xFF	; 255
    fed8:	80 93 17 25 	sts	0x2517, r24
    fedc:	8c 33       	cpi	r24, 0x3C	; 60
    fede:	a1 f4       	brne	.+40     	; 0xff08 <updateSystemTime+0x29e>
    fee0:	10 92 17 25 	sts	0x2517, r1
    fee4:	80 91 16 25 	lds	r24, 0x2516
    fee8:	8f 5f       	subi	r24, 0xFF	; 255
    feea:	80 93 16 25 	sts	0x2516, r24
    feee:	88 31       	cpi	r24, 0x18	; 24
    fef0:	59 f4       	brne	.+22     	; 0xff08 <updateSystemTime+0x29e>
    fef2:	10 92 16 25 	sts	0x2516, r1
    fef6:	80 91 14 25 	lds	r24, 0x2514
    fefa:	90 91 15 25 	lds	r25, 0x2515
    fefe:	01 96       	adiw	r24, 0x01	; 1
    ff00:	80 93 14 25 	sts	0x2514, r24
    ff04:	90 93 15 25 	sts	0x2515, r25
    ff08:	1f 91       	pop	r17
    ff0a:	0f 91       	pop	r16
    ff0c:	ff 90       	pop	r15
    ff0e:	ef 90       	pop	r14
    ff10:	df 90       	pop	r13
    ff12:	cf 90       	pop	r12
    ff14:	08 95       	ret

0000ff16 <arb_sysMsecNow>:
    ff16:	20 91 04 25 	lds	r18, 0x2504
    ff1a:	30 91 05 25 	lds	r19, 0x2505
    ff1e:	40 91 06 25 	lds	r20, 0x2506
    ff22:	50 91 07 25 	lds	r21, 0x2507
    ff26:	60 91 08 25 	lds	r22, 0x2508
    ff2a:	70 91 09 25 	lds	r23, 0x2509
    ff2e:	80 91 0a 25 	lds	r24, 0x250A
    ff32:	90 91 0b 25 	lds	r25, 0x250B
    ff36:	08 95       	ret

0000ff38 <arb_sysMsecDelta>:
    ff38:	af 92       	push	r10
    ff3a:	bf 92       	push	r11
    ff3c:	cf 92       	push	r12
    ff3e:	df 92       	push	r13
    ff40:	ef 92       	push	r14
    ff42:	ff 92       	push	r15
    ff44:	0f 93       	push	r16
    ff46:	1f 93       	push	r17
    ff48:	e2 2f       	mov	r30, r18
    ff4a:	ea 19       	sub	r30, r10
    ff4c:	ae 2e       	mov	r10, r30
    ff4e:	f1 e0       	ldi	r31, 0x01	; 1
    ff50:	2e 17       	cp	r18, r30
    ff52:	08 f0       	brcs	.+2      	; 0xff56 <arb_sysMsecDelta+0x1e>
    ff54:	f0 e0       	ldi	r31, 0x00	; 0
    ff56:	23 2f       	mov	r18, r19
    ff58:	2b 19       	sub	r18, r11
    ff5a:	b2 2e       	mov	r11, r18
    ff5c:	e1 e0       	ldi	r30, 0x01	; 1
    ff5e:	32 17       	cp	r19, r18
    ff60:	08 f0       	brcs	.+2      	; 0xff64 <arb_sysMsecDelta+0x2c>
    ff62:	e0 e0       	ldi	r30, 0x00	; 0
    ff64:	bb 2d       	mov	r27, r11
    ff66:	bf 1b       	sub	r27, r31
    ff68:	21 e0       	ldi	r18, 0x01	; 1
    ff6a:	bb 16       	cp	r11, r27
    ff6c:	08 f0       	brcs	.+2      	; 0xff70 <arb_sysMsecDelta+0x38>
    ff6e:	20 e0       	ldi	r18, 0x00	; 0
    ff70:	e2 2b       	or	r30, r18
    ff72:	24 2f       	mov	r18, r20
    ff74:	2c 19       	sub	r18, r12
    ff76:	c2 2e       	mov	r12, r18
    ff78:	31 e0       	ldi	r19, 0x01	; 1
    ff7a:	42 17       	cp	r20, r18
    ff7c:	08 f0       	brcs	.+2      	; 0xff80 <arb_sysMsecDelta+0x48>
    ff7e:	30 e0       	ldi	r19, 0x00	; 0
    ff80:	bc 2c       	mov	r11, r12
    ff82:	be 1a       	sub	r11, r30
    ff84:	21 e0       	ldi	r18, 0x01	; 1
    ff86:	cb 14       	cp	r12, r11
    ff88:	08 f0       	brcs	.+2      	; 0xff8c <arb_sysMsecDelta+0x54>
    ff8a:	20 e0       	ldi	r18, 0x00	; 0
    ff8c:	32 2b       	or	r19, r18
    ff8e:	e5 2f       	mov	r30, r21
    ff90:	ed 19       	sub	r30, r13
    ff92:	de 2e       	mov	r13, r30
    ff94:	41 e0       	ldi	r20, 0x01	; 1
    ff96:	5e 17       	cp	r21, r30
    ff98:	08 f0       	brcs	.+2      	; 0xff9c <arb_sysMsecDelta+0x64>
    ff9a:	40 e0       	ldi	r20, 0x00	; 0
    ff9c:	cd 2c       	mov	r12, r13
    ff9e:	c3 1a       	sub	r12, r19
    ffa0:	21 e0       	ldi	r18, 0x01	; 1
    ffa2:	dc 14       	cp	r13, r12
    ffa4:	08 f0       	brcs	.+2      	; 0xffa8 <arb_sysMsecDelta+0x70>
    ffa6:	20 e0       	ldi	r18, 0x00	; 0
    ffa8:	42 2b       	or	r20, r18
    ffaa:	26 2f       	mov	r18, r22
    ffac:	2e 19       	sub	r18, r14
    ffae:	e2 2e       	mov	r14, r18
    ffb0:	31 e0       	ldi	r19, 0x01	; 1
    ffb2:	62 17       	cp	r22, r18
    ffb4:	08 f0       	brcs	.+2      	; 0xffb8 <arb_sysMsecDelta+0x80>
    ffb6:	30 e0       	ldi	r19, 0x00	; 0
    ffb8:	ae 2d       	mov	r26, r14
    ffba:	a4 1b       	sub	r26, r20
    ffbc:	21 e0       	ldi	r18, 0x01	; 1
    ffbe:	ea 16       	cp	r14, r26
    ffc0:	08 f0       	brcs	.+2      	; 0xffc4 <arb_sysMsecDelta+0x8c>
    ffc2:	20 e0       	ldi	r18, 0x00	; 0
    ffc4:	32 2b       	or	r19, r18
    ffc6:	e7 2f       	mov	r30, r23
    ffc8:	ef 19       	sub	r30, r15
    ffca:	fe 2e       	mov	r15, r30
    ffcc:	41 e0       	ldi	r20, 0x01	; 1
    ffce:	7e 17       	cp	r23, r30
    ffd0:	08 f0       	brcs	.+2      	; 0xffd4 <arb_sysMsecDelta+0x9c>
    ffd2:	40 e0       	ldi	r20, 0x00	; 0
    ffd4:	ff 2d       	mov	r31, r15
    ffd6:	f3 1b       	sub	r31, r19
    ffd8:	21 e0       	ldi	r18, 0x01	; 1
    ffda:	ff 16       	cp	r15, r31
    ffdc:	08 f0       	brcs	.+2      	; 0xffe0 <arb_sysMsecDelta+0xa8>
    ffde:	20 e0       	ldi	r18, 0x00	; 0
    ffe0:	42 2b       	or	r20, r18
    ffe2:	28 2f       	mov	r18, r24
    ffe4:	20 1b       	sub	r18, r16
    ffe6:	02 2f       	mov	r16, r18
    ffe8:	21 e0       	ldi	r18, 0x01	; 1
    ffea:	80 17       	cp	r24, r16
    ffec:	08 f0       	brcs	.+2      	; 0xfff0 <arb_sysMsecDelta+0xb8>
    ffee:	20 e0       	ldi	r18, 0x00	; 0
    fff0:	e0 2f       	mov	r30, r16
    fff2:	e4 1b       	sub	r30, r20
    fff4:	81 e0       	ldi	r24, 0x01	; 1
    fff6:	0e 17       	cp	r16, r30
    fff8:	08 f0       	brcs	.+2      	; 0xfffc <arb_sysMsecDelta+0xc4>
    fffa:	80 e0       	ldi	r24, 0x00	; 0
    fffc:	28 2b       	or	r18, r24
    fffe:	91 1b       	sub	r25, r17
   10000:	19 2f       	mov	r17, r25
   10002:	12 1b       	sub	r17, r18
   10004:	2a 2d       	mov	r18, r10
   10006:	3b 2f       	mov	r19, r27
   10008:	4b 2d       	mov	r20, r11
   1000a:	5c 2d       	mov	r21, r12
   1000c:	6a 2f       	mov	r22, r26
   1000e:	7f 2f       	mov	r23, r31
   10010:	8e 2f       	mov	r24, r30
   10012:	91 2f       	mov	r25, r17
   10014:	b2 f5       	brpl	.+108    	; 0x10082 <arb_sysMsecDelta+0x14a>
   10016:	2a 2d       	mov	r18, r10
   10018:	20 58       	subi	r18, 0x80	; 128
   1001a:	31 e0       	ldi	r19, 0x01	; 1
   1001c:	2a 15       	cp	r18, r10
   1001e:	08 f0       	brcs	.+2      	; 0x10022 <arb_sysMsecDelta+0xea>
   10020:	30 e0       	ldi	r19, 0x00	; 0
   10022:	8b 2f       	mov	r24, r27
   10024:	82 51       	subi	r24, 0x12	; 18
   10026:	51 e0       	ldi	r21, 0x01	; 1
   10028:	8b 17       	cp	r24, r27
   1002a:	08 f0       	brcs	.+2      	; 0x1002e <arb_sysMsecDelta+0xf6>
   1002c:	50 e0       	ldi	r21, 0x00	; 0
   1002e:	38 0f       	add	r19, r24
   10030:	41 e0       	ldi	r20, 0x01	; 1
   10032:	38 17       	cp	r19, r24
   10034:	08 f0       	brcs	.+2      	; 0x10038 <arb_sysMsecDelta+0x100>
   10036:	40 e0       	ldi	r20, 0x00	; 0
   10038:	54 2b       	or	r21, r20
   1003a:	8b 2d       	mov	r24, r11
   1003c:	8a 5c       	subi	r24, 0xCA	; 202
   1003e:	61 e0       	ldi	r22, 0x01	; 1
   10040:	8b 15       	cp	r24, r11
   10042:	08 f0       	brcs	.+2      	; 0x10046 <arb_sysMsecDelta+0x10e>
   10044:	60 e0       	ldi	r22, 0x00	; 0
   10046:	45 2f       	mov	r20, r21
   10048:	48 0f       	add	r20, r24
   1004a:	51 e0       	ldi	r21, 0x01	; 1
   1004c:	48 17       	cp	r20, r24
   1004e:	08 f0       	brcs	.+2      	; 0x10052 <arb_sysMsecDelta+0x11a>
   10050:	50 e0       	ldi	r21, 0x00	; 0
   10052:	56 2b       	or	r21, r22
   10054:	5c 0d       	add	r21, r12
   10056:	81 e0       	ldi	r24, 0x01	; 1
   10058:	5c 15       	cp	r21, r12
   1005a:	08 f0       	brcs	.+2      	; 0x1005e <arb_sysMsecDelta+0x126>
   1005c:	80 e0       	ldi	r24, 0x00	; 0
   1005e:	68 2f       	mov	r22, r24
   10060:	6a 0f       	add	r22, r26
   10062:	81 e0       	ldi	r24, 0x01	; 1
   10064:	6a 17       	cp	r22, r26
   10066:	08 f0       	brcs	.+2      	; 0x1006a <arb_sysMsecDelta+0x132>
   10068:	80 e0       	ldi	r24, 0x00	; 0
   1006a:	78 2f       	mov	r23, r24
   1006c:	7f 0f       	add	r23, r31
   1006e:	81 e0       	ldi	r24, 0x01	; 1
   10070:	7f 17       	cp	r23, r31
   10072:	08 f0       	brcs	.+2      	; 0x10076 <arb_sysMsecDelta+0x13e>
   10074:	80 e0       	ldi	r24, 0x00	; 0
   10076:	8e 0f       	add	r24, r30
   10078:	91 e0       	ldi	r25, 0x01	; 1
   1007a:	8e 17       	cp	r24, r30
   1007c:	08 f0       	brcs	.+2      	; 0x10080 <arb_sysMsecDelta+0x148>
   1007e:	90 e0       	ldi	r25, 0x00	; 0
   10080:	91 0f       	add	r25, r17
   10082:	1f 91       	pop	r17
   10084:	0f 91       	pop	r16
   10086:	ff 90       	pop	r15
   10088:	ef 90       	pop	r14
   1008a:	df 90       	pop	r13
   1008c:	cf 90       	pop	r12
   1008e:	bf 90       	pop	r11
   10090:	af 90       	pop	r10
   10092:	08 95       	ret

00010094 <arb_sysTimerEnabled>:
   10094:	80 91 1d 25 	lds	r24, 0x251D
   10098:	08 95       	ret

0001009a <arb_setSysTime>:
   1009a:	df 93       	push	r29
   1009c:	cf 93       	push	r28
   1009e:	0f 92       	push	r0
   100a0:	cd b7       	in	r28, 0x3d	; 61
   100a2:	de b7       	in	r29, 0x3e	; 62
   100a4:	9f b7       	in	r25, 0x3f	; 63
   100a6:	99 83       	std	Y+1, r25	; 0x01
   100a8:	f8 94       	cli
   100aa:	10 92 0c 25 	sts	0x250C, r1
   100ae:	10 92 0d 25 	sts	0x250D, r1
   100b2:	10 92 0e 25 	sts	0x250E, r1
   100b6:	10 92 0f 25 	sts	0x250F, r1
   100ba:	10 92 10 25 	sts	0x2510, r1
   100be:	10 92 11 25 	sts	0x2511, r1
   100c2:	10 92 12 25 	sts	0x2512, r1
   100c6:	10 92 13 25 	sts	0x2513, r1
   100ca:	e4 e0       	ldi	r30, 0x04	; 4
   100cc:	f5 e2       	ldi	r31, 0x25	; 37
   100ce:	10 82       	st	Z, r1
   100d0:	11 82       	std	Z+1, r1	; 0x01
   100d2:	12 82       	std	Z+2, r1	; 0x02
   100d4:	13 82       	std	Z+3, r1	; 0x03
   100d6:	14 82       	std	Z+4, r1	; 0x04
   100d8:	15 82       	std	Z+5, r1	; 0x05
   100da:	16 82       	std	Z+6, r1	; 0x06
   100dc:	17 82       	std	Z+7, r1	; 0x07
   100de:	40 93 18 25 	sts	0x2518, r20
   100e2:	60 93 17 25 	sts	0x2517, r22
   100e6:	80 93 16 25 	sts	0x2516, r24
   100ea:	10 92 14 25 	sts	0x2514, r1
   100ee:	10 92 15 25 	sts	0x2515, r1
   100f2:	89 81       	ldd	r24, Y+1	; 0x01
   100f4:	8f bf       	out	0x3f, r24	; 63
   100f6:	0f 90       	pop	r0
   100f8:	cf 91       	pop	r28
   100fa:	df 91       	pop	r29
   100fc:	08 95       	ret

000100fe <arb_resetSysTime>:
   100fe:	10 92 0c 25 	sts	0x250C, r1
   10102:	10 92 0d 25 	sts	0x250D, r1
   10106:	10 92 0e 25 	sts	0x250E, r1
   1010a:	10 92 0f 25 	sts	0x250F, r1
   1010e:	10 92 10 25 	sts	0x2510, r1
   10112:	10 92 11 25 	sts	0x2511, r1
   10116:	10 92 12 25 	sts	0x2512, r1
   1011a:	10 92 13 25 	sts	0x2513, r1
   1011e:	e4 e0       	ldi	r30, 0x04	; 4
   10120:	f5 e2       	ldi	r31, 0x25	; 37
   10122:	10 82       	st	Z, r1
   10124:	11 82       	std	Z+1, r1	; 0x01
   10126:	12 82       	std	Z+2, r1	; 0x02
   10128:	13 82       	std	Z+3, r1	; 0x03
   1012a:	14 82       	std	Z+4, r1	; 0x04
   1012c:	15 82       	std	Z+5, r1	; 0x05
   1012e:	16 82       	std	Z+6, r1	; 0x06
   10130:	17 82       	std	Z+7, r1	; 0x07
   10132:	10 92 18 25 	sts	0x2518, r1
   10136:	10 92 17 25 	sts	0x2517, r1
   1013a:	10 92 16 25 	sts	0x2516, r1
   1013e:	10 92 14 25 	sts	0x2514, r1
   10142:	10 92 15 25 	sts	0x2515, r1
   10146:	08 95       	ret

00010148 <arb_sysTimerInit>:
   10148:	1f 93       	push	r17
   1014a:	df 93       	push	r29
   1014c:	cf 93       	push	r28
   1014e:	00 d0       	rcall	.+0      	; 0x10150 <arb_sysTimerInit+0x8>
   10150:	00 d0       	rcall	.+0      	; 0x10152 <arb_sysTimerInit+0xa>
   10152:	cd b7       	in	r28, 0x3d	; 61
   10154:	de b7       	in	r29, 0x3e	; 62
   10156:	18 2f       	mov	r17, r24
   10158:	0e 94 7f 80 	call	0x100fe	; 0x100fe <arb_resetSysTime>
   1015c:	81 2f       	mov	r24, r17
   1015e:	0e 94 b5 59 	call	0xb36a	; 0xb36a <hal_requestTimer>
   10162:	80 93 1e 25 	sts	0x251E, r24
   10166:	90 93 1f 25 	sts	0x251F, r25
   1016a:	80 91 1e 25 	lds	r24, 0x251E
   1016e:	90 91 1f 25 	lds	r25, 0x251F
   10172:	97 fd       	sbrc	r25, 7
   10174:	23 c0       	rjmp	.+70     	; 0x101bc <arb_sysTimerInit+0x74>
   10176:	19 82       	std	Y+1, r1	; 0x01
   10178:	1a 82       	std	Y+2, r1	; 0x02
   1017a:	8a e0       	ldi	r24, 0x0A	; 10
   1017c:	97 ed       	ldi	r25, 0xD7	; 215
   1017e:	a3 e2       	ldi	r26, 0x23	; 35
   10180:	bc e3       	ldi	r27, 0x3C	; 60
   10182:	8b 83       	std	Y+3, r24	; 0x03
   10184:	9c 83       	std	Y+4, r25	; 0x04
   10186:	ad 83       	std	Y+5, r26	; 0x05
   10188:	be 83       	std	Y+6, r27	; 0x06
   1018a:	80 91 1e 25 	lds	r24, 0x251E
   1018e:	90 91 1f 25 	lds	r25, 0x251F
   10192:	20 e0       	ldi	r18, 0x00	; 0
   10194:	30 e0       	ldi	r19, 0x00	; 0
   10196:	4b 81       	ldd	r20, Y+3	; 0x03
   10198:	5c 81       	ldd	r21, Y+4	; 0x04
   1019a:	6d 81       	ldd	r22, Y+5	; 0x05
   1019c:	7e 81       	ldd	r23, Y+6	; 0x06
   1019e:	0e 94 5e 5b 	call	0xb6bc	; 0xb6bc <hal_configureTimer>
   101a2:	87 fd       	sbrc	r24, 7
   101a4:	0b c0       	rjmp	.+22     	; 0x101bc <arb_sysTimerInit+0x74>
   101a6:	80 91 1e 25 	lds	r24, 0x251E
   101aa:	90 91 1f 25 	lds	r25, 0x251F
   101ae:	64 e0       	ldi	r22, 0x04	; 4
   101b0:	49 ee       	ldi	r20, 0xE9	; 233
   101b2:	50 e8       	ldi	r21, 0x80	; 128
   101b4:	0e 94 0b 58 	call	0xb016	; 0xb016 <hal_requestTimerInterrupt>
   101b8:	87 ff       	sbrs	r24, 7
   101ba:	04 c0       	rjmp	.+8      	; 0x101c4 <arb_sysTimerInit+0x7c>
   101bc:	80 e0       	ldi	r24, 0x00	; 0
   101be:	90 e0       	ldi	r25, 0x00	; 0
   101c0:	0e 94 bc af 	call	0x15f78	; 0x15f78 <exit>
   101c4:	26 96       	adiw	r28, 0x06	; 6
   101c6:	cd bf       	out	0x3d, r28	; 61
   101c8:	de bf       	out	0x3e, r29	; 62
   101ca:	cf 91       	pop	r28
   101cc:	df 91       	pop	r29
   101ce:	1f 91       	pop	r17
   101d0:	08 95       	ret

000101d2 <sysTimerInterrupt>:
   101d2:	f8 94       	cli
   101d4:	0f 92       	push	r0
   101d6:	0f b6       	in	r0, 0x3f	; 63
   101d8:	0f 93       	push	r16
   101da:	00 2d       	mov	r16, r0
   101dc:	00 68       	ori	r16, 0x80	; 128
   101de:	00 2e       	mov	r0, r16
   101e0:	0f 91       	pop	r16
   101e2:	0f 92       	push	r0
   101e4:	1f 92       	push	r1
   101e6:	11 24       	eor	r1, r1
   101e8:	2f 92       	push	r2
   101ea:	3f 92       	push	r3
   101ec:	4f 92       	push	r4
   101ee:	5f 92       	push	r5
   101f0:	6f 92       	push	r6
   101f2:	7f 92       	push	r7
   101f4:	8f 92       	push	r8
   101f6:	9f 92       	push	r9
   101f8:	af 92       	push	r10
   101fa:	bf 92       	push	r11
   101fc:	cf 92       	push	r12
   101fe:	df 92       	push	r13
   10200:	ef 92       	push	r14
   10202:	ff 92       	push	r15
   10204:	0f 93       	push	r16
   10206:	1f 93       	push	r17
   10208:	2f 93       	push	r18
   1020a:	3f 93       	push	r19
   1020c:	4f 93       	push	r20
   1020e:	5f 93       	push	r21
   10210:	6f 93       	push	r22
   10212:	7f 93       	push	r23
   10214:	8f 93       	push	r24
   10216:	9f 93       	push	r25
   10218:	af 93       	push	r26
   1021a:	bf 93       	push	r27
   1021c:	cf 93       	push	r28
   1021e:	df 93       	push	r29
   10220:	ef 93       	push	r30
   10222:	ff 93       	push	r31
   10224:	e0 91 ab 22 	lds	r30, 0x22AB
   10228:	f0 91 ac 22 	lds	r31, 0x22AC
   1022c:	06 80       	ldd	r0, Z+6	; 0x06
   1022e:	f7 81       	ldd	r31, Z+7	; 0x07
   10230:	e0 2d       	mov	r30, r0
   10232:	01 90       	ld	r0, Z+
   10234:	f0 81       	ld	r31, Z
   10236:	e0 2d       	mov	r30, r0
   10238:	e0 93 c8 27 	sts	0x27C8, r30
   1023c:	f0 93 c9 27 	sts	0x27C9, r31
   10240:	2d b7       	in	r18, 0x3d	; 61
   10242:	4e b7       	in	r20, 0x3e	; 62
   10244:	94 2f       	mov	r25, r20
   10246:	80 e0       	ldi	r24, 0x00	; 0
   10248:	30 e0       	ldi	r19, 0x00	; 0
   1024a:	82 2b       	or	r24, r18
   1024c:	93 2b       	or	r25, r19
   1024e:	81 87       	std	Z+9, r24	; 0x09
   10250:	92 87       	std	Z+10, r25	; 0x0a
   10252:	8f ef       	ldi	r24, 0xFF	; 255
   10254:	8d bf       	out	0x3d, r24	; 61
   10256:	8f e3       	ldi	r24, 0x3F	; 63
   10258:	8e bf       	out	0x3e, r24	; 62
   1025a:	c0 91 3d 00 	lds	r28, 0x003D
   1025e:	d0 91 3e 00 	lds	r29, 0x003E
   10262:	e0 91 ab 22 	lds	r30, 0x22AB
   10266:	f0 91 ac 22 	lds	r31, 0x22AC
   1026a:	06 80       	ldd	r0, Z+6	; 0x06
   1026c:	f7 81       	ldd	r31, Z+7	; 0x07
   1026e:	e0 2d       	mov	r30, r0
   10270:	01 90       	ld	r0, Z+
   10272:	f0 81       	ld	r31, Z
   10274:	e0 2d       	mov	r30, r0
   10276:	e0 93 20 25 	sts	0x2520, r30
   1027a:	f0 93 21 25 	sts	0x2521, r31
   1027e:	03 84       	ldd	r0, Z+11	; 0x0b
   10280:	f4 85       	ldd	r31, Z+12	; 0x0c
   10282:	e0 2d       	mov	r30, r0
   10284:	80 81       	ld	r24, Z
   10286:	91 81       	ldd	r25, Z+1	; 0x01
   10288:	8d 5a       	subi	r24, 0xAD	; 173
   1028a:	9e 4d       	sbci	r25, 0xDE	; 222
   1028c:	11 f0       	breq	.+4      	; 0x10292 <sysTimerInterrupt+0xc0>
   1028e:	0e 94 92 85 	call	0x10b24	; 0x10b24 <arb_stackOverflow>
   10292:	e0 91 20 25 	lds	r30, 0x2520
   10296:	f0 91 21 25 	lds	r31, 0x2521
   1029a:	11 82       	std	Z+1, r1	; 0x01
   1029c:	80 91 9e 22 	lds	r24, 0x229E
   102a0:	88 23       	and	r24, r24
   102a2:	11 f0       	breq	.+4      	; 0x102a8 <sysTimerInterrupt+0xd6>
   102a4:	0e 94 35 7e 	call	0xfc6a	; 0xfc6a <updateSystemTime>
   102a8:	81 e0       	ldi	r24, 0x01	; 1
   102aa:	80 93 9e 22 	sts	0x229E, r24
   102ae:	0e 94 2a 83 	call	0x10654	; 0x10654 <arb_updateSleepingThreads>
   102b2:	e0 91 c6 27 	lds	r30, 0x27C6
   102b6:	f0 91 c7 27 	lds	r31, 0x27C7
   102ba:	19 95       	eicall
   102bc:	e0 91 ab 22 	lds	r30, 0x22AB
   102c0:	f0 91 ac 22 	lds	r31, 0x22AC
   102c4:	06 80       	ldd	r0, Z+6	; 0x06
   102c6:	f7 81       	ldd	r31, Z+7	; 0x07
   102c8:	e0 2d       	mov	r30, r0
   102ca:	01 90       	ld	r0, Z+
   102cc:	f0 81       	ld	r31, Z
   102ce:	e0 2d       	mov	r30, r0
   102d0:	e0 93 c8 27 	sts	0x27C8, r30
   102d4:	f0 93 c9 27 	sts	0x27C9, r31
   102d8:	81 85       	ldd	r24, Z+9	; 0x09
   102da:	92 85       	ldd	r25, Z+10	; 0x0a
   102dc:	8d bf       	out	0x3d, r24	; 61
   102de:	9e bf       	out	0x3e, r25	; 62
   102e0:	ff 91       	pop	r31
   102e2:	ef 91       	pop	r30
   102e4:	df 91       	pop	r29
   102e6:	cf 91       	pop	r28
   102e8:	bf 91       	pop	r27
   102ea:	af 91       	pop	r26
   102ec:	9f 91       	pop	r25
   102ee:	8f 91       	pop	r24
   102f0:	7f 91       	pop	r23
   102f2:	6f 91       	pop	r22
   102f4:	5f 91       	pop	r21
   102f6:	4f 91       	pop	r20
   102f8:	3f 91       	pop	r19
   102fa:	2f 91       	pop	r18
   102fc:	1f 91       	pop	r17
   102fe:	0f 91       	pop	r16
   10300:	ff 90       	pop	r15
   10302:	ef 90       	pop	r14
   10304:	df 90       	pop	r13
   10306:	cf 90       	pop	r12
   10308:	bf 90       	pop	r11
   1030a:	af 90       	pop	r10
   1030c:	9f 90       	pop	r9
   1030e:	8f 90       	pop	r8
   10310:	7f 90       	pop	r7
   10312:	6f 90       	pop	r6
   10314:	5f 90       	pop	r5
   10316:	4f 90       	pop	r4
   10318:	3f 90       	pop	r3
   1031a:	2f 90       	pop	r2
   1031c:	1f 90       	pop	r1
   1031e:	0f 90       	pop	r0
   10320:	0f be       	out	0x3f, r0	; 63
   10322:	0f 90       	pop	r0
   10324:	18 95       	reti

00010326 <arb_sysTimerStart>:
   10326:	80 91 1e 25 	lds	r24, 0x251E
   1032a:	90 91 1f 25 	lds	r25, 0x251F
   1032e:	0e 94 8f 5c 	call	0xb91e	; 0xb91e <hal_startTimer>
   10332:	87 ff       	sbrs	r24, 7
   10334:	02 c0       	rjmp	.+4      	; 0x1033a <arb_sysTimerStart+0x14>
   10336:	86 ef       	ldi	r24, 0xF6	; 246
   10338:	08 95       	ret
   1033a:	81 e0       	ldi	r24, 0x01	; 1
   1033c:	80 93 1d 25 	sts	0x251D, r24
   10340:	80 93 9e 22 	sts	0x229E, r24
   10344:	80 e0       	ldi	r24, 0x00	; 0
   10346:	08 95       	ret

00010348 <arb_sysTimeNow>:
   10348:	2f 92       	push	r2
   1034a:	3f 92       	push	r3
   1034c:	4f 92       	push	r4
   1034e:	5f 92       	push	r5
   10350:	6f 92       	push	r6
   10352:	7f 92       	push	r7
   10354:	8f 92       	push	r8
   10356:	9f 92       	push	r9
   10358:	af 92       	push	r10
   1035a:	bf 92       	push	r11
   1035c:	cf 92       	push	r12
   1035e:	df 92       	push	r13
   10360:	ef 92       	push	r14
   10362:	ff 92       	push	r15
   10364:	0f 93       	push	r16
   10366:	1f 93       	push	r17
   10368:	df 93       	push	r29
   1036a:	cf 93       	push	r28
   1036c:	cd b7       	in	r28, 0x3d	; 61
   1036e:	de b7       	in	r29, 0x3e	; 62
   10370:	2d 97       	sbiw	r28, 0x0d	; 13
   10372:	cd bf       	out	0x3d, r28	; 61
   10374:	de bf       	out	0x3e, r29	; 62
   10376:	8c 01       	movw	r16, r24
   10378:	8f b7       	in	r24, 0x3f	; 63
   1037a:	89 83       	std	Y+1, r24	; 0x01
   1037c:	f8 94       	cli
   1037e:	80 91 1e 25 	lds	r24, 0x251E
   10382:	90 91 1f 25 	lds	r25, 0x251F
   10386:	64 e0       	ldi	r22, 0x04	; 4
   10388:	0e 94 24 5e 	call	0xbc48	; 0xbc48 <hal_getIntStatus>
   1038c:	18 16       	cp	r1, r24
   1038e:	19 06       	cpc	r1, r25
   10390:	24 f4       	brge	.+8      	; 0x1039a <arb_sysTimeNow+0x52>
   10392:	10 92 9e 22 	sts	0x229E, r1
   10396:	0e 94 35 7e 	call	0xfc6a	; 0xfc6a <updateSystemTime>
   1039a:	80 91 1e 25 	lds	r24, 0x251E
   1039e:	90 91 1f 25 	lds	r25, 0x251F
   103a2:	0e 94 0e 5d 	call	0xba1c	; 0xba1c <hal_getTimerCount>
   103a6:	5b 01       	movw	r10, r22
   103a8:	9b 01       	movw	r18, r22
   103aa:	40 e0       	ldi	r20, 0x00	; 0
   103ac:	50 e0       	ldi	r21, 0x00	; 0
   103ae:	60 e0       	ldi	r22, 0x00	; 0
   103b0:	70 e0       	ldi	r23, 0x00	; 0
   103b2:	80 e0       	ldi	r24, 0x00	; 0
   103b4:	90 e0       	ldi	r25, 0x00	; 0
   103b6:	40 90 0c 25 	lds	r4, 0x250C
   103ba:	e0 91 0d 25 	lds	r30, 0x250D
   103be:	b0 91 0e 25 	lds	r27, 0x250E
   103c2:	f0 90 0f 25 	lds	r15, 0x250F
   103c6:	e0 90 10 25 	lds	r14, 0x2510
   103ca:	d0 90 11 25 	lds	r13, 0x2511
   103ce:	c0 90 12 25 	lds	r12, 0x2512
   103d2:	90 90 13 25 	lds	r9, 0x2513
   103d6:	4a 0c       	add	r4, r10
   103d8:	a1 e0       	ldi	r26, 0x01	; 1
   103da:	4a 14       	cp	r4, r10
   103dc:	08 f0       	brcs	.+2      	; 0x103e0 <arb_sysTimeNow+0x98>
   103de:	a0 e0       	ldi	r26, 0x00	; 0
   103e0:	e3 0f       	add	r30, r19
   103e2:	f1 e0       	ldi	r31, 0x01	; 1
   103e4:	e3 17       	cp	r30, r19
   103e6:	08 f0       	brcs	.+2      	; 0x103ea <arb_sysTimeNow+0xa2>
   103e8:	f0 e0       	ldi	r31, 0x00	; 0
   103ea:	ae 0f       	add	r26, r30
   103ec:	af 83       	std	Y+7, r26	; 0x07
   103ee:	a1 e0       	ldi	r26, 0x01	; 1
   103f0:	8f 80       	ldd	r8, Y+7	; 0x07
   103f2:	8e 16       	cp	r8, r30
   103f4:	08 f0       	brcs	.+2      	; 0x103f8 <arb_sysTimeNow+0xb0>
   103f6:	a0 e0       	ldi	r26, 0x00	; 0
   103f8:	fa 2b       	or	r31, r26
   103fa:	e1 e0       	ldi	r30, 0x01	; 1
   103fc:	b4 17       	cp	r27, r20
   103fe:	08 f0       	brcs	.+2      	; 0x10402 <arb_sysTimeNow+0xba>
   10400:	e0 e0       	ldi	r30, 0x00	; 0
   10402:	fb 0f       	add	r31, r27
   10404:	f8 87       	std	Y+8, r31	; 0x08
   10406:	f1 e0       	ldi	r31, 0x01	; 1
   10408:	a8 85       	ldd	r26, Y+8	; 0x08
   1040a:	ab 17       	cp	r26, r27
   1040c:	08 f0       	brcs	.+2      	; 0x10410 <arb_sysTimeNow+0xc8>
   1040e:	f0 e0       	ldi	r31, 0x00	; 0
   10410:	ef 2b       	or	r30, r31
   10412:	f1 e0       	ldi	r31, 0x01	; 1
   10414:	f5 16       	cp	r15, r21
   10416:	08 f0       	brcs	.+2      	; 0x1041a <arb_sysTimeNow+0xd2>
   10418:	f0 e0       	ldi	r31, 0x00	; 0
   1041a:	ef 0d       	add	r30, r15
   1041c:	e9 87       	std	Y+9, r30	; 0x09
   1041e:	e1 e0       	ldi	r30, 0x01	; 1
   10420:	b9 85       	ldd	r27, Y+9	; 0x09
   10422:	bf 15       	cp	r27, r15
   10424:	08 f0       	brcs	.+2      	; 0x10428 <arb_sysTimeNow+0xe0>
   10426:	e0 e0       	ldi	r30, 0x00	; 0
   10428:	fe 2b       	or	r31, r30
   1042a:	e1 e0       	ldi	r30, 0x01	; 1
   1042c:	e6 16       	cp	r14, r22
   1042e:	08 f0       	brcs	.+2      	; 0x10432 <arb_sysTimeNow+0xea>
   10430:	e0 e0       	ldi	r30, 0x00	; 0
   10432:	fe 0d       	add	r31, r14
   10434:	fa 87       	std	Y+10, r31	; 0x0a
   10436:	f1 e0       	ldi	r31, 0x01	; 1
   10438:	8a 84       	ldd	r8, Y+10	; 0x0a
   1043a:	8e 14       	cp	r8, r14
   1043c:	08 f0       	brcs	.+2      	; 0x10440 <arb_sysTimeNow+0xf8>
   1043e:	f0 e0       	ldi	r31, 0x00	; 0
   10440:	ef 2b       	or	r30, r31
   10442:	f1 e0       	ldi	r31, 0x01	; 1
   10444:	d7 16       	cp	r13, r23
   10446:	08 f0       	brcs	.+2      	; 0x1044a <arb_sysTimeNow+0x102>
   10448:	f0 e0       	ldi	r31, 0x00	; 0
   1044a:	ed 0d       	add	r30, r13
   1044c:	eb 87       	std	Y+11, r30	; 0x0b
   1044e:	e1 e0       	ldi	r30, 0x01	; 1
   10450:	ab 85       	ldd	r26, Y+11	; 0x0b
   10452:	ad 15       	cp	r26, r13
   10454:	08 f0       	brcs	.+2      	; 0x10458 <arb_sysTimeNow+0x110>
   10456:	e0 e0       	ldi	r30, 0x00	; 0
   10458:	fe 2b       	or	r31, r30
   1045a:	e1 e0       	ldi	r30, 0x01	; 1
   1045c:	c8 16       	cp	r12, r24
   1045e:	08 f0       	brcs	.+2      	; 0x10462 <arb_sysTimeNow+0x11a>
   10460:	e0 e0       	ldi	r30, 0x00	; 0
   10462:	fc 0d       	add	r31, r12
   10464:	fc 87       	std	Y+12, r31	; 0x0c
   10466:	21 e0       	ldi	r18, 0x01	; 1
   10468:	fc 15       	cp	r31, r12
   1046a:	08 f0       	brcs	.+2      	; 0x1046e <arb_sysTimeNow+0x126>
   1046c:	20 e0       	ldi	r18, 0x00	; 0
   1046e:	6e 2e       	mov	r6, r30
   10470:	62 2a       	or	r6, r18
   10472:	69 0c       	add	r6, r9
   10474:	b0 91 18 25 	lds	r27, 0x2518
   10478:	be 83       	std	Y+6, r27	; 0x06
   1047a:	e0 91 17 25 	lds	r30, 0x2517
   1047e:	ed 83       	std	Y+5, r30	; 0x05
   10480:	f0 91 16 25 	lds	r31, 0x2516
   10484:	fc 83       	std	Y+4, r31	; 0x04
   10486:	80 91 14 25 	lds	r24, 0x2514
   1048a:	90 91 15 25 	lds	r25, 0x2515
   1048e:	8a 83       	std	Y+2, r24	; 0x02
   10490:	9b 83       	std	Y+3, r25	; 0x03
   10492:	b5 01       	movw	r22, r10
   10494:	80 e0       	ldi	r24, 0x00	; 0
   10496:	90 e0       	ldi	r25, 0x00	; 0
   10498:	66 0f       	add	r22, r22
   1049a:	77 1f       	adc	r23, r23
   1049c:	88 1f       	adc	r24, r24
   1049e:	99 1f       	adc	r25, r25
   104a0:	c0 90 19 25 	lds	r12, 0x2519
   104a4:	d0 90 1a 25 	lds	r13, 0x251A
   104a8:	e0 90 1b 25 	lds	r14, 0x251B
   104ac:	f0 90 1c 25 	lds	r15, 0x251C
   104b0:	c6 0e       	add	r12, r22
   104b2:	d7 1e       	adc	r13, r23
   104b4:	e8 1e       	adc	r14, r24
   104b6:	f9 1e       	adc	r15, r25
   104b8:	29 81       	ldd	r18, Y+1	; 0x01
   104ba:	2f bf       	out	0x3f, r18	; 63
   104bc:	28 ee       	ldi	r18, 0xE8	; 232
   104be:	33 e0       	ldi	r19, 0x03	; 3
   104c0:	40 e0       	ldi	r20, 0x00	; 0
   104c2:	50 e0       	ldi	r21, 0x00	; 0
   104c4:	0e 94 00 b4 	call	0x16800	; 0x16800 <__udivmodsi4>
   104c8:	60 e0       	ldi	r22, 0x00	; 0
   104ca:	70 e0       	ldi	r23, 0x00	; 0
   104cc:	80 e0       	ldi	r24, 0x00	; 0
   104ce:	90 e0       	ldi	r25, 0x00	; 0
   104d0:	90 90 04 25 	lds	r9, 0x2504
   104d4:	e0 91 05 25 	lds	r30, 0x2505
   104d8:	b0 91 06 25 	lds	r27, 0x2506
   104dc:	70 90 07 25 	lds	r7, 0x2507
   104e0:	b0 90 08 25 	lds	r11, 0x2508
   104e4:	a0 90 09 25 	lds	r10, 0x2509
   104e8:	80 90 0a 25 	lds	r8, 0x250A
   104ec:	20 90 0b 25 	lds	r2, 0x250B
   104f0:	92 0e       	add	r9, r18
   104f2:	f1 e0       	ldi	r31, 0x01	; 1
   104f4:	92 16       	cp	r9, r18
   104f6:	08 f0       	brcs	.+2      	; 0x104fa <arb_sysTimeNow+0x1b2>
   104f8:	f0 e0       	ldi	r31, 0x00	; 0
   104fa:	e3 0f       	add	r30, r19
   104fc:	a1 e0       	ldi	r26, 0x01	; 1
   104fe:	e3 17       	cp	r30, r19
   10500:	08 f0       	brcs	.+2      	; 0x10504 <arb_sysTimeNow+0x1bc>
   10502:	a0 e0       	ldi	r26, 0x00	; 0
   10504:	3f 2e       	mov	r3, r31
   10506:	3e 0e       	add	r3, r30
   10508:	f1 e0       	ldi	r31, 0x01	; 1
   1050a:	3e 16       	cp	r3, r30
   1050c:	08 f0       	brcs	.+2      	; 0x10510 <arb_sysTimeNow+0x1c8>
   1050e:	f0 e0       	ldi	r31, 0x00	; 0
   10510:	af 2b       	or	r26, r31
   10512:	e4 2f       	mov	r30, r20
   10514:	eb 0f       	add	r30, r27
   10516:	b1 e0       	ldi	r27, 0x01	; 1
   10518:	e4 17       	cp	r30, r20
   1051a:	08 f0       	brcs	.+2      	; 0x1051e <arb_sysTimeNow+0x1d6>
   1051c:	b0 e0       	ldi	r27, 0x00	; 0
   1051e:	5a 2e       	mov	r5, r26
   10520:	5e 0e       	add	r5, r30
   10522:	f1 e0       	ldi	r31, 0x01	; 1
   10524:	5e 16       	cp	r5, r30
   10526:	08 f0       	brcs	.+2      	; 0x1052a <arb_sysTimeNow+0x1e2>
   10528:	f0 e0       	ldi	r31, 0x00	; 0
   1052a:	bf 2b       	or	r27, r31
   1052c:	e5 2f       	mov	r30, r21
   1052e:	e7 0d       	add	r30, r7
   10530:	f1 e0       	ldi	r31, 0x01	; 1
   10532:	e5 17       	cp	r30, r21
   10534:	08 f0       	brcs	.+2      	; 0x10538 <arb_sysTimeNow+0x1f0>
   10536:	f0 e0       	ldi	r31, 0x00	; 0
   10538:	7b 2e       	mov	r7, r27
   1053a:	7e 0e       	add	r7, r30
   1053c:	a1 e0       	ldi	r26, 0x01	; 1
   1053e:	7e 16       	cp	r7, r30
   10540:	08 f0       	brcs	.+2      	; 0x10544 <arb_sysTimeNow+0x1fc>
   10542:	a0 e0       	ldi	r26, 0x00	; 0
   10544:	fa 2b       	or	r31, r26
   10546:	e1 e0       	ldi	r30, 0x01	; 1
   10548:	b6 16       	cp	r11, r22
   1054a:	08 f0       	brcs	.+2      	; 0x1054e <arb_sysTimeNow+0x206>
   1054c:	e0 e0       	ldi	r30, 0x00	; 0
   1054e:	fb 0d       	add	r31, r11
   10550:	fd 87       	std	Y+13, r31	; 0x0d
   10552:	f1 e0       	ldi	r31, 0x01	; 1
   10554:	ad 85       	ldd	r26, Y+13	; 0x0d
   10556:	ab 15       	cp	r26, r11
   10558:	08 f0       	brcs	.+2      	; 0x1055c <arb_sysTimeNow+0x214>
   1055a:	f0 e0       	ldi	r31, 0x00	; 0
   1055c:	ef 2b       	or	r30, r31
   1055e:	f1 e0       	ldi	r31, 0x01	; 1
   10560:	a7 16       	cp	r10, r23
   10562:	08 f0       	brcs	.+2      	; 0x10566 <arb_sysTimeNow+0x21e>
   10564:	f0 e0       	ldi	r31, 0x00	; 0
   10566:	be 2e       	mov	r11, r30
   10568:	ba 0c       	add	r11, r10
   1056a:	e1 e0       	ldi	r30, 0x01	; 1
   1056c:	ba 14       	cp	r11, r10
   1056e:	08 f0       	brcs	.+2      	; 0x10572 <arb_sysTimeNow+0x22a>
   10570:	e0 e0       	ldi	r30, 0x00	; 0
   10572:	fe 2b       	or	r31, r30
   10574:	e1 e0       	ldi	r30, 0x01	; 1
   10576:	88 16       	cp	r8, r24
   10578:	08 f0       	brcs	.+2      	; 0x1057c <arb_sysTimeNow+0x234>
   1057a:	e0 e0       	ldi	r30, 0x00	; 0
   1057c:	9f 2f       	mov	r25, r31
   1057e:	98 0d       	add	r25, r8
   10580:	81 e0       	ldi	r24, 0x01	; 1
   10582:	98 15       	cp	r25, r8
   10584:	08 f0       	brcs	.+2      	; 0x10588 <arb_sysTimeNow+0x240>
   10586:	80 e0       	ldi	r24, 0x00	; 0
   10588:	e8 2b       	or	r30, r24
   1058a:	e2 0d       	add	r30, r2
   1058c:	d8 01       	movw	r26, r16
   1058e:	9c 92       	st	X, r9
   10590:	11 96       	adiw	r26, 0x01	; 1
   10592:	3c 92       	st	X, r3
   10594:	11 97       	sbiw	r26, 0x01	; 1
   10596:	12 96       	adiw	r26, 0x02	; 2
   10598:	5c 92       	st	X, r5
   1059a:	12 97       	sbiw	r26, 0x02	; 2
   1059c:	13 96       	adiw	r26, 0x03	; 3
   1059e:	7c 92       	st	X, r7
   105a0:	13 97       	sbiw	r26, 0x03	; 3
   105a2:	fd 85       	ldd	r31, Y+13	; 0x0d
   105a4:	14 96       	adiw	r26, 0x04	; 4
   105a6:	fc 93       	st	X, r31
   105a8:	14 97       	sbiw	r26, 0x04	; 4
   105aa:	15 96       	adiw	r26, 0x05	; 5
   105ac:	bc 92       	st	X, r11
   105ae:	15 97       	sbiw	r26, 0x05	; 5
   105b0:	16 96       	adiw	r26, 0x06	; 6
   105b2:	9c 93       	st	X, r25
   105b4:	16 97       	sbiw	r26, 0x06	; 6
   105b6:	17 96       	adiw	r26, 0x07	; 7
   105b8:	ec 93       	st	X, r30
   105ba:	17 97       	sbiw	r26, 0x07	; 7
   105bc:	55 96       	adiw	r26, 0x15	; 21
   105be:	cd 92       	st	X+, r12
   105c0:	dd 92       	st	X+, r13
   105c2:	ed 92       	st	X+, r14
   105c4:	fc 92       	st	X, r15
   105c6:	58 97       	sbiw	r26, 0x18	; 24
   105c8:	ea 81       	ldd	r30, Y+2	; 0x02
   105ca:	fb 81       	ldd	r31, Y+3	; 0x03
   105cc:	50 96       	adiw	r26, 0x10	; 16
   105ce:	ed 93       	st	X+, r30
   105d0:	fc 93       	st	X, r31
   105d2:	51 97       	sbiw	r26, 0x11	; 17
   105d4:	fc 81       	ldd	r31, Y+4	; 0x04
   105d6:	52 96       	adiw	r26, 0x12	; 18
   105d8:	fc 93       	st	X, r31
   105da:	52 97       	sbiw	r26, 0x12	; 18
   105dc:	8d 80       	ldd	r8, Y+5	; 0x05
   105de:	53 96       	adiw	r26, 0x13	; 19
   105e0:	8c 92       	st	X, r8
   105e2:	53 97       	sbiw	r26, 0x13	; 19
   105e4:	8e 81       	ldd	r24, Y+6	; 0x06
   105e6:	54 96       	adiw	r26, 0x14	; 20
   105e8:	8c 93       	st	X, r24
   105ea:	54 97       	sbiw	r26, 0x14	; 20
   105ec:	18 96       	adiw	r26, 0x08	; 8
   105ee:	4c 92       	st	X, r4
   105f0:	18 97       	sbiw	r26, 0x08	; 8
   105f2:	9f 81       	ldd	r25, Y+7	; 0x07
   105f4:	19 96       	adiw	r26, 0x09	; 9
   105f6:	9c 93       	st	X, r25
   105f8:	19 97       	sbiw	r26, 0x09	; 9
   105fa:	e8 85       	ldd	r30, Y+8	; 0x08
   105fc:	1a 96       	adiw	r26, 0x0a	; 10
   105fe:	ec 93       	st	X, r30
   10600:	1a 97       	sbiw	r26, 0x0a	; 10
   10602:	f9 85       	ldd	r31, Y+9	; 0x09
   10604:	1b 96       	adiw	r26, 0x0b	; 11
   10606:	fc 93       	st	X, r31
   10608:	1b 97       	sbiw	r26, 0x0b	; 11
   1060a:	8a 84       	ldd	r8, Y+10	; 0x0a
   1060c:	1c 96       	adiw	r26, 0x0c	; 12
   1060e:	8c 92       	st	X, r8
   10610:	1c 97       	sbiw	r26, 0x0c	; 12
   10612:	8b 85       	ldd	r24, Y+11	; 0x0b
   10614:	1d 96       	adiw	r26, 0x0d	; 13
   10616:	8c 93       	st	X, r24
   10618:	1d 97       	sbiw	r26, 0x0d	; 13
   1061a:	9c 85       	ldd	r25, Y+12	; 0x0c
   1061c:	1e 96       	adiw	r26, 0x0e	; 14
   1061e:	9c 93       	st	X, r25
   10620:	1e 97       	sbiw	r26, 0x0e	; 14
   10622:	1f 96       	adiw	r26, 0x0f	; 15
   10624:	6c 92       	st	X, r6
   10626:	c8 01       	movw	r24, r16
   10628:	2d 96       	adiw	r28, 0x0d	; 13
   1062a:	cd bf       	out	0x3d, r28	; 61
   1062c:	de bf       	out	0x3e, r29	; 62
   1062e:	cf 91       	pop	r28
   10630:	df 91       	pop	r29
   10632:	1f 91       	pop	r17
   10634:	0f 91       	pop	r16
   10636:	ff 90       	pop	r15
   10638:	ef 90       	pop	r14
   1063a:	df 90       	pop	r13
   1063c:	cf 90       	pop	r12
   1063e:	bf 90       	pop	r11
   10640:	af 90       	pop	r10
   10642:	9f 90       	pop	r9
   10644:	8f 90       	pop	r8
   10646:	7f 90       	pop	r7
   10648:	6f 90       	pop	r6
   1064a:	5f 90       	pop	r5
   1064c:	4f 90       	pop	r4
   1064e:	3f 90       	pop	r3
   10650:	2f 90       	pop	r2
   10652:	08 95       	ret

00010654 <arb_updateSleepingThreads>:
   10654:	df 93       	push	r29
   10656:	cf 93       	push	r28
   10658:	0f 92       	push	r0
   1065a:	0f 92       	push	r0
   1065c:	cd b7       	in	r28, 0x3d	; 61
   1065e:	de b7       	in	r29, 0x3e	; 62
   10660:	e0 91 ab 22 	lds	r30, 0x22AB
   10664:	f0 91 ac 22 	lds	r31, 0x22AC
   10668:	22 81       	ldd	r18, Z+2	; 0x02
   1066a:	33 81       	ldd	r19, Z+3	; 0x03
   1066c:	e0 91 ab 22 	lds	r30, 0x22AB
   10670:	f0 91 ac 22 	lds	r31, 0x22AC
   10674:	14 c0       	rjmp	.+40     	; 0x1069e <arb_updateSleepingThreads+0x4a>
   10676:	e9 81       	ldd	r30, Y+1	; 0x01
   10678:	fa 81       	ldd	r31, Y+2	; 0x02
   1067a:	01 90       	ld	r0, Z+
   1067c:	f0 81       	ld	r31, Z
   1067e:	e0 2d       	mov	r30, r0
   10680:	81 81       	ldd	r24, Z+1	; 0x01
   10682:	83 30       	cpi	r24, 0x03	; 3
   10684:	41 f4       	brne	.+16     	; 0x10696 <arb_updateSleepingThreads+0x42>
   10686:	83 81       	ldd	r24, Z+3	; 0x03
   10688:	94 81       	ldd	r25, Z+4	; 0x04
   1068a:	01 97       	sbiw	r24, 0x01	; 1
   1068c:	83 83       	std	Z+3, r24	; 0x03
   1068e:	94 83       	std	Z+4, r25	; 0x04
   10690:	89 2b       	or	r24, r25
   10692:	09 f4       	brne	.+2      	; 0x10696 <arb_updateSleepingThreads+0x42>
   10694:	11 82       	std	Z+1, r1	; 0x01
   10696:	21 50       	subi	r18, 0x01	; 1
   10698:	30 40       	sbci	r19, 0x00	; 0
   1069a:	e9 81       	ldd	r30, Y+1	; 0x01
   1069c:	fa 81       	ldd	r31, Y+2	; 0x02
   1069e:	80 85       	ldd	r24, Z+8	; 0x08
   106a0:	91 85       	ldd	r25, Z+9	; 0x09
   106a2:	89 83       	std	Y+1, r24	; 0x01
   106a4:	9a 83       	std	Y+2, r25	; 0x02
   106a6:	21 15       	cp	r18, r1
   106a8:	31 05       	cpc	r19, r1
   106aa:	29 f7       	brne	.-54     	; 0x10676 <arb_updateSleepingThreads+0x22>
   106ac:	0f 90       	pop	r0
   106ae:	0f 90       	pop	r0
   106b0:	cf 91       	pop	r28
   106b2:	df 91       	pop	r29
   106b4:	08 95       	ret

000106b6 <arb_threadCreate>:
   106b6:	5f 92       	push	r5
   106b8:	6f 92       	push	r6
   106ba:	7f 92       	push	r7
   106bc:	8f 92       	push	r8
   106be:	9f 92       	push	r9
   106c0:	af 92       	push	r10
   106c2:	bf 92       	push	r11
   106c4:	cf 92       	push	r12
   106c6:	df 92       	push	r13
   106c8:	ef 92       	push	r14
   106ca:	ff 92       	push	r15
   106cc:	0f 93       	push	r16
   106ce:	1f 93       	push	r17
   106d0:	df 93       	push	r29
   106d2:	cf 93       	push	r28
   106d4:	00 d0       	rcall	.+0      	; 0x106d6 <arb_threadCreate+0x20>
   106d6:	cd b7       	in	r28, 0x3d	; 61
   106d8:	de b7       	in	r29, 0x3e	; 62
   106da:	5c 01       	movw	r10, r24
   106dc:	4b 01       	movw	r8, r22
   106de:	3a 01       	movw	r6, r20
   106e0:	79 01       	movw	r14, r18
   106e2:	50 2e       	mov	r5, r16
   106e4:	8f b7       	in	r24, 0x3f	; 63
   106e6:	89 83       	std	Y+1, r24	; 0x01
   106e8:	f8 94       	cli
   106ea:	e0 91 ab 22 	lds	r30, 0x22AB
   106ee:	f0 91 ac 22 	lds	r31, 0x22AC
   106f2:	22 81       	ldd	r18, Z+2	; 0x02
   106f4:	33 81       	ldd	r19, Z+3	; 0x03
   106f6:	e0 91 ab 22 	lds	r30, 0x22AB
   106fa:	f0 91 ac 22 	lds	r31, 0x22AC
   106fe:	11 c0       	rjmp	.+34     	; 0x10722 <arb_threadCreate+0x6c>
   10700:	ea 81       	ldd	r30, Y+2	; 0x02
   10702:	fb 81       	ldd	r31, Y+3	; 0x03
   10704:	01 90       	ld	r0, Z+
   10706:	f0 81       	ld	r31, Z
   10708:	e0 2d       	mov	r30, r0
   1070a:	82 81       	ldd	r24, Z+2	; 0x02
   1070c:	85 15       	cp	r24, r5
   1070e:	29 f4       	brne	.+10     	; 0x1071a <arb_threadCreate+0x64>
   10710:	89 81       	ldd	r24, Y+1	; 0x01
   10712:	8f bf       	out	0x3f, r24	; 63
   10714:	28 ef       	ldi	r18, 0xF8	; 248
   10716:	3f ef       	ldi	r19, 0xFF	; 255
   10718:	52 c0       	rjmp	.+164    	; 0x107be <arb_threadCreate+0x108>
   1071a:	21 50       	subi	r18, 0x01	; 1
   1071c:	30 40       	sbci	r19, 0x00	; 0
   1071e:	ea 81       	ldd	r30, Y+2	; 0x02
   10720:	fb 81       	ldd	r31, Y+3	; 0x03
   10722:	80 85       	ldd	r24, Z+8	; 0x08
   10724:	91 85       	ldd	r25, Z+9	; 0x09
   10726:	8a 83       	std	Y+2, r24	; 0x02
   10728:	9b 83       	std	Y+3, r25	; 0x03
   1072a:	21 15       	cp	r18, r1
   1072c:	31 05       	cpc	r19, r1
   1072e:	41 f7       	brne	.-48     	; 0x10700 <arb_threadCreate+0x4a>
   10730:	c7 01       	movw	r24, r14
   10732:	ca 96       	adiw	r24, 0x3a	; 58
   10734:	0e 94 b8 8a 	call	0x11570	; 0x11570 <utl_createLink>
   10738:	8a 83       	std	Y+2, r24	; 0x02
   1073a:	9b 83       	std	Y+3, r25	; 0x03
   1073c:	8a 81       	ldd	r24, Y+2	; 0x02
   1073e:	9b 81       	ldd	r25, Y+3	; 0x03
   10740:	97 ff       	sbrs	r25, 7
   10742:	05 c0       	rjmp	.+10     	; 0x1074e <arb_threadCreate+0x98>
   10744:	89 81       	ldd	r24, Y+1	; 0x01
   10746:	8f bf       	out	0x3f, r24	; 63
   10748:	2f ef       	ldi	r18, 0xFF	; 255
   1074a:	3f ef       	ldi	r19, 0xFF	; 255
   1074c:	38 c0       	rjmp	.+112    	; 0x107be <arb_threadCreate+0x108>
   1074e:	ea 81       	ldd	r30, Y+2	; 0x02
   10750:	fb 81       	ldd	r31, Y+3	; 0x03
   10752:	c0 80       	ld	r12, Z
   10754:	d1 80       	ldd	r13, Z+1	; 0x01
   10756:	96 01       	movw	r18, r12
   10758:	23 5f       	subi	r18, 0xF3	; 243
   1075a:	3f 4f       	sbci	r19, 0xFF	; 255
   1075c:	f6 01       	movw	r30, r12
   1075e:	23 87       	std	Z+11, r18	; 0x0b
   10760:	34 87       	std	Z+12, r19	; 0x0c
   10762:	8d ea       	ldi	r24, 0xAD	; 173
   10764:	9e ed       	ldi	r25, 0xDE	; 222
   10766:	85 87       	std	Z+13, r24	; 0x0d
   10768:	96 87       	std	Z+14, r25	; 0x0e
   1076a:	25 83       	std	Z+5, r18	; 0x05
   1076c:	36 83       	std	Z+6, r19	; 0x06
   1076e:	87 01       	movw	r16, r14
   10770:	04 5d       	subi	r16, 0xD4	; 212
   10772:	1f 4f       	sbci	r17, 0xFF	; 255
   10774:	02 0f       	add	r16, r18
   10776:	13 1f       	adc	r17, r19
   10778:	07 83       	std	Z+7, r16	; 0x07
   1077a:	10 87       	std	Z+8, r17	; 0x08
   1077c:	52 82       	std	Z+2, r5	; 0x02
   1077e:	84 e0       	ldi	r24, 0x04	; 4
   10780:	81 83       	std	Z+1, r24	; 0x01
   10782:	13 82       	std	Z+3, r1	; 0x03
   10784:	14 82       	std	Z+4, r1	; 0x04
   10786:	39 96       	adiw	r30, 0x09	; 9
   10788:	c5 01       	movw	r24, r10
   1078a:	b4 01       	movw	r22, r8
   1078c:	a3 01       	movw	r20, r6
   1078e:	98 01       	movw	r18, r16
   10790:	7f 01       	movw	r14, r30
   10792:	0e 94 46 85 	call	0x10a8c	; 0x10a8c <hal_initThreadStack>
   10796:	e0 91 ab 22 	lds	r30, 0x22AB
   1079a:	f0 91 ac 22 	lds	r31, 0x22AC
   1079e:	82 81       	ldd	r24, Z+2	; 0x02
   107a0:	f6 01       	movw	r30, r12
   107a2:	80 83       	st	Z, r24
   107a4:	80 91 ab 22 	lds	r24, 0x22AB
   107a8:	90 91 ac 22 	lds	r25, 0x22AC
   107ac:	6a 81       	ldd	r22, Y+2	; 0x02
   107ae:	7b 81       	ldd	r23, Y+3	; 0x03
   107b0:	41 e0       	ldi	r20, 0x01	; 1
   107b2:	0e 94 c8 88 	call	0x11190	; 0x11190 <utl_insertLink>
   107b6:	89 81       	ldd	r24, Y+1	; 0x01
   107b8:	8f bf       	out	0x3f, r24	; 63
   107ba:	2a 81       	ldd	r18, Y+2	; 0x02
   107bc:	3b 81       	ldd	r19, Y+3	; 0x03
   107be:	c9 01       	movw	r24, r18
   107c0:	23 96       	adiw	r28, 0x03	; 3
   107c2:	cd bf       	out	0x3d, r28	; 61
   107c4:	de bf       	out	0x3e, r29	; 62
   107c6:	cf 91       	pop	r28
   107c8:	df 91       	pop	r29
   107ca:	1f 91       	pop	r17
   107cc:	0f 91       	pop	r16
   107ce:	ff 90       	pop	r15
   107d0:	ef 90       	pop	r14
   107d2:	df 90       	pop	r13
   107d4:	cf 90       	pop	r12
   107d6:	bf 90       	pop	r11
   107d8:	af 90       	pop	r10
   107da:	9f 90       	pop	r9
   107dc:	8f 90       	pop	r8
   107de:	7f 90       	pop	r7
   107e0:	6f 90       	pop	r6
   107e2:	5f 90       	pop	r5
   107e4:	08 95       	ret

000107e6 <arb_yieldFromSleepIntsOn>:
   107e6:	0f 92       	push	r0
   107e8:	0f b6       	in	r0, 0x3f	; 63
   107ea:	0f 93       	push	r16
   107ec:	00 2d       	mov	r16, r0
   107ee:	00 68       	ori	r16, 0x80	; 128
   107f0:	00 2e       	mov	r0, r16
   107f2:	0f 91       	pop	r16
   107f4:	0f 92       	push	r0
   107f6:	1f 92       	push	r1
   107f8:	11 24       	eor	r1, r1
   107fa:	2f 92       	push	r2
   107fc:	3f 92       	push	r3
   107fe:	4f 92       	push	r4
   10800:	5f 92       	push	r5
   10802:	6f 92       	push	r6
   10804:	7f 92       	push	r7
   10806:	8f 92       	push	r8
   10808:	9f 92       	push	r9
   1080a:	af 92       	push	r10
   1080c:	bf 92       	push	r11
   1080e:	cf 92       	push	r12
   10810:	df 92       	push	r13
   10812:	ef 92       	push	r14
   10814:	ff 92       	push	r15
   10816:	0f 93       	push	r16
   10818:	1f 93       	push	r17
   1081a:	2f 93       	push	r18
   1081c:	3f 93       	push	r19
   1081e:	4f 93       	push	r20
   10820:	5f 93       	push	r21
   10822:	6f 93       	push	r22
   10824:	7f 93       	push	r23
   10826:	8f 93       	push	r24
   10828:	9f 93       	push	r25
   1082a:	af 93       	push	r26
   1082c:	bf 93       	push	r27
   1082e:	cf 93       	push	r28
   10830:	df 93       	push	r29
   10832:	ef 93       	push	r30
   10834:	ff 93       	push	r31
   10836:	e0 91 ab 22 	lds	r30, 0x22AB
   1083a:	f0 91 ac 22 	lds	r31, 0x22AC
   1083e:	06 80       	ldd	r0, Z+6	; 0x06
   10840:	f7 81       	ldd	r31, Z+7	; 0x07
   10842:	e0 2d       	mov	r30, r0
   10844:	01 90       	ld	r0, Z+
   10846:	f0 81       	ld	r31, Z
   10848:	e0 2d       	mov	r30, r0
   1084a:	e0 93 c8 27 	sts	0x27C8, r30
   1084e:	f0 93 c9 27 	sts	0x27C9, r31
   10852:	2d b7       	in	r18, 0x3d	; 61
   10854:	4e b7       	in	r20, 0x3e	; 62
   10856:	94 2f       	mov	r25, r20
   10858:	80 e0       	ldi	r24, 0x00	; 0
   1085a:	30 e0       	ldi	r19, 0x00	; 0
   1085c:	82 2b       	or	r24, r18
   1085e:	93 2b       	or	r25, r19
   10860:	81 87       	std	Z+9, r24	; 0x09
   10862:	92 87       	std	Z+10, r25	; 0x0a
   10864:	8f ef       	ldi	r24, 0xFF	; 255
   10866:	8d bf       	out	0x3d, r24	; 61
   10868:	8f e3       	ldi	r24, 0x3F	; 63
   1086a:	8e bf       	out	0x3e, r24	; 62
   1086c:	c0 91 3d 00 	lds	r28, 0x003D
   10870:	d0 91 3e 00 	lds	r29, 0x003E
   10874:	e0 91 ab 22 	lds	r30, 0x22AB
   10878:	f0 91 ac 22 	lds	r31, 0x22AC
   1087c:	06 80       	ldd	r0, Z+6	; 0x06
   1087e:	f7 81       	ldd	r31, Z+7	; 0x07
   10880:	e0 2d       	mov	r30, r0
   10882:	01 90       	ld	r0, Z+
   10884:	f0 81       	ld	r31, Z
   10886:	e0 2d       	mov	r30, r0
   10888:	e0 93 22 25 	sts	0x2522, r30
   1088c:	f0 93 23 25 	sts	0x2523, r31
   10890:	03 84       	ldd	r0, Z+11	; 0x0b
   10892:	f4 85       	ldd	r31, Z+12	; 0x0c
   10894:	e0 2d       	mov	r30, r0
   10896:	80 81       	ld	r24, Z
   10898:	91 81       	ldd	r25, Z+1	; 0x01
   1089a:	8d 5a       	subi	r24, 0xAD	; 173
   1089c:	9e 4d       	sbci	r25, 0xDE	; 222
   1089e:	11 f0       	breq	.+4      	; 0x108a4 <arb_yieldFromSleepIntsOn+0xbe>
   108a0:	0e 94 92 85 	call	0x10b24	; 0x10b24 <arb_stackOverflow>
   108a4:	e0 91 c6 27 	lds	r30, 0x27C6
   108a8:	f0 91 c7 27 	lds	r31, 0x27C7
   108ac:	19 95       	eicall
   108ae:	e0 91 ab 22 	lds	r30, 0x22AB
   108b2:	f0 91 ac 22 	lds	r31, 0x22AC
   108b6:	06 80       	ldd	r0, Z+6	; 0x06
   108b8:	f7 81       	ldd	r31, Z+7	; 0x07
   108ba:	e0 2d       	mov	r30, r0
   108bc:	01 90       	ld	r0, Z+
   108be:	f0 81       	ld	r31, Z
   108c0:	e0 2d       	mov	r30, r0
   108c2:	e0 93 c8 27 	sts	0x27C8, r30
   108c6:	f0 93 c9 27 	sts	0x27C9, r31
   108ca:	81 85       	ldd	r24, Z+9	; 0x09
   108cc:	92 85       	ldd	r25, Z+10	; 0x0a
   108ce:	8d bf       	out	0x3d, r24	; 61
   108d0:	9e bf       	out	0x3e, r25	; 62
   108d2:	ff 91       	pop	r31
   108d4:	ef 91       	pop	r30
   108d6:	df 91       	pop	r29
   108d8:	cf 91       	pop	r28
   108da:	bf 91       	pop	r27
   108dc:	af 91       	pop	r26
   108de:	9f 91       	pop	r25
   108e0:	8f 91       	pop	r24
   108e2:	7f 91       	pop	r23
   108e4:	6f 91       	pop	r22
   108e6:	5f 91       	pop	r21
   108e8:	4f 91       	pop	r20
   108ea:	3f 91       	pop	r19
   108ec:	2f 91       	pop	r18
   108ee:	1f 91       	pop	r17
   108f0:	0f 91       	pop	r16
   108f2:	ff 90       	pop	r15
   108f4:	ef 90       	pop	r14
   108f6:	df 90       	pop	r13
   108f8:	cf 90       	pop	r12
   108fa:	bf 90       	pop	r11
   108fc:	af 90       	pop	r10
   108fe:	9f 90       	pop	r9
   10900:	8f 90       	pop	r8
   10902:	7f 90       	pop	r7
   10904:	6f 90       	pop	r6
   10906:	5f 90       	pop	r5
   10908:	4f 90       	pop	r4
   1090a:	3f 90       	pop	r3
   1090c:	2f 90       	pop	r2
   1090e:	1f 90       	pop	r1
   10910:	0f 90       	pop	r0
   10912:	0f be       	out	0x3f, r0	; 63
   10914:	0f 90       	pop	r0
   10916:	08 95       	ret

00010918 <arb_yieldFromSleepIntsOff>:
   10918:	0f 92       	push	r0
   1091a:	0f b6       	in	r0, 0x3f	; 63
   1091c:	0f 92       	push	r0
   1091e:	1f 92       	push	r1
   10920:	11 24       	eor	r1, r1
   10922:	2f 92       	push	r2
   10924:	3f 92       	push	r3
   10926:	4f 92       	push	r4
   10928:	5f 92       	push	r5
   1092a:	6f 92       	push	r6
   1092c:	7f 92       	push	r7
   1092e:	8f 92       	push	r8
   10930:	9f 92       	push	r9
   10932:	af 92       	push	r10
   10934:	bf 92       	push	r11
   10936:	cf 92       	push	r12
   10938:	df 92       	push	r13
   1093a:	ef 92       	push	r14
   1093c:	ff 92       	push	r15
   1093e:	0f 93       	push	r16
   10940:	1f 93       	push	r17
   10942:	2f 93       	push	r18
   10944:	3f 93       	push	r19
   10946:	4f 93       	push	r20
   10948:	5f 93       	push	r21
   1094a:	6f 93       	push	r22
   1094c:	7f 93       	push	r23
   1094e:	8f 93       	push	r24
   10950:	9f 93       	push	r25
   10952:	af 93       	push	r26
   10954:	bf 93       	push	r27
   10956:	cf 93       	push	r28
   10958:	df 93       	push	r29
   1095a:	ef 93       	push	r30
   1095c:	ff 93       	push	r31
   1095e:	e0 91 ab 22 	lds	r30, 0x22AB
   10962:	f0 91 ac 22 	lds	r31, 0x22AC
   10966:	06 80       	ldd	r0, Z+6	; 0x06
   10968:	f7 81       	ldd	r31, Z+7	; 0x07
   1096a:	e0 2d       	mov	r30, r0
   1096c:	01 90       	ld	r0, Z+
   1096e:	f0 81       	ld	r31, Z
   10970:	e0 2d       	mov	r30, r0
   10972:	e0 93 c8 27 	sts	0x27C8, r30
   10976:	f0 93 c9 27 	sts	0x27C9, r31
   1097a:	2d b7       	in	r18, 0x3d	; 61
   1097c:	4e b7       	in	r20, 0x3e	; 62
   1097e:	94 2f       	mov	r25, r20
   10980:	80 e0       	ldi	r24, 0x00	; 0
   10982:	30 e0       	ldi	r19, 0x00	; 0
   10984:	82 2b       	or	r24, r18
   10986:	93 2b       	or	r25, r19
   10988:	81 87       	std	Z+9, r24	; 0x09
   1098a:	92 87       	std	Z+10, r25	; 0x0a
   1098c:	8f ef       	ldi	r24, 0xFF	; 255
   1098e:	8d bf       	out	0x3d, r24	; 61
   10990:	8f e3       	ldi	r24, 0x3F	; 63
   10992:	8e bf       	out	0x3e, r24	; 62
   10994:	c0 91 3d 00 	lds	r28, 0x003D
   10998:	d0 91 3e 00 	lds	r29, 0x003E
   1099c:	e0 91 ab 22 	lds	r30, 0x22AB
   109a0:	f0 91 ac 22 	lds	r31, 0x22AC
   109a4:	06 80       	ldd	r0, Z+6	; 0x06
   109a6:	f7 81       	ldd	r31, Z+7	; 0x07
   109a8:	e0 2d       	mov	r30, r0
   109aa:	01 90       	ld	r0, Z+
   109ac:	f0 81       	ld	r31, Z
   109ae:	e0 2d       	mov	r30, r0
   109b0:	e0 93 22 25 	sts	0x2522, r30
   109b4:	f0 93 23 25 	sts	0x2523, r31
   109b8:	03 84       	ldd	r0, Z+11	; 0x0b
   109ba:	f4 85       	ldd	r31, Z+12	; 0x0c
   109bc:	e0 2d       	mov	r30, r0
   109be:	80 81       	ld	r24, Z
   109c0:	91 81       	ldd	r25, Z+1	; 0x01
   109c2:	8d 5a       	subi	r24, 0xAD	; 173
   109c4:	9e 4d       	sbci	r25, 0xDE	; 222
   109c6:	11 f0       	breq	.+4      	; 0x109cc <arb_yieldFromSleepIntsOff+0xb4>
   109c8:	0e 94 92 85 	call	0x10b24	; 0x10b24 <arb_stackOverflow>
   109cc:	e0 91 c6 27 	lds	r30, 0x27C6
   109d0:	f0 91 c7 27 	lds	r31, 0x27C7
   109d4:	19 95       	eicall
   109d6:	e0 91 ab 22 	lds	r30, 0x22AB
   109da:	f0 91 ac 22 	lds	r31, 0x22AC
   109de:	06 80       	ldd	r0, Z+6	; 0x06
   109e0:	f7 81       	ldd	r31, Z+7	; 0x07
   109e2:	e0 2d       	mov	r30, r0
   109e4:	01 90       	ld	r0, Z+
   109e6:	f0 81       	ld	r31, Z
   109e8:	e0 2d       	mov	r30, r0
   109ea:	e0 93 c8 27 	sts	0x27C8, r30
   109ee:	f0 93 c9 27 	sts	0x27C9, r31
   109f2:	81 85       	ldd	r24, Z+9	; 0x09
   109f4:	92 85       	ldd	r25, Z+10	; 0x0a
   109f6:	8d bf       	out	0x3d, r24	; 61
   109f8:	9e bf       	out	0x3e, r25	; 62
   109fa:	ff 91       	pop	r31
   109fc:	ef 91       	pop	r30
   109fe:	df 91       	pop	r29
   10a00:	cf 91       	pop	r28
   10a02:	bf 91       	pop	r27
   10a04:	af 91       	pop	r26
   10a06:	9f 91       	pop	r25
   10a08:	8f 91       	pop	r24
   10a0a:	7f 91       	pop	r23
   10a0c:	6f 91       	pop	r22
   10a0e:	5f 91       	pop	r21
   10a10:	4f 91       	pop	r20
   10a12:	3f 91       	pop	r19
   10a14:	2f 91       	pop	r18
   10a16:	1f 91       	pop	r17
   10a18:	0f 91       	pop	r16
   10a1a:	ff 90       	pop	r15
   10a1c:	ef 90       	pop	r14
   10a1e:	df 90       	pop	r13
   10a20:	cf 90       	pop	r12
   10a22:	bf 90       	pop	r11
   10a24:	af 90       	pop	r10
   10a26:	9f 90       	pop	r9
   10a28:	8f 90       	pop	r8
   10a2a:	7f 90       	pop	r7
   10a2c:	6f 90       	pop	r6
   10a2e:	5f 90       	pop	r5
   10a30:	4f 90       	pop	r4
   10a32:	3f 90       	pop	r3
   10a34:	2f 90       	pop	r2
   10a36:	1f 90       	pop	r1
   10a38:	0f 90       	pop	r0
   10a3a:	0f be       	out	0x3f, r0	; 63
   10a3c:	0f 90       	pop	r0
   10a3e:	08 95       	ret

00010a40 <arb_sleep>:
   10a40:	0f b6       	in	r0, 0x3f	; 63
   10a42:	07 fe       	sbrs	r0, 7
   10a44:	12 c0       	rjmp	.+36     	; 0x10a6a <arb_sleep+0x2a>
   10a46:	f8 94       	cli
   10a48:	e0 91 ab 22 	lds	r30, 0x22AB
   10a4c:	f0 91 ac 22 	lds	r31, 0x22AC
   10a50:	06 80       	ldd	r0, Z+6	; 0x06
   10a52:	f7 81       	ldd	r31, Z+7	; 0x07
   10a54:	e0 2d       	mov	r30, r0
   10a56:	01 90       	ld	r0, Z+
   10a58:	f0 81       	ld	r31, Z
   10a5a:	e0 2d       	mov	r30, r0
   10a5c:	83 83       	std	Z+3, r24	; 0x03
   10a5e:	94 83       	std	Z+4, r25	; 0x04
   10a60:	83 e0       	ldi	r24, 0x03	; 3
   10a62:	81 83       	std	Z+1, r24	; 0x01
   10a64:	0e 94 f3 83 	call	0x107e6	; 0x107e6 <arb_yieldFromSleepIntsOn>
   10a68:	08 95       	ret
   10a6a:	e0 91 ab 22 	lds	r30, 0x22AB
   10a6e:	f0 91 ac 22 	lds	r31, 0x22AC
   10a72:	06 80       	ldd	r0, Z+6	; 0x06
   10a74:	f7 81       	ldd	r31, Z+7	; 0x07
   10a76:	e0 2d       	mov	r30, r0
   10a78:	01 90       	ld	r0, Z+
   10a7a:	f0 81       	ld	r31, Z
   10a7c:	e0 2d       	mov	r30, r0
   10a7e:	83 83       	std	Z+3, r24	; 0x03
   10a80:	94 83       	std	Z+4, r25	; 0x04
   10a82:	83 e0       	ldi	r24, 0x03	; 3
   10a84:	81 83       	std	Z+1, r24	; 0x01
   10a86:	0e 94 8c 84 	call	0x10918	; 0x10918 <arb_yieldFromSleepIntsOff>
   10a8a:	08 95       	ret

00010a8c <hal_initThreadStack>:
   10a8c:	cf 92       	push	r12
   10a8e:	df 92       	push	r13
   10a90:	ef 92       	push	r14
   10a92:	ff 92       	push	r15
   10a94:	0f 93       	push	r16
   10a96:	1f 93       	push	r17
   10a98:	f9 01       	movw	r30, r18
   10a9a:	97 01       	movw	r18, r14
   10a9c:	a0 e0       	ldi	r26, 0x00	; 0
   10a9e:	b0 e0       	ldi	r27, 0x00	; 0
   10aa0:	ba 2f       	mov	r27, r26
   10aa2:	a9 2f       	mov	r26, r25
   10aa4:	98 2f       	mov	r25, r24
   10aa6:	88 27       	eor	r24, r24
   10aa8:	80 83       	st	Z, r24
   10aaa:	c9 2e       	mov	r12, r25
   10aac:	da 2e       	mov	r13, r26
   10aae:	eb 2e       	mov	r14, r27
   10ab0:	ff 24       	eor	r15, r15
   10ab2:	c2 92       	st	-Z, r12
   10ab4:	cd 01       	movw	r24, r26
   10ab6:	aa 27       	eor	r26, r26
   10ab8:	bb 27       	eor	r27, r27
   10aba:	82 93       	st	-Z, r24
   10abc:	12 92       	st	-Z, r1
   10abe:	12 92       	st	-Z, r1
   10ac0:	80 e8       	ldi	r24, 0x80	; 128
   10ac2:	82 93       	st	-Z, r24
   10ac4:	12 92       	st	-Z, r1
   10ac6:	12 92       	st	-Z, r1
   10ac8:	12 92       	st	-Z, r1
   10aca:	12 92       	st	-Z, r1
   10acc:	12 92       	st	-Z, r1
   10ace:	12 92       	st	-Z, r1
   10ad0:	12 92       	st	-Z, r1
   10ad2:	12 92       	st	-Z, r1
   10ad4:	12 92       	st	-Z, r1
   10ad6:	12 92       	st	-Z, r1
   10ad8:	12 92       	st	-Z, r1
   10ada:	12 92       	st	-Z, r1
   10adc:	12 92       	st	-Z, r1
   10ade:	12 92       	st	-Z, r1
   10ae0:	12 92       	st	-Z, r1
   10ae2:	12 92       	st	-Z, r1
   10ae4:	12 92       	st	-Z, r1
   10ae6:	12 92       	st	-Z, r1
   10ae8:	12 92       	st	-Z, r1
   10aea:	12 92       	st	-Z, r1
   10aec:	12 92       	st	-Z, r1
   10aee:	42 93       	st	-Z, r20
   10af0:	45 2f       	mov	r20, r21
   10af2:	55 0f       	add	r21, r21
   10af4:	55 0b       	sbc	r21, r21
   10af6:	42 93       	st	-Z, r20
   10af8:	62 93       	st	-Z, r22
   10afa:	67 2f       	mov	r22, r23
   10afc:	77 0f       	add	r23, r23
   10afe:	77 0b       	sbc	r23, r23
   10b00:	62 93       	st	-Z, r22
   10b02:	12 92       	st	-Z, r1
   10b04:	12 92       	st	-Z, r1
   10b06:	02 93       	st	-Z, r16
   10b08:	12 93       	st	-Z, r17
   10b0a:	12 92       	st	-Z, r1
   10b0c:	12 92       	st	-Z, r1
   10b0e:	31 97       	sbiw	r30, 0x01	; 1
   10b10:	d9 01       	movw	r26, r18
   10b12:	ed 93       	st	X+, r30
   10b14:	fc 93       	st	X, r31
   10b16:	1f 91       	pop	r17
   10b18:	0f 91       	pop	r16
   10b1a:	ff 90       	pop	r15
   10b1c:	ef 90       	pop	r14
   10b1e:	df 90       	pop	r13
   10b20:	cf 90       	pop	r12
   10b22:	08 95       	ret

00010b24 <arb_stackOverflow>:
   10b24:	0f 93       	push	r16
   10b26:	1f 93       	push	r17
   10b28:	df 93       	push	r29
   10b2a:	cf 93       	push	r28
   10b2c:	0f 92       	push	r0
   10b2e:	cd b7       	in	r28, 0x3d	; 61
   10b30:	de b7       	in	r29, 0x3e	; 62
   10b32:	8f b7       	in	r24, 0x3f	; 63
   10b34:	89 83       	std	Y+1, r24	; 0x01
   10b36:	f8 94       	cli
   10b38:	84 e0       	ldi	r24, 0x04	; 4
   10b3a:	0e 94 f8 6f 	call	0xdff0	; 0xdff0 <arb_setPrintfDbgLevel>
   10b3e:	00 d0       	rcall	.+0      	; 0x10b40 <arb_stackOverflow+0x1c>
   10b40:	00 d0       	rcall	.+0      	; 0x10b42 <arb_stackOverflow+0x1e>
   10b42:	ad b7       	in	r26, 0x3d	; 61
   10b44:	be b7       	in	r27, 0x3e	; 62
   10b46:	11 96       	adiw	r26, 0x01	; 1
   10b48:	04 e2       	ldi	r16, 0x24	; 36
   10b4a:	15 e2       	ldi	r17, 0x25	; 37
   10b4c:	ed b7       	in	r30, 0x3d	; 61
   10b4e:	fe b7       	in	r31, 0x3e	; 62
   10b50:	01 83       	std	Z+1, r16	; 0x01
   10b52:	12 83       	std	Z+2, r17	; 0x02
   10b54:	8d ea       	ldi	r24, 0xAD	; 173
   10b56:	92 e2       	ldi	r25, 0x22	; 34
   10b58:	12 96       	adiw	r26, 0x02	; 2
   10b5a:	8d 93       	st	X+, r24
   10b5c:	9c 93       	st	X, r25
   10b5e:	13 97       	sbiw	r26, 0x03	; 3
   10b60:	e0 91 ec 24 	lds	r30, 0x24EC
   10b64:	f0 91 ed 24 	lds	r31, 0x24ED
   10b68:	80 81       	ld	r24, Z
   10b6a:	14 96       	adiw	r26, 0x04	; 4
   10b6c:	8c 93       	st	X, r24
   10b6e:	14 97       	sbiw	r26, 0x04	; 4
   10b70:	15 96       	adiw	r26, 0x05	; 5
   10b72:	1c 92       	st	X, r1
   10b74:	0e 94 7a b1 	call	0x162f4	; 0x162f4 <sprintf>
   10b78:	8d b7       	in	r24, 0x3d	; 61
   10b7a:	9e b7       	in	r25, 0x3e	; 62
   10b7c:	06 96       	adiw	r24, 0x06	; 6
   10b7e:	8d bf       	out	0x3d, r24	; 61
   10b80:	9e bf       	out	0x3e, r25	; 62
   10b82:	84 e4       	ldi	r24, 0x44	; 68
   10b84:	b8 01       	movw	r22, r16
   10b86:	0e 94 87 71 	call	0xe30e	; 0xe30e <arb_printf>
   10b8a:	0e 94 76 70 	call	0xe0ec	; 0xe0ec <arb_printfFlushBuf>
   10b8e:	80 e0       	ldi	r24, 0x00	; 0
   10b90:	90 e0       	ldi	r25, 0x00	; 0
   10b92:	0e 94 bc af 	call	0x15f78	; 0x15f78 <exit>

00010b96 <arb_idleInit>:
   10b96:	0f 93       	push	r16
   10b98:	9c 01       	movw	r18, r24
   10b9a:	06 2f       	mov	r16, r22
   10b9c:	82 e0       	ldi	r24, 0x02	; 2
   10b9e:	96 e8       	ldi	r25, 0x86	; 134
   10ba0:	6a ea       	ldi	r22, 0xAA	; 170
   10ba2:	70 e0       	ldi	r23, 0x00	; 0
   10ba4:	4b eb       	ldi	r20, 0xBB	; 187
   10ba6:	50 e0       	ldi	r21, 0x00	; 0
   10ba8:	0e 94 5b 83 	call	0x106b6	; 0x106b6 <arb_threadCreate>
   10bac:	80 93 42 25 	sts	0x2542, r24
   10bb0:	90 93 43 25 	sts	0x2543, r25
   10bb4:	80 91 42 25 	lds	r24, 0x2542
   10bb8:	90 91 43 25 	lds	r25, 0x2543
   10bbc:	97 fd       	sbrc	r25, 7
   10bbe:	18 c0       	rjmp	.+48     	; 0x10bf0 <arb_idleInit+0x5a>
   10bc0:	0e 94 6c 60 	call	0xc0d8	; 0xc0d8 <hal_requestWdAccess>
   10bc4:	80 93 44 25 	sts	0x2544, r24
   10bc8:	90 93 45 25 	sts	0x2545, r25
   10bcc:	80 91 44 25 	lds	r24, 0x2544
   10bd0:	90 91 45 25 	lds	r25, 0x2545
   10bd4:	97 fd       	sbrc	r25, 7
   10bd6:	11 c0       	rjmp	.+34     	; 0x10bfa <arb_idleInit+0x64>
   10bd8:	80 91 44 25 	lds	r24, 0x2544
   10bdc:	90 91 45 25 	lds	r25, 0x2545
   10be0:	40 e4       	ldi	r20, 0x40	; 64
   10be2:	5f e1       	ldi	r21, 0x1F	; 31
   10be4:	60 e0       	ldi	r22, 0x00	; 0
   10be6:	70 e0       	ldi	r23, 0x00	; 0
   10be8:	0e 94 db 60 	call	0xc1b6	; 0xc1b6 <hal_configureWd>
   10bec:	88 23       	and	r24, r24
   10bee:	29 f4       	brne	.+10     	; 0x10bfa <arb_idleInit+0x64>
   10bf0:	20 91 42 25 	lds	r18, 0x2542
   10bf4:	30 91 43 25 	lds	r19, 0x2543
   10bf8:	02 c0       	rjmp	.+4      	; 0x10bfe <arb_idleInit+0x68>
   10bfa:	26 ef       	ldi	r18, 0xF6	; 246
   10bfc:	3f ef       	ldi	r19, 0xFF	; 255
   10bfe:	c9 01       	movw	r24, r18
   10c00:	0f 91       	pop	r16
   10c02:	08 95       	ret

00010c04 <arb_idle>:
   10c04:	2f 92       	push	r2
   10c06:	3f 92       	push	r3
   10c08:	4f 92       	push	r4
   10c0a:	5f 92       	push	r5
   10c0c:	6f 92       	push	r6
   10c0e:	7f 92       	push	r7
   10c10:	8f 92       	push	r8
   10c12:	9f 92       	push	r9
   10c14:	af 92       	push	r10
   10c16:	bf 92       	push	r11
   10c18:	cf 92       	push	r12
   10c1a:	df 92       	push	r13
   10c1c:	ef 92       	push	r14
   10c1e:	ff 92       	push	r15
   10c20:	0f 93       	push	r16
   10c22:	1f 93       	push	r17
   10c24:	df 93       	push	r29
   10c26:	cf 93       	push	r28
   10c28:	cd b7       	in	r28, 0x3d	; 61
   10c2a:	de b7       	in	r29, 0x3e	; 62
   10c2c:	c8 56       	subi	r28, 0x68	; 104
   10c2e:	d0 40       	sbci	r29, 0x00	; 0
   10c30:	cd bf       	out	0x3d, r28	; 61
   10c32:	de bf       	out	0x3e, r29	; 62
   10c34:	80 91 44 25 	lds	r24, 0x2544
   10c38:	90 91 45 25 	lds	r25, 0x2545
   10c3c:	0e 94 a3 61 	call	0xc346	; 0xc346 <hal_wdEnable>
   10c40:	a6 96       	adiw	r28, 0x26	; 38
   10c42:	1f ae       	std	Y+63, r1	; 0x3f
   10c44:	a6 97       	sbiw	r28, 0x26	; 38
   10c46:	a7 96       	adiw	r28, 0x27	; 39
   10c48:	1f ae       	std	Y+63, r1	; 0x3f
   10c4a:	a7 97       	sbiw	r28, 0x27	; 39
   10c4c:	a8 96       	adiw	r28, 0x28	; 40
   10c4e:	1f ae       	std	Y+63, r1	; 0x3f
   10c50:	a8 97       	sbiw	r28, 0x28	; 40
   10c52:	a9 96       	adiw	r28, 0x29	; 41
   10c54:	1f ae       	std	Y+63, r1	; 0x3f
   10c56:	a9 97       	sbiw	r28, 0x29	; 41
   10c58:	22 24       	eor	r2, r2
   10c5a:	33 24       	eor	r3, r3
   10c5c:	44 24       	eor	r4, r4
   10c5e:	55 24       	eor	r5, r5
   10c60:	66 24       	eor	r6, r6
   10c62:	77 24       	eor	r7, r7
   10c64:	43 01       	movw	r8, r6
   10c66:	0e 94 8b 7f 	call	0xff16	; 0xff16 <arb_sysMsecNow>
   10c6a:	a6 96       	adiw	r28, 0x26	; 38
   10c6c:	af ac       	ldd	r10, Y+63	; 0x3f
   10c6e:	a6 97       	sbiw	r28, 0x26	; 38
   10c70:	a7 96       	adiw	r28, 0x27	; 39
   10c72:	bf ac       	ldd	r11, Y+63	; 0x3f
   10c74:	a7 97       	sbiw	r28, 0x27	; 39
   10c76:	a8 96       	adiw	r28, 0x28	; 40
   10c78:	cf ac       	ldd	r12, Y+63	; 0x3f
   10c7a:	a8 97       	sbiw	r28, 0x28	; 40
   10c7c:	a9 96       	adiw	r28, 0x29	; 41
   10c7e:	df ac       	ldd	r13, Y+63	; 0x3f
   10c80:	a9 97       	sbiw	r28, 0x29	; 41
   10c82:	71 01       	movw	r14, r2
   10c84:	82 01       	movw	r16, r4
   10c86:	0e 94 9c 7f 	call	0xff38	; 0xff38 <arb_sysMsecDelta>
   10c8a:	99 23       	and	r25, r25
   10c8c:	91 f4       	brne	.+36     	; 0x10cb2 <arb_idle+0xae>
   10c8e:	88 23       	and	r24, r24
   10c90:	81 f4       	brne	.+32     	; 0x10cb2 <arb_idle+0xae>
   10c92:	77 23       	and	r23, r23
   10c94:	71 f4       	brne	.+28     	; 0x10cb2 <arb_idle+0xae>
   10c96:	66 23       	and	r22, r22
   10c98:	61 f4       	brne	.+24     	; 0x10cb2 <arb_idle+0xae>
   10c9a:	55 23       	and	r21, r21
   10c9c:	51 f4       	brne	.+20     	; 0x10cb2 <arb_idle+0xae>
   10c9e:	44 23       	and	r20, r20
   10ca0:	41 f4       	brne	.+16     	; 0x10cb2 <arb_idle+0xae>
   10ca2:	38 30       	cpi	r19, 0x08	; 8
   10ca4:	30 f4       	brcc	.+12     	; 0x10cb2 <arb_idle+0xae>
   10ca6:	37 30       	cpi	r19, 0x07	; 7
   10ca8:	09 f0       	breq	.+2      	; 0x10cac <arb_idle+0xa8>
   10caa:	45 c0       	rjmp	.+138    	; 0x10d36 <arb_idle+0x132>
   10cac:	20 3d       	cpi	r18, 0xD0	; 208
   10cae:	08 f4       	brcc	.+2      	; 0x10cb2 <arb_idle+0xae>
   10cb0:	42 c0       	rjmp	.+132    	; 0x10d36 <arb_idle+0x132>
   10cb2:	08 94       	sec
   10cb4:	61 1c       	adc	r6, r1
   10cb6:	71 1c       	adc	r7, r1
   10cb8:	81 1c       	adc	r8, r1
   10cba:	91 1c       	adc	r9, r1
   10cbc:	0e 94 8b 7f 	call	0xff16	; 0xff16 <arb_sysMsecNow>
   10cc0:	a6 96       	adiw	r28, 0x26	; 38
   10cc2:	2f af       	std	Y+63, r18	; 0x3f
   10cc4:	a6 97       	sbiw	r28, 0x26	; 38
   10cc6:	a7 96       	adiw	r28, 0x27	; 39
   10cc8:	3f af       	std	Y+63, r19	; 0x3f
   10cca:	a7 97       	sbiw	r28, 0x27	; 39
   10ccc:	a8 96       	adiw	r28, 0x28	; 40
   10cce:	4f af       	std	Y+63, r20	; 0x3f
   10cd0:	a8 97       	sbiw	r28, 0x28	; 40
   10cd2:	a9 96       	adiw	r28, 0x29	; 41
   10cd4:	5f af       	std	Y+63, r21	; 0x3f
   10cd6:	a9 97       	sbiw	r28, 0x29	; 41
   10cd8:	1b 01       	movw	r2, r22
   10cda:	2c 01       	movw	r4, r24
   10cdc:	8d b7       	in	r24, 0x3d	; 61
   10cde:	9e b7       	in	r25, 0x3e	; 62
   10ce0:	08 97       	sbiw	r24, 0x08	; 8
   10ce2:	8d bf       	out	0x3d, r24	; 61
   10ce4:	9e bf       	out	0x3e, r25	; 62
   10ce6:	0d b7       	in	r16, 0x3d	; 61
   10ce8:	1e b7       	in	r17, 0x3e	; 62
   10cea:	0f 5f       	subi	r16, 0xFF	; 255
   10cec:	1f 4f       	sbci	r17, 0xFF	; 255
   10cee:	81 e0       	ldi	r24, 0x01	; 1
   10cf0:	90 e0       	ldi	r25, 0x00	; 0
   10cf2:	8c 0f       	add	r24, r28
   10cf4:	9d 1f       	adc	r25, r29
   10cf6:	ed b7       	in	r30, 0x3d	; 61
   10cf8:	fe b7       	in	r31, 0x3e	; 62
   10cfa:	81 83       	std	Z+1, r24	; 0x01
   10cfc:	92 83       	std	Z+2, r25	; 0x02
   10cfe:	8c ec       	ldi	r24, 0xCC	; 204
   10d00:	92 e2       	ldi	r25, 0x22	; 34
   10d02:	f8 01       	movw	r30, r16
   10d04:	82 83       	std	Z+2, r24	; 0x02
   10d06:	93 83       	std	Z+3, r25	; 0x03
   10d08:	c4 01       	movw	r24, r8
   10d0a:	b3 01       	movw	r22, r6
   10d0c:	0e 94 a5 ac 	call	0x1594a	; 0x1594a <__floatunsisf>
   10d10:	f8 01       	movw	r30, r16
   10d12:	64 83       	std	Z+4, r22	; 0x04
   10d14:	75 83       	std	Z+5, r23	; 0x05
   10d16:	86 83       	std	Z+6, r24	; 0x06
   10d18:	97 83       	std	Z+7, r25	; 0x07
   10d1a:	0e 94 7a b1 	call	0x162f4	; 0x162f4 <sprintf>
   10d1e:	8d b7       	in	r24, 0x3d	; 61
   10d20:	9e b7       	in	r25, 0x3e	; 62
   10d22:	08 96       	adiw	r24, 0x08	; 8
   10d24:	8d bf       	out	0x3d, r24	; 61
   10d26:	9e bf       	out	0x3e, r25	; 62
   10d28:	81 e4       	ldi	r24, 0x41	; 65
   10d2a:	be 01       	movw	r22, r28
   10d2c:	6f 5f       	subi	r22, 0xFF	; 255
   10d2e:	7f 4f       	sbci	r23, 0xFF	; 255
   10d30:	0e 94 87 71 	call	0xe30e	; 0xe30e <arb_printf>
   10d34:	a8 95       	wdr
   10d36:	0e 94 76 70 	call	0xe0ec	; 0xe0ec <arb_printfFlushBuf>
   10d3a:	95 cf       	rjmp	.-214    	; 0x10c66 <arb_idle+0x62>

00010d3c <utl_getBufferFullLevel>:
   10d3c:	df 93       	push	r29
   10d3e:	cf 93       	push	r28
   10d40:	0f 92       	push	r0
   10d42:	0f 92       	push	r0
   10d44:	cd b7       	in	r28, 0x3d	; 61
   10d46:	de b7       	in	r29, 0x3e	; 62
   10d48:	89 83       	std	Y+1, r24	; 0x01
   10d4a:	9a 83       	std	Y+2, r25	; 0x02
   10d4c:	e9 81       	ldd	r30, Y+1	; 0x01
   10d4e:	fa 81       	ldd	r31, Y+2	; 0x02
   10d50:	01 90       	ld	r0, Z+
   10d52:	f0 81       	ld	r31, Z
   10d54:	e0 2d       	mov	r30, r0
   10d56:	84 81       	ldd	r24, Z+4	; 0x04
   10d58:	95 81       	ldd	r25, Z+5	; 0x05
   10d5a:	0f 90       	pop	r0
   10d5c:	0f 90       	pop	r0
   10d5e:	cf 91       	pop	r28
   10d60:	df 91       	pop	r29
   10d62:	08 95       	ret

00010d64 <utl_getBufferSize>:
   10d64:	df 93       	push	r29
   10d66:	cf 93       	push	r28
   10d68:	0f 92       	push	r0
   10d6a:	0f 92       	push	r0
   10d6c:	cd b7       	in	r28, 0x3d	; 61
   10d6e:	de b7       	in	r29, 0x3e	; 62
   10d70:	89 83       	std	Y+1, r24	; 0x01
   10d72:	9a 83       	std	Y+2, r25	; 0x02
   10d74:	e9 81       	ldd	r30, Y+1	; 0x01
   10d76:	fa 81       	ldd	r31, Y+2	; 0x02
   10d78:	01 90       	ld	r0, Z+
   10d7a:	f0 81       	ld	r31, Z
   10d7c:	e0 2d       	mov	r30, r0
   10d7e:	86 81       	ldd	r24, Z+6	; 0x06
   10d80:	97 81       	ldd	r25, Z+7	; 0x07
   10d82:	0f 90       	pop	r0
   10d84:	0f 90       	pop	r0
   10d86:	cf 91       	pop	r28
   10d88:	df 91       	pop	r29
   10d8a:	08 95       	ret

00010d8c <utl_getBufferPtr>:
   10d8c:	df 93       	push	r29
   10d8e:	cf 93       	push	r28
   10d90:	0f 92       	push	r0
   10d92:	0f 92       	push	r0
   10d94:	cd b7       	in	r28, 0x3d	; 61
   10d96:	de b7       	in	r29, 0x3e	; 62
   10d98:	89 83       	std	Y+1, r24	; 0x01
   10d9a:	9a 83       	std	Y+2, r25	; 0x02
   10d9c:	e9 81       	ldd	r30, Y+1	; 0x01
   10d9e:	fa 81       	ldd	r31, Y+2	; 0x02
   10da0:	01 90       	ld	r0, Z+
   10da2:	f0 81       	ld	r31, Z
   10da4:	e0 2d       	mov	r30, r0
   10da6:	80 85       	ldd	r24, Z+8	; 0x08
   10da8:	91 85       	ldd	r25, Z+9	; 0x09
   10daa:	0f 90       	pop	r0
   10dac:	0f 90       	pop	r0
   10dae:	cf 91       	pop	r28
   10db0:	df 91       	pop	r29
   10db2:	08 95       	ret

00010db4 <utl_writeByte>:
   10db4:	df 93       	push	r29
   10db6:	cf 93       	push	r28
   10db8:	0f 92       	push	r0
   10dba:	0f 92       	push	r0
   10dbc:	cd b7       	in	r28, 0x3d	; 61
   10dbe:	de b7       	in	r29, 0x3e	; 62
   10dc0:	89 83       	std	Y+1, r24	; 0x01
   10dc2:	9a 83       	std	Y+2, r25	; 0x02
   10dc4:	e9 81       	ldd	r30, Y+1	; 0x01
   10dc6:	fa 81       	ldd	r31, Y+2	; 0x02
   10dc8:	a0 81       	ld	r26, Z
   10dca:	b1 81       	ldd	r27, Z+1	; 0x01
   10dcc:	18 96       	adiw	r26, 0x08	; 8
   10dce:	ed 91       	ld	r30, X+
   10dd0:	fc 91       	ld	r31, X
   10dd2:	19 97       	sbiw	r26, 0x09	; 9
   10dd4:	8d 91       	ld	r24, X+
   10dd6:	9c 91       	ld	r25, X
   10dd8:	11 97       	sbiw	r26, 0x01	; 1
   10dda:	e8 0f       	add	r30, r24
   10ddc:	f9 1f       	adc	r31, r25
   10dde:	60 83       	st	Z, r22
   10de0:	8d 91       	ld	r24, X+
   10de2:	9c 91       	ld	r25, X
   10de4:	11 97       	sbiw	r26, 0x01	; 1
   10de6:	01 96       	adiw	r24, 0x01	; 1
   10de8:	8d 93       	st	X+, r24
   10dea:	9c 93       	st	X, r25
   10dec:	11 97       	sbiw	r26, 0x01	; 1
   10dee:	16 96       	adiw	r26, 0x06	; 6
   10df0:	2d 91       	ld	r18, X+
   10df2:	3c 91       	ld	r19, X
   10df4:	17 97       	sbiw	r26, 0x07	; 7
   10df6:	82 17       	cp	r24, r18
   10df8:	93 07       	cpc	r25, r19
   10dfa:	19 f4       	brne	.+6      	; 0x10e02 <utl_writeByte+0x4e>
   10dfc:	1d 92       	st	X+, r1
   10dfe:	1c 92       	st	X, r1
   10e00:	11 97       	sbiw	r26, 0x01	; 1
   10e02:	14 96       	adiw	r26, 0x04	; 4
   10e04:	8d 91       	ld	r24, X+
   10e06:	9c 91       	ld	r25, X
   10e08:	15 97       	sbiw	r26, 0x05	; 5
   10e0a:	01 96       	adiw	r24, 0x01	; 1
   10e0c:	14 96       	adiw	r26, 0x04	; 4
   10e0e:	8d 93       	st	X+, r24
   10e10:	9c 93       	st	X, r25
   10e12:	15 97       	sbiw	r26, 0x05	; 5
   10e14:	0f 90       	pop	r0
   10e16:	0f 90       	pop	r0
   10e18:	cf 91       	pop	r28
   10e1a:	df 91       	pop	r29
   10e1c:	08 95       	ret

00010e1e <utl_incrBufRdPtr>:
   10e1e:	df 93       	push	r29
   10e20:	cf 93       	push	r28
   10e22:	0f 92       	push	r0
   10e24:	0f 92       	push	r0
   10e26:	cd b7       	in	r28, 0x3d	; 61
   10e28:	de b7       	in	r29, 0x3e	; 62
   10e2a:	89 83       	std	Y+1, r24	; 0x01
   10e2c:	9a 83       	std	Y+2, r25	; 0x02
   10e2e:	e9 81       	ldd	r30, Y+1	; 0x01
   10e30:	fa 81       	ldd	r31, Y+2	; 0x02
   10e32:	01 90       	ld	r0, Z+
   10e34:	f0 81       	ld	r31, Z
   10e36:	e0 2d       	mov	r30, r0
   10e38:	82 81       	ldd	r24, Z+2	; 0x02
   10e3a:	93 81       	ldd	r25, Z+3	; 0x03
   10e3c:	86 0f       	add	r24, r22
   10e3e:	97 1f       	adc	r25, r23
   10e40:	82 83       	std	Z+2, r24	; 0x02
   10e42:	93 83       	std	Z+3, r25	; 0x03
   10e44:	26 81       	ldd	r18, Z+6	; 0x06
   10e46:	37 81       	ldd	r19, Z+7	; 0x07
   10e48:	82 17       	cp	r24, r18
   10e4a:	93 07       	cpc	r25, r19
   10e4c:	20 f0       	brcs	.+8      	; 0x10e56 <utl_incrBufRdPtr+0x38>
   10e4e:	82 1b       	sub	r24, r18
   10e50:	93 0b       	sbc	r25, r19
   10e52:	82 83       	std	Z+2, r24	; 0x02
   10e54:	93 83       	std	Z+3, r25	; 0x03
   10e56:	84 81       	ldd	r24, Z+4	; 0x04
   10e58:	95 81       	ldd	r25, Z+5	; 0x05
   10e5a:	86 1b       	sub	r24, r22
   10e5c:	97 0b       	sbc	r25, r23
   10e5e:	84 83       	std	Z+4, r24	; 0x04
   10e60:	95 83       	std	Z+5, r25	; 0x05
   10e62:	0f 90       	pop	r0
   10e64:	0f 90       	pop	r0
   10e66:	cf 91       	pop	r28
   10e68:	df 91       	pop	r29
   10e6a:	08 95       	ret

00010e6c <utl_getBufRdPtr>:
   10e6c:	df 93       	push	r29
   10e6e:	cf 93       	push	r28
   10e70:	0f 92       	push	r0
   10e72:	0f 92       	push	r0
   10e74:	cd b7       	in	r28, 0x3d	; 61
   10e76:	de b7       	in	r29, 0x3e	; 62
   10e78:	89 83       	std	Y+1, r24	; 0x01
   10e7a:	9a 83       	std	Y+2, r25	; 0x02
   10e7c:	e9 81       	ldd	r30, Y+1	; 0x01
   10e7e:	fa 81       	ldd	r31, Y+2	; 0x02
   10e80:	01 90       	ld	r0, Z+
   10e82:	f0 81       	ld	r31, Z
   10e84:	e0 2d       	mov	r30, r0
   10e86:	82 81       	ldd	r24, Z+2	; 0x02
   10e88:	93 81       	ldd	r25, Z+3	; 0x03
   10e8a:	0f 90       	pop	r0
   10e8c:	0f 90       	pop	r0
   10e8e:	cf 91       	pop	r28
   10e90:	df 91       	pop	r29
   10e92:	08 95       	ret

00010e94 <utl_buffEraseTailByte>:
   10e94:	df 93       	push	r29
   10e96:	cf 93       	push	r28
   10e98:	0f 92       	push	r0
   10e9a:	0f 92       	push	r0
   10e9c:	cd b7       	in	r28, 0x3d	; 61
   10e9e:	de b7       	in	r29, 0x3e	; 62
   10ea0:	89 83       	std	Y+1, r24	; 0x01
   10ea2:	9a 83       	std	Y+2, r25	; 0x02
   10ea4:	e9 81       	ldd	r30, Y+1	; 0x01
   10ea6:	fa 81       	ldd	r31, Y+2	; 0x02
   10ea8:	a0 81       	ld	r26, Z
   10eaa:	b1 81       	ldd	r27, Z+1	; 0x01
   10eac:	8d 91       	ld	r24, X+
   10eae:	9c 91       	ld	r25, X
   10eb0:	11 97       	sbiw	r26, 0x01	; 1
   10eb2:	01 97       	sbiw	r24, 0x01	; 1
   10eb4:	8d 93       	st	X+, r24
   10eb6:	9c 93       	st	X, r25
   10eb8:	11 97       	sbiw	r26, 0x01	; 1
   10eba:	97 ff       	sbrs	r25, 7
   10ebc:	08 c0       	rjmp	.+16     	; 0x10ece <utl_buffEraseTailByte+0x3a>
   10ebe:	16 96       	adiw	r26, 0x06	; 6
   10ec0:	8d 91       	ld	r24, X+
   10ec2:	9c 91       	ld	r25, X
   10ec4:	17 97       	sbiw	r26, 0x07	; 7
   10ec6:	01 97       	sbiw	r24, 0x01	; 1
   10ec8:	8d 93       	st	X+, r24
   10eca:	9c 93       	st	X, r25
   10ecc:	11 97       	sbiw	r26, 0x01	; 1
   10ece:	18 96       	adiw	r26, 0x08	; 8
   10ed0:	ed 91       	ld	r30, X+
   10ed2:	fc 91       	ld	r31, X
   10ed4:	19 97       	sbiw	r26, 0x09	; 9
   10ed6:	8d 91       	ld	r24, X+
   10ed8:	9c 91       	ld	r25, X
   10eda:	11 97       	sbiw	r26, 0x01	; 1
   10edc:	e8 0f       	add	r30, r24
   10ede:	f9 1f       	adc	r31, r25
   10ee0:	10 82       	st	Z, r1
   10ee2:	14 96       	adiw	r26, 0x04	; 4
   10ee4:	8d 91       	ld	r24, X+
   10ee6:	9c 91       	ld	r25, X
   10ee8:	15 97       	sbiw	r26, 0x05	; 5
   10eea:	01 97       	sbiw	r24, 0x01	; 1
   10eec:	14 96       	adiw	r26, 0x04	; 4
   10eee:	8d 93       	st	X+, r24
   10ef0:	9c 93       	st	X, r25
   10ef2:	15 97       	sbiw	r26, 0x05	; 5
   10ef4:	0f 90       	pop	r0
   10ef6:	0f 90       	pop	r0
   10ef8:	cf 91       	pop	r28
   10efa:	df 91       	pop	r29
   10efc:	08 95       	ret

00010efe <ult_resetBuffer>:
   10efe:	df 93       	push	r29
   10f00:	cf 93       	push	r28
   10f02:	0f 92       	push	r0
   10f04:	0f 92       	push	r0
   10f06:	cd b7       	in	r28, 0x3d	; 61
   10f08:	de b7       	in	r29, 0x3e	; 62
   10f0a:	89 83       	std	Y+1, r24	; 0x01
   10f0c:	9a 83       	std	Y+2, r25	; 0x02
   10f0e:	e9 81       	ldd	r30, Y+1	; 0x01
   10f10:	fa 81       	ldd	r31, Y+2	; 0x02
   10f12:	01 90       	ld	r0, Z+
   10f14:	f0 81       	ld	r31, Z
   10f16:	e0 2d       	mov	r30, r0
   10f18:	12 82       	std	Z+2, r1	; 0x02
   10f1a:	13 82       	std	Z+3, r1	; 0x03
   10f1c:	10 82       	st	Z, r1
   10f1e:	11 82       	std	Z+1, r1	; 0x01
   10f20:	14 82       	std	Z+4, r1	; 0x04
   10f22:	15 82       	std	Z+5, r1	; 0x05
   10f24:	0f 90       	pop	r0
   10f26:	0f 90       	pop	r0
   10f28:	cf 91       	pop	r28
   10f2a:	df 91       	pop	r29
   10f2c:	08 95       	ret

00010f2e <utl_destroyBuffer>:
   10f2e:	df 93       	push	r29
   10f30:	cf 93       	push	r28
   10f32:	00 d0       	rcall	.+0      	; 0x10f34 <utl_destroyBuffer+0x6>
   10f34:	cd b7       	in	r28, 0x3d	; 61
   10f36:	de b7       	in	r29, 0x3e	; 62
   10f38:	8a 83       	std	Y+2, r24	; 0x02
   10f3a:	9b 83       	std	Y+3, r25	; 0x03
   10f3c:	8f b7       	in	r24, 0x3f	; 63
   10f3e:	89 83       	std	Y+1, r24	; 0x01
   10f40:	f8 94       	cli
   10f42:	80 91 f6 22 	lds	r24, 0x22F6
   10f46:	90 91 f7 22 	lds	r25, 0x22F7
   10f4a:	6a 81       	ldd	r22, Y+2	; 0x02
   10f4c:	7b 81       	ldd	r23, Y+3	; 0x03
   10f4e:	0e 94 c4 89 	call	0x11388	; 0x11388 <utl_destroyLink>
   10f52:	87 ff       	sbrs	r24, 7
   10f54:	04 c0       	rjmp	.+8      	; 0x10f5e <utl_destroyBuffer+0x30>
   10f56:	89 81       	ldd	r24, Y+1	; 0x01
   10f58:	8f bf       	out	0x3f, r24	; 63
   10f5a:	8d ef       	ldi	r24, 0xFD	; 253
   10f5c:	03 c0       	rjmp	.+6      	; 0x10f64 <utl_destroyBuffer+0x36>
   10f5e:	89 81       	ldd	r24, Y+1	; 0x01
   10f60:	8f bf       	out	0x3f, r24	; 63
   10f62:	80 e0       	ldi	r24, 0x00	; 0
   10f64:	23 96       	adiw	r28, 0x03	; 3
   10f66:	cd bf       	out	0x3d, r28	; 61
   10f68:	de bf       	out	0x3e, r29	; 62
   10f6a:	cf 91       	pop	r28
   10f6c:	df 91       	pop	r29
   10f6e:	08 95       	ret

00010f70 <utl_createBuffer>:
   10f70:	df 92       	push	r13
   10f72:	ef 92       	push	r14
   10f74:	ff 92       	push	r15
   10f76:	0f 93       	push	r16
   10f78:	1f 93       	push	r17
   10f7a:	df 93       	push	r29
   10f7c:	cf 93       	push	r28
   10f7e:	00 d0       	rcall	.+0      	; 0x10f80 <utl_createBuffer+0x10>
   10f80:	cd b7       	in	r28, 0x3d	; 61
   10f82:	de b7       	in	r29, 0x3e	; 62
   10f84:	d9 2e       	mov	r13, r25
   10f86:	9f b7       	in	r25, 0x3f	; 63
   10f88:	99 83       	std	Y+1, r25	; 0x01
   10f8a:	f8 94       	cli
   10f8c:	e8 2e       	mov	r14, r24
   10f8e:	fd 2c       	mov	r15, r13
   10f90:	c7 01       	movw	r24, r14
   10f92:	0a 96       	adiw	r24, 0x0a	; 10
   10f94:	0e 94 b8 8a 	call	0x11570	; 0x11570 <utl_createLink>
   10f98:	8a 83       	std	Y+2, r24	; 0x02
   10f9a:	9b 83       	std	Y+3, r25	; 0x03
   10f9c:	8a 81       	ldd	r24, Y+2	; 0x02
   10f9e:	9b 81       	ldd	r25, Y+3	; 0x03
   10fa0:	97 ff       	sbrs	r25, 7
   10fa2:	05 c0       	rjmp	.+10     	; 0x10fae <utl_createBuffer+0x3e>
   10fa4:	89 81       	ldd	r24, Y+1	; 0x01
   10fa6:	8f bf       	out	0x3f, r24	; 63
   10fa8:	2f ef       	ldi	r18, 0xFF	; 255
   10faa:	3f ef       	ldi	r19, 0xFF	; 255
   10fac:	27 c0       	rjmp	.+78     	; 0x10ffc <utl_createBuffer+0x8c>
   10fae:	ea 81       	ldd	r30, Y+2	; 0x02
   10fb0:	fb 81       	ldd	r31, Y+3	; 0x03
   10fb2:	00 81       	ld	r16, Z
   10fb4:	11 81       	ldd	r17, Z+1	; 0x01
   10fb6:	f8 01       	movw	r30, r16
   10fb8:	10 82       	st	Z, r1
   10fba:	11 82       	std	Z+1, r1	; 0x01
   10fbc:	12 82       	std	Z+2, r1	; 0x02
   10fbe:	13 82       	std	Z+3, r1	; 0x03
   10fc0:	14 82       	std	Z+4, r1	; 0x04
   10fc2:	15 82       	std	Z+5, r1	; 0x05
   10fc4:	98 01       	movw	r18, r16
   10fc6:	26 5f       	subi	r18, 0xF6	; 246
   10fc8:	3f 4f       	sbci	r19, 0xFF	; 255
   10fca:	20 87       	std	Z+8, r18	; 0x08
   10fcc:	31 87       	std	Z+9, r19	; 0x09
   10fce:	c9 01       	movw	r24, r18
   10fd0:	60 e0       	ldi	r22, 0x00	; 0
   10fd2:	70 e0       	ldi	r23, 0x00	; 0
   10fd4:	4e 2d       	mov	r20, r14
   10fd6:	5d 2d       	mov	r21, r13
   10fd8:	0e 94 d0 b0 	call	0x161a0	; 0x161a0 <memset>
   10fdc:	f8 01       	movw	r30, r16
   10fde:	e6 82       	std	Z+6, r14	; 0x06
   10fe0:	f7 82       	std	Z+7, r15	; 0x07
   10fe2:	80 91 f6 22 	lds	r24, 0x22F6
   10fe6:	90 91 f7 22 	lds	r25, 0x22F7
   10fea:	6a 81       	ldd	r22, Y+2	; 0x02
   10fec:	7b 81       	ldd	r23, Y+3	; 0x03
   10fee:	41 e0       	ldi	r20, 0x01	; 1
   10ff0:	0e 94 c8 88 	call	0x11190	; 0x11190 <utl_insertLink>
   10ff4:	89 81       	ldd	r24, Y+1	; 0x01
   10ff6:	8f bf       	out	0x3f, r24	; 63
   10ff8:	2a 81       	ldd	r18, Y+2	; 0x02
   10ffa:	3b 81       	ldd	r19, Y+3	; 0x03
   10ffc:	c9 01       	movw	r24, r18
   10ffe:	23 96       	adiw	r28, 0x03	; 3
   11000:	cd bf       	out	0x3d, r28	; 61
   11002:	de bf       	out	0x3e, r29	; 62
   11004:	cf 91       	pop	r28
   11006:	df 91       	pop	r29
   11008:	1f 91       	pop	r17
   1100a:	0f 91       	pop	r16
   1100c:	ff 90       	pop	r15
   1100e:	ef 90       	pop	r14
   11010:	df 90       	pop	r13
   11012:	08 95       	ret

00011014 <utl_readBlock>:
   11014:	8f 92       	push	r8
   11016:	9f 92       	push	r9
   11018:	af 92       	push	r10
   1101a:	bf 92       	push	r11
   1101c:	cf 92       	push	r12
   1101e:	df 92       	push	r13
   11020:	ef 92       	push	r14
   11022:	ff 92       	push	r15
   11024:	0f 93       	push	r16
   11026:	1f 93       	push	r17
   11028:	df 93       	push	r29
   1102a:	cf 93       	push	r28
   1102c:	0f 92       	push	r0
   1102e:	0f 92       	push	r0
   11030:	cd b7       	in	r28, 0x3d	; 61
   11032:	de b7       	in	r29, 0x3e	; 62
   11034:	89 83       	std	Y+1, r24	; 0x01
   11036:	9a 83       	std	Y+2, r25	; 0x02
   11038:	6b 01       	movw	r12, r22
   1103a:	4a 01       	movw	r8, r20
   1103c:	e9 81       	ldd	r30, Y+1	; 0x01
   1103e:	fa 81       	ldd	r31, Y+2	; 0x02
   11040:	e0 80       	ld	r14, Z
   11042:	f1 80       	ldd	r15, Z+1	; 0x01
   11044:	f7 01       	movw	r30, r14
   11046:	a0 84       	ldd	r10, Z+8	; 0x08
   11048:	b1 84       	ldd	r11, Z+9	; 0x09
   1104a:	82 81       	ldd	r24, Z+2	; 0x02
   1104c:	93 81       	ldd	r25, Z+3	; 0x03
   1104e:	06 81       	ldd	r16, Z+6	; 0x06
   11050:	17 81       	ldd	r17, Z+7	; 0x07
   11052:	08 1b       	sub	r16, r24
   11054:	19 0b       	sbc	r17, r25
   11056:	95 01       	movw	r18, r10
   11058:	28 0f       	add	r18, r24
   1105a:	39 1f       	adc	r19, r25
   1105c:	04 17       	cp	r16, r20
   1105e:	15 07       	cpc	r17, r21
   11060:	78 f4       	brcc	.+30     	; 0x11080 <utl_readBlock+0x6c>
   11062:	cb 01       	movw	r24, r22
   11064:	b9 01       	movw	r22, r18
   11066:	a8 01       	movw	r20, r16
   11068:	0e 94 c7 b0 	call	0x1618e	; 0x1618e <memcpy>
   1106c:	96 01       	movw	r18, r12
   1106e:	20 0f       	add	r18, r16
   11070:	31 1f       	adc	r19, r17
   11072:	f4 01       	movw	r30, r8
   11074:	e0 1b       	sub	r30, r16
   11076:	f1 0b       	sbc	r31, r17
   11078:	c9 01       	movw	r24, r18
   1107a:	b5 01       	movw	r22, r10
   1107c:	af 01       	movw	r20, r30
   1107e:	02 c0       	rjmp	.+4      	; 0x11084 <utl_readBlock+0x70>
   11080:	cb 01       	movw	r24, r22
   11082:	b9 01       	movw	r22, r18
   11084:	0e 94 c7 b0 	call	0x1618e	; 0x1618e <memcpy>
   11088:	f7 01       	movw	r30, r14
   1108a:	82 81       	ldd	r24, Z+2	; 0x02
   1108c:	93 81       	ldd	r25, Z+3	; 0x03
   1108e:	88 0d       	add	r24, r8
   11090:	99 1d       	adc	r25, r9
   11092:	82 83       	std	Z+2, r24	; 0x02
   11094:	93 83       	std	Z+3, r25	; 0x03
   11096:	26 81       	ldd	r18, Z+6	; 0x06
   11098:	37 81       	ldd	r19, Z+7	; 0x07
   1109a:	82 17       	cp	r24, r18
   1109c:	93 07       	cpc	r25, r19
   1109e:	20 f0       	brcs	.+8      	; 0x110a8 <utl_readBlock+0x94>
   110a0:	82 1b       	sub	r24, r18
   110a2:	93 0b       	sbc	r25, r19
   110a4:	82 83       	std	Z+2, r24	; 0x02
   110a6:	93 83       	std	Z+3, r25	; 0x03
   110a8:	f7 01       	movw	r30, r14
   110aa:	84 81       	ldd	r24, Z+4	; 0x04
   110ac:	95 81       	ldd	r25, Z+5	; 0x05
   110ae:	88 19       	sub	r24, r8
   110b0:	99 09       	sbc	r25, r9
   110b2:	84 83       	std	Z+4, r24	; 0x04
   110b4:	95 83       	std	Z+5, r25	; 0x05
   110b6:	0f 90       	pop	r0
   110b8:	0f 90       	pop	r0
   110ba:	cf 91       	pop	r28
   110bc:	df 91       	pop	r29
   110be:	1f 91       	pop	r17
   110c0:	0f 91       	pop	r16
   110c2:	ff 90       	pop	r15
   110c4:	ef 90       	pop	r14
   110c6:	df 90       	pop	r13
   110c8:	cf 90       	pop	r12
   110ca:	bf 90       	pop	r11
   110cc:	af 90       	pop	r10
   110ce:	9f 90       	pop	r9
   110d0:	8f 90       	pop	r8
   110d2:	08 95       	ret

000110d4 <utl_writeBlock>:
   110d4:	8f 92       	push	r8
   110d6:	9f 92       	push	r9
   110d8:	af 92       	push	r10
   110da:	bf 92       	push	r11
   110dc:	cf 92       	push	r12
   110de:	df 92       	push	r13
   110e0:	ef 92       	push	r14
   110e2:	ff 92       	push	r15
   110e4:	0f 93       	push	r16
   110e6:	1f 93       	push	r17
   110e8:	df 93       	push	r29
   110ea:	cf 93       	push	r28
   110ec:	0f 92       	push	r0
   110ee:	0f 92       	push	r0
   110f0:	cd b7       	in	r28, 0x3d	; 61
   110f2:	de b7       	in	r29, 0x3e	; 62
   110f4:	89 83       	std	Y+1, r24	; 0x01
   110f6:	9a 83       	std	Y+2, r25	; 0x02
   110f8:	6b 01       	movw	r12, r22
   110fa:	4a 01       	movw	r8, r20
   110fc:	e9 81       	ldd	r30, Y+1	; 0x01
   110fe:	fa 81       	ldd	r31, Y+2	; 0x02
   11100:	e0 80       	ld	r14, Z
   11102:	f1 80       	ldd	r15, Z+1	; 0x01
   11104:	f7 01       	movw	r30, r14
   11106:	a0 84       	ldd	r10, Z+8	; 0x08
   11108:	b1 84       	ldd	r11, Z+9	; 0x09
   1110a:	80 81       	ld	r24, Z
   1110c:	91 81       	ldd	r25, Z+1	; 0x01
   1110e:	06 81       	ldd	r16, Z+6	; 0x06
   11110:	17 81       	ldd	r17, Z+7	; 0x07
   11112:	08 1b       	sub	r16, r24
   11114:	19 0b       	sbc	r17, r25
   11116:	95 01       	movw	r18, r10
   11118:	28 0f       	add	r18, r24
   1111a:	39 1f       	adc	r19, r25
   1111c:	04 17       	cp	r16, r20
   1111e:	15 07       	cpc	r17, r21
   11120:	70 f4       	brcc	.+28     	; 0x1113e <utl_writeBlock+0x6a>
   11122:	c9 01       	movw	r24, r18
   11124:	a8 01       	movw	r20, r16
   11126:	0e 94 c7 b0 	call	0x1618e	; 0x1618e <memcpy>
   1112a:	f4 01       	movw	r30, r8
   1112c:	e0 1b       	sub	r30, r16
   1112e:	f1 0b       	sbc	r31, r17
   11130:	96 01       	movw	r18, r12
   11132:	20 0f       	add	r18, r16
   11134:	31 1f       	adc	r19, r17
   11136:	c5 01       	movw	r24, r10
   11138:	b9 01       	movw	r22, r18
   1113a:	af 01       	movw	r20, r30
   1113c:	01 c0       	rjmp	.+2      	; 0x11140 <utl_writeBlock+0x6c>
   1113e:	c9 01       	movw	r24, r18
   11140:	0e 94 c7 b0 	call	0x1618e	; 0x1618e <memcpy>
   11144:	f7 01       	movw	r30, r14
   11146:	80 81       	ld	r24, Z
   11148:	91 81       	ldd	r25, Z+1	; 0x01
   1114a:	88 0d       	add	r24, r8
   1114c:	99 1d       	adc	r25, r9
   1114e:	80 83       	st	Z, r24
   11150:	91 83       	std	Z+1, r25	; 0x01
   11152:	26 81       	ldd	r18, Z+6	; 0x06
   11154:	37 81       	ldd	r19, Z+7	; 0x07
   11156:	82 17       	cp	r24, r18
   11158:	93 07       	cpc	r25, r19
   1115a:	20 f0       	brcs	.+8      	; 0x11164 <utl_writeBlock+0x90>
   1115c:	82 1b       	sub	r24, r18
   1115e:	93 0b       	sbc	r25, r19
   11160:	80 83       	st	Z, r24
   11162:	91 83       	std	Z+1, r25	; 0x01
   11164:	f7 01       	movw	r30, r14
   11166:	84 81       	ldd	r24, Z+4	; 0x04
   11168:	95 81       	ldd	r25, Z+5	; 0x05
   1116a:	88 0d       	add	r24, r8
   1116c:	99 1d       	adc	r25, r9
   1116e:	84 83       	std	Z+4, r24	; 0x04
   11170:	95 83       	std	Z+5, r25	; 0x05
   11172:	0f 90       	pop	r0
   11174:	0f 90       	pop	r0
   11176:	cf 91       	pop	r28
   11178:	df 91       	pop	r29
   1117a:	1f 91       	pop	r17
   1117c:	0f 91       	pop	r16
   1117e:	ff 90       	pop	r15
   11180:	ef 90       	pop	r14
   11182:	df 90       	pop	r13
   11184:	cf 90       	pop	r12
   11186:	bf 90       	pop	r11
   11188:	af 90       	pop	r10
   1118a:	9f 90       	pop	r9
   1118c:	8f 90       	pop	r8
   1118e:	08 95       	ret

00011190 <utl_insertLink>:
   11190:	df 93       	push	r29
   11192:	cf 93       	push	r28
   11194:	cd b7       	in	r28, 0x3d	; 61
   11196:	de b7       	in	r29, 0x3e	; 62
   11198:	25 97       	sbiw	r28, 0x05	; 5
   1119a:	cd bf       	out	0x3d, r28	; 61
   1119c:	de bf       	out	0x3e, r29	; 62
   1119e:	8a 83       	std	Y+2, r24	; 0x02
   111a0:	9b 83       	std	Y+3, r25	; 0x03
   111a2:	6c 83       	std	Y+4, r22	; 0x04
   111a4:	7d 83       	std	Y+5, r23	; 0x05
   111a6:	8f b7       	in	r24, 0x3f	; 63
   111a8:	89 83       	std	Y+1, r24	; 0x01
   111aa:	f8 94       	cli
   111ac:	6a 81       	ldd	r22, Y+2	; 0x02
   111ae:	7b 81       	ldd	r23, Y+3	; 0x03
   111b0:	fb 01       	movw	r30, r22
   111b2:	80 81       	ld	r24, Z
   111b4:	91 81       	ldd	r25, Z+1	; 0x01
   111b6:	8e 5d       	subi	r24, 0xDE	; 222
   111b8:	9a 4f       	sbci	r25, 0xFA	; 250
   111ba:	09 f0       	breq	.+2      	; 0x111be <utl_insertLink+0x2e>
   111bc:	5b c0       	rjmp	.+182    	; 0x11274 <utl_insertLink+0xe4>
   111be:	ac 81       	ldd	r26, Y+4	; 0x04
   111c0:	bd 81       	ldd	r27, Y+5	; 0x05
   111c2:	14 96       	adiw	r26, 0x04	; 4
   111c4:	8d 91       	ld	r24, X+
   111c6:	9c 91       	ld	r25, X
   111c8:	15 97       	sbiw	r26, 0x05	; 5
   111ca:	89 2b       	or	r24, r25
   111cc:	21 f0       	breq	.+8      	; 0x111d6 <utl_insertLink+0x46>
   111ce:	89 81       	ldd	r24, Y+1	; 0x01
   111d0:	8f bf       	out	0x3f, r24	; 63
   111d2:	8c ef       	ldi	r24, 0xFC	; 252
   111d4:	52 c0       	rjmp	.+164    	; 0x1127a <utl_insertLink+0xea>
   111d6:	8a 81       	ldd	r24, Y+2	; 0x02
   111d8:	9b 81       	ldd	r25, Y+3	; 0x03
   111da:	14 96       	adiw	r26, 0x04	; 4
   111dc:	8d 93       	st	X+, r24
   111de:	9c 93       	st	X, r25
   111e0:	15 97       	sbiw	r26, 0x05	; 5
   111e2:	fb 01       	movw	r30, r22
   111e4:	20 85       	ldd	r18, Z+8	; 0x08
   111e6:	31 85       	ldd	r19, Z+9	; 0x09
   111e8:	21 15       	cp	r18, r1
   111ea:	31 05       	cpc	r19, r1
   111ec:	a9 f4       	brne	.+42     	; 0x11218 <utl_insertLink+0x88>
   111ee:	82 85       	ldd	r24, Z+10	; 0x0a
   111f0:	93 85       	ldd	r25, Z+11	; 0x0b
   111f2:	89 2b       	or	r24, r25
   111f4:	89 f4       	brne	.+34     	; 0x11218 <utl_insertLink+0x88>
   111f6:	0a 2e       	mov	r0, r26
   111f8:	1b 2e       	mov	r1, r27
   111fa:	1a 96       	adiw	r26, 0x0a	; 10
   111fc:	0d 92       	st	X+, r0
   111fe:	1c 92       	st	X, r1
   11200:	11 24       	eor	r1, r1
   11202:	1b 97       	sbiw	r26, 0x0b	; 11
   11204:	0a 2e       	mov	r0, r26
   11206:	1b 2e       	mov	r1, r27
   11208:	18 96       	adiw	r26, 0x08	; 8
   1120a:	0d 92       	st	X+, r0
   1120c:	1c 92       	st	X, r1
   1120e:	11 24       	eor	r1, r1
   11210:	19 97       	sbiw	r26, 0x09	; 9
   11212:	a0 87       	std	Z+8, r26	; 0x08
   11214:	b1 87       	std	Z+9, r27	; 0x09
   11216:	14 c0       	rjmp	.+40     	; 0x11240 <utl_insertLink+0xb0>
   11218:	fb 01       	movw	r30, r22
   1121a:	82 85       	ldd	r24, Z+10	; 0x0a
   1121c:	93 85       	ldd	r25, Z+11	; 0x0b
   1121e:	1a 96       	adiw	r26, 0x0a	; 10
   11220:	8d 93       	st	X+, r24
   11222:	9c 93       	st	X, r25
   11224:	1b 97       	sbiw	r26, 0x0b	; 11
   11226:	18 96       	adiw	r26, 0x08	; 8
   11228:	2d 93       	st	X+, r18
   1122a:	3c 93       	st	X, r19
   1122c:	19 97       	sbiw	r26, 0x09	; 9
   1122e:	f9 01       	movw	r30, r18
   11230:	a2 87       	std	Z+10, r26	; 0x0a
   11232:	b3 87       	std	Z+11, r27	; 0x0b
   11234:	fc 01       	movw	r30, r24
   11236:	a0 87       	std	Z+8, r26	; 0x08
   11238:	b1 87       	std	Z+9, r27	; 0x09
   1123a:	44 23       	and	r20, r20
   1123c:	21 f0       	breq	.+8      	; 0x11246 <utl_insertLink+0xb6>
   1123e:	fb 01       	movw	r30, r22
   11240:	a2 87       	std	Z+10, r26	; 0x0a
   11242:	b3 87       	std	Z+11, r27	; 0x0b
   11244:	03 c0       	rjmp	.+6      	; 0x1124c <utl_insertLink+0xbc>
   11246:	fb 01       	movw	r30, r22
   11248:	a0 87       	std	Z+8, r26	; 0x08
   1124a:	b1 87       	std	Z+9, r27	; 0x09
   1124c:	fb 01       	movw	r30, r22
   1124e:	82 81       	ldd	r24, Z+2	; 0x02
   11250:	93 81       	ldd	r25, Z+3	; 0x03
   11252:	01 96       	adiw	r24, 0x01	; 1
   11254:	82 83       	std	Z+2, r24	; 0x02
   11256:	93 83       	std	Z+3, r25	; 0x03
   11258:	84 81       	ldd	r24, Z+4	; 0x04
   1125a:	95 81       	ldd	r25, Z+5	; 0x05
   1125c:	16 96       	adiw	r26, 0x06	; 6
   1125e:	2d 91       	ld	r18, X+
   11260:	3c 91       	ld	r19, X
   11262:	17 97       	sbiw	r26, 0x07	; 7
   11264:	82 0f       	add	r24, r18
   11266:	93 1f       	adc	r25, r19
   11268:	84 83       	std	Z+4, r24	; 0x04
   1126a:	95 83       	std	Z+5, r25	; 0x05
   1126c:	89 81       	ldd	r24, Y+1	; 0x01
   1126e:	8f bf       	out	0x3f, r24	; 63
   11270:	80 e0       	ldi	r24, 0x00	; 0
   11272:	03 c0       	rjmp	.+6      	; 0x1127a <utl_insertLink+0xea>
   11274:	89 81       	ldd	r24, Y+1	; 0x01
   11276:	8f bf       	out	0x3f, r24	; 63
   11278:	8d ef       	ldi	r24, 0xFD	; 253
   1127a:	25 96       	adiw	r28, 0x05	; 5
   1127c:	cd bf       	out	0x3d, r28	; 61
   1127e:	de bf       	out	0x3e, r29	; 62
   11280:	cf 91       	pop	r28
   11282:	df 91       	pop	r29
   11284:	08 95       	ret

00011286 <utl_removeLink>:
   11286:	df 93       	push	r29
   11288:	cf 93       	push	r28
   1128a:	cd b7       	in	r28, 0x3d	; 61
   1128c:	de b7       	in	r29, 0x3e	; 62
   1128e:	25 97       	sbiw	r28, 0x05	; 5
   11290:	cd bf       	out	0x3d, r28	; 61
   11292:	de bf       	out	0x3e, r29	; 62
   11294:	8a 83       	std	Y+2, r24	; 0x02
   11296:	9b 83       	std	Y+3, r25	; 0x03
   11298:	6c 83       	std	Y+4, r22	; 0x04
   1129a:	7d 83       	std	Y+5, r23	; 0x05
   1129c:	8f b7       	in	r24, 0x3f	; 63
   1129e:	89 83       	std	Y+1, r24	; 0x01
   112a0:	f8 94       	cli
   112a2:	4a 81       	ldd	r20, Y+2	; 0x02
   112a4:	5b 81       	ldd	r21, Y+3	; 0x03
   112a6:	fa 01       	movw	r30, r20
   112a8:	80 81       	ld	r24, Z
   112aa:	91 81       	ldd	r25, Z+1	; 0x01
   112ac:	8e 5d       	subi	r24, 0xDE	; 222
   112ae:	9a 4f       	sbci	r25, 0xFA	; 250
   112b0:	09 f0       	breq	.+2      	; 0x112b4 <utl_removeLink+0x2e>
   112b2:	61 c0       	rjmp	.+194    	; 0x11376 <utl_removeLink+0xf0>
   112b4:	ac 81       	ldd	r26, Y+4	; 0x04
   112b6:	bd 81       	ldd	r27, Y+5	; 0x05
   112b8:	ec 81       	ldd	r30, Y+4	; 0x04
   112ba:	fd 81       	ldd	r31, Y+5	; 0x05
   112bc:	2a 81       	ldd	r18, Y+2	; 0x02
   112be:	3b 81       	ldd	r19, Y+3	; 0x03
   112c0:	84 81       	ldd	r24, Z+4	; 0x04
   112c2:	95 81       	ldd	r25, Z+5	; 0x05
   112c4:	82 17       	cp	r24, r18
   112c6:	93 07       	cpc	r25, r19
   112c8:	21 f0       	breq	.+8      	; 0x112d2 <utl_removeLink+0x4c>
   112ca:	89 81       	ldd	r24, Y+1	; 0x01
   112cc:	8f bf       	out	0x3f, r24	; 63
   112ce:	8e ef       	ldi	r24, 0xFE	; 254
   112d0:	55 c0       	rjmp	.+170    	; 0x1137c <utl_removeLink+0xf6>
   112d2:	14 96       	adiw	r26, 0x04	; 4
   112d4:	1d 92       	st	X+, r1
   112d6:	1c 92       	st	X, r1
   112d8:	15 97       	sbiw	r26, 0x05	; 5
   112da:	1a 96       	adiw	r26, 0x0a	; 10
   112dc:	2d 91       	ld	r18, X+
   112de:	3c 91       	ld	r19, X
   112e0:	1b 97       	sbiw	r26, 0x0b	; 11
   112e2:	20 93 48 25 	sts	0x2548, r18
   112e6:	30 93 49 25 	sts	0x2549, r19
   112ea:	18 96       	adiw	r26, 0x08	; 8
   112ec:	6d 91       	ld	r22, X+
   112ee:	7c 91       	ld	r23, X
   112f0:	19 97       	sbiw	r26, 0x09	; 9
   112f2:	60 93 46 25 	sts	0x2546, r22
   112f6:	70 93 47 25 	sts	0x2547, r23
   112fa:	a6 17       	cp	r26, r22
   112fc:	b7 07       	cpc	r27, r23
   112fe:	c1 f0       	breq	.+48     	; 0x11330 <utl_removeLink+0xaa>
   11300:	f9 01       	movw	r30, r18
   11302:	60 87       	std	Z+8, r22	; 0x08
   11304:	71 87       	std	Z+9, r23	; 0x09
   11306:	fb 01       	movw	r30, r22
   11308:	22 87       	std	Z+10, r18	; 0x0a
   1130a:	33 87       	std	Z+11, r19	; 0x0b
   1130c:	fa 01       	movw	r30, r20
   1130e:	80 85       	ldd	r24, Z+8	; 0x08
   11310:	91 85       	ldd	r25, Z+9	; 0x09
   11312:	a8 17       	cp	r26, r24
   11314:	b9 07       	cpc	r27, r25
   11316:	19 f4       	brne	.+6      	; 0x1131e <utl_removeLink+0x98>
   11318:	60 87       	std	Z+8, r22	; 0x08
   1131a:	71 87       	std	Z+9, r23	; 0x09
   1131c:	0e c0       	rjmp	.+28     	; 0x1133a <utl_removeLink+0xb4>
   1131e:	fa 01       	movw	r30, r20
   11320:	82 85       	ldd	r24, Z+10	; 0x0a
   11322:	93 85       	ldd	r25, Z+11	; 0x0b
   11324:	a8 17       	cp	r26, r24
   11326:	b9 07       	cpc	r27, r25
   11328:	41 f4       	brne	.+16     	; 0x1133a <utl_removeLink+0xb4>
   1132a:	22 87       	std	Z+10, r18	; 0x0a
   1132c:	33 87       	std	Z+11, r19	; 0x0b
   1132e:	05 c0       	rjmp	.+10     	; 0x1133a <utl_removeLink+0xb4>
   11330:	fa 01       	movw	r30, r20
   11332:	10 86       	std	Z+8, r1	; 0x08
   11334:	11 86       	std	Z+9, r1	; 0x09
   11336:	12 86       	std	Z+10, r1	; 0x0a
   11338:	13 86       	std	Z+11, r1	; 0x0b
   1133a:	14 96       	adiw	r26, 0x04	; 4
   1133c:	1d 92       	st	X+, r1
   1133e:	1c 92       	st	X, r1
   11340:	15 97       	sbiw	r26, 0x05	; 5
   11342:	18 96       	adiw	r26, 0x08	; 8
   11344:	1d 92       	st	X+, r1
   11346:	1c 92       	st	X, r1
   11348:	19 97       	sbiw	r26, 0x09	; 9
   1134a:	1a 96       	adiw	r26, 0x0a	; 10
   1134c:	1d 92       	st	X+, r1
   1134e:	1c 92       	st	X, r1
   11350:	1b 97       	sbiw	r26, 0x0b	; 11
   11352:	fa 01       	movw	r30, r20
   11354:	82 81       	ldd	r24, Z+2	; 0x02
   11356:	93 81       	ldd	r25, Z+3	; 0x03
   11358:	01 97       	sbiw	r24, 0x01	; 1
   1135a:	82 83       	std	Z+2, r24	; 0x02
   1135c:	93 83       	std	Z+3, r25	; 0x03
   1135e:	84 81       	ldd	r24, Z+4	; 0x04
   11360:	95 81       	ldd	r25, Z+5	; 0x05
   11362:	16 96       	adiw	r26, 0x06	; 6
   11364:	2d 91       	ld	r18, X+
   11366:	3c 91       	ld	r19, X
   11368:	17 97       	sbiw	r26, 0x07	; 7
   1136a:	82 1b       	sub	r24, r18
   1136c:	93 0b       	sbc	r25, r19
   1136e:	84 83       	std	Z+4, r24	; 0x04
   11370:	95 83       	std	Z+5, r25	; 0x05
   11372:	80 e0       	ldi	r24, 0x00	; 0
   11374:	03 c0       	rjmp	.+6      	; 0x1137c <utl_removeLink+0xf6>
   11376:	89 81       	ldd	r24, Y+1	; 0x01
   11378:	8f bf       	out	0x3f, r24	; 63
   1137a:	8d ef       	ldi	r24, 0xFD	; 253
   1137c:	25 96       	adiw	r28, 0x05	; 5
   1137e:	cd bf       	out	0x3d, r28	; 61
   11380:	de bf       	out	0x3e, r29	; 62
   11382:	cf 91       	pop	r28
   11384:	df 91       	pop	r29
   11386:	08 95       	ret

00011388 <utl_destroyLink>:
   11388:	df 93       	push	r29
   1138a:	cf 93       	push	r28
   1138c:	cd b7       	in	r28, 0x3d	; 61
   1138e:	de b7       	in	r29, 0x3e	; 62
   11390:	27 97       	sbiw	r28, 0x07	; 7
   11392:	cd bf       	out	0x3d, r28	; 61
   11394:	de bf       	out	0x3e, r29	; 62
   11396:	8c 83       	std	Y+4, r24	; 0x04
   11398:	9d 83       	std	Y+5, r25	; 0x05
   1139a:	6e 83       	std	Y+6, r22	; 0x06
   1139c:	7f 83       	std	Y+7, r23	; 0x07
   1139e:	8f b7       	in	r24, 0x3f	; 63
   113a0:	89 83       	std	Y+1, r24	; 0x01
   113a2:	f8 94       	cli
   113a4:	ac 81       	ldd	r26, Y+4	; 0x04
   113a6:	bd 81       	ldd	r27, Y+5	; 0x05
   113a8:	8d 91       	ld	r24, X+
   113aa:	9c 91       	ld	r25, X
   113ac:	11 97       	sbiw	r26, 0x01	; 1
   113ae:	8e 5d       	subi	r24, 0xDE	; 222
   113b0:	9a 4f       	sbci	r25, 0xFA	; 250
   113b2:	09 f0       	breq	.+2      	; 0x113b6 <utl_destroyLink+0x2e>
   113b4:	8f c0       	rjmp	.+286    	; 0x114d4 <utl_destroyLink+0x14c>
   113b6:	6e 81       	ldd	r22, Y+6	; 0x06
   113b8:	7f 81       	ldd	r23, Y+7	; 0x07
   113ba:	ee 81       	ldd	r30, Y+6	; 0x06
   113bc:	ff 81       	ldd	r31, Y+7	; 0x07
   113be:	2c 81       	ldd	r18, Y+4	; 0x04
   113c0:	3d 81       	ldd	r19, Y+5	; 0x05
   113c2:	84 81       	ldd	r24, Z+4	; 0x04
   113c4:	95 81       	ldd	r25, Z+5	; 0x05
   113c6:	82 17       	cp	r24, r18
   113c8:	93 07       	cpc	r25, r19
   113ca:	21 f0       	breq	.+8      	; 0x113d4 <utl_destroyLink+0x4c>
   113cc:	89 81       	ldd	r24, Y+1	; 0x01
   113ce:	8f bf       	out	0x3f, r24	; 63
   113d0:	8e ef       	ldi	r24, 0xFE	; 254
   113d2:	83 c0       	rjmp	.+262    	; 0x114da <utl_destroyLink+0x152>
   113d4:	fb 01       	movw	r30, r22
   113d6:	22 85       	ldd	r18, Z+10	; 0x0a
   113d8:	33 85       	ldd	r19, Z+11	; 0x0b
   113da:	20 93 50 25 	sts	0x2550, r18
   113de:	30 93 51 25 	sts	0x2551, r19
   113e2:	40 85       	ldd	r20, Z+8	; 0x08
   113e4:	51 85       	ldd	r21, Z+9	; 0x09
   113e6:	40 93 4e 25 	sts	0x254E, r20
   113ea:	50 93 4f 25 	sts	0x254F, r21
   113ee:	64 17       	cp	r22, r20
   113f0:	75 07       	cpc	r23, r21
   113f2:	f1 f0       	breq	.+60     	; 0x11430 <utl_destroyLink+0xa8>
   113f4:	f9 01       	movw	r30, r18
   113f6:	40 87       	std	Z+8, r20	; 0x08
   113f8:	51 87       	std	Z+9, r21	; 0x09
   113fa:	fa 01       	movw	r30, r20
   113fc:	22 87       	std	Z+10, r18	; 0x0a
   113fe:	33 87       	std	Z+11, r19	; 0x0b
   11400:	18 96       	adiw	r26, 0x08	; 8
   11402:	8d 91       	ld	r24, X+
   11404:	9c 91       	ld	r25, X
   11406:	19 97       	sbiw	r26, 0x09	; 9
   11408:	68 17       	cp	r22, r24
   1140a:	79 07       	cpc	r23, r25
   1140c:	29 f4       	brne	.+10     	; 0x11418 <utl_destroyLink+0x90>
   1140e:	18 96       	adiw	r26, 0x08	; 8
   11410:	4d 93       	st	X+, r20
   11412:	5c 93       	st	X, r21
   11414:	19 97       	sbiw	r26, 0x09	; 9
   11416:	14 c0       	rjmp	.+40     	; 0x11440 <utl_destroyLink+0xb8>
   11418:	1a 96       	adiw	r26, 0x0a	; 10
   1141a:	8d 91       	ld	r24, X+
   1141c:	9c 91       	ld	r25, X
   1141e:	1b 97       	sbiw	r26, 0x0b	; 11
   11420:	68 17       	cp	r22, r24
   11422:	79 07       	cpc	r23, r25
   11424:	69 f4       	brne	.+26     	; 0x11440 <utl_destroyLink+0xb8>
   11426:	1a 96       	adiw	r26, 0x0a	; 10
   11428:	2d 93       	st	X+, r18
   1142a:	3c 93       	st	X, r19
   1142c:	1b 97       	sbiw	r26, 0x0b	; 11
   1142e:	08 c0       	rjmp	.+16     	; 0x11440 <utl_destroyLink+0xb8>
   11430:	18 96       	adiw	r26, 0x08	; 8
   11432:	1d 92       	st	X+, r1
   11434:	1c 92       	st	X, r1
   11436:	19 97       	sbiw	r26, 0x09	; 9
   11438:	1a 96       	adiw	r26, 0x0a	; 10
   1143a:	1d 92       	st	X+, r1
   1143c:	1c 92       	st	X, r1
   1143e:	1b 97       	sbiw	r26, 0x0b	; 11
   11440:	12 96       	adiw	r26, 0x02	; 2
   11442:	8d 91       	ld	r24, X+
   11444:	9c 91       	ld	r25, X
   11446:	13 97       	sbiw	r26, 0x03	; 3
   11448:	01 97       	sbiw	r24, 0x01	; 1
   1144a:	12 96       	adiw	r26, 0x02	; 2
   1144c:	8d 93       	st	X+, r24
   1144e:	9c 93       	st	X, r25
   11450:	13 97       	sbiw	r26, 0x03	; 3
   11452:	fb 01       	movw	r30, r22
   11454:	26 81       	ldd	r18, Z+6	; 0x06
   11456:	37 81       	ldd	r19, Z+7	; 0x07
   11458:	14 96       	adiw	r26, 0x04	; 4
   1145a:	8d 91       	ld	r24, X+
   1145c:	9c 91       	ld	r25, X
   1145e:	15 97       	sbiw	r26, 0x05	; 5
   11460:	82 1b       	sub	r24, r18
   11462:	93 0b       	sbc	r25, r19
   11464:	14 96       	adiw	r26, 0x04	; 4
   11466:	8d 93       	st	X+, r24
   11468:	9c 93       	st	X, r25
   1146a:	15 97       	sbiw	r26, 0x05	; 5
   1146c:	40 e0       	ldi	r20, 0x00	; 0
   1146e:	50 e0       	ldi	r21, 0x00	; 0
   11470:	80 91 4a 25 	lds	r24, 0x254A
   11474:	90 91 4b 25 	lds	r25, 0x254B
   11478:	a0 91 4c 25 	lds	r26, 0x254C
   1147c:	b0 91 4d 25 	lds	r27, 0x254D
   11480:	82 1b       	sub	r24, r18
   11482:	93 0b       	sbc	r25, r19
   11484:	a4 0b       	sbc	r26, r20
   11486:	b5 0b       	sbc	r27, r21
   11488:	80 93 4a 25 	sts	0x254A, r24
   1148c:	90 93 4b 25 	sts	0x254B, r25
   11490:	a0 93 4c 25 	sts	0x254C, r26
   11494:	b0 93 4d 25 	sts	0x254D, r27
   11498:	6a 83       	std	Y+2, r22	; 0x02
   1149a:	7b 83       	std	Y+3, r23	; 0x03
   1149c:	cb 01       	movw	r24, r22
   1149e:	0e 94 89 b3 	call	0x16712	; 0x16712 <arb_free>
   114a2:	ea 81       	ldd	r30, Y+2	; 0x02
   114a4:	fb 81       	ldd	r31, Y+3	; 0x03
   114a6:	42 81       	ldd	r20, Z+2	; 0x02
   114a8:	53 81       	ldd	r21, Z+3	; 0x03
   114aa:	80 81       	ld	r24, Z
   114ac:	91 81       	ldd	r25, Z+1	; 0x01
   114ae:	60 e0       	ldi	r22, 0x00	; 0
   114b0:	70 e0       	ldi	r23, 0x00	; 0
   114b2:	0e 94 d0 b0 	call	0x161a0	; 0x161a0 <memset>
   114b6:	ce 01       	movw	r24, r28
   114b8:	02 96       	adiw	r24, 0x02	; 2
   114ba:	0e 94 89 b3 	call	0x16712	; 0x16712 <arb_free>
   114be:	ea 81       	ldd	r30, Y+2	; 0x02
   114c0:	fb 81       	ldd	r31, Y+3	; 0x03
   114c2:	8c e0       	ldi	r24, 0x0C	; 12
   114c4:	df 01       	movw	r26, r30
   114c6:	1d 92       	st	X+, r1
   114c8:	8a 95       	dec	r24
   114ca:	e9 f7       	brne	.-6      	; 0x114c6 <utl_destroyLink+0x13e>
   114cc:	89 81       	ldd	r24, Y+1	; 0x01
   114ce:	8f bf       	out	0x3f, r24	; 63
   114d0:	80 e0       	ldi	r24, 0x00	; 0
   114d2:	03 c0       	rjmp	.+6      	; 0x114da <utl_destroyLink+0x152>
   114d4:	89 81       	ldd	r24, Y+1	; 0x01
   114d6:	8f bf       	out	0x3f, r24	; 63
   114d8:	8d ef       	ldi	r24, 0xFD	; 253
   114da:	27 96       	adiw	r28, 0x07	; 7
   114dc:	cd bf       	out	0x3d, r28	; 61
   114de:	de bf       	out	0x3e, r29	; 62
   114e0:	cf 91       	pop	r28
   114e2:	df 91       	pop	r29
   114e4:	08 95       	ret

000114e6 <utl_destroyContainer>:
   114e6:	df 93       	push	r29
   114e8:	cf 93       	push	r28
   114ea:	cd b7       	in	r28, 0x3d	; 61
   114ec:	de b7       	in	r29, 0x3e	; 62
   114ee:	25 97       	sbiw	r28, 0x05	; 5
   114f0:	cd bf       	out	0x3d, r28	; 61
   114f2:	de bf       	out	0x3e, r29	; 62
   114f4:	8c 83       	std	Y+4, r24	; 0x04
   114f6:	9d 83       	std	Y+5, r25	; 0x05
   114f8:	8f b7       	in	r24, 0x3f	; 63
   114fa:	89 83       	std	Y+1, r24	; 0x01
   114fc:	f8 94       	cli
   114fe:	ec 81       	ldd	r30, Y+4	; 0x04
   11500:	fd 81       	ldd	r31, Y+5	; 0x05
   11502:	80 81       	ld	r24, Z
   11504:	91 81       	ldd	r25, Z+1	; 0x01
   11506:	8e 5d       	subi	r24, 0xDE	; 222
   11508:	9a 4f       	sbci	r25, 0xFA	; 250
   1150a:	49 f5       	brne	.+82     	; 0x1155e <utl_destroyContainer+0x78>
   1150c:	24 81       	ldd	r18, Z+4	; 0x04
   1150e:	35 81       	ldd	r19, Z+5	; 0x05
   11510:	40 e0       	ldi	r20, 0x00	; 0
   11512:	50 e0       	ldi	r21, 0x00	; 0
   11514:	80 91 4a 25 	lds	r24, 0x254A
   11518:	90 91 4b 25 	lds	r25, 0x254B
   1151c:	a0 91 4c 25 	lds	r26, 0x254C
   11520:	b0 91 4d 25 	lds	r27, 0x254D
   11524:	82 1b       	sub	r24, r18
   11526:	93 0b       	sbc	r25, r19
   11528:	a4 0b       	sbc	r26, r20
   1152a:	b5 0b       	sbc	r27, r21
   1152c:	80 93 4a 25 	sts	0x254A, r24
   11530:	90 93 4b 25 	sts	0x254B, r25
   11534:	a0 93 4c 25 	sts	0x254C, r26
   11538:	b0 93 4d 25 	sts	0x254D, r27
   1153c:	ea 83       	std	Y+2, r30	; 0x02
   1153e:	fb 83       	std	Y+3, r31	; 0x03
   11540:	ce 01       	movw	r24, r28
   11542:	02 96       	adiw	r24, 0x02	; 2
   11544:	0e 94 89 b3 	call	0x16712	; 0x16712 <arb_free>
   11548:	ea 81       	ldd	r30, Y+2	; 0x02
   1154a:	fb 81       	ldd	r31, Y+3	; 0x03
   1154c:	8c e0       	ldi	r24, 0x0C	; 12
   1154e:	df 01       	movw	r26, r30
   11550:	1d 92       	st	X+, r1
   11552:	8a 95       	dec	r24
   11554:	e9 f7       	brne	.-6      	; 0x11550 <utl_destroyContainer+0x6a>
   11556:	89 81       	ldd	r24, Y+1	; 0x01
   11558:	8f bf       	out	0x3f, r24	; 63
   1155a:	80 e0       	ldi	r24, 0x00	; 0
   1155c:	03 c0       	rjmp	.+6      	; 0x11564 <utl_destroyContainer+0x7e>
   1155e:	89 81       	ldd	r24, Y+1	; 0x01
   11560:	8f bf       	out	0x3f, r24	; 63
   11562:	8d ef       	ldi	r24, 0xFD	; 253
   11564:	25 96       	adiw	r28, 0x05	; 5
   11566:	cd bf       	out	0x3d, r28	; 61
   11568:	de bf       	out	0x3e, r29	; 62
   1156a:	cf 91       	pop	r28
   1156c:	df 91       	pop	r29
   1156e:	08 95       	ret

00011570 <utl_createLink>:
   11570:	ef 92       	push	r14
   11572:	ff 92       	push	r15
   11574:	0f 93       	push	r16
   11576:	1f 93       	push	r17
   11578:	df 93       	push	r29
   1157a:	cf 93       	push	r28
   1157c:	cd b7       	in	r28, 0x3d	; 61
   1157e:	de b7       	in	r29, 0x3e	; 62
   11580:	25 97       	sbiw	r28, 0x05	; 5
   11582:	cd bf       	out	0x3d, r28	; 61
   11584:	de bf       	out	0x3e, r29	; 62
   11586:	8c 01       	movw	r16, r24
   11588:	8f b7       	in	r24, 0x3f	; 63
   1158a:	89 83       	std	Y+1, r24	; 0x01
   1158c:	f8 94       	cli
   1158e:	82 e0       	ldi	r24, 0x02	; 2
   11590:	e8 2e       	mov	r14, r24
   11592:	f1 2c       	mov	r15, r1
   11594:	ec 0e       	add	r14, r28
   11596:	fd 1e       	adc	r15, r29
   11598:	8c e0       	ldi	r24, 0x0C	; 12
   1159a:	90 e0       	ldi	r25, 0x00	; 0
   1159c:	b7 01       	movw	r22, r14
   1159e:	0e 94 ad b3 	call	0x1675a	; 0x1675a <arb_malloc>
   115a2:	8a 81       	ldd	r24, Y+2	; 0x02
   115a4:	9b 81       	ldd	r25, Y+3	; 0x03
   115a6:	89 2b       	or	r24, r25
   115a8:	69 f0       	breq	.+26     	; 0x115c4 <utl_createLink+0x54>
   115aa:	c8 01       	movw	r24, r16
   115ac:	be 01       	movw	r22, r28
   115ae:	6c 5f       	subi	r22, 0xFC	; 252
   115b0:	7f 4f       	sbci	r23, 0xFF	; 255
   115b2:	0e 94 ad b3 	call	0x1675a	; 0x1675a <arb_malloc>
   115b6:	8c 81       	ldd	r24, Y+4	; 0x04
   115b8:	9d 81       	ldd	r25, Y+5	; 0x05
   115ba:	00 97       	sbiw	r24, 0x00	; 0
   115bc:	41 f4       	brne	.+16     	; 0x115ce <utl_createLink+0x5e>
   115be:	c7 01       	movw	r24, r14
   115c0:	0e 94 89 b3 	call	0x16712	; 0x16712 <arb_free>
   115c4:	89 81       	ldd	r24, Y+1	; 0x01
   115c6:	8f bf       	out	0x3f, r24	; 63
   115c8:	ef ef       	ldi	r30, 0xFF	; 255
   115ca:	ff ef       	ldi	r31, 0xFF	; 255
   115cc:	30 c0       	rjmp	.+96     	; 0x1162e <utl_createLink+0xbe>
   115ce:	6f ef       	ldi	r22, 0xFF	; 255
   115d0:	70 e0       	ldi	r23, 0x00	; 0
   115d2:	a8 01       	movw	r20, r16
   115d4:	0e 94 d0 b0 	call	0x161a0	; 0x161a0 <memset>
   115d8:	ea 81       	ldd	r30, Y+2	; 0x02
   115da:	fb 81       	ldd	r31, Y+3	; 0x03
   115dc:	8c 81       	ldd	r24, Y+4	; 0x04
   115de:	9d 81       	ldd	r25, Y+5	; 0x05
   115e0:	80 83       	st	Z, r24
   115e2:	91 83       	std	Z+1, r25	; 0x01
   115e4:	14 82       	std	Z+4, r1	; 0x04
   115e6:	15 82       	std	Z+5, r1	; 0x05
   115e8:	02 83       	std	Z+2, r16	; 0x02
   115ea:	13 83       	std	Z+3, r17	; 0x03
   115ec:	98 01       	movw	r18, r16
   115ee:	24 5f       	subi	r18, 0xF4	; 244
   115f0:	3f 4f       	sbci	r19, 0xFF	; 255
   115f2:	26 83       	std	Z+6, r18	; 0x06
   115f4:	37 83       	std	Z+7, r19	; 0x07
   115f6:	10 86       	std	Z+8, r1	; 0x08
   115f8:	11 86       	std	Z+9, r1	; 0x09
   115fa:	12 86       	std	Z+10, r1	; 0x0a
   115fc:	13 86       	std	Z+11, r1	; 0x0b
   115fe:	40 e0       	ldi	r20, 0x00	; 0
   11600:	50 e0       	ldi	r21, 0x00	; 0
   11602:	80 91 4a 25 	lds	r24, 0x254A
   11606:	90 91 4b 25 	lds	r25, 0x254B
   1160a:	a0 91 4c 25 	lds	r26, 0x254C
   1160e:	b0 91 4d 25 	lds	r27, 0x254D
   11612:	82 0f       	add	r24, r18
   11614:	93 1f       	adc	r25, r19
   11616:	a4 1f       	adc	r26, r20
   11618:	b5 1f       	adc	r27, r21
   1161a:	80 93 4a 25 	sts	0x254A, r24
   1161e:	90 93 4b 25 	sts	0x254B, r25
   11622:	a0 93 4c 25 	sts	0x254C, r26
   11626:	b0 93 4d 25 	sts	0x254D, r27
   1162a:	89 81       	ldd	r24, Y+1	; 0x01
   1162c:	8f bf       	out	0x3f, r24	; 63
   1162e:	cf 01       	movw	r24, r30
   11630:	25 96       	adiw	r28, 0x05	; 5
   11632:	cd bf       	out	0x3d, r28	; 61
   11634:	de bf       	out	0x3e, r29	; 62
   11636:	cf 91       	pop	r28
   11638:	df 91       	pop	r29
   1163a:	1f 91       	pop	r17
   1163c:	0f 91       	pop	r16
   1163e:	ff 90       	pop	r15
   11640:	ef 90       	pop	r14
   11642:	08 95       	ret

00011644 <utl_createContainer>:
   11644:	df 93       	push	r29
   11646:	cf 93       	push	r28
   11648:	00 d0       	rcall	.+0      	; 0x1164a <utl_createContainer+0x6>
   1164a:	cd b7       	in	r28, 0x3d	; 61
   1164c:	de b7       	in	r29, 0x3e	; 62
   1164e:	8f b7       	in	r24, 0x3f	; 63
   11650:	89 83       	std	Y+1, r24	; 0x01
   11652:	f8 94       	cli
   11654:	8c e0       	ldi	r24, 0x0C	; 12
   11656:	90 e0       	ldi	r25, 0x00	; 0
   11658:	be 01       	movw	r22, r28
   1165a:	6e 5f       	subi	r22, 0xFE	; 254
   1165c:	7f 4f       	sbci	r23, 0xFF	; 255
   1165e:	0e 94 ad b3 	call	0x1675a	; 0x1675a <arb_malloc>
   11662:	ea 81       	ldd	r30, Y+2	; 0x02
   11664:	fb 81       	ldd	r31, Y+3	; 0x03
   11666:	30 97       	sbiw	r30, 0x00	; 0
   11668:	29 f4       	brne	.+10     	; 0x11674 <utl_createContainer+0x30>
   1166a:	89 81       	ldd	r24, Y+1	; 0x01
   1166c:	8f bf       	out	0x3f, r24	; 63
   1166e:	2f ef       	ldi	r18, 0xFF	; 255
   11670:	3f ef       	ldi	r19, 0xFF	; 255
   11672:	24 c0       	rjmp	.+72     	; 0x116bc <utl_createContainer+0x78>
   11674:	8e ed       	ldi	r24, 0xDE	; 222
   11676:	9a ef       	ldi	r25, 0xFA	; 250
   11678:	80 83       	st	Z, r24
   1167a:	91 83       	std	Z+1, r25	; 0x01
   1167c:	12 82       	std	Z+2, r1	; 0x02
   1167e:	13 82       	std	Z+3, r1	; 0x03
   11680:	8c e0       	ldi	r24, 0x0C	; 12
   11682:	90 e0       	ldi	r25, 0x00	; 0
   11684:	84 83       	std	Z+4, r24	; 0x04
   11686:	95 83       	std	Z+5, r25	; 0x05
   11688:	10 86       	std	Z+8, r1	; 0x08
   1168a:	11 86       	std	Z+9, r1	; 0x09
   1168c:	12 86       	std	Z+10, r1	; 0x0a
   1168e:	13 86       	std	Z+11, r1	; 0x0b
   11690:	80 91 4a 25 	lds	r24, 0x254A
   11694:	90 91 4b 25 	lds	r25, 0x254B
   11698:	a0 91 4c 25 	lds	r26, 0x254C
   1169c:	b0 91 4d 25 	lds	r27, 0x254D
   116a0:	0c 96       	adiw	r24, 0x0c	; 12
   116a2:	a1 1d       	adc	r26, r1
   116a4:	b1 1d       	adc	r27, r1
   116a6:	80 93 4a 25 	sts	0x254A, r24
   116aa:	90 93 4b 25 	sts	0x254B, r25
   116ae:	a0 93 4c 25 	sts	0x254C, r26
   116b2:	b0 93 4d 25 	sts	0x254D, r27
   116b6:	89 81       	ldd	r24, Y+1	; 0x01
   116b8:	8f bf       	out	0x3f, r24	; 63
   116ba:	9f 01       	movw	r18, r30
   116bc:	c9 01       	movw	r24, r18
   116be:	23 96       	adiw	r28, 0x03	; 3
   116c0:	cd bf       	out	0x3d, r28	; 61
   116c2:	de bf       	out	0x3e, r29	; 62
   116c4:	cf 91       	pop	r28
   116c6:	df 91       	pop	r29
   116c8:	08 95       	ret

000116ca <utl_cos16_16>:
   116ca:	af 92       	push	r10
   116cc:	bf 92       	push	r11
   116ce:	cf 92       	push	r12
   116d0:	df 92       	push	r13
   116d2:	ef 92       	push	r14
   116d4:	ff 92       	push	r15
   116d6:	0f 93       	push	r16
   116d8:	1f 93       	push	r17
   116da:	9c 01       	movw	r18, r24
   116dc:	e3 2e       	mov	r14, r19
   116de:	e2 94       	swap	r14
   116e0:	ef e0       	ldi	r30, 0x0F	; 15
   116e2:	ee 22       	and	r14, r30
   116e4:	ee 2d       	mov	r30, r14
   116e6:	f0 e0       	ldi	r31, 0x00	; 0
   116e8:	ee 0f       	add	r30, r30
   116ea:	ff 1f       	adc	r31, r31
   116ec:	df 01       	movw	r26, r30
   116ee:	a0 59       	subi	r26, 0x90	; 144
   116f0:	bc 4d       	sbci	r27, 0xDC	; 220
   116f2:	8d 91       	ld	r24, X+
   116f4:	9c 91       	ld	r25, X
   116f6:	5c 01       	movw	r10, r24
   116f8:	cc 24       	eor	r12, r12
   116fa:	b7 fc       	sbrc	r11, 7
   116fc:	c0 94       	com	r12
   116fe:	dc 2c       	mov	r13, r12
   11700:	ee 58       	subi	r30, 0x8E	; 142
   11702:	fc 4d       	sbci	r31, 0xDC	; 220
   11704:	60 81       	ld	r22, Z
   11706:	71 81       	ldd	r23, Z+1	; 0x01
   11708:	6a 19       	sub	r22, r10
   1170a:	7b 09       	sbc	r23, r11
   1170c:	88 27       	eor	r24, r24
   1170e:	77 fd       	sbrc	r23, 7
   11710:	80 95       	com	r24
   11712:	98 2f       	mov	r25, r24
   11714:	ff 24       	eor	r15, r15
   11716:	00 e0       	ldi	r16, 0x00	; 0
   11718:	10 e0       	ldi	r17, 0x00	; 0
   1171a:	5c e0       	ldi	r21, 0x0C	; 12
   1171c:	ee 0c       	add	r14, r14
   1171e:	ff 1c       	adc	r15, r15
   11720:	00 1f       	adc	r16, r16
   11722:	11 1f       	adc	r17, r17
   11724:	5a 95       	dec	r21
   11726:	d1 f7       	brne	.-12     	; 0x1171c <utl_cos16_16+0x52>
   11728:	2e 19       	sub	r18, r14
   1172a:	3f 09       	sbc	r19, r15
   1172c:	44 27       	eor	r20, r20
   1172e:	37 fd       	sbrc	r19, 7
   11730:	40 95       	com	r20
   11732:	54 2f       	mov	r21, r20
   11734:	0e 94 e1 b3 	call	0x167c2	; 0x167c2 <__mulsi3>
   11738:	97 fd       	sbrc	r25, 7
   1173a:	02 c0       	rjmp	.+4      	; 0x11740 <utl_cos16_16+0x76>
   1173c:	21 e0       	ldi	r18, 0x01	; 1
   1173e:	08 c0       	rjmp	.+16     	; 0x11750 <utl_cos16_16+0x86>
   11740:	90 95       	com	r25
   11742:	80 95       	com	r24
   11744:	70 95       	com	r23
   11746:	61 95       	neg	r22
   11748:	7f 4f       	sbci	r23, 0xFF	; 255
   1174a:	8f 4f       	sbci	r24, 0xFF	; 255
   1174c:	9f 4f       	sbci	r25, 0xFF	; 255
   1174e:	2f ef       	ldi	r18, 0xFF	; 255
   11750:	44 e0       	ldi	r20, 0x04	; 4
   11752:	66 0f       	add	r22, r22
   11754:	77 1f       	adc	r23, r23
   11756:	88 1f       	adc	r24, r24
   11758:	99 1f       	adc	r25, r25
   1175a:	4a 95       	dec	r20
   1175c:	d1 f7       	brne	.-12     	; 0x11752 <utl_cos16_16+0x88>
   1175e:	2f 3f       	cpi	r18, 0xFF	; 255
   11760:	29 f4       	brne	.+10     	; 0x1176c <utl_cos16_16+0xa2>
   11762:	ee 27       	eor	r30, r30
   11764:	ff 27       	eor	r31, r31
   11766:	e8 1b       	sub	r30, r24
   11768:	f9 0b       	sbc	r31, r25
   1176a:	01 c0       	rjmp	.+2      	; 0x1176e <utl_cos16_16+0xa4>
   1176c:	fc 01       	movw	r30, r24
   1176e:	9f 01       	movw	r18, r30
   11770:	44 27       	eor	r20, r20
   11772:	37 fd       	sbrc	r19, 7
   11774:	40 95       	com	r20
   11776:	54 2f       	mov	r21, r20
   11778:	2a 0d       	add	r18, r10
   1177a:	3b 1d       	adc	r19, r11
   1177c:	4c 1d       	adc	r20, r12
   1177e:	5d 1d       	adc	r21, r13
   11780:	c9 01       	movw	r24, r18
   11782:	1f 91       	pop	r17
   11784:	0f 91       	pop	r16
   11786:	ff 90       	pop	r15
   11788:	ef 90       	pop	r14
   1178a:	df 90       	pop	r13
   1178c:	cf 90       	pop	r12
   1178e:	bf 90       	pop	r11
   11790:	af 90       	pop	r10
   11792:	08 95       	ret

00011794 <utl_atan2_16>:
   11794:	af 92       	push	r10
   11796:	bf 92       	push	r11
   11798:	cf 92       	push	r12
   1179a:	df 92       	push	r13
   1179c:	ef 92       	push	r14
   1179e:	ff 92       	push	r15
   117a0:	0f 93       	push	r16
   117a2:	1f 93       	push	r17
   117a4:	cf 93       	push	r28
   117a6:	df 93       	push	r29
   117a8:	6c 01       	movw	r12, r24
   117aa:	5b 01       	movw	r10, r22
   117ac:	9b 01       	movw	r18, r22
   117ae:	44 27       	eor	r20, r20
   117b0:	37 fd       	sbrc	r19, 7
   117b2:	40 95       	com	r20
   117b4:	54 2f       	mov	r21, r20
   117b6:	57 ff       	sbrs	r21, 7
   117b8:	07 c0       	rjmp	.+14     	; 0x117c8 <utl_atan2_16+0x34>
   117ba:	50 95       	com	r21
   117bc:	40 95       	com	r20
   117be:	30 95       	com	r19
   117c0:	21 95       	neg	r18
   117c2:	3f 4f       	sbci	r19, 0xFF	; 255
   117c4:	4f 4f       	sbci	r20, 0xFF	; 255
   117c6:	5f 4f       	sbci	r21, 0xFF	; 255
   117c8:	89 01       	movw	r16, r18
   117ca:	96 01       	movw	r18, r12
   117cc:	44 27       	eor	r20, r20
   117ce:	37 fd       	sbrc	r19, 7
   117d0:	40 95       	com	r20
   117d2:	54 2f       	mov	r21, r20
   117d4:	57 ff       	sbrs	r21, 7
   117d6:	07 c0       	rjmp	.+14     	; 0x117e6 <utl_atan2_16+0x52>
   117d8:	50 95       	com	r21
   117da:	40 95       	com	r20
   117dc:	30 95       	com	r19
   117de:	21 95       	neg	r18
   117e0:	3f 4f       	sbci	r19, 0xFF	; 255
   117e2:	4f 4f       	sbci	r20, 0xFF	; 255
   117e4:	5f 4f       	sbci	r21, 0xFF	; 255
   117e6:	e9 01       	movw	r28, r18
   117e8:	02 17       	cp	r16, r18
   117ea:	13 07       	cpc	r17, r19
   117ec:	08 f4       	brcc	.+2      	; 0x117f0 <utl_atan2_16+0x5c>
   117ee:	6e c0       	rjmp	.+220    	; 0x118cc <utl_atan2_16+0x138>
   117f0:	b9 01       	movw	r22, r18
   117f2:	80 e0       	ldi	r24, 0x00	; 0
   117f4:	90 e0       	ldi	r25, 0x00	; 0
   117f6:	2f ef       	ldi	r18, 0xFF	; 255
   117f8:	3f e7       	ldi	r19, 0x7F	; 127
   117fa:	40 e0       	ldi	r20, 0x00	; 0
   117fc:	50 e0       	ldi	r21, 0x00	; 0
   117fe:	0e 94 e1 b3 	call	0x167c2	; 0x167c2 <__mulsi3>
   11802:	0f 5f       	subi	r16, 0xFF	; 255
   11804:	1f 4f       	sbci	r17, 0xFF	; 255
   11806:	98 01       	movw	r18, r16
   11808:	40 e0       	ldi	r20, 0x00	; 0
   1180a:	50 e0       	ldi	r21, 0x00	; 0
   1180c:	0e 94 00 b4 	call	0x16800	; 0x16800 <__udivmodsi4>
   11810:	79 01       	movw	r14, r18
   11812:	ef 2c       	mov	r14, r15
   11814:	ff 24       	eor	r15, r15
   11816:	e6 94       	lsr	r14
   11818:	e6 94       	lsr	r14
   1181a:	e6 94       	lsr	r14
   1181c:	00 e0       	ldi	r16, 0x00	; 0
   1181e:	10 e0       	ldi	r17, 0x00	; 0
   11820:	f7 01       	movw	r30, r14
   11822:	ee 0f       	add	r30, r30
   11824:	ff 1f       	adc	r31, r31
   11826:	e8 50       	subi	r30, 0x08	; 8
   11828:	fd 4d       	sbci	r31, 0xDD	; 221
   1182a:	c0 81       	ld	r28, Z
   1182c:	d1 81       	ldd	r29, Z+1	; 0x01
   1182e:	d8 01       	movw	r26, r16
   11830:	c7 01       	movw	r24, r14
   11832:	4b e0       	ldi	r20, 0x0B	; 11
   11834:	88 0f       	add	r24, r24
   11836:	99 1f       	adc	r25, r25
   11838:	aa 1f       	adc	r26, r26
   1183a:	bb 1f       	adc	r27, r27
   1183c:	4a 95       	dec	r20
   1183e:	d1 f7       	brne	.-12     	; 0x11834 <utl_atan2_16+0xa0>
   11840:	28 1b       	sub	r18, r24
   11842:	39 0b       	sbc	r19, r25
   11844:	b9 01       	movw	r22, r18
   11846:	88 27       	eor	r24, r24
   11848:	77 fd       	sbrc	r23, 7
   1184a:	80 95       	com	r24
   1184c:	98 2f       	mov	r25, r24
   1184e:	08 94       	sec
   11850:	e1 1c       	adc	r14, r1
   11852:	f1 1c       	adc	r15, r1
   11854:	01 1d       	adc	r16, r1
   11856:	11 1d       	adc	r17, r1
   11858:	ee 0c       	add	r14, r14
   1185a:	ff 1c       	adc	r15, r15
   1185c:	28 ef       	ldi	r18, 0xF8	; 248
   1185e:	32 e2       	ldi	r19, 0x22	; 34
   11860:	e2 0e       	add	r14, r18
   11862:	f3 1e       	adc	r15, r19
   11864:	f7 01       	movw	r30, r14
   11866:	20 81       	ld	r18, Z
   11868:	31 81       	ldd	r19, Z+1	; 0x01
   1186a:	2c 1b       	sub	r18, r28
   1186c:	3d 0b       	sbc	r19, r29
   1186e:	44 27       	eor	r20, r20
   11870:	37 fd       	sbrc	r19, 7
   11872:	40 95       	com	r20
   11874:	54 2f       	mov	r21, r20
   11876:	0e 94 e1 b3 	call	0x167c2	; 0x167c2 <__mulsi3>
   1187a:	97 fd       	sbrc	r25, 7
   1187c:	02 c0       	rjmp	.+4      	; 0x11882 <utl_atan2_16+0xee>
   1187e:	21 e0       	ldi	r18, 0x01	; 1
   11880:	08 c0       	rjmp	.+16     	; 0x11892 <utl_atan2_16+0xfe>
   11882:	90 95       	com	r25
   11884:	80 95       	com	r24
   11886:	70 95       	com	r23
   11888:	61 95       	neg	r22
   1188a:	7f 4f       	sbci	r23, 0xFF	; 255
   1188c:	8f 4f       	sbci	r24, 0xFF	; 255
   1188e:	9f 4f       	sbci	r25, 0xFF	; 255
   11890:	2f ef       	ldi	r18, 0xFF	; 255
   11892:	e5 e0       	ldi	r30, 0x05	; 5
   11894:	66 0f       	add	r22, r22
   11896:	77 1f       	adc	r23, r23
   11898:	88 1f       	adc	r24, r24
   1189a:	99 1f       	adc	r25, r25
   1189c:	ea 95       	dec	r30
   1189e:	d1 f7       	brne	.-12     	; 0x11894 <utl_atan2_16+0x100>
   118a0:	2f 3f       	cpi	r18, 0xFF	; 255
   118a2:	29 f4       	brne	.+10     	; 0x118ae <utl_atan2_16+0x11a>
   118a4:	22 27       	eor	r18, r18
   118a6:	33 27       	eor	r19, r19
   118a8:	28 1b       	sub	r18, r24
   118aa:	39 0b       	sbc	r19, r25
   118ac:	01 c0       	rjmp	.+2      	; 0x118b0 <utl_atan2_16+0x11c>
   118ae:	9c 01       	movw	r18, r24
   118b0:	c9 01       	movw	r24, r18
   118b2:	aa 27       	eor	r26, r26
   118b4:	97 fd       	sbrc	r25, 7
   118b6:	a0 95       	com	r26
   118b8:	ba 2f       	mov	r27, r26
   118ba:	9e 01       	movw	r18, r28
   118bc:	40 e0       	ldi	r20, 0x00	; 0
   118be:	50 e0       	ldi	r21, 0x00	; 0
   118c0:	82 0f       	add	r24, r18
   118c2:	93 1f       	adc	r25, r19
   118c4:	a4 1f       	adc	r26, r20
   118c6:	b5 1f       	adc	r27, r21
   118c8:	9c 01       	movw	r18, r24
   118ca:	6f c0       	rjmp	.+222    	; 0x119aa <utl_atan2_16+0x216>
   118cc:	b8 01       	movw	r22, r16
   118ce:	80 e0       	ldi	r24, 0x00	; 0
   118d0:	90 e0       	ldi	r25, 0x00	; 0
   118d2:	2f ef       	ldi	r18, 0xFF	; 255
   118d4:	3f e7       	ldi	r19, 0x7F	; 127
   118d6:	40 e0       	ldi	r20, 0x00	; 0
   118d8:	50 e0       	ldi	r21, 0x00	; 0
   118da:	0e 94 e1 b3 	call	0x167c2	; 0x167c2 <__mulsi3>
   118de:	21 96       	adiw	r28, 0x01	; 1
   118e0:	9e 01       	movw	r18, r28
   118e2:	40 e0       	ldi	r20, 0x00	; 0
   118e4:	50 e0       	ldi	r21, 0x00	; 0
   118e6:	0e 94 00 b4 	call	0x16800	; 0x16800 <__udivmodsi4>
   118ea:	79 01       	movw	r14, r18
   118ec:	ef 2c       	mov	r14, r15
   118ee:	ff 24       	eor	r15, r15
   118f0:	e6 94       	lsr	r14
   118f2:	e6 94       	lsr	r14
   118f4:	e6 94       	lsr	r14
   118f6:	00 e0       	ldi	r16, 0x00	; 0
   118f8:	10 e0       	ldi	r17, 0x00	; 0
   118fa:	f7 01       	movw	r30, r14
   118fc:	ee 0f       	add	r30, r30
   118fe:	ff 1f       	adc	r31, r31
   11900:	e8 50       	subi	r30, 0x08	; 8
   11902:	fd 4d       	sbci	r31, 0xDD	; 221
   11904:	c0 81       	ld	r28, Z
   11906:	d1 81       	ldd	r29, Z+1	; 0x01
   11908:	d8 01       	movw	r26, r16
   1190a:	c7 01       	movw	r24, r14
   1190c:	4b e0       	ldi	r20, 0x0B	; 11
   1190e:	88 0f       	add	r24, r24
   11910:	99 1f       	adc	r25, r25
   11912:	aa 1f       	adc	r26, r26
   11914:	bb 1f       	adc	r27, r27
   11916:	4a 95       	dec	r20
   11918:	d1 f7       	brne	.-12     	; 0x1190e <utl_atan2_16+0x17a>
   1191a:	28 1b       	sub	r18, r24
   1191c:	39 0b       	sbc	r19, r25
   1191e:	b9 01       	movw	r22, r18
   11920:	88 27       	eor	r24, r24
   11922:	77 fd       	sbrc	r23, 7
   11924:	80 95       	com	r24
   11926:	98 2f       	mov	r25, r24
   11928:	08 94       	sec
   1192a:	e1 1c       	adc	r14, r1
   1192c:	f1 1c       	adc	r15, r1
   1192e:	01 1d       	adc	r16, r1
   11930:	11 1d       	adc	r17, r1
   11932:	ee 0c       	add	r14, r14
   11934:	ff 1c       	adc	r15, r15
   11936:	28 ef       	ldi	r18, 0xF8	; 248
   11938:	32 e2       	ldi	r19, 0x22	; 34
   1193a:	e2 0e       	add	r14, r18
   1193c:	f3 1e       	adc	r15, r19
   1193e:	f7 01       	movw	r30, r14
   11940:	20 81       	ld	r18, Z
   11942:	31 81       	ldd	r19, Z+1	; 0x01
   11944:	2c 1b       	sub	r18, r28
   11946:	3d 0b       	sbc	r19, r29
   11948:	44 27       	eor	r20, r20
   1194a:	37 fd       	sbrc	r19, 7
   1194c:	40 95       	com	r20
   1194e:	54 2f       	mov	r21, r20
   11950:	0e 94 e1 b3 	call	0x167c2	; 0x167c2 <__mulsi3>
   11954:	97 fd       	sbrc	r25, 7
   11956:	02 c0       	rjmp	.+4      	; 0x1195c <utl_atan2_16+0x1c8>
   11958:	21 e0       	ldi	r18, 0x01	; 1
   1195a:	08 c0       	rjmp	.+16     	; 0x1196c <utl_atan2_16+0x1d8>
   1195c:	90 95       	com	r25
   1195e:	80 95       	com	r24
   11960:	70 95       	com	r23
   11962:	61 95       	neg	r22
   11964:	7f 4f       	sbci	r23, 0xFF	; 255
   11966:	8f 4f       	sbci	r24, 0xFF	; 255
   11968:	9f 4f       	sbci	r25, 0xFF	; 255
   1196a:	2f ef       	ldi	r18, 0xFF	; 255
   1196c:	15 e0       	ldi	r17, 0x05	; 5
   1196e:	66 0f       	add	r22, r22
   11970:	77 1f       	adc	r23, r23
   11972:	88 1f       	adc	r24, r24
   11974:	99 1f       	adc	r25, r25
   11976:	1a 95       	dec	r17
   11978:	d1 f7       	brne	.-12     	; 0x1196e <utl_atan2_16+0x1da>
   1197a:	2f 3f       	cpi	r18, 0xFF	; 255
   1197c:	29 f4       	brne	.+10     	; 0x11988 <utl_atan2_16+0x1f4>
   1197e:	22 27       	eor	r18, r18
   11980:	33 27       	eor	r19, r19
   11982:	28 1b       	sub	r18, r24
   11984:	39 0b       	sbc	r19, r25
   11986:	01 c0       	rjmp	.+2      	; 0x1198a <utl_atan2_16+0x1f6>
   11988:	9c 01       	movw	r18, r24
   1198a:	c9 01       	movw	r24, r18
   1198c:	aa 27       	eor	r26, r26
   1198e:	97 fd       	sbrc	r25, 7
   11990:	a0 95       	com	r26
   11992:	ba 2f       	mov	r27, r26
   11994:	9e 01       	movw	r18, r28
   11996:	40 e0       	ldi	r20, 0x00	; 0
   11998:	50 e0       	ldi	r21, 0x00	; 0
   1199a:	82 0f       	add	r24, r18
   1199c:	93 1f       	adc	r25, r19
   1199e:	a4 1f       	adc	r26, r20
   119a0:	b5 1f       	adc	r27, r21
   119a2:	2f ef       	ldi	r18, 0xFF	; 255
   119a4:	3f e3       	ldi	r19, 0x3F	; 63
   119a6:	28 1b       	sub	r18, r24
   119a8:	39 0b       	sbc	r19, r25
   119aa:	b7 fe       	sbrs	r11, 7
   119ac:	09 c0       	rjmp	.+18     	; 0x119c0 <utl_atan2_16+0x22c>
   119ae:	d7 fc       	sbrc	r13, 7
   119b0:	07 c0       	rjmp	.+14     	; 0x119c0 <utl_atan2_16+0x22c>
   119b2:	8f ef       	ldi	r24, 0xFF	; 255
   119b4:	9f e7       	ldi	r25, 0x7F	; 127
   119b6:	ac 01       	movw	r20, r24
   119b8:	42 1b       	sub	r20, r18
   119ba:	53 0b       	sbc	r21, r19
   119bc:	9a 01       	movw	r18, r20
   119be:	0f c0       	rjmp	.+30     	; 0x119de <utl_atan2_16+0x24a>
   119c0:	1a 14       	cp	r1, r10
   119c2:	1b 04       	cpc	r1, r11
   119c4:	34 f0       	brlt	.+12     	; 0x119d2 <utl_atan2_16+0x23e>
   119c6:	1c 14       	cp	r1, r12
   119c8:	1d 04       	cpc	r1, r13
   119ca:	4c f0       	brlt	.+18     	; 0x119de <utl_atan2_16+0x24a>
   119cc:	20 50       	subi	r18, 0x00	; 0
   119ce:	30 48       	sbci	r19, 0x80	; 128
   119d0:	06 c0       	rjmp	.+12     	; 0x119de <utl_atan2_16+0x24a>
   119d2:	1c 14       	cp	r1, r12
   119d4:	1d 04       	cpc	r1, r13
   119d6:	1c f0       	brlt	.+6      	; 0x119de <utl_atan2_16+0x24a>
   119d8:	30 95       	com	r19
   119da:	21 95       	neg	r18
   119dc:	3f 4f       	sbci	r19, 0xFF	; 255
   119de:	c9 01       	movw	r24, r18
   119e0:	df 91       	pop	r29
   119e2:	cf 91       	pop	r28
   119e4:	1f 91       	pop	r17
   119e6:	0f 91       	pop	r16
   119e8:	ff 90       	pop	r15
   119ea:	ef 90       	pop	r14
   119ec:	df 90       	pop	r13
   119ee:	cf 90       	pop	r12
   119f0:	bf 90       	pop	r11
   119f2:	af 90       	pop	r10
   119f4:	08 95       	ret

000119f6 <sd_begin>:
   119f6:	cf 93       	push	r28
   119f8:	df 93       	push	r29
   119fa:	0f 92       	push	r0
   119fc:	0f 92       	push	r0
   119fe:	cd b7       	in	r28, 0x3d	; 61
   11a00:	de b7       	in	r29, 0x3e	; 62
   11a02:	89 83       	std	Y+1, r24	; 0x01
   11a04:	9a 83       	std	Y+2, r25	; 0x02
   11a06:	69 81       	ldd	r22, Y+1	; 0x01
   11a08:	7a 81       	ldd	r23, Y+2	; 0x02
   11a0a:	82 e5       	ldi	r24, 0x52	; 82
   11a0c:	95 e2       	ldi	r25, 0x25	; 37
   11a0e:	0e 94 1d a1 	call	0x1423a	; 0x1423a <_ZN5SdFat5beginEi>
   11a12:	0f 90       	pop	r0
   11a14:	0f 90       	pop	r0
   11a16:	df 91       	pop	r29
   11a18:	cf 91       	pop	r28
   11a1a:	08 95       	ret

00011a1c <sd_init>:
   11a1c:	cf 93       	push	r28
   11a1e:	df 93       	push	r29
   11a20:	0f 92       	push	r0
   11a22:	0f 92       	push	r0
   11a24:	cd b7       	in	r28, 0x3d	; 61
   11a26:	de b7       	in	r29, 0x3e	; 62
   11a28:	89 83       	std	Y+1, r24	; 0x01
   11a2a:	9a 83       	std	Y+2, r25	; 0x02
   11a2c:	69 81       	ldd	r22, Y+1	; 0x01
   11a2e:	7a 81       	ldd	r23, Y+2	; 0x02
   11a30:	82 e5       	ldi	r24, 0x52	; 82
   11a32:	95 e2       	ldi	r25, 0x25	; 37
   11a34:	0e 94 06 91 	call	0x1220c	; 0x1220c <_ZN7Sd2Card4initEi>
   11a38:	0f 90       	pop	r0
   11a3a:	0f 90       	pop	r0
   11a3c:	df 91       	pop	r29
   11a3e:	cf 91       	pop	r28
   11a40:	08 95       	ret

00011a42 <sd_open>:
   11a42:	2f 92       	push	r2
   11a44:	3f 92       	push	r3
   11a46:	4f 92       	push	r4
   11a48:	5f 92       	push	r5
   11a4a:	6f 92       	push	r6
   11a4c:	7f 92       	push	r7
   11a4e:	8f 92       	push	r8
   11a50:	9f 92       	push	r9
   11a52:	af 92       	push	r10
   11a54:	bf 92       	push	r11
   11a56:	cf 92       	push	r12
   11a58:	df 92       	push	r13
   11a5a:	ef 92       	push	r14
   11a5c:	ff 92       	push	r15
   11a5e:	0f 93       	push	r16
   11a60:	1f 93       	push	r17
   11a62:	cf 93       	push	r28
   11a64:	df 93       	push	r29
   11a66:	cd b7       	in	r28, 0x3d	; 61
   11a68:	de b7       	in	r29, 0x3e	; 62
   11a6a:	68 97       	sbiw	r28, 0x18	; 24
   11a6c:	cd bf       	out	0x3d, r28	; 61
   11a6e:	de bf       	out	0x3e, r29	; 62
   11a70:	8c 01       	movw	r16, r24
   11a72:	68 8f       	std	Y+24, r22	; 0x18
   11a74:	8f b7       	in	r24, 0x3f	; 63
   11a76:	89 83       	std	Y+1, r24	; 0x01
   11a78:	f8 94       	cli
   11a7a:	8f e1       	ldi	r24, 0x1F	; 31
   11a7c:	90 e0       	ldi	r25, 0x00	; 0
   11a7e:	be 01       	movw	r22, r28
   11a80:	6e 5f       	subi	r22, 0xFE	; 254
   11a82:	7f 4f       	sbci	r23, 0xFF	; 255
   11a84:	0e 94 ad b3 	call	0x1675a	; 0x1675a <arb_malloc>
   11a88:	8a 81       	ldd	r24, Y+2	; 0x02
   11a8a:	9b 81       	ldd	r25, Y+3	; 0x03
   11a8c:	04 96       	adiw	r24, 0x04	; 4
   11a8e:	0e 94 4c 99 	call	0x13298	; 0x13298 <_ZN10SdBaseFile5closeEv>
   11a92:	8a 81       	ldd	r24, Y+2	; 0x02
   11a94:	9b 81       	ldd	r25, Y+3	; 0x03
   11a96:	00 97       	sbiw	r24, 0x00	; 0
   11a98:	09 f4       	brne	.+2      	; 0x11a9c <sd_open+0x5a>
   11a9a:	8d c0       	rjmp	.+282    	; 0x11bb6 <sd_open+0x174>
   11a9c:	85 e7       	ldi	r24, 0x75	; 117
   11a9e:	95 e2       	ldi	r25, 0x25	; 37
   11aa0:	60 e9       	ldi	r22, 0x90	; 144
   11aa2:	75 e2       	ldi	r23, 0x25	; 37
   11aa4:	0e 94 6a 94 	call	0x128d4	; 0x128d4 <_ZN10SdBaseFile11getFilenameEPc>
   11aa8:	c8 01       	movw	r24, r16
   11aaa:	6a ec       	ldi	r22, 0xCA	; 202
   11aac:	73 e2       	ldi	r23, 0x23	; 35
   11aae:	0e 94 b5 b0 	call	0x1616a	; 0x1616a <strtok>
   11ab2:	8c 83       	std	Y+4, r24	; 0x04
   11ab4:	9d 83       	std	Y+5, r25	; 0x05
   11ab6:	34 e0       	ldi	r19, 0x04	; 4
   11ab8:	23 2e       	mov	r2, r19
   11aba:	31 2c       	mov	r3, r1
   11abc:	2c 0e       	add	r2, r28
   11abe:	3d 1e       	adc	r3, r29
   11ac0:	81 01       	movw	r16, r2
   11ac2:	cc 24       	eor	r12, r12
   11ac4:	dd 24       	eor	r13, r13
   11ac6:	76 01       	movw	r14, r12
   11ac8:	f8 01       	movw	r30, r16
   11aca:	81 91       	ld	r24, Z+
   11acc:	91 91       	ld	r25, Z+
   11ace:	8f 01       	movw	r16, r30
   11ad0:	00 97       	sbiw	r24, 0x00	; 0
   11ad2:	a9 f0       	breq	.+42     	; 0x11afe <sd_open+0xbc>
   11ad4:	fa e0       	ldi	r31, 0x0A	; 10
   11ad6:	cf 16       	cp	r12, r31
   11ad8:	d1 04       	cpc	r13, r1
   11ada:	e1 04       	cpc	r14, r1
   11adc:	f1 04       	cpc	r15, r1
   11ade:	79 f0       	breq	.+30     	; 0x11afe <sd_open+0xbc>
   11ae0:	08 94       	sec
   11ae2:	c1 1c       	adc	r12, r1
   11ae4:	d1 1c       	adc	r13, r1
   11ae6:	e1 1c       	adc	r14, r1
   11ae8:	f1 1c       	adc	r15, r1
   11aea:	80 e0       	ldi	r24, 0x00	; 0
   11aec:	90 e0       	ldi	r25, 0x00	; 0
   11aee:	6a ec       	ldi	r22, 0xCA	; 202
   11af0:	73 e2       	ldi	r23, 0x23	; 35
   11af2:	0e 94 b5 b0 	call	0x1616a	; 0x1616a <strtok>
   11af6:	f8 01       	movw	r30, r16
   11af8:	80 83       	st	Z, r24
   11afa:	91 83       	std	Z+1, r25	; 0x01
   11afc:	e5 cf       	rjmp	.-54     	; 0x11ac8 <sd_open+0x86>
   11afe:	88 24       	eor	r8, r8
   11b00:	99 24       	eor	r9, r9
   11b02:	54 01       	movw	r10, r8
   11b04:	26 01       	movw	r4, r12
   11b06:	37 01       	movw	r6, r14
   11b08:	08 94       	sec
   11b0a:	41 08       	sbc	r4, r1
   11b0c:	51 08       	sbc	r5, r1
   11b0e:	61 08       	sbc	r6, r1
   11b10:	71 08       	sbc	r7, r1
   11b12:	f8 8d       	ldd	r31, Y+24	; 0x18
   11b14:	0f 2f       	mov	r16, r31
   11b16:	10 e0       	ldi	r17, 0x00	; 0
   11b18:	02 70       	andi	r16, 0x02	; 2
   11b1a:	10 70       	andi	r17, 0x00	; 0
   11b1c:	20 c0       	rjmp	.+64     	; 0x11b5e <sd_open+0x11c>
   11b1e:	f1 01       	movw	r30, r2
   11b20:	c1 90       	ld	r12, Z+
   11b22:	d1 90       	ld	r13, Z+
   11b24:	1f 01       	movw	r2, r30
   11b26:	82 e5       	ldi	r24, 0x52	; 82
   11b28:	95 e2       	ldi	r25, 0x25	; 37
   11b2a:	b6 01       	movw	r22, r12
   11b2c:	40 e0       	ldi	r20, 0x00	; 0
   11b2e:	0e 94 50 a1 	call	0x142a0	; 0x142a0 <_ZN5SdFat5chdirEPKcb>
   11b32:	88 23       	and	r24, r24
   11b34:	79 f4       	brne	.+30     	; 0x11b54 <sd_open+0x112>
   11b36:	01 15       	cp	r16, r1
   11b38:	11 05       	cpc	r17, r1
   11b3a:	61 f0       	breq	.+24     	; 0x11b54 <sd_open+0x112>
   11b3c:	82 e5       	ldi	r24, 0x52	; 82
   11b3e:	95 e2       	ldi	r25, 0x25	; 37
   11b40:	b6 01       	movw	r22, r12
   11b42:	41 e0       	ldi	r20, 0x01	; 1
   11b44:	0e 94 9d a1 	call	0x1433a	; 0x1433a <_ZN5SdFat5mkdirEPKcb>
   11b48:	82 e5       	ldi	r24, 0x52	; 82
   11b4a:	95 e2       	ldi	r25, 0x25	; 37
   11b4c:	b6 01       	movw	r22, r12
   11b4e:	40 e0       	ldi	r20, 0x00	; 0
   11b50:	0e 94 50 a1 	call	0x142a0	; 0x142a0 <_ZN5SdFat5chdirEPKcb>
   11b54:	08 94       	sec
   11b56:	81 1c       	adc	r8, r1
   11b58:	91 1c       	adc	r9, r1
   11b5a:	a1 1c       	adc	r10, r1
   11b5c:	b1 1c       	adc	r11, r1
   11b5e:	84 14       	cp	r8, r4
   11b60:	95 04       	cpc	r9, r5
   11b62:	a6 04       	cpc	r10, r6
   11b64:	b7 04       	cpc	r11, r7
   11b66:	dc f2       	brlt	.-74     	; 0x11b1e <sd_open+0xdc>
   11b68:	8a 81       	ldd	r24, Y+2	; 0x02
   11b6a:	9b 81       	ldd	r25, Y+3	; 0x03
   11b6c:	f2 01       	movw	r30, r4
   11b6e:	ee 0f       	add	r30, r30
   11b70:	ff 1f       	adc	r31, r31
   11b72:	ec 0f       	add	r30, r28
   11b74:	fd 1f       	adc	r31, r29
   11b76:	64 81       	ldd	r22, Z+4	; 0x04
   11b78:	75 81       	ldd	r23, Z+5	; 0x05
   11b7a:	04 96       	adiw	r24, 0x04	; 4
   11b7c:	48 8d       	ldd	r20, Y+24	; 0x18
   11b7e:	0e 94 ad 9d 	call	0x13b5a	; 0x13b5a <_ZN10SdBaseFile4openEPKch>
   11b82:	08 2f       	mov	r16, r24
   11b84:	82 e5       	ldi	r24, 0x52	; 82
   11b86:	95 e2       	ldi	r25, 0x25	; 37
   11b88:	60 e9       	ldi	r22, 0x90	; 144
   11b8a:	75 e2       	ldi	r23, 0x25	; 37
   11b8c:	40 e0       	ldi	r20, 0x00	; 0
   11b8e:	0e 94 50 a1 	call	0x142a0	; 0x142a0 <_ZN5SdFat5chdirEPKcb>
   11b92:	89 81       	ldd	r24, Y+1	; 0x01
   11b94:	8f bf       	out	0x3f, r24	; 63
   11b96:	00 23       	and	r16, r16
   11b98:	49 f0       	breq	.+18     	; 0x11bac <sd_open+0x16a>
   11b9a:	85 e7       	ldi	r24, 0x75	; 117
   11b9c:	95 e2       	ldi	r25, 0x25	; 37
   11b9e:	60 e9       	ldi	r22, 0x90	; 144
   11ba0:	75 e2       	ldi	r23, 0x25	; 37
   11ba2:	0e 94 6a 94 	call	0x128d4	; 0x128d4 <_ZN10SdBaseFile11getFilenameEPc>
   11ba6:	8a 81       	ldd	r24, Y+2	; 0x02
   11ba8:	9b 81       	ldd	r25, Y+3	; 0x03
   11baa:	09 c0       	rjmp	.+18     	; 0x11bbe <sd_open+0x17c>
   11bac:	ce 01       	movw	r24, r28
   11bae:	02 96       	adiw	r24, 0x02	; 2
   11bb0:	0e 94 89 b3 	call	0x16712	; 0x16712 <arb_free>
   11bb4:	02 c0       	rjmp	.+4      	; 0x11bba <sd_open+0x178>
   11bb6:	89 81       	ldd	r24, Y+1	; 0x01
   11bb8:	8f bf       	out	0x3f, r24	; 63
   11bba:	80 e0       	ldi	r24, 0x00	; 0
   11bbc:	90 e0       	ldi	r25, 0x00	; 0
   11bbe:	68 96       	adiw	r28, 0x18	; 24
   11bc0:	cd bf       	out	0x3d, r28	; 61
   11bc2:	de bf       	out	0x3e, r29	; 62
   11bc4:	df 91       	pop	r29
   11bc6:	cf 91       	pop	r28
   11bc8:	1f 91       	pop	r17
   11bca:	0f 91       	pop	r16
   11bcc:	ff 90       	pop	r15
   11bce:	ef 90       	pop	r14
   11bd0:	df 90       	pop	r13
   11bd2:	cf 90       	pop	r12
   11bd4:	bf 90       	pop	r11
   11bd6:	af 90       	pop	r10
   11bd8:	9f 90       	pop	r9
   11bda:	8f 90       	pop	r8
   11bdc:	7f 90       	pop	r7
   11bde:	6f 90       	pop	r6
   11be0:	5f 90       	pop	r5
   11be2:	4f 90       	pop	r4
   11be4:	3f 90       	pop	r3
   11be6:	2f 90       	pop	r2
   11be8:	08 95       	ret

00011bea <sd_close>:
   11bea:	1f 93       	push	r17
   11bec:	cf 93       	push	r28
   11bee:	df 93       	push	r29
   11bf0:	0f 92       	push	r0
   11bf2:	0f 92       	push	r0
   11bf4:	cd b7       	in	r28, 0x3d	; 61
   11bf6:	de b7       	in	r29, 0x3e	; 62
   11bf8:	89 83       	std	Y+1, r24	; 0x01
   11bfa:	9a 83       	std	Y+2, r25	; 0x02
   11bfc:	04 96       	adiw	r24, 0x04	; 4
   11bfe:	0e 94 4c 99 	call	0x13298	; 0x13298 <_ZN10SdBaseFile5closeEv>
   11c02:	18 2f       	mov	r17, r24
   11c04:	88 23       	and	r24, r24
   11c06:	21 f0       	breq	.+8      	; 0x11c10 <sd_close+0x26>
   11c08:	ce 01       	movw	r24, r28
   11c0a:	01 96       	adiw	r24, 0x01	; 1
   11c0c:	0e 94 89 b3 	call	0x16712	; 0x16712 <arb_free>
   11c10:	81 2f       	mov	r24, r17
   11c12:	0f 90       	pop	r0
   11c14:	0f 90       	pop	r0
   11c16:	df 91       	pop	r29
   11c18:	cf 91       	pop	r28
   11c1a:	1f 91       	pop	r17
   11c1c:	08 95       	ret

00011c1e <sd_ls>:
   11c1e:	82 e5       	ldi	r24, 0x52	; 82
   11c20:	95 e2       	ldi	r25, 0x25	; 37
   11c22:	67 e0       	ldi	r22, 0x07	; 7
   11c24:	0e 94 92 a1 	call	0x14324	; 0x14324 <_ZN5SdFat2lsEh>
   11c28:	08 95       	ret

00011c2a <sd_chdir>:
   11c2a:	bc 01       	movw	r22, r24
   11c2c:	82 e5       	ldi	r24, 0x52	; 82
   11c2e:	95 e2       	ldi	r25, 0x25	; 37
   11c30:	40 e0       	ldi	r20, 0x00	; 0
   11c32:	0e 94 50 a1 	call	0x142a0	; 0x142a0 <_ZN5SdFat5chdirEPKcb>
   11c36:	08 95       	ret

00011c38 <sd_mkdir>:
   11c38:	cf 93       	push	r28
   11c3a:	df 93       	push	r29
   11c3c:	ec 01       	movw	r28, r24
   11c3e:	61 e0       	ldi	r22, 0x01	; 1
   11c40:	88 81       	ld	r24, Y
   11c42:	88 23       	and	r24, r24
   11c44:	09 f4       	brne	.+2      	; 0x11c48 <sd_mkdir+0x10>
   11c46:	60 e0       	ldi	r22, 0x00	; 0
   11c48:	82 e5       	ldi	r24, 0x52	; 82
   11c4a:	95 e2       	ldi	r25, 0x25	; 37
   11c4c:	0e 94 fd a0 	call	0x141fa	; 0x141fa <_ZN5SdFat5chdirEb>
   11c50:	88 23       	and	r24, r24
   11c52:	39 f4       	brne	.+14     	; 0x11c62 <sd_mkdir+0x2a>
   11c54:	82 e5       	ldi	r24, 0x52	; 82
   11c56:	95 e2       	ldi	r25, 0x25	; 37
   11c58:	be 01       	movw	r22, r28
   11c5a:	41 e0       	ldi	r20, 0x01	; 1
   11c5c:	0e 94 9d a1 	call	0x1433a	; 0x1433a <_ZN5SdFat5mkdirEPKcb>
   11c60:	01 c0       	rjmp	.+2      	; 0x11c64 <sd_mkdir+0x2c>
   11c62:	80 e0       	ldi	r24, 0x00	; 0
   11c64:	df 91       	pop	r29
   11c66:	cf 91       	pop	r28
   11c68:	08 95       	ret

00011c6a <sd_rmdir>:
   11c6a:	bc 01       	movw	r22, r24
   11c6c:	82 e5       	ldi	r24, 0x52	; 82
   11c6e:	95 e2       	ldi	r25, 0x25	; 37
   11c70:	0e 94 ba a1 	call	0x14374	; 0x14374 <_ZN5SdFat5rmdirEPKc>
   11c74:	08 95       	ret

00011c76 <sd_remove>:
   11c76:	bc 01       	movw	r22, r24
   11c78:	82 e5       	ldi	r24, 0x52	; 82
   11c7a:	95 e2       	ldi	r25, 0x25	; 37
   11c7c:	0e 94 b6 a1 	call	0x1436c	; 0x1436c <_ZN5SdFat6removeEPKc>
   11c80:	08 95       	ret

00011c82 <sd_rmDashR>:
   11c82:	85 e7       	ldi	r24, 0x75	; 117
   11c84:	95 e2       	ldi	r25, 0x25	; 37
   11c86:	0e 94 1c 9b 	call	0x13638	; 0x13638 <_ZN10SdBaseFile8rmRfStarEv>
   11c8a:	08 95       	ret

00011c8c <sd_write>:
   11c8c:	0f 93       	push	r16
   11c8e:	1f 93       	push	r17
   11c90:	cf 93       	push	r28
   11c92:	df 93       	push	r29
   11c94:	0f 92       	push	r0
   11c96:	0f 92       	push	r0
   11c98:	cd b7       	in	r28, 0x3d	; 61
   11c9a:	de b7       	in	r29, 0x3e	; 62
   11c9c:	89 83       	std	Y+1, r24	; 0x01
   11c9e:	9a 83       	std	Y+2, r25	; 0x02
   11ca0:	cb 01       	movw	r24, r22
   11ca2:	ba 01       	movw	r22, r20
   11ca4:	a9 01       	movw	r20, r18
   11ca6:	0e 94 d6 a1 	call	0x143ac	; 0x143ac <_ZN6SdFile5writeEPKvj>
   11caa:	8c 01       	movw	r16, r24
   11cac:	22 27       	eor	r18, r18
   11cae:	17 fd       	sbrc	r17, 7
   11cb0:	20 95       	com	r18
   11cb2:	32 2f       	mov	r19, r18
   11cb4:	b8 01       	movw	r22, r16
   11cb6:	c9 01       	movw	r24, r18
   11cb8:	0f 90       	pop	r0
   11cba:	0f 90       	pop	r0
   11cbc:	df 91       	pop	r29
   11cbe:	cf 91       	pop	r28
   11cc0:	1f 91       	pop	r17
   11cc2:	0f 91       	pop	r16
   11cc4:	08 95       	ret

00011cc6 <sd_read>:
   11cc6:	0f 93       	push	r16
   11cc8:	1f 93       	push	r17
   11cca:	cf 93       	push	r28
   11ccc:	df 93       	push	r29
   11cce:	0f 92       	push	r0
   11cd0:	0f 92       	push	r0
   11cd2:	cd b7       	in	r28, 0x3d	; 61
   11cd4:	de b7       	in	r29, 0x3e	; 62
   11cd6:	89 83       	std	Y+1, r24	; 0x01
   11cd8:	9a 83       	std	Y+2, r25	; 0x02
   11cda:	cb 01       	movw	r24, r22
   11cdc:	ba 01       	movw	r22, r20
   11cde:	a9 01       	movw	r20, r18
   11ce0:	04 96       	adiw	r24, 0x04	; 4
   11ce2:	0e 94 2a 95 	call	0x12a54	; 0x12a54 <_ZN10SdBaseFile4readEPvj>
   11ce6:	8c 01       	movw	r16, r24
   11ce8:	22 27       	eor	r18, r18
   11cea:	17 fd       	sbrc	r17, 7
   11cec:	20 95       	com	r18
   11cee:	32 2f       	mov	r19, r18
   11cf0:	b8 01       	movw	r22, r16
   11cf2:	c9 01       	movw	r24, r18
   11cf4:	0f 90       	pop	r0
   11cf6:	0f 90       	pop	r0
   11cf8:	df 91       	pop	r29
   11cfa:	cf 91       	pop	r28
   11cfc:	1f 91       	pop	r17
   11cfe:	0f 91       	pop	r16
   11d00:	08 95       	ret

00011d02 <sd_fileSize>:
   11d02:	fc 01       	movw	r30, r24
   11d04:	67 89       	ldd	r22, Z+23	; 0x17
   11d06:	70 8d       	ldd	r23, Z+24	; 0x18
   11d08:	81 8d       	ldd	r24, Z+25	; 0x19
   11d0a:	92 8d       	ldd	r25, Z+26	; 0x1a
   11d0c:	08 95       	ret

00011d0e <sd_rewind>:
   11d0e:	04 96       	adiw	r24, 0x04	; 4
   11d10:	40 e0       	ldi	r20, 0x00	; 0
   11d12:	50 e0       	ldi	r21, 0x00	; 0
   11d14:	ba 01       	movw	r22, r20
   11d16:	0e 94 b2 97 	call	0x12f64	; 0x12f64 <_ZN10SdBaseFile7seekSetEm>
   11d1a:	08 95       	ret

00011d1c <sd_truncate>:
   11d1c:	04 96       	adiw	r24, 0x04	; 4
   11d1e:	0e 94 55 99 	call	0x132aa	; 0x132aa <_ZN10SdBaseFile8truncateEm>
   11d22:	08 95       	ret

00011d24 <_GLOBAL__sub_I_sd_begin>:
   11d24:	89 e1       	ldi	r24, 0x19	; 25
   11d26:	80 93 53 25 	sts	0x2553, r24
   11d2a:	10 92 56 25 	sts	0x2556, r1
   11d2e:	10 92 6e 25 	sts	0x256E, r1
   11d32:	10 92 75 25 	sts	0x2575, r1
   11d36:	10 92 78 25 	sts	0x2578, r1
   11d3a:	08 95       	ret

00011d3c <_ZL18blockTransCompletePaj>:
   11d3c:	81 e0       	ldi	r24, 0x01	; 1
   11d3e:	80 93 9f 25 	sts	0x259F, r24
   11d42:	08 95       	ret

00011d44 <_ZL9CRC_CCITTPKhj>:
   11d44:	fc 01       	movw	r30, r24
   11d46:	40 e0       	ldi	r20, 0x00	; 0
   11d48:	50 e0       	ldi	r21, 0x00	; 0
   11d4a:	80 e0       	ldi	r24, 0x00	; 0
   11d4c:	90 e0       	ldi	r25, 0x00	; 0
   11d4e:	25 c0       	rjmp	.+74     	; 0x11d9a <_ZL9CRC_CCITTPKhj+0x56>
   11d50:	29 2f       	mov	r18, r25
   11d52:	30 e0       	ldi	r19, 0x00	; 0
   11d54:	98 2f       	mov	r25, r24
   11d56:	88 27       	eor	r24, r24
   11d58:	28 2b       	or	r18, r24
   11d5a:	39 2b       	or	r19, r25
   11d5c:	81 91       	ld	r24, Z+
   11d5e:	90 e0       	ldi	r25, 0x00	; 0
   11d60:	28 27       	eor	r18, r24
   11d62:	39 27       	eor	r19, r25
   11d64:	82 2f       	mov	r24, r18
   11d66:	90 e0       	ldi	r25, 0x00	; 0
   11d68:	b4 e0       	ldi	r27, 0x04	; 4
   11d6a:	95 95       	asr	r25
   11d6c:	87 95       	ror	r24
   11d6e:	ba 95       	dec	r27
   11d70:	e1 f7       	brne	.-8      	; 0x11d6a <_ZL9CRC_CCITTPKhj+0x26>
   11d72:	82 27       	eor	r24, r18
   11d74:	93 27       	eor	r25, r19
   11d76:	9c 01       	movw	r18, r24
   11d78:	32 2f       	mov	r19, r18
   11d7a:	22 27       	eor	r18, r18
   11d7c:	32 95       	swap	r19
   11d7e:	30 7f       	andi	r19, 0xF0	; 240
   11d80:	28 27       	eor	r18, r24
   11d82:	39 27       	eor	r19, r25
   11d84:	c9 01       	movw	r24, r18
   11d86:	90 70       	andi	r25, 0x00	; 0
   11d88:	b5 e0       	ldi	r27, 0x05	; 5
   11d8a:	88 0f       	add	r24, r24
   11d8c:	99 1f       	adc	r25, r25
   11d8e:	ba 95       	dec	r27
   11d90:	e1 f7       	brne	.-8      	; 0x11d8a <_ZL9CRC_CCITTPKhj+0x46>
   11d92:	82 27       	eor	r24, r18
   11d94:	93 27       	eor	r25, r19
   11d96:	4f 5f       	subi	r20, 0xFF	; 255
   11d98:	5f 4f       	sbci	r21, 0xFF	; 255
   11d9a:	46 17       	cp	r20, r22
   11d9c:	57 07       	cpc	r21, r23
   11d9e:	c1 f6       	brne	.-80     	; 0x11d50 <_ZL9CRC_CCITTPKhj+0xc>
   11da0:	08 95       	ret

00011da2 <_ZL7spiSendh>:
   11da2:	68 2f       	mov	r22, r24
   11da4:	20 91 9d 25 	lds	r18, 0x259D
   11da8:	30 91 9e 25 	lds	r19, 0x259E
   11dac:	c9 01       	movw	r24, r18
   11dae:	0e 94 1c 31 	call	0x6238	; 0x6238 <hal_spiWriteByte>
   11db2:	08 95       	ret

00011db4 <_ZL6spiRecv>:
   11db4:	cf 93       	push	r28
   11db6:	df 93       	push	r29
   11db8:	0f 92       	push	r0
   11dba:	cd b7       	in	r28, 0x3d	; 61
   11dbc:	de b7       	in	r29, 0x3e	; 62
   11dbe:	80 91 9d 25 	lds	r24, 0x259D
   11dc2:	90 91 9e 25 	lds	r25, 0x259E
   11dc6:	be 01       	movw	r22, r28
   11dc8:	6f 5f       	subi	r22, 0xFF	; 255
   11dca:	7f 4f       	sbci	r23, 0xFF	; 255
   11dcc:	0e 94 cb 30 	call	0x6196	; 0x6196 <hal_spiReadByte>
   11dd0:	89 81       	ldd	r24, Y+1	; 0x01
   11dd2:	0f 90       	pop	r0
   11dd4:	df 91       	pop	r29
   11dd6:	cf 91       	pop	r28
   11dd8:	08 95       	ret

00011dda <millis>:
   11dda:	0e 94 8b 7f 	call	0xff16	; 0xff16 <arb_sysMsecNow>
   11dde:	95 2f       	mov	r25, r21
   11de0:	b9 01       	movw	r22, r18
   11de2:	84 2f       	mov	r24, r20
   11de4:	08 95       	ret

00011de6 <_Z11millisDeltamm>:
   11de6:	2f 92       	push	r2
   11de8:	3f 92       	push	r3
   11dea:	4f 92       	push	r4
   11dec:	5f 92       	push	r5
   11dee:	6f 92       	push	r6
   11df0:	7f 92       	push	r7
   11df2:	8f 92       	push	r8
   11df4:	9f 92       	push	r9
   11df6:	af 92       	push	r10
   11df8:	bf 92       	push	r11
   11dfa:	cf 92       	push	r12
   11dfc:	df 92       	push	r13
   11dfe:	ef 92       	push	r14
   11e00:	ff 92       	push	r15
   11e02:	0f 93       	push	r16
   11e04:	1f 93       	push	r17
   11e06:	cf 93       	push	r28
   11e08:	df 93       	push	r29
   11e0a:	dc 01       	movw	r26, r24
   11e0c:	cb 01       	movw	r24, r22
   11e0e:	19 01       	movw	r2, r18
   11e10:	2a 01       	movw	r4, r20
   11e12:	9c 01       	movw	r18, r24
   11e14:	ad 01       	movw	r20, r26
   11e16:	60 e0       	ldi	r22, 0x00	; 0
   11e18:	70 e0       	ldi	r23, 0x00	; 0
   11e1a:	80 e0       	ldi	r24, 0x00	; 0
   11e1c:	90 e0       	ldi	r25, 0x00	; 0
   11e1e:	51 01       	movw	r10, r2
   11e20:	62 01       	movw	r12, r4
   11e22:	ee 24       	eor	r14, r14
   11e24:	ff 24       	eor	r15, r15
   11e26:	00 e0       	ldi	r16, 0x00	; 0
   11e28:	10 e0       	ldi	r17, 0x00	; 0
   11e2a:	0e 94 9c 7f 	call	0xff38	; 0xff38 <arb_sysMsecDelta>
   11e2e:	95 2f       	mov	r25, r21
   11e30:	b9 01       	movw	r22, r18
   11e32:	84 2f       	mov	r24, r20
   11e34:	df 91       	pop	r29
   11e36:	cf 91       	pop	r28
   11e38:	1f 91       	pop	r17
   11e3a:	0f 91       	pop	r16
   11e3c:	ff 90       	pop	r15
   11e3e:	ef 90       	pop	r14
   11e40:	df 90       	pop	r13
   11e42:	cf 90       	pop	r12
   11e44:	bf 90       	pop	r11
   11e46:	af 90       	pop	r10
   11e48:	9f 90       	pop	r9
   11e4a:	8f 90       	pop	r8
   11e4c:	7f 90       	pop	r7
   11e4e:	6f 90       	pop	r6
   11e50:	5f 90       	pop	r5
   11e52:	4f 90       	pop	r4
   11e54:	3f 90       	pop	r3
   11e56:	2f 90       	pop	r2
   11e58:	08 95       	ret

00011e5a <_ZN7Sd2Card14chipSelectHighEv>:
   11e5a:	80 91 9d 25 	lds	r24, 0x259D
   11e5e:	90 91 9e 25 	lds	r25, 0x259E
   11e62:	61 e0       	ldi	r22, 0x01	; 1
   11e64:	0e 94 7e 2f 	call	0x5efc	; 0x5efc <hal_spiSetChipSelect>
   11e68:	8f ef       	ldi	r24, 0xFF	; 255
   11e6a:	0e 94 d1 8e 	call	0x11da2	; 0x11da2 <_ZL7spiSendh>
   11e6e:	08 95       	ret

00011e70 <_ZN7Sd2Card13chipSelectLowEv>:
   11e70:	80 91 9d 25 	lds	r24, 0x259D
   11e74:	90 91 9e 25 	lds	r25, 0x259E
   11e78:	60 e0       	ldi	r22, 0x00	; 0
   11e7a:	0e 94 7e 2f 	call	0x5efc	; 0x5efc <hal_spiSetChipSelect>
   11e7e:	08 95       	ret

00011e80 <_ZN7Sd2Card8readDataEPhj>:
   11e80:	6f 92       	push	r6
   11e82:	7f 92       	push	r7
   11e84:	8f 92       	push	r8
   11e86:	9f 92       	push	r9
   11e88:	af 92       	push	r10
   11e8a:	bf 92       	push	r11
   11e8c:	cf 92       	push	r12
   11e8e:	df 92       	push	r13
   11e90:	ef 92       	push	r14
   11e92:	ff 92       	push	r15
   11e94:	0f 93       	push	r16
   11e96:	1f 93       	push	r17
   11e98:	cf 93       	push	r28
   11e9a:	df 93       	push	r29
   11e9c:	ec 01       	movw	r28, r24
   11e9e:	8b 01       	movw	r16, r22
   11ea0:	3a 01       	movw	r6, r20
   11ea2:	0e 94 ed 8e 	call	0x11dda	; 0x11dda <millis>
   11ea6:	6b 01       	movw	r12, r22
   11ea8:	7c 01       	movw	r14, r24
   11eaa:	12 c0       	rjmp	.+36     	; 0x11ed0 <_ZN7Sd2Card8readDataEPhj+0x50>
   11eac:	0e 94 ed 8e 	call	0x11dda	; 0x11dda <millis>
   11eb0:	a7 01       	movw	r20, r14
   11eb2:	96 01       	movw	r18, r12
   11eb4:	0e 94 f3 8e 	call	0x11de6	; 0x11de6 <_Z11millisDeltamm>
   11eb8:	dc 01       	movw	r26, r24
   11eba:	cb 01       	movw	r24, r22
   11ebc:	8d 32       	cpi	r24, 0x2D	; 45
   11ebe:	21 e0       	ldi	r18, 0x01	; 1
   11ec0:	92 07       	cpc	r25, r18
   11ec2:	20 e0       	ldi	r18, 0x00	; 0
   11ec4:	a2 07       	cpc	r26, r18
   11ec6:	20 e0       	ldi	r18, 0x00	; 0
   11ec8:	b2 07       	cpc	r27, r18
   11eca:	10 f0       	brcs	.+4      	; 0x11ed0 <_ZN7Sd2Card8readDataEPhj+0x50>
   11ecc:	81 e1       	ldi	r24, 0x11	; 17
   11ece:	57 c0       	rjmp	.+174    	; 0x11f7e <_ZN7Sd2Card8readDataEPhj+0xfe>
   11ed0:	0e 94 da 8e 	call	0x11db4	; 0x11db4 <_ZL6spiRecv>
   11ed4:	8b 83       	std	Y+3, r24	; 0x03
   11ed6:	8f 3f       	cpi	r24, 0xFF	; 255
   11ed8:	49 f3       	breq	.-46     	; 0x11eac <_ZN7Sd2Card8readDataEPhj+0x2c>
   11eda:	8e 3f       	cpi	r24, 0xFE	; 254
   11edc:	11 f0       	breq	.+4      	; 0x11ee2 <_ZN7Sd2Card8readDataEPhj+0x62>
   11ede:	8f e0       	ldi	r24, 0x0F	; 15
   11ee0:	4e c0       	rjmp	.+156    	; 0x11f7e <_ZN7Sd2Card8readDataEPhj+0xfe>
   11ee2:	0e 94 4a 80 	call	0x10094	; 0x10094 <arb_sysTimerEnabled>
   11ee6:	88 23       	and	r24, r24
   11ee8:	99 f0       	breq	.+38     	; 0x11f10 <_ZN7Sd2Card8readDataEPhj+0x90>
   11eea:	0f b6       	in	r0, 0x3f	; 63
   11eec:	07 fe       	sbrs	r0, 7
   11eee:	10 c0       	rjmp	.+32     	; 0x11f10 <_ZN7Sd2Card8readDataEPhj+0x90>
   11ef0:	5f c0       	rjmp	.+190    	; 0x11fb0 <_ZN7Sd2Card8readDataEPhj+0x130>
   11ef2:	80 91 9d 25 	lds	r24, 0x259D
   11ef6:	90 91 9e 25 	lds	r25, 0x259E
   11efa:	b8 01       	movw	r22, r16
   11efc:	68 0d       	add	r22, r8
   11efe:	79 1d       	adc	r23, r9
   11f00:	0e 94 cb 30 	call	0x6196	; 0x6196 <hal_spiReadByte>
   11f04:	08 94       	sec
   11f06:	81 1c       	adc	r8, r1
   11f08:	91 1c       	adc	r9, r1
   11f0a:	a1 1c       	adc	r10, r1
   11f0c:	b1 1c       	adc	r11, r1
   11f0e:	06 c0       	rjmp	.+12     	; 0x11f1c <_ZN7Sd2Card8readDataEPhj+0x9c>
   11f10:	88 24       	eor	r8, r8
   11f12:	99 24       	eor	r9, r9
   11f14:	54 01       	movw	r10, r8
   11f16:	63 01       	movw	r12, r6
   11f18:	ee 24       	eor	r14, r14
   11f1a:	ff 24       	eor	r15, r15
   11f1c:	8c 14       	cp	r8, r12
   11f1e:	9d 04       	cpc	r9, r13
   11f20:	ae 04       	cpc	r10, r14
   11f22:	bf 04       	cpc	r11, r15
   11f24:	30 f3       	brcs	.-52     	; 0x11ef2 <_ZN7Sd2Card8readDataEPhj+0x72>
   11f26:	16 c0       	rjmp	.+44     	; 0x11f54 <_ZN7Sd2Card8readDataEPhj+0xd4>
   11f28:	0e 94 ed 8e 	call	0x11dda	; 0x11dda <millis>
   11f2c:	a7 01       	movw	r20, r14
   11f2e:	96 01       	movw	r18, r12
   11f30:	0e 94 f3 8e 	call	0x11de6	; 0x11de6 <_Z11millisDeltamm>
   11f34:	dc 01       	movw	r26, r24
   11f36:	cb 01       	movw	r24, r22
   11f38:	8d 3d       	cpi	r24, 0xDD	; 221
   11f3a:	25 e0       	ldi	r18, 0x05	; 5
   11f3c:	92 07       	cpc	r25, r18
   11f3e:	20 e0       	ldi	r18, 0x00	; 0
   11f40:	a2 07       	cpc	r26, r18
   11f42:	20 e0       	ldi	r18, 0x00	; 0
   11f44:	b2 07       	cpc	r27, r18
   11f46:	20 f4       	brcc	.+8      	; 0x11f50 <_ZN7Sd2Card8readDataEPhj+0xd0>
   11f48:	80 91 9f 25 	lds	r24, 0x259F
   11f4c:	88 23       	and	r24, r24
   11f4e:	61 f3       	breq	.-40     	; 0x11f28 <_ZN7Sd2Card8readDataEPhj+0xa8>
   11f50:	10 92 9f 25 	sts	0x259F, r1
   11f54:	1b 82       	std	Y+3, r1	; 0x03
   11f56:	0e 94 da 8e 	call	0x11db4	; 0x11db4 <_ZL6spiRecv>
   11f5a:	88 2e       	mov	r8, r24
   11f5c:	0e 94 da 8e 	call	0x11db4	; 0x11db4 <_ZL6spiRecv>
   11f60:	c8 2e       	mov	r12, r24
   11f62:	c8 01       	movw	r24, r16
   11f64:	b3 01       	movw	r22, r6
   11f66:	0e 94 a2 8e 	call	0x11d44	; 0x11d44 <_ZL9CRC_CCITTPKhj>
   11f6a:	58 2d       	mov	r21, r8
   11f6c:	40 e0       	ldi	r20, 0x00	; 0
   11f6e:	2c 2d       	mov	r18, r12
   11f70:	30 e0       	ldi	r19, 0x00	; 0
   11f72:	24 2b       	or	r18, r20
   11f74:	35 2b       	or	r19, r21
   11f76:	28 17       	cp	r18, r24
   11f78:	39 07       	cpc	r19, r25
   11f7a:	39 f0       	breq	.+14     	; 0x11f8a <_ZN7Sd2Card8readDataEPhj+0x10a>
   11f7c:	8b e1       	ldi	r24, 0x1B	; 27
   11f7e:	89 83       	std	Y+1, r24	; 0x01
   11f80:	ce 01       	movw	r24, r28
   11f82:	0e 94 2d 8f 	call	0x11e5a	; 0x11e5a <_ZN7Sd2Card14chipSelectHighEv>
   11f86:	80 e0       	ldi	r24, 0x00	; 0
   11f88:	04 c0       	rjmp	.+8      	; 0x11f92 <_ZN7Sd2Card8readDataEPhj+0x112>
   11f8a:	ce 01       	movw	r24, r28
   11f8c:	0e 94 2d 8f 	call	0x11e5a	; 0x11e5a <_ZN7Sd2Card14chipSelectHighEv>
   11f90:	81 e0       	ldi	r24, 0x01	; 1
   11f92:	df 91       	pop	r29
   11f94:	cf 91       	pop	r28
   11f96:	1f 91       	pop	r17
   11f98:	0f 91       	pop	r16
   11f9a:	ff 90       	pop	r15
   11f9c:	ef 90       	pop	r14
   11f9e:	df 90       	pop	r13
   11fa0:	cf 90       	pop	r12
   11fa2:	bf 90       	pop	r11
   11fa4:	af 90       	pop	r10
   11fa6:	9f 90       	pop	r9
   11fa8:	8f 90       	pop	r8
   11faa:	7f 90       	pop	r7
   11fac:	6f 90       	pop	r6
   11fae:	08 95       	ret
   11fb0:	80 91 9d 25 	lds	r24, 0x259D
   11fb4:	90 91 9e 25 	lds	r25, 0x259E
   11fb8:	60 e0       	ldi	r22, 0x00	; 0
   11fba:	a8 01       	movw	r20, r16
   11fbc:	93 01       	movw	r18, r6
   11fbe:	0e 94 ee 32 	call	0x65dc	; 0x65dc <hal_spiReadBlock>
   11fc2:	0e 94 ed 8e 	call	0x11dda	; 0x11dda <millis>
   11fc6:	6b 01       	movw	r12, r22
   11fc8:	7c 01       	movw	r14, r24
   11fca:	be cf       	rjmp	.-132    	; 0x11f48 <_ZN7Sd2Card8readDataEPhj+0xc8>

00011fcc <_ZN7Sd2Card8readDataEPh>:
   11fcc:	0f 93       	push	r16
   11fce:	1f 93       	push	r17
   11fd0:	cf 93       	push	r28
   11fd2:	df 93       	push	r29
   11fd4:	ec 01       	movw	r28, r24
   11fd6:	8b 01       	movw	r16, r22
   11fd8:	0e 94 38 8f 	call	0x11e70	; 0x11e70 <_ZN7Sd2Card13chipSelectLowEv>
   11fdc:	ce 01       	movw	r24, r28
   11fde:	b8 01       	movw	r22, r16
   11fe0:	40 e0       	ldi	r20, 0x00	; 0
   11fe2:	52 e0       	ldi	r21, 0x02	; 2
   11fe4:	0e 94 40 8f 	call	0x11e80	; 0x11e80 <_ZN7Sd2Card8readDataEPhj>
   11fe8:	df 91       	pop	r29
   11fea:	cf 91       	pop	r28
   11fec:	1f 91       	pop	r17
   11fee:	0f 91       	pop	r16
   11ff0:	08 95       	ret

00011ff2 <_ZN7Sd2Card11waitNotBusyEj>:
   11ff2:	8f 92       	push	r8
   11ff4:	9f 92       	push	r9
   11ff6:	af 92       	push	r10
   11ff8:	bf 92       	push	r11
   11ffa:	cf 92       	push	r12
   11ffc:	df 92       	push	r13
   11ffe:	ef 92       	push	r14
   12000:	ff 92       	push	r15
   12002:	6b 01       	movw	r12, r22
   12004:	0e 94 ed 8e 	call	0x11dda	; 0x11dda <millis>
   12008:	4b 01       	movw	r8, r22
   1200a:	5c 01       	movw	r10, r24
   1200c:	ee 24       	eor	r14, r14
   1200e:	ff 24       	eor	r15, r15
   12010:	0d c0       	rjmp	.+26     	; 0x1202c <_ZN7Sd2Card11waitNotBusyEj+0x3a>
   12012:	0e 94 ed 8e 	call	0x11dda	; 0x11dda <millis>
   12016:	a5 01       	movw	r20, r10
   12018:	94 01       	movw	r18, r8
   1201a:	0e 94 f3 8e 	call	0x11de6	; 0x11de6 <_Z11millisDeltamm>
   1201e:	dc 01       	movw	r26, r24
   12020:	cb 01       	movw	r24, r22
   12022:	8c 15       	cp	r24, r12
   12024:	9d 05       	cpc	r25, r13
   12026:	ae 05       	cpc	r26, r14
   12028:	bf 05       	cpc	r27, r15
   1202a:	30 f4       	brcc	.+12     	; 0x12038 <_ZN7Sd2Card11waitNotBusyEj+0x46>
   1202c:	0e 94 da 8e 	call	0x11db4	; 0x11db4 <_ZL6spiRecv>
   12030:	8f 3f       	cpi	r24, 0xFF	; 255
   12032:	79 f7       	brne	.-34     	; 0x12012 <_ZN7Sd2Card11waitNotBusyEj+0x20>
   12034:	81 e0       	ldi	r24, 0x01	; 1
   12036:	01 c0       	rjmp	.+2      	; 0x1203a <_ZN7Sd2Card11waitNotBusyEj+0x48>
   12038:	80 e0       	ldi	r24, 0x00	; 0
   1203a:	ff 90       	pop	r15
   1203c:	ef 90       	pop	r14
   1203e:	df 90       	pop	r13
   12040:	cf 90       	pop	r12
   12042:	bf 90       	pop	r11
   12044:	af 90       	pop	r10
   12046:	9f 90       	pop	r9
   12048:	8f 90       	pop	r8
   1204a:	08 95       	ret

0001204c <_ZN7Sd2Card11cardCommandEhm>:
   1204c:	df 92       	push	r13
   1204e:	ef 92       	push	r14
   12050:	ff 92       	push	r15
   12052:	0f 93       	push	r16
   12054:	1f 93       	push	r17
   12056:	cf 93       	push	r28
   12058:	df 93       	push	r29
   1205a:	cd b7       	in	r28, 0x3d	; 61
   1205c:	de b7       	in	r29, 0x3e	; 62
   1205e:	2b 97       	sbiw	r28, 0x0b	; 11
   12060:	cd bf       	out	0x3d, r28	; 61
   12062:	de bf       	out	0x3e, r29	; 62
   12064:	7c 01       	movw	r14, r24
   12066:	d6 2e       	mov	r13, r22
   12068:	2f 83       	std	Y+7, r18	; 0x07
   1206a:	38 87       	std	Y+8, r19	; 0x08
   1206c:	49 87       	std	Y+9, r20	; 0x09
   1206e:	5a 87       	std	Y+10, r21	; 0x0a
   12070:	0e 94 38 8f 	call	0x11e70	; 0x11e70 <_ZN7Sd2Card13chipSelectLowEv>
   12074:	c7 01       	movw	r24, r14
   12076:	6c e2       	ldi	r22, 0x2C	; 44
   12078:	71 e0       	ldi	r23, 0x01	; 1
   1207a:	0e 94 f9 8f 	call	0x11ff2	; 0x11ff2 <_ZN7Sd2Card11waitNotBusyEj>
   1207e:	fe 01       	movw	r30, r28
   12080:	31 96       	adiw	r30, 0x01	; 1
   12082:	86 e0       	ldi	r24, 0x06	; 6
   12084:	df 01       	movw	r26, r30
   12086:	1d 92       	st	X+, r1
   12088:	8a 95       	dec	r24
   1208a:	e9 f7       	brne	.-6      	; 0x12086 <_ZN7Sd2Card11cardCommandEhm+0x3a>
   1208c:	8d 2d       	mov	r24, r13
   1208e:	80 64       	ori	r24, 0x40	; 64
   12090:	89 83       	std	Y+1, r24	; 0x01
   12092:	8a 85       	ldd	r24, Y+10	; 0x0a
   12094:	8a 83       	std	Y+2, r24	; 0x02
   12096:	89 85       	ldd	r24, Y+9	; 0x09
   12098:	8b 83       	std	Y+3, r24	; 0x03
   1209a:	88 85       	ldd	r24, Y+8	; 0x08
   1209c:	8c 83       	std	Y+4, r24	; 0x04
   1209e:	8f 81       	ldd	r24, Y+7	; 0x07
   120a0:	8d 83       	std	Y+5, r24	; 0x05
   120a2:	40 e0       	ldi	r20, 0x00	; 0
   120a4:	50 e0       	ldi	r21, 0x00	; 0
   120a6:	a9 e0       	ldi	r26, 0x09	; 9
   120a8:	71 91       	ld	r23, Z+
   120aa:	68 e0       	ldi	r22, 0x08	; 8
   120ac:	44 0f       	add	r20, r20
   120ae:	84 2f       	mov	r24, r20
   120b0:	90 e0       	ldi	r25, 0x00	; 0
   120b2:	27 2f       	mov	r18, r23
   120b4:	30 e0       	ldi	r19, 0x00	; 0
   120b6:	82 27       	eor	r24, r18
   120b8:	93 27       	eor	r25, r19
   120ba:	87 fd       	sbrc	r24, 7
   120bc:	4a 27       	eor	r20, r26
   120be:	77 0f       	add	r23, r23
   120c0:	61 50       	subi	r22, 0x01	; 1
   120c2:	a1 f7       	brne	.-24     	; 0x120ac <_ZN7Sd2Card11cardCommandEhm+0x60>
   120c4:	5f 5f       	subi	r21, 0xFF	; 255
   120c6:	55 30       	cpi	r21, 0x05	; 5
   120c8:	79 f7       	brne	.-34     	; 0x120a8 <_ZN7Sd2Card11cardCommandEhm+0x5c>
   120ca:	44 0f       	add	r20, r20
   120cc:	41 60       	ori	r20, 0x01	; 1
   120ce:	4e 83       	std	Y+6, r20	; 0x06
   120d0:	8e 01       	movw	r16, r28
   120d2:	0f 5f       	subi	r16, 0xFF	; 255
   120d4:	1f 4f       	sbci	r17, 0xFF	; 255
   120d6:	90 e0       	ldi	r25, 0x00	; 0
   120d8:	f8 01       	movw	r30, r16
   120da:	81 91       	ld	r24, Z+
   120dc:	8f 01       	movw	r16, r30
   120de:	9b 87       	std	Y+11, r25	; 0x0b
   120e0:	0e 94 d1 8e 	call	0x11da2	; 0x11da2 <_ZL7spiSendh>
   120e4:	9b 85       	ldd	r25, Y+11	; 0x0b
   120e6:	9f 5f       	subi	r25, 0xFF	; 255
   120e8:	96 30       	cpi	r25, 0x06	; 6
   120ea:	b1 f7       	brne	.-20     	; 0x120d8 <_ZN7Sd2Card11cardCommandEhm+0x8c>
   120ec:	fc e0       	ldi	r31, 0x0C	; 12
   120ee:	df 16       	cp	r13, r31
   120f0:	11 f4       	brne	.+4      	; 0x120f6 <_ZN7Sd2Card11cardCommandEhm+0xaa>
   120f2:	0e 94 da 8e 	call	0x11db4	; 0x11db4 <_ZL6spiRecv>
   120f6:	00 e0       	ldi	r16, 0x00	; 0
   120f8:	0e 94 da 8e 	call	0x11db4	; 0x11db4 <_ZL6spiRecv>
   120fc:	d7 01       	movw	r26, r14
   120fe:	13 96       	adiw	r26, 0x03	; 3
   12100:	8c 93       	st	X, r24
   12102:	13 97       	sbiw	r26, 0x03	; 3
   12104:	87 ff       	sbrs	r24, 7
   12106:	04 c0       	rjmp	.+8      	; 0x12110 <_ZN7Sd2Card11cardCommandEhm+0xc4>
   12108:	0f 3f       	cpi	r16, 0xFF	; 255
   1210a:	11 f0       	breq	.+4      	; 0x12110 <_ZN7Sd2Card11cardCommandEhm+0xc4>
   1210c:	0f 5f       	subi	r16, 0xFF	; 255
   1210e:	f4 cf       	rjmp	.-24     	; 0x120f8 <_ZN7Sd2Card11cardCommandEhm+0xac>
   12110:	2b 96       	adiw	r28, 0x0b	; 11
   12112:	cd bf       	out	0x3d, r28	; 61
   12114:	de bf       	out	0x3e, r29	; 62
   12116:	df 91       	pop	r29
   12118:	cf 91       	pop	r28
   1211a:	1f 91       	pop	r17
   1211c:	0f 91       	pop	r16
   1211e:	ff 90       	pop	r15
   12120:	ef 90       	pop	r14
   12122:	df 90       	pop	r13
   12124:	08 95       	ret

00012126 <_ZN7Sd2Card8readStopEv>:
   12126:	cf 93       	push	r28
   12128:	df 93       	push	r29
   1212a:	ec 01       	movw	r28, r24
   1212c:	0e 94 38 8f 	call	0x11e70	; 0x11e70 <_ZN7Sd2Card13chipSelectLowEv>
   12130:	ce 01       	movw	r24, r28
   12132:	6c e0       	ldi	r22, 0x0C	; 12
   12134:	20 e0       	ldi	r18, 0x00	; 0
   12136:	30 e0       	ldi	r19, 0x00	; 0
   12138:	a9 01       	movw	r20, r18
   1213a:	0e 94 26 90 	call	0x1204c	; 0x1204c <_ZN7Sd2Card11cardCommandEhm>
   1213e:	88 23       	and	r24, r24
   12140:	39 f0       	breq	.+14     	; 0x12150 <_ZN7Sd2Card8readStopEv+0x2a>
   12142:	83 e0       	ldi	r24, 0x03	; 3
   12144:	89 83       	std	Y+1, r24	; 0x01
   12146:	ce 01       	movw	r24, r28
   12148:	0e 94 2d 8f 	call	0x11e5a	; 0x11e5a <_ZN7Sd2Card14chipSelectHighEv>
   1214c:	80 e0       	ldi	r24, 0x00	; 0
   1214e:	04 c0       	rjmp	.+8      	; 0x12158 <_ZN7Sd2Card8readStopEv+0x32>
   12150:	ce 01       	movw	r24, r28
   12152:	0e 94 2d 8f 	call	0x11e5a	; 0x11e5a <_ZN7Sd2Card14chipSelectHighEv>
   12156:	81 e0       	ldi	r24, 0x01	; 1
   12158:	df 91       	pop	r29
   1215a:	cf 91       	pop	r28
   1215c:	08 95       	ret

0001215e <_ZN7Sd2Card9readStartEm>:
   1215e:	cf 93       	push	r28
   12160:	df 93       	push	r29
   12162:	ec 01       	movw	r28, r24
   12164:	9a 01       	movw	r18, r20
   12166:	ab 01       	movw	r20, r22
   12168:	8c 81       	ldd	r24, Y+4	; 0x04
   1216a:	83 30       	cpi	r24, 0x03	; 3
   1216c:	39 f0       	breq	.+14     	; 0x1217c <_ZN7Sd2Card9readStartEm+0x1e>
   1216e:	89 e0       	ldi	r24, 0x09	; 9
   12170:	22 0f       	add	r18, r18
   12172:	33 1f       	adc	r19, r19
   12174:	44 1f       	adc	r20, r20
   12176:	55 1f       	adc	r21, r21
   12178:	8a 95       	dec	r24
   1217a:	d1 f7       	brne	.-12     	; 0x12170 <_ZN7Sd2Card9readStartEm+0x12>
   1217c:	ce 01       	movw	r24, r28
   1217e:	62 e1       	ldi	r22, 0x12	; 18
   12180:	0e 94 26 90 	call	0x1204c	; 0x1204c <_ZN7Sd2Card11cardCommandEhm>
   12184:	88 23       	and	r24, r24
   12186:	39 f0       	breq	.+14     	; 0x12196 <_ZN7Sd2Card9readStartEm+0x38>
   12188:	85 e0       	ldi	r24, 0x05	; 5
   1218a:	89 83       	std	Y+1, r24	; 0x01
   1218c:	ce 01       	movw	r24, r28
   1218e:	0e 94 2d 8f 	call	0x11e5a	; 0x11e5a <_ZN7Sd2Card14chipSelectHighEv>
   12192:	80 e0       	ldi	r24, 0x00	; 0
   12194:	04 c0       	rjmp	.+8      	; 0x1219e <_ZN7Sd2Card9readStartEm+0x40>
   12196:	ce 01       	movw	r24, r28
   12198:	0e 94 2d 8f 	call	0x11e5a	; 0x11e5a <_ZN7Sd2Card14chipSelectHighEv>
   1219c:	81 e0       	ldi	r24, 0x01	; 1
   1219e:	df 91       	pop	r29
   121a0:	cf 91       	pop	r28
   121a2:	08 95       	ret

000121a4 <_ZN7Sd2Card9readBlockEmPh>:
   121a4:	cf 92       	push	r12
   121a6:	df 92       	push	r13
   121a8:	ef 92       	push	r14
   121aa:	ff 92       	push	r15
   121ac:	0f 93       	push	r16
   121ae:	1f 93       	push	r17
   121b0:	cf 93       	push	r28
   121b2:	df 93       	push	r29
   121b4:	ec 01       	movw	r28, r24
   121b6:	6a 01       	movw	r12, r20
   121b8:	7b 01       	movw	r14, r22
   121ba:	89 01       	movw	r16, r18
   121bc:	8c 81       	ldd	r24, Y+4	; 0x04
   121be:	83 30       	cpi	r24, 0x03	; 3
   121c0:	39 f0       	breq	.+14     	; 0x121d0 <_ZN7Sd2Card9readBlockEmPh+0x2c>
   121c2:	e9 e0       	ldi	r30, 0x09	; 9
   121c4:	cc 0c       	add	r12, r12
   121c6:	dd 1c       	adc	r13, r13
   121c8:	ee 1c       	adc	r14, r14
   121ca:	ff 1c       	adc	r15, r15
   121cc:	ea 95       	dec	r30
   121ce:	d1 f7       	brne	.-12     	; 0x121c4 <_ZN7Sd2Card9readBlockEmPh+0x20>
   121d0:	ce 01       	movw	r24, r28
   121d2:	61 e1       	ldi	r22, 0x11	; 17
   121d4:	a7 01       	movw	r20, r14
   121d6:	96 01       	movw	r18, r12
   121d8:	0e 94 26 90 	call	0x1204c	; 0x1204c <_ZN7Sd2Card11cardCommandEhm>
   121dc:	88 23       	and	r24, r24
   121de:	39 f0       	breq	.+14     	; 0x121ee <_ZN7Sd2Card9readBlockEmPh+0x4a>
   121e0:	84 e0       	ldi	r24, 0x04	; 4
   121e2:	89 83       	std	Y+1, r24	; 0x01
   121e4:	ce 01       	movw	r24, r28
   121e6:	0e 94 2d 8f 	call	0x11e5a	; 0x11e5a <_ZN7Sd2Card14chipSelectHighEv>
   121ea:	80 e0       	ldi	r24, 0x00	; 0
   121ec:	06 c0       	rjmp	.+12     	; 0x121fa <_ZN7Sd2Card9readBlockEmPh+0x56>
   121ee:	ce 01       	movw	r24, r28
   121f0:	b8 01       	movw	r22, r16
   121f2:	40 e0       	ldi	r20, 0x00	; 0
   121f4:	52 e0       	ldi	r21, 0x02	; 2
   121f6:	0e 94 40 8f 	call	0x11e80	; 0x11e80 <_ZN7Sd2Card8readDataEPhj>
   121fa:	df 91       	pop	r29
   121fc:	cf 91       	pop	r28
   121fe:	1f 91       	pop	r17
   12200:	0f 91       	pop	r16
   12202:	ff 90       	pop	r15
   12204:	ef 90       	pop	r14
   12206:	df 90       	pop	r13
   12208:	cf 90       	pop	r12
   1220a:	08 95       	ret

0001220c <_ZN7Sd2Card4initEi>:
   1220c:	8f 92       	push	r8
   1220e:	9f 92       	push	r9
   12210:	af 92       	push	r10
   12212:	bf 92       	push	r11
   12214:	cf 92       	push	r12
   12216:	df 92       	push	r13
   12218:	ef 92       	push	r14
   1221a:	ff 92       	push	r15
   1221c:	0f 93       	push	r16
   1221e:	1f 93       	push	r17
   12220:	cf 93       	push	r28
   12222:	df 93       	push	r29
   12224:	0f 92       	push	r0
   12226:	0f 92       	push	r0
   12228:	cd b7       	in	r28, 0x3d	; 61
   1222a:	de b7       	in	r29, 0x3e	; 62
   1222c:	8c 01       	movw	r16, r24
   1222e:	69 83       	std	Y+1, r22	; 0x01
   12230:	7a 83       	std	Y+2, r23	; 0x02
   12232:	fc 01       	movw	r30, r24
   12234:	14 82       	std	Z+4, r1	; 0x04
   12236:	11 82       	std	Z+1, r1	; 0x01
   12238:	0e 94 ed 8e 	call	0x11dda	; 0x11dda <millis>
   1223c:	89 81       	ldd	r24, Y+1	; 0x01
   1223e:	9a 81       	ldd	r25, Y+2	; 0x02
   12240:	80 93 9d 25 	sts	0x259D, r24
   12244:	90 93 9e 25 	sts	0x259E, r25
   12248:	10 92 9f 25 	sts	0x259F, r1
   1224c:	80 91 9d 25 	lds	r24, 0x259D
   12250:	90 91 9e 25 	lds	r25, 0x259E
   12254:	6e e9       	ldi	r22, 0x9E	; 158
   12256:	7e e8       	ldi	r23, 0x8E	; 142
   12258:	0e 94 4a 2f 	call	0x5e94	; 0x5e94 <hal_spiConfCallBack>
   1225c:	c8 01       	movw	r24, r16
   1225e:	0e 94 2d 8f 	call	0x11e5a	; 0x11e5a <_ZN7Sd2Card14chipSelectHighEv>
   12262:	ba e0       	ldi	r27, 0x0A	; 10
   12264:	cb 2e       	mov	r12, r27
   12266:	8f ef       	ldi	r24, 0xFF	; 255
   12268:	0e 94 d1 8e 	call	0x11da2	; 0x11da2 <_ZL7spiSendh>
   1226c:	ca 94       	dec	r12
   1226e:	d9 f7       	brne	.-10     	; 0x12266 <_ZN7Sd2Card4initEi+0x5a>
   12270:	0e 94 ed 8e 	call	0x11dda	; 0x11dda <millis>
   12274:	6b 01       	movw	r12, r22
   12276:	7c 01       	movw	r14, r24
   12278:	12 c0       	rjmp	.+36     	; 0x1229e <_ZN7Sd2Card4initEi+0x92>
   1227a:	0e 94 ed 8e 	call	0x11dda	; 0x11dda <millis>
   1227e:	a7 01       	movw	r20, r14
   12280:	96 01       	movw	r18, r12
   12282:	0e 94 f3 8e 	call	0x11de6	; 0x11de6 <_Z11millisDeltamm>
   12286:	dc 01       	movw	r26, r24
   12288:	cb 01       	movw	r24, r22
   1228a:	81 3d       	cpi	r24, 0xD1	; 209
   1228c:	f7 e0       	ldi	r31, 0x07	; 7
   1228e:	9f 07       	cpc	r25, r31
   12290:	f0 e0       	ldi	r31, 0x00	; 0
   12292:	af 07       	cpc	r26, r31
   12294:	f0 e0       	ldi	r31, 0x00	; 0
   12296:	bf 07       	cpc	r27, r31
   12298:	10 f0       	brcs	.+4      	; 0x1229e <_ZN7Sd2Card4initEi+0x92>
   1229a:	81 e0       	ldi	r24, 0x01	; 1
   1229c:	86 c0       	rjmp	.+268    	; 0x123aa <_ZN7Sd2Card4initEi+0x19e>
   1229e:	c8 01       	movw	r24, r16
   122a0:	60 e0       	ldi	r22, 0x00	; 0
   122a2:	20 e0       	ldi	r18, 0x00	; 0
   122a4:	30 e0       	ldi	r19, 0x00	; 0
   122a6:	a9 01       	movw	r20, r18
   122a8:	0e 94 26 90 	call	0x1204c	; 0x1204c <_ZN7Sd2Card11cardCommandEhm>
   122ac:	81 30       	cpi	r24, 0x01	; 1
   122ae:	29 f7       	brne	.-54     	; 0x1227a <_ZN7Sd2Card4initEi+0x6e>
   122b0:	c8 01       	movw	r24, r16
   122b2:	6b e3       	ldi	r22, 0x3B	; 59
   122b4:	21 e0       	ldi	r18, 0x01	; 1
   122b6:	30 e0       	ldi	r19, 0x00	; 0
   122b8:	40 e0       	ldi	r20, 0x00	; 0
   122ba:	50 e0       	ldi	r21, 0x00	; 0
   122bc:	0e 94 26 90 	call	0x1204c	; 0x1204c <_ZN7Sd2Card11cardCommandEhm>
   122c0:	81 30       	cpi	r24, 0x01	; 1
   122c2:	11 f0       	breq	.+4      	; 0x122c8 <_ZN7Sd2Card4initEi+0xbc>
   122c4:	8a e1       	ldi	r24, 0x1A	; 26
   122c6:	71 c0       	rjmp	.+226    	; 0x123aa <_ZN7Sd2Card4initEi+0x19e>
   122c8:	0e 94 ed 8e 	call	0x11dda	; 0x11dda <millis>
   122cc:	6b 01       	movw	r12, r22
   122ce:	7c 01       	movw	r14, r24
   122d0:	c8 01       	movw	r24, r16
   122d2:	68 e0       	ldi	r22, 0x08	; 8
   122d4:	2a ea       	ldi	r18, 0xAA	; 170
   122d6:	31 e0       	ldi	r19, 0x01	; 1
   122d8:	40 e0       	ldi	r20, 0x00	; 0
   122da:	50 e0       	ldi	r21, 0x00	; 0
   122dc:	0e 94 26 90 	call	0x1204c	; 0x1204c <_ZN7Sd2Card11cardCommandEhm>
   122e0:	85 30       	cpi	r24, 0x05	; 5
   122e2:	19 f4       	brne	.+6      	; 0x122ea <_ZN7Sd2Card4initEi+0xde>
   122e4:	81 e0       	ldi	r24, 0x01	; 1
   122e6:	f8 01       	movw	r30, r16
   122e8:	0b c0       	rjmp	.+22     	; 0x12300 <_ZN7Sd2Card4initEi+0xf4>
   122ea:	a4 e0       	ldi	r26, 0x04	; 4
   122ec:	8a 2e       	mov	r8, r26
   122ee:	0e 94 da 8e 	call	0x11db4	; 0x11db4 <_ZL6spiRecv>
   122f2:	f8 01       	movw	r30, r16
   122f4:	83 83       	std	Z+3, r24	; 0x03
   122f6:	8a 94       	dec	r8
   122f8:	d1 f7       	brne	.-12     	; 0x122ee <_ZN7Sd2Card4initEi+0xe2>
   122fa:	8a 3a       	cpi	r24, 0xAA	; 170
   122fc:	39 f4       	brne	.+14     	; 0x1230c <_ZN7Sd2Card4initEi+0x100>
   122fe:	82 e0       	ldi	r24, 0x02	; 2
   12300:	84 83       	std	Z+4, r24	; 0x04
   12302:	f8 01       	movw	r30, r16
   12304:	84 81       	ldd	r24, Z+4	; 0x04
   12306:	82 30       	cpi	r24, 0x02	; 2
   12308:	c9 f4       	brne	.+50     	; 0x1233c <_ZN7Sd2Card4initEi+0x130>
   1230a:	12 c0       	rjmp	.+36     	; 0x12330 <_ZN7Sd2Card4initEi+0x124>
   1230c:	0e 94 ed 8e 	call	0x11dda	; 0x11dda <millis>
   12310:	a7 01       	movw	r20, r14
   12312:	96 01       	movw	r18, r12
   12314:	0e 94 f3 8e 	call	0x11de6	; 0x11de6 <_Z11millisDeltamm>
   12318:	dc 01       	movw	r26, r24
   1231a:	cb 01       	movw	r24, r22
   1231c:	81 3d       	cpi	r24, 0xD1	; 209
   1231e:	f7 e0       	ldi	r31, 0x07	; 7
   12320:	9f 07       	cpc	r25, r31
   12322:	f0 e0       	ldi	r31, 0x00	; 0
   12324:	af 07       	cpc	r26, r31
   12326:	f0 e0       	ldi	r31, 0x00	; 0
   12328:	bf 07       	cpc	r27, r31
   1232a:	90 f2       	brcs	.-92     	; 0x122d0 <_ZN7Sd2Card4initEi+0xc4>
   1232c:	82 e0       	ldi	r24, 0x02	; 2
   1232e:	3d c0       	rjmp	.+122    	; 0x123aa <_ZN7Sd2Card4initEi+0x19e>
   12330:	c1 2c       	mov	r12, r1
   12332:	d1 2c       	mov	r13, r1
   12334:	e1 2c       	mov	r14, r1
   12336:	f0 e4       	ldi	r31, 0x40	; 64
   12338:	ff 2e       	mov	r15, r31
   1233a:	03 c0       	rjmp	.+6      	; 0x12342 <_ZN7Sd2Card4initEi+0x136>
   1233c:	cc 24       	eor	r12, r12
   1233e:	dd 24       	eor	r13, r13
   12340:	76 01       	movw	r14, r12
   12342:	0e 94 ed 8e 	call	0x11dda	; 0x11dda <millis>
   12346:	4b 01       	movw	r8, r22
   12348:	5c 01       	movw	r10, r24
   1234a:	12 c0       	rjmp	.+36     	; 0x12370 <_ZN7Sd2Card4initEi+0x164>
   1234c:	0e 94 ed 8e 	call	0x11dda	; 0x11dda <millis>
   12350:	a5 01       	movw	r20, r10
   12352:	94 01       	movw	r18, r8
   12354:	0e 94 f3 8e 	call	0x11de6	; 0x11de6 <_Z11millisDeltamm>
   12358:	dc 01       	movw	r26, r24
   1235a:	cb 01       	movw	r24, r22
   1235c:	81 3d       	cpi	r24, 0xD1	; 209
   1235e:	f7 e0       	ldi	r31, 0x07	; 7
   12360:	9f 07       	cpc	r25, r31
   12362:	f0 e0       	ldi	r31, 0x00	; 0
   12364:	af 07       	cpc	r26, r31
   12366:	f0 e0       	ldi	r31, 0x00	; 0
   12368:	bf 07       	cpc	r27, r31
   1236a:	10 f0       	brcs	.+4      	; 0x12370 <_ZN7Sd2Card4initEi+0x164>
   1236c:	8a e0       	ldi	r24, 0x0A	; 10
   1236e:	1d c0       	rjmp	.+58     	; 0x123aa <_ZN7Sd2Card4initEi+0x19e>
   12370:	c8 01       	movw	r24, r16
   12372:	67 e3       	ldi	r22, 0x37	; 55
   12374:	20 e0       	ldi	r18, 0x00	; 0
   12376:	30 e0       	ldi	r19, 0x00	; 0
   12378:	a9 01       	movw	r20, r18
   1237a:	0e 94 26 90 	call	0x1204c	; 0x1204c <_ZN7Sd2Card11cardCommandEhm>
   1237e:	c8 01       	movw	r24, r16
   12380:	69 e2       	ldi	r22, 0x29	; 41
   12382:	a7 01       	movw	r20, r14
   12384:	96 01       	movw	r18, r12
   12386:	0e 94 26 90 	call	0x1204c	; 0x1204c <_ZN7Sd2Card11cardCommandEhm>
   1238a:	88 23       	and	r24, r24
   1238c:	f9 f6       	brne	.-66     	; 0x1234c <_ZN7Sd2Card4initEi+0x140>
   1238e:	f8 01       	movw	r30, r16
   12390:	84 81       	ldd	r24, Z+4	; 0x04
   12392:	82 30       	cpi	r24, 0x02	; 2
   12394:	f9 f4       	brne	.+62     	; 0x123d4 <_ZN7Sd2Card4initEi+0x1c8>
   12396:	c8 01       	movw	r24, r16
   12398:	6a e3       	ldi	r22, 0x3A	; 58
   1239a:	20 e0       	ldi	r18, 0x00	; 0
   1239c:	30 e0       	ldi	r19, 0x00	; 0
   1239e:	a9 01       	movw	r20, r18
   123a0:	0e 94 26 90 	call	0x1204c	; 0x1204c <_ZN7Sd2Card11cardCommandEhm>
   123a4:	88 23       	and	r24, r24
   123a6:	41 f0       	breq	.+16     	; 0x123b8 <_ZN7Sd2Card4initEi+0x1ac>
   123a8:	88 e0       	ldi	r24, 0x08	; 8
   123aa:	f8 01       	movw	r30, r16
   123ac:	81 83       	std	Z+1, r24	; 0x01
   123ae:	c8 01       	movw	r24, r16
   123b0:	0e 94 2d 8f 	call	0x11e5a	; 0x11e5a <_ZN7Sd2Card14chipSelectHighEv>
   123b4:	80 e0       	ldi	r24, 0x00	; 0
   123b6:	1f c0       	rjmp	.+62     	; 0x123f6 <_ZN7Sd2Card4initEi+0x1ea>
   123b8:	0e 94 da 8e 	call	0x11db4	; 0x11db4 <_ZL6spiRecv>
   123bc:	80 7c       	andi	r24, 0xC0	; 192
   123be:	80 3c       	cpi	r24, 0xC0	; 192
   123c0:	19 f4       	brne	.+6      	; 0x123c8 <_ZN7Sd2Card4initEi+0x1bc>
   123c2:	83 e0       	ldi	r24, 0x03	; 3
   123c4:	f8 01       	movw	r30, r16
   123c6:	84 83       	std	Z+4, r24	; 0x04
   123c8:	0e 94 da 8e 	call	0x11db4	; 0x11db4 <_ZL6spiRecv>
   123cc:	0e 94 da 8e 	call	0x11db4	; 0x11db4 <_ZL6spiRecv>
   123d0:	0e 94 da 8e 	call	0x11db4	; 0x11db4 <_ZL6spiRecv>
   123d4:	c8 01       	movw	r24, r16
   123d6:	0e 94 2d 8f 	call	0x11e5a	; 0x11e5a <_ZN7Sd2Card14chipSelectHighEv>
   123da:	80 91 9d 25 	lds	r24, 0x259D
   123de:	90 91 9e 25 	lds	r25, 0x259E
   123e2:	40 e0       	ldi	r20, 0x00	; 0
   123e4:	52 e1       	ldi	r21, 0x12	; 18
   123e6:	6a e7       	ldi	r22, 0x7A	; 122
   123e8:	70 e0       	ldi	r23, 0x00	; 0
   123ea:	0e 94 6b 31 	call	0x62d6	; 0x62d6 <hal_spiSetBaudRate>
   123ee:	80 95       	com	r24
   123f0:	88 1f       	adc	r24, r24
   123f2:	88 27       	eor	r24, r24
   123f4:	88 1f       	adc	r24, r24
   123f6:	0f 90       	pop	r0
   123f8:	0f 90       	pop	r0
   123fa:	df 91       	pop	r29
   123fc:	cf 91       	pop	r28
   123fe:	1f 91       	pop	r17
   12400:	0f 91       	pop	r16
   12402:	ff 90       	pop	r15
   12404:	ef 90       	pop	r14
   12406:	df 90       	pop	r13
   12408:	cf 90       	pop	r12
   1240a:	bf 90       	pop	r11
   1240c:	af 90       	pop	r10
   1240e:	9f 90       	pop	r9
   12410:	8f 90       	pop	r8
   12412:	08 95       	ret

00012414 <_ZN7Sd2Card9writeDataEhPKh>:
   12414:	af 92       	push	r10
   12416:	bf 92       	push	r11
   12418:	cf 92       	push	r12
   1241a:	df 92       	push	r13
   1241c:	ef 92       	push	r14
   1241e:	ff 92       	push	r15
   12420:	0f 93       	push	r16
   12422:	1f 93       	push	r17
   12424:	cf 93       	push	r28
   12426:	df 93       	push	r29
   12428:	0f 92       	push	r0
   1242a:	0f 92       	push	r0
   1242c:	cd b7       	in	r28, 0x3d	; 61
   1242e:	de b7       	in	r29, 0x3e	; 62
   12430:	8c 01       	movw	r16, r24
   12432:	e6 2e       	mov	r14, r22
   12434:	ca 01       	movw	r24, r20
   12436:	60 e0       	ldi	r22, 0x00	; 0
   12438:	72 e0       	ldi	r23, 0x02	; 2
   1243a:	49 83       	std	Y+1, r20	; 0x01
   1243c:	5a 83       	std	Y+2, r21	; 0x02
   1243e:	0e 94 a2 8e 	call	0x11d44	; 0x11d44 <_ZL9CRC_CCITTPKhj>
   12442:	5c 01       	movw	r10, r24
   12444:	8e 2d       	mov	r24, r14
   12446:	0e 94 d1 8e 	call	0x11da2	; 0x11da2 <_ZL7spiSendh>
   1244a:	0e 94 4a 80 	call	0x10094	; 0x10094 <arb_sysTimerEnabled>
   1244e:	49 81       	ldd	r20, Y+1	; 0x01
   12450:	5a 81       	ldd	r21, Y+2	; 0x02
   12452:	88 23       	and	r24, r24
   12454:	21 f4       	brne	.+8      	; 0x1245e <_ZN7Sd2Card9writeDataEhPKh+0x4a>
   12456:	6a 01       	movw	r12, r20
   12458:	ee 24       	eor	r14, r14
   1245a:	ff 24       	eor	r15, r15
   1245c:	04 c0       	rjmp	.+8      	; 0x12466 <_ZN7Sd2Card9writeDataEhPKh+0x52>
   1245e:	0f b6       	in	r0, 0x3f	; 63
   12460:	07 fe       	sbrs	r0, 7
   12462:	f9 cf       	rjmp	.-14     	; 0x12456 <_ZN7Sd2Card9writeDataEhPKh+0x42>
   12464:	4a c0       	rjmp	.+148    	; 0x124fa <_ZN7Sd2Card9writeDataEhPKh+0xe6>
   12466:	80 91 9d 25 	lds	r24, 0x259D
   1246a:	90 91 9e 25 	lds	r25, 0x259E
   1246e:	f6 01       	movw	r30, r12
   12470:	61 91       	ld	r22, Z+
   12472:	6f 01       	movw	r12, r30
   12474:	0e 94 1c 31 	call	0x6238	; 0x6238 <hal_spiWriteByte>
   12478:	08 94       	sec
   1247a:	e1 1c       	adc	r14, r1
   1247c:	f1 1c       	adc	r15, r1
   1247e:	f0 e0       	ldi	r31, 0x00	; 0
   12480:	ef 16       	cp	r14, r31
   12482:	f2 e0       	ldi	r31, 0x02	; 2
   12484:	ff 06       	cpc	r15, r31
   12486:	79 f7       	brne	.-34     	; 0x12466 <_ZN7Sd2Card9writeDataEhPKh+0x52>
   12488:	16 c0       	rjmp	.+44     	; 0x124b6 <_ZN7Sd2Card9writeDataEhPKh+0xa2>
   1248a:	0e 94 ed 8e 	call	0x11dda	; 0x11dda <millis>
   1248e:	a7 01       	movw	r20, r14
   12490:	96 01       	movw	r18, r12
   12492:	0e 94 f3 8e 	call	0x11de6	; 0x11de6 <_Z11millisDeltamm>
   12496:	dc 01       	movw	r26, r24
   12498:	cb 01       	movw	r24, r22
   1249a:	89 3b       	cpi	r24, 0xB9	; 185
   1249c:	2b e0       	ldi	r18, 0x0B	; 11
   1249e:	92 07       	cpc	r25, r18
   124a0:	20 e0       	ldi	r18, 0x00	; 0
   124a2:	a2 07       	cpc	r26, r18
   124a4:	20 e0       	ldi	r18, 0x00	; 0
   124a6:	b2 07       	cpc	r27, r18
   124a8:	20 f4       	brcc	.+8      	; 0x124b2 <_ZN7Sd2Card9writeDataEhPKh+0x9e>
   124aa:	80 91 9f 25 	lds	r24, 0x259F
   124ae:	88 23       	and	r24, r24
   124b0:	61 f3       	breq	.-40     	; 0x1248a <_ZN7Sd2Card9writeDataEhPKh+0x76>
   124b2:	10 92 9f 25 	sts	0x259F, r1
   124b6:	8b 2d       	mov	r24, r11
   124b8:	0e 94 d1 8e 	call	0x11da2	; 0x11da2 <_ZL7spiSendh>
   124bc:	8a 2d       	mov	r24, r10
   124be:	0e 94 d1 8e 	call	0x11da2	; 0x11da2 <_ZL7spiSendh>
   124c2:	0e 94 da 8e 	call	0x11db4	; 0x11db4 <_ZL6spiRecv>
   124c6:	f8 01       	movw	r30, r16
   124c8:	83 83       	std	Z+3, r24	; 0x03
   124ca:	8f 71       	andi	r24, 0x1F	; 31
   124cc:	85 30       	cpi	r24, 0x05	; 5
   124ce:	39 f0       	breq	.+14     	; 0x124de <_ZN7Sd2Card9writeDataEhPKh+0xca>
   124d0:	83 e1       	ldi	r24, 0x13	; 19
   124d2:	81 83       	std	Z+1, r24	; 0x01
   124d4:	c8 01       	movw	r24, r16
   124d6:	0e 94 2d 8f 	call	0x11e5a	; 0x11e5a <_ZN7Sd2Card14chipSelectHighEv>
   124da:	80 e0       	ldi	r24, 0x00	; 0
   124dc:	01 c0       	rjmp	.+2      	; 0x124e0 <_ZN7Sd2Card9writeDataEhPKh+0xcc>
   124de:	81 e0       	ldi	r24, 0x01	; 1
   124e0:	0f 90       	pop	r0
   124e2:	0f 90       	pop	r0
   124e4:	df 91       	pop	r29
   124e6:	cf 91       	pop	r28
   124e8:	1f 91       	pop	r17
   124ea:	0f 91       	pop	r16
   124ec:	ff 90       	pop	r15
   124ee:	ef 90       	pop	r14
   124f0:	df 90       	pop	r13
   124f2:	cf 90       	pop	r12
   124f4:	bf 90       	pop	r11
   124f6:	af 90       	pop	r10
   124f8:	08 95       	ret
   124fa:	80 91 9d 25 	lds	r24, 0x259D
   124fe:	90 91 9e 25 	lds	r25, 0x259E
   12502:	60 e0       	ldi	r22, 0x00	; 0
   12504:	20 e0       	ldi	r18, 0x00	; 0
   12506:	32 e0       	ldi	r19, 0x02	; 2
   12508:	0e 94 83 34 	call	0x6906	; 0x6906 <hal_spiWriteBlock>
   1250c:	0e 94 ed 8e 	call	0x11dda	; 0x11dda <millis>
   12510:	6b 01       	movw	r12, r22
   12512:	7c 01       	movw	r14, r24
   12514:	ca cf       	rjmp	.-108    	; 0x124aa <_ZN7Sd2Card9writeDataEhPKh+0x96>

00012516 <_ZN7Sd2Card9writeDataEPKh>:
   12516:	0f 93       	push	r16
   12518:	1f 93       	push	r17
   1251a:	cf 93       	push	r28
   1251c:	df 93       	push	r29
   1251e:	ec 01       	movw	r28, r24
   12520:	8b 01       	movw	r16, r22
   12522:	0e 94 38 8f 	call	0x11e70	; 0x11e70 <_ZN7Sd2Card13chipSelectLowEv>
   12526:	ce 01       	movw	r24, r28
   12528:	68 e5       	ldi	r22, 0x58	; 88
   1252a:	72 e0       	ldi	r23, 0x02	; 2
   1252c:	0e 94 f9 8f 	call	0x11ff2	; 0x11ff2 <_ZN7Sd2Card11waitNotBusyEj>
   12530:	88 23       	and	r24, r24
   12532:	61 f0       	breq	.+24     	; 0x1254c <_ZN7Sd2Card9writeDataEPKh+0x36>
   12534:	ce 01       	movw	r24, r28
   12536:	6c ef       	ldi	r22, 0xFC	; 252
   12538:	a8 01       	movw	r20, r16
   1253a:	0e 94 0a 92 	call	0x12414	; 0x12414 <_ZN7Sd2Card9writeDataEhPKh>
   1253e:	88 23       	and	r24, r24
   12540:	29 f0       	breq	.+10     	; 0x1254c <_ZN7Sd2Card9writeDataEPKh+0x36>
   12542:	ce 01       	movw	r24, r28
   12544:	0e 94 2d 8f 	call	0x11e5a	; 0x11e5a <_ZN7Sd2Card14chipSelectHighEv>
   12548:	81 e0       	ldi	r24, 0x01	; 1
   1254a:	06 c0       	rjmp	.+12     	; 0x12558 <_ZN7Sd2Card9writeDataEPKh+0x42>
   1254c:	85 e1       	ldi	r24, 0x15	; 21
   1254e:	89 83       	std	Y+1, r24	; 0x01
   12550:	ce 01       	movw	r24, r28
   12552:	0e 94 2d 8f 	call	0x11e5a	; 0x11e5a <_ZN7Sd2Card14chipSelectHighEv>
   12556:	80 e0       	ldi	r24, 0x00	; 0
   12558:	df 91       	pop	r29
   1255a:	cf 91       	pop	r28
   1255c:	1f 91       	pop	r17
   1255e:	0f 91       	pop	r16
   12560:	08 95       	ret

00012562 <_ZN7Sd2Card10writeBlockEmPKh>:
   12562:	cf 92       	push	r12
   12564:	df 92       	push	r13
   12566:	ef 92       	push	r14
   12568:	ff 92       	push	r15
   1256a:	0f 93       	push	r16
   1256c:	1f 93       	push	r17
   1256e:	cf 93       	push	r28
   12570:	df 93       	push	r29
   12572:	ec 01       	movw	r28, r24
   12574:	6a 01       	movw	r12, r20
   12576:	7b 01       	movw	r14, r22
   12578:	89 01       	movw	r16, r18
   1257a:	8c 81       	ldd	r24, Y+4	; 0x04
   1257c:	83 30       	cpi	r24, 0x03	; 3
   1257e:	39 f0       	breq	.+14     	; 0x1258e <_ZN7Sd2Card10writeBlockEmPKh+0x2c>
   12580:	89 e0       	ldi	r24, 0x09	; 9
   12582:	cc 0c       	add	r12, r12
   12584:	dd 1c       	adc	r13, r13
   12586:	ee 1c       	adc	r14, r14
   12588:	ff 1c       	adc	r15, r15
   1258a:	8a 95       	dec	r24
   1258c:	d1 f7       	brne	.-12     	; 0x12582 <_ZN7Sd2Card10writeBlockEmPKh+0x20>
   1258e:	ce 01       	movw	r24, r28
   12590:	68 e1       	ldi	r22, 0x18	; 24
   12592:	a7 01       	movw	r20, r14
   12594:	96 01       	movw	r18, r12
   12596:	0e 94 26 90 	call	0x1204c	; 0x1204c <_ZN7Sd2Card11cardCommandEhm>
   1259a:	88 23       	and	r24, r24
   1259c:	11 f0       	breq	.+4      	; 0x125a2 <_ZN7Sd2Card10writeBlockEmPKh+0x40>
   1259e:	86 e0       	ldi	r24, 0x06	; 6
   125a0:	1e c0       	rjmp	.+60     	; 0x125de <_ZN7Sd2Card10writeBlockEmPKh+0x7c>
   125a2:	ce 01       	movw	r24, r28
   125a4:	6e ef       	ldi	r22, 0xFE	; 254
   125a6:	a8 01       	movw	r20, r16
   125a8:	0e 94 0a 92 	call	0x12414	; 0x12414 <_ZN7Sd2Card9writeDataEhPKh>
   125ac:	88 23       	and	r24, r24
   125ae:	c1 f0       	breq	.+48     	; 0x125e0 <_ZN7Sd2Card10writeBlockEmPKh+0x7e>
   125b0:	ce 01       	movw	r24, r28
   125b2:	68 e5       	ldi	r22, 0x58	; 88
   125b4:	72 e0       	ldi	r23, 0x02	; 2
   125b6:	0e 94 f9 8f 	call	0x11ff2	; 0x11ff2 <_ZN7Sd2Card11waitNotBusyEj>
   125ba:	88 23       	and	r24, r24
   125bc:	11 f4       	brne	.+4      	; 0x125c2 <_ZN7Sd2Card10writeBlockEmPKh+0x60>
   125be:	87 e1       	ldi	r24, 0x17	; 23
   125c0:	0e c0       	rjmp	.+28     	; 0x125de <_ZN7Sd2Card10writeBlockEmPKh+0x7c>
   125c2:	ce 01       	movw	r24, r28
   125c4:	6d e0       	ldi	r22, 0x0D	; 13
   125c6:	20 e0       	ldi	r18, 0x00	; 0
   125c8:	30 e0       	ldi	r19, 0x00	; 0
   125ca:	a9 01       	movw	r20, r18
   125cc:	0e 94 26 90 	call	0x1204c	; 0x1204c <_ZN7Sd2Card11cardCommandEhm>
   125d0:	88 23       	and	r24, r24
   125d2:	21 f4       	brne	.+8      	; 0x125dc <_ZN7Sd2Card10writeBlockEmPKh+0x7a>
   125d4:	0e 94 da 8e 	call	0x11db4	; 0x11db4 <_ZL6spiRecv>
   125d8:	88 23       	and	r24, r24
   125da:	79 f0       	breq	.+30     	; 0x125fa <_ZN7Sd2Card10writeBlockEmPKh+0x98>
   125dc:	86 e1       	ldi	r24, 0x16	; 22
   125de:	89 83       	std	Y+1, r24	; 0x01
   125e0:	ce 01       	movw	r24, r28
   125e2:	0e 94 2d 8f 	call	0x11e5a	; 0x11e5a <_ZN7Sd2Card14chipSelectHighEv>
   125e6:	80 e0       	ldi	r24, 0x00	; 0
   125e8:	df 91       	pop	r29
   125ea:	cf 91       	pop	r28
   125ec:	1f 91       	pop	r17
   125ee:	0f 91       	pop	r16
   125f0:	ff 90       	pop	r15
   125f2:	ef 90       	pop	r14
   125f4:	df 90       	pop	r13
   125f6:	cf 90       	pop	r12
   125f8:	08 95       	ret
   125fa:	ce 01       	movw	r24, r28
   125fc:	0e 94 2d 8f 	call	0x11e5a	; 0x11e5a <_ZN7Sd2Card14chipSelectHighEv>
   12600:	81 e0       	ldi	r24, 0x01	; 1
   12602:	f2 cf       	rjmp	.-28     	; 0x125e8 <_ZN7Sd2Card10writeBlockEmPKh+0x86>

00012604 <_ZN7Sd2Card10writeStartEmm>:
   12604:	8f 92       	push	r8
   12606:	9f 92       	push	r9
   12608:	af 92       	push	r10
   1260a:	bf 92       	push	r11
   1260c:	cf 92       	push	r12
   1260e:	df 92       	push	r13
   12610:	ef 92       	push	r14
   12612:	ff 92       	push	r15
   12614:	0f 93       	push	r16
   12616:	1f 93       	push	r17
   12618:	cf 93       	push	r28
   1261a:	df 93       	push	r29
   1261c:	ec 01       	movw	r28, r24
   1261e:	6a 01       	movw	r12, r20
   12620:	7b 01       	movw	r14, r22
   12622:	48 01       	movw	r8, r16
   12624:	59 01       	movw	r10, r18
   12626:	67 e3       	ldi	r22, 0x37	; 55
   12628:	20 e0       	ldi	r18, 0x00	; 0
   1262a:	30 e0       	ldi	r19, 0x00	; 0
   1262c:	a9 01       	movw	r20, r18
   1262e:	0e 94 26 90 	call	0x1204c	; 0x1204c <_ZN7Sd2Card11cardCommandEhm>
   12632:	ce 01       	movw	r24, r28
   12634:	67 e1       	ldi	r22, 0x17	; 23
   12636:	a5 01       	movw	r20, r10
   12638:	94 01       	movw	r18, r8
   1263a:	0e 94 26 90 	call	0x1204c	; 0x1204c <_ZN7Sd2Card11cardCommandEhm>
   1263e:	88 23       	and	r24, r24
   12640:	11 f0       	breq	.+4      	; 0x12646 <_ZN7Sd2Card10writeStartEmm+0x42>
   12642:	89 e0       	ldi	r24, 0x09	; 9
   12644:	13 c0       	rjmp	.+38     	; 0x1266c <_ZN7Sd2Card10writeStartEmm+0x68>
   12646:	8c 81       	ldd	r24, Y+4	; 0x04
   12648:	83 30       	cpi	r24, 0x03	; 3
   1264a:	39 f0       	breq	.+14     	; 0x1265a <_ZN7Sd2Card10writeStartEmm+0x56>
   1264c:	99 e0       	ldi	r25, 0x09	; 9
   1264e:	cc 0c       	add	r12, r12
   12650:	dd 1c       	adc	r13, r13
   12652:	ee 1c       	adc	r14, r14
   12654:	ff 1c       	adc	r15, r15
   12656:	9a 95       	dec	r25
   12658:	d1 f7       	brne	.-12     	; 0x1264e <_ZN7Sd2Card10writeStartEmm+0x4a>
   1265a:	ce 01       	movw	r24, r28
   1265c:	69 e1       	ldi	r22, 0x19	; 25
   1265e:	a7 01       	movw	r20, r14
   12660:	96 01       	movw	r18, r12
   12662:	0e 94 26 90 	call	0x1204c	; 0x1204c <_ZN7Sd2Card11cardCommandEhm>
   12666:	88 23       	and	r24, r24
   12668:	39 f0       	breq	.+14     	; 0x12678 <_ZN7Sd2Card10writeStartEmm+0x74>
   1266a:	87 e0       	ldi	r24, 0x07	; 7
   1266c:	89 83       	std	Y+1, r24	; 0x01
   1266e:	ce 01       	movw	r24, r28
   12670:	0e 94 2d 8f 	call	0x11e5a	; 0x11e5a <_ZN7Sd2Card14chipSelectHighEv>
   12674:	80 e0       	ldi	r24, 0x00	; 0
   12676:	04 c0       	rjmp	.+8      	; 0x12680 <_ZN7Sd2Card10writeStartEmm+0x7c>
   12678:	ce 01       	movw	r24, r28
   1267a:	0e 94 2d 8f 	call	0x11e5a	; 0x11e5a <_ZN7Sd2Card14chipSelectHighEv>
   1267e:	81 e0       	ldi	r24, 0x01	; 1
   12680:	df 91       	pop	r29
   12682:	cf 91       	pop	r28
   12684:	1f 91       	pop	r17
   12686:	0f 91       	pop	r16
   12688:	ff 90       	pop	r15
   1268a:	ef 90       	pop	r14
   1268c:	df 90       	pop	r13
   1268e:	cf 90       	pop	r12
   12690:	bf 90       	pop	r11
   12692:	af 90       	pop	r10
   12694:	9f 90       	pop	r9
   12696:	8f 90       	pop	r8
   12698:	08 95       	ret

0001269a <_ZN7Sd2Card9writeStopEv>:
   1269a:	cf 93       	push	r28
   1269c:	df 93       	push	r29
   1269e:	ec 01       	movw	r28, r24
   126a0:	0e 94 38 8f 	call	0x11e70	; 0x11e70 <_ZN7Sd2Card13chipSelectLowEv>
   126a4:	ce 01       	movw	r24, r28
   126a6:	68 e5       	ldi	r22, 0x58	; 88
   126a8:	72 e0       	ldi	r23, 0x02	; 2
   126aa:	0e 94 f9 8f 	call	0x11ff2	; 0x11ff2 <_ZN7Sd2Card11waitNotBusyEj>
   126ae:	88 23       	and	r24, r24
   126b0:	79 f0       	breq	.+30     	; 0x126d0 <_ZN7Sd2Card9writeStopEv+0x36>
   126b2:	8d ef       	ldi	r24, 0xFD	; 253
   126b4:	0e 94 d1 8e 	call	0x11da2	; 0x11da2 <_ZL7spiSendh>
   126b8:	ce 01       	movw	r24, r28
   126ba:	68 e5       	ldi	r22, 0x58	; 88
   126bc:	72 e0       	ldi	r23, 0x02	; 2
   126be:	0e 94 f9 8f 	call	0x11ff2	; 0x11ff2 <_ZN7Sd2Card11waitNotBusyEj>
   126c2:	88 23       	and	r24, r24
   126c4:	29 f0       	breq	.+10     	; 0x126d0 <_ZN7Sd2Card9writeStopEv+0x36>
   126c6:	ce 01       	movw	r24, r28
   126c8:	0e 94 2d 8f 	call	0x11e5a	; 0x11e5a <_ZN7Sd2Card14chipSelectHighEv>
   126cc:	81 e0       	ldi	r24, 0x01	; 1
   126ce:	06 c0       	rjmp	.+12     	; 0x126dc <_ZN7Sd2Card9writeStopEv+0x42>
   126d0:	82 e1       	ldi	r24, 0x12	; 18
   126d2:	89 83       	std	Y+1, r24	; 0x01
   126d4:	ce 01       	movw	r24, r28
   126d6:	0e 94 2d 8f 	call	0x11e5a	; 0x11e5a <_ZN7Sd2Card14chipSelectHighEv>
   126da:	80 e0       	ldi	r24, 0x00	; 0
   126dc:	df 91       	pop	r29
   126de:	cf 91       	pop	r28
   126e0:	08 95       	ret

000126e2 <_ZL7print2uP5Printh>:
   126e2:	1f 93       	push	r17
   126e4:	cf 93       	push	r28
   126e6:	df 93       	push	r29
   126e8:	ec 01       	movw	r28, r24
   126ea:	16 2f       	mov	r17, r22
   126ec:	6a 30       	cpi	r22, 0x0A	; 10
   126ee:	38 f4       	brcc	.+14     	; 0x126fe <_ZL7print2uP5Printh+0x1c>
   126f0:	e8 81       	ld	r30, Y
   126f2:	f9 81       	ldd	r31, Y+1	; 0x01
   126f4:	01 90       	ld	r0, Z+
   126f6:	f0 81       	ld	r31, Z
   126f8:	e0 2d       	mov	r30, r0
   126fa:	60 e3       	ldi	r22, 0x30	; 48
   126fc:	19 95       	eicall
   126fe:	ce 01       	movw	r24, r28
   12700:	61 2f       	mov	r22, r17
   12702:	4a e0       	ldi	r20, 0x0A	; 10
   12704:	50 e0       	ldi	r21, 0x00	; 0
   12706:	0e 94 41 a7 	call	0x14e82	; 0x14e82 <_ZN5Print5printEhi>
   1270a:	df 91       	pop	r29
   1270c:	cf 91       	pop	r28
   1270e:	1f 91       	pop	r17
   12710:	08 95       	ret

00012712 <_ZN10SdBaseFile10addClusterEv>:
   12712:	cf 93       	push	r28
   12714:	df 93       	push	r29
   12716:	ec 01       	movw	r28, r24
   12718:	9c 01       	movw	r18, r24
   1271a:	29 5f       	subi	r18, 0xF9	; 249
   1271c:	3f 4f       	sbci	r19, 0xFF	; 255
   1271e:	8d 81       	ldd	r24, Y+5	; 0x05
   12720:	9e 81       	ldd	r25, Y+6	; 0x06
   12722:	41 e0       	ldi	r20, 0x01	; 1
   12724:	50 e0       	ldi	r21, 0x00	; 0
   12726:	60 e0       	ldi	r22, 0x00	; 0
   12728:	70 e0       	ldi	r23, 0x00	; 0
   1272a:	0e 94 94 a3 	call	0x14728	; 0x14728 <_ZN8SdVolume15allocContiguousEmPm>
   1272e:	88 23       	and	r24, r24
   12730:	a1 f0       	breq	.+40     	; 0x1275a <_ZN10SdBaseFile10addClusterEv+0x48>
   12732:	8f 89       	ldd	r24, Y+23	; 0x17
   12734:	98 8d       	ldd	r25, Y+24	; 0x18
   12736:	a9 8d       	ldd	r26, Y+25	; 0x19
   12738:	ba 8d       	ldd	r27, Y+26	; 0x1a
   1273a:	00 97       	sbiw	r24, 0x00	; 0
   1273c:	a1 05       	cpc	r26, r1
   1273e:	b1 05       	cpc	r27, r1
   12740:	71 f4       	brne	.+28     	; 0x1275e <_ZN10SdBaseFile10addClusterEv+0x4c>
   12742:	8f 81       	ldd	r24, Y+7	; 0x07
   12744:	98 85       	ldd	r25, Y+8	; 0x08
   12746:	a9 85       	ldd	r26, Y+9	; 0x09
   12748:	ba 85       	ldd	r27, Y+10	; 0x0a
   1274a:	8f 8b       	std	Y+23, r24	; 0x17
   1274c:	98 8f       	std	Y+24, r25	; 0x18
   1274e:	a9 8f       	std	Y+25, r26	; 0x19
   12750:	ba 8f       	std	Y+26, r27	; 0x1a
   12752:	89 81       	ldd	r24, Y+1	; 0x01
   12754:	80 68       	ori	r24, 0x80	; 128
   12756:	89 83       	std	Y+1, r24	; 0x01
   12758:	02 c0       	rjmp	.+4      	; 0x1275e <_ZN10SdBaseFile10addClusterEv+0x4c>
   1275a:	80 e0       	ldi	r24, 0x00	; 0
   1275c:	01 c0       	rjmp	.+2      	; 0x12760 <_ZN10SdBaseFile10addClusterEv+0x4e>
   1275e:	81 e0       	ldi	r24, 0x01	; 1
   12760:	df 91       	pop	r29
   12762:	cf 91       	pop	r28
   12764:	08 95       	ret

00012766 <_ZN10SdBaseFile13addDirClusterEv>:
   12766:	8f 92       	push	r8
   12768:	9f 92       	push	r9
   1276a:	af 92       	push	r10
   1276c:	bf 92       	push	r11
   1276e:	ef 92       	push	r14
   12770:	ff 92       	push	r15
   12772:	0f 93       	push	r16
   12774:	1f 93       	push	r17
   12776:	cf 93       	push	r28
   12778:	8c 01       	movw	r16, r24
   1277a:	fc 01       	movw	r30, r24
   1277c:	83 89       	ldd	r24, Z+19	; 0x13
   1277e:	94 89       	ldd	r25, Z+20	; 0x14
   12780:	a5 89       	ldd	r26, Z+21	; 0x15
   12782:	b6 89       	ldd	r27, Z+22	; 0x16
   12784:	80 3e       	cpi	r24, 0xE0	; 224
   12786:	ff ef       	ldi	r31, 0xFF	; 255
   12788:	9f 07       	cpc	r25, r31
   1278a:	ff e1       	ldi	r31, 0x1F	; 31
   1278c:	af 07       	cpc	r26, r31
   1278e:	f0 e0       	ldi	r31, 0x00	; 0
   12790:	bf 07       	cpc	r27, r31
   12792:	08 f0       	brcs	.+2      	; 0x12796 <_ZN10SdBaseFile13addDirClusterEv+0x30>
   12794:	57 c0       	rjmp	.+174    	; 0x12844 <_ZN10SdBaseFile13addDirClusterEv+0xde>
   12796:	c8 01       	movw	r24, r16
   12798:	0e 94 89 93 	call	0x12712	; 0x12712 <_ZN10SdBaseFile10addClusterEv>
   1279c:	88 23       	and	r24, r24
   1279e:	09 f4       	brne	.+2      	; 0x127a2 <_ZN10SdBaseFile13addDirClusterEv+0x3c>
   127a0:	51 c0       	rjmp	.+162    	; 0x12844 <_ZN10SdBaseFile13addDirClusterEv+0xde>
   127a2:	d8 01       	movw	r26, r16
   127a4:	17 96       	adiw	r26, 0x07	; 7
   127a6:	4d 91       	ld	r20, X+
   127a8:	5d 91       	ld	r21, X+
   127aa:	6d 91       	ld	r22, X+
   127ac:	7c 91       	ld	r23, X
   127ae:	1a 97       	sbiw	r26, 0x0a	; 10
   127b0:	15 96       	adiw	r26, 0x05	; 5
   127b2:	8d 91       	ld	r24, X+
   127b4:	9c 91       	ld	r25, X
   127b6:	16 97       	sbiw	r26, 0x06	; 6
   127b8:	0e 94 78 a2 	call	0x144f0	; 0x144f0 <_ZNK8SdVolume17clusterStartBlockEm>
   127bc:	4b 01       	movw	r8, r22
   127be:	5c 01       	movw	r10, r24
   127c0:	45 e0       	ldi	r20, 0x05	; 5
   127c2:	0e 94 21 a2 	call	0x14442	; 0x14442 <_ZN8SdVolume10cacheFetchEmh>
   127c6:	7c 01       	movw	r14, r24
   127c8:	00 97       	sbiw	r24, 0x00	; 0
   127ca:	f1 f1       	breq	.+124    	; 0x12848 <_ZN10SdBaseFile13addDirClusterEv+0xe2>
   127cc:	80 e0       	ldi	r24, 0x00	; 0
   127ce:	92 e0       	ldi	r25, 0x02	; 2
   127d0:	f7 01       	movw	r30, r14
   127d2:	9c 01       	movw	r18, r24
   127d4:	11 92       	st	Z+, r1
   127d6:	21 50       	subi	r18, 0x01	; 1
   127d8:	30 40       	sbci	r19, 0x00	; 0
   127da:	e1 f7       	brne	.-8      	; 0x127d4 <_ZN10SdBaseFile13addDirClusterEv+0x6e>
   127dc:	c1 e0       	ldi	r28, 0x01	; 1
   127de:	10 c0       	rjmp	.+32     	; 0x12800 <_ZN10SdBaseFile13addDirClusterEv+0x9a>
   127e0:	b5 01       	movw	r22, r10
   127e2:	a4 01       	movw	r20, r8
   127e4:	4c 0f       	add	r20, r28
   127e6:	51 1d       	adc	r21, r1
   127e8:	61 1d       	adc	r22, r1
   127ea:	71 1d       	adc	r23, r1
   127ec:	80 91 a4 25 	lds	r24, 0x25A4
   127f0:	90 91 a5 25 	lds	r25, 0x25A5
   127f4:	97 01       	movw	r18, r14
   127f6:	0e 94 b1 92 	call	0x12562	; 0x12562 <_ZN7Sd2Card10writeBlockEmPKh>
   127fa:	88 23       	and	r24, r24
   127fc:	19 f1       	breq	.+70     	; 0x12844 <_ZN10SdBaseFile13addDirClusterEv+0xde>
   127fe:	cf 5f       	subi	r28, 0xFF	; 255
   12800:	d8 01       	movw	r26, r16
   12802:	15 96       	adiw	r26, 0x05	; 5
   12804:	ed 91       	ld	r30, X+
   12806:	fc 91       	ld	r31, X
   12808:	16 97       	sbiw	r26, 0x06	; 6
   1280a:	44 81       	ldd	r20, Z+4	; 0x04
   1280c:	c4 17       	cp	r28, r20
   1280e:	40 f3       	brcs	.-48     	; 0x127e0 <_ZN10SdBaseFile13addDirClusterEv+0x7a>
   12810:	50 e0       	ldi	r21, 0x00	; 0
   12812:	60 e0       	ldi	r22, 0x00	; 0
   12814:	70 e0       	ldi	r23, 0x00	; 0
   12816:	89 e0       	ldi	r24, 0x09	; 9
   12818:	44 0f       	add	r20, r20
   1281a:	55 1f       	adc	r21, r21
   1281c:	66 1f       	adc	r22, r22
   1281e:	77 1f       	adc	r23, r23
   12820:	8a 95       	dec	r24
   12822:	d1 f7       	brne	.-12     	; 0x12818 <_ZN10SdBaseFile13addDirClusterEv+0xb2>
   12824:	53 96       	adiw	r26, 0x13	; 19
   12826:	8d 91       	ld	r24, X+
   12828:	9d 91       	ld	r25, X+
   1282a:	0d 90       	ld	r0, X+
   1282c:	bc 91       	ld	r27, X
   1282e:	a0 2d       	mov	r26, r0
   12830:	84 0f       	add	r24, r20
   12832:	95 1f       	adc	r25, r21
   12834:	a6 1f       	adc	r26, r22
   12836:	b7 1f       	adc	r27, r23
   12838:	f8 01       	movw	r30, r16
   1283a:	83 8b       	std	Z+19, r24	; 0x13
   1283c:	94 8b       	std	Z+20, r25	; 0x14
   1283e:	a5 8b       	std	Z+21, r26	; 0x15
   12840:	b6 8b       	std	Z+22, r27	; 0x16
   12842:	02 c0       	rjmp	.+4      	; 0x12848 <_ZN10SdBaseFile13addDirClusterEv+0xe2>
   12844:	ee 24       	eor	r14, r14
   12846:	ff 24       	eor	r15, r15
   12848:	c7 01       	movw	r24, r14
   1284a:	cf 91       	pop	r28
   1284c:	1f 91       	pop	r17
   1284e:	0f 91       	pop	r16
   12850:	ff 90       	pop	r15
   12852:	ef 90       	pop	r14
   12854:	bf 90       	pop	r11
   12856:	af 90       	pop	r10
   12858:	9f 90       	pop	r9
   1285a:	8f 90       	pop	r8
   1285c:	08 95       	ret

0001285e <_ZN10SdBaseFile13cacheDirEntryEh>:
   1285e:	cf 93       	push	r28
   12860:	df 93       	push	r29
   12862:	ec 01       	movw	r28, r24
   12864:	46 2f       	mov	r20, r22
   12866:	8f 85       	ldd	r24, Y+15	; 0x0f
   12868:	98 89       	ldd	r25, Y+16	; 0x10
   1286a:	a9 89       	ldd	r26, Y+17	; 0x11
   1286c:	ba 89       	ldd	r27, Y+18	; 0x12
   1286e:	bc 01       	movw	r22, r24
   12870:	cd 01       	movw	r24, r26
   12872:	0e 94 21 a2 	call	0x14442	; 0x14442 <_ZN8SdVolume10cacheFetchEmh>
   12876:	00 97       	sbiw	r24, 0x00	; 0
   12878:	51 f0       	breq	.+20     	; 0x1288e <_ZN10SdBaseFile13cacheDirEntryEh+0x30>
   1287a:	2c 81       	ldd	r18, Y+4	; 0x04
   1287c:	30 e0       	ldi	r19, 0x00	; 0
   1287e:	45 e0       	ldi	r20, 0x05	; 5
   12880:	22 0f       	add	r18, r18
   12882:	33 1f       	adc	r19, r19
   12884:	4a 95       	dec	r20
   12886:	e1 f7       	brne	.-8      	; 0x12880 <_ZN10SdBaseFile13cacheDirEntryEh+0x22>
   12888:	28 0f       	add	r18, r24
   1288a:	39 1f       	adc	r19, r25
   1288c:	02 c0       	rjmp	.+4      	; 0x12892 <_ZN10SdBaseFile13cacheDirEntryEh+0x34>
   1288e:	20 e0       	ldi	r18, 0x00	; 0
   12890:	30 e0       	ldi	r19, 0x00	; 0
   12892:	c9 01       	movw	r24, r18
   12894:	df 91       	pop	r29
   12896:	cf 91       	pop	r28
   12898:	08 95       	ret

0001289a <_ZN10SdBaseFile7dirNameERK14directoryEntryPc>:
   1289a:	fc 01       	movw	r30, r24
   1289c:	90 e0       	ldi	r25, 0x00	; 0
   1289e:	80 e0       	ldi	r24, 0x00	; 0
   128a0:	2e e2       	ldi	r18, 0x2E	; 46
   128a2:	30 81       	ld	r19, Z
   128a4:	30 32       	cpi	r19, 0x20	; 32
   128a6:	69 f0       	breq	.+26     	; 0x128c2 <_ZN10SdBaseFile7dirNameERK14directoryEntryPc+0x28>
   128a8:	98 30       	cpi	r25, 0x08	; 8
   128aa:	29 f4       	brne	.+10     	; 0x128b6 <_ZN10SdBaseFile7dirNameERK14directoryEntryPc+0x1c>
   128ac:	db 01       	movw	r26, r22
   128ae:	a8 0f       	add	r26, r24
   128b0:	b1 1d       	adc	r27, r1
   128b2:	2c 93       	st	X, r18
   128b4:	8f 5f       	subi	r24, 0xFF	; 255
   128b6:	30 81       	ld	r19, Z
   128b8:	db 01       	movw	r26, r22
   128ba:	a8 0f       	add	r26, r24
   128bc:	b1 1d       	adc	r27, r1
   128be:	3c 93       	st	X, r19
   128c0:	8f 5f       	subi	r24, 0xFF	; 255
   128c2:	9f 5f       	subi	r25, 0xFF	; 255
   128c4:	31 96       	adiw	r30, 0x01	; 1
   128c6:	9b 30       	cpi	r25, 0x0B	; 11
   128c8:	61 f7       	brne	.-40     	; 0x128a2 <_ZN10SdBaseFile7dirNameERK14directoryEntryPc+0x8>
   128ca:	68 0f       	add	r22, r24
   128cc:	71 1d       	adc	r23, r1
   128ce:	fb 01       	movw	r30, r22
   128d0:	10 82       	st	Z, r1
   128d2:	08 95       	ret

000128d4 <_ZN10SdBaseFile11getFilenameEPc>:
   128d4:	cf 93       	push	r28
   128d6:	df 93       	push	r29
   128d8:	eb 01       	movw	r28, r22
   128da:	fc 01       	movw	r30, r24
   128dc:	23 81       	ldd	r18, Z+3	; 0x03
   128de:	22 23       	and	r18, r18
   128e0:	89 f0       	breq	.+34     	; 0x12904 <_ZN10SdBaseFile11getFilenameEPc+0x30>
   128e2:	22 50       	subi	r18, 0x02	; 2
   128e4:	22 30       	cpi	r18, 0x02	; 2
   128e6:	20 f4       	brcc	.+8      	; 0x128f0 <_ZN10SdBaseFile11getFilenameEPc+0x1c>
   128e8:	8f e2       	ldi	r24, 0x2F	; 47
   128ea:	88 83       	st	Y, r24
   128ec:	19 82       	std	Y+1, r1	; 0x01
   128ee:	08 c0       	rjmp	.+16     	; 0x12900 <_ZN10SdBaseFile11getFilenameEPc+0x2c>
   128f0:	60 e0       	ldi	r22, 0x00	; 0
   128f2:	0e 94 2f 94 	call	0x1285e	; 0x1285e <_ZN10SdBaseFile13cacheDirEntryEh>
   128f6:	00 97       	sbiw	r24, 0x00	; 0
   128f8:	29 f0       	breq	.+10     	; 0x12904 <_ZN10SdBaseFile11getFilenameEPc+0x30>
   128fa:	be 01       	movw	r22, r28
   128fc:	0e 94 4d 94 	call	0x1289a	; 0x1289a <_ZN10SdBaseFile7dirNameERK14directoryEntryPc>
   12900:	81 e0       	ldi	r24, 0x01	; 1
   12902:	01 c0       	rjmp	.+2      	; 0x12906 <_ZN10SdBaseFile11getFilenameEPc+0x32>
   12904:	80 e0       	ldi	r24, 0x00	; 0
   12906:	df 91       	pop	r29
   12908:	cf 91       	pop	r28
   1290a:	08 95       	ret

0001290c <_ZN10SdBaseFile10make83NameEPKcPhPS1_>:
   1290c:	cf 93       	push	r28
   1290e:	df 93       	push	r29
   12910:	ea 01       	movw	r28, r20
   12912:	fb 01       	movw	r30, r22
   12914:	2b e0       	ldi	r18, 0x0B	; 11
   12916:	30 e2       	ldi	r19, 0x20	; 32
   12918:	31 93       	st	Z+, r19
   1291a:	21 50       	subi	r18, 0x01	; 1
   1291c:	e9 f7       	brne	.-6      	; 0x12918 <_ZN10SdBaseFile10make83NameEPKcPhPS1_+0xc>
   1291e:	dc 01       	movw	r26, r24
   12920:	30 e0       	ldi	r19, 0x00	; 0
   12922:	47 e0       	ldi	r20, 0x07	; 7
   12924:	1c c0       	rjmp	.+56     	; 0x1295e <_ZN10SdBaseFile10make83NameEPKcPhPS1_+0x52>
   12926:	4a 30       	cpi	r20, 0x0A	; 10
   12928:	69 f1       	breq	.+90     	; 0x12984 <_ZN10SdBaseFile10make83NameEPKcPhPS1_+0x78>
   1292a:	38 e0       	ldi	r19, 0x08	; 8
   1292c:	4a e0       	ldi	r20, 0x0A	; 10
   1292e:	17 c0       	rjmp	.+46     	; 0x1295e <_ZN10SdBaseFile10make83NameEPKcPhPS1_+0x52>
   12930:	e2 17       	cp	r30, r18
   12932:	41 f1       	breq	.+80     	; 0x12984 <_ZN10SdBaseFile10make83NameEPKcPhPS1_+0x78>
   12934:	fc 01       	movw	r30, r24
   12936:	01 96       	adiw	r24, 0x01	; 1
   12938:	e4 91       	lpm	r30, Z+
   1293a:	ee 23       	and	r30, r30
   1293c:	c9 f7       	brne	.-14     	; 0x12930 <_ZN10SdBaseFile10make83NameEPKcPhPS1_+0x24>
   1293e:	43 17       	cp	r20, r19
   12940:	08 f1       	brcs	.+66     	; 0x12984 <_ZN10SdBaseFile10make83NameEPKcPhPS1_+0x78>
   12942:	21 32       	cpi	r18, 0x21	; 33
   12944:	f8 f0       	brcs	.+62     	; 0x12984 <_ZN10SdBaseFile10make83NameEPKcPhPS1_+0x78>
   12946:	2f 37       	cpi	r18, 0x7F	; 127
   12948:	e8 f4       	brcc	.+58     	; 0x12984 <_ZN10SdBaseFile10make83NameEPKcPhPS1_+0x78>
   1294a:	fb 01       	movw	r30, r22
   1294c:	e3 0f       	add	r30, r19
   1294e:	f1 1d       	adc	r31, r1
   12950:	82 2f       	mov	r24, r18
   12952:	81 56       	subi	r24, 0x61	; 97
   12954:	8a 31       	cpi	r24, 0x1A	; 26
   12956:	08 f4       	brcc	.+2      	; 0x1295a <_ZN10SdBaseFile10make83NameEPKcPhPS1_+0x4e>
   12958:	20 52       	subi	r18, 0x20	; 32
   1295a:	20 83       	st	Z, r18
   1295c:	3f 5f       	subi	r19, 0xFF	; 255
   1295e:	9a 2f       	mov	r25, r26
   12960:	8b 2f       	mov	r24, r27
   12962:	2d 91       	ld	r18, X+
   12964:	22 23       	and	r18, r18
   12966:	39 f0       	breq	.+14     	; 0x12976 <_ZN10SdBaseFile10make83NameEPKcPhPS1_+0x6a>
   12968:	2f 32       	cpi	r18, 0x2F	; 47
   1296a:	29 f0       	breq	.+10     	; 0x12976 <_ZN10SdBaseFile10make83NameEPKcPhPS1_+0x6a>
   1296c:	2e 32       	cpi	r18, 0x2E	; 46
   1296e:	d9 f2       	breq	.-74     	; 0x12926 <_ZN10SdBaseFile10make83NameEPKcPhPS1_+0x1a>
   12970:	8f e3       	ldi	r24, 0x3F	; 63
   12972:	9d e0       	ldi	r25, 0x0D	; 13
   12974:	df cf       	rjmp	.-66     	; 0x12934 <_ZN10SdBaseFile10make83NameEPKcPhPS1_+0x28>
   12976:	98 83       	st	Y, r25
   12978:	89 83       	std	Y+1, r24	; 0x01
   1297a:	81 e0       	ldi	r24, 0x01	; 1
   1297c:	fb 01       	movw	r30, r22
   1297e:	90 81       	ld	r25, Z
   12980:	90 32       	cpi	r25, 0x20	; 32
   12982:	09 f4       	brne	.+2      	; 0x12986 <_ZN10SdBaseFile10make83NameEPKcPhPS1_+0x7a>
   12984:	80 e0       	ldi	r24, 0x00	; 0
   12986:	df 91       	pop	r29
   12988:	cf 91       	pop	r28
   1298a:	08 95       	ret

0001298c <_ZN10SdBaseFile12printFatDateEP5Printj>:
   1298c:	0f 93       	push	r16
   1298e:	1f 93       	push	r17
   12990:	cf 93       	push	r28
   12992:	df 93       	push	r29
   12994:	ec 01       	movw	r28, r24
   12996:	8b 01       	movw	r16, r22
   12998:	67 2f       	mov	r22, r23
   1299a:	77 27       	eor	r23, r23
   1299c:	66 95       	lsr	r22
   1299e:	64 54       	subi	r22, 0x44	; 68
   129a0:	78 4f       	sbci	r23, 0xF8	; 248
   129a2:	4a e0       	ldi	r20, 0x0A	; 10
   129a4:	50 e0       	ldi	r21, 0x00	; 0
   129a6:	0e 94 3a a7 	call	0x14e74	; 0x14e74 <_ZN5Print5printEji>
   129aa:	e8 81       	ld	r30, Y
   129ac:	f9 81       	ldd	r31, Y+1	; 0x01
   129ae:	01 90       	ld	r0, Z+
   129b0:	f0 81       	ld	r31, Z
   129b2:	e0 2d       	mov	r30, r0
   129b4:	ce 01       	movw	r24, r28
   129b6:	6d e2       	ldi	r22, 0x2D	; 45
   129b8:	19 95       	eicall
   129ba:	b8 01       	movw	r22, r16
   129bc:	a5 e0       	ldi	r26, 0x05	; 5
   129be:	76 95       	lsr	r23
   129c0:	67 95       	ror	r22
   129c2:	aa 95       	dec	r26
   129c4:	e1 f7       	brne	.-8      	; 0x129be <_ZN10SdBaseFile12printFatDateEP5Printj+0x32>
   129c6:	6f 70       	andi	r22, 0x0F	; 15
   129c8:	ce 01       	movw	r24, r28
   129ca:	0e 94 71 93 	call	0x126e2	; 0x126e2 <_ZL7print2uP5Printh>
   129ce:	e8 81       	ld	r30, Y
   129d0:	f9 81       	ldd	r31, Y+1	; 0x01
   129d2:	01 90       	ld	r0, Z+
   129d4:	f0 81       	ld	r31, Z
   129d6:	e0 2d       	mov	r30, r0
   129d8:	ce 01       	movw	r24, r28
   129da:	6d e2       	ldi	r22, 0x2D	; 45
   129dc:	19 95       	eicall
   129de:	60 2f       	mov	r22, r16
   129e0:	6f 71       	andi	r22, 0x1F	; 31
   129e2:	ce 01       	movw	r24, r28
   129e4:	0e 94 71 93 	call	0x126e2	; 0x126e2 <_ZL7print2uP5Printh>
   129e8:	df 91       	pop	r29
   129ea:	cf 91       	pop	r28
   129ec:	1f 91       	pop	r17
   129ee:	0f 91       	pop	r16
   129f0:	08 95       	ret

000129f2 <_ZN10SdBaseFile12printFatTimeEP5Printj>:
   129f2:	0f 93       	push	r16
   129f4:	1f 93       	push	r17
   129f6:	cf 93       	push	r28
   129f8:	df 93       	push	r29
   129fa:	ec 01       	movw	r28, r24
   129fc:	8b 01       	movw	r16, r22
   129fe:	61 2f       	mov	r22, r17
   12a00:	66 95       	lsr	r22
   12a02:	66 95       	lsr	r22
   12a04:	66 95       	lsr	r22
   12a06:	0e 94 71 93 	call	0x126e2	; 0x126e2 <_ZL7print2uP5Printh>
   12a0a:	e8 81       	ld	r30, Y
   12a0c:	f9 81       	ldd	r31, Y+1	; 0x01
   12a0e:	01 90       	ld	r0, Z+
   12a10:	f0 81       	ld	r31, Z
   12a12:	e0 2d       	mov	r30, r0
   12a14:	ce 01       	movw	r24, r28
   12a16:	6a e3       	ldi	r22, 0x3A	; 58
   12a18:	19 95       	eicall
   12a1a:	b8 01       	movw	r22, r16
   12a1c:	b5 e0       	ldi	r27, 0x05	; 5
   12a1e:	76 95       	lsr	r23
   12a20:	67 95       	ror	r22
   12a22:	ba 95       	dec	r27
   12a24:	e1 f7       	brne	.-8      	; 0x12a1e <_ZN10SdBaseFile12printFatTimeEP5Printj+0x2c>
   12a26:	6f 73       	andi	r22, 0x3F	; 63
   12a28:	ce 01       	movw	r24, r28
   12a2a:	0e 94 71 93 	call	0x126e2	; 0x126e2 <_ZL7print2uP5Printh>
   12a2e:	e8 81       	ld	r30, Y
   12a30:	f9 81       	ldd	r31, Y+1	; 0x01
   12a32:	01 90       	ld	r0, Z+
   12a34:	f0 81       	ld	r31, Z
   12a36:	e0 2d       	mov	r30, r0
   12a38:	ce 01       	movw	r24, r28
   12a3a:	6a e3       	ldi	r22, 0x3A	; 58
   12a3c:	19 95       	eicall
   12a3e:	60 2f       	mov	r22, r16
   12a40:	6f 71       	andi	r22, 0x1F	; 31
   12a42:	66 0f       	add	r22, r22
   12a44:	ce 01       	movw	r24, r28
   12a46:	0e 94 71 93 	call	0x126e2	; 0x126e2 <_ZL7print2uP5Printh>
   12a4a:	df 91       	pop	r29
   12a4c:	cf 91       	pop	r28
   12a4e:	1f 91       	pop	r17
   12a50:	0f 91       	pop	r16
   12a52:	08 95       	ret

00012a54 <_ZN10SdBaseFile4readEPvj>:
   12a54:	2f 92       	push	r2
   12a56:	3f 92       	push	r3
   12a58:	4f 92       	push	r4
   12a5a:	5f 92       	push	r5
   12a5c:	6f 92       	push	r6
   12a5e:	7f 92       	push	r7
   12a60:	8f 92       	push	r8
   12a62:	9f 92       	push	r9
   12a64:	af 92       	push	r10
   12a66:	bf 92       	push	r11
   12a68:	cf 92       	push	r12
   12a6a:	df 92       	push	r13
   12a6c:	ef 92       	push	r14
   12a6e:	ff 92       	push	r15
   12a70:	0f 93       	push	r16
   12a72:	1f 93       	push	r17
   12a74:	cf 93       	push	r28
   12a76:	df 93       	push	r29
   12a78:	00 d0       	rcall	.+0      	; 0x12a7a <_ZN10SdBaseFile4readEPvj+0x26>
   12a7a:	0f 92       	push	r0
   12a7c:	cd b7       	in	r28, 0x3d	; 61
   12a7e:	de b7       	in	r29, 0x3e	; 62
   12a80:	5c 01       	movw	r10, r24
   12a82:	6b 83       	std	Y+3, r22	; 0x03
   12a84:	79 83       	std	Y+1, r23	; 0x01
   12a86:	1a 01       	movw	r2, r20
   12a88:	dc 01       	movw	r26, r24
   12a8a:	13 96       	adiw	r26, 0x03	; 3
   12a8c:	8c 91       	ld	r24, X
   12a8e:	13 97       	sbiw	r26, 0x03	; 3
   12a90:	88 23       	and	r24, r24
   12a92:	09 f4       	brne	.+2      	; 0x12a96 <_ZN10SdBaseFile4readEPvj+0x42>
   12a94:	0e c1       	rjmp	.+540    	; 0x12cb2 <_ZN10SdBaseFile4readEPvj+0x25e>
   12a96:	11 96       	adiw	r26, 0x01	; 1
   12a98:	8c 91       	ld	r24, X
   12a9a:	11 97       	sbiw	r26, 0x01	; 1
   12a9c:	80 ff       	sbrs	r24, 0
   12a9e:	09 c1       	rjmp	.+530    	; 0x12cb2 <_ZN10SdBaseFile4readEPvj+0x25e>
   12aa0:	20 c1       	rjmp	.+576    	; 0x12ce2 <_ZN10SdBaseFile4readEPvj+0x28e>
   12aa2:	1c 01       	movw	r2, r24
   12aa4:	24 1a       	sub	r2, r20
   12aa6:	35 0a       	sbc	r3, r21
   12aa8:	41 01       	movw	r8, r2
   12aaa:	4b 80       	ldd	r4, Y+3	; 0x03
   12aac:	59 80       	ldd	r5, Y+1	; 0x01
   12aae:	f5 01       	movw	r30, r10
   12ab0:	37 96       	adiw	r30, 0x07	; 7
   12ab2:	e9 83       	std	Y+1, r30	; 0x01
   12ab4:	fa 83       	std	Y+2, r31	; 0x02
   12ab6:	f7 c0       	rjmp	.+494    	; 0x12ca6 <_ZN10SdBaseFile4readEPvj+0x252>
   12ab8:	f5 01       	movw	r30, r10
   12aba:	83 85       	ldd	r24, Z+11	; 0x0b
   12abc:	94 85       	ldd	r25, Z+12	; 0x0c
   12abe:	a5 85       	ldd	r26, Z+13	; 0x0d
   12ac0:	b6 85       	ldd	r27, Z+14	; 0x0e
   12ac2:	9c 01       	movw	r18, r24
   12ac4:	31 70       	andi	r19, 0x01	; 1
   12ac6:	2b 83       	std	Y+3, r18	; 0x03
   12ac8:	3c 83       	std	Y+4, r19	; 0x04
   12aca:	c5 80       	ldd	r12, Z+5	; 0x05
   12acc:	d6 80       	ldd	r13, Z+6	; 0x06
   12ace:	ac 01       	movw	r20, r24
   12ad0:	bd 01       	movw	r22, r26
   12ad2:	09 e0       	ldi	r16, 0x09	; 9
   12ad4:	76 95       	lsr	r23
   12ad6:	67 95       	ror	r22
   12ad8:	57 95       	ror	r21
   12ada:	47 95       	ror	r20
   12adc:	0a 95       	dec	r16
   12ade:	d1 f7       	brne	.-12     	; 0x12ad4 <_ZN10SdBaseFile4readEPvj+0x80>
   12ae0:	f6 01       	movw	r30, r12
   12ae2:	04 81       	ldd	r16, Z+4	; 0x04
   12ae4:	01 50       	subi	r16, 0x01	; 1
   12ae6:	04 23       	and	r16, r20
   12ae8:	f5 01       	movw	r30, r10
   12aea:	23 81       	ldd	r18, Z+3	; 0x03
   12aec:	22 30       	cpi	r18, 0x02	; 2
   12aee:	61 f4       	brne	.+24     	; 0x12b08 <_ZN10SdBaseFile4readEPvj+0xb4>
   12af0:	d6 01       	movw	r26, r12
   12af2:	5a 96       	adiw	r26, 0x1a	; 26
   12af4:	cd 90       	ld	r12, X+
   12af6:	dd 90       	ld	r13, X+
   12af8:	ed 90       	ld	r14, X+
   12afa:	fc 90       	ld	r15, X
   12afc:	5d 97       	sbiw	r26, 0x1d	; 29
   12afe:	c4 0e       	add	r12, r20
   12b00:	d5 1e       	adc	r13, r21
   12b02:	e6 1e       	adc	r14, r22
   12b04:	f7 1e       	adc	r15, r23
   12b06:	32 c0       	rjmp	.+100    	; 0x12b6c <_ZN10SdBaseFile4readEPvj+0x118>
   12b08:	eb 81       	ldd	r30, Y+3	; 0x03
   12b0a:	fc 81       	ldd	r31, Y+4	; 0x04
   12b0c:	30 97       	sbiw	r30, 0x00	; 0
   12b0e:	f9 f4       	brne	.+62     	; 0x12b4e <_ZN10SdBaseFile4readEPvj+0xfa>
   12b10:	00 23       	and	r16, r16
   12b12:	e9 f4       	brne	.+58     	; 0x12b4e <_ZN10SdBaseFile4readEPvj+0xfa>
   12b14:	00 97       	sbiw	r24, 0x00	; 0
   12b16:	a1 05       	cpc	r26, r1
   12b18:	b1 05       	cpc	r27, r1
   12b1a:	51 f4       	brne	.+20     	; 0x12b30 <_ZN10SdBaseFile4readEPvj+0xdc>
   12b1c:	f5 01       	movw	r30, r10
   12b1e:	87 89       	ldd	r24, Z+23	; 0x17
   12b20:	90 8d       	ldd	r25, Z+24	; 0x18
   12b22:	a1 8d       	ldd	r26, Z+25	; 0x19
   12b24:	b2 8d       	ldd	r27, Z+26	; 0x1a
   12b26:	87 83       	std	Z+7, r24	; 0x07
   12b28:	90 87       	std	Z+8, r25	; 0x08
   12b2a:	a1 87       	std	Z+9, r26	; 0x09
   12b2c:	b2 87       	std	Z+10, r27	; 0x0a
   12b2e:	0f c0       	rjmp	.+30     	; 0x12b4e <_ZN10SdBaseFile4readEPvj+0xfa>
   12b30:	d5 01       	movw	r26, r10
   12b32:	17 96       	adiw	r26, 0x07	; 7
   12b34:	4d 91       	ld	r20, X+
   12b36:	5d 91       	ld	r21, X+
   12b38:	6d 91       	ld	r22, X+
   12b3a:	7c 91       	ld	r23, X
   12b3c:	1a 97       	sbiw	r26, 0x0a	; 10
   12b3e:	c6 01       	movw	r24, r12
   12b40:	29 81       	ldd	r18, Y+1	; 0x01
   12b42:	3a 81       	ldd	r19, Y+2	; 0x02
   12b44:	0e 94 9b a2 	call	0x14536	; 0x14536 <_ZN8SdVolume6fatGetEmPm>
   12b48:	88 23       	and	r24, r24
   12b4a:	09 f4       	brne	.+2      	; 0x12b4e <_ZN10SdBaseFile4readEPvj+0xfa>
   12b4c:	b2 c0       	rjmp	.+356    	; 0x12cb2 <_ZN10SdBaseFile4readEPvj+0x25e>
   12b4e:	f5 01       	movw	r30, r10
   12b50:	47 81       	ldd	r20, Z+7	; 0x07
   12b52:	50 85       	ldd	r21, Z+8	; 0x08
   12b54:	61 85       	ldd	r22, Z+9	; 0x09
   12b56:	72 85       	ldd	r23, Z+10	; 0x0a
   12b58:	85 81       	ldd	r24, Z+5	; 0x05
   12b5a:	96 81       	ldd	r25, Z+6	; 0x06
   12b5c:	0e 94 78 a2 	call	0x144f0	; 0x144f0 <_ZNK8SdVolume17clusterStartBlockEm>
   12b60:	6b 01       	movw	r12, r22
   12b62:	7c 01       	movw	r14, r24
   12b64:	c0 0e       	add	r12, r16
   12b66:	d1 1c       	adc	r13, r1
   12b68:	e1 1c       	adc	r14, r1
   12b6a:	f1 1c       	adc	r15, r1
   12b6c:	2b 81       	ldd	r18, Y+3	; 0x03
   12b6e:	3c 81       	ldd	r19, Y+4	; 0x04
   12b70:	21 15       	cp	r18, r1
   12b72:	31 05       	cpc	r19, r1
   12b74:	99 f4       	brne	.+38     	; 0x12b9c <_ZN10SdBaseFile4readEPvj+0x148>
   12b76:	30 e0       	ldi	r19, 0x00	; 0
   12b78:	83 16       	cp	r8, r19
   12b7a:	32 e0       	ldi	r19, 0x02	; 2
   12b7c:	93 06       	cpc	r9, r19
   12b7e:	70 f0       	brcs	.+28     	; 0x12b9c <_ZN10SdBaseFile4readEPvj+0x148>
   12b80:	80 91 ab 25 	lds	r24, 0x25AB
   12b84:	90 91 ac 25 	lds	r25, 0x25AC
   12b88:	a0 91 ad 25 	lds	r26, 0x25AD
   12b8c:	b0 91 ae 25 	lds	r27, 0x25AE
   12b90:	c8 16       	cp	r12, r24
   12b92:	d9 06       	cpc	r13, r25
   12b94:	ea 06       	cpc	r14, r26
   12b96:	fb 06       	cpc	r15, r27
   12b98:	09 f0       	breq	.+2      	; 0x12b9c <_ZN10SdBaseFile4readEPvj+0x148>
   12b9a:	bc c0       	rjmp	.+376    	; 0x12d14 <_ZN10SdBaseFile4readEPvj+0x2c0>
   12b9c:	c7 01       	movw	r24, r14
   12b9e:	b6 01       	movw	r22, r12
   12ba0:	40 e0       	ldi	r20, 0x00	; 0
   12ba2:	0e 94 21 a2 	call	0x14442	; 0x14442 <_ZN8SdVolume10cacheFetchEmh>
   12ba6:	bc 01       	movw	r22, r24
   12ba8:	00 97       	sbiw	r24, 0x00	; 0
   12baa:	09 f4       	brne	.+2      	; 0x12bae <_ZN10SdBaseFile4readEPvj+0x15a>
   12bac:	82 c0       	rjmp	.+260    	; 0x12cb2 <_ZN10SdBaseFile4readEPvj+0x25e>
   12bae:	80 e0       	ldi	r24, 0x00	; 0
   12bb0:	92 e0       	ldi	r25, 0x02	; 2
   12bb2:	ab 81       	ldd	r26, Y+3	; 0x03
   12bb4:	bc 81       	ldd	r27, Y+4	; 0x04
   12bb6:	8a 1b       	sub	r24, r26
   12bb8:	9b 0b       	sbc	r25, r27
   12bba:	34 01       	movw	r6, r8
   12bbc:	88 15       	cp	r24, r8
   12bbe:	99 05       	cpc	r25, r9
   12bc0:	08 f4       	brcc	.+2      	; 0x12bc4 <_ZN10SdBaseFile4readEPvj+0x170>
   12bc2:	3c 01       	movw	r6, r24
   12bc4:	eb 81       	ldd	r30, Y+3	; 0x03
   12bc6:	fc 81       	ldd	r31, Y+4	; 0x04
   12bc8:	6e 0f       	add	r22, r30
   12bca:	7f 1f       	adc	r23, r31
   12bcc:	c2 01       	movw	r24, r4
   12bce:	a3 01       	movw	r20, r6
   12bd0:	0e 94 c7 b0 	call	0x1618e	; 0x1618e <memcpy>
   12bd4:	54 c0       	rjmp	.+168    	; 0x12c7e <_ZN10SdBaseFile4readEPvj+0x22a>
   12bd6:	80 91 a4 25 	lds	r24, 0x25A4
   12bda:	90 91 a5 25 	lds	r25, 0x25A5
   12bde:	b7 01       	movw	r22, r14
   12be0:	a6 01       	movw	r20, r12
   12be2:	92 01       	movw	r18, r4
   12be4:	0e 94 d2 90 	call	0x121a4	; 0x121a4 <_ZN7Sd2Card9readBlockEmPh>
   12be8:	88 23       	and	r24, r24
   12bea:	09 f4       	brne	.+2      	; 0x12bee <_ZN10SdBaseFile4readEPvj+0x19a>
   12bec:	62 c0       	rjmp	.+196    	; 0x12cb2 <_ZN10SdBaseFile4readEPvj+0x25e>
   12bee:	61 2c       	mov	r6, r1
   12bf0:	12 e0       	ldi	r17, 0x02	; 2
   12bf2:	71 2e       	mov	r7, r17
   12bf4:	44 c0       	rjmp	.+136    	; 0x12c7e <_ZN10SdBaseFile4readEPvj+0x22a>
   12bf6:	19 2d       	mov	r17, r9
   12bf8:	16 95       	lsr	r17
   12bfa:	f5 01       	movw	r30, r10
   12bfc:	23 81       	ldd	r18, Z+3	; 0x03
   12bfe:	22 30       	cpi	r18, 0x02	; 2
   12c00:	41 f0       	breq	.+16     	; 0x12c12 <_ZN10SdBaseFile4readEPvj+0x1be>
   12c02:	25 81       	ldd	r18, Z+5	; 0x05
   12c04:	36 81       	ldd	r19, Z+6	; 0x06
   12c06:	f9 01       	movw	r30, r18
   12c08:	24 81       	ldd	r18, Z+4	; 0x04
   12c0a:	20 1b       	sub	r18, r16
   12c0c:	21 17       	cp	r18, r17
   12c0e:	08 f4       	brcc	.+2      	; 0x12c12 <_ZN10SdBaseFile4readEPvj+0x1be>
   12c10:	12 2f       	mov	r17, r18
   12c12:	c8 16       	cp	r12, r24
   12c14:	d9 06       	cpc	r13, r25
   12c16:	ea 06       	cpc	r14, r26
   12c18:	fb 06       	cpc	r15, r27
   12c1a:	68 f0       	brcs	.+26     	; 0x12c36 <_ZN10SdBaseFile4readEPvj+0x1e2>
   12c1c:	81 0f       	add	r24, r17
   12c1e:	91 1d       	adc	r25, r1
   12c20:	a1 1d       	adc	r26, r1
   12c22:	b1 1d       	adc	r27, r1
   12c24:	c8 16       	cp	r12, r24
   12c26:	d9 06       	cpc	r13, r25
   12c28:	ea 06       	cpc	r14, r26
   12c2a:	fb 06       	cpc	r15, r27
   12c2c:	20 f4       	brcc	.+8      	; 0x12c36 <_ZN10SdBaseFile4readEPvj+0x1e2>
   12c2e:	0e 94 da a1 	call	0x143b4	; 0x143b4 <_ZN8SdVolume9cacheSyncEv>
   12c32:	88 23       	and	r24, r24
   12c34:	f1 f1       	breq	.+124    	; 0x12cb2 <_ZN10SdBaseFile4readEPvj+0x25e>
   12c36:	80 91 a4 25 	lds	r24, 0x25A4
   12c3a:	90 91 a5 25 	lds	r25, 0x25A5
   12c3e:	b7 01       	movw	r22, r14
   12c40:	a6 01       	movw	r20, r12
   12c42:	0e 94 af 90 	call	0x1215e	; 0x1215e <_ZN7Sd2Card9readStartEm>
   12c46:	88 23       	and	r24, r24
   12c48:	a1 f1       	breq	.+104    	; 0x12cb2 <_ZN10SdBaseFile4readEPvj+0x25e>
   12c4a:	62 01       	movw	r12, r4
   12c4c:	00 e0       	ldi	r16, 0x00	; 0
   12c4e:	0a c0       	rjmp	.+20     	; 0x12c64 <_ZN10SdBaseFile4readEPvj+0x210>
   12c50:	b6 01       	movw	r22, r12
   12c52:	0e 94 e6 8f 	call	0x11fcc	; 0x11fcc <_ZN7Sd2Card8readDataEPh>
   12c56:	20 e0       	ldi	r18, 0x00	; 0
   12c58:	32 e0       	ldi	r19, 0x02	; 2
   12c5a:	c2 0e       	add	r12, r18
   12c5c:	d3 1e       	adc	r13, r19
   12c5e:	88 23       	and	r24, r24
   12c60:	41 f1       	breq	.+80     	; 0x12cb2 <_ZN10SdBaseFile4readEPvj+0x25e>
   12c62:	0f 5f       	subi	r16, 0xFF	; 255
   12c64:	80 91 a4 25 	lds	r24, 0x25A4
   12c68:	90 91 a5 25 	lds	r25, 0x25A5
   12c6c:	01 17       	cp	r16, r17
   12c6e:	81 f7       	brne	.-32     	; 0x12c50 <_ZN10SdBaseFile4readEPvj+0x1fc>
   12c70:	0e 94 93 90 	call	0x12126	; 0x12126 <_ZN7Sd2Card8readStopEv>
   12c74:	88 23       	and	r24, r24
   12c76:	e9 f0       	breq	.+58     	; 0x12cb2 <_ZN10SdBaseFile4readEPvj+0x25e>
   12c78:	70 2e       	mov	r7, r16
   12c7a:	77 0c       	add	r7, r7
   12c7c:	66 24       	eor	r6, r6
   12c7e:	46 0c       	add	r4, r6
   12c80:	57 1c       	adc	r5, r7
   12c82:	a3 01       	movw	r20, r6
   12c84:	60 e0       	ldi	r22, 0x00	; 0
   12c86:	70 e0       	ldi	r23, 0x00	; 0
   12c88:	f5 01       	movw	r30, r10
   12c8a:	83 85       	ldd	r24, Z+11	; 0x0b
   12c8c:	94 85       	ldd	r25, Z+12	; 0x0c
   12c8e:	a5 85       	ldd	r26, Z+13	; 0x0d
   12c90:	b6 85       	ldd	r27, Z+14	; 0x0e
   12c92:	84 0f       	add	r24, r20
   12c94:	95 1f       	adc	r25, r21
   12c96:	a6 1f       	adc	r26, r22
   12c98:	b7 1f       	adc	r27, r23
   12c9a:	83 87       	std	Z+11, r24	; 0x0b
   12c9c:	94 87       	std	Z+12, r25	; 0x0c
   12c9e:	a5 87       	std	Z+13, r26	; 0x0d
   12ca0:	b6 87       	std	Z+14, r27	; 0x0e
   12ca2:	86 18       	sub	r8, r6
   12ca4:	97 08       	sbc	r9, r7
   12ca6:	81 14       	cp	r8, r1
   12ca8:	91 04       	cpc	r9, r1
   12caa:	09 f0       	breq	.+2      	; 0x12cae <_ZN10SdBaseFile4readEPvj+0x25a>
   12cac:	05 cf       	rjmp	.-502    	; 0x12ab8 <_ZN10SdBaseFile4readEPvj+0x64>
   12cae:	c1 01       	movw	r24, r2
   12cb0:	02 c0       	rjmp	.+4      	; 0x12cb6 <_ZN10SdBaseFile4readEPvj+0x262>
   12cb2:	8f ef       	ldi	r24, 0xFF	; 255
   12cb4:	9f ef       	ldi	r25, 0xFF	; 255
   12cb6:	24 96       	adiw	r28, 0x04	; 4
   12cb8:	cd bf       	out	0x3d, r28	; 61
   12cba:	de bf       	out	0x3e, r29	; 62
   12cbc:	df 91       	pop	r29
   12cbe:	cf 91       	pop	r28
   12cc0:	1f 91       	pop	r17
   12cc2:	0f 91       	pop	r16
   12cc4:	ff 90       	pop	r15
   12cc6:	ef 90       	pop	r14
   12cc8:	df 90       	pop	r13
   12cca:	cf 90       	pop	r12
   12ccc:	bf 90       	pop	r11
   12cce:	af 90       	pop	r10
   12cd0:	9f 90       	pop	r9
   12cd2:	8f 90       	pop	r8
   12cd4:	7f 90       	pop	r7
   12cd6:	6f 90       	pop	r6
   12cd8:	5f 90       	pop	r5
   12cda:	4f 90       	pop	r4
   12cdc:	3f 90       	pop	r3
   12cde:	2f 90       	pop	r2
   12ce0:	08 95       	ret
   12ce2:	f5 01       	movw	r30, r10
   12ce4:	83 89       	ldd	r24, Z+19	; 0x13
   12ce6:	94 89       	ldd	r25, Z+20	; 0x14
   12ce8:	a5 89       	ldd	r26, Z+21	; 0x15
   12cea:	b6 89       	ldd	r27, Z+22	; 0x16
   12cec:	43 85       	ldd	r20, Z+11	; 0x0b
   12cee:	54 85       	ldd	r21, Z+12	; 0x0c
   12cf0:	65 85       	ldd	r22, Z+13	; 0x0d
   12cf2:	76 85       	ldd	r23, Z+14	; 0x0e
   12cf4:	81 01       	movw	r16, r2
   12cf6:	20 e0       	ldi	r18, 0x00	; 0
   12cf8:	30 e0       	ldi	r19, 0x00	; 0
   12cfa:	6c 01       	movw	r12, r24
   12cfc:	7d 01       	movw	r14, r26
   12cfe:	c4 1a       	sub	r12, r20
   12d00:	d5 0a       	sbc	r13, r21
   12d02:	e6 0a       	sbc	r14, r22
   12d04:	f7 0a       	sbc	r15, r23
   12d06:	0c 15       	cp	r16, r12
   12d08:	1d 05       	cpc	r17, r13
   12d0a:	2e 05       	cpc	r18, r14
   12d0c:	3f 05       	cpc	r19, r15
   12d0e:	08 f0       	brcs	.+2      	; 0x12d12 <_ZN10SdBaseFile4readEPvj+0x2be>
   12d10:	c8 ce       	rjmp	.-624    	; 0x12aa2 <_ZN10SdBaseFile4readEPvj+0x4e>
   12d12:	ca ce       	rjmp	.-620    	; 0x12aa8 <_ZN10SdBaseFile4readEPvj+0x54>
   12d14:	f0 e0       	ldi	r31, 0x00	; 0
   12d16:	8f 16       	cp	r8, r31
   12d18:	f4 e0       	ldi	r31, 0x04	; 4
   12d1a:	9f 06       	cpc	r9, r31
   12d1c:	08 f0       	brcs	.+2      	; 0x12d20 <_ZN10SdBaseFile4readEPvj+0x2cc>
   12d1e:	6b cf       	rjmp	.-298    	; 0x12bf6 <_ZN10SdBaseFile4readEPvj+0x1a2>
   12d20:	5a cf       	rjmp	.-332    	; 0x12bd6 <_ZN10SdBaseFile4readEPvj+0x182>

00012d22 <_ZN10SdBaseFile4readEv>:
   12d22:	cf 93       	push	r28
   12d24:	df 93       	push	r29
   12d26:	0f 92       	push	r0
   12d28:	cd b7       	in	r28, 0x3d	; 61
   12d2a:	de b7       	in	r29, 0x3e	; 62
   12d2c:	be 01       	movw	r22, r28
   12d2e:	6f 5f       	subi	r22, 0xFF	; 255
   12d30:	7f 4f       	sbci	r23, 0xFF	; 255
   12d32:	41 e0       	ldi	r20, 0x01	; 1
   12d34:	50 e0       	ldi	r21, 0x00	; 0
   12d36:	0e 94 2a 95 	call	0x12a54	; 0x12a54 <_ZN10SdBaseFile4readEPvj>
   12d3a:	81 30       	cpi	r24, 0x01	; 1
   12d3c:	91 05       	cpc	r25, r1
   12d3e:	19 f4       	brne	.+6      	; 0x12d46 <_ZN10SdBaseFile4readEv+0x24>
   12d40:	89 81       	ldd	r24, Y+1	; 0x01
   12d42:	90 e0       	ldi	r25, 0x00	; 0
   12d44:	02 c0       	rjmp	.+4      	; 0x12d4a <_ZN10SdBaseFile4readEv+0x28>
   12d46:	8f ef       	ldi	r24, 0xFF	; 255
   12d48:	9f ef       	ldi	r25, 0xFF	; 255
   12d4a:	0f 90       	pop	r0
   12d4c:	df 91       	pop	r29
   12d4e:	cf 91       	pop	r28
   12d50:	08 95       	ret

00012d52 <_ZN10SdBaseFile11lsPrintNextEP5Printhh>:
   12d52:	bf 92       	push	r11
   12d54:	cf 92       	push	r12
   12d56:	df 92       	push	r13
   12d58:	ef 92       	push	r14
   12d5a:	ff 92       	push	r15
   12d5c:	0f 93       	push	r16
   12d5e:	1f 93       	push	r17
   12d60:	cf 93       	push	r28
   12d62:	df 93       	push	r29
   12d64:	cd b7       	in	r28, 0x3d	; 61
   12d66:	de b7       	in	r29, 0x3e	; 62
   12d68:	a0 97       	sbiw	r28, 0x20	; 32
   12d6a:	cd bf       	out	0x3d, r28	; 61
   12d6c:	de bf       	out	0x3e, r29	; 62
   12d6e:	8c 01       	movw	r16, r24
   12d70:	7b 01       	movw	r14, r22
   12d72:	b4 2e       	mov	r11, r20
   12d74:	c2 2e       	mov	r12, r18
   12d76:	c8 01       	movw	r24, r16
   12d78:	be 01       	movw	r22, r28
   12d7a:	6f 5f       	subi	r22, 0xFF	; 255
   12d7c:	7f 4f       	sbci	r23, 0xFF	; 255
   12d7e:	40 e2       	ldi	r20, 0x20	; 32
   12d80:	50 e0       	ldi	r21, 0x00	; 0
   12d82:	0e 94 2a 95 	call	0x12a54	; 0x12a54 <_ZN10SdBaseFile4readEPvj>
   12d86:	80 32       	cpi	r24, 0x20	; 32
   12d88:	91 05       	cpc	r25, r1
   12d8a:	09 f0       	breq	.+2      	; 0x12d8e <_ZN10SdBaseFile11lsPrintNextEP5Printhh+0x3c>
   12d8c:	a1 c0       	rjmp	.+322    	; 0x12ed0 <_ZN10SdBaseFile11lsPrintNextEP5Printhh+0x17e>
   12d8e:	89 81       	ldd	r24, Y+1	; 0x01
   12d90:	88 23       	and	r24, r24
   12d92:	09 f4       	brne	.+2      	; 0x12d96 <_ZN10SdBaseFile11lsPrintNextEP5Printhh+0x44>
   12d94:	9d c0       	rjmp	.+314    	; 0x12ed0 <_ZN10SdBaseFile11lsPrintNextEP5Printhh+0x17e>
   12d96:	85 3e       	cpi	r24, 0xE5	; 229
   12d98:	71 f3       	breq	.-36     	; 0x12d76 <_ZN10SdBaseFile11lsPrintNextEP5Printhh+0x24>
   12d9a:	8e 32       	cpi	r24, 0x2E	; 46
   12d9c:	61 f3       	breq	.-40     	; 0x12d76 <_ZN10SdBaseFile11lsPrintNextEP5Printhh+0x24>
   12d9e:	8c 85       	ldd	r24, Y+12	; 0x0c
   12da0:	83 ff       	sbrs	r24, 3
   12da2:	0c c0       	rjmp	.+24     	; 0x12dbc <_ZN10SdBaseFile11lsPrintNextEP5Printhh+0x6a>
   12da4:	e8 cf       	rjmp	.-48     	; 0x12d76 <_ZN10SdBaseFile11lsPrintNextEP5Printhh+0x24>
   12da6:	d7 01       	movw	r26, r14
   12da8:	ed 91       	ld	r30, X+
   12daa:	fc 91       	ld	r31, X
   12dac:	01 90       	ld	r0, Z+
   12dae:	f0 81       	ld	r31, Z
   12db0:	e0 2d       	mov	r30, r0
   12db2:	c7 01       	movw	r24, r14
   12db4:	60 e2       	ldi	r22, 0x20	; 32
   12db6:	19 95       	eicall
   12db8:	1f 5f       	subi	r17, 0xFF	; 255
   12dba:	01 c0       	rjmp	.+2      	; 0x12dbe <_ZN10SdBaseFile11lsPrintNextEP5Printhh+0x6c>
   12dbc:	10 e0       	ldi	r17, 0x00	; 0
   12dbe:	1c 15       	cp	r17, r12
   12dc0:	91 f7       	brne	.-28     	; 0x12da6 <_ZN10SdBaseFile11lsPrintNextEP5Printhh+0x54>
   12dc2:	6e 01       	movw	r12, r28
   12dc4:	08 94       	sec
   12dc6:	c1 1c       	adc	r12, r1
   12dc8:	d1 1c       	adc	r13, r1
   12dca:	00 e0       	ldi	r16, 0x00	; 0
   12dcc:	10 e0       	ldi	r17, 0x00	; 0
   12dce:	f6 01       	movw	r30, r12
   12dd0:	80 81       	ld	r24, Z
   12dd2:	80 32       	cpi	r24, 0x20	; 32
   12dd4:	b9 f0       	breq	.+46     	; 0x12e04 <_ZN10SdBaseFile11lsPrintNextEP5Printhh+0xb2>
   12dd6:	08 30       	cpi	r16, 0x08	; 8
   12dd8:	51 f4       	brne	.+20     	; 0x12dee <_ZN10SdBaseFile11lsPrintNextEP5Printhh+0x9c>
   12dda:	d7 01       	movw	r26, r14
   12ddc:	ed 91       	ld	r30, X+
   12dde:	fc 91       	ld	r31, X
   12de0:	01 90       	ld	r0, Z+
   12de2:	f0 81       	ld	r31, Z
   12de4:	e0 2d       	mov	r30, r0
   12de6:	c7 01       	movw	r24, r14
   12de8:	6e e2       	ldi	r22, 0x2E	; 46
   12dea:	19 95       	eicall
   12dec:	1f 5f       	subi	r17, 0xFF	; 255
   12dee:	d7 01       	movw	r26, r14
   12df0:	ed 91       	ld	r30, X+
   12df2:	fc 91       	ld	r31, X
   12df4:	01 90       	ld	r0, Z+
   12df6:	f0 81       	ld	r31, Z
   12df8:	e0 2d       	mov	r30, r0
   12dfa:	c7 01       	movw	r24, r14
   12dfc:	d6 01       	movw	r26, r12
   12dfe:	6c 91       	ld	r22, X
   12e00:	19 95       	eicall
   12e02:	1f 5f       	subi	r17, 0xFF	; 255
   12e04:	0f 5f       	subi	r16, 0xFF	; 255
   12e06:	08 94       	sec
   12e08:	c1 1c       	adc	r12, r1
   12e0a:	d1 1c       	adc	r13, r1
   12e0c:	0b 30       	cpi	r16, 0x0B	; 11
   12e0e:	f9 f6       	brne	.-66     	; 0x12dce <_ZN10SdBaseFile11lsPrintNextEP5Printhh+0x7c>
   12e10:	8c 85       	ldd	r24, Y+12	; 0x0c
   12e12:	88 71       	andi	r24, 0x18	; 24
   12e14:	80 31       	cpi	r24, 0x10	; 16
   12e16:	51 f4       	brne	.+20     	; 0x12e2c <_ZN10SdBaseFile11lsPrintNextEP5Printhh+0xda>
   12e18:	d7 01       	movw	r26, r14
   12e1a:	ed 91       	ld	r30, X+
   12e1c:	fc 91       	ld	r31, X
   12e1e:	01 90       	ld	r0, Z+
   12e20:	f0 81       	ld	r31, Z
   12e22:	e0 2d       	mov	r30, r0
   12e24:	c7 01       	movw	r24, r14
   12e26:	6f e2       	ldi	r22, 0x2F	; 47
   12e28:	19 95       	eicall
   12e2a:	1f 5f       	subi	r17, 0xFF	; 255
   12e2c:	cb 2c       	mov	r12, r11
   12e2e:	dd 24       	eor	r13, r13
   12e30:	c6 01       	movw	r24, r12
   12e32:	83 70       	andi	r24, 0x03	; 3
   12e34:	90 70       	andi	r25, 0x00	; 0
   12e36:	00 97       	sbiw	r24, 0x00	; 0
   12e38:	69 f0       	breq	.+26     	; 0x12e54 <_ZN10SdBaseFile11lsPrintNextEP5Printhh+0x102>
   12e3a:	0a c0       	rjmp	.+20     	; 0x12e50 <_ZN10SdBaseFile11lsPrintNextEP5Printhh+0xfe>
   12e3c:	d7 01       	movw	r26, r14
   12e3e:	ed 91       	ld	r30, X+
   12e40:	fc 91       	ld	r31, X
   12e42:	01 90       	ld	r0, Z+
   12e44:	f0 81       	ld	r31, Z
   12e46:	e0 2d       	mov	r30, r0
   12e48:	c7 01       	movw	r24, r14
   12e4a:	60 e2       	ldi	r22, 0x20	; 32
   12e4c:	19 95       	eicall
   12e4e:	1f 5f       	subi	r17, 0xFF	; 255
   12e50:	1e 30       	cpi	r17, 0x0E	; 14
   12e52:	a0 f3       	brcs	.-24     	; 0x12e3c <_ZN10SdBaseFile11lsPrintNextEP5Printhh+0xea>
   12e54:	c0 fe       	sbrs	r12, 0
   12e56:	1c c0       	rjmp	.+56     	; 0x12e90 <_ZN10SdBaseFile11lsPrintNextEP5Printhh+0x13e>
   12e58:	d7 01       	movw	r26, r14
   12e5a:	ed 91       	ld	r30, X+
   12e5c:	fc 91       	ld	r31, X
   12e5e:	01 90       	ld	r0, Z+
   12e60:	f0 81       	ld	r31, Z
   12e62:	e0 2d       	mov	r30, r0
   12e64:	c7 01       	movw	r24, r14
   12e66:	60 e2       	ldi	r22, 0x20	; 32
   12e68:	19 95       	eicall
   12e6a:	69 8d       	ldd	r22, Y+25	; 0x19
   12e6c:	7a 8d       	ldd	r23, Y+26	; 0x1a
   12e6e:	c7 01       	movw	r24, r14
   12e70:	0e 94 c6 94 	call	0x1298c	; 0x1298c <_ZN10SdBaseFile12printFatDateEP5Printj>
   12e74:	d7 01       	movw	r26, r14
   12e76:	ed 91       	ld	r30, X+
   12e78:	fc 91       	ld	r31, X
   12e7a:	01 90       	ld	r0, Z+
   12e7c:	f0 81       	ld	r31, Z
   12e7e:	e0 2d       	mov	r30, r0
   12e80:	c7 01       	movw	r24, r14
   12e82:	60 e2       	ldi	r22, 0x20	; 32
   12e84:	19 95       	eicall
   12e86:	6f 89       	ldd	r22, Y+23	; 0x17
   12e88:	78 8d       	ldd	r23, Y+24	; 0x18
   12e8a:	c7 01       	movw	r24, r14
   12e8c:	0e 94 f9 94 	call	0x129f2	; 0x129f2 <_ZN10SdBaseFile12printFatTimeEP5Printj>
   12e90:	8c 85       	ldd	r24, Y+12	; 0x0c
   12e92:	88 71       	andi	r24, 0x18	; 24
   12e94:	80 31       	cpi	r24, 0x10	; 16
   12e96:	a1 f0       	breq	.+40     	; 0x12ec0 <_ZN10SdBaseFile11lsPrintNextEP5Printhh+0x16e>
   12e98:	c1 fe       	sbrs	r12, 1
   12e9a:	12 c0       	rjmp	.+36     	; 0x12ec0 <_ZN10SdBaseFile11lsPrintNextEP5Printhh+0x16e>
   12e9c:	d7 01       	movw	r26, r14
   12e9e:	ed 91       	ld	r30, X+
   12ea0:	fc 91       	ld	r31, X
   12ea2:	01 90       	ld	r0, Z+
   12ea4:	f0 81       	ld	r31, Z
   12ea6:	e0 2d       	mov	r30, r0
   12ea8:	c7 01       	movw	r24, r14
   12eaa:	60 e2       	ldi	r22, 0x20	; 32
   12eac:	19 95       	eicall
   12eae:	4d 8d       	ldd	r20, Y+29	; 0x1d
   12eb0:	5e 8d       	ldd	r21, Y+30	; 0x1e
   12eb2:	6f 8d       	ldd	r22, Y+31	; 0x1f
   12eb4:	78 a1       	ldd	r23, Y+32	; 0x20
   12eb6:	c7 01       	movw	r24, r14
   12eb8:	2a e0       	ldi	r18, 0x0A	; 10
   12eba:	30 e0       	ldi	r19, 0x00	; 0
   12ebc:	0e 94 2b a7 	call	0x14e56	; 0x14e56 <_ZN5Print5printEmi>
   12ec0:	c7 01       	movw	r24, r14
   12ec2:	0e 94 bb a6 	call	0x14d76	; 0x14d76 <_ZN5Print7printlnEv>
   12ec6:	8c 85       	ldd	r24, Y+12	; 0x0c
   12ec8:	88 71       	andi	r24, 0x18	; 24
   12eca:	21 f4       	brne	.+8      	; 0x12ed4 <_ZN10SdBaseFile11lsPrintNextEP5Printhh+0x182>
   12ecc:	81 e0       	ldi	r24, 0x01	; 1
   12ece:	03 c0       	rjmp	.+6      	; 0x12ed6 <_ZN10SdBaseFile11lsPrintNextEP5Printhh+0x184>
   12ed0:	80 e0       	ldi	r24, 0x00	; 0
   12ed2:	01 c0       	rjmp	.+2      	; 0x12ed6 <_ZN10SdBaseFile11lsPrintNextEP5Printhh+0x184>
   12ed4:	82 e0       	ldi	r24, 0x02	; 2
   12ed6:	a0 96       	adiw	r28, 0x20	; 32
   12ed8:	cd bf       	out	0x3d, r28	; 61
   12eda:	de bf       	out	0x3e, r29	; 62
   12edc:	df 91       	pop	r29
   12ede:	cf 91       	pop	r28
   12ee0:	1f 91       	pop	r17
   12ee2:	0f 91       	pop	r16
   12ee4:	ff 90       	pop	r15
   12ee6:	ef 90       	pop	r14
   12ee8:	df 90       	pop	r13
   12eea:	cf 90       	pop	r12
   12eec:	bf 90       	pop	r11
   12eee:	08 95       	ret

00012ef0 <_ZN10SdBaseFile12readDirCacheEv>:
   12ef0:	cf 92       	push	r12
   12ef2:	df 92       	push	r13
   12ef4:	ef 92       	push	r14
   12ef6:	ff 92       	push	r15
   12ef8:	cf 93       	push	r28
   12efa:	df 93       	push	r29
   12efc:	ec 01       	movw	r28, r24
   12efe:	8b 81       	ldd	r24, Y+3	; 0x03
   12f00:	82 30       	cpi	r24, 0x02	; 2
   12f02:	38 f1       	brcs	.+78     	; 0x12f52 <_ZN10SdBaseFile12readDirCacheEv+0x62>
   12f04:	cb 84       	ldd	r12, Y+11	; 0x0b
   12f06:	dc 84       	ldd	r13, Y+12	; 0x0c
   12f08:	ed 84       	ldd	r14, Y+13	; 0x0d
   12f0a:	fe 84       	ldd	r15, Y+14	; 0x0e
   12f0c:	ce 01       	movw	r24, r28
   12f0e:	0e 94 91 96 	call	0x12d22	; 0x12d22 <_ZN10SdBaseFile4readEv>
   12f12:	97 fd       	sbrc	r25, 7
   12f14:	1e c0       	rjmp	.+60     	; 0x12f52 <_ZN10SdBaseFile12readDirCacheEv+0x62>
   12f16:	8b 85       	ldd	r24, Y+11	; 0x0b
   12f18:	9c 85       	ldd	r25, Y+12	; 0x0c
   12f1a:	ad 85       	ldd	r26, Y+13	; 0x0d
   12f1c:	be 85       	ldd	r27, Y+14	; 0x0e
   12f1e:	4f 96       	adiw	r24, 0x1f	; 31
   12f20:	a1 1d       	adc	r26, r1
   12f22:	b1 1d       	adc	r27, r1
   12f24:	8b 87       	std	Y+11, r24	; 0x0b
   12f26:	9c 87       	std	Y+12, r25	; 0x0c
   12f28:	ad 87       	std	Y+13, r26	; 0x0d
   12f2a:	be 87       	std	Y+14, r27	; 0x0e
   12f2c:	d7 01       	movw	r26, r14
   12f2e:	c6 01       	movw	r24, r12
   12f30:	25 e0       	ldi	r18, 0x05	; 5
   12f32:	b6 95       	lsr	r27
   12f34:	a7 95       	ror	r26
   12f36:	97 95       	ror	r25
   12f38:	87 95       	ror	r24
   12f3a:	2a 95       	dec	r18
   12f3c:	d1 f7       	brne	.-12     	; 0x12f32 <_ZN10SdBaseFile12readDirCacheEv+0x42>
   12f3e:	8f 70       	andi	r24, 0x0F	; 15
   12f40:	90 e0       	ldi	r25, 0x00	; 0
   12f42:	35 e0       	ldi	r19, 0x05	; 5
   12f44:	88 0f       	add	r24, r24
   12f46:	99 1f       	adc	r25, r25
   12f48:	3a 95       	dec	r19
   12f4a:	e1 f7       	brne	.-8      	; 0x12f44 <_ZN10SdBaseFile12readDirCacheEv+0x54>
   12f4c:	81 55       	subi	r24, 0x51	; 81
   12f4e:	9a 4d       	sbci	r25, 0xDA	; 218
   12f50:	02 c0       	rjmp	.+4      	; 0x12f56 <_ZN10SdBaseFile12readDirCacheEv+0x66>
   12f52:	80 e0       	ldi	r24, 0x00	; 0
   12f54:	90 e0       	ldi	r25, 0x00	; 0
   12f56:	df 91       	pop	r29
   12f58:	cf 91       	pop	r28
   12f5a:	ff 90       	pop	r15
   12f5c:	ef 90       	pop	r14
   12f5e:	df 90       	pop	r13
   12f60:	cf 90       	pop	r12
   12f62:	08 95       	ret

00012f64 <_ZN10SdBaseFile7seekSetEm>:
   12f64:	8f 92       	push	r8
   12f66:	9f 92       	push	r9
   12f68:	af 92       	push	r10
   12f6a:	bf 92       	push	r11
   12f6c:	cf 92       	push	r12
   12f6e:	df 92       	push	r13
   12f70:	ef 92       	push	r14
   12f72:	ff 92       	push	r15
   12f74:	0f 93       	push	r16
   12f76:	1f 93       	push	r17
   12f78:	cf 93       	push	r28
   12f7a:	df 93       	push	r29
   12f7c:	ec 01       	movw	r28, r24
   12f7e:	4a 01       	movw	r8, r20
   12f80:	5b 01       	movw	r10, r22
   12f82:	2b 81       	ldd	r18, Y+3	; 0x03
   12f84:	22 23       	and	r18, r18
   12f86:	09 f4       	brne	.+2      	; 0x12f8a <_ZN10SdBaseFile7seekSetEm+0x26>
   12f88:	75 c0       	rjmp	.+234    	; 0x13074 <_ZN10SdBaseFile7seekSetEm+0x110>
   12f8a:	8b 89       	ldd	r24, Y+19	; 0x13
   12f8c:	9c 89       	ldd	r25, Y+20	; 0x14
   12f8e:	ad 89       	ldd	r26, Y+21	; 0x15
   12f90:	be 89       	ldd	r27, Y+22	; 0x16
   12f92:	84 17       	cp	r24, r20
   12f94:	95 07       	cpc	r25, r21
   12f96:	a6 07       	cpc	r26, r22
   12f98:	b7 07       	cpc	r27, r23
   12f9a:	08 f4       	brcc	.+2      	; 0x12f9e <_ZN10SdBaseFile7seekSetEm+0x3a>
   12f9c:	6b c0       	rjmp	.+214    	; 0x13074 <_ZN10SdBaseFile7seekSetEm+0x110>
   12f9e:	78 c0       	rjmp	.+240    	; 0x13090 <_ZN10SdBaseFile7seekSetEm+0x12c>
   12fa0:	81 14       	cp	r8, r1
   12fa2:	91 04       	cpc	r9, r1
   12fa4:	a1 04       	cpc	r10, r1
   12fa6:	b1 04       	cpc	r11, r1
   12fa8:	49 f4       	brne	.+18     	; 0x12fbc <_ZN10SdBaseFile7seekSetEm+0x58>
   12faa:	1f 82       	std	Y+7, r1	; 0x07
   12fac:	18 86       	std	Y+8, r1	; 0x08
   12fae:	19 86       	std	Y+9, r1	; 0x09
   12fb0:	1a 86       	std	Y+10, r1	; 0x0a
   12fb2:	1b 86       	std	Y+11, r1	; 0x0b
   12fb4:	1c 86       	std	Y+12, r1	; 0x0c
   12fb6:	1d 86       	std	Y+13, r1	; 0x0d
   12fb8:	1e 86       	std	Y+14, r1	; 0x0e
   12fba:	5a c0       	rjmp	.+180    	; 0x13070 <_ZN10SdBaseFile7seekSetEm+0x10c>
   12fbc:	4b 85       	ldd	r20, Y+11	; 0x0b
   12fbe:	5c 85       	ldd	r21, Y+12	; 0x0c
   12fc0:	6d 85       	ldd	r22, Y+13	; 0x0d
   12fc2:	7e 85       	ldd	r23, Y+14	; 0x0e
   12fc4:	ed 81       	ldd	r30, Y+5	; 0x05
   12fc6:	fe 81       	ldd	r31, Y+6	; 0x06
   12fc8:	25 85       	ldd	r18, Z+13	; 0x0d
   12fca:	30 e0       	ldi	r19, 0x00	; 0
   12fcc:	27 5f       	subi	r18, 0xF7	; 247
   12fce:	3f 4f       	sbci	r19, 0xFF	; 255
   12fd0:	db 01       	movw	r26, r22
   12fd2:	ca 01       	movw	r24, r20
   12fd4:	01 97       	sbiw	r24, 0x01	; 1
   12fd6:	a1 09       	sbc	r26, r1
   12fd8:	b1 09       	sbc	r27, r1
   12fda:	02 2e       	mov	r0, r18
   12fdc:	04 c0       	rjmp	.+8      	; 0x12fe6 <_ZN10SdBaseFile7seekSetEm+0x82>
   12fde:	b6 95       	lsr	r27
   12fe0:	a7 95       	ror	r26
   12fe2:	97 95       	ror	r25
   12fe4:	87 95       	ror	r24
   12fe6:	0a 94       	dec	r0
   12fe8:	d2 f7       	brpl	.-12     	; 0x12fde <_ZN10SdBaseFile7seekSetEm+0x7a>
   12fea:	75 01       	movw	r14, r10
   12fec:	64 01       	movw	r12, r8
   12fee:	08 94       	sec
   12ff0:	c1 08       	sbc	r12, r1
   12ff2:	d1 08       	sbc	r13, r1
   12ff4:	e1 08       	sbc	r14, r1
   12ff6:	f1 08       	sbc	r15, r1
   12ff8:	04 c0       	rjmp	.+8      	; 0x13002 <_ZN10SdBaseFile7seekSetEm+0x9e>
   12ffa:	f6 94       	lsr	r15
   12ffc:	e7 94       	ror	r14
   12ffe:	d7 94       	ror	r13
   13000:	c7 94       	ror	r12
   13002:	2a 95       	dec	r18
   13004:	d2 f7       	brpl	.-12     	; 0x12ffa <_ZN10SdBaseFile7seekSetEm+0x96>
   13006:	c8 16       	cp	r12, r24
   13008:	d9 06       	cpc	r13, r25
   1300a:	ea 06       	cpc	r14, r26
   1300c:	fb 06       	cpc	r15, r27
   1300e:	28 f0       	brcs	.+10     	; 0x1301a <_ZN10SdBaseFile7seekSetEm+0xb6>
   13010:	41 15       	cp	r20, r1
   13012:	51 05       	cpc	r21, r1
   13014:	61 05       	cpc	r22, r1
   13016:	71 05       	cpc	r23, r1
   13018:	49 f4       	brne	.+18     	; 0x1302c <_ZN10SdBaseFile7seekSetEm+0xc8>
   1301a:	8f 89       	ldd	r24, Y+23	; 0x17
   1301c:	98 8d       	ldd	r25, Y+24	; 0x18
   1301e:	a9 8d       	ldd	r26, Y+25	; 0x19
   13020:	ba 8d       	ldd	r27, Y+26	; 0x1a
   13022:	8f 83       	std	Y+7, r24	; 0x07
   13024:	98 87       	std	Y+8, r25	; 0x08
   13026:	a9 87       	std	Y+9, r26	; 0x09
   13028:	ba 87       	std	Y+10, r27	; 0x0a
   1302a:	16 c0       	rjmp	.+44     	; 0x13058 <_ZN10SdBaseFile7seekSetEm+0xf4>
   1302c:	c8 1a       	sub	r12, r24
   1302e:	d9 0a       	sbc	r13, r25
   13030:	ea 0a       	sbc	r14, r26
   13032:	fb 0a       	sbc	r15, r27
   13034:	11 c0       	rjmp	.+34     	; 0x13058 <_ZN10SdBaseFile7seekSetEm+0xf4>
   13036:	4f 81       	ldd	r20, Y+7	; 0x07
   13038:	58 85       	ldd	r21, Y+8	; 0x08
   1303a:	69 85       	ldd	r22, Y+9	; 0x09
   1303c:	7a 85       	ldd	r23, Y+10	; 0x0a
   1303e:	8d 81       	ldd	r24, Y+5	; 0x05
   13040:	9e 81       	ldd	r25, Y+6	; 0x06
   13042:	98 01       	movw	r18, r16
   13044:	0e 94 9b a2 	call	0x14536	; 0x14536 <_ZN8SdVolume6fatGetEmPm>
   13048:	08 94       	sec
   1304a:	c1 08       	sbc	r12, r1
   1304c:	d1 08       	sbc	r13, r1
   1304e:	e1 08       	sbc	r14, r1
   13050:	f1 08       	sbc	r15, r1
   13052:	88 23       	and	r24, r24
   13054:	21 f4       	brne	.+8      	; 0x1305e <_ZN10SdBaseFile7seekSetEm+0xfa>
   13056:	0e c0       	rjmp	.+28     	; 0x13074 <_ZN10SdBaseFile7seekSetEm+0x110>
   13058:	8e 01       	movw	r16, r28
   1305a:	09 5f       	subi	r16, 0xF9	; 249
   1305c:	1f 4f       	sbci	r17, 0xFF	; 255
   1305e:	c1 14       	cp	r12, r1
   13060:	d1 04       	cpc	r13, r1
   13062:	e1 04       	cpc	r14, r1
   13064:	f1 04       	cpc	r15, r1
   13066:	39 f7       	brne	.-50     	; 0x13036 <_ZN10SdBaseFile7seekSetEm+0xd2>
   13068:	8b 86       	std	Y+11, r8	; 0x0b
   1306a:	9c 86       	std	Y+12, r9	; 0x0c
   1306c:	ad 86       	std	Y+13, r10	; 0x0d
   1306e:	be 86       	std	Y+14, r11	; 0x0e
   13070:	81 e0       	ldi	r24, 0x01	; 1
   13072:	01 c0       	rjmp	.+2      	; 0x13076 <_ZN10SdBaseFile7seekSetEm+0x112>
   13074:	80 e0       	ldi	r24, 0x00	; 0
   13076:	df 91       	pop	r29
   13078:	cf 91       	pop	r28
   1307a:	1f 91       	pop	r17
   1307c:	0f 91       	pop	r16
   1307e:	ff 90       	pop	r15
   13080:	ef 90       	pop	r14
   13082:	df 90       	pop	r13
   13084:	cf 90       	pop	r12
   13086:	bf 90       	pop	r11
   13088:	af 90       	pop	r10
   1308a:	9f 90       	pop	r9
   1308c:	8f 90       	pop	r8
   1308e:	08 95       	ret
   13090:	22 30       	cpi	r18, 0x02	; 2
   13092:	09 f0       	breq	.+2      	; 0x13096 <_ZN10SdBaseFile7seekSetEm+0x132>
   13094:	85 cf       	rjmp	.-246    	; 0x12fa0 <_ZN10SdBaseFile7seekSetEm+0x3c>
   13096:	e8 cf       	rjmp	.-48     	; 0x13068 <_ZN10SdBaseFile7seekSetEm+0x104>

00013098 <_ZN10SdBaseFile6rewindEv>:
   13098:	40 e0       	ldi	r20, 0x00	; 0
   1309a:	50 e0       	ldi	r21, 0x00	; 0
   1309c:	ba 01       	movw	r22, r20
   1309e:	0e 94 b2 97 	call	0x12f64	; 0x12f64 <_ZN10SdBaseFile7seekSetEm>
   130a2:	08 95       	ret

000130a4 <_ZN10SdBaseFile10setDirSizeEv>:
   130a4:	ef 92       	push	r14
   130a6:	ff 92       	push	r15
   130a8:	0f 93       	push	r16
   130aa:	1f 93       	push	r17
   130ac:	cf 93       	push	r28
   130ae:	df 93       	push	r29
   130b0:	00 d0       	rcall	.+0      	; 0x130b2 <_ZN10SdBaseFile10setDirSizeEv+0xe>
   130b2:	0f 92       	push	r0
   130b4:	cd b7       	in	r28, 0x3d	; 61
   130b6:	de b7       	in	r29, 0x3e	; 62
   130b8:	7c 01       	movw	r14, r24
   130ba:	fc 01       	movw	r30, r24
   130bc:	87 89       	ldd	r24, Z+23	; 0x17
   130be:	90 8d       	ldd	r25, Z+24	; 0x18
   130c0:	a1 8d       	ldd	r26, Z+25	; 0x19
   130c2:	b2 8d       	ldd	r27, Z+26	; 0x1a
   130c4:	89 83       	std	Y+1, r24	; 0x01
   130c6:	9a 83       	std	Y+2, r25	; 0x02
   130c8:	ab 83       	std	Y+3, r26	; 0x03
   130ca:	bc 83       	std	Y+4, r27	; 0x04
   130cc:	00 e0       	ldi	r16, 0x00	; 0
   130ce:	10 e0       	ldi	r17, 0x00	; 0
   130d0:	49 81       	ldd	r20, Y+1	; 0x01
   130d2:	5a 81       	ldd	r21, Y+2	; 0x02
   130d4:	6b 81       	ldd	r22, Y+3	; 0x03
   130d6:	7c 81       	ldd	r23, Y+4	; 0x04
   130d8:	d7 01       	movw	r26, r14
   130da:	15 96       	adiw	r26, 0x05	; 5
   130dc:	8d 91       	ld	r24, X+
   130de:	9c 91       	ld	r25, X
   130e0:	16 97       	sbiw	r26, 0x06	; 6
   130e2:	9e 01       	movw	r18, r28
   130e4:	2f 5f       	subi	r18, 0xFF	; 255
   130e6:	3f 4f       	sbci	r19, 0xFF	; 255
   130e8:	0e 94 9b a2 	call	0x14536	; 0x14536 <_ZN8SdVolume6fatGetEmPm>
   130ec:	88 23       	and	r24, r24
   130ee:	b1 f1       	breq	.+108    	; 0x1315c <_ZN10SdBaseFile10setDirSizeEv+0xb8>
   130f0:	d7 01       	movw	r26, r14
   130f2:	15 96       	adiw	r26, 0x05	; 5
   130f4:	ed 91       	ld	r30, X+
   130f6:	fc 91       	ld	r31, X
   130f8:	16 97       	sbiw	r26, 0x06	; 6
   130fa:	84 81       	ldd	r24, Z+4	; 0x04
   130fc:	08 0f       	add	r16, r24
   130fe:	11 1d       	adc	r17, r1
   13100:	b0 e1       	ldi	r27, 0x10	; 16
   13102:	00 30       	cpi	r16, 0x00	; 0
   13104:	1b 07       	cpc	r17, r27
   13106:	50 f5       	brcc	.+84     	; 0x1315c <_ZN10SdBaseFile10setDirSizeEv+0xb8>
   13108:	89 81       	ldd	r24, Y+1	; 0x01
   1310a:	9a 81       	ldd	r25, Y+2	; 0x02
   1310c:	ab 81       	ldd	r26, Y+3	; 0x03
   1310e:	bc 81       	ldd	r27, Y+4	; 0x04
   13110:	27 89       	ldd	r18, Z+23	; 0x17
   13112:	20 31       	cpi	r18, 0x10	; 16
   13114:	49 f4       	brne	.+18     	; 0x13128 <_ZN10SdBaseFile10setDirSizeEv+0x84>
   13116:	88 3f       	cpi	r24, 0xF8	; 248
   13118:	ef ef       	ldi	r30, 0xFF	; 255
   1311a:	9e 07       	cpc	r25, r30
   1311c:	e0 e0       	ldi	r30, 0x00	; 0
   1311e:	ae 07       	cpc	r26, r30
   13120:	e0 e0       	ldi	r30, 0x00	; 0
   13122:	be 07       	cpc	r27, r30
   13124:	48 f4       	brcc	.+18     	; 0x13138 <_ZN10SdBaseFile10setDirSizeEv+0x94>
   13126:	d4 cf       	rjmp	.-88     	; 0x130d0 <_ZN10SdBaseFile10setDirSizeEv+0x2c>
   13128:	88 3f       	cpi	r24, 0xF8	; 248
   1312a:	ff ef       	ldi	r31, 0xFF	; 255
   1312c:	9f 07       	cpc	r25, r31
   1312e:	ff ef       	ldi	r31, 0xFF	; 255
   13130:	af 07       	cpc	r26, r31
   13132:	ff e0       	ldi	r31, 0x0F	; 15
   13134:	bf 07       	cpc	r27, r31
   13136:	60 f2       	brcs	.-104    	; 0x130d0 <_ZN10SdBaseFile10setDirSizeEv+0x2c>
   13138:	20 e0       	ldi	r18, 0x00	; 0
   1313a:	30 e0       	ldi	r19, 0x00	; 0
   1313c:	49 e0       	ldi	r20, 0x09	; 9
   1313e:	00 0f       	add	r16, r16
   13140:	11 1f       	adc	r17, r17
   13142:	22 1f       	adc	r18, r18
   13144:	33 1f       	adc	r19, r19
   13146:	4a 95       	dec	r20
   13148:	d1 f7       	brne	.-12     	; 0x1313e <_ZN10SdBaseFile10setDirSizeEv+0x9a>
   1314a:	d7 01       	movw	r26, r14
   1314c:	53 96       	adiw	r26, 0x13	; 19
   1314e:	0d 93       	st	X+, r16
   13150:	1d 93       	st	X+, r17
   13152:	2d 93       	st	X+, r18
   13154:	3c 93       	st	X, r19
   13156:	56 97       	sbiw	r26, 0x16	; 22
   13158:	81 e0       	ldi	r24, 0x01	; 1
   1315a:	01 c0       	rjmp	.+2      	; 0x1315e <_ZN10SdBaseFile10setDirSizeEv+0xba>
   1315c:	80 e0       	ldi	r24, 0x00	; 0
   1315e:	24 96       	adiw	r28, 0x04	; 4
   13160:	cd bf       	out	0x3d, r28	; 61
   13162:	de bf       	out	0x3e, r29	; 62
   13164:	df 91       	pop	r29
   13166:	cf 91       	pop	r28
   13168:	1f 91       	pop	r17
   1316a:	0f 91       	pop	r16
   1316c:	ff 90       	pop	r15
   1316e:	ef 90       	pop	r14
   13170:	08 95       	ret

00013172 <_ZN10SdBaseFile8openRootEP8SdVolume>:
   13172:	cf 93       	push	r28
   13174:	df 93       	push	r29
   13176:	ec 01       	movw	r28, r24
   13178:	fb 01       	movw	r30, r22
   1317a:	8b 81       	ldd	r24, Y+3	; 0x03
   1317c:	88 23       	and	r24, r24
   1317e:	d1 f5       	brne	.+116    	; 0x131f4 <_ZN10SdBaseFile8openRootEP8SdVolume+0x82>
   13180:	6d 83       	std	Y+5, r22	; 0x05
   13182:	7e 83       	std	Y+6, r23	; 0x06
   13184:	87 89       	ldd	r24, Z+23	; 0x17
   13186:	80 31       	cpi	r24, 0x10	; 16
   13188:	c9 f5       	brne	.+114    	; 0x131fc <_ZN10SdBaseFile8openRootEP8SdVolume+0x8a>
   1318a:	82 e0       	ldi	r24, 0x02	; 2
   1318c:	8b 83       	std	Y+3, r24	; 0x03
   1318e:	1f 8a       	std	Y+23, r1	; 0x17
   13190:	18 8e       	std	Y+24, r1	; 0x18
   13192:	19 8e       	std	Y+25, r1	; 0x19
   13194:	1a 8e       	std	Y+26, r1	; 0x1a
   13196:	80 8d       	ldd	r24, Z+24	; 0x18
   13198:	91 8d       	ldd	r25, Z+25	; 0x19
   1319a:	a0 e0       	ldi	r26, 0x00	; 0
   1319c:	b0 e0       	ldi	r27, 0x00	; 0
   1319e:	55 e0       	ldi	r21, 0x05	; 5
   131a0:	88 0f       	add	r24, r24
   131a2:	99 1f       	adc	r25, r25
   131a4:	aa 1f       	adc	r26, r26
   131a6:	bb 1f       	adc	r27, r27
   131a8:	5a 95       	dec	r21
   131aa:	d1 f7       	brne	.-12     	; 0x131a0 <_ZN10SdBaseFile8openRootEP8SdVolume+0x2e>
   131ac:	8b 8b       	std	Y+19, r24	; 0x13
   131ae:	9c 8b       	std	Y+20, r25	; 0x14
   131b0:	ad 8b       	std	Y+21, r26	; 0x15
   131b2:	be 8b       	std	Y+22, r27	; 0x16
   131b4:	0f c0       	rjmp	.+30     	; 0x131d4 <_ZN10SdBaseFile8openRootEP8SdVolume+0x62>
   131b6:	83 e0       	ldi	r24, 0x03	; 3
   131b8:	8b 83       	std	Y+3, r24	; 0x03
   131ba:	82 8d       	ldd	r24, Z+26	; 0x1a
   131bc:	93 8d       	ldd	r25, Z+27	; 0x1b
   131be:	a4 8d       	ldd	r26, Z+28	; 0x1c
   131c0:	b5 8d       	ldd	r27, Z+29	; 0x1d
   131c2:	8f 8b       	std	Y+23, r24	; 0x17
   131c4:	98 8f       	std	Y+24, r25	; 0x18
   131c6:	a9 8f       	std	Y+25, r26	; 0x19
   131c8:	ba 8f       	std	Y+26, r27	; 0x1a
   131ca:	ce 01       	movw	r24, r28
   131cc:	0e 94 52 98 	call	0x130a4	; 0x130a4 <_ZN10SdBaseFile10setDirSizeEv>
   131d0:	88 23       	and	r24, r24
   131d2:	81 f0       	breq	.+32     	; 0x131f4 <_ZN10SdBaseFile8openRootEP8SdVolume+0x82>
   131d4:	81 e0       	ldi	r24, 0x01	; 1
   131d6:	89 83       	std	Y+1, r24	; 0x01
   131d8:	1f 82       	std	Y+7, r1	; 0x07
   131da:	18 86       	std	Y+8, r1	; 0x08
   131dc:	19 86       	std	Y+9, r1	; 0x09
   131de:	1a 86       	std	Y+10, r1	; 0x0a
   131e0:	1b 86       	std	Y+11, r1	; 0x0b
   131e2:	1c 86       	std	Y+12, r1	; 0x0c
   131e4:	1d 86       	std	Y+13, r1	; 0x0d
   131e6:	1e 86       	std	Y+14, r1	; 0x0e
   131e8:	1f 86       	std	Y+15, r1	; 0x0f
   131ea:	18 8a       	std	Y+16, r1	; 0x10
   131ec:	19 8a       	std	Y+17, r1	; 0x11
   131ee:	1a 8a       	std	Y+18, r1	; 0x12
   131f0:	1c 82       	std	Y+4, r1	; 0x04
   131f2:	01 c0       	rjmp	.+2      	; 0x131f6 <_ZN10SdBaseFile8openRootEP8SdVolume+0x84>
   131f4:	80 e0       	ldi	r24, 0x00	; 0
   131f6:	df 91       	pop	r29
   131f8:	cf 91       	pop	r28
   131fa:	08 95       	ret
   131fc:	80 32       	cpi	r24, 0x20	; 32
   131fe:	d1 f7       	brne	.-12     	; 0x131f4 <_ZN10SdBaseFile8openRootEP8SdVolume+0x82>
   13200:	da cf       	rjmp	.-76     	; 0x131b6 <_ZN10SdBaseFile8openRootEP8SdVolume+0x44>

00013202 <_ZN10SdBaseFile4syncEv>:
   13202:	0f 93       	push	r16
   13204:	1f 93       	push	r17
   13206:	cf 93       	push	r28
   13208:	df 93       	push	r29
   1320a:	8c 01       	movw	r16, r24
   1320c:	fc 01       	movw	r30, r24
   1320e:	83 81       	ldd	r24, Z+3	; 0x03
   13210:	88 23       	and	r24, r24
   13212:	c9 f1       	breq	.+114    	; 0x13286 <_ZN10SdBaseFile4syncEv+0x84>
   13214:	81 81       	ldd	r24, Z+1	; 0x01
   13216:	87 ff       	sbrs	r24, 7
   13218:	33 c0       	rjmp	.+102    	; 0x13280 <_ZN10SdBaseFile4syncEv+0x7e>
   1321a:	c8 01       	movw	r24, r16
   1321c:	61 e0       	ldi	r22, 0x01	; 1
   1321e:	0e 94 2f 94 	call	0x1285e	; 0x1285e <_ZN10SdBaseFile13cacheDirEntryEh>
   13222:	ec 01       	movw	r28, r24
   13224:	00 97       	sbiw	r24, 0x00	; 0
   13226:	79 f1       	breq	.+94     	; 0x13286 <_ZN10SdBaseFile4syncEv+0x84>
   13228:	88 81       	ld	r24, Y
   1322a:	85 3e       	cpi	r24, 0xE5	; 229
   1322c:	61 f1       	breq	.+88     	; 0x13286 <_ZN10SdBaseFile4syncEv+0x84>
   1322e:	f8 01       	movw	r30, r16
   13230:	83 81       	ldd	r24, Z+3	; 0x03
   13232:	82 30       	cpi	r24, 0x02	; 2
   13234:	40 f4       	brcc	.+16     	; 0x13246 <_ZN10SdBaseFile4syncEv+0x44>
   13236:	83 89       	ldd	r24, Z+19	; 0x13
   13238:	94 89       	ldd	r25, Z+20	; 0x14
   1323a:	a5 89       	ldd	r26, Z+21	; 0x15
   1323c:	b6 89       	ldd	r27, Z+22	; 0x16
   1323e:	8c 8f       	std	Y+28, r24	; 0x1c
   13240:	9d 8f       	std	Y+29, r25	; 0x1d
   13242:	ae 8f       	std	Y+30, r26	; 0x1e
   13244:	bf 8f       	std	Y+31, r27	; 0x1f
   13246:	f8 01       	movw	r30, r16
   13248:	87 89       	ldd	r24, Z+23	; 0x17
   1324a:	90 8d       	ldd	r25, Z+24	; 0x18
   1324c:	a1 8d       	ldd	r26, Z+25	; 0x19
   1324e:	b2 8d       	ldd	r27, Z+26	; 0x1a
   13250:	8a 8f       	std	Y+26, r24	; 0x1a
   13252:	9b 8f       	std	Y+27, r25	; 0x1b
   13254:	ac 8b       	std	Y+20, r26	; 0x14
   13256:	bd 8b       	std	Y+21, r27	; 0x15
   13258:	e0 91 a0 25 	lds	r30, 0x25A0
   1325c:	f0 91 a1 25 	lds	r31, 0x25A1
   13260:	30 97       	sbiw	r30, 0x00	; 0
   13262:	51 f0       	breq	.+20     	; 0x13278 <_ZN10SdBaseFile4syncEv+0x76>
   13264:	be 01       	movw	r22, r28
   13266:	6a 5e       	subi	r22, 0xEA	; 234
   13268:	7f 4f       	sbci	r23, 0xFF	; 255
   1326a:	ce 01       	movw	r24, r28
   1326c:	48 96       	adiw	r24, 0x18	; 24
   1326e:	19 95       	eicall
   13270:	88 8d       	ldd	r24, Y+24	; 0x18
   13272:	99 8d       	ldd	r25, Y+25	; 0x19
   13274:	8a 8b       	std	Y+18, r24	; 0x12
   13276:	9b 8b       	std	Y+19, r25	; 0x13
   13278:	f8 01       	movw	r30, r16
   1327a:	81 81       	ldd	r24, Z+1	; 0x01
   1327c:	8f 77       	andi	r24, 0x7F	; 127
   1327e:	81 83       	std	Z+1, r24	; 0x01
   13280:	0e 94 da a1 	call	0x143b4	; 0x143b4 <_ZN8SdVolume9cacheSyncEv>
   13284:	04 c0       	rjmp	.+8      	; 0x1328e <_ZN10SdBaseFile4syncEv+0x8c>
   13286:	81 e0       	ldi	r24, 0x01	; 1
   13288:	f8 01       	movw	r30, r16
   1328a:	80 83       	st	Z, r24
   1328c:	80 e0       	ldi	r24, 0x00	; 0
   1328e:	df 91       	pop	r29
   13290:	cf 91       	pop	r28
   13292:	1f 91       	pop	r17
   13294:	0f 91       	pop	r16
   13296:	08 95       	ret

00013298 <_ZN10SdBaseFile5closeEv>:
   13298:	cf 93       	push	r28
   1329a:	df 93       	push	r29
   1329c:	ec 01       	movw	r28, r24
   1329e:	0e 94 01 99 	call	0x13202	; 0x13202 <_ZN10SdBaseFile4syncEv>
   132a2:	1b 82       	std	Y+3, r1	; 0x03
   132a4:	df 91       	pop	r29
   132a6:	cf 91       	pop	r28
   132a8:	08 95       	ret

000132aa <_ZN10SdBaseFile8truncateEm>:
   132aa:	4f 92       	push	r4
   132ac:	5f 92       	push	r5
   132ae:	6f 92       	push	r6
   132b0:	7f 92       	push	r7
   132b2:	8f 92       	push	r8
   132b4:	9f 92       	push	r9
   132b6:	af 92       	push	r10
   132b8:	bf 92       	push	r11
   132ba:	ef 92       	push	r14
   132bc:	ff 92       	push	r15
   132be:	0f 93       	push	r16
   132c0:	1f 93       	push	r17
   132c2:	cf 93       	push	r28
   132c4:	df 93       	push	r29
   132c6:	00 d0       	rcall	.+0      	; 0x132c8 <_ZN10SdBaseFile8truncateEm+0x1e>
   132c8:	0f 92       	push	r0
   132ca:	cd b7       	in	r28, 0x3d	; 61
   132cc:	de b7       	in	r29, 0x3e	; 62
   132ce:	7c 01       	movw	r14, r24
   132d0:	4a 01       	movw	r8, r20
   132d2:	5b 01       	movw	r10, r22
   132d4:	fc 01       	movw	r30, r24
   132d6:	83 81       	ldd	r24, Z+3	; 0x03
   132d8:	81 30       	cpi	r24, 0x01	; 1
   132da:	09 f0       	breq	.+2      	; 0x132de <_ZN10SdBaseFile8truncateEm+0x34>
   132dc:	85 c0       	rjmp	.+266    	; 0x133e8 <_ZN10SdBaseFile8truncateEm+0x13e>
   132de:	81 81       	ldd	r24, Z+1	; 0x01
   132e0:	81 ff       	sbrs	r24, 1
   132e2:	82 c0       	rjmp	.+260    	; 0x133e8 <_ZN10SdBaseFile8truncateEm+0x13e>
   132e4:	94 c0       	rjmp	.+296    	; 0x1340e <_ZN10SdBaseFile8truncateEm+0x164>
   132e6:	00 97       	sbiw	r24, 0x00	; 0
   132e8:	a1 05       	cpc	r26, r1
   132ea:	b1 05       	cpc	r27, r1
   132ec:	09 f4       	brne	.+2      	; 0x132f0 <_ZN10SdBaseFile8truncateEm+0x46>
   132ee:	7a c0       	rjmp	.+244    	; 0x133e4 <_ZN10SdBaseFile8truncateEm+0x13a>
   132f0:	f7 01       	movw	r30, r14
   132f2:	43 84       	ldd	r4, Z+11	; 0x0b
   132f4:	54 84       	ldd	r5, Z+12	; 0x0c
   132f6:	65 84       	ldd	r6, Z+13	; 0x0d
   132f8:	76 84       	ldd	r7, Z+14	; 0x0e
   132fa:	c7 01       	movw	r24, r14
   132fc:	b5 01       	movw	r22, r10
   132fe:	a4 01       	movw	r20, r8
   13300:	0e 94 b2 97 	call	0x12f64	; 0x12f64 <_ZN10SdBaseFile7seekSetEm>
   13304:	88 23       	and	r24, r24
   13306:	09 f4       	brne	.+2      	; 0x1330a <_ZN10SdBaseFile8truncateEm+0x60>
   13308:	6f c0       	rjmp	.+222    	; 0x133e8 <_ZN10SdBaseFile8truncateEm+0x13e>
   1330a:	f7 01       	movw	r30, r14
   1330c:	85 81       	ldd	r24, Z+5	; 0x05
   1330e:	96 81       	ldd	r25, Z+6	; 0x06
   13310:	81 14       	cp	r8, r1
   13312:	91 04       	cpc	r9, r1
   13314:	a1 04       	cpc	r10, r1
   13316:	b1 04       	cpc	r11, r1
   13318:	79 f4       	brne	.+30     	; 0x13338 <_ZN10SdBaseFile8truncateEm+0x8e>
   1331a:	47 89       	ldd	r20, Z+23	; 0x17
   1331c:	50 8d       	ldd	r21, Z+24	; 0x18
   1331e:	61 8d       	ldd	r22, Z+25	; 0x19
   13320:	72 8d       	ldd	r23, Z+26	; 0x1a
   13322:	0e 94 9f a4 	call	0x1493e	; 0x1493e <_ZN8SdVolume9freeChainEm>
   13326:	88 23       	and	r24, r24
   13328:	09 f4       	brne	.+2      	; 0x1332c <_ZN10SdBaseFile8truncateEm+0x82>
   1332a:	5e c0       	rjmp	.+188    	; 0x133e8 <_ZN10SdBaseFile8truncateEm+0x13e>
   1332c:	f7 01       	movw	r30, r14
   1332e:	17 8a       	std	Z+23, r1	; 0x17
   13330:	10 8e       	std	Z+24, r1	; 0x18
   13332:	11 8e       	std	Z+25, r1	; 0x19
   13334:	12 8e       	std	Z+26, r1	; 0x1a
   13336:	3c c0       	rjmp	.+120    	; 0x133b0 <_ZN10SdBaseFile8truncateEm+0x106>
   13338:	f7 01       	movw	r30, r14
   1333a:	47 81       	ldd	r20, Z+7	; 0x07
   1333c:	50 85       	ldd	r21, Z+8	; 0x08
   1333e:	61 85       	ldd	r22, Z+9	; 0x09
   13340:	72 85       	ldd	r23, Z+10	; 0x0a
   13342:	9e 01       	movw	r18, r28
   13344:	2f 5f       	subi	r18, 0xFF	; 255
   13346:	3f 4f       	sbci	r19, 0xFF	; 255
   13348:	0e 94 9b a2 	call	0x14536	; 0x14536 <_ZN8SdVolume6fatGetEmPm>
   1334c:	88 23       	and	r24, r24
   1334e:	09 f4       	brne	.+2      	; 0x13352 <_ZN10SdBaseFile8truncateEm+0xa8>
   13350:	4b c0       	rjmp	.+150    	; 0x133e8 <_ZN10SdBaseFile8truncateEm+0x13e>
   13352:	f7 01       	movw	r30, r14
   13354:	85 81       	ldd	r24, Z+5	; 0x05
   13356:	96 81       	ldd	r25, Z+6	; 0x06
   13358:	49 81       	ldd	r20, Y+1	; 0x01
   1335a:	5a 81       	ldd	r21, Y+2	; 0x02
   1335c:	6b 81       	ldd	r22, Y+3	; 0x03
   1335e:	7c 81       	ldd	r23, Y+4	; 0x04
   13360:	fc 01       	movw	r30, r24
   13362:	27 89       	ldd	r18, Z+23	; 0x17
   13364:	20 31       	cpi	r18, 0x10	; 16
   13366:	49 f4       	brne	.+18     	; 0x1337a <_ZN10SdBaseFile8truncateEm+0xd0>
   13368:	48 3f       	cpi	r20, 0xF8	; 248
   1336a:	ff ef       	ldi	r31, 0xFF	; 255
   1336c:	5f 07       	cpc	r21, r31
   1336e:	f0 e0       	ldi	r31, 0x00	; 0
   13370:	6f 07       	cpc	r22, r31
   13372:	f0 e0       	ldi	r31, 0x00	; 0
   13374:	7f 07       	cpc	r23, r31
   13376:	e0 f4       	brcc	.+56     	; 0x133b0 <_ZN10SdBaseFile8truncateEm+0x106>
   13378:	08 c0       	rjmp	.+16     	; 0x1338a <_ZN10SdBaseFile8truncateEm+0xe0>
   1337a:	48 3f       	cpi	r20, 0xF8	; 248
   1337c:	2f ef       	ldi	r18, 0xFF	; 255
   1337e:	52 07       	cpc	r21, r18
   13380:	2f ef       	ldi	r18, 0xFF	; 255
   13382:	62 07       	cpc	r22, r18
   13384:	2f e0       	ldi	r18, 0x0F	; 15
   13386:	72 07       	cpc	r23, r18
   13388:	98 f4       	brcc	.+38     	; 0x133b0 <_ZN10SdBaseFile8truncateEm+0x106>
   1338a:	0e 94 9f a4 	call	0x1493e	; 0x1493e <_ZN8SdVolume9freeChainEm>
   1338e:	88 23       	and	r24, r24
   13390:	59 f1       	breq	.+86     	; 0x133e8 <_ZN10SdBaseFile8truncateEm+0x13e>
   13392:	f7 01       	movw	r30, r14
   13394:	47 81       	ldd	r20, Z+7	; 0x07
   13396:	50 85       	ldd	r21, Z+8	; 0x08
   13398:	61 85       	ldd	r22, Z+9	; 0x09
   1339a:	72 85       	ldd	r23, Z+10	; 0x0a
   1339c:	85 81       	ldd	r24, Z+5	; 0x05
   1339e:	96 81       	ldd	r25, Z+6	; 0x06
   133a0:	0f ef       	ldi	r16, 0xFF	; 255
   133a2:	1f ef       	ldi	r17, 0xFF	; 255
   133a4:	2f ef       	ldi	r18, 0xFF	; 255
   133a6:	3f e0       	ldi	r19, 0x0F	; 15
   133a8:	0e 94 17 a3 	call	0x1462e	; 0x1462e <_ZN8SdVolume6fatPutEmm>
   133ac:	88 23       	and	r24, r24
   133ae:	e1 f0       	breq	.+56     	; 0x133e8 <_ZN10SdBaseFile8truncateEm+0x13e>
   133b0:	f7 01       	movw	r30, r14
   133b2:	83 8a       	std	Z+19, r8	; 0x13
   133b4:	94 8a       	std	Z+20, r9	; 0x14
   133b6:	a5 8a       	std	Z+21, r10	; 0x15
   133b8:	b6 8a       	std	Z+22, r11	; 0x16
   133ba:	81 81       	ldd	r24, Z+1	; 0x01
   133bc:	80 68       	ori	r24, 0x80	; 128
   133be:	81 83       	std	Z+1, r24	; 0x01
   133c0:	c7 01       	movw	r24, r14
   133c2:	0e 94 01 99 	call	0x13202	; 0x13202 <_ZN10SdBaseFile4syncEv>
   133c6:	88 23       	and	r24, r24
   133c8:	79 f0       	breq	.+30     	; 0x133e8 <_ZN10SdBaseFile8truncateEm+0x13e>
   133ca:	b5 01       	movw	r22, r10
   133cc:	a4 01       	movw	r20, r8
   133ce:	48 14       	cp	r4, r8
   133d0:	59 04       	cpc	r5, r9
   133d2:	6a 04       	cpc	r6, r10
   133d4:	7b 04       	cpc	r7, r11
   133d6:	10 f4       	brcc	.+4      	; 0x133dc <_ZN10SdBaseFile8truncateEm+0x132>
   133d8:	b3 01       	movw	r22, r6
   133da:	a2 01       	movw	r20, r4
   133dc:	c7 01       	movw	r24, r14
   133de:	0e 94 b2 97 	call	0x12f64	; 0x12f64 <_ZN10SdBaseFile7seekSetEm>
   133e2:	03 c0       	rjmp	.+6      	; 0x133ea <_ZN10SdBaseFile8truncateEm+0x140>
   133e4:	81 e0       	ldi	r24, 0x01	; 1
   133e6:	01 c0       	rjmp	.+2      	; 0x133ea <_ZN10SdBaseFile8truncateEm+0x140>
   133e8:	80 e0       	ldi	r24, 0x00	; 0
   133ea:	24 96       	adiw	r28, 0x04	; 4
   133ec:	cd bf       	out	0x3d, r28	; 61
   133ee:	de bf       	out	0x3e, r29	; 62
   133f0:	df 91       	pop	r29
   133f2:	cf 91       	pop	r28
   133f4:	1f 91       	pop	r17
   133f6:	0f 91       	pop	r16
   133f8:	ff 90       	pop	r15
   133fa:	ef 90       	pop	r14
   133fc:	bf 90       	pop	r11
   133fe:	af 90       	pop	r10
   13400:	9f 90       	pop	r9
   13402:	8f 90       	pop	r8
   13404:	7f 90       	pop	r7
   13406:	6f 90       	pop	r6
   13408:	5f 90       	pop	r5
   1340a:	4f 90       	pop	r4
   1340c:	08 95       	ret
   1340e:	f7 01       	movw	r30, r14
   13410:	83 89       	ldd	r24, Z+19	; 0x13
   13412:	94 89       	ldd	r25, Z+20	; 0x14
   13414:	a5 89       	ldd	r26, Z+21	; 0x15
   13416:	b6 89       	ldd	r27, Z+22	; 0x16
   13418:	84 17       	cp	r24, r20
   1341a:	95 07       	cpc	r25, r21
   1341c:	a6 07       	cpc	r26, r22
   1341e:	b7 07       	cpc	r27, r23
   13420:	08 f0       	brcs	.+2      	; 0x13424 <_ZN10SdBaseFile8truncateEm+0x17a>
   13422:	61 cf       	rjmp	.-318    	; 0x132e6 <_ZN10SdBaseFile8truncateEm+0x3c>
   13424:	e1 cf       	rjmp	.-62     	; 0x133e8 <_ZN10SdBaseFile8truncateEm+0x13e>

00013426 <_ZN10SdBaseFile6removeEv>:
   13426:	cf 93       	push	r28
   13428:	df 93       	push	r29
   1342a:	ec 01       	movw	r28, r24
   1342c:	40 e0       	ldi	r20, 0x00	; 0
   1342e:	50 e0       	ldi	r21, 0x00	; 0
   13430:	ba 01       	movw	r22, r20
   13432:	0e 94 55 99 	call	0x132aa	; 0x132aa <_ZN10SdBaseFile8truncateEm>
   13436:	88 23       	and	r24, r24
   13438:	69 f0       	breq	.+26     	; 0x13454 <_ZN10SdBaseFile6removeEv+0x2e>
   1343a:	ce 01       	movw	r24, r28
   1343c:	61 e0       	ldi	r22, 0x01	; 1
   1343e:	0e 94 2f 94 	call	0x1285e	; 0x1285e <_ZN10SdBaseFile13cacheDirEntryEh>
   13442:	00 97       	sbiw	r24, 0x00	; 0
   13444:	39 f0       	breq	.+14     	; 0x13454 <_ZN10SdBaseFile6removeEv+0x2e>
   13446:	25 ee       	ldi	r18, 0xE5	; 229
   13448:	fc 01       	movw	r30, r24
   1344a:	20 83       	st	Z, r18
   1344c:	1b 82       	std	Y+3, r1	; 0x03
   1344e:	0e 94 da a1 	call	0x143b4	; 0x143b4 <_ZN8SdVolume9cacheSyncEv>
   13452:	01 c0       	rjmp	.+2      	; 0x13456 <_ZN10SdBaseFile6removeEv+0x30>
   13454:	80 e0       	ldi	r24, 0x00	; 0
   13456:	df 91       	pop	r29
   13458:	cf 91       	pop	r28
   1345a:	08 95       	ret

0001345c <_ZN10SdBaseFile5rmdirEv>:
   1345c:	cf 93       	push	r28
   1345e:	df 93       	push	r29
   13460:	ec 01       	movw	r28, r24
   13462:	8b 81       	ldd	r24, Y+3	; 0x03
   13464:	84 30       	cpi	r24, 0x04	; 4
   13466:	51 f5       	brne	.+84     	; 0x134bc <_ZN10SdBaseFile5rmdirEv+0x60>
   13468:	ce 01       	movw	r24, r28
   1346a:	0e 94 4c 98 	call	0x13098	; 0x13098 <_ZN10SdBaseFile6rewindEv>
   1346e:	10 c0       	rjmp	.+32     	; 0x13490 <_ZN10SdBaseFile5rmdirEv+0x34>
   13470:	ce 01       	movw	r24, r28
   13472:	0e 94 78 97 	call	0x12ef0	; 0x12ef0 <_ZN10SdBaseFile12readDirCacheEv>
   13476:	fc 01       	movw	r30, r24
   13478:	00 97       	sbiw	r24, 0x00	; 0
   1347a:	01 f1       	breq	.+64     	; 0x134bc <_ZN10SdBaseFile5rmdirEv+0x60>
   1347c:	80 81       	ld	r24, Z
   1347e:	88 23       	and	r24, r24
   13480:	a1 f0       	breq	.+40     	; 0x134aa <_ZN10SdBaseFile5rmdirEv+0x4e>
   13482:	85 3e       	cpi	r24, 0xE5	; 229
   13484:	29 f0       	breq	.+10     	; 0x13490 <_ZN10SdBaseFile5rmdirEv+0x34>
   13486:	8e 32       	cpi	r24, 0x2E	; 46
   13488:	19 f0       	breq	.+6      	; 0x13490 <_ZN10SdBaseFile5rmdirEv+0x34>
   1348a:	83 85       	ldd	r24, Z+11	; 0x0b
   1348c:	83 ff       	sbrs	r24, 3
   1348e:	16 c0       	rjmp	.+44     	; 0x134bc <_ZN10SdBaseFile5rmdirEv+0x60>
   13490:	4b 85       	ldd	r20, Y+11	; 0x0b
   13492:	5c 85       	ldd	r21, Y+12	; 0x0c
   13494:	6d 85       	ldd	r22, Y+13	; 0x0d
   13496:	7e 85       	ldd	r23, Y+14	; 0x0e
   13498:	8b 89       	ldd	r24, Y+19	; 0x13
   1349a:	9c 89       	ldd	r25, Y+20	; 0x14
   1349c:	ad 89       	ldd	r26, Y+21	; 0x15
   1349e:	be 89       	ldd	r27, Y+22	; 0x16
   134a0:	48 17       	cp	r20, r24
   134a2:	59 07       	cpc	r21, r25
   134a4:	6a 07       	cpc	r22, r26
   134a6:	7b 07       	cpc	r23, r27
   134a8:	18 f3       	brcs	.-58     	; 0x13470 <_ZN10SdBaseFile5rmdirEv+0x14>
   134aa:	81 e0       	ldi	r24, 0x01	; 1
   134ac:	8b 83       	std	Y+3, r24	; 0x03
   134ae:	89 81       	ldd	r24, Y+1	; 0x01
   134b0:	82 60       	ori	r24, 0x02	; 2
   134b2:	89 83       	std	Y+1, r24	; 0x01
   134b4:	ce 01       	movw	r24, r28
   134b6:	0e 94 13 9a 	call	0x13426	; 0x13426 <_ZN10SdBaseFile6removeEv>
   134ba:	01 c0       	rjmp	.+2      	; 0x134be <_ZN10SdBaseFile5rmdirEv+0x62>
   134bc:	80 e0       	ldi	r24, 0x00	; 0
   134be:	df 91       	pop	r29
   134c0:	cf 91       	pop	r28
   134c2:	08 95       	ret

000134c4 <_ZN10SdBaseFile15openCachedEntryEhh>:
   134c4:	1f 93       	push	r17
   134c6:	cf 93       	push	r28
   134c8:	df 93       	push	r29
   134ca:	ec 01       	movw	r28, r24
   134cc:	14 2f       	mov	r17, r20
   134ce:	e6 2f       	mov	r30, r22
   134d0:	f0 e0       	ldi	r31, 0x00	; 0
   134d2:	35 e0       	ldi	r19, 0x05	; 5
   134d4:	ee 0f       	add	r30, r30
   134d6:	ff 1f       	adc	r31, r31
   134d8:	3a 95       	dec	r19
   134da:	e1 f7       	brne	.-8      	; 0x134d4 <_ZN10SdBaseFile15openCachedEntryEhh+0x10>
   134dc:	e1 55       	subi	r30, 0x51	; 81
   134de:	fa 4d       	sbci	r31, 0xDA	; 218
   134e0:	83 85       	ldd	r24, Z+11	; 0x0b
   134e2:	81 71       	andi	r24, 0x11	; 17
   134e4:	21 f0       	breq	.+8      	; 0x134ee <_ZN10SdBaseFile15openCachedEntryEhh+0x2a>
   134e6:	84 2f       	mov	r24, r20
   134e8:	82 71       	andi	r24, 0x12	; 18
   134ea:	09 f0       	breq	.+2      	; 0x134ee <_ZN10SdBaseFile15openCachedEntryEhh+0x2a>
   134ec:	58 c0       	rjmp	.+176    	; 0x1359e <_ZN10SdBaseFile15openCachedEntryEhh+0xda>
   134ee:	80 91 ab 25 	lds	r24, 0x25AB
   134f2:	90 91 ac 25 	lds	r25, 0x25AC
   134f6:	a0 91 ad 25 	lds	r26, 0x25AD
   134fa:	b0 91 ae 25 	lds	r27, 0x25AE
   134fe:	8f 87       	std	Y+15, r24	; 0x0f
   13500:	98 8b       	std	Y+16, r25	; 0x10
   13502:	a9 8b       	std	Y+17, r26	; 0x11
   13504:	ba 8b       	std	Y+18, r27	; 0x12
   13506:	6c 83       	std	Y+4, r22	; 0x04
   13508:	44 89       	ldd	r20, Z+20	; 0x14
   1350a:	55 89       	ldd	r21, Z+21	; 0x15
   1350c:	60 e0       	ldi	r22, 0x00	; 0
   1350e:	70 e0       	ldi	r23, 0x00	; 0
   13510:	ba 01       	movw	r22, r20
   13512:	55 27       	eor	r21, r21
   13514:	44 27       	eor	r20, r20
   13516:	82 8d       	ldd	r24, Z+26	; 0x1a
   13518:	93 8d       	ldd	r25, Z+27	; 0x1b
   1351a:	a0 e0       	ldi	r26, 0x00	; 0
   1351c:	b0 e0       	ldi	r27, 0x00	; 0
   1351e:	48 2b       	or	r20, r24
   13520:	59 2b       	or	r21, r25
   13522:	6a 2b       	or	r22, r26
   13524:	7b 2b       	or	r23, r27
   13526:	4f 8b       	std	Y+23, r20	; 0x17
   13528:	58 8f       	std	Y+24, r21	; 0x18
   1352a:	69 8f       	std	Y+25, r22	; 0x19
   1352c:	7a 8f       	std	Y+26, r23	; 0x1a
   1352e:	83 85       	ldd	r24, Z+11	; 0x0b
   13530:	90 e0       	ldi	r25, 0x00	; 0
   13532:	88 71       	andi	r24, 0x18	; 24
   13534:	90 70       	andi	r25, 0x00	; 0
   13536:	00 97       	sbiw	r24, 0x00	; 0
   13538:	51 f4       	brne	.+20     	; 0x1354e <_ZN10SdBaseFile15openCachedEntryEhh+0x8a>
   1353a:	84 8d       	ldd	r24, Z+28	; 0x1c
   1353c:	95 8d       	ldd	r25, Z+29	; 0x1d
   1353e:	a6 8d       	ldd	r26, Z+30	; 0x1e
   13540:	b7 8d       	ldd	r27, Z+31	; 0x1f
   13542:	8b 8b       	std	Y+19, r24	; 0x13
   13544:	9c 8b       	std	Y+20, r25	; 0x14
   13546:	ad 8b       	std	Y+21, r26	; 0x15
   13548:	be 8b       	std	Y+22, r27	; 0x16
   1354a:	81 e0       	ldi	r24, 0x01	; 1
   1354c:	09 c0       	rjmp	.+18     	; 0x13560 <_ZN10SdBaseFile15openCachedEntryEhh+0x9c>
   1354e:	80 31       	cpi	r24, 0x10	; 16
   13550:	91 05       	cpc	r25, r1
   13552:	29 f5       	brne	.+74     	; 0x1359e <_ZN10SdBaseFile15openCachedEntryEhh+0xda>
   13554:	ce 01       	movw	r24, r28
   13556:	0e 94 52 98 	call	0x130a4	; 0x130a4 <_ZN10SdBaseFile10setDirSizeEv>
   1355a:	88 23       	and	r24, r24
   1355c:	01 f1       	breq	.+64     	; 0x1359e <_ZN10SdBaseFile15openCachedEntryEhh+0xda>
   1355e:	84 e0       	ldi	r24, 0x04	; 4
   13560:	8b 83       	std	Y+3, r24	; 0x03
   13562:	81 2f       	mov	r24, r17
   13564:	8f 70       	andi	r24, 0x0F	; 15
   13566:	89 83       	std	Y+1, r24	; 0x01
   13568:	1f 82       	std	Y+7, r1	; 0x07
   1356a:	18 86       	std	Y+8, r1	; 0x08
   1356c:	19 86       	std	Y+9, r1	; 0x09
   1356e:	1a 86       	std	Y+10, r1	; 0x0a
   13570:	1b 86       	std	Y+11, r1	; 0x0b
   13572:	1c 86       	std	Y+12, r1	; 0x0c
   13574:	1d 86       	std	Y+13, r1	; 0x0d
   13576:	1e 86       	std	Y+14, r1	; 0x0e
   13578:	14 ff       	sbrs	r17, 4
   1357a:	17 c0       	rjmp	.+46     	; 0x135aa <_ZN10SdBaseFile15openCachedEntryEhh+0xe6>
   1357c:	ce 01       	movw	r24, r28
   1357e:	40 e0       	ldi	r20, 0x00	; 0
   13580:	50 e0       	ldi	r21, 0x00	; 0
   13582:	ba 01       	movw	r22, r20
   13584:	0e 94 55 99 	call	0x132aa	; 0x132aa <_ZN10SdBaseFile8truncateEm>
   13588:	88 23       	and	r24, r24
   1358a:	49 f0       	breq	.+18     	; 0x1359e <_ZN10SdBaseFile15openCachedEntryEhh+0xda>
   1358c:	0e c0       	rjmp	.+28     	; 0x135aa <_ZN10SdBaseFile15openCachedEntryEhh+0xe6>
   1358e:	4b 89       	ldd	r20, Y+19	; 0x13
   13590:	5c 89       	ldd	r21, Y+20	; 0x14
   13592:	6d 89       	ldd	r22, Y+21	; 0x15
   13594:	7e 89       	ldd	r23, Y+22	; 0x16
   13596:	ce 01       	movw	r24, r28
   13598:	0e 94 b2 97 	call	0x12f64	; 0x12f64 <_ZN10SdBaseFile7seekSetEm>
   1359c:	02 c0       	rjmp	.+4      	; 0x135a2 <_ZN10SdBaseFile15openCachedEntryEhh+0xde>
   1359e:	1b 82       	std	Y+3, r1	; 0x03
   135a0:	80 e0       	ldi	r24, 0x00	; 0
   135a2:	df 91       	pop	r29
   135a4:	cf 91       	pop	r28
   135a6:	1f 91       	pop	r17
   135a8:	08 95       	ret
   135aa:	15 fd       	sbrc	r17, 5
   135ac:	f0 cf       	rjmp	.-32     	; 0x1358e <_ZN10SdBaseFile15openCachedEntryEhh+0xca>
   135ae:	81 e0       	ldi	r24, 0x01	; 1
   135b0:	f8 cf       	rjmp	.-16     	; 0x135a2 <_ZN10SdBaseFile15openCachedEntryEhh+0xde>

000135b2 <_ZN10SdBaseFile4openEPS_jh>:
   135b2:	cf 92       	push	r12
   135b4:	df 92       	push	r13
   135b6:	ff 92       	push	r15
   135b8:	0f 93       	push	r16
   135ba:	1f 93       	push	r17
   135bc:	cf 93       	push	r28
   135be:	df 93       	push	r29
   135c0:	8c 01       	movw	r16, r24
   135c2:	eb 01       	movw	r28, r22
   135c4:	6a 01       	movw	r12, r20
   135c6:	f2 2e       	mov	r15, r18
   135c8:	8d 81       	ldd	r24, Y+5	; 0x05
   135ca:	9e 81       	ldd	r25, Y+6	; 0x06
   135cc:	f8 01       	movw	r30, r16
   135ce:	85 83       	std	Z+5, r24	; 0x05
   135d0:	96 83       	std	Z+6, r25	; 0x06
   135d2:	83 81       	ldd	r24, Z+3	; 0x03
   135d4:	88 23       	and	r24, r24
   135d6:	21 f5       	brne	.+72     	; 0x13620 <_ZN10SdBaseFile4openEPS_jh+0x6e>
   135d8:	20 97       	sbiw	r28, 0x00	; 0
   135da:	59 f5       	brne	.+86     	; 0x13632 <_ZN10SdBaseFile4openEPS_jh+0x80>
   135dc:	21 c0       	rjmp	.+66     	; 0x13620 <_ZN10SdBaseFile4openEPS_jh+0x6e>
   135de:	a6 01       	movw	r20, r12
   135e0:	65 e0       	ldi	r22, 0x05	; 5
   135e2:	44 0f       	add	r20, r20
   135e4:	55 1f       	adc	r21, r21
   135e6:	6a 95       	dec	r22
   135e8:	e1 f7       	brne	.-8      	; 0x135e2 <_ZN10SdBaseFile4openEPS_jh+0x30>
   135ea:	60 e0       	ldi	r22, 0x00	; 0
   135ec:	70 e0       	ldi	r23, 0x00	; 0
   135ee:	ce 01       	movw	r24, r28
   135f0:	0e 94 b2 97 	call	0x12f64	; 0x12f64 <_ZN10SdBaseFile7seekSetEm>
   135f4:	88 23       	and	r24, r24
   135f6:	a1 f0       	breq	.+40     	; 0x13620 <_ZN10SdBaseFile4openEPS_jh+0x6e>
   135f8:	ce 01       	movw	r24, r28
   135fa:	0e 94 78 97 	call	0x12ef0	; 0x12ef0 <_ZN10SdBaseFile12readDirCacheEv>
   135fe:	00 97       	sbiw	r24, 0x00	; 0
   13600:	79 f0       	breq	.+30     	; 0x13620 <_ZN10SdBaseFile4openEPS_jh+0x6e>
   13602:	fc 01       	movw	r30, r24
   13604:	80 81       	ld	r24, Z
   13606:	88 23       	and	r24, r24
   13608:	59 f0       	breq	.+22     	; 0x13620 <_ZN10SdBaseFile4openEPS_jh+0x6e>
   1360a:	85 3e       	cpi	r24, 0xE5	; 229
   1360c:	49 f0       	breq	.+18     	; 0x13620 <_ZN10SdBaseFile4openEPS_jh+0x6e>
   1360e:	8e 32       	cpi	r24, 0x2E	; 46
   13610:	39 f0       	breq	.+14     	; 0x13620 <_ZN10SdBaseFile4openEPS_jh+0x6e>
   13612:	6c 2d       	mov	r22, r12
   13614:	6f 70       	andi	r22, 0x0F	; 15
   13616:	c8 01       	movw	r24, r16
   13618:	4f 2d       	mov	r20, r15
   1361a:	0e 94 62 9a 	call	0x134c4	; 0x134c4 <_ZN10SdBaseFile15openCachedEntryEhh>
   1361e:	01 c0       	rjmp	.+2      	; 0x13622 <_ZN10SdBaseFile4openEPS_jh+0x70>
   13620:	80 e0       	ldi	r24, 0x00	; 0
   13622:	df 91       	pop	r29
   13624:	cf 91       	pop	r28
   13626:	1f 91       	pop	r17
   13628:	0f 91       	pop	r16
   1362a:	ff 90       	pop	r15
   1362c:	df 90       	pop	r13
   1362e:	cf 90       	pop	r12
   13630:	08 95       	ret
   13632:	27 ff       	sbrs	r18, 7
   13634:	d4 cf       	rjmp	.-88     	; 0x135de <_ZN10SdBaseFile4openEPS_jh+0x2c>
   13636:	f4 cf       	rjmp	.-24     	; 0x13620 <_ZN10SdBaseFile4openEPS_jh+0x6e>

00013638 <_ZN10SdBaseFile8rmRfStarEv>:
   13638:	8f 92       	push	r8
   1363a:	9f 92       	push	r9
   1363c:	af 92       	push	r10
   1363e:	bf 92       	push	r11
   13640:	ef 92       	push	r14
   13642:	ff 92       	push	r15
   13644:	0f 93       	push	r16
   13646:	1f 93       	push	r17
   13648:	cf 93       	push	r28
   1364a:	df 93       	push	r29
   1364c:	cd b7       	in	r28, 0x3d	; 61
   1364e:	de b7       	in	r29, 0x3e	; 62
   13650:	6b 97       	sbiw	r28, 0x1b	; 27
   13652:	cd bf       	out	0x3d, r28	; 61
   13654:	de bf       	out	0x3e, r29	; 62
   13656:	7c 01       	movw	r14, r24
   13658:	19 82       	std	Y+1, r1	; 0x01
   1365a:	1c 82       	std	Y+4, r1	; 0x04
   1365c:	0e 94 4c 98 	call	0x13098	; 0x13098 <_ZN10SdBaseFile6rewindEv>
   13660:	55 c0       	rjmp	.+170    	; 0x1370c <_ZN10SdBaseFile8rmRfStarEv+0xd4>
   13662:	c7 01       	movw	r24, r14
   13664:	0e 94 78 97 	call	0x12ef0	; 0x12ef0 <_ZN10SdBaseFile12readDirCacheEv>
   13668:	fc 01       	movw	r30, r24
   1366a:	00 97       	sbiw	r24, 0x00	; 0
   1366c:	09 f4       	brne	.+2      	; 0x13670 <_ZN10SdBaseFile8rmRfStarEv+0x38>
   1366e:	66 c0       	rjmp	.+204    	; 0x1373c <_ZN10SdBaseFile8rmRfStarEv+0x104>
   13670:	80 81       	ld	r24, Z
   13672:	88 23       	and	r24, r24
   13674:	09 f4       	brne	.+2      	; 0x13678 <_ZN10SdBaseFile8rmRfStarEv+0x40>
   13676:	59 c0       	rjmp	.+178    	; 0x1372a <_ZN10SdBaseFile8rmRfStarEv+0xf2>
   13678:	85 3e       	cpi	r24, 0xE5	; 229
   1367a:	09 f4       	brne	.+2      	; 0x1367e <_ZN10SdBaseFile8rmRfStarEv+0x46>
   1367c:	47 c0       	rjmp	.+142    	; 0x1370c <_ZN10SdBaseFile8rmRfStarEv+0xd4>
   1367e:	8e 32       	cpi	r24, 0x2E	; 46
   13680:	09 f4       	brne	.+2      	; 0x13684 <_ZN10SdBaseFile8rmRfStarEv+0x4c>
   13682:	44 c0       	rjmp	.+136    	; 0x1370c <_ZN10SdBaseFile8rmRfStarEv+0xd4>
   13684:	83 85       	ldd	r24, Z+11	; 0x0b
   13686:	83 fd       	sbrc	r24, 3
   13688:	41 c0       	rjmp	.+130    	; 0x1370c <_ZN10SdBaseFile8rmRfStarEv+0xd4>
   1368a:	95 01       	movw	r18, r10
   1368c:	84 01       	movw	r16, r8
   1368e:	f5 e0       	ldi	r31, 0x05	; 5
   13690:	36 95       	lsr	r19
   13692:	27 95       	ror	r18
   13694:	17 95       	ror	r17
   13696:	07 95       	ror	r16
   13698:	fa 95       	dec	r31
   1369a:	d1 f7       	brne	.-12     	; 0x13690 <_ZN10SdBaseFile8rmRfStarEv+0x58>
   1369c:	48 01       	movw	r8, r16
   1369e:	ce 01       	movw	r24, r28
   136a0:	01 96       	adiw	r24, 0x01	; 1
   136a2:	b7 01       	movw	r22, r14
   136a4:	a8 01       	movw	r20, r16
   136a6:	21 e0       	ldi	r18, 0x01	; 1
   136a8:	0e 94 d9 9a 	call	0x135b2	; 0x135b2 <_ZN10SdBaseFile4openEPS_jh>
   136ac:	88 23       	and	r24, r24
   136ae:	09 f4       	brne	.+2      	; 0x136b2 <_ZN10SdBaseFile8rmRfStarEv+0x7a>
   136b0:	45 c0       	rjmp	.+138    	; 0x1373c <_ZN10SdBaseFile8rmRfStarEv+0x104>
   136b2:	8c 81       	ldd	r24, Y+4	; 0x04
   136b4:	84 30       	cpi	r24, 0x04	; 4
   136b6:	29 f4       	brne	.+10     	; 0x136c2 <_ZN10SdBaseFile8rmRfStarEv+0x8a>
   136b8:	ce 01       	movw	r24, r28
   136ba:	01 96       	adiw	r24, 0x01	; 1
   136bc:	0e 94 1c 9b 	call	0x13638	; 0x13638 <_ZN10SdBaseFile8rmRfStarEv>
   136c0:	07 c0       	rjmp	.+14     	; 0x136d0 <_ZN10SdBaseFile8rmRfStarEv+0x98>
   136c2:	8a 81       	ldd	r24, Y+2	; 0x02
   136c4:	82 60       	ori	r24, 0x02	; 2
   136c6:	8a 83       	std	Y+2, r24	; 0x02
   136c8:	ce 01       	movw	r24, r28
   136ca:	01 96       	adiw	r24, 0x01	; 1
   136cc:	0e 94 13 9a 	call	0x13426	; 0x13426 <_ZN10SdBaseFile6removeEv>
   136d0:	88 23       	and	r24, r24
   136d2:	a1 f1       	breq	.+104    	; 0x1373c <_ZN10SdBaseFile8rmRfStarEv+0x104>
   136d4:	08 94       	sec
   136d6:	81 1c       	adc	r8, r1
   136d8:	91 1c       	adc	r9, r1
   136da:	a4 01       	movw	r20, r8
   136dc:	60 e0       	ldi	r22, 0x00	; 0
   136de:	70 e0       	ldi	r23, 0x00	; 0
   136e0:	e5 e0       	ldi	r30, 0x05	; 5
   136e2:	44 0f       	add	r20, r20
   136e4:	55 1f       	adc	r21, r21
   136e6:	66 1f       	adc	r22, r22
   136e8:	77 1f       	adc	r23, r23
   136ea:	ea 95       	dec	r30
   136ec:	d1 f7       	brne	.-12     	; 0x136e2 <_ZN10SdBaseFile8rmRfStarEv+0xaa>
   136ee:	f7 01       	movw	r30, r14
   136f0:	83 85       	ldd	r24, Z+11	; 0x0b
   136f2:	94 85       	ldd	r25, Z+12	; 0x0c
   136f4:	a5 85       	ldd	r26, Z+13	; 0x0d
   136f6:	b6 85       	ldd	r27, Z+14	; 0x0e
   136f8:	84 17       	cp	r24, r20
   136fa:	95 07       	cpc	r25, r21
   136fc:	a6 07       	cpc	r26, r22
   136fe:	b7 07       	cpc	r27, r23
   13700:	29 f0       	breq	.+10     	; 0x1370c <_ZN10SdBaseFile8rmRfStarEv+0xd4>
   13702:	c7 01       	movw	r24, r14
   13704:	0e 94 b2 97 	call	0x12f64	; 0x12f64 <_ZN10SdBaseFile7seekSetEm>
   13708:	88 23       	and	r24, r24
   1370a:	c1 f0       	breq	.+48     	; 0x1373c <_ZN10SdBaseFile8rmRfStarEv+0x104>
   1370c:	f7 01       	movw	r30, r14
   1370e:	83 84       	ldd	r8, Z+11	; 0x0b
   13710:	94 84       	ldd	r9, Z+12	; 0x0c
   13712:	a5 84       	ldd	r10, Z+13	; 0x0d
   13714:	b6 84       	ldd	r11, Z+14	; 0x0e
   13716:	83 89       	ldd	r24, Z+19	; 0x13
   13718:	94 89       	ldd	r25, Z+20	; 0x14
   1371a:	a5 89       	ldd	r26, Z+21	; 0x15
   1371c:	b6 89       	ldd	r27, Z+22	; 0x16
   1371e:	88 16       	cp	r8, r24
   13720:	99 06       	cpc	r9, r25
   13722:	aa 06       	cpc	r10, r26
   13724:	bb 06       	cpc	r11, r27
   13726:	08 f4       	brcc	.+2      	; 0x1372a <_ZN10SdBaseFile8rmRfStarEv+0xf2>
   13728:	9c cf       	rjmp	.-200    	; 0x13662 <_ZN10SdBaseFile8rmRfStarEv+0x2a>
   1372a:	f7 01       	movw	r30, r14
   1372c:	83 81       	ldd	r24, Z+3	; 0x03
   1372e:	82 50       	subi	r24, 0x02	; 2
   13730:	82 30       	cpi	r24, 0x02	; 2
   13732:	30 f0       	brcs	.+12     	; 0x13740 <_ZN10SdBaseFile8rmRfStarEv+0x108>
   13734:	c7 01       	movw	r24, r14
   13736:	0e 94 2e 9a 	call	0x1345c	; 0x1345c <_ZN10SdBaseFile5rmdirEv>
   1373a:	03 c0       	rjmp	.+6      	; 0x13742 <_ZN10SdBaseFile8rmRfStarEv+0x10a>
   1373c:	80 e0       	ldi	r24, 0x00	; 0
   1373e:	01 c0       	rjmp	.+2      	; 0x13742 <_ZN10SdBaseFile8rmRfStarEv+0x10a>
   13740:	81 e0       	ldi	r24, 0x01	; 1
   13742:	6b 96       	adiw	r28, 0x1b	; 27
   13744:	cd bf       	out	0x3d, r28	; 61
   13746:	de bf       	out	0x3e, r29	; 62
   13748:	df 91       	pop	r29
   1374a:	cf 91       	pop	r28
   1374c:	1f 91       	pop	r17
   1374e:	0f 91       	pop	r16
   13750:	ff 90       	pop	r15
   13752:	ef 90       	pop	r14
   13754:	bf 90       	pop	r11
   13756:	af 90       	pop	r10
   13758:	9f 90       	pop	r9
   1375a:	8f 90       	pop	r8
   1375c:	08 95       	ret

0001375e <_ZN10SdBaseFile2lsEP5Printhh>:
   1375e:	7f 92       	push	r7
   13760:	8f 92       	push	r8
   13762:	9f 92       	push	r9
   13764:	af 92       	push	r10
   13766:	bf 92       	push	r11
   13768:	cf 92       	push	r12
   1376a:	df 92       	push	r13
   1376c:	ef 92       	push	r14
   1376e:	ff 92       	push	r15
   13770:	0f 93       	push	r16
   13772:	1f 93       	push	r17
   13774:	cf 93       	push	r28
   13776:	df 93       	push	r29
   13778:	cd b7       	in	r28, 0x3d	; 61
   1377a:	de b7       	in	r29, 0x3e	; 62
   1377c:	6b 97       	sbiw	r28, 0x1b	; 27
   1377e:	cd bf       	out	0x3d, r28	; 61
   13780:	de bf       	out	0x3e, r29	; 62
   13782:	7c 01       	movw	r14, r24
   13784:	4b 01       	movw	r8, r22
   13786:	d4 2e       	mov	r13, r20
   13788:	c2 2e       	mov	r12, r18
   1378a:	0e 94 4c 98 	call	0x13098	; 0x13098 <_ZN10SdBaseFile6rewindEv>
   1378e:	ad 2c       	mov	r10, r13
   13790:	bb 24       	eor	r11, r11
   13792:	84 e0       	ldi	r24, 0x04	; 4
   13794:	a8 22       	and	r10, r24
   13796:	bb 24       	eor	r11, r11
   13798:	12 e0       	ldi	r17, 0x02	; 2
   1379a:	71 2e       	mov	r7, r17
   1379c:	7c 0c       	add	r7, r12
   1379e:	30 c0       	rjmp	.+96     	; 0x13800 <_ZN10SdBaseFile2lsEP5Printhh+0xa2>
   137a0:	82 30       	cpi	r24, 0x02	; 2
   137a2:	74 f1       	brlt	.+92     	; 0x13800 <_ZN10SdBaseFile2lsEP5Printhh+0xa2>
   137a4:	a1 14       	cp	r10, r1
   137a6:	b1 04       	cpc	r11, r1
   137a8:	59 f1       	breq	.+86     	; 0x13800 <_ZN10SdBaseFile2lsEP5Printhh+0xa2>
   137aa:	f7 01       	movw	r30, r14
   137ac:	03 85       	ldd	r16, Z+11	; 0x0b
   137ae:	14 85       	ldd	r17, Z+12	; 0x0c
   137b0:	25 85       	ldd	r18, Z+13	; 0x0d
   137b2:	36 85       	ldd	r19, Z+14	; 0x0e
   137b4:	b5 e0       	ldi	r27, 0x05	; 5
   137b6:	36 95       	lsr	r19
   137b8:	27 95       	ror	r18
   137ba:	17 95       	ror	r17
   137bc:	07 95       	ror	r16
   137be:	ba 95       	dec	r27
   137c0:	d1 f7       	brne	.-12     	; 0x137b6 <_ZN10SdBaseFile2lsEP5Printhh+0x58>
   137c2:	19 82       	std	Y+1, r1	; 0x01
   137c4:	1c 82       	std	Y+4, r1	; 0x04
   137c6:	a8 01       	movw	r20, r16
   137c8:	41 50       	subi	r20, 0x01	; 1
   137ca:	50 40       	sbci	r21, 0x00	; 0
   137cc:	ce 01       	movw	r24, r28
   137ce:	01 96       	adiw	r24, 0x01	; 1
   137d0:	b7 01       	movw	r22, r14
   137d2:	21 e0       	ldi	r18, 0x01	; 1
   137d4:	0e 94 d9 9a 	call	0x135b2	; 0x135b2 <_ZN10SdBaseFile4openEPS_jh>
   137d8:	88 23       	and	r24, r24
   137da:	39 f0       	breq	.+14     	; 0x137ea <_ZN10SdBaseFile2lsEP5Printhh+0x8c>
   137dc:	ce 01       	movw	r24, r28
   137de:	01 96       	adiw	r24, 0x01	; 1
   137e0:	b4 01       	movw	r22, r8
   137e2:	4d 2d       	mov	r20, r13
   137e4:	27 2d       	mov	r18, r7
   137e6:	0e 94 af 9b 	call	0x1375e	; 0x1375e <_ZN10SdBaseFile2lsEP5Printhh>
   137ea:	a8 01       	movw	r20, r16
   137ec:	a5 e0       	ldi	r26, 0x05	; 5
   137ee:	44 0f       	add	r20, r20
   137f0:	55 1f       	adc	r21, r21
   137f2:	aa 95       	dec	r26
   137f4:	e1 f7       	brne	.-8      	; 0x137ee <_ZN10SdBaseFile2lsEP5Printhh+0x90>
   137f6:	60 e0       	ldi	r22, 0x00	; 0
   137f8:	70 e0       	ldi	r23, 0x00	; 0
   137fa:	c7 01       	movw	r24, r14
   137fc:	0e 94 b2 97 	call	0x12f64	; 0x12f64 <_ZN10SdBaseFile7seekSetEm>
   13800:	c7 01       	movw	r24, r14
   13802:	b4 01       	movw	r22, r8
   13804:	4d 2d       	mov	r20, r13
   13806:	2c 2d       	mov	r18, r12
   13808:	0e 94 a9 96 	call	0x12d52	; 0x12d52 <_ZN10SdBaseFile11lsPrintNextEP5Printhh>
   1380c:	88 23       	and	r24, r24
   1380e:	41 f6       	brne	.-112    	; 0x137a0 <_ZN10SdBaseFile2lsEP5Printhh+0x42>
   13810:	6b 96       	adiw	r28, 0x1b	; 27
   13812:	cd bf       	out	0x3d, r28	; 61
   13814:	de bf       	out	0x3e, r29	; 62
   13816:	df 91       	pop	r29
   13818:	cf 91       	pop	r28
   1381a:	1f 91       	pop	r17
   1381c:	0f 91       	pop	r16
   1381e:	ff 90       	pop	r15
   13820:	ef 90       	pop	r14
   13822:	df 90       	pop	r13
   13824:	cf 90       	pop	r12
   13826:	bf 90       	pop	r11
   13828:	af 90       	pop	r10
   1382a:	9f 90       	pop	r9
   1382c:	8f 90       	pop	r8
   1382e:	7f 90       	pop	r7
   13830:	08 95       	ret

00013832 <_ZN10SdBaseFile4openEPS_PKhh>:
   13832:	7f 92       	push	r7
   13834:	8f 92       	push	r8
   13836:	9f 92       	push	r9
   13838:	af 92       	push	r10
   1383a:	bf 92       	push	r11
   1383c:	cf 92       	push	r12
   1383e:	df 92       	push	r13
   13840:	ef 92       	push	r14
   13842:	ff 92       	push	r15
   13844:	0f 93       	push	r16
   13846:	1f 93       	push	r17
   13848:	cf 93       	push	r28
   1384a:	df 93       	push	r29
   1384c:	5c 01       	movw	r10, r24
   1384e:	eb 01       	movw	r28, r22
   13850:	94 2e       	mov	r9, r20
   13852:	85 2e       	mov	r8, r21
   13854:	72 2e       	mov	r7, r18
   13856:	8d 81       	ldd	r24, Y+5	; 0x05
   13858:	9e 81       	ldd	r25, Y+6	; 0x06
   1385a:	f5 01       	movw	r30, r10
   1385c:	85 83       	std	Z+5, r24	; 0x05
   1385e:	96 83       	std	Z+6, r25	; 0x06
   13860:	cb 01       	movw	r24, r22
   13862:	0e 94 4c 98 	call	0x13098	; 0x13098 <_ZN10SdBaseFile6rewindEv>
   13866:	10 e0       	ldi	r17, 0x00	; 0
   13868:	37 c0       	rjmp	.+110    	; 0x138d8 <_ZN10SdBaseFile4openEPS_PKhh+0xa6>
   1386a:	ce 01       	movw	r24, r28
   1386c:	0e 94 78 97 	call	0x12ef0	; 0x12ef0 <_ZN10SdBaseFile12readDirCacheEv>
   13870:	bc 01       	movw	r22, r24
   13872:	00 97       	sbiw	r24, 0x00	; 0
   13874:	09 f4       	brne	.+2      	; 0x13878 <_ZN10SdBaseFile4openEPS_PKhh+0x46>
   13876:	8e c0       	rjmp	.+284    	; 0x13994 <_ZN10SdBaseFile4openEPS_PKhh+0x162>
   13878:	d7 01       	movw	r26, r14
   1387a:	c6 01       	movw	r24, r12
   1387c:	45 e0       	ldi	r20, 0x05	; 5
   1387e:	b6 95       	lsr	r27
   13880:	a7 95       	ror	r26
   13882:	97 95       	ror	r25
   13884:	87 95       	ror	r24
   13886:	4a 95       	dec	r20
   13888:	d1 f7       	brne	.-12     	; 0x1387e <_ZN10SdBaseFile4openEPS_PKhh+0x4c>
   1388a:	08 2f       	mov	r16, r24
   1388c:	0f 70       	andi	r16, 0x0F	; 15
   1388e:	fb 01       	movw	r30, r22
   13890:	80 81       	ld	r24, Z
   13892:	88 23       	and	r24, r24
   13894:	11 f0       	breq	.+4      	; 0x1389a <_ZN10SdBaseFile4openEPS_PKhh+0x68>
   13896:	85 3e       	cpi	r24, 0xE5	; 229
   13898:	b1 f4       	brne	.+44     	; 0x138c6 <_ZN10SdBaseFile4openEPS_PKhh+0x94>
   1389a:	11 23       	and	r17, r17
   1389c:	79 f4       	brne	.+30     	; 0x138bc <_ZN10SdBaseFile4openEPS_PKhh+0x8a>
   1389e:	80 91 ab 25 	lds	r24, 0x25AB
   138a2:	90 91 ac 25 	lds	r25, 0x25AC
   138a6:	a0 91 ad 25 	lds	r26, 0x25AD
   138aa:	b0 91 ae 25 	lds	r27, 0x25AE
   138ae:	f5 01       	movw	r30, r10
   138b0:	87 87       	std	Z+15, r24	; 0x0f
   138b2:	90 8b       	std	Z+16, r25	; 0x10
   138b4:	a1 8b       	std	Z+17, r26	; 0x11
   138b6:	b2 8b       	std	Z+18, r27	; 0x12
   138b8:	04 83       	std	Z+4, r16	; 0x04
   138ba:	11 e0       	ldi	r17, 0x01	; 1
   138bc:	fb 01       	movw	r30, r22
   138be:	80 81       	ld	r24, Z
   138c0:	88 23       	and	r24, r24
   138c2:	51 f4       	brne	.+20     	; 0x138d8 <_ZN10SdBaseFile4openEPS_PKhh+0xa6>
   138c4:	17 c0       	rjmp	.+46     	; 0x138f4 <_ZN10SdBaseFile4openEPS_PKhh+0xc2>
   138c6:	89 2d       	mov	r24, r9
   138c8:	98 2d       	mov	r25, r8
   138ca:	4b e0       	ldi	r20, 0x0B	; 11
   138cc:	50 e0       	ldi	r21, 0x00	; 0
   138ce:	0e 94 ba b0 	call	0x16174	; 0x16174 <memcmp>
   138d2:	00 97       	sbiw	r24, 0x00	; 0
   138d4:	09 f4       	brne	.+2      	; 0x138d8 <_ZN10SdBaseFile4openEPS_PKhh+0xa6>
   138d6:	6d c0       	rjmp	.+218    	; 0x139b2 <_ZN10SdBaseFile4openEPS_PKhh+0x180>
   138d8:	cb 84       	ldd	r12, Y+11	; 0x0b
   138da:	dc 84       	ldd	r13, Y+12	; 0x0c
   138dc:	ed 84       	ldd	r14, Y+13	; 0x0d
   138de:	fe 84       	ldd	r15, Y+14	; 0x0e
   138e0:	8b 89       	ldd	r24, Y+19	; 0x13
   138e2:	9c 89       	ldd	r25, Y+20	; 0x14
   138e4:	ad 89       	ldd	r26, Y+21	; 0x15
   138e6:	be 89       	ldd	r27, Y+22	; 0x16
   138e8:	c8 16       	cp	r12, r24
   138ea:	d9 06       	cpc	r13, r25
   138ec:	ea 06       	cpc	r14, r26
   138ee:	fb 06       	cpc	r15, r27
   138f0:	08 f4       	brcc	.+2      	; 0x138f4 <_ZN10SdBaseFile4openEPS_PKhh+0xc2>
   138f2:	bb cf       	rjmp	.-138    	; 0x1386a <_ZN10SdBaseFile4openEPS_PKhh+0x38>
   138f4:	76 fe       	sbrs	r7, 6
   138f6:	4e c0       	rjmp	.+156    	; 0x13994 <_ZN10SdBaseFile4openEPS_PKhh+0x162>
   138f8:	71 fe       	sbrs	r7, 1
   138fa:	4c c0       	rjmp	.+152    	; 0x13994 <_ZN10SdBaseFile4openEPS_PKhh+0x162>
   138fc:	11 23       	and	r17, r17
   138fe:	51 f0       	breq	.+20     	; 0x13914 <_ZN10SdBaseFile4openEPS_PKhh+0xe2>
   13900:	f5 01       	movw	r30, r10
   13902:	04 81       	ldd	r16, Z+4	; 0x04
   13904:	c5 01       	movw	r24, r10
   13906:	61 e0       	ldi	r22, 0x01	; 1
   13908:	0e 94 2f 94 	call	0x1285e	; 0x1285e <_ZN10SdBaseFile13cacheDirEntryEh>
   1390c:	ec 01       	movw	r28, r24
   1390e:	00 97       	sbiw	r24, 0x00	; 0
   13910:	59 f4       	brne	.+22     	; 0x13928 <_ZN10SdBaseFile4openEPS_PKhh+0xf6>
   13912:	40 c0       	rjmp	.+128    	; 0x13994 <_ZN10SdBaseFile4openEPS_PKhh+0x162>
   13914:	8b 81       	ldd	r24, Y+3	; 0x03
   13916:	82 30       	cpi	r24, 0x02	; 2
   13918:	e9 f1       	breq	.+122    	; 0x13994 <_ZN10SdBaseFile4openEPS_PKhh+0x162>
   1391a:	ce 01       	movw	r24, r28
   1391c:	0e 94 b3 93 	call	0x12766	; 0x12766 <_ZN10SdBaseFile13addDirClusterEv>
   13920:	00 97       	sbiw	r24, 0x00	; 0
   13922:	c1 f1       	breq	.+112    	; 0x13994 <_ZN10SdBaseFile4openEPS_PKhh+0x162>
   13924:	ec 01       	movw	r28, r24
   13926:	00 e0       	ldi	r16, 0x00	; 0
   13928:	80 e2       	ldi	r24, 0x20	; 32
   1392a:	fe 01       	movw	r30, r28
   1392c:	11 92       	st	Z+, r1
   1392e:	8a 95       	dec	r24
   13930:	e9 f7       	brne	.-6      	; 0x1392c <_ZN10SdBaseFile4openEPS_PKhh+0xfa>
   13932:	fe 01       	movw	r30, r28
   13934:	a9 2d       	mov	r26, r9
   13936:	b8 2d       	mov	r27, r8
   13938:	8b e0       	ldi	r24, 0x0B	; 11
   1393a:	0d 90       	ld	r0, X+
   1393c:	01 92       	st	Z+, r0
   1393e:	81 50       	subi	r24, 0x01	; 1
   13940:	e1 f7       	brne	.-8      	; 0x1393a <_ZN10SdBaseFile4openEPS_PKhh+0x108>
   13942:	e0 91 a0 25 	lds	r30, 0x25A0
   13946:	f0 91 a1 25 	lds	r31, 0x25A1
   1394a:	30 97       	sbiw	r30, 0x00	; 0
   1394c:	39 f0       	breq	.+14     	; 0x1395c <_ZN10SdBaseFile4openEPS_PKhh+0x12a>
   1394e:	be 01       	movw	r22, r28
   13950:	62 5f       	subi	r22, 0xF2	; 242
   13952:	7f 4f       	sbci	r23, 0xFF	; 255
   13954:	ce 01       	movw	r24, r28
   13956:	40 96       	adiw	r24, 0x10	; 16
   13958:	19 95       	eicall
   1395a:	08 c0       	rjmp	.+16     	; 0x1396c <_ZN10SdBaseFile4openEPS_PKhh+0x13a>
   1395c:	81 e2       	ldi	r24, 0x21	; 33
   1395e:	98 e2       	ldi	r25, 0x28	; 40
   13960:	88 8b       	std	Y+16, r24	; 0x10
   13962:	99 8b       	std	Y+17, r25	; 0x11
   13964:	80 e0       	ldi	r24, 0x00	; 0
   13966:	98 e0       	ldi	r25, 0x08	; 8
   13968:	8e 87       	std	Y+14, r24	; 0x0e
   1396a:	9f 87       	std	Y+15, r25	; 0x0f
   1396c:	88 89       	ldd	r24, Y+16	; 0x10
   1396e:	99 89       	ldd	r25, Y+17	; 0x11
   13970:	8a 8b       	std	Y+18, r24	; 0x12
   13972:	9b 8b       	std	Y+19, r25	; 0x13
   13974:	88 8f       	std	Y+24, r24	; 0x18
   13976:	99 8f       	std	Y+25, r25	; 0x19
   13978:	8e 85       	ldd	r24, Y+14	; 0x0e
   1397a:	9f 85       	ldd	r25, Y+15	; 0x0f
   1397c:	8e 8b       	std	Y+22, r24	; 0x16
   1397e:	9f 8b       	std	Y+23, r25	; 0x17
   13980:	0e 94 da a1 	call	0x143b4	; 0x143b4 <_ZN8SdVolume9cacheSyncEv>
   13984:	88 23       	and	r24, r24
   13986:	31 f0       	breq	.+12     	; 0x13994 <_ZN10SdBaseFile4openEPS_PKhh+0x162>
   13988:	c5 01       	movw	r24, r10
   1398a:	60 2f       	mov	r22, r16
   1398c:	47 2d       	mov	r20, r7
   1398e:	0e 94 62 9a 	call	0x134c4	; 0x134c4 <_ZN10SdBaseFile15openCachedEntryEhh>
   13992:	01 c0       	rjmp	.+2      	; 0x13996 <_ZN10SdBaseFile4openEPS_PKhh+0x164>
   13994:	80 e0       	ldi	r24, 0x00	; 0
   13996:	df 91       	pop	r29
   13998:	cf 91       	pop	r28
   1399a:	1f 91       	pop	r17
   1399c:	0f 91       	pop	r16
   1399e:	ff 90       	pop	r15
   139a0:	ef 90       	pop	r14
   139a2:	df 90       	pop	r13
   139a4:	cf 90       	pop	r12
   139a6:	bf 90       	pop	r11
   139a8:	af 90       	pop	r10
   139aa:	9f 90       	pop	r9
   139ac:	8f 90       	pop	r8
   139ae:	7f 90       	pop	r7
   139b0:	08 95       	ret
   139b2:	77 fe       	sbrs	r7, 7
   139b4:	e9 cf       	rjmp	.-46     	; 0x13988 <_ZN10SdBaseFile4openEPS_PKhh+0x156>
   139b6:	ee cf       	rjmp	.-36     	; 0x13994 <_ZN10SdBaseFile4openEPS_PKhh+0x162>

000139b8 <_ZN10SdBaseFile4openEPS_PKch>:
   139b8:	5f 92       	push	r5
   139ba:	6f 92       	push	r6
   139bc:	7f 92       	push	r7
   139be:	8f 92       	push	r8
   139c0:	9f 92       	push	r9
   139c2:	af 92       	push	r10
   139c4:	bf 92       	push	r11
   139c6:	cf 92       	push	r12
   139c8:	df 92       	push	r13
   139ca:	ef 92       	push	r14
   139cc:	ff 92       	push	r15
   139ce:	0f 93       	push	r16
   139d0:	1f 93       	push	r17
   139d2:	cf 93       	push	r28
   139d4:	df 93       	push	r29
   139d6:	cd b7       	in	r28, 0x3d	; 61
   139d8:	de b7       	in	r29, 0x3e	; 62
   139da:	c3 54       	subi	r28, 0x43	; 67
   139dc:	d0 40       	sbci	r29, 0x00	; 0
   139de:	cd bf       	out	0x3d, r28	; 61
   139e0:	de bf       	out	0x3e, r29	; 62
   139e2:	4c 01       	movw	r8, r24
   139e4:	6b 01       	movw	r12, r22
   139e6:	24 96       	adiw	r28, 0x04	; 4
   139e8:	4e af       	std	Y+62, r20	; 0x3e
   139ea:	5f af       	std	Y+63, r21	; 0x3f
   139ec:	24 97       	sbiw	r28, 0x04	; 4
   139ee:	52 2e       	mov	r5, r18
   139f0:	1f a2       	std	Y+39, r1	; 0x27
   139f2:	1a a6       	std	Y+42, r1	; 0x2a
   139f4:	1c 86       	std	Y+12, r1	; 0x0c
   139f6:	1f 86       	std	Y+15, r1	; 0x0f
   139f8:	61 15       	cp	r22, r1
   139fa:	71 05       	cpc	r23, r1
   139fc:	09 f4       	brne	.+2      	; 0x13a00 <_ZN10SdBaseFile4openEPS_PKch+0x48>
   139fe:	79 c0       	rjmp	.+242    	; 0x13af2 <_ZN10SdBaseFile4openEPS_PKch+0x13a>
   13a00:	fc 01       	movw	r30, r24
   13a02:	83 81       	ldd	r24, Z+3	; 0x03
   13a04:	88 23       	and	r24, r24
   13a06:	09 f0       	breq	.+2      	; 0x13a0a <_ZN10SdBaseFile4openEPS_PKch+0x52>
   13a08:	74 c0       	rjmp	.+232    	; 0x13af2 <_ZN10SdBaseFile4openEPS_PKch+0x13a>
   13a0a:	fa 01       	movw	r30, r20
   13a0c:	80 81       	ld	r24, Z
   13a0e:	8f 32       	cpi	r24, 0x2F	; 47
   13a10:	91 f4       	brne	.+36     	; 0x13a36 <_ZN10SdBaseFile4openEPS_PKch+0x7e>
   13a12:	05 c0       	rjmp	.+10     	; 0x13a1e <_ZN10SdBaseFile4openEPS_PKch+0x66>
   13a14:	31 96       	adiw	r30, 0x01	; 1
   13a16:	24 96       	adiw	r28, 0x04	; 4
   13a18:	ee af       	std	Y+62, r30	; 0x3e
   13a1a:	ff af       	std	Y+63, r31	; 0x3f
   13a1c:	24 97       	sbiw	r28, 0x04	; 4
   13a1e:	24 96       	adiw	r28, 0x04	; 4
   13a20:	ee ad       	ldd	r30, Y+62	; 0x3e
   13a22:	ff ad       	ldd	r31, Y+63	; 0x3f
   13a24:	24 97       	sbiw	r28, 0x04	; 4
   13a26:	80 81       	ld	r24, Z
   13a28:	8f 32       	cpi	r24, 0x2F	; 47
   13a2a:	a1 f3       	breq	.-24     	; 0x13a14 <_ZN10SdBaseFile4openEPS_PKch+0x5c>
   13a2c:	f6 01       	movw	r30, r12
   13a2e:	83 81       	ldd	r24, Z+3	; 0x03
   13a30:	82 50       	subi	r24, 0x02	; 2
   13a32:	82 30       	cpi	r24, 0x02	; 2
   13a34:	50 f4       	brcc	.+20     	; 0x13a4a <_ZN10SdBaseFile4openEPS_PKch+0x92>
   13a36:	86 01       	movw	r16, r12
   13a38:	67 e2       	ldi	r22, 0x27	; 39
   13a3a:	e6 2e       	mov	r14, r22
   13a3c:	f1 2c       	mov	r15, r1
   13a3e:	ec 0e       	add	r14, r28
   13a40:	fd 1e       	adc	r15, r29
   13a42:	37 01       	movw	r6, r14
   13a44:	be 2c       	mov	r11, r14
   13a46:	af 2c       	mov	r10, r15
   13a48:	11 c0       	rjmp	.+34     	; 0x13a6c <_ZN10SdBaseFile4openEPS_PKch+0xb4>
   13a4a:	f6 01       	movw	r30, r12
   13a4c:	65 81       	ldd	r22, Z+5	; 0x05
   13a4e:	76 81       	ldd	r23, Z+6	; 0x06
   13a50:	ce 01       	movw	r24, r28
   13a52:	0c 96       	adiw	r24, 0x0c	; 12
   13a54:	0e 94 b9 98 	call	0x13172	; 0x13172 <_ZN10SdBaseFile8openRootEP8SdVolume>
   13a58:	88 23       	and	r24, r24
   13a5a:	09 f4       	brne	.+2      	; 0x13a5e <_ZN10SdBaseFile4openEPS_PKch+0xa6>
   13a5c:	4a c0       	rjmp	.+148    	; 0x13af2 <_ZN10SdBaseFile4openEPS_PKch+0x13a>
   13a5e:	8e 01       	movw	r16, r28
   13a60:	04 5f       	subi	r16, 0xF4	; 244
   13a62:	1f 4f       	sbci	r17, 0xFF	; 255
   13a64:	e9 cf       	rjmp	.-46     	; 0x13a38 <_ZN10SdBaseFile4openEPS_PKch+0x80>
   13a66:	87 01       	movw	r16, r14
   13a68:	eb 2c       	mov	r14, r11
   13a6a:	fa 2c       	mov	r15, r10
   13a6c:	24 96       	adiw	r28, 0x04	; 4
   13a6e:	8e ad       	ldd	r24, Y+62	; 0x3e
   13a70:	9f ad       	ldd	r25, Y+63	; 0x3f
   13a72:	24 97       	sbiw	r28, 0x04	; 4
   13a74:	be 01       	movw	r22, r28
   13a76:	6f 5f       	subi	r22, 0xFF	; 255
   13a78:	7f 4f       	sbci	r23, 0xFF	; 255
   13a7a:	ae 01       	movw	r20, r28
   13a7c:	4e 5b       	subi	r20, 0xBE	; 190
   13a7e:	5f 4f       	sbci	r21, 0xFF	; 255
   13a80:	0e 94 86 94 	call	0x1290c	; 0x1290c <_ZN10SdBaseFile10make83NameEPKcPhPS1_>
   13a84:	88 23       	and	r24, r24
   13a86:	31 f4       	brne	.+12     	; 0x13a94 <_ZN10SdBaseFile4openEPS_PKch+0xdc>
   13a88:	34 c0       	rjmp	.+104    	; 0x13af2 <_ZN10SdBaseFile4openEPS_PKch+0x13a>
   13a8a:	31 96       	adiw	r30, 0x01	; 1
   13a8c:	24 96       	adiw	r28, 0x04	; 4
   13a8e:	ee af       	std	Y+62, r30	; 0x3e
   13a90:	ff af       	std	Y+63, r31	; 0x3f
   13a92:	24 97       	sbiw	r28, 0x04	; 4
   13a94:	24 96       	adiw	r28, 0x04	; 4
   13a96:	ee ad       	ldd	r30, Y+62	; 0x3e
   13a98:	ff ad       	ldd	r31, Y+63	; 0x3f
   13a9a:	24 97       	sbiw	r28, 0x04	; 4
   13a9c:	80 81       	ld	r24, Z
   13a9e:	8f 32       	cpi	r24, 0x2F	; 47
   13aa0:	a1 f3       	breq	.-24     	; 0x13a8a <_ZN10SdBaseFile4openEPS_PKch+0xd2>
   13aa2:	88 23       	and	r24, r24
   13aa4:	e9 f0       	breq	.+58     	; 0x13ae0 <_ZN10SdBaseFile4openEPS_PKch+0x128>
   13aa6:	c7 01       	movw	r24, r14
   13aa8:	b8 01       	movw	r22, r16
   13aaa:	ae 01       	movw	r20, r28
   13aac:	4f 5f       	subi	r20, 0xFF	; 255
   13aae:	5f 4f       	sbci	r21, 0xFF	; 255
   13ab0:	21 e0       	ldi	r18, 0x01	; 1
   13ab2:	0e 94 19 9c 	call	0x13832	; 0x13832 <_ZN10SdBaseFile4openEPS_PKhh>
   13ab6:	88 23       	and	r24, r24
   13ab8:	e1 f0       	breq	.+56     	; 0x13af2 <_ZN10SdBaseFile4openEPS_PKch+0x13a>
   13aba:	0c 15       	cp	r16, r12
   13abc:	1d 05       	cpc	r17, r13
   13abe:	29 f0       	breq	.+10     	; 0x13aca <_ZN10SdBaseFile4openEPS_PKch+0x112>
   13ac0:	c8 01       	movw	r24, r16
   13ac2:	0e 94 01 99 	call	0x13202	; 0x13202 <_ZN10SdBaseFile4syncEv>
   13ac6:	f8 01       	movw	r30, r16
   13ac8:	13 82       	std	Z+3, r1	; 0x03
   13aca:	e6 14       	cp	r14, r6
   13acc:	f7 04       	cpc	r15, r7
   13ace:	59 f6       	brne	.-106    	; 0x13a66 <_ZN10SdBaseFile4openEPS_PKch+0xae>
   13ad0:	5c e0       	ldi	r21, 0x0C	; 12
   13ad2:	e5 2e       	mov	r14, r21
   13ad4:	f1 2c       	mov	r15, r1
   13ad6:	ec 0e       	add	r14, r28
   13ad8:	fd 1e       	adc	r15, r29
   13ada:	0b 2d       	mov	r16, r11
   13adc:	1a 2d       	mov	r17, r10
   13ade:	c6 cf       	rjmp	.-116    	; 0x13a6c <_ZN10SdBaseFile4openEPS_PKch+0xb4>
   13ae0:	c4 01       	movw	r24, r8
   13ae2:	b8 01       	movw	r22, r16
   13ae4:	ae 01       	movw	r20, r28
   13ae6:	4f 5f       	subi	r20, 0xFF	; 255
   13ae8:	5f 4f       	sbci	r21, 0xFF	; 255
   13aea:	25 2d       	mov	r18, r5
   13aec:	0e 94 19 9c 	call	0x13832	; 0x13832 <_ZN10SdBaseFile4openEPS_PKhh>
   13af0:	01 c0       	rjmp	.+2      	; 0x13af4 <_ZN10SdBaseFile4openEPS_PKch+0x13c>
   13af2:	80 e0       	ldi	r24, 0x00	; 0
   13af4:	cd 5b       	subi	r28, 0xBD	; 189
   13af6:	df 4f       	sbci	r29, 0xFF	; 255
   13af8:	cd bf       	out	0x3d, r28	; 61
   13afa:	de bf       	out	0x3e, r29	; 62
   13afc:	df 91       	pop	r29
   13afe:	cf 91       	pop	r28
   13b00:	1f 91       	pop	r17
   13b02:	0f 91       	pop	r16
   13b04:	ff 90       	pop	r15
   13b06:	ef 90       	pop	r14
   13b08:	df 90       	pop	r13
   13b0a:	cf 90       	pop	r12
   13b0c:	bf 90       	pop	r11
   13b0e:	af 90       	pop	r10
   13b10:	9f 90       	pop	r9
   13b12:	8f 90       	pop	r8
   13b14:	7f 90       	pop	r7
   13b16:	6f 90       	pop	r6
   13b18:	5f 90       	pop	r5
   13b1a:	08 95       	ret

00013b1c <_ZN10SdBaseFile6removeEPS_PKc>:
   13b1c:	cf 93       	push	r28
   13b1e:	df 93       	push	r29
   13b20:	cd b7       	in	r28, 0x3d	; 61
   13b22:	de b7       	in	r29, 0x3e	; 62
   13b24:	6b 97       	sbiw	r28, 0x1b	; 27
   13b26:	cd bf       	out	0x3d, r28	; 61
   13b28:	de bf       	out	0x3e, r29	; 62
   13b2a:	9c 01       	movw	r18, r24
   13b2c:	ab 01       	movw	r20, r22
   13b2e:	19 82       	std	Y+1, r1	; 0x01
   13b30:	1c 82       	std	Y+4, r1	; 0x04
   13b32:	ce 01       	movw	r24, r28
   13b34:	01 96       	adiw	r24, 0x01	; 1
   13b36:	b9 01       	movw	r22, r18
   13b38:	22 e0       	ldi	r18, 0x02	; 2
   13b3a:	0e 94 dc 9c 	call	0x139b8	; 0x139b8 <_ZN10SdBaseFile4openEPS_PKch>
   13b3e:	88 23       	and	r24, r24
   13b40:	29 f0       	breq	.+10     	; 0x13b4c <_ZN10SdBaseFile6removeEPS_PKc+0x30>
   13b42:	ce 01       	movw	r24, r28
   13b44:	01 96       	adiw	r24, 0x01	; 1
   13b46:	0e 94 13 9a 	call	0x13426	; 0x13426 <_ZN10SdBaseFile6removeEv>
   13b4a:	01 c0       	rjmp	.+2      	; 0x13b4e <_ZN10SdBaseFile6removeEPS_PKc+0x32>
   13b4c:	80 e0       	ldi	r24, 0x00	; 0
   13b4e:	6b 96       	adiw	r28, 0x1b	; 27
   13b50:	cd bf       	out	0x3d, r28	; 61
   13b52:	de bf       	out	0x3e, r29	; 62
   13b54:	df 91       	pop	r29
   13b56:	cf 91       	pop	r28
   13b58:	08 95       	ret

00013b5a <_ZN10SdBaseFile4openEPKch>:
   13b5a:	fb 01       	movw	r30, r22
   13b5c:	24 2f       	mov	r18, r20
   13b5e:	60 91 a2 25 	lds	r22, 0x25A2
   13b62:	70 91 a3 25 	lds	r23, 0x25A3
   13b66:	af 01       	movw	r20, r30
   13b68:	0e 94 dc 9c 	call	0x139b8	; 0x139b8 <_ZN10SdBaseFile4openEPS_PKch>
   13b6c:	08 95       	ret

00013b6e <_ZN10SdBaseFile5mkdirEPS_PKh>:
   13b6e:	af 92       	push	r10
   13b70:	bf 92       	push	r11
   13b72:	cf 92       	push	r12
   13b74:	df 92       	push	r13
   13b76:	ef 92       	push	r14
   13b78:	ff 92       	push	r15
   13b7a:	0f 93       	push	r16
   13b7c:	1f 93       	push	r17
   13b7e:	cf 93       	push	r28
   13b80:	df 93       	push	r29
   13b82:	cd b7       	in	r28, 0x3d	; 61
   13b84:	de b7       	in	r29, 0x3e	; 62
   13b86:	a0 97       	sbiw	r28, 0x20	; 32
   13b88:	cd bf       	out	0x3d, r28	; 61
   13b8a:	de bf       	out	0x3e, r29	; 62
   13b8c:	8c 01       	movw	r16, r24
   13b8e:	7b 01       	movw	r14, r22
   13b90:	fb 01       	movw	r30, r22
   13b92:	83 81       	ldd	r24, Z+3	; 0x03
   13b94:	82 30       	cpi	r24, 0x02	; 2
   13b96:	08 f4       	brcc	.+2      	; 0x13b9a <_ZN10SdBaseFile5mkdirEPS_PKh+0x2c>
   13b98:	7f c0       	rjmp	.+254    	; 0x13c98 <_ZN10SdBaseFile5mkdirEPS_PKh+0x12a>
   13b9a:	c8 01       	movw	r24, r16
   13b9c:	23 ec       	ldi	r18, 0xC3	; 195
   13b9e:	0e 94 19 9c 	call	0x13832	; 0x13832 <_ZN10SdBaseFile4openEPS_PKhh>
   13ba2:	88 23       	and	r24, r24
   13ba4:	09 f4       	brne	.+2      	; 0x13ba8 <_ZN10SdBaseFile5mkdirEPS_PKh+0x3a>
   13ba6:	78 c0       	rjmp	.+240    	; 0x13c98 <_ZN10SdBaseFile5mkdirEPS_PKh+0x12a>
   13ba8:	81 e0       	ldi	r24, 0x01	; 1
   13baa:	f8 01       	movw	r30, r16
   13bac:	81 83       	std	Z+1, r24	; 0x01
   13bae:	84 e0       	ldi	r24, 0x04	; 4
   13bb0:	83 83       	std	Z+3, r24	; 0x03
   13bb2:	c8 01       	movw	r24, r16
   13bb4:	0e 94 b3 93 	call	0x12766	; 0x12766 <_ZN10SdBaseFile13addDirClusterEv>
   13bb8:	00 97       	sbiw	r24, 0x00	; 0
   13bba:	09 f4       	brne	.+2      	; 0x13bbe <_ZN10SdBaseFile5mkdirEPS_PKh+0x50>
   13bbc:	6d c0       	rjmp	.+218    	; 0x13c98 <_ZN10SdBaseFile5mkdirEPS_PKh+0x12a>
   13bbe:	c8 01       	movw	r24, r16
   13bc0:	0e 94 01 99 	call	0x13202	; 0x13202 <_ZN10SdBaseFile4syncEv>
   13bc4:	88 23       	and	r24, r24
   13bc6:	09 f4       	brne	.+2      	; 0x13bca <_ZN10SdBaseFile5mkdirEPS_PKh+0x5c>
   13bc8:	67 c0       	rjmp	.+206    	; 0x13c98 <_ZN10SdBaseFile5mkdirEPS_PKh+0x12a>
   13bca:	c8 01       	movw	r24, r16
   13bcc:	61 e0       	ldi	r22, 0x01	; 1
   13bce:	0e 94 2f 94 	call	0x1285e	; 0x1285e <_ZN10SdBaseFile13cacheDirEntryEh>
   13bd2:	dc 01       	movw	r26, r24
   13bd4:	00 97       	sbiw	r24, 0x00	; 0
   13bd6:	09 f4       	brne	.+2      	; 0x13bda <_ZN10SdBaseFile5mkdirEPS_PKh+0x6c>
   13bd8:	5f c0       	rjmp	.+190    	; 0x13c98 <_ZN10SdBaseFile5mkdirEPS_PKh+0x12a>
   13bda:	80 e1       	ldi	r24, 0x10	; 16
   13bdc:	1b 96       	adiw	r26, 0x0b	; 11
   13bde:	8c 93       	st	X, r24
   13be0:	1b 97       	sbiw	r26, 0x0b	; 11
   13be2:	ae 01       	movw	r20, r28
   13be4:	4f 5f       	subi	r20, 0xFF	; 255
   13be6:	5f 4f       	sbci	r21, 0xFF	; 255
   13be8:	cd 01       	movw	r24, r26
   13bea:	20 e2       	ldi	r18, 0x20	; 32
   13bec:	fc 01       	movw	r30, r24
   13bee:	01 90       	ld	r0, Z+
   13bf0:	cf 01       	movw	r24, r30
   13bf2:	fa 01       	movw	r30, r20
   13bf4:	01 92       	st	Z+, r0
   13bf6:	af 01       	movw	r20, r30
   13bf8:	21 50       	subi	r18, 0x01	; 1
   13bfa:	c1 f7       	brne	.-16     	; 0x13bec <_ZN10SdBaseFile5mkdirEPS_PKh+0x7e>
   13bfc:	54 96       	adiw	r26, 0x14	; 20
   13bfe:	ad 90       	ld	r10, X+
   13c00:	bc 90       	ld	r11, X
   13c02:	55 97       	sbiw	r26, 0x15	; 21
   13c04:	5a 96       	adiw	r26, 0x1a	; 26
   13c06:	cd 90       	ld	r12, X+
   13c08:	dc 90       	ld	r13, X
   13c0a:	5b 97       	sbiw	r26, 0x1b	; 27
   13c0c:	8e e2       	ldi	r24, 0x2E	; 46
   13c0e:	89 83       	std	Y+1, r24	; 0x01
   13c10:	fe 01       	movw	r30, r28
   13c12:	32 96       	adiw	r30, 0x02	; 2
   13c14:	8a e0       	ldi	r24, 0x0A	; 10
   13c16:	90 e2       	ldi	r25, 0x20	; 32
   13c18:	91 93       	st	Z+, r25
   13c1a:	81 50       	subi	r24, 0x01	; 1
   13c1c:	e9 f7       	brne	.-6      	; 0x13c18 <_ZN10SdBaseFile5mkdirEPS_PKh+0xaa>
   13c1e:	f8 01       	movw	r30, r16
   13c20:	47 89       	ldd	r20, Z+23	; 0x17
   13c22:	50 8d       	ldd	r21, Z+24	; 0x18
   13c24:	61 8d       	ldd	r22, Z+25	; 0x19
   13c26:	72 8d       	ldd	r23, Z+26	; 0x1a
   13c28:	85 81       	ldd	r24, Z+5	; 0x05
   13c2a:	96 81       	ldd	r25, Z+6	; 0x06
   13c2c:	0e 94 78 a2 	call	0x144f0	; 0x144f0 <_ZNK8SdVolume17clusterStartBlockEm>
   13c30:	41 e0       	ldi	r20, 0x01	; 1
   13c32:	0e 94 21 a2 	call	0x14442	; 0x14442 <_ZN8SdVolume10cacheFetchEmh>
   13c36:	00 97       	sbiw	r24, 0x00	; 0
   13c38:	79 f1       	breq	.+94     	; 0x13c98 <_ZN10SdBaseFile5mkdirEPS_PKh+0x12a>
   13c3a:	dc 01       	movw	r26, r24
   13c3c:	fe 01       	movw	r30, r28
   13c3e:	31 96       	adiw	r30, 0x01	; 1
   13c40:	20 e2       	ldi	r18, 0x20	; 32
   13c42:	01 90       	ld	r0, Z+
   13c44:	0d 92       	st	X+, r0
   13c46:	21 50       	subi	r18, 0x01	; 1
   13c48:	e1 f7       	brne	.-8      	; 0x13c42 <_ZN10SdBaseFile5mkdirEPS_PKh+0xd4>
   13c4a:	fc 01       	movw	r30, r24
   13c4c:	a4 8a       	std	Z+20, r10	; 0x14
   13c4e:	b5 8a       	std	Z+21, r11	; 0x15
   13c50:	c2 8e       	std	Z+26, r12	; 0x1a
   13c52:	d3 8e       	std	Z+27, r13	; 0x1b
   13c54:	2e e2       	ldi	r18, 0x2E	; 46
   13c56:	2a 83       	std	Y+2, r18	; 0x02
   13c58:	f7 01       	movw	r30, r14
   13c5a:	23 81       	ldd	r18, Z+3	; 0x03
   13c5c:	22 50       	subi	r18, 0x02	; 2
   13c5e:	22 30       	cpi	r18, 0x02	; 2
   13c60:	30 f0       	brcs	.+12     	; 0x13c6e <_ZN10SdBaseFile5mkdirEPS_PKh+0x100>
   13c62:	07 89       	ldd	r16, Z+23	; 0x17
   13c64:	10 8d       	ldd	r17, Z+24	; 0x18
   13c66:	21 8d       	ldd	r18, Z+25	; 0x19
   13c68:	32 8d       	ldd	r19, Z+26	; 0x1a
   13c6a:	a8 01       	movw	r20, r16
   13c6c:	04 c0       	rjmp	.+8      	; 0x13c76 <_ZN10SdBaseFile5mkdirEPS_PKh+0x108>
   13c6e:	40 e0       	ldi	r20, 0x00	; 0
   13c70:	50 e0       	ldi	r21, 0x00	; 0
   13c72:	20 e0       	ldi	r18, 0x00	; 0
   13c74:	30 e0       	ldi	r19, 0x00	; 0
   13c76:	fc 01       	movw	r30, r24
   13c78:	b0 96       	adiw	r30, 0x20	; 32
   13c7a:	de 01       	movw	r26, r28
   13c7c:	11 96       	adiw	r26, 0x01	; 1
   13c7e:	60 e2       	ldi	r22, 0x20	; 32
   13c80:	0d 90       	ld	r0, X+
   13c82:	01 92       	st	Z+, r0
   13c84:	61 50       	subi	r22, 0x01	; 1
   13c86:	e1 f7       	brne	.-8      	; 0x13c80 <_ZN10SdBaseFile5mkdirEPS_PKh+0x112>
   13c88:	fc 01       	movw	r30, r24
   13c8a:	24 ab       	std	Z+52, r18	; 0x34
   13c8c:	35 ab       	std	Z+53, r19	; 0x35
   13c8e:	42 af       	std	Z+58, r20	; 0x3a
   13c90:	53 af       	std	Z+59, r21	; 0x3b
   13c92:	0e 94 da a1 	call	0x143b4	; 0x143b4 <_ZN8SdVolume9cacheSyncEv>
   13c96:	01 c0       	rjmp	.+2      	; 0x13c9a <_ZN10SdBaseFile5mkdirEPS_PKh+0x12c>
   13c98:	80 e0       	ldi	r24, 0x00	; 0
   13c9a:	a0 96       	adiw	r28, 0x20	; 32
   13c9c:	cd bf       	out	0x3d, r28	; 61
   13c9e:	de bf       	out	0x3e, r29	; 62
   13ca0:	df 91       	pop	r29
   13ca2:	cf 91       	pop	r28
   13ca4:	1f 91       	pop	r17
   13ca6:	0f 91       	pop	r16
   13ca8:	ff 90       	pop	r15
   13caa:	ef 90       	pop	r14
   13cac:	df 90       	pop	r13
   13cae:	cf 90       	pop	r12
   13cb0:	bf 90       	pop	r11
   13cb2:	af 90       	pop	r10
   13cb4:	08 95       	ret

00013cb6 <_ZN10SdBaseFile5mkdirEPS_PKcb>:
   13cb6:	5f 92       	push	r5
   13cb8:	6f 92       	push	r6
   13cba:	7f 92       	push	r7
   13cbc:	8f 92       	push	r8
   13cbe:	9f 92       	push	r9
   13cc0:	af 92       	push	r10
   13cc2:	bf 92       	push	r11
   13cc4:	cf 92       	push	r12
   13cc6:	df 92       	push	r13
   13cc8:	ef 92       	push	r14
   13cca:	ff 92       	push	r15
   13ccc:	0f 93       	push	r16
   13cce:	1f 93       	push	r17
   13cd0:	cf 93       	push	r28
   13cd2:	df 93       	push	r29
   13cd4:	cd b7       	in	r28, 0x3d	; 61
   13cd6:	de b7       	in	r29, 0x3e	; 62
   13cd8:	c3 54       	subi	r28, 0x43	; 67
   13cda:	d0 40       	sbci	r29, 0x00	; 0
   13cdc:	cd bf       	out	0x3d, r28	; 61
   13cde:	de bf       	out	0x3e, r29	; 62
   13ce0:	4c 01       	movw	r8, r24
   13ce2:	6b 01       	movw	r12, r22
   13ce4:	24 96       	adiw	r28, 0x04	; 4
   13ce6:	4e af       	std	Y+62, r20	; 0x3e
   13ce8:	5f af       	std	Y+63, r21	; 0x3f
   13cea:	24 97       	sbiw	r28, 0x04	; 4
   13cec:	52 2e       	mov	r5, r18
   13cee:	1f a2       	std	Y+39, r1	; 0x27
   13cf0:	1a a6       	std	Y+42, r1	; 0x2a
   13cf2:	1c 86       	std	Y+12, r1	; 0x0c
   13cf4:	1f 86       	std	Y+15, r1	; 0x0f
   13cf6:	61 15       	cp	r22, r1
   13cf8:	71 05       	cpc	r23, r1
   13cfa:	09 f4       	brne	.+2      	; 0x13cfe <_ZN10SdBaseFile5mkdirEPS_PKcb+0x48>
   13cfc:	80 c0       	rjmp	.+256    	; 0x13dfe <_ZN10SdBaseFile5mkdirEPS_PKcb+0x148>
   13cfe:	fc 01       	movw	r30, r24
   13d00:	83 81       	ldd	r24, Z+3	; 0x03
   13d02:	88 23       	and	r24, r24
   13d04:	09 f0       	breq	.+2      	; 0x13d08 <_ZN10SdBaseFile5mkdirEPS_PKcb+0x52>
   13d06:	7b c0       	rjmp	.+246    	; 0x13dfe <_ZN10SdBaseFile5mkdirEPS_PKcb+0x148>
   13d08:	8f c0       	rjmp	.+286    	; 0x13e28 <_ZN10SdBaseFile5mkdirEPS_PKcb+0x172>
   13d0a:	31 96       	adiw	r30, 0x01	; 1
   13d0c:	24 96       	adiw	r28, 0x04	; 4
   13d0e:	ee af       	std	Y+62, r30	; 0x3e
   13d10:	ff af       	std	Y+63, r31	; 0x3f
   13d12:	24 97       	sbiw	r28, 0x04	; 4
   13d14:	24 96       	adiw	r28, 0x04	; 4
   13d16:	ee ad       	ldd	r30, Y+62	; 0x3e
   13d18:	ff ad       	ldd	r31, Y+63	; 0x3f
   13d1a:	24 97       	sbiw	r28, 0x04	; 4
   13d1c:	80 81       	ld	r24, Z
   13d1e:	8f 32       	cpi	r24, 0x2F	; 47
   13d20:	a1 f3       	breq	.-24     	; 0x13d0a <_ZN10SdBaseFile5mkdirEPS_PKcb+0x54>
   13d22:	f6 01       	movw	r30, r12
   13d24:	83 81       	ldd	r24, Z+3	; 0x03
   13d26:	82 50       	subi	r24, 0x02	; 2
   13d28:	82 30       	cpi	r24, 0x02	; 2
   13d2a:	50 f4       	brcc	.+20     	; 0x13d40 <_ZN10SdBaseFile5mkdirEPS_PKcb+0x8a>
   13d2c:	86 01       	movw	r16, r12
   13d2e:	e7 e2       	ldi	r30, 0x27	; 39
   13d30:	ee 2e       	mov	r14, r30
   13d32:	f1 2c       	mov	r15, r1
   13d34:	ec 0e       	add	r14, r28
   13d36:	fd 1e       	adc	r15, r29
   13d38:	37 01       	movw	r6, r14
   13d3a:	be 2c       	mov	r11, r14
   13d3c:	af 2c       	mov	r10, r15
   13d3e:	11 c0       	rjmp	.+34     	; 0x13d62 <_ZN10SdBaseFile5mkdirEPS_PKcb+0xac>
   13d40:	f6 01       	movw	r30, r12
   13d42:	65 81       	ldd	r22, Z+5	; 0x05
   13d44:	76 81       	ldd	r23, Z+6	; 0x06
   13d46:	ce 01       	movw	r24, r28
   13d48:	0c 96       	adiw	r24, 0x0c	; 12
   13d4a:	0e 94 b9 98 	call	0x13172	; 0x13172 <_ZN10SdBaseFile8openRootEP8SdVolume>
   13d4e:	88 23       	and	r24, r24
   13d50:	09 f4       	brne	.+2      	; 0x13d54 <_ZN10SdBaseFile5mkdirEPS_PKcb+0x9e>
   13d52:	55 c0       	rjmp	.+170    	; 0x13dfe <_ZN10SdBaseFile5mkdirEPS_PKcb+0x148>
   13d54:	8e 01       	movw	r16, r28
   13d56:	04 5f       	subi	r16, 0xF4	; 244
   13d58:	1f 4f       	sbci	r17, 0xFF	; 255
   13d5a:	e9 cf       	rjmp	.-46     	; 0x13d2e <_ZN10SdBaseFile5mkdirEPS_PKcb+0x78>
   13d5c:	87 01       	movw	r16, r14
   13d5e:	eb 2c       	mov	r14, r11
   13d60:	fa 2c       	mov	r15, r10
   13d62:	24 96       	adiw	r28, 0x04	; 4
   13d64:	8e ad       	ldd	r24, Y+62	; 0x3e
   13d66:	9f ad       	ldd	r25, Y+63	; 0x3f
   13d68:	24 97       	sbiw	r28, 0x04	; 4
   13d6a:	be 01       	movw	r22, r28
   13d6c:	6f 5f       	subi	r22, 0xFF	; 255
   13d6e:	7f 4f       	sbci	r23, 0xFF	; 255
   13d70:	ae 01       	movw	r20, r28
   13d72:	4e 5b       	subi	r20, 0xBE	; 190
   13d74:	5f 4f       	sbci	r21, 0xFF	; 255
   13d76:	0e 94 86 94 	call	0x1290c	; 0x1290c <_ZN10SdBaseFile10make83NameEPKcPhPS1_>
   13d7a:	88 23       	and	r24, r24
   13d7c:	31 f4       	brne	.+12     	; 0x13d8a <_ZN10SdBaseFile5mkdirEPS_PKcb+0xd4>
   13d7e:	3f c0       	rjmp	.+126    	; 0x13dfe <_ZN10SdBaseFile5mkdirEPS_PKcb+0x148>
   13d80:	31 96       	adiw	r30, 0x01	; 1
   13d82:	24 96       	adiw	r28, 0x04	; 4
   13d84:	ee af       	std	Y+62, r30	; 0x3e
   13d86:	ff af       	std	Y+63, r31	; 0x3f
   13d88:	24 97       	sbiw	r28, 0x04	; 4
   13d8a:	24 96       	adiw	r28, 0x04	; 4
   13d8c:	ee ad       	ldd	r30, Y+62	; 0x3e
   13d8e:	ff ad       	ldd	r31, Y+63	; 0x3f
   13d90:	24 97       	sbiw	r28, 0x04	; 4
   13d92:	80 81       	ld	r24, Z
   13d94:	8f 32       	cpi	r24, 0x2F	; 47
   13d96:	a1 f3       	breq	.-24     	; 0x13d80 <_ZN10SdBaseFile5mkdirEPS_PKcb+0xca>
   13d98:	88 23       	and	r24, r24
   13d9a:	49 f1       	breq	.+82     	; 0x13dee <_ZN10SdBaseFile5mkdirEPS_PKcb+0x138>
   13d9c:	c7 01       	movw	r24, r14
   13d9e:	b8 01       	movw	r22, r16
   13da0:	ae 01       	movw	r20, r28
   13da2:	4f 5f       	subi	r20, 0xFF	; 255
   13da4:	5f 4f       	sbci	r21, 0xFF	; 255
   13da6:	21 e0       	ldi	r18, 0x01	; 1
   13da8:	0e 94 19 9c 	call	0x13832	; 0x13832 <_ZN10SdBaseFile4openEPS_PKhh>
   13dac:	88 23       	and	r24, r24
   13dae:	59 f4       	brne	.+22     	; 0x13dc6 <_ZN10SdBaseFile5mkdirEPS_PKcb+0x110>
   13db0:	55 20       	and	r5, r5
   13db2:	29 f1       	breq	.+74     	; 0x13dfe <_ZN10SdBaseFile5mkdirEPS_PKcb+0x148>
   13db4:	c7 01       	movw	r24, r14
   13db6:	b8 01       	movw	r22, r16
   13db8:	ae 01       	movw	r20, r28
   13dba:	4f 5f       	subi	r20, 0xFF	; 255
   13dbc:	5f 4f       	sbci	r21, 0xFF	; 255
   13dbe:	0e 94 b7 9d 	call	0x13b6e	; 0x13b6e <_ZN10SdBaseFile5mkdirEPS_PKh>
   13dc2:	88 23       	and	r24, r24
   13dc4:	e1 f0       	breq	.+56     	; 0x13dfe <_ZN10SdBaseFile5mkdirEPS_PKcb+0x148>
   13dc6:	0c 15       	cp	r16, r12
   13dc8:	1d 05       	cpc	r17, r13
   13dca:	29 f0       	breq	.+10     	; 0x13dd6 <_ZN10SdBaseFile5mkdirEPS_PKcb+0x120>
   13dcc:	c8 01       	movw	r24, r16
   13dce:	0e 94 01 99 	call	0x13202	; 0x13202 <_ZN10SdBaseFile4syncEv>
   13dd2:	f8 01       	movw	r30, r16
   13dd4:	13 82       	std	Z+3, r1	; 0x03
   13dd6:	e6 14       	cp	r14, r6
   13dd8:	f7 04       	cpc	r15, r7
   13dda:	09 f0       	breq	.+2      	; 0x13dde <_ZN10SdBaseFile5mkdirEPS_PKcb+0x128>
   13ddc:	bf cf       	rjmp	.-130    	; 0x13d5c <_ZN10SdBaseFile5mkdirEPS_PKcb+0xa6>
   13dde:	7c e0       	ldi	r23, 0x0C	; 12
   13de0:	e7 2e       	mov	r14, r23
   13de2:	f1 2c       	mov	r15, r1
   13de4:	ec 0e       	add	r14, r28
   13de6:	fd 1e       	adc	r15, r29
   13de8:	0b 2d       	mov	r16, r11
   13dea:	1a 2d       	mov	r17, r10
   13dec:	ba cf       	rjmp	.-140    	; 0x13d62 <_ZN10SdBaseFile5mkdirEPS_PKcb+0xac>
   13dee:	c4 01       	movw	r24, r8
   13df0:	b8 01       	movw	r22, r16
   13df2:	ae 01       	movw	r20, r28
   13df4:	4f 5f       	subi	r20, 0xFF	; 255
   13df6:	5f 4f       	sbci	r21, 0xFF	; 255
   13df8:	0e 94 b7 9d 	call	0x13b6e	; 0x13b6e <_ZN10SdBaseFile5mkdirEPS_PKh>
   13dfc:	01 c0       	rjmp	.+2      	; 0x13e00 <_ZN10SdBaseFile5mkdirEPS_PKcb+0x14a>
   13dfe:	80 e0       	ldi	r24, 0x00	; 0
   13e00:	cd 5b       	subi	r28, 0xBD	; 189
   13e02:	df 4f       	sbci	r29, 0xFF	; 255
   13e04:	cd bf       	out	0x3d, r28	; 61
   13e06:	de bf       	out	0x3e, r29	; 62
   13e08:	df 91       	pop	r29
   13e0a:	cf 91       	pop	r28
   13e0c:	1f 91       	pop	r17
   13e0e:	0f 91       	pop	r16
   13e10:	ff 90       	pop	r15
   13e12:	ef 90       	pop	r14
   13e14:	df 90       	pop	r13
   13e16:	cf 90       	pop	r12
   13e18:	bf 90       	pop	r11
   13e1a:	af 90       	pop	r10
   13e1c:	9f 90       	pop	r9
   13e1e:	8f 90       	pop	r8
   13e20:	7f 90       	pop	r7
   13e22:	6f 90       	pop	r6
   13e24:	5f 90       	pop	r5
   13e26:	08 95       	ret
   13e28:	24 96       	adiw	r28, 0x04	; 4
   13e2a:	ee ad       	ldd	r30, Y+62	; 0x3e
   13e2c:	ff ad       	ldd	r31, Y+63	; 0x3f
   13e2e:	24 97       	sbiw	r28, 0x04	; 4
   13e30:	80 81       	ld	r24, Z
   13e32:	8f 32       	cpi	r24, 0x2F	; 47
   13e34:	09 f0       	breq	.+2      	; 0x13e38 <_ZN10SdBaseFile5mkdirEPS_PKcb+0x182>
   13e36:	7a cf       	rjmp	.-268    	; 0x13d2c <_ZN10SdBaseFile5mkdirEPS_PKcb+0x76>
   13e38:	6d cf       	rjmp	.-294    	; 0x13d14 <_ZN10SdBaseFile5mkdirEPS_PKcb+0x5e>

00013e3a <_ZN10SdBaseFile5writeEPKvj>:
   13e3a:	2f 92       	push	r2
   13e3c:	3f 92       	push	r3
   13e3e:	4f 92       	push	r4
   13e40:	5f 92       	push	r5
   13e42:	6f 92       	push	r6
   13e44:	7f 92       	push	r7
   13e46:	8f 92       	push	r8
   13e48:	9f 92       	push	r9
   13e4a:	af 92       	push	r10
   13e4c:	bf 92       	push	r11
   13e4e:	df 92       	push	r13
   13e50:	ef 92       	push	r14
   13e52:	ff 92       	push	r15
   13e54:	0f 93       	push	r16
   13e56:	1f 93       	push	r17
   13e58:	cf 93       	push	r28
   13e5a:	df 93       	push	r29
   13e5c:	cd b7       	in	r28, 0x3d	; 61
   13e5e:	de b7       	in	r29, 0x3e	; 62
   13e60:	2a 97       	sbiw	r28, 0x0a	; 10
   13e62:	cd bf       	out	0x3d, r28	; 61
   13e64:	de bf       	out	0x3e, r29	; 62
   13e66:	7c 01       	movw	r14, r24
   13e68:	d6 2e       	mov	r13, r22
   13e6a:	07 2f       	mov	r16, r23
   13e6c:	49 87       	std	Y+9, r20	; 0x09
   13e6e:	5a 87       	std	Y+10, r21	; 0x0a
   13e70:	dc 01       	movw	r26, r24
   13e72:	13 96       	adiw	r26, 0x03	; 3
   13e74:	8c 91       	ld	r24, X
   13e76:	13 97       	sbiw	r26, 0x03	; 3
   13e78:	81 30       	cpi	r24, 0x01	; 1
   13e7a:	09 f0       	breq	.+2      	; 0x13e7e <_ZN10SdBaseFile5writeEPKvj+0x44>
   13e7c:	a1 c1       	rjmp	.+834    	; 0x141c0 <_ZN10SdBaseFile5writeEPKvj+0x386>
   13e7e:	11 96       	adiw	r26, 0x01	; 1
   13e80:	8c 91       	ld	r24, X
   13e82:	11 97       	sbiw	r26, 0x01	; 1
   13e84:	81 ff       	sbrs	r24, 1
   13e86:	9c c1       	rjmp	.+824    	; 0x141c0 <_ZN10SdBaseFile5writeEPKvj+0x386>
   13e88:	b5 c1       	rjmp	.+874    	; 0x141f4 <_ZN10SdBaseFile5writeEPKvj+0x3ba>
   13e8a:	f7 01       	movw	r30, r14
   13e8c:	43 89       	ldd	r20, Z+19	; 0x13
   13e8e:	54 89       	ldd	r21, Z+20	; 0x14
   13e90:	65 89       	ldd	r22, Z+21	; 0x15
   13e92:	76 89       	ldd	r23, Z+22	; 0x16
   13e94:	83 85       	ldd	r24, Z+11	; 0x0b
   13e96:	94 85       	ldd	r25, Z+12	; 0x0c
   13e98:	a5 85       	ldd	r26, Z+13	; 0x0d
   13e9a:	b6 85       	ldd	r27, Z+14	; 0x0e
   13e9c:	84 17       	cp	r24, r20
   13e9e:	95 07       	cpc	r25, r21
   13ea0:	a6 07       	cpc	r26, r22
   13ea2:	b7 07       	cpc	r27, r23
   13ea4:	31 f0       	breq	.+12     	; 0x13eb2 <_ZN10SdBaseFile5writeEPKvj+0x78>
   13ea6:	c7 01       	movw	r24, r14
   13ea8:	0e 94 b2 97 	call	0x12f64	; 0x12f64 <_ZN10SdBaseFile7seekSetEm>
   13eac:	88 23       	and	r24, r24
   13eae:	09 f4       	brne	.+2      	; 0x13eb2 <_ZN10SdBaseFile5writeEPKvj+0x78>
   13eb0:	87 c1       	rjmp	.+782    	; 0x141c0 <_ZN10SdBaseFile5writeEPKvj+0x386>
   13eb2:	29 85       	ldd	r18, Y+9	; 0x09
   13eb4:	3a 85       	ldd	r19, Y+10	; 0x0a
   13eb6:	2f 83       	std	Y+7, r18	; 0x07
   13eb8:	38 87       	std	Y+8, r19	; 0x08
   13eba:	dd 82       	std	Y+5, r13	; 0x05
   13ebc:	0e 83       	std	Y+6, r16	; 0x06
   13ebe:	4a c1       	rjmp	.+660    	; 0x14154 <_ZN10SdBaseFile5writeEPKvj+0x31a>
   13ec0:	f7 01       	movw	r30, r14
   13ec2:	25 81       	ldd	r18, Z+5	; 0x05
   13ec4:	36 81       	ldd	r19, Z+6	; 0x06
   13ec6:	f9 01       	movw	r30, r18
   13ec8:	04 81       	ldd	r16, Z+4	; 0x04
   13eca:	01 50       	subi	r16, 0x01	; 1
   13ecc:	ac 01       	movw	r20, r24
   13ece:	bd 01       	movw	r22, r26
   13ed0:	19 e0       	ldi	r17, 0x09	; 9
   13ed2:	76 95       	lsr	r23
   13ed4:	67 95       	ror	r22
   13ed6:	57 95       	ror	r21
   13ed8:	47 95       	ror	r20
   13eda:	1a 95       	dec	r17
   13edc:	d1 f7       	brne	.-12     	; 0x13ed2 <_ZN10SdBaseFile5writeEPKvj+0x98>
   13ede:	04 23       	and	r16, r20
   13ee0:	4f ef       	ldi	r20, 0xFF	; 255
   13ee2:	44 2e       	mov	r4, r20
   13ee4:	41 e0       	ldi	r20, 0x01	; 1
   13ee6:	54 2e       	mov	r5, r20
   13ee8:	48 22       	and	r4, r24
   13eea:	59 22       	and	r5, r25
   13eec:	00 23       	and	r16, r16
   13eee:	09 f0       	breq	.+2      	; 0x13ef2 <_ZN10SdBaseFile5writeEPKvj+0xb8>
   13ef0:	4a c0       	rjmp	.+148    	; 0x13f86 <_ZN10SdBaseFile5writeEPKvj+0x14c>
   13ef2:	41 14       	cp	r4, r1
   13ef4:	51 04       	cpc	r5, r1
   13ef6:	09 f0       	breq	.+2      	; 0x13efa <_ZN10SdBaseFile5writeEPKvj+0xc0>
   13ef8:	46 c0       	rjmp	.+140    	; 0x13f86 <_ZN10SdBaseFile5writeEPKvj+0x14c>
   13efa:	d7 01       	movw	r26, r14
   13efc:	17 96       	adiw	r26, 0x07	; 7
   13efe:	4d 91       	ld	r20, X+
   13f00:	5d 91       	ld	r21, X+
   13f02:	6d 91       	ld	r22, X+
   13f04:	7c 91       	ld	r23, X
   13f06:	1a 97       	sbiw	r26, 0x0a	; 10
   13f08:	41 15       	cp	r20, r1
   13f0a:	51 05       	cpc	r21, r1
   13f0c:	61 05       	cpc	r22, r1
   13f0e:	71 05       	cpc	r23, r1
   13f10:	31 f1       	breq	.+76     	; 0x13f5e <_ZN10SdBaseFile5writeEPKvj+0x124>
   13f12:	c9 01       	movw	r24, r18
   13f14:	9e 01       	movw	r18, r28
   13f16:	2f 5f       	subi	r18, 0xFF	; 255
   13f18:	3f 4f       	sbci	r19, 0xFF	; 255
   13f1a:	0e 94 9b a2 	call	0x14536	; 0x14536 <_ZN8SdVolume6fatGetEmPm>
   13f1e:	88 23       	and	r24, r24
   13f20:	09 f4       	brne	.+2      	; 0x13f24 <_ZN10SdBaseFile5writeEPKvj+0xea>
   13f22:	4e c1       	rjmp	.+668    	; 0x141c0 <_ZN10SdBaseFile5writeEPKvj+0x386>
   13f24:	89 81       	ldd	r24, Y+1	; 0x01
   13f26:	9a 81       	ldd	r25, Y+2	; 0x02
   13f28:	ab 81       	ldd	r26, Y+3	; 0x03
   13f2a:	bc 81       	ldd	r27, Y+4	; 0x04
   13f2c:	f7 01       	movw	r30, r14
   13f2e:	25 81       	ldd	r18, Z+5	; 0x05
   13f30:	36 81       	ldd	r19, Z+6	; 0x06
   13f32:	f9 01       	movw	r30, r18
   13f34:	27 89       	ldd	r18, Z+23	; 0x17
   13f36:	20 31       	cpi	r18, 0x10	; 16
   13f38:	49 f4       	brne	.+18     	; 0x13f4c <_ZN10SdBaseFile5writeEPKvj+0x112>
   13f3a:	88 3f       	cpi	r24, 0xF8	; 248
   13f3c:	ff ef       	ldi	r31, 0xFF	; 255
   13f3e:	9f 07       	cpc	r25, r31
   13f40:	f0 e0       	ldi	r31, 0x00	; 0
   13f42:	af 07       	cpc	r26, r31
   13f44:	f0 e0       	ldi	r31, 0x00	; 0
   13f46:	bf 07       	cpc	r27, r31
   13f48:	98 f4       	brcc	.+38     	; 0x13f70 <_ZN10SdBaseFile5writeEPKvj+0x136>
   13f4a:	18 c0       	rjmp	.+48     	; 0x13f7c <_ZN10SdBaseFile5writeEPKvj+0x142>
   13f4c:	88 3f       	cpi	r24, 0xF8	; 248
   13f4e:	2f ef       	ldi	r18, 0xFF	; 255
   13f50:	92 07       	cpc	r25, r18
   13f52:	2f ef       	ldi	r18, 0xFF	; 255
   13f54:	a2 07       	cpc	r26, r18
   13f56:	2f e0       	ldi	r18, 0x0F	; 15
   13f58:	b2 07       	cpc	r27, r18
   13f5a:	80 f0       	brcs	.+32     	; 0x13f7c <_ZN10SdBaseFile5writeEPKvj+0x142>
   13f5c:	09 c0       	rjmp	.+18     	; 0x13f70 <_ZN10SdBaseFile5writeEPKvj+0x136>
   13f5e:	f7 01       	movw	r30, r14
   13f60:	87 89       	ldd	r24, Z+23	; 0x17
   13f62:	90 8d       	ldd	r25, Z+24	; 0x18
   13f64:	a1 8d       	ldd	r26, Z+25	; 0x19
   13f66:	b2 8d       	ldd	r27, Z+26	; 0x1a
   13f68:	00 97       	sbiw	r24, 0x00	; 0
   13f6a:	a1 05       	cpc	r26, r1
   13f6c:	b1 05       	cpc	r27, r1
   13f6e:	31 f4       	brne	.+12     	; 0x13f7c <_ZN10SdBaseFile5writeEPKvj+0x142>
   13f70:	c7 01       	movw	r24, r14
   13f72:	0e 94 89 93 	call	0x12712	; 0x12712 <_ZN10SdBaseFile10addClusterEv>
   13f76:	88 23       	and	r24, r24
   13f78:	31 f4       	brne	.+12     	; 0x13f86 <_ZN10SdBaseFile5writeEPKvj+0x14c>
   13f7a:	22 c1       	rjmp	.+580    	; 0x141c0 <_ZN10SdBaseFile5writeEPKvj+0x386>
   13f7c:	f7 01       	movw	r30, r14
   13f7e:	87 83       	std	Z+7, r24	; 0x07
   13f80:	90 87       	std	Z+8, r25	; 0x08
   13f82:	a1 87       	std	Z+9, r26	; 0x09
   13f84:	b2 87       	std	Z+10, r27	; 0x0a
   13f86:	d7 01       	movw	r26, r14
   13f88:	17 96       	adiw	r26, 0x07	; 7
   13f8a:	4d 91       	ld	r20, X+
   13f8c:	5d 91       	ld	r21, X+
   13f8e:	6d 91       	ld	r22, X+
   13f90:	7c 91       	ld	r23, X
   13f92:	1a 97       	sbiw	r26, 0x0a	; 10
   13f94:	15 96       	adiw	r26, 0x05	; 5
   13f96:	8d 91       	ld	r24, X+
   13f98:	9c 91       	ld	r25, X
   13f9a:	16 97       	sbiw	r26, 0x06	; 6
   13f9c:	0e 94 78 a2 	call	0x144f0	; 0x144f0 <_ZNK8SdVolume17clusterStartBlockEm>
   13fa0:	4b 01       	movw	r8, r22
   13fa2:	5c 01       	movw	r10, r24
   13fa4:	80 0e       	add	r8, r16
   13fa6:	91 1c       	adc	r9, r1
   13fa8:	a1 1c       	adc	r10, r1
   13faa:	b1 1c       	adc	r11, r1
   13fac:	41 14       	cp	r4, r1
   13fae:	51 04       	cpc	r5, r1
   13fb0:	a1 f4       	brne	.+40     	; 0x13fda <_ZN10SdBaseFile5writeEPKvj+0x1a0>
   13fb2:	ef 81       	ldd	r30, Y+7	; 0x07
   13fb4:	f8 85       	ldd	r31, Y+8	; 0x08
   13fb6:	22 e0       	ldi	r18, 0x02	; 2
   13fb8:	e0 30       	cpi	r30, 0x00	; 0
   13fba:	f2 07       	cpc	r31, r18
   13fbc:	c8 f5       	brcc	.+114    	; 0x14030 <_ZN10SdBaseFile5writeEPKvj+0x1f6>
   13fbe:	f7 01       	movw	r30, r14
   13fc0:	83 85       	ldd	r24, Z+11	; 0x0b
   13fc2:	94 85       	ldd	r25, Z+12	; 0x0c
   13fc4:	a5 85       	ldd	r26, Z+13	; 0x0d
   13fc6:	b6 85       	ldd	r27, Z+14	; 0x0e
   13fc8:	43 89       	ldd	r20, Z+19	; 0x13
   13fca:	54 89       	ldd	r21, Z+20	; 0x14
   13fcc:	65 89       	ldd	r22, Z+21	; 0x15
   13fce:	76 89       	ldd	r23, Z+22	; 0x16
   13fd0:	84 17       	cp	r24, r20
   13fd2:	95 07       	cpc	r25, r21
   13fd4:	a6 07       	cpc	r26, r22
   13fd6:	b7 07       	cpc	r27, r23
   13fd8:	10 f4       	brcc	.+4      	; 0x13fde <_ZN10SdBaseFile5writeEPKvj+0x1a4>
   13fda:	41 e0       	ldi	r20, 0x01	; 1
   13fdc:	01 c0       	rjmp	.+2      	; 0x13fe0 <_ZN10SdBaseFile5writeEPKvj+0x1a6>
   13fde:	45 e0       	ldi	r20, 0x05	; 5
   13fe0:	c5 01       	movw	r24, r10
   13fe2:	b4 01       	movw	r22, r8
   13fe4:	0e 94 21 a2 	call	0x14442	; 0x14442 <_ZN8SdVolume10cacheFetchEmh>
   13fe8:	9c 01       	movw	r18, r24
   13fea:	00 97       	sbiw	r24, 0x00	; 0
   13fec:	09 f4       	brne	.+2      	; 0x13ff0 <_ZN10SdBaseFile5writeEPKvj+0x1b6>
   13fee:	e8 c0       	rjmp	.+464    	; 0x141c0 <_ZN10SdBaseFile5writeEPKvj+0x386>
   13ff0:	80 e0       	ldi	r24, 0x00	; 0
   13ff2:	92 e0       	ldi	r25, 0x02	; 2
   13ff4:	84 19       	sub	r24, r4
   13ff6:	95 09       	sbc	r25, r5
   13ff8:	2f 80       	ldd	r2, Y+7	; 0x07
   13ffa:	38 84       	ldd	r3, Y+8	; 0x08
   13ffc:	82 15       	cp	r24, r2
   13ffe:	93 05       	cpc	r25, r3
   14000:	08 f4       	brcc	.+2      	; 0x14004 <_ZN10SdBaseFile5writeEPKvj+0x1ca>
   14002:	1c 01       	movw	r2, r24
   14004:	c9 01       	movw	r24, r18
   14006:	84 0d       	add	r24, r4
   14008:	95 1d       	adc	r25, r5
   1400a:	6d 81       	ldd	r22, Y+5	; 0x05
   1400c:	7e 81       	ldd	r23, Y+6	; 0x06
   1400e:	a1 01       	movw	r20, r2
   14010:	0e 94 c7 b0 	call	0x1618e	; 0x1618e <memcpy>
   14014:	c1 01       	movw	r24, r2
   14016:	84 0d       	add	r24, r4
   14018:	95 1d       	adc	r25, r5
   1401a:	f2 e0       	ldi	r31, 0x02	; 2
   1401c:	80 30       	cpi	r24, 0x00	; 0
   1401e:	9f 07       	cpc	r25, r31
   14020:	09 f0       	breq	.+2      	; 0x14024 <_ZN10SdBaseFile5writeEPKvj+0x1ea>
   14022:	7c c0       	rjmp	.+248    	; 0x1411c <_ZN10SdBaseFile5writeEPKvj+0x2e2>
   14024:	0e 94 67 a2 	call	0x144ce	; 0x144ce <_ZN8SdVolume14cacheWriteDataEv>
   14028:	88 23       	and	r24, r24
   1402a:	09 f0       	breq	.+2      	; 0x1402e <_ZN10SdBaseFile5writeEPKvj+0x1f4>
   1402c:	77 c0       	rjmp	.+238    	; 0x1411c <_ZN10SdBaseFile5writeEPKvj+0x2e2>
   1402e:	c8 c0       	rjmp	.+400    	; 0x141c0 <_ZN10SdBaseFile5writeEPKvj+0x386>
   14030:	2f 81       	ldd	r18, Y+7	; 0x07
   14032:	38 85       	ldd	r19, Y+8	; 0x08
   14034:	44 e0       	ldi	r20, 0x04	; 4
   14036:	20 30       	cpi	r18, 0x00	; 0
   14038:	34 07       	cpc	r19, r20
   1403a:	00 f5       	brcc	.+64     	; 0x1407c <_ZN10SdBaseFile5writeEPKvj+0x242>
   1403c:	80 91 ab 25 	lds	r24, 0x25AB
   14040:	90 91 ac 25 	lds	r25, 0x25AC
   14044:	a0 91 ad 25 	lds	r26, 0x25AD
   14048:	b0 91 ae 25 	lds	r27, 0x25AE
   1404c:	88 15       	cp	r24, r8
   1404e:	99 05       	cpc	r25, r9
   14050:	aa 05       	cpc	r26, r10
   14052:	bb 05       	cpc	r27, r11
   14054:	11 f4       	brne	.+4      	; 0x1405a <_ZN10SdBaseFile5writeEPKvj+0x220>
   14056:	0e 94 6a a2 	call	0x144d4	; 0x144d4 <_ZN8SdVolume15cacheInvalidateEv>
   1405a:	80 91 a4 25 	lds	r24, 0x25A4
   1405e:	90 91 a5 25 	lds	r25, 0x25A5
   14062:	b5 01       	movw	r22, r10
   14064:	a4 01       	movw	r20, r8
   14066:	2d 81       	ldd	r18, Y+5	; 0x05
   14068:	3e 81       	ldd	r19, Y+6	; 0x06
   1406a:	0e 94 b1 92 	call	0x12562	; 0x12562 <_ZN7Sd2Card10writeBlockEmPKh>
   1406e:	88 23       	and	r24, r24
   14070:	09 f4       	brne	.+2      	; 0x14074 <_ZN10SdBaseFile5writeEPKvj+0x23a>
   14072:	a6 c0       	rjmp	.+332    	; 0x141c0 <_ZN10SdBaseFile5writeEPKvj+0x386>
   14074:	21 2c       	mov	r2, r1
   14076:	f2 e0       	ldi	r31, 0x02	; 2
   14078:	3f 2e       	mov	r3, r31
   1407a:	50 c0       	rjmp	.+160    	; 0x1411c <_ZN10SdBaseFile5writeEPKvj+0x2e2>
   1407c:	d7 01       	movw	r26, r14
   1407e:	15 96       	adiw	r26, 0x05	; 5
   14080:	ed 91       	ld	r30, X+
   14082:	fc 91       	ld	r31, X
   14084:	16 97       	sbiw	r26, 0x06	; 6
   14086:	84 81       	ldd	r24, Z+4	; 0x04
   14088:	80 1b       	sub	r24, r16
   1408a:	d8 84       	ldd	r13, Y+8	; 0x08
   1408c:	d6 94       	lsr	r13
   1408e:	8d 15       	cp	r24, r13
   14090:	08 f4       	brcc	.+2      	; 0x14094 <_ZN10SdBaseFile5writeEPKvj+0x25a>
   14092:	d8 2e       	mov	r13, r24
   14094:	0d 2d       	mov	r16, r13
   14096:	10 e0       	ldi	r17, 0x00	; 0
   14098:	20 e0       	ldi	r18, 0x00	; 0
   1409a:	30 e0       	ldi	r19, 0x00	; 0
   1409c:	80 91 a4 25 	lds	r24, 0x25A4
   140a0:	90 91 a5 25 	lds	r25, 0x25A5
   140a4:	b5 01       	movw	r22, r10
   140a6:	a4 01       	movw	r20, r8
   140a8:	0e 94 02 93 	call	0x12604	; 0x12604 <_ZN7Sd2Card10writeStartEmm>
   140ac:	88 23       	and	r24, r24
   140ae:	09 f4       	brne	.+2      	; 0x140b2 <_ZN10SdBaseFile5writeEPKvj+0x278>
   140b0:	87 c0       	rjmp	.+270    	; 0x141c0 <_ZN10SdBaseFile5writeEPKvj+0x386>
   140b2:	0d 81       	ldd	r16, Y+5	; 0x05
   140b4:	1e 81       	ldd	r17, Y+6	; 0x06
   140b6:	24 01       	movw	r4, r8
   140b8:	35 01       	movw	r6, r10
   140ba:	20 c0       	rjmp	.+64     	; 0x140fc <_ZN10SdBaseFile5writeEPKvj+0x2c2>
   140bc:	80 91 ab 25 	lds	r24, 0x25AB
   140c0:	90 91 ac 25 	lds	r25, 0x25AC
   140c4:	a0 91 ad 25 	lds	r26, 0x25AD
   140c8:	b0 91 ae 25 	lds	r27, 0x25AE
   140cc:	48 16       	cp	r4, r24
   140ce:	59 06       	cpc	r5, r25
   140d0:	6a 06       	cpc	r6, r26
   140d2:	7b 06       	cpc	r7, r27
   140d4:	11 f4       	brne	.+4      	; 0x140da <_ZN10SdBaseFile5writeEPKvj+0x2a0>
   140d6:	0e 94 6a a2 	call	0x144d4	; 0x144d4 <_ZN8SdVolume15cacheInvalidateEv>
   140da:	80 91 a4 25 	lds	r24, 0x25A4
   140de:	90 91 a5 25 	lds	r25, 0x25A5
   140e2:	b8 01       	movw	r22, r16
   140e4:	0e 94 8b 92 	call	0x12516	; 0x12516 <_ZN7Sd2Card9writeDataEPKh>
   140e8:	00 50       	subi	r16, 0x00	; 0
   140ea:	1e 4f       	sbci	r17, 0xFE	; 254
   140ec:	08 94       	sec
   140ee:	41 1c       	adc	r4, r1
   140f0:	51 1c       	adc	r5, r1
   140f2:	61 1c       	adc	r6, r1
   140f4:	71 1c       	adc	r7, r1
   140f6:	88 23       	and	r24, r24
   140f8:	09 f4       	brne	.+2      	; 0x140fc <_ZN10SdBaseFile5writeEPKvj+0x2c2>
   140fa:	62 c0       	rjmp	.+196    	; 0x141c0 <_ZN10SdBaseFile5writeEPKvj+0x386>
   140fc:	84 2d       	mov	r24, r4
   140fe:	88 19       	sub	r24, r8
   14100:	8d 15       	cp	r24, r13
   14102:	e0 f2       	brcs	.-72     	; 0x140bc <_ZN10SdBaseFile5writeEPKvj+0x282>
   14104:	80 91 a4 25 	lds	r24, 0x25A4
   14108:	90 91 a5 25 	lds	r25, 0x25A5
   1410c:	0e 94 4d 93 	call	0x1269a	; 0x1269a <_ZN7Sd2Card9writeStopEv>
   14110:	88 23       	and	r24, r24
   14112:	09 f4       	brne	.+2      	; 0x14116 <_ZN10SdBaseFile5writeEPKvj+0x2dc>
   14114:	55 c0       	rjmp	.+170    	; 0x141c0 <_ZN10SdBaseFile5writeEPKvj+0x386>
   14116:	3d 2c       	mov	r3, r13
   14118:	33 0c       	add	r3, r3
   1411a:	22 24       	eor	r2, r2
   1411c:	a1 01       	movw	r20, r2
   1411e:	60 e0       	ldi	r22, 0x00	; 0
   14120:	70 e0       	ldi	r23, 0x00	; 0
   14122:	f7 01       	movw	r30, r14
   14124:	83 85       	ldd	r24, Z+11	; 0x0b
   14126:	94 85       	ldd	r25, Z+12	; 0x0c
   14128:	a5 85       	ldd	r26, Z+13	; 0x0d
   1412a:	b6 85       	ldd	r27, Z+14	; 0x0e
   1412c:	84 0f       	add	r24, r20
   1412e:	95 1f       	adc	r25, r21
   14130:	a6 1f       	adc	r26, r22
   14132:	b7 1f       	adc	r27, r23
   14134:	83 87       	std	Z+11, r24	; 0x0b
   14136:	94 87       	std	Z+12, r25	; 0x0c
   14138:	a5 87       	std	Z+13, r26	; 0x0d
   1413a:	b6 87       	std	Z+14, r27	; 0x0e
   1413c:	2d 81       	ldd	r18, Y+5	; 0x05
   1413e:	3e 81       	ldd	r19, Y+6	; 0x06
   14140:	22 0d       	add	r18, r2
   14142:	33 1d       	adc	r19, r3
   14144:	2d 83       	std	Y+5, r18	; 0x05
   14146:	3e 83       	std	Y+6, r19	; 0x06
   14148:	4f 81       	ldd	r20, Y+7	; 0x07
   1414a:	58 85       	ldd	r21, Y+8	; 0x08
   1414c:	42 19       	sub	r20, r2
   1414e:	53 09       	sbc	r21, r3
   14150:	4f 83       	std	Y+7, r20	; 0x07
   14152:	58 87       	std	Y+8, r21	; 0x08
   14154:	f7 01       	movw	r30, r14
   14156:	83 85       	ldd	r24, Z+11	; 0x0b
   14158:	94 85       	ldd	r25, Z+12	; 0x0c
   1415a:	a5 85       	ldd	r26, Z+13	; 0x0d
   1415c:	b6 85       	ldd	r27, Z+14	; 0x0e
   1415e:	2f 81       	ldd	r18, Y+7	; 0x07
   14160:	38 85       	ldd	r19, Y+8	; 0x08
   14162:	21 15       	cp	r18, r1
   14164:	31 05       	cpc	r19, r1
   14166:	09 f0       	breq	.+2      	; 0x1416a <_ZN10SdBaseFile5writeEPKvj+0x330>
   14168:	ab ce       	rjmp	.-682    	; 0x13ec0 <_ZN10SdBaseFile5writeEPKvj+0x86>
   1416a:	43 89       	ldd	r20, Z+19	; 0x13
   1416c:	54 89       	ldd	r21, Z+20	; 0x14
   1416e:	65 89       	ldd	r22, Z+21	; 0x15
   14170:	76 89       	ldd	r23, Z+22	; 0x16
   14172:	48 17       	cp	r20, r24
   14174:	59 07       	cpc	r21, r25
   14176:	6a 07       	cpc	r22, r26
   14178:	7b 07       	cpc	r23, r27
   1417a:	40 f4       	brcc	.+16     	; 0x1418c <_ZN10SdBaseFile5writeEPKvj+0x352>
   1417c:	83 8b       	std	Z+19, r24	; 0x13
   1417e:	94 8b       	std	Z+20, r25	; 0x14
   14180:	a5 8b       	std	Z+21, r26	; 0x15
   14182:	b6 8b       	std	Z+22, r27	; 0x16
   14184:	81 81       	ldd	r24, Z+1	; 0x01
   14186:	80 68       	ori	r24, 0x80	; 128
   14188:	81 83       	std	Z+1, r24	; 0x01
   1418a:	0e c0       	rjmp	.+28     	; 0x141a8 <_ZN10SdBaseFile5writeEPKvj+0x36e>
   1418c:	80 91 a0 25 	lds	r24, 0x25A0
   14190:	90 91 a1 25 	lds	r25, 0x25A1
   14194:	00 97       	sbiw	r24, 0x00	; 0
   14196:	41 f0       	breq	.+16     	; 0x141a8 <_ZN10SdBaseFile5writeEPKvj+0x36e>
   14198:	29 85       	ldd	r18, Y+9	; 0x09
   1419a:	3a 85       	ldd	r19, Y+10	; 0x0a
   1419c:	21 15       	cp	r18, r1
   1419e:	31 05       	cpc	r19, r1
   141a0:	19 f0       	breq	.+6      	; 0x141a8 <_ZN10SdBaseFile5writeEPKvj+0x36e>
   141a2:	81 81       	ldd	r24, Z+1	; 0x01
   141a4:	80 68       	ori	r24, 0x80	; 128
   141a6:	81 83       	std	Z+1, r24	; 0x01
   141a8:	f7 01       	movw	r30, r14
   141aa:	81 81       	ldd	r24, Z+1	; 0x01
   141ac:	83 ff       	sbrs	r24, 3
   141ae:	05 c0       	rjmp	.+10     	; 0x141ba <_ZN10SdBaseFile5writeEPKvj+0x380>
   141b0:	c7 01       	movw	r24, r14
   141b2:	0e 94 01 99 	call	0x13202	; 0x13202 <_ZN10SdBaseFile4syncEv>
   141b6:	88 23       	and	r24, r24
   141b8:	19 f0       	breq	.+6      	; 0x141c0 <_ZN10SdBaseFile5writeEPKvj+0x386>
   141ba:	89 85       	ldd	r24, Y+9	; 0x09
   141bc:	9a 85       	ldd	r25, Y+10	; 0x0a
   141be:	05 c0       	rjmp	.+10     	; 0x141ca <_ZN10SdBaseFile5writeEPKvj+0x390>
   141c0:	81 e0       	ldi	r24, 0x01	; 1
   141c2:	d7 01       	movw	r26, r14
   141c4:	8c 93       	st	X, r24
   141c6:	8f ef       	ldi	r24, 0xFF	; 255
   141c8:	9f ef       	ldi	r25, 0xFF	; 255
   141ca:	2a 96       	adiw	r28, 0x0a	; 10
   141cc:	cd bf       	out	0x3d, r28	; 61
   141ce:	de bf       	out	0x3e, r29	; 62
   141d0:	df 91       	pop	r29
   141d2:	cf 91       	pop	r28
   141d4:	1f 91       	pop	r17
   141d6:	0f 91       	pop	r16
   141d8:	ff 90       	pop	r15
   141da:	ef 90       	pop	r14
   141dc:	df 90       	pop	r13
   141de:	bf 90       	pop	r11
   141e0:	af 90       	pop	r10
   141e2:	9f 90       	pop	r9
   141e4:	8f 90       	pop	r8
   141e6:	7f 90       	pop	r7
   141e8:	6f 90       	pop	r6
   141ea:	5f 90       	pop	r5
   141ec:	4f 90       	pop	r4
   141ee:	3f 90       	pop	r3
   141f0:	2f 90       	pop	r2
   141f2:	08 95       	ret
   141f4:	82 fd       	sbrc	r24, 2
   141f6:	49 ce       	rjmp	.-878    	; 0x13e8a <_ZN10SdBaseFile5writeEPKvj+0x50>
   141f8:	5c ce       	rjmp	.-840    	; 0x13eb2 <_ZN10SdBaseFile5writeEPKvj+0x78>

000141fa <_ZN5SdFat5chdirEb>:
   141fa:	0f 93       	push	r16
   141fc:	1f 93       	push	r17
   141fe:	cf 93       	push	r28
   14200:	df 93       	push	r29
   14202:	ec 01       	movw	r28, r24
   14204:	66 23       	and	r22, r22
   14206:	29 f0       	breq	.+10     	; 0x14212 <_ZN5SdFat5chdirEb+0x18>
   14208:	83 96       	adiw	r24, 0x23	; 35
   1420a:	80 93 a2 25 	sts	0x25A2, r24
   1420e:	90 93 a3 25 	sts	0x25A3, r25
   14212:	8e a1       	ldd	r24, Y+38	; 0x26
   14214:	8e 01       	movw	r16, r28
   14216:	0d 5d       	subi	r16, 0xDD	; 221
   14218:	1f 4f       	sbci	r17, 0xFF	; 255
   1421a:	88 23       	and	r24, r24
   1421c:	19 f0       	breq	.+6      	; 0x14224 <_ZN5SdFat5chdirEb+0x2a>
   1421e:	c8 01       	movw	r24, r16
   14220:	0e 94 4c 99 	call	0x13298	; 0x13298 <_ZN10SdBaseFile5closeEv>
   14224:	be 01       	movw	r22, r28
   14226:	6b 5f       	subi	r22, 0xFB	; 251
   14228:	7f 4f       	sbci	r23, 0xFF	; 255
   1422a:	c8 01       	movw	r24, r16
   1422c:	0e 94 b9 98 	call	0x13172	; 0x13172 <_ZN10SdBaseFile8openRootEP8SdVolume>
   14230:	df 91       	pop	r29
   14232:	cf 91       	pop	r28
   14234:	1f 91       	pop	r17
   14236:	0f 91       	pop	r16
   14238:	08 95       	ret

0001423a <_ZN5SdFat5beginEi>:
   1423a:	ef 92       	push	r14
   1423c:	ff 92       	push	r15
   1423e:	0f 93       	push	r16
   14240:	1f 93       	push	r17
   14242:	cf 93       	push	r28
   14244:	df 93       	push	r29
   14246:	0f 92       	push	r0
   14248:	0f 92       	push	r0
   1424a:	cd b7       	in	r28, 0x3d	; 61
   1424c:	de b7       	in	r29, 0x3e	; 62
   1424e:	7c 01       	movw	r14, r24
   14250:	69 83       	std	Y+1, r22	; 0x01
   14252:	7a 83       	std	Y+2, r23	; 0x02
   14254:	69 81       	ldd	r22, Y+1	; 0x01
   14256:	7a 81       	ldd	r23, Y+2	; 0x02
   14258:	0e 94 06 91 	call	0x1220c	; 0x1220c <_ZN7Sd2Card4initEi>
   1425c:	88 23       	and	r24, r24
   1425e:	b1 f0       	breq	.+44     	; 0x1428c <_ZN5SdFat5beginEi+0x52>
   14260:	87 01       	movw	r16, r14
   14262:	0b 5f       	subi	r16, 0xFB	; 251
   14264:	1f 4f       	sbci	r17, 0xFF	; 255
   14266:	c8 01       	movw	r24, r16
   14268:	b7 01       	movw	r22, r14
   1426a:	41 e0       	ldi	r20, 0x01	; 1
   1426c:	0e 94 f9 a4 	call	0x149f2	; 0x149f2 <_ZN8SdVolume4initEP7Sd2Cardh>
   14270:	88 23       	and	r24, r24
   14272:	39 f4       	brne	.+14     	; 0x14282 <_ZN5SdFat5beginEi+0x48>
   14274:	c8 01       	movw	r24, r16
   14276:	b7 01       	movw	r22, r14
   14278:	40 e0       	ldi	r20, 0x00	; 0
   1427a:	0e 94 f9 a4 	call	0x149f2	; 0x149f2 <_ZN8SdVolume4initEP7Sd2Cardh>
   1427e:	88 23       	and	r24, r24
   14280:	29 f0       	breq	.+10     	; 0x1428c <_ZN5SdFat5beginEi+0x52>
   14282:	c7 01       	movw	r24, r14
   14284:	61 e0       	ldi	r22, 0x01	; 1
   14286:	0e 94 fd a0 	call	0x141fa	; 0x141fa <_ZN5SdFat5chdirEb>
   1428a:	01 c0       	rjmp	.+2      	; 0x1428e <_ZN5SdFat5beginEi+0x54>
   1428c:	80 e0       	ldi	r24, 0x00	; 0
   1428e:	0f 90       	pop	r0
   14290:	0f 90       	pop	r0
   14292:	df 91       	pop	r29
   14294:	cf 91       	pop	r28
   14296:	1f 91       	pop	r17
   14298:	0f 91       	pop	r16
   1429a:	ff 90       	pop	r15
   1429c:	ef 90       	pop	r14
   1429e:	08 95       	ret

000142a0 <_ZN5SdFat5chdirEPKcb>:
   142a0:	ff 92       	push	r15
   142a2:	0f 93       	push	r16
   142a4:	1f 93       	push	r17
   142a6:	cf 93       	push	r28
   142a8:	df 93       	push	r29
   142aa:	cd b7       	in	r28, 0x3d	; 61
   142ac:	de b7       	in	r29, 0x3e	; 62
   142ae:	6b 97       	sbiw	r28, 0x1b	; 27
   142b0:	cd bf       	out	0x3d, r28	; 61
   142b2:	de bf       	out	0x3e, r29	; 62
   142b4:	fb 01       	movw	r30, r22
   142b6:	f4 2e       	mov	r15, r20
   142b8:	19 82       	std	Y+1, r1	; 0x01
   142ba:	1c 82       	std	Y+4, r1	; 0x04
   142bc:	20 81       	ld	r18, Z
   142be:	2f 32       	cpi	r18, 0x2F	; 47
   142c0:	39 f4       	brne	.+14     	; 0x142d0 <_ZN5SdFat5chdirEPKcb+0x30>
   142c2:	21 81       	ldd	r18, Z+1	; 0x01
   142c4:	22 23       	and	r18, r18
   142c6:	21 f4       	brne	.+8      	; 0x142d0 <_ZN5SdFat5chdirEPKcb+0x30>
   142c8:	64 2f       	mov	r22, r20
   142ca:	0e 94 fd a0 	call	0x141fa	; 0x141fa <_ZN5SdFat5chdirEb>
   142ce:	21 c0       	rjmp	.+66     	; 0x14312 <_ZN5SdFat5chdirEPKcb+0x72>
   142d0:	8c 01       	movw	r16, r24
   142d2:	0d 5d       	subi	r16, 0xDD	; 221
   142d4:	1f 4f       	sbci	r17, 0xFF	; 255
   142d6:	ce 01       	movw	r24, r28
   142d8:	01 96       	adiw	r24, 0x01	; 1
   142da:	b8 01       	movw	r22, r16
   142dc:	af 01       	movw	r20, r30
   142de:	21 e0       	ldi	r18, 0x01	; 1
   142e0:	0e 94 dc 9c 	call	0x139b8	; 0x139b8 <_ZN10SdBaseFile4openEPS_PKch>
   142e4:	88 23       	and	r24, r24
   142e6:	91 f0       	breq	.+36     	; 0x1430c <_ZN5SdFat5chdirEPKcb+0x6c>
   142e8:	8c 81       	ldd	r24, Y+4	; 0x04
   142ea:	82 30       	cpi	r24, 0x02	; 2
   142ec:	78 f0       	brcs	.+30     	; 0x1430c <_ZN5SdFat5chdirEPKcb+0x6c>
   142ee:	d8 01       	movw	r26, r16
   142f0:	fe 01       	movw	r30, r28
   142f2:	31 96       	adiw	r30, 0x01	; 1
   142f4:	8b e1       	ldi	r24, 0x1B	; 27
   142f6:	01 90       	ld	r0, Z+
   142f8:	0d 92       	st	X+, r0
   142fa:	81 50       	subi	r24, 0x01	; 1
   142fc:	e1 f7       	brne	.-8      	; 0x142f6 <_ZN5SdFat5chdirEPKcb+0x56>
   142fe:	ff 20       	and	r15, r15
   14300:	39 f0       	breq	.+14     	; 0x14310 <_ZN5SdFat5chdirEPKcb+0x70>
   14302:	00 93 a2 25 	sts	0x25A2, r16
   14306:	10 93 a3 25 	sts	0x25A3, r17
   1430a:	02 c0       	rjmp	.+4      	; 0x14310 <_ZN5SdFat5chdirEPKcb+0x70>
   1430c:	80 e0       	ldi	r24, 0x00	; 0
   1430e:	01 c0       	rjmp	.+2      	; 0x14312 <_ZN5SdFat5chdirEPKcb+0x72>
   14310:	81 e0       	ldi	r24, 0x01	; 1
   14312:	6b 96       	adiw	r28, 0x1b	; 27
   14314:	cd bf       	out	0x3d, r28	; 61
   14316:	de bf       	out	0x3e, r29	; 62
   14318:	df 91       	pop	r29
   1431a:	cf 91       	pop	r28
   1431c:	1f 91       	pop	r17
   1431e:	0f 91       	pop	r16
   14320:	ff 90       	pop	r15
   14322:	08 95       	ret

00014324 <_ZN5SdFat2lsEh>:
   14324:	46 2f       	mov	r20, r22
   14326:	20 91 cc 23 	lds	r18, 0x23CC
   1432a:	30 91 cd 23 	lds	r19, 0x23CD
   1432e:	83 96       	adiw	r24, 0x23	; 35
   14330:	b9 01       	movw	r22, r18
   14332:	20 e0       	ldi	r18, 0x00	; 0
   14334:	0e 94 af 9b 	call	0x1375e	; 0x1375e <_ZN10SdBaseFile2lsEP5Printhh>
   14338:	08 95       	ret

0001433a <_ZN5SdFat5mkdirEPKcb>:
   1433a:	cf 93       	push	r28
   1433c:	df 93       	push	r29
   1433e:	cd b7       	in	r28, 0x3d	; 61
   14340:	de b7       	in	r29, 0x3e	; 62
   14342:	6b 97       	sbiw	r28, 0x1b	; 27
   14344:	cd bf       	out	0x3d, r28	; 61
   14346:	de bf       	out	0x3e, r29	; 62
   14348:	fb 01       	movw	r30, r22
   1434a:	24 2f       	mov	r18, r20
   1434c:	19 82       	std	Y+1, r1	; 0x01
   1434e:	1c 82       	std	Y+4, r1	; 0x04
   14350:	bc 01       	movw	r22, r24
   14352:	6d 5d       	subi	r22, 0xDD	; 221
   14354:	7f 4f       	sbci	r23, 0xFF	; 255
   14356:	ce 01       	movw	r24, r28
   14358:	01 96       	adiw	r24, 0x01	; 1
   1435a:	af 01       	movw	r20, r30
   1435c:	0e 94 5b 9e 	call	0x13cb6	; 0x13cb6 <_ZN10SdBaseFile5mkdirEPS_PKcb>
   14360:	6b 96       	adiw	r28, 0x1b	; 27
   14362:	cd bf       	out	0x3d, r28	; 61
   14364:	de bf       	out	0x3e, r29	; 62
   14366:	df 91       	pop	r29
   14368:	cf 91       	pop	r28
   1436a:	08 95       	ret

0001436c <_ZN5SdFat6removeEPKc>:
   1436c:	83 96       	adiw	r24, 0x23	; 35
   1436e:	0e 94 8e 9d 	call	0x13b1c	; 0x13b1c <_ZN10SdBaseFile6removeEPS_PKc>
   14372:	08 95       	ret

00014374 <_ZN5SdFat5rmdirEPKc>:
   14374:	cf 93       	push	r28
   14376:	df 93       	push	r29
   14378:	cd b7       	in	r28, 0x3d	; 61
   1437a:	de b7       	in	r29, 0x3e	; 62
   1437c:	6b 97       	sbiw	r28, 0x1b	; 27
   1437e:	cd bf       	out	0x3d, r28	; 61
   14380:	de bf       	out	0x3e, r29	; 62
   14382:	19 82       	std	Y+1, r1	; 0x01
   14384:	1c 82       	std	Y+4, r1	; 0x04
   14386:	ce 01       	movw	r24, r28
   14388:	01 96       	adiw	r24, 0x01	; 1
   1438a:	41 e0       	ldi	r20, 0x01	; 1
   1438c:	0e 94 ad 9d 	call	0x13b5a	; 0x13b5a <_ZN10SdBaseFile4openEPKch>
   14390:	88 23       	and	r24, r24
   14392:	29 f0       	breq	.+10     	; 0x1439e <_ZN5SdFat5rmdirEPKc+0x2a>
   14394:	ce 01       	movw	r24, r28
   14396:	01 96       	adiw	r24, 0x01	; 1
   14398:	0e 94 2e 9a 	call	0x1345c	; 0x1345c <_ZN10SdBaseFile5rmdirEv>
   1439c:	01 c0       	rjmp	.+2      	; 0x143a0 <_ZN5SdFat5rmdirEPKc+0x2c>
   1439e:	80 e0       	ldi	r24, 0x00	; 0
   143a0:	6b 96       	adiw	r28, 0x1b	; 27
   143a2:	cd bf       	out	0x3d, r28	; 61
   143a4:	de bf       	out	0x3e, r29	; 62
   143a6:	df 91       	pop	r29
   143a8:	cf 91       	pop	r28
   143aa:	08 95       	ret

000143ac <_ZN6SdFile5writeEPKvj>:
   143ac:	04 96       	adiw	r24, 0x04	; 4
   143ae:	0e 94 1d 9f 	call	0x13e3a	; 0x13e3a <_ZN10SdBaseFile5writeEPKvj>
   143b2:	08 95       	ret

000143b4 <_ZN8SdVolume9cacheSyncEv>:
   143b4:	80 91 aa 25 	lds	r24, 0x25AA
   143b8:	80 ff       	sbrs	r24, 0
   143ba:	3d c0       	rjmp	.+122    	; 0x14436 <_ZN8SdVolume9cacheSyncEv+0x82>
   143bc:	40 91 ab 25 	lds	r20, 0x25AB
   143c0:	50 91 ac 25 	lds	r21, 0x25AC
   143c4:	60 91 ad 25 	lds	r22, 0x25AD
   143c8:	70 91 ae 25 	lds	r23, 0x25AE
   143cc:	80 91 a4 25 	lds	r24, 0x25A4
   143d0:	90 91 a5 25 	lds	r25, 0x25A5
   143d4:	2f ea       	ldi	r18, 0xAF	; 175
   143d6:	35 e2       	ldi	r19, 0x25	; 37
   143d8:	0e 94 b1 92 	call	0x12562	; 0x12562 <_ZN7Sd2Card10writeBlockEmPKh>
   143dc:	88 23       	and	r24, r24
   143de:	69 f1       	breq	.+90     	; 0x1443a <_ZN8SdVolume9cacheSyncEv+0x86>
   143e0:	80 91 aa 25 	lds	r24, 0x25AA
   143e4:	81 ff       	sbrs	r24, 1
   143e6:	22 c0       	rjmp	.+68     	; 0x1442c <_ZN8SdVolume9cacheSyncEv+0x78>
   143e8:	80 91 a6 25 	lds	r24, 0x25A6
   143ec:	90 91 a7 25 	lds	r25, 0x25A7
   143f0:	a0 91 a8 25 	lds	r26, 0x25A8
   143f4:	b0 91 a9 25 	lds	r27, 0x25A9
   143f8:	00 97       	sbiw	r24, 0x00	; 0
   143fa:	a1 05       	cpc	r26, r1
   143fc:	b1 05       	cpc	r27, r1
   143fe:	b1 f0       	breq	.+44     	; 0x1442c <_ZN8SdVolume9cacheSyncEv+0x78>
   14400:	40 91 ab 25 	lds	r20, 0x25AB
   14404:	50 91 ac 25 	lds	r21, 0x25AC
   14408:	60 91 ad 25 	lds	r22, 0x25AD
   1440c:	70 91 ae 25 	lds	r23, 0x25AE
   14410:	48 0f       	add	r20, r24
   14412:	59 1f       	adc	r21, r25
   14414:	6a 1f       	adc	r22, r26
   14416:	7b 1f       	adc	r23, r27
   14418:	80 91 a4 25 	lds	r24, 0x25A4
   1441c:	90 91 a5 25 	lds	r25, 0x25A5
   14420:	2f ea       	ldi	r18, 0xAF	; 175
   14422:	35 e2       	ldi	r19, 0x25	; 37
   14424:	0e 94 b1 92 	call	0x12562	; 0x12562 <_ZN7Sd2Card10writeBlockEmPKh>
   14428:	88 23       	and	r24, r24
   1442a:	49 f0       	breq	.+18     	; 0x1443e <_ZN8SdVolume9cacheSyncEv+0x8a>
   1442c:	80 91 aa 25 	lds	r24, 0x25AA
   14430:	8e 7f       	andi	r24, 0xFE	; 254
   14432:	80 93 aa 25 	sts	0x25AA, r24
   14436:	81 e0       	ldi	r24, 0x01	; 1
   14438:	08 95       	ret
   1443a:	80 e0       	ldi	r24, 0x00	; 0
   1443c:	08 95       	ret
   1443e:	80 e0       	ldi	r24, 0x00	; 0
   14440:	08 95       	ret

00014442 <_ZN8SdVolume10cacheFetchEmh>:
   14442:	cf 92       	push	r12
   14444:	df 92       	push	r13
   14446:	ef 92       	push	r14
   14448:	ff 92       	push	r15
   1444a:	cf 93       	push	r28
   1444c:	6b 01       	movw	r12, r22
   1444e:	7c 01       	movw	r14, r24
   14450:	c4 2f       	mov	r28, r20
   14452:	80 91 ab 25 	lds	r24, 0x25AB
   14456:	90 91 ac 25 	lds	r25, 0x25AC
   1445a:	a0 91 ad 25 	lds	r26, 0x25AD
   1445e:	b0 91 ae 25 	lds	r27, 0x25AE
   14462:	8c 15       	cp	r24, r12
   14464:	9d 05       	cpc	r25, r13
   14466:	ae 05       	cpc	r26, r14
   14468:	bf 05       	cpc	r27, r15
   1446a:	e1 f0       	breq	.+56     	; 0x144a4 <_ZN8SdVolume10cacheFetchEmh+0x62>
   1446c:	0e 94 da a1 	call	0x143b4	; 0x143b4 <_ZN8SdVolume9cacheSyncEv>
   14470:	88 23       	and	r24, r24
   14472:	09 f1       	breq	.+66     	; 0x144b6 <_ZN8SdVolume10cacheFetchEmh+0x74>
   14474:	c2 fd       	sbrc	r28, 2
   14476:	0c c0       	rjmp	.+24     	; 0x14490 <_ZN8SdVolume10cacheFetchEmh+0x4e>
   14478:	80 91 a4 25 	lds	r24, 0x25A4
   1447c:	90 91 a5 25 	lds	r25, 0x25A5
   14480:	b7 01       	movw	r22, r14
   14482:	a6 01       	movw	r20, r12
   14484:	2f ea       	ldi	r18, 0xAF	; 175
   14486:	35 e2       	ldi	r19, 0x25	; 37
   14488:	0e 94 d2 90 	call	0x121a4	; 0x121a4 <_ZN7Sd2Card9readBlockEmPh>
   1448c:	88 23       	and	r24, r24
   1448e:	99 f0       	breq	.+38     	; 0x144b6 <_ZN8SdVolume10cacheFetchEmh+0x74>
   14490:	10 92 aa 25 	sts	0x25AA, r1
   14494:	c0 92 ab 25 	sts	0x25AB, r12
   14498:	d0 92 ac 25 	sts	0x25AC, r13
   1449c:	e0 92 ad 25 	sts	0x25AD, r14
   144a0:	f0 92 ae 25 	sts	0x25AE, r15
   144a4:	c3 70       	andi	r28, 0x03	; 3
   144a6:	80 91 aa 25 	lds	r24, 0x25AA
   144aa:	8c 2b       	or	r24, r28
   144ac:	80 93 aa 25 	sts	0x25AA, r24
   144b0:	8f ea       	ldi	r24, 0xAF	; 175
   144b2:	95 e2       	ldi	r25, 0x25	; 37
   144b4:	02 c0       	rjmp	.+4      	; 0x144ba <_ZN8SdVolume10cacheFetchEmh+0x78>
   144b6:	80 e0       	ldi	r24, 0x00	; 0
   144b8:	90 e0       	ldi	r25, 0x00	; 0
   144ba:	cf 91       	pop	r28
   144bc:	ff 90       	pop	r15
   144be:	ef 90       	pop	r14
   144c0:	df 90       	pop	r13
   144c2:	cf 90       	pop	r12
   144c4:	08 95       	ret

000144c6 <_ZN8SdVolume13cacheFetchFatEmh>:
   144c6:	42 60       	ori	r20, 0x02	; 2
   144c8:	0e 94 21 a2 	call	0x14442	; 0x14442 <_ZN8SdVolume10cacheFetchEmh>
   144cc:	08 95       	ret

000144ce <_ZN8SdVolume14cacheWriteDataEv>:
   144ce:	0e 94 da a1 	call	0x143b4	; 0x143b4 <_ZN8SdVolume9cacheSyncEv>
   144d2:	08 95       	ret

000144d4 <_ZN8SdVolume15cacheInvalidateEv>:
   144d4:	8f ef       	ldi	r24, 0xFF	; 255
   144d6:	9f ef       	ldi	r25, 0xFF	; 255
   144d8:	dc 01       	movw	r26, r24
   144da:	80 93 ab 25 	sts	0x25AB, r24
   144de:	90 93 ac 25 	sts	0x25AC, r25
   144e2:	a0 93 ad 25 	sts	0x25AD, r26
   144e6:	b0 93 ae 25 	sts	0x25AE, r27
   144ea:	10 92 aa 25 	sts	0x25AA, r1
   144ee:	08 95       	ret

000144f0 <_ZNK8SdVolume17clusterStartBlockEm>:
   144f0:	0f 93       	push	r16
   144f2:	1f 93       	push	r17
   144f4:	cf 93       	push	r28
   144f6:	df 93       	push	r29
   144f8:	ec 01       	movw	r28, r24
   144fa:	db 01       	movw	r26, r22
   144fc:	ca 01       	movw	r24, r20
   144fe:	02 97       	sbiw	r24, 0x02	; 2
   14500:	a1 09       	sbc	r26, r1
   14502:	b1 09       	sbc	r27, r1
   14504:	2c 81       	ldd	r18, Y+4	; 0x04
   14506:	30 e0       	ldi	r19, 0x00	; 0
   14508:	40 e0       	ldi	r20, 0x00	; 0
   1450a:	50 e0       	ldi	r21, 0x00	; 0
   1450c:	bc 01       	movw	r22, r24
   1450e:	cd 01       	movw	r24, r26
   14510:	0e 94 e1 b3 	call	0x167c2	; 0x167c2 <__mulsi3>
   14514:	8b 01       	movw	r16, r22
   14516:	9c 01       	movw	r18, r24
   14518:	8e 85       	ldd	r24, Y+14	; 0x0e
   1451a:	9f 85       	ldd	r25, Y+15	; 0x0f
   1451c:	a8 89       	ldd	r26, Y+16	; 0x10
   1451e:	b9 89       	ldd	r27, Y+17	; 0x11
   14520:	08 0f       	add	r16, r24
   14522:	19 1f       	adc	r17, r25
   14524:	2a 1f       	adc	r18, r26
   14526:	3b 1f       	adc	r19, r27
   14528:	b8 01       	movw	r22, r16
   1452a:	c9 01       	movw	r24, r18
   1452c:	df 91       	pop	r29
   1452e:	cf 91       	pop	r28
   14530:	1f 91       	pop	r17
   14532:	0f 91       	pop	r16
   14534:	08 95       	ret

00014536 <_ZN8SdVolume6fatGetEmPm>:
   14536:	cf 92       	push	r12
   14538:	df 92       	push	r13
   1453a:	ef 92       	push	r14
   1453c:	ff 92       	push	r15
   1453e:	0f 93       	push	r16
   14540:	1f 93       	push	r17
   14542:	cf 93       	push	r28
   14544:	df 93       	push	r29
   14546:	ec 01       	movw	r28, r24
   14548:	6a 01       	movw	r12, r20
   1454a:	7b 01       	movw	r14, r22
   1454c:	89 01       	movw	r16, r18
   1454e:	42 30       	cpi	r20, 0x02	; 2
   14550:	51 05       	cpc	r21, r1
   14552:	61 05       	cpc	r22, r1
   14554:	71 05       	cpc	r23, r1
   14556:	08 f4       	brcc	.+2      	; 0x1455a <_ZN8SdVolume6fatGetEmPm+0x24>
   14558:	60 c0       	rjmp	.+192    	; 0x1461a <_ZN8SdVolume6fatGetEmPm+0xe4>
   1455a:	89 85       	ldd	r24, Y+9	; 0x09
   1455c:	9a 85       	ldd	r25, Y+10	; 0x0a
   1455e:	ab 85       	ldd	r26, Y+11	; 0x0b
   14560:	bc 85       	ldd	r27, Y+12	; 0x0c
   14562:	01 96       	adiw	r24, 0x01	; 1
   14564:	a1 1d       	adc	r26, r1
   14566:	b1 1d       	adc	r27, r1
   14568:	84 17       	cp	r24, r20
   1456a:	95 07       	cpc	r25, r21
   1456c:	a6 07       	cpc	r26, r22
   1456e:	b7 07       	cpc	r27, r23
   14570:	08 f4       	brcc	.+2      	; 0x14574 <_ZN8SdVolume6fatGetEmPm+0x3e>
   14572:	53 c0       	rjmp	.+166    	; 0x1461a <_ZN8SdVolume6fatGetEmPm+0xe4>
   14574:	8f 89       	ldd	r24, Y+23	; 0x17
   14576:	80 31       	cpi	r24, 0x10	; 16
   14578:	29 f4       	brne	.+10     	; 0x14584 <_ZN8SdVolume6fatGetEmPm+0x4e>
   1457a:	bb 27       	eor	r27, r27
   1457c:	a7 2f       	mov	r26, r23
   1457e:	96 2f       	mov	r25, r22
   14580:	85 2f       	mov	r24, r21
   14582:	0c c0       	rjmp	.+24     	; 0x1459c <_ZN8SdVolume6fatGetEmPm+0x66>
   14584:	80 32       	cpi	r24, 0x20	; 32
   14586:	09 f0       	breq	.+2      	; 0x1458a <_ZN8SdVolume6fatGetEmPm+0x54>
   14588:	48 c0       	rjmp	.+144    	; 0x1461a <_ZN8SdVolume6fatGetEmPm+0xe4>
   1458a:	db 01       	movw	r26, r22
   1458c:	ca 01       	movw	r24, r20
   1458e:	e7 e0       	ldi	r30, 0x07	; 7
   14590:	b6 95       	lsr	r27
   14592:	a7 95       	ror	r26
   14594:	97 95       	ror	r25
   14596:	87 95       	ror	r24
   14598:	ea 95       	dec	r30
   1459a:	d1 f7       	brne	.-12     	; 0x14590 <_ZN8SdVolume6fatGetEmPm+0x5a>
   1459c:	4b 89       	ldd	r20, Y+19	; 0x13
   1459e:	5c 89       	ldd	r21, Y+20	; 0x14
   145a0:	6d 89       	ldd	r22, Y+21	; 0x15
   145a2:	7e 89       	ldd	r23, Y+22	; 0x16
   145a4:	84 0f       	add	r24, r20
   145a6:	95 1f       	adc	r25, r21
   145a8:	a6 1f       	adc	r26, r22
   145aa:	b7 1f       	adc	r27, r23
   145ac:	bc 01       	movw	r22, r24
   145ae:	cd 01       	movw	r24, r26
   145b0:	40 e0       	ldi	r20, 0x00	; 0
   145b2:	0e 94 63 a2 	call	0x144c6	; 0x144c6 <_ZN8SdVolume13cacheFetchFatEmh>
   145b6:	00 97       	sbiw	r24, 0x00	; 0
   145b8:	81 f1       	breq	.+96     	; 0x1461a <_ZN8SdVolume6fatGetEmPm+0xe4>
   145ba:	2f 89       	ldd	r18, Y+23	; 0x17
   145bc:	20 31       	cpi	r18, 0x10	; 16
   145be:	91 f4       	brne	.+36     	; 0x145e4 <_ZN8SdVolume6fatGetEmPm+0xae>
   145c0:	2f ef       	ldi	r18, 0xFF	; 255
   145c2:	30 e0       	ldi	r19, 0x00	; 0
   145c4:	40 e0       	ldi	r20, 0x00	; 0
   145c6:	50 e0       	ldi	r21, 0x00	; 0
   145c8:	c2 22       	and	r12, r18
   145ca:	d3 22       	and	r13, r19
   145cc:	e4 22       	and	r14, r20
   145ce:	f5 22       	and	r15, r21
   145d0:	cc 0c       	add	r12, r12
   145d2:	dd 1c       	adc	r13, r13
   145d4:	c8 0e       	add	r12, r24
   145d6:	d9 1e       	adc	r13, r25
   145d8:	f6 01       	movw	r30, r12
   145da:	80 81       	ld	r24, Z
   145dc:	91 81       	ldd	r25, Z+1	; 0x01
   145de:	a0 e0       	ldi	r26, 0x00	; 0
   145e0:	b0 e0       	ldi	r27, 0x00	; 0
   145e2:	14 c0       	rjmp	.+40     	; 0x1460c <_ZN8SdVolume6fatGetEmPm+0xd6>
   145e4:	2f e7       	ldi	r18, 0x7F	; 127
   145e6:	30 e0       	ldi	r19, 0x00	; 0
   145e8:	40 e0       	ldi	r20, 0x00	; 0
   145ea:	50 e0       	ldi	r21, 0x00	; 0
   145ec:	c2 22       	and	r12, r18
   145ee:	d3 22       	and	r13, r19
   145f0:	e4 22       	and	r14, r20
   145f2:	f5 22       	and	r15, r21
   145f4:	cc 0c       	add	r12, r12
   145f6:	dd 1c       	adc	r13, r13
   145f8:	cc 0c       	add	r12, r12
   145fa:	dd 1c       	adc	r13, r13
   145fc:	c8 0e       	add	r12, r24
   145fe:	d9 1e       	adc	r13, r25
   14600:	f6 01       	movw	r30, r12
   14602:	80 81       	ld	r24, Z
   14604:	91 81       	ldd	r25, Z+1	; 0x01
   14606:	a2 81       	ldd	r26, Z+2	; 0x02
   14608:	b3 81       	ldd	r27, Z+3	; 0x03
   1460a:	bf 70       	andi	r27, 0x0F	; 15
   1460c:	f8 01       	movw	r30, r16
   1460e:	80 83       	st	Z, r24
   14610:	91 83       	std	Z+1, r25	; 0x01
   14612:	a2 83       	std	Z+2, r26	; 0x02
   14614:	b3 83       	std	Z+3, r27	; 0x03
   14616:	81 e0       	ldi	r24, 0x01	; 1
   14618:	01 c0       	rjmp	.+2      	; 0x1461c <_ZN8SdVolume6fatGetEmPm+0xe6>
   1461a:	80 e0       	ldi	r24, 0x00	; 0
   1461c:	df 91       	pop	r29
   1461e:	cf 91       	pop	r28
   14620:	1f 91       	pop	r17
   14622:	0f 91       	pop	r16
   14624:	ff 90       	pop	r15
   14626:	ef 90       	pop	r14
   14628:	df 90       	pop	r13
   1462a:	cf 90       	pop	r12
   1462c:	08 95       	ret

0001462e <_ZN8SdVolume6fatPutEmm>:
   1462e:	8f 92       	push	r8
   14630:	9f 92       	push	r9
   14632:	af 92       	push	r10
   14634:	bf 92       	push	r11
   14636:	cf 92       	push	r12
   14638:	df 92       	push	r13
   1463a:	ef 92       	push	r14
   1463c:	ff 92       	push	r15
   1463e:	0f 93       	push	r16
   14640:	1f 93       	push	r17
   14642:	cf 93       	push	r28
   14644:	df 93       	push	r29
   14646:	ec 01       	movw	r28, r24
   14648:	6a 01       	movw	r12, r20
   1464a:	7b 01       	movw	r14, r22
   1464c:	48 01       	movw	r8, r16
   1464e:	59 01       	movw	r10, r18
   14650:	42 30       	cpi	r20, 0x02	; 2
   14652:	51 05       	cpc	r21, r1
   14654:	61 05       	cpc	r22, r1
   14656:	71 05       	cpc	r23, r1
   14658:	08 f4       	brcc	.+2      	; 0x1465c <_ZN8SdVolume6fatPutEmm+0x2e>
   1465a:	58 c0       	rjmp	.+176    	; 0x1470c <_ZN8SdVolume6fatPutEmm+0xde>
   1465c:	89 85       	ldd	r24, Y+9	; 0x09
   1465e:	9a 85       	ldd	r25, Y+10	; 0x0a
   14660:	ab 85       	ldd	r26, Y+11	; 0x0b
   14662:	bc 85       	ldd	r27, Y+12	; 0x0c
   14664:	01 96       	adiw	r24, 0x01	; 1
   14666:	a1 1d       	adc	r26, r1
   14668:	b1 1d       	adc	r27, r1
   1466a:	84 17       	cp	r24, r20
   1466c:	95 07       	cpc	r25, r21
   1466e:	a6 07       	cpc	r26, r22
   14670:	b7 07       	cpc	r27, r23
   14672:	08 f4       	brcc	.+2      	; 0x14676 <_ZN8SdVolume6fatPutEmm+0x48>
   14674:	4b c0       	rjmp	.+150    	; 0x1470c <_ZN8SdVolume6fatPutEmm+0xde>
   14676:	8f 89       	ldd	r24, Y+23	; 0x17
   14678:	80 31       	cpi	r24, 0x10	; 16
   1467a:	29 f4       	brne	.+10     	; 0x14686 <_ZN8SdVolume6fatPutEmm+0x58>
   1467c:	bb 27       	eor	r27, r27
   1467e:	a7 2f       	mov	r26, r23
   14680:	96 2f       	mov	r25, r22
   14682:	85 2f       	mov	r24, r21
   14684:	0c c0       	rjmp	.+24     	; 0x1469e <_ZN8SdVolume6fatPutEmm+0x70>
   14686:	80 32       	cpi	r24, 0x20	; 32
   14688:	09 f0       	breq	.+2      	; 0x1468c <_ZN8SdVolume6fatPutEmm+0x5e>
   1468a:	40 c0       	rjmp	.+128    	; 0x1470c <_ZN8SdVolume6fatPutEmm+0xde>
   1468c:	db 01       	movw	r26, r22
   1468e:	ca 01       	movw	r24, r20
   14690:	17 e0       	ldi	r17, 0x07	; 7
   14692:	b6 95       	lsr	r27
   14694:	a7 95       	ror	r26
   14696:	97 95       	ror	r25
   14698:	87 95       	ror	r24
   1469a:	1a 95       	dec	r17
   1469c:	d1 f7       	brne	.-12     	; 0x14692 <_ZN8SdVolume6fatPutEmm+0x64>
   1469e:	4b 89       	ldd	r20, Y+19	; 0x13
   146a0:	5c 89       	ldd	r21, Y+20	; 0x14
   146a2:	6d 89       	ldd	r22, Y+21	; 0x15
   146a4:	7e 89       	ldd	r23, Y+22	; 0x16
   146a6:	84 0f       	add	r24, r20
   146a8:	95 1f       	adc	r25, r21
   146aa:	a6 1f       	adc	r26, r22
   146ac:	b7 1f       	adc	r27, r23
   146ae:	bc 01       	movw	r22, r24
   146b0:	cd 01       	movw	r24, r26
   146b2:	41 e0       	ldi	r20, 0x01	; 1
   146b4:	0e 94 63 a2 	call	0x144c6	; 0x144c6 <_ZN8SdVolume13cacheFetchFatEmh>
   146b8:	00 97       	sbiw	r24, 0x00	; 0
   146ba:	41 f1       	breq	.+80     	; 0x1470c <_ZN8SdVolume6fatPutEmm+0xde>
   146bc:	2f 89       	ldd	r18, Y+23	; 0x17
   146be:	20 31       	cpi	r18, 0x10	; 16
   146c0:	81 f4       	brne	.+32     	; 0x146e2 <_ZN8SdVolume6fatPutEmm+0xb4>
   146c2:	2f ef       	ldi	r18, 0xFF	; 255
   146c4:	30 e0       	ldi	r19, 0x00	; 0
   146c6:	40 e0       	ldi	r20, 0x00	; 0
   146c8:	50 e0       	ldi	r21, 0x00	; 0
   146ca:	c2 22       	and	r12, r18
   146cc:	d3 22       	and	r13, r19
   146ce:	e4 22       	and	r14, r20
   146d0:	f5 22       	and	r15, r21
   146d2:	f6 01       	movw	r30, r12
   146d4:	ee 0f       	add	r30, r30
   146d6:	ff 1f       	adc	r31, r31
   146d8:	e8 0f       	add	r30, r24
   146da:	f9 1f       	adc	r31, r25
   146dc:	80 82       	st	Z, r8
   146de:	91 82       	std	Z+1, r9	; 0x01
   146e0:	13 c0       	rjmp	.+38     	; 0x14708 <_ZN8SdVolume6fatPutEmm+0xda>
   146e2:	2f e7       	ldi	r18, 0x7F	; 127
   146e4:	30 e0       	ldi	r19, 0x00	; 0
   146e6:	40 e0       	ldi	r20, 0x00	; 0
   146e8:	50 e0       	ldi	r21, 0x00	; 0
   146ea:	c2 22       	and	r12, r18
   146ec:	d3 22       	and	r13, r19
   146ee:	e4 22       	and	r14, r20
   146f0:	f5 22       	and	r15, r21
   146f2:	f6 01       	movw	r30, r12
   146f4:	ee 0f       	add	r30, r30
   146f6:	ff 1f       	adc	r31, r31
   146f8:	ee 0f       	add	r30, r30
   146fa:	ff 1f       	adc	r31, r31
   146fc:	e8 0f       	add	r30, r24
   146fe:	f9 1f       	adc	r31, r25
   14700:	80 82       	st	Z, r8
   14702:	91 82       	std	Z+1, r9	; 0x01
   14704:	a2 82       	std	Z+2, r10	; 0x02
   14706:	b3 82       	std	Z+3, r11	; 0x03
   14708:	81 e0       	ldi	r24, 0x01	; 1
   1470a:	01 c0       	rjmp	.+2      	; 0x1470e <_ZN8SdVolume6fatPutEmm+0xe0>
   1470c:	80 e0       	ldi	r24, 0x00	; 0
   1470e:	df 91       	pop	r29
   14710:	cf 91       	pop	r28
   14712:	1f 91       	pop	r17
   14714:	0f 91       	pop	r16
   14716:	ff 90       	pop	r15
   14718:	ef 90       	pop	r14
   1471a:	df 90       	pop	r13
   1471c:	cf 90       	pop	r12
   1471e:	bf 90       	pop	r11
   14720:	af 90       	pop	r10
   14722:	9f 90       	pop	r9
   14724:	8f 90       	pop	r8
   14726:	08 95       	ret

00014728 <_ZN8SdVolume15allocContiguousEmPm>:
   14728:	2f 92       	push	r2
   1472a:	3f 92       	push	r3
   1472c:	4f 92       	push	r4
   1472e:	5f 92       	push	r5
   14730:	6f 92       	push	r6
   14732:	7f 92       	push	r7
   14734:	8f 92       	push	r8
   14736:	9f 92       	push	r9
   14738:	af 92       	push	r10
   1473a:	bf 92       	push	r11
   1473c:	cf 92       	push	r12
   1473e:	df 92       	push	r13
   14740:	ef 92       	push	r14
   14742:	ff 92       	push	r15
   14744:	0f 93       	push	r16
   14746:	1f 93       	push	r17
   14748:	cf 93       	push	r28
   1474a:	df 93       	push	r29
   1474c:	cd b7       	in	r28, 0x3d	; 61
   1474e:	de b7       	in	r29, 0x3e	; 62
   14750:	2f 97       	sbiw	r28, 0x0f	; 15
   14752:	cd bf       	out	0x3d, r28	; 61
   14754:	de bf       	out	0x3e, r29	; 62
   14756:	1c 01       	movw	r2, r24
   14758:	4c 87       	std	Y+12, r20	; 0x0c
   1475a:	5d 87       	std	Y+13, r21	; 0x0d
   1475c:	6e 87       	std	Y+14, r22	; 0x0e
   1475e:	7f 87       	std	Y+15, r23	; 0x0f
   14760:	2a 87       	std	Y+10, r18	; 0x0a
   14762:	3b 87       	std	Y+11, r19	; 0x0b
   14764:	dc 01       	movw	r26, r24
   14766:	19 96       	adiw	r26, 0x09	; 9
   14768:	2d 91       	ld	r18, X+
   1476a:	3d 91       	ld	r19, X+
   1476c:	4d 91       	ld	r20, X+
   1476e:	5c 91       	ld	r21, X
   14770:	1c 97       	sbiw	r26, 0x0c	; 12
   14772:	2f 5f       	subi	r18, 0xFF	; 255
   14774:	3f 4f       	sbci	r19, 0xFF	; 255
   14776:	4f 4f       	sbci	r20, 0xFF	; 255
   14778:	5f 4f       	sbci	r21, 0xFF	; 255
   1477a:	2e 83       	std	Y+6, r18	; 0x06
   1477c:	3f 83       	std	Y+7, r19	; 0x07
   1477e:	48 87       	std	Y+8, r20	; 0x08
   14780:	59 87       	std	Y+9, r21	; 0x09
   14782:	ea 85       	ldd	r30, Y+10	; 0x0a
   14784:	fb 85       	ldd	r31, Y+11	; 0x0b
   14786:	40 80       	ld	r4, Z
   14788:	51 80       	ldd	r5, Z+1	; 0x01
   1478a:	62 80       	ldd	r6, Z+2	; 0x02
   1478c:	73 80       	ldd	r7, Z+3	; 0x03
   1478e:	41 14       	cp	r4, r1
   14790:	51 04       	cpc	r5, r1
   14792:	61 04       	cpc	r6, r1
   14794:	71 04       	cpc	r7, r1
   14796:	31 f0       	breq	.+12     	; 0x147a4 <_ZN8SdVolume15allocContiguousEmPm+0x7c>
   14798:	08 94       	sec
   1479a:	41 1c       	adc	r4, r1
   1479c:	51 1c       	adc	r5, r1
   1479e:	61 1c       	adc	r6, r1
   147a0:	71 1c       	adc	r7, r1
   147a2:	10 c0       	rjmp	.+32     	; 0x147c4 <_ZN8SdVolume15allocContiguousEmPm+0x9c>
   147a4:	dc 01       	movw	r26, r24
   147a6:	4d 90       	ld	r4, X+
   147a8:	5d 90       	ld	r5, X+
   147aa:	6d 90       	ld	r6, X+
   147ac:	7c 90       	ld	r7, X
   147ae:	b1 e0       	ldi	r27, 0x01	; 1
   147b0:	bd 83       	std	Y+5, r27	; 0x05
   147b2:	2c 85       	ldd	r18, Y+12	; 0x0c
   147b4:	3d 85       	ldd	r19, Y+13	; 0x0d
   147b6:	4e 85       	ldd	r20, Y+14	; 0x0e
   147b8:	5f 85       	ldd	r21, Y+15	; 0x0f
   147ba:	21 30       	cpi	r18, 0x01	; 1
   147bc:	31 05       	cpc	r19, r1
   147be:	41 05       	cpc	r20, r1
   147c0:	51 05       	cpc	r21, r1
   147c2:	09 f0       	breq	.+2      	; 0x147c6 <_ZN8SdVolume15allocContiguousEmPm+0x9e>
   147c4:	1d 82       	std	Y+5, r1	; 0x05
   147c6:	53 01       	movw	r10, r6
   147c8:	42 01       	movw	r8, r4
   147ca:	cc 24       	eor	r12, r12
   147cc:	dd 24       	eor	r13, r13
   147ce:	76 01       	movw	r14, r12
   147d0:	f1 01       	movw	r30, r2
   147d2:	81 85       	ldd	r24, Z+9	; 0x09
   147d4:	92 85       	ldd	r25, Z+10	; 0x0a
   147d6:	a3 85       	ldd	r26, Z+11	; 0x0b
   147d8:	b4 85       	ldd	r27, Z+12	; 0x0c
   147da:	c8 16       	cp	r12, r24
   147dc:	d9 06       	cpc	r13, r25
   147de:	ea 06       	cpc	r14, r26
   147e0:	fb 06       	cpc	r15, r27
   147e2:	08 f0       	brcs	.+2      	; 0x147e6 <_ZN8SdVolume15allocContiguousEmPm+0xbe>
   147e4:	93 c0       	rjmp	.+294    	; 0x1490c <_ZN8SdVolume15allocContiguousEmPm+0x1e4>
   147e6:	2e 81       	ldd	r18, Y+6	; 0x06
   147e8:	3f 81       	ldd	r19, Y+7	; 0x07
   147ea:	48 85       	ldd	r20, Y+8	; 0x08
   147ec:	59 85       	ldd	r21, Y+9	; 0x09
   147ee:	28 15       	cp	r18, r8
   147f0:	39 05       	cpc	r19, r9
   147f2:	4a 05       	cpc	r20, r10
   147f4:	5b 05       	cpc	r21, r11
   147f6:	50 f4       	brcc	.+20     	; 0x1480c <_ZN8SdVolume15allocContiguousEmPm+0xe4>
   147f8:	82 e0       	ldi	r24, 0x02	; 2
   147fa:	88 2e       	mov	r8, r24
   147fc:	91 2c       	mov	r9, r1
   147fe:	a1 2c       	mov	r10, r1
   14800:	b1 2c       	mov	r11, r1
   14802:	92 e0       	ldi	r25, 0x02	; 2
   14804:	49 2e       	mov	r4, r25
   14806:	51 2c       	mov	r5, r1
   14808:	61 2c       	mov	r6, r1
   1480a:	71 2c       	mov	r7, r1
   1480c:	c1 01       	movw	r24, r2
   1480e:	b5 01       	movw	r22, r10
   14810:	a4 01       	movw	r20, r8
   14812:	9e 01       	movw	r18, r28
   14814:	2f 5f       	subi	r18, 0xFF	; 255
   14816:	3f 4f       	sbci	r19, 0xFF	; 255
   14818:	0e 94 9b a2 	call	0x14536	; 0x14536 <_ZN8SdVolume6fatGetEmPm>
   1481c:	88 23       	and	r24, r24
   1481e:	09 f4       	brne	.+2      	; 0x14822 <_ZN8SdVolume15allocContiguousEmPm+0xfa>
   14820:	75 c0       	rjmp	.+234    	; 0x1490c <_ZN8SdVolume15allocContiguousEmPm+0x1e4>
   14822:	49 81       	ldd	r20, Y+1	; 0x01
   14824:	5a 81       	ldd	r21, Y+2	; 0x02
   14826:	6b 81       	ldd	r22, Y+3	; 0x03
   14828:	7c 81       	ldd	r23, Y+4	; 0x04
   1482a:	d5 01       	movw	r26, r10
   1482c:	c4 01       	movw	r24, r8
   1482e:	01 96       	adiw	r24, 0x01	; 1
   14830:	a1 1d       	adc	r26, r1
   14832:	b1 1d       	adc	r27, r1
   14834:	41 15       	cp	r20, r1
   14836:	51 05       	cpc	r21, r1
   14838:	61 05       	cpc	r22, r1
   1483a:	71 05       	cpc	r23, r1
   1483c:	19 f0       	breq	.+6      	; 0x14844 <_ZN8SdVolume15allocContiguousEmPm+0x11c>
   1483e:	2c 01       	movw	r4, r24
   14840:	3d 01       	movw	r6, r26
   14842:	0d c0       	rjmp	.+26     	; 0x1485e <_ZN8SdVolume15allocContiguousEmPm+0x136>
   14844:	84 19       	sub	r24, r4
   14846:	95 09       	sbc	r25, r5
   14848:	a6 09       	sbc	r26, r6
   1484a:	b7 09       	sbc	r27, r7
   1484c:	2c 85       	ldd	r18, Y+12	; 0x0c
   1484e:	3d 85       	ldd	r19, Y+13	; 0x0d
   14850:	4e 85       	ldd	r20, Y+14	; 0x0e
   14852:	5f 85       	ldd	r21, Y+15	; 0x0f
   14854:	82 17       	cp	r24, r18
   14856:	93 07       	cpc	r25, r19
   14858:	a4 07       	cpc	r26, r20
   1485a:	b5 07       	cpc	r27, r21
   1485c:	59 f0       	breq	.+22     	; 0x14874 <_ZN8SdVolume15allocContiguousEmPm+0x14c>
   1485e:	08 94       	sec
   14860:	c1 1c       	adc	r12, r1
   14862:	d1 1c       	adc	r13, r1
   14864:	e1 1c       	adc	r14, r1
   14866:	f1 1c       	adc	r15, r1
   14868:	08 94       	sec
   1486a:	81 1c       	adc	r8, r1
   1486c:	91 1c       	adc	r9, r1
   1486e:	a1 1c       	adc	r10, r1
   14870:	b1 1c       	adc	r11, r1
   14872:	ae cf       	rjmp	.-164    	; 0x147d0 <_ZN8SdVolume15allocContiguousEmPm+0xa8>
   14874:	c1 01       	movw	r24, r2
   14876:	a4 01       	movw	r20, r8
   14878:	b5 01       	movw	r22, r10
   1487a:	0f ef       	ldi	r16, 0xFF	; 255
   1487c:	1f ef       	ldi	r17, 0xFF	; 255
   1487e:	2f ef       	ldi	r18, 0xFF	; 255
   14880:	3f e0       	ldi	r19, 0x0F	; 15
   14882:	0e 94 17 a3 	call	0x1462e	; 0x1462e <_ZN8SdVolume6fatPutEmm>
   14886:	88 23       	and	r24, r24
   14888:	91 f4       	brne	.+36     	; 0x148ae <_ZN8SdVolume15allocContiguousEmPm+0x186>
   1488a:	40 c0       	rjmp	.+128    	; 0x1490c <_ZN8SdVolume15allocContiguousEmPm+0x1e4>
   1488c:	68 01       	movw	r12, r16
   1488e:	79 01       	movw	r14, r18
   14890:	08 94       	sec
   14892:	c1 08       	sbc	r12, r1
   14894:	d1 08       	sbc	r13, r1
   14896:	e1 08       	sbc	r14, r1
   14898:	f1 08       	sbc	r15, r1
   1489a:	c1 01       	movw	r24, r2
   1489c:	b7 01       	movw	r22, r14
   1489e:	a6 01       	movw	r20, r12
   148a0:	0e 94 17 a3 	call	0x1462e	; 0x1462e <_ZN8SdVolume6fatPutEmm>
   148a4:	88 23       	and	r24, r24
   148a6:	91 f1       	breq	.+100    	; 0x1490c <_ZN8SdVolume15allocContiguousEmPm+0x1e4>
   148a8:	97 01       	movw	r18, r14
   148aa:	86 01       	movw	r16, r12
   148ac:	02 c0       	rjmp	.+4      	; 0x148b2 <_ZN8SdVolume15allocContiguousEmPm+0x18a>
   148ae:	95 01       	movw	r18, r10
   148b0:	84 01       	movw	r16, r8
   148b2:	40 16       	cp	r4, r16
   148b4:	51 06       	cpc	r5, r17
   148b6:	62 06       	cpc	r6, r18
   148b8:	73 06       	cpc	r7, r19
   148ba:	40 f3       	brcs	.-48     	; 0x1488c <_ZN8SdVolume15allocContiguousEmPm+0x164>
   148bc:	aa 85       	ldd	r26, Y+10	; 0x0a
   148be:	bb 85       	ldd	r27, Y+11	; 0x0b
   148c0:	4d 91       	ld	r20, X+
   148c2:	5d 91       	ld	r21, X+
   148c4:	6d 91       	ld	r22, X+
   148c6:	7c 91       	ld	r23, X
   148c8:	13 97       	sbiw	r26, 0x03	; 3
   148ca:	41 15       	cp	r20, r1
   148cc:	51 05       	cpc	r21, r1
   148ce:	61 05       	cpc	r22, r1
   148d0:	71 05       	cpc	r23, r1
   148d2:	39 f0       	breq	.+14     	; 0x148e2 <_ZN8SdVolume15allocContiguousEmPm+0x1ba>
   148d4:	c1 01       	movw	r24, r2
   148d6:	93 01       	movw	r18, r6
   148d8:	82 01       	movw	r16, r4
   148da:	0e 94 17 a3 	call	0x1462e	; 0x1462e <_ZN8SdVolume6fatPutEmm>
   148de:	88 23       	and	r24, r24
   148e0:	a9 f0       	breq	.+42     	; 0x1490c <_ZN8SdVolume15allocContiguousEmPm+0x1e4>
   148e2:	ea 85       	ldd	r30, Y+10	; 0x0a
   148e4:	fb 85       	ldd	r31, Y+11	; 0x0b
   148e6:	40 82       	st	Z, r4
   148e8:	51 82       	std	Z+1, r5	; 0x01
   148ea:	62 82       	std	Z+2, r6	; 0x02
   148ec:	73 82       	std	Z+3, r7	; 0x03
   148ee:	fd 81       	ldd	r31, Y+5	; 0x05
   148f0:	ff 23       	and	r31, r31
   148f2:	71 f0       	breq	.+28     	; 0x14910 <_ZN8SdVolume15allocContiguousEmPm+0x1e8>
   148f4:	08 94       	sec
   148f6:	41 1c       	adc	r4, r1
   148f8:	51 1c       	adc	r5, r1
   148fa:	61 1c       	adc	r6, r1
   148fc:	71 1c       	adc	r7, r1
   148fe:	d1 01       	movw	r26, r2
   14900:	4d 92       	st	X+, r4
   14902:	5d 92       	st	X+, r5
   14904:	6d 92       	st	X+, r6
   14906:	7c 92       	st	X, r7
   14908:	13 97       	sbiw	r26, 0x03	; 3
   1490a:	02 c0       	rjmp	.+4      	; 0x14910 <_ZN8SdVolume15allocContiguousEmPm+0x1e8>
   1490c:	80 e0       	ldi	r24, 0x00	; 0
   1490e:	01 c0       	rjmp	.+2      	; 0x14912 <_ZN8SdVolume15allocContiguousEmPm+0x1ea>
   14910:	81 e0       	ldi	r24, 0x01	; 1
   14912:	2f 96       	adiw	r28, 0x0f	; 15
   14914:	cd bf       	out	0x3d, r28	; 61
   14916:	de bf       	out	0x3e, r29	; 62
   14918:	df 91       	pop	r29
   1491a:	cf 91       	pop	r28
   1491c:	1f 91       	pop	r17
   1491e:	0f 91       	pop	r16
   14920:	ff 90       	pop	r15
   14922:	ef 90       	pop	r14
   14924:	df 90       	pop	r13
   14926:	cf 90       	pop	r12
   14928:	bf 90       	pop	r11
   1492a:	af 90       	pop	r10
   1492c:	9f 90       	pop	r9
   1492e:	8f 90       	pop	r8
   14930:	7f 90       	pop	r7
   14932:	6f 90       	pop	r6
   14934:	5f 90       	pop	r5
   14936:	4f 90       	pop	r4
   14938:	3f 90       	pop	r3
   1493a:	2f 90       	pop	r2
   1493c:	08 95       	ret

0001493e <_ZN8SdVolume9freeChainEm>:
   1493e:	af 92       	push	r10
   14940:	bf 92       	push	r11
   14942:	cf 92       	push	r12
   14944:	df 92       	push	r13
   14946:	ef 92       	push	r14
   14948:	ff 92       	push	r15
   1494a:	0f 93       	push	r16
   1494c:	1f 93       	push	r17
   1494e:	cf 93       	push	r28
   14950:	df 93       	push	r29
   14952:	00 d0       	rcall	.+0      	; 0x14954 <_ZN8SdVolume9freeChainEm+0x16>
   14954:	0f 92       	push	r0
   14956:	cd b7       	in	r28, 0x3d	; 61
   14958:	de b7       	in	r29, 0x3e	; 62
   1495a:	5c 01       	movw	r10, r24
   1495c:	6a 01       	movw	r12, r20
   1495e:	7b 01       	movw	r14, r22
   14960:	82 e0       	ldi	r24, 0x02	; 2
   14962:	90 e0       	ldi	r25, 0x00	; 0
   14964:	a0 e0       	ldi	r26, 0x00	; 0
   14966:	b0 e0       	ldi	r27, 0x00	; 0
   14968:	f5 01       	movw	r30, r10
   1496a:	80 83       	st	Z, r24
   1496c:	91 83       	std	Z+1, r25	; 0x01
   1496e:	a2 83       	std	Z+2, r26	; 0x02
   14970:	b3 83       	std	Z+3, r27	; 0x03
   14972:	c5 01       	movw	r24, r10
   14974:	b7 01       	movw	r22, r14
   14976:	a6 01       	movw	r20, r12
   14978:	9e 01       	movw	r18, r28
   1497a:	2f 5f       	subi	r18, 0xFF	; 255
   1497c:	3f 4f       	sbci	r19, 0xFF	; 255
   1497e:	0e 94 9b a2 	call	0x14536	; 0x14536 <_ZN8SdVolume6fatGetEmPm>
   14982:	88 23       	and	r24, r24
   14984:	39 f1       	breq	.+78     	; 0x149d4 <_ZN8SdVolume9freeChainEm+0x96>
   14986:	c5 01       	movw	r24, r10
   14988:	b7 01       	movw	r22, r14
   1498a:	a6 01       	movw	r20, r12
   1498c:	00 e0       	ldi	r16, 0x00	; 0
   1498e:	10 e0       	ldi	r17, 0x00	; 0
   14990:	98 01       	movw	r18, r16
   14992:	0e 94 17 a3 	call	0x1462e	; 0x1462e <_ZN8SdVolume6fatPutEmm>
   14996:	88 23       	and	r24, r24
   14998:	e9 f0       	breq	.+58     	; 0x149d4 <_ZN8SdVolume9freeChainEm+0x96>
   1499a:	c9 80       	ldd	r12, Y+1	; 0x01
   1499c:	da 80       	ldd	r13, Y+2	; 0x02
   1499e:	eb 80       	ldd	r14, Y+3	; 0x03
   149a0:	fc 80       	ldd	r15, Y+4	; 0x04
   149a2:	f5 01       	movw	r30, r10
   149a4:	87 89       	ldd	r24, Z+23	; 0x17
   149a6:	80 31       	cpi	r24, 0x10	; 16
   149a8:	51 f4       	brne	.+20     	; 0x149be <_ZN8SdVolume9freeChainEm+0x80>
   149aa:	f8 ef       	ldi	r31, 0xF8	; 248
   149ac:	cf 16       	cp	r12, r31
   149ae:	ff ef       	ldi	r31, 0xFF	; 255
   149b0:	df 06       	cpc	r13, r31
   149b2:	f0 e0       	ldi	r31, 0x00	; 0
   149b4:	ef 06       	cpc	r14, r31
   149b6:	f0 e0       	ldi	r31, 0x00	; 0
   149b8:	ff 06       	cpc	r15, r31
   149ba:	50 f4       	brcc	.+20     	; 0x149d0 <_ZN8SdVolume9freeChainEm+0x92>
   149bc:	da cf       	rjmp	.-76     	; 0x14972 <_ZN8SdVolume9freeChainEm+0x34>
   149be:	88 ef       	ldi	r24, 0xF8	; 248
   149c0:	c8 16       	cp	r12, r24
   149c2:	8f ef       	ldi	r24, 0xFF	; 255
   149c4:	d8 06       	cpc	r13, r24
   149c6:	8f ef       	ldi	r24, 0xFF	; 255
   149c8:	e8 06       	cpc	r14, r24
   149ca:	8f e0       	ldi	r24, 0x0F	; 15
   149cc:	f8 06       	cpc	r15, r24
   149ce:	88 f2       	brcs	.-94     	; 0x14972 <_ZN8SdVolume9freeChainEm+0x34>
   149d0:	81 e0       	ldi	r24, 0x01	; 1
   149d2:	01 c0       	rjmp	.+2      	; 0x149d6 <_ZN8SdVolume9freeChainEm+0x98>
   149d4:	80 e0       	ldi	r24, 0x00	; 0
   149d6:	24 96       	adiw	r28, 0x04	; 4
   149d8:	cd bf       	out	0x3d, r28	; 61
   149da:	de bf       	out	0x3e, r29	; 62
   149dc:	df 91       	pop	r29
   149de:	cf 91       	pop	r28
   149e0:	1f 91       	pop	r17
   149e2:	0f 91       	pop	r16
   149e4:	ff 90       	pop	r15
   149e6:	ef 90       	pop	r14
   149e8:	df 90       	pop	r13
   149ea:	cf 90       	pop	r12
   149ec:	bf 90       	pop	r11
   149ee:	af 90       	pop	r10
   149f0:	08 95       	ret

000149f2 <_ZN8SdVolume4initEP7Sd2Cardh>:
   149f2:	3f 92       	push	r3
   149f4:	4f 92       	push	r4
   149f6:	5f 92       	push	r5
   149f8:	6f 92       	push	r6
   149fa:	7f 92       	push	r7
   149fc:	8f 92       	push	r8
   149fe:	9f 92       	push	r9
   14a00:	af 92       	push	r10
   14a02:	bf 92       	push	r11
   14a04:	cf 92       	push	r12
   14a06:	df 92       	push	r13
   14a08:	ef 92       	push	r14
   14a0a:	ff 92       	push	r15
   14a0c:	0f 93       	push	r16
   14a0e:	1f 93       	push	r17
   14a10:	cf 93       	push	r28
   14a12:	df 93       	push	r29
   14a14:	00 d0       	rcall	.+0      	; 0x14a16 <_ZN8SdVolume4initEP7Sd2Cardh+0x24>
   14a16:	0f 92       	push	r0
   14a18:	cd b7       	in	r28, 0x3d	; 61
   14a1a:	de b7       	in	r29, 0x3e	; 62
   14a1c:	8b 83       	std	Y+3, r24	; 0x03
   14a1e:	9c 83       	std	Y+4, r25	; 0x04
   14a20:	04 2f       	mov	r16, r20
   14a22:	60 93 a4 25 	sts	0x25A4, r22
   14a26:	70 93 a5 25 	sts	0x25A5, r23
   14a2a:	fc 01       	movw	r30, r24
   14a2c:	17 8a       	std	Z+23, r1	; 0x17
   14a2e:	82 e0       	ldi	r24, 0x02	; 2
   14a30:	90 e0       	ldi	r25, 0x00	; 0
   14a32:	a0 e0       	ldi	r26, 0x00	; 0
   14a34:	b0 e0       	ldi	r27, 0x00	; 0
   14a36:	80 83       	st	Z, r24
   14a38:	91 83       	std	Z+1, r25	; 0x01
   14a3a:	a2 83       	std	Z+2, r26	; 0x02
   14a3c:	b3 83       	std	Z+3, r27	; 0x03
   14a3e:	10 92 aa 25 	sts	0x25AA, r1
   14a42:	8f ef       	ldi	r24, 0xFF	; 255
   14a44:	9f ef       	ldi	r25, 0xFF	; 255
   14a46:	dc 01       	movw	r26, r24
   14a48:	80 93 ab 25 	sts	0x25AB, r24
   14a4c:	90 93 ac 25 	sts	0x25AC, r25
   14a50:	a0 93 ad 25 	sts	0x25AD, r26
   14a54:	b0 93 ae 25 	sts	0x25AE, r27
   14a58:	10 92 a6 25 	sts	0x25A6, r1
   14a5c:	10 92 a7 25 	sts	0x25A7, r1
   14a60:	10 92 a8 25 	sts	0x25A8, r1
   14a64:	10 92 a9 25 	sts	0x25A9, r1
   14a68:	44 23       	and	r20, r20
   14a6a:	91 f1       	breq	.+100    	; 0x14ad0 <_ZN8SdVolume4initEP7Sd2Cardh+0xde>
   14a6c:	45 30       	cpi	r20, 0x05	; 5
   14a6e:	08 f0       	brcs	.+2      	; 0x14a72 <_ZN8SdVolume4initEP7Sd2Cardh+0x80>
   14a70:	25 c1       	rjmp	.+586    	; 0x14cbc <_ZN8SdVolume4initEP7Sd2Cardh+0x2ca>
   14a72:	60 e0       	ldi	r22, 0x00	; 0
   14a74:	70 e0       	ldi	r23, 0x00	; 0
   14a76:	cb 01       	movw	r24, r22
   14a78:	40 e0       	ldi	r20, 0x00	; 0
   14a7a:	0e 94 21 a2 	call	0x14442	; 0x14442 <_ZN8SdVolume10cacheFetchEmh>
   14a7e:	00 97       	sbiw	r24, 0x00	; 0
   14a80:	09 f4       	brne	.+2      	; 0x14a84 <_ZN8SdVolume4initEP7Sd2Cardh+0x92>
   14a82:	1c c1       	rjmp	.+568    	; 0x14cbc <_ZN8SdVolume4initEP7Sd2Cardh+0x2ca>
   14a84:	e0 2f       	mov	r30, r16
   14a86:	f0 e0       	ldi	r31, 0x00	; 0
   14a88:	24 e0       	ldi	r18, 0x04	; 4
   14a8a:	ee 0f       	add	r30, r30
   14a8c:	ff 1f       	adc	r31, r31
   14a8e:	2a 95       	dec	r18
   14a90:	e1 f7       	brne	.-8      	; 0x14a8a <_ZN8SdVolume4initEP7Sd2Cardh+0x98>
   14a92:	e2 55       	subi	r30, 0x52	; 82
   14a94:	fe 4f       	sbci	r31, 0xFE	; 254
   14a96:	e8 0f       	add	r30, r24
   14a98:	f9 1f       	adc	r31, r25
   14a9a:	80 81       	ld	r24, Z
   14a9c:	90 e0       	ldi	r25, 0x00	; 0
   14a9e:	8f 77       	andi	r24, 0x7F	; 127
   14aa0:	90 70       	andi	r25, 0x00	; 0
   14aa2:	00 97       	sbiw	r24, 0x00	; 0
   14aa4:	09 f0       	breq	.+2      	; 0x14aa8 <_ZN8SdVolume4initEP7Sd2Cardh+0xb6>
   14aa6:	0a c1       	rjmp	.+532    	; 0x14cbc <_ZN8SdVolume4initEP7Sd2Cardh+0x2ca>
   14aa8:	84 85       	ldd	r24, Z+12	; 0x0c
   14aaa:	95 85       	ldd	r25, Z+13	; 0x0d
   14aac:	a6 85       	ldd	r26, Z+14	; 0x0e
   14aae:	b7 85       	ldd	r27, Z+15	; 0x0f
   14ab0:	84 36       	cpi	r24, 0x64	; 100
   14ab2:	91 05       	cpc	r25, r1
   14ab4:	a1 05       	cpc	r26, r1
   14ab6:	b1 05       	cpc	r27, r1
   14ab8:	08 f4       	brcc	.+2      	; 0x14abc <_ZN8SdVolume4initEP7Sd2Cardh+0xca>
   14aba:	00 c1       	rjmp	.+512    	; 0x14cbc <_ZN8SdVolume4initEP7Sd2Cardh+0x2ca>
   14abc:	40 84       	ldd	r4, Z+8	; 0x08
   14abe:	51 84       	ldd	r5, Z+9	; 0x09
   14ac0:	62 84       	ldd	r6, Z+10	; 0x0a
   14ac2:	73 84       	ldd	r7, Z+11	; 0x0b
   14ac4:	41 14       	cp	r4, r1
   14ac6:	51 04       	cpc	r5, r1
   14ac8:	61 04       	cpc	r6, r1
   14aca:	71 04       	cpc	r7, r1
   14acc:	21 f4       	brne	.+8      	; 0x14ad6 <_ZN8SdVolume4initEP7Sd2Cardh+0xe4>
   14ace:	f6 c0       	rjmp	.+492    	; 0x14cbc <_ZN8SdVolume4initEP7Sd2Cardh+0x2ca>
   14ad0:	44 24       	eor	r4, r4
   14ad2:	55 24       	eor	r5, r5
   14ad4:	32 01       	movw	r6, r4
   14ad6:	c3 01       	movw	r24, r6
   14ad8:	b2 01       	movw	r22, r4
   14ada:	40 e0       	ldi	r20, 0x00	; 0
   14adc:	0e 94 21 a2 	call	0x14442	; 0x14442 <_ZN8SdVolume10cacheFetchEmh>
   14ae0:	8c 01       	movw	r16, r24
   14ae2:	00 97       	sbiw	r24, 0x00	; 0
   14ae4:	09 f4       	brne	.+2      	; 0x14ae8 <_ZN8SdVolume4initEP7Sd2Cardh+0xf6>
   14ae6:	ea c0       	rjmp	.+468    	; 0x14cbc <_ZN8SdVolume4initEP7Sd2Cardh+0x2ca>
   14ae8:	fc 01       	movw	r30, r24
   14aea:	83 85       	ldd	r24, Z+11	; 0x0b
   14aec:	94 85       	ldd	r25, Z+12	; 0x0c
   14aee:	f2 e0       	ldi	r31, 0x02	; 2
   14af0:	80 30       	cpi	r24, 0x00	; 0
   14af2:	9f 07       	cpc	r25, r31
   14af4:	09 f0       	breq	.+2      	; 0x14af8 <_ZN8SdVolume4initEP7Sd2Cardh+0x106>
   14af6:	e2 c0       	rjmp	.+452    	; 0x14cbc <_ZN8SdVolume4initEP7Sd2Cardh+0x2ca>
   14af8:	f8 01       	movw	r30, r16
   14afa:	20 89       	ldd	r18, Z+16	; 0x10
   14afc:	22 23       	and	r18, r18
   14afe:	09 f4       	brne	.+2      	; 0x14b02 <_ZN8SdVolume4initEP7Sd2Cardh+0x110>
   14b00:	dd c0       	rjmp	.+442    	; 0x14cbc <_ZN8SdVolume4initEP7Sd2Cardh+0x2ca>
   14b02:	86 85       	ldd	r24, Z+14	; 0x0e
   14b04:	97 85       	ldd	r25, Z+15	; 0x0f
   14b06:	00 97       	sbiw	r24, 0x00	; 0
   14b08:	09 f4       	brne	.+2      	; 0x14b0c <_ZN8SdVolume4initEP7Sd2Cardh+0x11a>
   14b0a:	d8 c0       	rjmp	.+432    	; 0x14cbc <_ZN8SdVolume4initEP7Sd2Cardh+0x2ca>
   14b0c:	85 85       	ldd	r24, Z+13	; 0x0d
   14b0e:	88 23       	and	r24, r24
   14b10:	09 f4       	brne	.+2      	; 0x14b14 <_ZN8SdVolume4initEP7Sd2Cardh+0x122>
   14b12:	d4 c0       	rjmp	.+424    	; 0x14cbc <_ZN8SdVolume4initEP7Sd2Cardh+0x2ca>
   14b14:	eb 81       	ldd	r30, Y+3	; 0x03
   14b16:	fc 81       	ldd	r31, Y+4	; 0x04
   14b18:	22 8b       	std	Z+18, r18	; 0x12
   14b1a:	f8 01       	movw	r30, r16
   14b1c:	25 85       	ldd	r18, Z+13	; 0x0d
   14b1e:	eb 81       	ldd	r30, Y+3	; 0x03
   14b20:	fc 81       	ldd	r31, Y+4	; 0x04
   14b22:	24 83       	std	Z+4, r18	; 0x04
   14b24:	15 86       	std	Z+13, r1	; 0x0d
   14b26:	30 e0       	ldi	r19, 0x00	; 0
   14b28:	41 e0       	ldi	r20, 0x01	; 1
   14b2a:	50 e0       	ldi	r21, 0x00	; 0
   14b2c:	09 c0       	rjmp	.+18     	; 0x14b40 <_ZN8SdVolume4initEP7Sd2Cardh+0x14e>
   14b2e:	83 2d       	mov	r24, r3
   14b30:	8f 5f       	subi	r24, 0xFF	; 255
   14b32:	eb 81       	ldd	r30, Y+3	; 0x03
   14b34:	fc 81       	ldd	r31, Y+4	; 0x04
   14b36:	85 87       	std	Z+13, r24	; 0x0d
   14b38:	f7 e0       	ldi	r31, 0x07	; 7
   14b3a:	f3 15       	cp	r31, r3
   14b3c:	08 f4       	brcc	.+2      	; 0x14b40 <_ZN8SdVolume4initEP7Sd2Cardh+0x14e>
   14b3e:	be c0       	rjmp	.+380    	; 0x14cbc <_ZN8SdVolume4initEP7Sd2Cardh+0x2ca>
   14b40:	eb 81       	ldd	r30, Y+3	; 0x03
   14b42:	fc 81       	ldd	r31, Y+4	; 0x04
   14b44:	35 84       	ldd	r3, Z+13	; 0x0d
   14b46:	ca 01       	movw	r24, r20
   14b48:	03 2c       	mov	r0, r3
   14b4a:	02 c0       	rjmp	.+4      	; 0x14b50 <_ZN8SdVolume4initEP7Sd2Cardh+0x15e>
   14b4c:	88 0f       	add	r24, r24
   14b4e:	99 1f       	adc	r25, r25
   14b50:	0a 94       	dec	r0
   14b52:	e2 f7       	brpl	.-8      	; 0x14b4c <_ZN8SdVolume4initEP7Sd2Cardh+0x15a>
   14b54:	28 17       	cp	r18, r24
   14b56:	39 07       	cpc	r19, r25
   14b58:	51 f7       	brne	.-44     	; 0x14b2e <_ZN8SdVolume4initEP7Sd2Cardh+0x13c>
   14b5a:	f8 01       	movw	r30, r16
   14b5c:	c6 88       	ldd	r12, Z+22	; 0x16
   14b5e:	d7 88       	ldd	r13, Z+23	; 0x17
   14b60:	c1 14       	cp	r12, r1
   14b62:	d1 04       	cpc	r13, r1
   14b64:	19 f0       	breq	.+6      	; 0x14b6c <_ZN8SdVolume4initEP7Sd2Cardh+0x17a>
   14b66:	ee 24       	eor	r14, r14
   14b68:	ff 24       	eor	r15, r15
   14b6a:	05 c0       	rjmp	.+10     	; 0x14b76 <_ZN8SdVolume4initEP7Sd2Cardh+0x184>
   14b6c:	f8 01       	movw	r30, r16
   14b6e:	c4 a0       	ldd	r12, Z+36	; 0x24
   14b70:	d5 a0       	ldd	r13, Z+37	; 0x25
   14b72:	e6 a0       	ldd	r14, Z+38	; 0x26
   14b74:	f7 a0       	ldd	r15, Z+39	; 0x27
   14b76:	eb 81       	ldd	r30, Y+3	; 0x03
   14b78:	fc 81       	ldd	r31, Y+4	; 0x04
   14b7a:	c5 82       	std	Z+5, r12	; 0x05
   14b7c:	d6 82       	std	Z+6, r13	; 0x06
   14b7e:	e7 82       	std	Z+7, r14	; 0x07
   14b80:	f0 86       	std	Z+8, r15	; 0x08
   14b82:	c0 92 a6 25 	sts	0x25A6, r12
   14b86:	d0 92 a7 25 	sts	0x25A7, r13
   14b8a:	e0 92 a8 25 	sts	0x25A8, r14
   14b8e:	f0 92 a9 25 	sts	0x25A9, r15
   14b92:	f8 01       	movw	r30, r16
   14b94:	86 85       	ldd	r24, Z+14	; 0x0e
   14b96:	97 85       	ldd	r25, Z+15	; 0x0f
   14b98:	4c 01       	movw	r8, r24
   14b9a:	aa 24       	eor	r10, r10
   14b9c:	bb 24       	eor	r11, r11
   14b9e:	84 0c       	add	r8, r4
   14ba0:	95 1c       	adc	r9, r5
   14ba2:	a6 1c       	adc	r10, r6
   14ba4:	b7 1c       	adc	r11, r7
   14ba6:	eb 81       	ldd	r30, Y+3	; 0x03
   14ba8:	fc 81       	ldd	r31, Y+4	; 0x04
   14baa:	83 8a       	std	Z+19, r8	; 0x13
   14bac:	94 8a       	std	Z+20, r9	; 0x14
   14bae:	a5 8a       	std	Z+21, r10	; 0x15
   14bb0:	b6 8a       	std	Z+22, r11	; 0x16
   14bb2:	f8 01       	movw	r30, r16
   14bb4:	01 88       	ldd	r0, Z+17	; 0x11
   14bb6:	f2 89       	ldd	r31, Z+18	; 0x12
   14bb8:	e0 2d       	mov	r30, r0
   14bba:	e9 83       	std	Y+1, r30	; 0x01
   14bbc:	fa 83       	std	Y+2, r31	; 0x02
   14bbe:	cf 01       	movw	r24, r30
   14bc0:	eb 81       	ldd	r30, Y+3	; 0x03
   14bc2:	fc 81       	ldd	r31, Y+4	; 0x04
   14bc4:	80 8f       	std	Z+24, r24	; 0x18
   14bc6:	91 8f       	std	Z+25, r25	; 0x19
   14bc8:	f8 01       	movw	r30, r16
   14bca:	20 89       	ldd	r18, Z+16	; 0x10
   14bcc:	30 e0       	ldi	r19, 0x00	; 0
   14bce:	40 e0       	ldi	r20, 0x00	; 0
   14bd0:	50 e0       	ldi	r21, 0x00	; 0
   14bd2:	c7 01       	movw	r24, r14
   14bd4:	b6 01       	movw	r22, r12
   14bd6:	0e 94 e1 b3 	call	0x167c2	; 0x167c2 <__mulsi3>
   14bda:	dc 01       	movw	r26, r24
   14bdc:	cb 01       	movw	r24, r22
   14bde:	88 0d       	add	r24, r8
   14be0:	99 1d       	adc	r25, r9
   14be2:	aa 1d       	adc	r26, r10
   14be4:	bb 1d       	adc	r27, r11
   14be6:	eb 81       	ldd	r30, Y+3	; 0x03
   14be8:	fc 81       	ldd	r31, Y+4	; 0x04
   14bea:	82 8f       	std	Z+26, r24	; 0x1a
   14bec:	93 8f       	std	Z+27, r25	; 0x1b
   14bee:	a4 8f       	std	Z+28, r26	; 0x1c
   14bf0:	b5 8f       	std	Z+29, r27	; 0x1d
   14bf2:	49 81       	ldd	r20, Y+1	; 0x01
   14bf4:	5a 81       	ldd	r21, Y+2	; 0x02
   14bf6:	68 94       	set
   14bf8:	14 f8       	bld	r1, 4
   14bfa:	44 0f       	add	r20, r20
   14bfc:	55 1f       	adc	r21, r21
   14bfe:	16 94       	lsr	r1
   14c00:	e1 f7       	brne	.-8      	; 0x14bfa <_ZN8SdVolume4initEP7Sd2Cardh+0x208>
   14c02:	41 50       	subi	r20, 0x01	; 1
   14c04:	5e 4f       	sbci	r21, 0xFE	; 254
   14c06:	45 2f       	mov	r20, r21
   14c08:	55 27       	eor	r21, r21
   14c0a:	46 95       	lsr	r20
   14c0c:	60 e0       	ldi	r22, 0x00	; 0
   14c0e:	70 e0       	ldi	r23, 0x00	; 0
   14c10:	48 0f       	add	r20, r24
   14c12:	59 1f       	adc	r21, r25
   14c14:	6a 1f       	adc	r22, r26
   14c16:	7b 1f       	adc	r23, r27
   14c18:	46 87       	std	Z+14, r20	; 0x0e
   14c1a:	57 87       	std	Z+15, r21	; 0x0f
   14c1c:	60 8b       	std	Z+16, r22	; 0x10
   14c1e:	71 8b       	std	Z+17, r23	; 0x11
   14c20:	f8 01       	movw	r30, r16
   14c22:	83 89       	ldd	r24, Z+19	; 0x13
   14c24:	94 89       	ldd	r25, Z+20	; 0x14
   14c26:	00 97       	sbiw	r24, 0x00	; 0
   14c28:	19 f0       	breq	.+6      	; 0x14c30 <_ZN8SdVolume4initEP7Sd2Cardh+0x23e>
   14c2a:	a0 e0       	ldi	r26, 0x00	; 0
   14c2c:	b0 e0       	ldi	r27, 0x00	; 0
   14c2e:	05 c0       	rjmp	.+10     	; 0x14c3a <_ZN8SdVolume4initEP7Sd2Cardh+0x248>
   14c30:	f8 01       	movw	r30, r16
   14c32:	80 a1       	ldd	r24, Z+32	; 0x20
   14c34:	91 a1       	ldd	r25, Z+33	; 0x21
   14c36:	a2 a1       	ldd	r26, Z+34	; 0x22
   14c38:	b3 a1       	ldd	r27, Z+35	; 0x23
   14c3a:	73 01       	movw	r14, r6
   14c3c:	62 01       	movw	r12, r4
   14c3e:	c4 1a       	sub	r12, r20
   14c40:	d5 0a       	sbc	r13, r21
   14c42:	e6 0a       	sbc	r14, r22
   14c44:	f7 0a       	sbc	r15, r23
   14c46:	b7 01       	movw	r22, r14
   14c48:	a6 01       	movw	r20, r12
   14c4a:	48 0f       	add	r20, r24
   14c4c:	59 1f       	adc	r21, r25
   14c4e:	6a 1f       	adc	r22, r26
   14c50:	7b 1f       	adc	r23, r27
   14c52:	04 c0       	rjmp	.+8      	; 0x14c5c <_ZN8SdVolume4initEP7Sd2Cardh+0x26a>
   14c54:	76 95       	lsr	r23
   14c56:	67 95       	ror	r22
   14c58:	57 95       	ror	r21
   14c5a:	47 95       	ror	r20
   14c5c:	3a 94       	dec	r3
   14c5e:	d2 f7       	brpl	.-12     	; 0x14c54 <_ZN8SdVolume4initEP7Sd2Cardh+0x262>
   14c60:	eb 81       	ldd	r30, Y+3	; 0x03
   14c62:	fc 81       	ldd	r31, Y+4	; 0x04
   14c64:	41 87       	std	Z+9, r20	; 0x09
   14c66:	52 87       	std	Z+10, r21	; 0x0a
   14c68:	63 87       	std	Z+11, r22	; 0x0b
   14c6a:	74 87       	std	Z+12, r23	; 0x0c
   14c6c:	45 3f       	cpi	r20, 0xF5	; 245
   14c6e:	ff e0       	ldi	r31, 0x0F	; 15
   14c70:	5f 07       	cpc	r21, r31
   14c72:	f0 e0       	ldi	r31, 0x00	; 0
   14c74:	6f 07       	cpc	r22, r31
   14c76:	f0 e0       	ldi	r31, 0x00	; 0
   14c78:	7f 07       	cpc	r23, r31
   14c7a:	28 f4       	brcc	.+10     	; 0x14c86 <_ZN8SdVolume4initEP7Sd2Cardh+0x294>
   14c7c:	8c e0       	ldi	r24, 0x0C	; 12
   14c7e:	eb 81       	ldd	r30, Y+3	; 0x03
   14c80:	fc 81       	ldd	r31, Y+4	; 0x04
   14c82:	87 8b       	std	Z+23, r24	; 0x17
   14c84:	1b c0       	rjmp	.+54     	; 0x14cbc <_ZN8SdVolume4initEP7Sd2Cardh+0x2ca>
   14c86:	45 3f       	cpi	r20, 0xF5	; 245
   14c88:	ff ef       	ldi	r31, 0xFF	; 255
   14c8a:	5f 07       	cpc	r21, r31
   14c8c:	f0 e0       	ldi	r31, 0x00	; 0
   14c8e:	6f 07       	cpc	r22, r31
   14c90:	f0 e0       	ldi	r31, 0x00	; 0
   14c92:	7f 07       	cpc	r23, r31
   14c94:	20 f4       	brcc	.+8      	; 0x14c9e <_ZN8SdVolume4initEP7Sd2Cardh+0x2ac>
   14c96:	80 e1       	ldi	r24, 0x10	; 16
   14c98:	eb 81       	ldd	r30, Y+3	; 0x03
   14c9a:	fc 81       	ldd	r31, Y+4	; 0x04
   14c9c:	0c c0       	rjmp	.+24     	; 0x14cb6 <_ZN8SdVolume4initEP7Sd2Cardh+0x2c4>
   14c9e:	f8 01       	movw	r30, r16
   14ca0:	84 a5       	ldd	r24, Z+44	; 0x2c
   14ca2:	95 a5       	ldd	r25, Z+45	; 0x2d
   14ca4:	a6 a5       	ldd	r26, Z+46	; 0x2e
   14ca6:	b7 a5       	ldd	r27, Z+47	; 0x2f
   14ca8:	eb 81       	ldd	r30, Y+3	; 0x03
   14caa:	fc 81       	ldd	r31, Y+4	; 0x04
   14cac:	82 8f       	std	Z+26, r24	; 0x1a
   14cae:	93 8f       	std	Z+27, r25	; 0x1b
   14cb0:	a4 8f       	std	Z+28, r26	; 0x1c
   14cb2:	b5 8f       	std	Z+29, r27	; 0x1d
   14cb4:	80 e2       	ldi	r24, 0x20	; 32
   14cb6:	87 8b       	std	Z+23, r24	; 0x17
   14cb8:	81 e0       	ldi	r24, 0x01	; 1
   14cba:	01 c0       	rjmp	.+2      	; 0x14cbe <_ZN8SdVolume4initEP7Sd2Cardh+0x2cc>
   14cbc:	80 e0       	ldi	r24, 0x00	; 0
   14cbe:	24 96       	adiw	r28, 0x04	; 4
   14cc0:	cd bf       	out	0x3d, r28	; 61
   14cc2:	de bf       	out	0x3e, r29	; 62
   14cc4:	df 91       	pop	r29
   14cc6:	cf 91       	pop	r28
   14cc8:	1f 91       	pop	r17
   14cca:	0f 91       	pop	r16
   14ccc:	ff 90       	pop	r15
   14cce:	ef 90       	pop	r14
   14cd0:	df 90       	pop	r13
   14cd2:	cf 90       	pop	r12
   14cd4:	bf 90       	pop	r11
   14cd6:	af 90       	pop	r10
   14cd8:	9f 90       	pop	r9
   14cda:	8f 90       	pop	r8
   14cdc:	7f 90       	pop	r7
   14cde:	6f 90       	pop	r6
   14ce0:	5f 90       	pop	r5
   14ce2:	4f 90       	pop	r4
   14ce4:	3f 90       	pop	r3
   14ce6:	08 95       	ret

00014ce8 <_ZN5Print5writeEPKhj>:
   14ce8:	cf 92       	push	r12
   14cea:	df 92       	push	r13
   14cec:	ef 92       	push	r14
   14cee:	ff 92       	push	r15
   14cf0:	0f 93       	push	r16
   14cf2:	1f 93       	push	r17
   14cf4:	cf 93       	push	r28
   14cf6:	df 93       	push	r29
   14cf8:	6c 01       	movw	r12, r24
   14cfa:	7b 01       	movw	r14, r22
   14cfc:	ea 01       	movw	r28, r20
   14cfe:	00 e0       	ldi	r16, 0x00	; 0
   14d00:	10 e0       	ldi	r17, 0x00	; 0
   14d02:	0e c0       	rjmp	.+28     	; 0x14d20 <_ZN5Print5writeEPKhj+0x38>
   14d04:	d7 01       	movw	r26, r14
   14d06:	6d 91       	ld	r22, X+
   14d08:	7d 01       	movw	r14, r26
   14d0a:	d6 01       	movw	r26, r12
   14d0c:	ed 91       	ld	r30, X+
   14d0e:	fc 91       	ld	r31, X
   14d10:	01 90       	ld	r0, Z+
   14d12:	f0 81       	ld	r31, Z
   14d14:	e0 2d       	mov	r30, r0
   14d16:	c6 01       	movw	r24, r12
   14d18:	19 95       	eicall
   14d1a:	08 0f       	add	r16, r24
   14d1c:	19 1f       	adc	r17, r25
   14d1e:	21 97       	sbiw	r28, 0x01	; 1
   14d20:	20 97       	sbiw	r28, 0x00	; 0
   14d22:	81 f7       	brne	.-32     	; 0x14d04 <_ZN5Print5writeEPKhj+0x1c>
   14d24:	c8 01       	movw	r24, r16
   14d26:	df 91       	pop	r29
   14d28:	cf 91       	pop	r28
   14d2a:	1f 91       	pop	r17
   14d2c:	0f 91       	pop	r16
   14d2e:	ff 90       	pop	r15
   14d30:	ef 90       	pop	r14
   14d32:	df 90       	pop	r13
   14d34:	cf 90       	pop	r12
   14d36:	08 95       	ret

00014d38 <_ZN5Print5writeEPKc>:
   14d38:	61 15       	cp	r22, r1
   14d3a:	71 05       	cpc	r23, r1
   14d3c:	89 f0       	breq	.+34     	; 0x14d60 <_ZN5Print5writeEPKc+0x28>
   14d3e:	db 01       	movw	r26, r22
   14d40:	0d 90       	ld	r0, X+
   14d42:	00 20       	and	r0, r0
   14d44:	e9 f7       	brne	.-6      	; 0x14d40 <_ZN5Print5writeEPKc+0x8>
   14d46:	ad 01       	movw	r20, r26
   14d48:	41 50       	subi	r20, 0x01	; 1
   14d4a:	50 40       	sbci	r21, 0x00	; 0
   14d4c:	46 1b       	sub	r20, r22
   14d4e:	57 0b       	sbc	r21, r23
   14d50:	dc 01       	movw	r26, r24
   14d52:	ed 91       	ld	r30, X+
   14d54:	fc 91       	ld	r31, X
   14d56:	02 80       	ldd	r0, Z+2	; 0x02
   14d58:	f3 81       	ldd	r31, Z+3	; 0x03
   14d5a:	e0 2d       	mov	r30, r0
   14d5c:	19 95       	eicall
   14d5e:	08 95       	ret
   14d60:	80 e0       	ldi	r24, 0x00	; 0
   14d62:	90 e0       	ldi	r25, 0x00	; 0
   14d64:	08 95       	ret

00014d66 <_ZN5Print5printEc>:
   14d66:	dc 01       	movw	r26, r24
   14d68:	ed 91       	ld	r30, X+
   14d6a:	fc 91       	ld	r31, X
   14d6c:	01 90       	ld	r0, Z+
   14d6e:	f0 81       	ld	r31, Z
   14d70:	e0 2d       	mov	r30, r0
   14d72:	19 95       	eicall
   14d74:	08 95       	ret

00014d76 <_ZN5Print7printlnEv>:
   14d76:	0f 93       	push	r16
   14d78:	1f 93       	push	r17
   14d7a:	cf 93       	push	r28
   14d7c:	df 93       	push	r29
   14d7e:	8c 01       	movw	r16, r24
   14d80:	6d e0       	ldi	r22, 0x0D	; 13
   14d82:	0e 94 b3 a6 	call	0x14d66	; 0x14d66 <_ZN5Print5printEc>
   14d86:	ec 01       	movw	r28, r24
   14d88:	c8 01       	movw	r24, r16
   14d8a:	6a e0       	ldi	r22, 0x0A	; 10
   14d8c:	0e 94 b3 a6 	call	0x14d66	; 0x14d66 <_ZN5Print5printEc>
   14d90:	8c 0f       	add	r24, r28
   14d92:	9d 1f       	adc	r25, r29
   14d94:	df 91       	pop	r29
   14d96:	cf 91       	pop	r28
   14d98:	1f 91       	pop	r17
   14d9a:	0f 91       	pop	r16
   14d9c:	08 95       	ret

00014d9e <_ZN5Print11printNumberEmh>:
   14d9e:	4f 92       	push	r4
   14da0:	5f 92       	push	r5
   14da2:	6f 92       	push	r6
   14da4:	7f 92       	push	r7
   14da6:	af 92       	push	r10
   14da8:	bf 92       	push	r11
   14daa:	cf 92       	push	r12
   14dac:	df 92       	push	r13
   14dae:	ef 92       	push	r14
   14db0:	ff 92       	push	r15
   14db2:	0f 93       	push	r16
   14db4:	1f 93       	push	r17
   14db6:	cf 93       	push	r28
   14db8:	df 93       	push	r29
   14dba:	cd b7       	in	r28, 0x3d	; 61
   14dbc:	de b7       	in	r29, 0x3e	; 62
   14dbe:	a1 97       	sbiw	r28, 0x21	; 33
   14dc0:	cd bf       	out	0x3d, r28	; 61
   14dc2:	de bf       	out	0x3e, r29	; 62
   14dc4:	5c 01       	movw	r10, r24
   14dc6:	e4 2e       	mov	r14, r20
   14dc8:	cb 01       	movw	r24, r22
   14dca:	f2 2e       	mov	r15, r18
   14dcc:	19 a2       	std	Y+33, r1	; 0x21
   14dce:	21 e0       	ldi	r18, 0x01	; 1
   14dd0:	2f 15       	cp	r18, r15
   14dd2:	10 f0       	brcs	.+4      	; 0x14dd8 <_ZN5Print11printNumberEmh+0x3a>
   14dd4:	3a e0       	ldi	r19, 0x0A	; 10
   14dd6:	f3 2e       	mov	r15, r19
   14dd8:	21 e2       	ldi	r18, 0x21	; 33
   14dda:	c2 2e       	mov	r12, r18
   14ddc:	d1 2c       	mov	r13, r1
   14dde:	cc 0e       	add	r12, r28
   14de0:	dd 1e       	adc	r13, r29
   14de2:	4f 2c       	mov	r4, r15
   14de4:	55 24       	eor	r5, r5
   14de6:	66 24       	eor	r6, r6
   14de8:	77 24       	eor	r7, r7
   14dea:	03 c0       	rjmp	.+6      	; 0x14df2 <_ZN5Print11printNumberEmh+0x54>
   14dec:	e0 2e       	mov	r14, r16
   14dee:	51 2f       	mov	r21, r17
   14df0:	c9 01       	movw	r24, r18
   14df2:	6e 2d       	mov	r22, r14
   14df4:	75 2f       	mov	r23, r21
   14df6:	a3 01       	movw	r20, r6
   14df8:	92 01       	movw	r18, r4
   14dfa:	0e 94 00 b4 	call	0x16800	; 0x16800 <__udivmodsi4>
   14dfe:	89 01       	movw	r16, r18
   14e00:	9a 01       	movw	r18, r20
   14e02:	f0 9e       	mul	r15, r16
   14e04:	80 2d       	mov	r24, r0
   14e06:	11 24       	eor	r1, r1
   14e08:	e8 1a       	sub	r14, r24
   14e0a:	8e 2d       	mov	r24, r14
   14e0c:	08 94       	sec
   14e0e:	c1 08       	sbc	r12, r1
   14e10:	d1 08       	sbc	r13, r1
   14e12:	8a 30       	cpi	r24, 0x0A	; 10
   14e14:	10 f4       	brcc	.+4      	; 0x14e1a <_ZN5Print11printNumberEmh+0x7c>
   14e16:	80 5d       	subi	r24, 0xD0	; 208
   14e18:	01 c0       	rjmp	.+2      	; 0x14e1c <_ZN5Print11printNumberEmh+0x7e>
   14e1a:	89 5c       	subi	r24, 0xC9	; 201
   14e1c:	f6 01       	movw	r30, r12
   14e1e:	80 83       	st	Z, r24
   14e20:	01 15       	cp	r16, r1
   14e22:	11 05       	cpc	r17, r1
   14e24:	21 05       	cpc	r18, r1
   14e26:	31 05       	cpc	r19, r1
   14e28:	09 f7       	brne	.-62     	; 0x14dec <_ZN5Print11printNumberEmh+0x4e>
   14e2a:	c5 01       	movw	r24, r10
   14e2c:	b6 01       	movw	r22, r12
   14e2e:	0e 94 9c a6 	call	0x14d38	; 0x14d38 <_ZN5Print5writeEPKc>
   14e32:	a1 96       	adiw	r28, 0x21	; 33
   14e34:	cd bf       	out	0x3d, r28	; 61
   14e36:	de bf       	out	0x3e, r29	; 62
   14e38:	df 91       	pop	r29
   14e3a:	cf 91       	pop	r28
   14e3c:	1f 91       	pop	r17
   14e3e:	0f 91       	pop	r16
   14e40:	ff 90       	pop	r15
   14e42:	ef 90       	pop	r14
   14e44:	df 90       	pop	r13
   14e46:	cf 90       	pop	r12
   14e48:	bf 90       	pop	r11
   14e4a:	af 90       	pop	r10
   14e4c:	7f 90       	pop	r7
   14e4e:	6f 90       	pop	r6
   14e50:	5f 90       	pop	r5
   14e52:	4f 90       	pop	r4
   14e54:	08 95       	ret

00014e56 <_ZN5Print5printEmi>:
   14e56:	21 15       	cp	r18, r1
   14e58:	31 05       	cpc	r19, r1
   14e5a:	49 f4       	brne	.+18     	; 0x14e6e <_ZN5Print5printEmi+0x18>
   14e5c:	dc 01       	movw	r26, r24
   14e5e:	ed 91       	ld	r30, X+
   14e60:	fc 91       	ld	r31, X
   14e62:	01 90       	ld	r0, Z+
   14e64:	f0 81       	ld	r31, Z
   14e66:	e0 2d       	mov	r30, r0
   14e68:	64 2f       	mov	r22, r20
   14e6a:	19 95       	eicall
   14e6c:	08 95       	ret
   14e6e:	0e 94 cf a6 	call	0x14d9e	; 0x14d9e <_ZN5Print11printNumberEmh>
   14e72:	08 95       	ret

00014e74 <_ZN5Print5printEji>:
   14e74:	9a 01       	movw	r18, r20
   14e76:	ab 01       	movw	r20, r22
   14e78:	60 e0       	ldi	r22, 0x00	; 0
   14e7a:	70 e0       	ldi	r23, 0x00	; 0
   14e7c:	0e 94 2b a7 	call	0x14e56	; 0x14e56 <_ZN5Print5printEmi>
   14e80:	08 95       	ret

00014e82 <_ZN5Print5printEhi>:
   14e82:	9a 01       	movw	r18, r20
   14e84:	46 2f       	mov	r20, r22
   14e86:	50 e0       	ldi	r21, 0x00	; 0
   14e88:	60 e0       	ldi	r22, 0x00	; 0
   14e8a:	70 e0       	ldi	r23, 0x00	; 0
   14e8c:	0e 94 2b a7 	call	0x14e56	; 0x14e56 <_ZN5Print5printEmi>
   14e90:	08 95       	ret

00014e92 <_ZN13MinimumSerial5writeEh>:
   14e92:	86 2f       	mov	r24, r22
   14e94:	0e 94 61 70 	call	0xe0c2	; 0xe0c2 <arb_sysPrintChar>
   14e98:	81 e0       	ldi	r24, 0x01	; 1
   14e9a:	90 e0       	ldi	r25, 0x00	; 0
   14e9c:	08 95       	ret

00014e9e <_GLOBAL__sub_I__ZN13MinimumSerial5beginEm>:
   14e9e:	10 92 b1 27 	sts	0x27B1, r1
   14ea2:	10 92 b2 27 	sts	0x27B2, r1
   14ea6:	82 ed       	ldi	r24, 0xD2	; 210
   14ea8:	93 e2       	ldi	r25, 0x23	; 35
   14eaa:	80 93 af 27 	sts	0x27AF, r24
   14eae:	90 93 b0 27 	sts	0x27B0, r25
   14eb2:	08 95       	ret

00014eb4 <vfprintf>:
   14eb4:	2f 92       	push	r2
   14eb6:	3f 92       	push	r3
   14eb8:	4f 92       	push	r4
   14eba:	5f 92       	push	r5
   14ebc:	6f 92       	push	r6
   14ebe:	7f 92       	push	r7
   14ec0:	8f 92       	push	r8
   14ec2:	9f 92       	push	r9
   14ec4:	af 92       	push	r10
   14ec6:	bf 92       	push	r11
   14ec8:	cf 92       	push	r12
   14eca:	df 92       	push	r13
   14ecc:	ef 92       	push	r14
   14ece:	ff 92       	push	r15
   14ed0:	0f 93       	push	r16
   14ed2:	1f 93       	push	r17
   14ed4:	df 93       	push	r29
   14ed6:	cf 93       	push	r28
   14ed8:	cd b7       	in	r28, 0x3d	; 61
   14eda:	de b7       	in	r29, 0x3e	; 62
   14edc:	61 97       	sbiw	r28, 0x11	; 17
   14ede:	cd bf       	out	0x3d, r28	; 61
   14ee0:	de bf       	out	0x3e, r29	; 62
   14ee2:	3c 01       	movw	r6, r24
   14ee4:	6e 87       	std	Y+14, r22	; 0x0e
   14ee6:	7f 87       	std	Y+15, r23	; 0x0f
   14ee8:	6a 01       	movw	r12, r20
   14eea:	fc 01       	movw	r30, r24
   14eec:	16 82       	std	Z+6, r1	; 0x06
   14eee:	17 82       	std	Z+7, r1	; 0x07
   14ef0:	83 81       	ldd	r24, Z+3	; 0x03
   14ef2:	81 fd       	sbrc	r24, 1
   14ef4:	03 c0       	rjmp	.+6      	; 0x14efc <vfprintf+0x48>
   14ef6:	6f ef       	ldi	r22, 0xFF	; 255
   14ef8:	7f ef       	ldi	r23, 0xFF	; 255
   14efa:	6f c3       	rjmp	.+1758   	; 0x155da <vfprintf+0x726>
   14efc:	9e 01       	movw	r18, r28
   14efe:	2f 5f       	subi	r18, 0xFF	; 255
   14f00:	3f 4f       	sbci	r19, 0xFF	; 255
   14f02:	28 8b       	std	Y+16, r18	; 0x10
   14f04:	39 8b       	std	Y+17, r19	; 0x11
   14f06:	f3 01       	movw	r30, r6
   14f08:	23 81       	ldd	r18, Z+3	; 0x03
   14f0a:	ee 85       	ldd	r30, Y+14	; 0x0e
   14f0c:	ff 85       	ldd	r31, Y+15	; 0x0f
   14f0e:	23 fd       	sbrc	r18, 3
   14f10:	85 91       	lpm	r24, Z+
   14f12:	23 ff       	sbrs	r18, 3
   14f14:	81 91       	ld	r24, Z+
   14f16:	ee 87       	std	Y+14, r30	; 0x0e
   14f18:	ff 87       	std	Y+15, r31	; 0x0f
   14f1a:	88 23       	and	r24, r24
   14f1c:	09 f4       	brne	.+2      	; 0x14f20 <vfprintf+0x6c>
   14f1e:	5a c3       	rjmp	.+1716   	; 0x155d4 <vfprintf+0x720>
   14f20:	85 32       	cpi	r24, 0x25	; 37
   14f22:	51 f4       	brne	.+20     	; 0x14f38 <vfprintf+0x84>
   14f24:	ee 85       	ldd	r30, Y+14	; 0x0e
   14f26:	ff 85       	ldd	r31, Y+15	; 0x0f
   14f28:	23 fd       	sbrc	r18, 3
   14f2a:	85 91       	lpm	r24, Z+
   14f2c:	23 ff       	sbrs	r18, 3
   14f2e:	81 91       	ld	r24, Z+
   14f30:	ee 87       	std	Y+14, r30	; 0x0e
   14f32:	ff 87       	std	Y+15, r31	; 0x0f
   14f34:	85 32       	cpi	r24, 0x25	; 37
   14f36:	29 f4       	brne	.+10     	; 0x14f42 <vfprintf+0x8e>
   14f38:	90 e0       	ldi	r25, 0x00	; 0
   14f3a:	b3 01       	movw	r22, r6
   14f3c:	0e 94 4e b1 	call	0x1629c	; 0x1629c <fputc>
   14f40:	e2 cf       	rjmp	.-60     	; 0x14f06 <vfprintf+0x52>
   14f42:	98 2f       	mov	r25, r24
   14f44:	10 e0       	ldi	r17, 0x00	; 0
   14f46:	88 24       	eor	r8, r8
   14f48:	99 24       	eor	r9, r9
   14f4a:	10 32       	cpi	r17, 0x20	; 32
   14f4c:	b0 f4       	brcc	.+44     	; 0x14f7a <vfprintf+0xc6>
   14f4e:	9b 32       	cpi	r25, 0x2B	; 43
   14f50:	69 f0       	breq	.+26     	; 0x14f6c <vfprintf+0xb8>
   14f52:	9c 32       	cpi	r25, 0x2C	; 44
   14f54:	28 f4       	brcc	.+10     	; 0x14f60 <vfprintf+0xac>
   14f56:	90 32       	cpi	r25, 0x20	; 32
   14f58:	51 f0       	breq	.+20     	; 0x14f6e <vfprintf+0xba>
   14f5a:	93 32       	cpi	r25, 0x23	; 35
   14f5c:	71 f4       	brne	.+28     	; 0x14f7a <vfprintf+0xc6>
   14f5e:	0b c0       	rjmp	.+22     	; 0x14f76 <vfprintf+0xc2>
   14f60:	9d 32       	cpi	r25, 0x2D	; 45
   14f62:	39 f0       	breq	.+14     	; 0x14f72 <vfprintf+0xbe>
   14f64:	90 33       	cpi	r25, 0x30	; 48
   14f66:	49 f4       	brne	.+18     	; 0x14f7a <vfprintf+0xc6>
   14f68:	11 60       	ori	r17, 0x01	; 1
   14f6a:	28 c0       	rjmp	.+80     	; 0x14fbc <vfprintf+0x108>
   14f6c:	12 60       	ori	r17, 0x02	; 2
   14f6e:	14 60       	ori	r17, 0x04	; 4
   14f70:	25 c0       	rjmp	.+74     	; 0x14fbc <vfprintf+0x108>
   14f72:	18 60       	ori	r17, 0x08	; 8
   14f74:	23 c0       	rjmp	.+70     	; 0x14fbc <vfprintf+0x108>
   14f76:	10 61       	ori	r17, 0x10	; 16
   14f78:	21 c0       	rjmp	.+66     	; 0x14fbc <vfprintf+0x108>
   14f7a:	17 fd       	sbrc	r17, 7
   14f7c:	2a c0       	rjmp	.+84     	; 0x14fd2 <vfprintf+0x11e>
   14f7e:	89 2f       	mov	r24, r25
   14f80:	80 53       	subi	r24, 0x30	; 48
   14f82:	8a 30       	cpi	r24, 0x0A	; 10
   14f84:	78 f4       	brcc	.+30     	; 0x14fa4 <vfprintf+0xf0>
   14f86:	16 ff       	sbrs	r17, 6
   14f88:	06 c0       	rjmp	.+12     	; 0x14f96 <vfprintf+0xe2>
   14f8a:	fa e0       	ldi	r31, 0x0A	; 10
   14f8c:	9f 9e       	mul	r9, r31
   14f8e:	90 2c       	mov	r9, r0
   14f90:	11 24       	eor	r1, r1
   14f92:	98 0e       	add	r9, r24
   14f94:	13 c0       	rjmp	.+38     	; 0x14fbc <vfprintf+0x108>
   14f96:	3a e0       	ldi	r19, 0x0A	; 10
   14f98:	83 9e       	mul	r8, r19
   14f9a:	80 2c       	mov	r8, r0
   14f9c:	11 24       	eor	r1, r1
   14f9e:	88 0e       	add	r8, r24
   14fa0:	10 62       	ori	r17, 0x20	; 32
   14fa2:	0c c0       	rjmp	.+24     	; 0x14fbc <vfprintf+0x108>
   14fa4:	9e 32       	cpi	r25, 0x2E	; 46
   14fa6:	21 f4       	brne	.+8      	; 0x14fb0 <vfprintf+0xfc>
   14fa8:	16 fd       	sbrc	r17, 6
   14faa:	14 c3       	rjmp	.+1576   	; 0x155d4 <vfprintf+0x720>
   14fac:	10 64       	ori	r17, 0x40	; 64
   14fae:	06 c0       	rjmp	.+12     	; 0x14fbc <vfprintf+0x108>
   14fb0:	9c 36       	cpi	r25, 0x6C	; 108
   14fb2:	11 f4       	brne	.+4      	; 0x14fb8 <vfprintf+0x104>
   14fb4:	10 68       	ori	r17, 0x80	; 128
   14fb6:	02 c0       	rjmp	.+4      	; 0x14fbc <vfprintf+0x108>
   14fb8:	98 36       	cpi	r25, 0x68	; 104
   14fba:	59 f4       	brne	.+22     	; 0x14fd2 <vfprintf+0x11e>
   14fbc:	ee 85       	ldd	r30, Y+14	; 0x0e
   14fbe:	ff 85       	ldd	r31, Y+15	; 0x0f
   14fc0:	23 fd       	sbrc	r18, 3
   14fc2:	95 91       	lpm	r25, Z+
   14fc4:	23 ff       	sbrs	r18, 3
   14fc6:	91 91       	ld	r25, Z+
   14fc8:	ee 87       	std	Y+14, r30	; 0x0e
   14fca:	ff 87       	std	Y+15, r31	; 0x0f
   14fcc:	99 23       	and	r25, r25
   14fce:	09 f0       	breq	.+2      	; 0x14fd2 <vfprintf+0x11e>
   14fd0:	bc cf       	rjmp	.-136    	; 0x14f4a <vfprintf+0x96>
   14fd2:	89 2f       	mov	r24, r25
   14fd4:	85 54       	subi	r24, 0x45	; 69
   14fd6:	83 30       	cpi	r24, 0x03	; 3
   14fd8:	20 f4       	brcc	.+8      	; 0x14fe2 <vfprintf+0x12e>
   14fda:	81 2f       	mov	r24, r17
   14fdc:	80 61       	ori	r24, 0x10	; 16
   14fde:	90 5e       	subi	r25, 0xE0	; 224
   14fe0:	07 c0       	rjmp	.+14     	; 0x14ff0 <vfprintf+0x13c>
   14fe2:	89 2f       	mov	r24, r25
   14fe4:	85 56       	subi	r24, 0x65	; 101
   14fe6:	83 30       	cpi	r24, 0x03	; 3
   14fe8:	08 f0       	brcs	.+2      	; 0x14fec <vfprintf+0x138>
   14fea:	9f c1       	rjmp	.+830    	; 0x1532a <vfprintf+0x476>
   14fec:	81 2f       	mov	r24, r17
   14fee:	8f 7e       	andi	r24, 0xEF	; 239
   14ff0:	86 fd       	sbrc	r24, 6
   14ff2:	02 c0       	rjmp	.+4      	; 0x14ff8 <vfprintf+0x144>
   14ff4:	76 e0       	ldi	r23, 0x06	; 6
   14ff6:	97 2e       	mov	r9, r23
   14ff8:	6f e3       	ldi	r22, 0x3F	; 63
   14ffa:	f6 2e       	mov	r15, r22
   14ffc:	f8 22       	and	r15, r24
   14ffe:	95 36       	cpi	r25, 0x65	; 101
   15000:	19 f4       	brne	.+6      	; 0x15008 <vfprintf+0x154>
   15002:	f0 e4       	ldi	r31, 0x40	; 64
   15004:	ff 2a       	or	r15, r31
   15006:	07 c0       	rjmp	.+14     	; 0x15016 <vfprintf+0x162>
   15008:	96 36       	cpi	r25, 0x66	; 102
   1500a:	19 f4       	brne	.+6      	; 0x15012 <vfprintf+0x15e>
   1500c:	20 e8       	ldi	r18, 0x80	; 128
   1500e:	f2 2a       	or	r15, r18
   15010:	02 c0       	rjmp	.+4      	; 0x15016 <vfprintf+0x162>
   15012:	91 10       	cpse	r9, r1
   15014:	9a 94       	dec	r9
   15016:	f7 fe       	sbrs	r15, 7
   15018:	0a c0       	rjmp	.+20     	; 0x1502e <vfprintf+0x17a>
   1501a:	3b e3       	ldi	r19, 0x3B	; 59
   1501c:	39 15       	cp	r19, r9
   1501e:	18 f4       	brcc	.+6      	; 0x15026 <vfprintf+0x172>
   15020:	5c e3       	ldi	r21, 0x3C	; 60
   15022:	b5 2e       	mov	r11, r21
   15024:	02 c0       	rjmp	.+4      	; 0x1502a <vfprintf+0x176>
   15026:	b9 2c       	mov	r11, r9
   15028:	b3 94       	inc	r11
   1502a:	27 e0       	ldi	r18, 0x07	; 7
   1502c:	09 c0       	rjmp	.+18     	; 0x15040 <vfprintf+0x18c>
   1502e:	47 e0       	ldi	r20, 0x07	; 7
   15030:	49 15       	cp	r20, r9
   15032:	20 f4       	brcc	.+8      	; 0x1503c <vfprintf+0x188>
   15034:	bb 24       	eor	r11, r11
   15036:	47 e0       	ldi	r20, 0x07	; 7
   15038:	94 2e       	mov	r9, r20
   1503a:	f7 cf       	rjmp	.-18     	; 0x1502a <vfprintf+0x176>
   1503c:	29 2d       	mov	r18, r9
   1503e:	bb 24       	eor	r11, r11
   15040:	c6 01       	movw	r24, r12
   15042:	04 96       	adiw	r24, 0x04	; 4
   15044:	8c 87       	std	Y+12, r24	; 0x0c
   15046:	9d 87       	std	Y+13, r25	; 0x0d
   15048:	f6 01       	movw	r30, r12
   1504a:	60 81       	ld	r22, Z
   1504c:	71 81       	ldd	r23, Z+1	; 0x01
   1504e:	82 81       	ldd	r24, Z+2	; 0x02
   15050:	93 81       	ldd	r25, Z+3	; 0x03
   15052:	ae 01       	movw	r20, r28
   15054:	4f 5f       	subi	r20, 0xFF	; 255
   15056:	5f 4f       	sbci	r21, 0xFF	; 255
   15058:	0b 2d       	mov	r16, r11
   1505a:	0e 94 bf af 	call	0x15f7e	; 0x15f7e <__ftoa_engine>
   1505e:	6c 01       	movw	r12, r24
   15060:	09 81       	ldd	r16, Y+1	; 0x01
   15062:	20 2e       	mov	r2, r16
   15064:	33 24       	eor	r3, r3
   15066:	00 ff       	sbrs	r16, 0
   15068:	04 c0       	rjmp	.+8      	; 0x15072 <vfprintf+0x1be>
   1506a:	03 fd       	sbrc	r16, 3
   1506c:	02 c0       	rjmp	.+4      	; 0x15072 <vfprintf+0x1be>
   1506e:	1d e2       	ldi	r17, 0x2D	; 45
   15070:	09 c0       	rjmp	.+18     	; 0x15084 <vfprintf+0x1d0>
   15072:	f1 fe       	sbrs	r15, 1
   15074:	02 c0       	rjmp	.+4      	; 0x1507a <vfprintf+0x1c6>
   15076:	1b e2       	ldi	r17, 0x2B	; 43
   15078:	05 c0       	rjmp	.+10     	; 0x15084 <vfprintf+0x1d0>
   1507a:	f2 fc       	sbrc	r15, 2
   1507c:	02 c0       	rjmp	.+4      	; 0x15082 <vfprintf+0x1ce>
   1507e:	10 e0       	ldi	r17, 0x00	; 0
   15080:	01 c0       	rjmp	.+2      	; 0x15084 <vfprintf+0x1d0>
   15082:	10 e2       	ldi	r17, 0x20	; 32
   15084:	c1 01       	movw	r24, r2
   15086:	8c 70       	andi	r24, 0x0C	; 12
   15088:	90 70       	andi	r25, 0x00	; 0
   1508a:	89 2b       	or	r24, r25
   1508c:	b9 f1       	breq	.+110    	; 0x150fc <vfprintf+0x248>
   1508e:	11 23       	and	r17, r17
   15090:	11 f4       	brne	.+4      	; 0x15096 <vfprintf+0x1e2>
   15092:	83 e0       	ldi	r24, 0x03	; 3
   15094:	01 c0       	rjmp	.+2      	; 0x15098 <vfprintf+0x1e4>
   15096:	84 e0       	ldi	r24, 0x04	; 4
   15098:	88 15       	cp	r24, r8
   1509a:	10 f0       	brcs	.+4      	; 0x150a0 <vfprintf+0x1ec>
   1509c:	88 24       	eor	r8, r8
   1509e:	0a c0       	rjmp	.+20     	; 0x150b4 <vfprintf+0x200>
   150a0:	88 1a       	sub	r8, r24
   150a2:	f3 fc       	sbrc	r15, 3
   150a4:	07 c0       	rjmp	.+14     	; 0x150b4 <vfprintf+0x200>
   150a6:	80 e2       	ldi	r24, 0x20	; 32
   150a8:	90 e0       	ldi	r25, 0x00	; 0
   150aa:	b3 01       	movw	r22, r6
   150ac:	0e 94 4e b1 	call	0x1629c	; 0x1629c <fputc>
   150b0:	8a 94       	dec	r8
   150b2:	c9 f7       	brne	.-14     	; 0x150a6 <vfprintf+0x1f2>
   150b4:	11 23       	and	r17, r17
   150b6:	29 f0       	breq	.+10     	; 0x150c2 <vfprintf+0x20e>
   150b8:	81 2f       	mov	r24, r17
   150ba:	90 e0       	ldi	r25, 0x00	; 0
   150bc:	b3 01       	movw	r22, r6
   150be:	0e 94 4e b1 	call	0x1629c	; 0x1629c <fputc>
   150c2:	23 fe       	sbrs	r2, 3
   150c4:	03 c0       	rjmp	.+6      	; 0x150cc <vfprintf+0x218>
   150c6:	0f e4       	ldi	r16, 0x4F	; 79
   150c8:	1d e0       	ldi	r17, 0x0D	; 13
   150ca:	0e c0       	rjmp	.+28     	; 0x150e8 <vfprintf+0x234>
   150cc:	03 e5       	ldi	r16, 0x53	; 83
   150ce:	1d e0       	ldi	r17, 0x0D	; 13
   150d0:	0b c0       	rjmp	.+22     	; 0x150e8 <vfprintf+0x234>
   150d2:	e1 14       	cp	r14, r1
   150d4:	f1 04       	cpc	r15, r1
   150d6:	09 f0       	breq	.+2      	; 0x150da <vfprintf+0x226>
   150d8:	80 52       	subi	r24, 0x20	; 32
   150da:	90 e0       	ldi	r25, 0x00	; 0
   150dc:	b3 01       	movw	r22, r6
   150de:	0e 94 4e b1 	call	0x1629c	; 0x1629c <fputc>
   150e2:	0f 5f       	subi	r16, 0xFF	; 255
   150e4:	1f 4f       	sbci	r17, 0xFF	; 255
   150e6:	05 c0       	rjmp	.+10     	; 0x150f2 <vfprintf+0x23e>
   150e8:	ef 2c       	mov	r14, r15
   150ea:	ff 24       	eor	r15, r15
   150ec:	f0 e1       	ldi	r31, 0x10	; 16
   150ee:	ef 22       	and	r14, r31
   150f0:	ff 24       	eor	r15, r15
   150f2:	f8 01       	movw	r30, r16
   150f4:	84 91       	lpm	r24, Z+
   150f6:	88 23       	and	r24, r24
   150f8:	61 f7       	brne	.-40     	; 0x150d2 <vfprintf+0x21e>
   150fa:	14 c1       	rjmp	.+552    	; 0x15324 <vfprintf+0x470>
   150fc:	f7 fe       	sbrs	r15, 7
   150fe:	12 c0       	rjmp	.+36     	; 0x15124 <vfprintf+0x270>
   15100:	bc 0c       	add	r11, r12
   15102:	24 fe       	sbrs	r2, 4
   15104:	04 c0       	rjmp	.+8      	; 0x1510e <vfprintf+0x25a>
   15106:	8a 81       	ldd	r24, Y+2	; 0x02
   15108:	81 33       	cpi	r24, 0x31	; 49
   1510a:	09 f4       	brne	.+2      	; 0x1510e <vfprintf+0x25a>
   1510c:	ba 94       	dec	r11
   1510e:	1b 14       	cp	r1, r11
   15110:	1c f0       	brlt	.+6      	; 0x15118 <vfprintf+0x264>
   15112:	bb 24       	eor	r11, r11
   15114:	b3 94       	inc	r11
   15116:	2d c0       	rjmp	.+90     	; 0x15172 <vfprintf+0x2be>
   15118:	f8 e0       	ldi	r31, 0x08	; 8
   1511a:	fb 15       	cp	r31, r11
   1511c:	50 f5       	brcc	.+84     	; 0x15172 <vfprintf+0x2be>
   1511e:	38 e0       	ldi	r19, 0x08	; 8
   15120:	b3 2e       	mov	r11, r19
   15122:	27 c0       	rjmp	.+78     	; 0x15172 <vfprintf+0x2be>
   15124:	f6 fc       	sbrc	r15, 6
   15126:	25 c0       	rjmp	.+74     	; 0x15172 <vfprintf+0x2be>
   15128:	89 2d       	mov	r24, r9
   1512a:	90 e0       	ldi	r25, 0x00	; 0
   1512c:	8c 15       	cp	r24, r12
   1512e:	9d 05       	cpc	r25, r13
   15130:	4c f0       	brlt	.+18     	; 0x15144 <vfprintf+0x290>
   15132:	2c ef       	ldi	r18, 0xFC	; 252
   15134:	c2 16       	cp	r12, r18
   15136:	2f ef       	ldi	r18, 0xFF	; 255
   15138:	d2 06       	cpc	r13, r18
   1513a:	24 f0       	brlt	.+8      	; 0x15144 <vfprintf+0x290>
   1513c:	30 e8       	ldi	r19, 0x80	; 128
   1513e:	f3 2a       	or	r15, r19
   15140:	01 c0       	rjmp	.+2      	; 0x15144 <vfprintf+0x290>
   15142:	9a 94       	dec	r9
   15144:	99 20       	and	r9, r9
   15146:	49 f0       	breq	.+18     	; 0x1515a <vfprintf+0x2a6>
   15148:	e2 e0       	ldi	r30, 0x02	; 2
   1514a:	f0 e0       	ldi	r31, 0x00	; 0
   1514c:	ec 0f       	add	r30, r28
   1514e:	fd 1f       	adc	r31, r29
   15150:	e9 0d       	add	r30, r9
   15152:	f1 1d       	adc	r31, r1
   15154:	80 81       	ld	r24, Z
   15156:	80 33       	cpi	r24, 0x30	; 48
   15158:	a1 f3       	breq	.-24     	; 0x15142 <vfprintf+0x28e>
   1515a:	f7 fe       	sbrs	r15, 7
   1515c:	0a c0       	rjmp	.+20     	; 0x15172 <vfprintf+0x2be>
   1515e:	b9 2c       	mov	r11, r9
   15160:	b3 94       	inc	r11
   15162:	89 2d       	mov	r24, r9
   15164:	90 e0       	ldi	r25, 0x00	; 0
   15166:	c8 16       	cp	r12, r24
   15168:	d9 06       	cpc	r13, r25
   1516a:	14 f0       	brlt	.+4      	; 0x15170 <vfprintf+0x2bc>
   1516c:	99 24       	eor	r9, r9
   1516e:	01 c0       	rjmp	.+2      	; 0x15172 <vfprintf+0x2be>
   15170:	9c 18       	sub	r9, r12
   15172:	f7 fc       	sbrc	r15, 7
   15174:	03 c0       	rjmp	.+6      	; 0x1517c <vfprintf+0x2c8>
   15176:	25 e0       	ldi	r18, 0x05	; 5
   15178:	30 e0       	ldi	r19, 0x00	; 0
   1517a:	09 c0       	rjmp	.+18     	; 0x1518e <vfprintf+0x2da>
   1517c:	1c 14       	cp	r1, r12
   1517e:	1d 04       	cpc	r1, r13
   15180:	1c f0       	brlt	.+6      	; 0x15188 <vfprintf+0x2d4>
   15182:	21 e0       	ldi	r18, 0x01	; 1
   15184:	30 e0       	ldi	r19, 0x00	; 0
   15186:	03 c0       	rjmp	.+6      	; 0x1518e <vfprintf+0x2da>
   15188:	96 01       	movw	r18, r12
   1518a:	2f 5f       	subi	r18, 0xFF	; 255
   1518c:	3f 4f       	sbci	r19, 0xFF	; 255
   1518e:	11 23       	and	r17, r17
   15190:	11 f0       	breq	.+4      	; 0x15196 <vfprintf+0x2e2>
   15192:	2f 5f       	subi	r18, 0xFF	; 255
   15194:	3f 4f       	sbci	r19, 0xFF	; 255
   15196:	99 20       	and	r9, r9
   15198:	29 f0       	breq	.+10     	; 0x151a4 <vfprintf+0x2f0>
   1519a:	89 2d       	mov	r24, r9
   1519c:	90 e0       	ldi	r25, 0x00	; 0
   1519e:	01 96       	adiw	r24, 0x01	; 1
   151a0:	28 0f       	add	r18, r24
   151a2:	39 1f       	adc	r19, r25
   151a4:	88 2d       	mov	r24, r8
   151a6:	90 e0       	ldi	r25, 0x00	; 0
   151a8:	28 17       	cp	r18, r24
   151aa:	39 07       	cpc	r19, r25
   151ac:	14 f0       	brlt	.+4      	; 0x151b2 <vfprintf+0x2fe>
   151ae:	88 24       	eor	r8, r8
   151b0:	01 c0       	rjmp	.+2      	; 0x151b4 <vfprintf+0x300>
   151b2:	82 1a       	sub	r8, r18
   151b4:	4f 2c       	mov	r4, r15
   151b6:	55 24       	eor	r5, r5
   151b8:	c2 01       	movw	r24, r4
   151ba:	89 70       	andi	r24, 0x09	; 9
   151bc:	90 70       	andi	r25, 0x00	; 0
   151be:	89 2b       	or	r24, r25
   151c0:	39 f0       	breq	.+14     	; 0x151d0 <vfprintf+0x31c>
   151c2:	08 c0       	rjmp	.+16     	; 0x151d4 <vfprintf+0x320>
   151c4:	80 e2       	ldi	r24, 0x20	; 32
   151c6:	90 e0       	ldi	r25, 0x00	; 0
   151c8:	b3 01       	movw	r22, r6
   151ca:	0e 94 4e b1 	call	0x1629c	; 0x1629c <fputc>
   151ce:	8a 94       	dec	r8
   151d0:	88 20       	and	r8, r8
   151d2:	c1 f7       	brne	.-16     	; 0x151c4 <vfprintf+0x310>
   151d4:	11 23       	and	r17, r17
   151d6:	29 f0       	breq	.+10     	; 0x151e2 <vfprintf+0x32e>
   151d8:	81 2f       	mov	r24, r17
   151da:	90 e0       	ldi	r25, 0x00	; 0
   151dc:	b3 01       	movw	r22, r6
   151de:	0e 94 4e b1 	call	0x1629c	; 0x1629c <fputc>
   151e2:	43 fe       	sbrs	r4, 3
   151e4:	07 c0       	rjmp	.+14     	; 0x151f4 <vfprintf+0x340>
   151e6:	08 c0       	rjmp	.+16     	; 0x151f8 <vfprintf+0x344>
   151e8:	80 e3       	ldi	r24, 0x30	; 48
   151ea:	90 e0       	ldi	r25, 0x00	; 0
   151ec:	b3 01       	movw	r22, r6
   151ee:	0e 94 4e b1 	call	0x1629c	; 0x1629c <fputc>
   151f2:	8a 94       	dec	r8
   151f4:	88 20       	and	r8, r8
   151f6:	c1 f7       	brne	.-16     	; 0x151e8 <vfprintf+0x334>
   151f8:	f7 fe       	sbrs	r15, 7
   151fa:	46 c0       	rjmp	.+140    	; 0x15288 <vfprintf+0x3d4>
   151fc:	86 01       	movw	r16, r12
   151fe:	d7 fe       	sbrs	r13, 7
   15200:	02 c0       	rjmp	.+4      	; 0x15206 <vfprintf+0x352>
   15202:	00 e0       	ldi	r16, 0x00	; 0
   15204:	10 e0       	ldi	r17, 0x00	; 0
   15206:	76 01       	movw	r14, r12
   15208:	08 94       	sec
   1520a:	e1 1c       	adc	r14, r1
   1520c:	f1 1c       	adc	r15, r1
   1520e:	e0 1a       	sub	r14, r16
   15210:	f1 0a       	sbc	r15, r17
   15212:	41 e0       	ldi	r20, 0x01	; 1
   15214:	50 e0       	ldi	r21, 0x00	; 0
   15216:	4c 0f       	add	r20, r28
   15218:	5d 1f       	adc	r21, r29
   1521a:	e4 0e       	add	r14, r20
   1521c:	f5 1e       	adc	r15, r21
   1521e:	26 01       	movw	r4, r12
   15220:	4b 18       	sub	r4, r11
   15222:	51 08       	sbc	r5, r1
   15224:	89 2d       	mov	r24, r9
   15226:	90 e0       	ldi	r25, 0x00	; 0
   15228:	aa 24       	eor	r10, r10
   1522a:	bb 24       	eor	r11, r11
   1522c:	a8 1a       	sub	r10, r24
   1522e:	b9 0a       	sbc	r11, r25
   15230:	5f ef       	ldi	r21, 0xFF	; 255
   15232:	0f 3f       	cpi	r16, 0xFF	; 255
   15234:	15 07       	cpc	r17, r21
   15236:	29 f4       	brne	.+10     	; 0x15242 <vfprintf+0x38e>
   15238:	8e e2       	ldi	r24, 0x2E	; 46
   1523a:	90 e0       	ldi	r25, 0x00	; 0
   1523c:	b3 01       	movw	r22, r6
   1523e:	0e 94 4e b1 	call	0x1629c	; 0x1629c <fputc>
   15242:	c0 16       	cp	r12, r16
   15244:	d1 06       	cpc	r13, r17
   15246:	34 f0       	brlt	.+12     	; 0x15254 <vfprintf+0x3a0>
   15248:	40 16       	cp	r4, r16
   1524a:	51 06       	cpc	r5, r17
   1524c:	1c f4       	brge	.+6      	; 0x15254 <vfprintf+0x3a0>
   1524e:	f7 01       	movw	r30, r14
   15250:	80 81       	ld	r24, Z
   15252:	01 c0       	rjmp	.+2      	; 0x15256 <vfprintf+0x3a2>
   15254:	80 e3       	ldi	r24, 0x30	; 48
   15256:	01 50       	subi	r16, 0x01	; 1
   15258:	10 40       	sbci	r17, 0x00	; 0
   1525a:	08 94       	sec
   1525c:	e1 1c       	adc	r14, r1
   1525e:	f1 1c       	adc	r15, r1
   15260:	0a 15       	cp	r16, r10
   15262:	1b 05       	cpc	r17, r11
   15264:	2c f0       	brlt	.+10     	; 0x15270 <vfprintf+0x3bc>
   15266:	90 e0       	ldi	r25, 0x00	; 0
   15268:	b3 01       	movw	r22, r6
   1526a:	0e 94 4e b1 	call	0x1629c	; 0x1629c <fputc>
   1526e:	e0 cf       	rjmp	.-64     	; 0x15230 <vfprintf+0x37c>
   15270:	0c 15       	cp	r16, r12
   15272:	1d 05       	cpc	r17, r13
   15274:	39 f4       	brne	.+14     	; 0x15284 <vfprintf+0x3d0>
   15276:	9a 81       	ldd	r25, Y+2	; 0x02
   15278:	96 33       	cpi	r25, 0x36	; 54
   1527a:	18 f4       	brcc	.+6      	; 0x15282 <vfprintf+0x3ce>
   1527c:	95 33       	cpi	r25, 0x35	; 53
   1527e:	11 f4       	brne	.+4      	; 0x15284 <vfprintf+0x3d0>
   15280:	24 fe       	sbrs	r2, 4
   15282:	81 e3       	ldi	r24, 0x31	; 49
   15284:	90 e0       	ldi	r25, 0x00	; 0
   15286:	4b c0       	rjmp	.+150    	; 0x1531e <vfprintf+0x46a>
   15288:	8a 81       	ldd	r24, Y+2	; 0x02
   1528a:	81 33       	cpi	r24, 0x31	; 49
   1528c:	09 f0       	breq	.+2      	; 0x15290 <vfprintf+0x3dc>
   1528e:	0f 7e       	andi	r16, 0xEF	; 239
   15290:	90 e0       	ldi	r25, 0x00	; 0
   15292:	b3 01       	movw	r22, r6
   15294:	0e 94 4e b1 	call	0x1629c	; 0x1629c <fputc>
   15298:	99 20       	and	r9, r9
   1529a:	a1 f0       	breq	.+40     	; 0x152c4 <vfprintf+0x410>
   1529c:	8e e2       	ldi	r24, 0x2E	; 46
   1529e:	90 e0       	ldi	r25, 0x00	; 0
   152a0:	b3 01       	movw	r22, r6
   152a2:	0e 94 4e b1 	call	0x1629c	; 0x1629c <fputc>
   152a6:	12 e0       	ldi	r17, 0x02	; 2
   152a8:	e1 e0       	ldi	r30, 0x01	; 1
   152aa:	f0 e0       	ldi	r31, 0x00	; 0
   152ac:	ec 0f       	add	r30, r28
   152ae:	fd 1f       	adc	r31, r29
   152b0:	e1 0f       	add	r30, r17
   152b2:	f1 1d       	adc	r31, r1
   152b4:	1f 5f       	subi	r17, 0xFF	; 255
   152b6:	80 81       	ld	r24, Z
   152b8:	90 e0       	ldi	r25, 0x00	; 0
   152ba:	b3 01       	movw	r22, r6
   152bc:	0e 94 4e b1 	call	0x1629c	; 0x1629c <fputc>
   152c0:	9a 94       	dec	r9
   152c2:	91 f7       	brne	.-28     	; 0x152a8 <vfprintf+0x3f4>
   152c4:	44 fc       	sbrc	r4, 4
   152c6:	03 c0       	rjmp	.+6      	; 0x152ce <vfprintf+0x41a>
   152c8:	85 e6       	ldi	r24, 0x65	; 101
   152ca:	90 e0       	ldi	r25, 0x00	; 0
   152cc:	02 c0       	rjmp	.+4      	; 0x152d2 <vfprintf+0x41e>
   152ce:	85 e4       	ldi	r24, 0x45	; 69
   152d0:	90 e0       	ldi	r25, 0x00	; 0
   152d2:	b3 01       	movw	r22, r6
   152d4:	0e 94 4e b1 	call	0x1629c	; 0x1629c <fputc>
   152d8:	d7 fc       	sbrc	r13, 7
   152da:	05 c0       	rjmp	.+10     	; 0x152e6 <vfprintf+0x432>
   152dc:	c1 14       	cp	r12, r1
   152de:	d1 04       	cpc	r13, r1
   152e0:	41 f4       	brne	.+16     	; 0x152f2 <vfprintf+0x43e>
   152e2:	04 ff       	sbrs	r16, 4
   152e4:	06 c0       	rjmp	.+12     	; 0x152f2 <vfprintf+0x43e>
   152e6:	d0 94       	com	r13
   152e8:	c1 94       	neg	r12
   152ea:	d1 08       	sbc	r13, r1
   152ec:	d3 94       	inc	r13
   152ee:	8d e2       	ldi	r24, 0x2D	; 45
   152f0:	01 c0       	rjmp	.+2      	; 0x152f4 <vfprintf+0x440>
   152f2:	8b e2       	ldi	r24, 0x2B	; 43
   152f4:	90 e0       	ldi	r25, 0x00	; 0
   152f6:	b3 01       	movw	r22, r6
   152f8:	0e 94 4e b1 	call	0x1629c	; 0x1629c <fputc>
   152fc:	80 e3       	ldi	r24, 0x30	; 48
   152fe:	05 c0       	rjmp	.+10     	; 0x1530a <vfprintf+0x456>
   15300:	8f 5f       	subi	r24, 0xFF	; 255
   15302:	26 ef       	ldi	r18, 0xF6	; 246
   15304:	3f ef       	ldi	r19, 0xFF	; 255
   15306:	c2 0e       	add	r12, r18
   15308:	d3 1e       	adc	r13, r19
   1530a:	3a e0       	ldi	r19, 0x0A	; 10
   1530c:	c3 16       	cp	r12, r19
   1530e:	d1 04       	cpc	r13, r1
   15310:	bc f7       	brge	.-18     	; 0x15300 <vfprintf+0x44c>
   15312:	90 e0       	ldi	r25, 0x00	; 0
   15314:	b3 01       	movw	r22, r6
   15316:	0e 94 4e b1 	call	0x1629c	; 0x1629c <fputc>
   1531a:	c6 01       	movw	r24, r12
   1531c:	c0 96       	adiw	r24, 0x30	; 48
   1531e:	b3 01       	movw	r22, r6
   15320:	0e 94 4e b1 	call	0x1629c	; 0x1629c <fputc>
   15324:	cc 84       	ldd	r12, Y+12	; 0x0c
   15326:	dd 84       	ldd	r13, Y+13	; 0x0d
   15328:	52 c1       	rjmp	.+676    	; 0x155ce <vfprintf+0x71a>
   1532a:	93 36       	cpi	r25, 0x63	; 99
   1532c:	31 f0       	breq	.+12     	; 0x1533a <vfprintf+0x486>
   1532e:	93 37       	cpi	r25, 0x73	; 115
   15330:	99 f0       	breq	.+38     	; 0x15358 <vfprintf+0x4a4>
   15332:	93 35       	cpi	r25, 0x53	; 83
   15334:	09 f0       	breq	.+2      	; 0x15338 <vfprintf+0x484>
   15336:	59 c0       	rjmp	.+178    	; 0x153ea <vfprintf+0x536>
   15338:	23 c0       	rjmp	.+70     	; 0x15380 <vfprintf+0x4cc>
   1533a:	f6 01       	movw	r30, r12
   1533c:	80 81       	ld	r24, Z
   1533e:	89 83       	std	Y+1, r24	; 0x01
   15340:	5e 01       	movw	r10, r28
   15342:	08 94       	sec
   15344:	a1 1c       	adc	r10, r1
   15346:	b1 1c       	adc	r11, r1
   15348:	22 e0       	ldi	r18, 0x02	; 2
   1534a:	30 e0       	ldi	r19, 0x00	; 0
   1534c:	c2 0e       	add	r12, r18
   1534e:	d3 1e       	adc	r13, r19
   15350:	21 e0       	ldi	r18, 0x01	; 1
   15352:	e2 2e       	mov	r14, r18
   15354:	f1 2c       	mov	r15, r1
   15356:	12 c0       	rjmp	.+36     	; 0x1537c <vfprintf+0x4c8>
   15358:	f6 01       	movw	r30, r12
   1535a:	a0 80       	ld	r10, Z
   1535c:	b1 80       	ldd	r11, Z+1	; 0x01
   1535e:	16 fd       	sbrc	r17, 6
   15360:	03 c0       	rjmp	.+6      	; 0x15368 <vfprintf+0x4b4>
   15362:	6f ef       	ldi	r22, 0xFF	; 255
   15364:	7f ef       	ldi	r23, 0xFF	; 255
   15366:	02 c0       	rjmp	.+4      	; 0x1536c <vfprintf+0x4b8>
   15368:	69 2d       	mov	r22, r9
   1536a:	70 e0       	ldi	r23, 0x00	; 0
   1536c:	22 e0       	ldi	r18, 0x02	; 2
   1536e:	30 e0       	ldi	r19, 0x00	; 0
   15370:	c2 0e       	add	r12, r18
   15372:	d3 1e       	adc	r13, r19
   15374:	c5 01       	movw	r24, r10
   15376:	0e 94 14 b1 	call	0x16228	; 0x16228 <strnlen>
   1537a:	7c 01       	movw	r14, r24
   1537c:	1f 77       	andi	r17, 0x7F	; 127
   1537e:	13 c0       	rjmp	.+38     	; 0x153a6 <vfprintf+0x4f2>
   15380:	f6 01       	movw	r30, r12
   15382:	a0 80       	ld	r10, Z
   15384:	b1 80       	ldd	r11, Z+1	; 0x01
   15386:	16 fd       	sbrc	r17, 6
   15388:	03 c0       	rjmp	.+6      	; 0x15390 <vfprintf+0x4dc>
   1538a:	6f ef       	ldi	r22, 0xFF	; 255
   1538c:	7f ef       	ldi	r23, 0xFF	; 255
   1538e:	02 c0       	rjmp	.+4      	; 0x15394 <vfprintf+0x4e0>
   15390:	69 2d       	mov	r22, r9
   15392:	70 e0       	ldi	r23, 0x00	; 0
   15394:	22 e0       	ldi	r18, 0x02	; 2
   15396:	30 e0       	ldi	r19, 0x00	; 0
   15398:	c2 0e       	add	r12, r18
   1539a:	d3 1e       	adc	r13, r19
   1539c:	c5 01       	movw	r24, r10
   1539e:	0e 94 aa b0 	call	0x16154	; 0x16154 <strnlen_P>
   153a2:	7c 01       	movw	r14, r24
   153a4:	10 68       	ori	r17, 0x80	; 128
   153a6:	13 ff       	sbrs	r17, 3
   153a8:	07 c0       	rjmp	.+14     	; 0x153b8 <vfprintf+0x504>
   153aa:	1b c0       	rjmp	.+54     	; 0x153e2 <vfprintf+0x52e>
   153ac:	80 e2       	ldi	r24, 0x20	; 32
   153ae:	90 e0       	ldi	r25, 0x00	; 0
   153b0:	b3 01       	movw	r22, r6
   153b2:	0e 94 4e b1 	call	0x1629c	; 0x1629c <fputc>
   153b6:	8a 94       	dec	r8
   153b8:	88 2d       	mov	r24, r8
   153ba:	90 e0       	ldi	r25, 0x00	; 0
   153bc:	e8 16       	cp	r14, r24
   153be:	f9 06       	cpc	r15, r25
   153c0:	a8 f3       	brcs	.-22     	; 0x153ac <vfprintf+0x4f8>
   153c2:	0f c0       	rjmp	.+30     	; 0x153e2 <vfprintf+0x52e>
   153c4:	f5 01       	movw	r30, r10
   153c6:	17 fd       	sbrc	r17, 7
   153c8:	85 91       	lpm	r24, Z+
   153ca:	17 ff       	sbrs	r17, 7
   153cc:	81 91       	ld	r24, Z+
   153ce:	5f 01       	movw	r10, r30
   153d0:	90 e0       	ldi	r25, 0x00	; 0
   153d2:	b3 01       	movw	r22, r6
   153d4:	0e 94 4e b1 	call	0x1629c	; 0x1629c <fputc>
   153d8:	81 10       	cpse	r8, r1
   153da:	8a 94       	dec	r8
   153dc:	08 94       	sec
   153de:	e1 08       	sbc	r14, r1
   153e0:	f1 08       	sbc	r15, r1
   153e2:	e1 14       	cp	r14, r1
   153e4:	f1 04       	cpc	r15, r1
   153e6:	71 f7       	brne	.-36     	; 0x153c4 <vfprintf+0x510>
   153e8:	f2 c0       	rjmp	.+484    	; 0x155ce <vfprintf+0x71a>
   153ea:	94 36       	cpi	r25, 0x64	; 100
   153ec:	11 f0       	breq	.+4      	; 0x153f2 <vfprintf+0x53e>
   153ee:	99 36       	cpi	r25, 0x69	; 105
   153f0:	89 f5       	brne	.+98     	; 0x15454 <vfprintf+0x5a0>
   153f2:	17 ff       	sbrs	r17, 7
   153f4:	08 c0       	rjmp	.+16     	; 0x15406 <vfprintf+0x552>
   153f6:	f6 01       	movw	r30, r12
   153f8:	20 81       	ld	r18, Z
   153fa:	31 81       	ldd	r19, Z+1	; 0x01
   153fc:	42 81       	ldd	r20, Z+2	; 0x02
   153fe:	53 81       	ldd	r21, Z+3	; 0x03
   15400:	84 e0       	ldi	r24, 0x04	; 4
   15402:	90 e0       	ldi	r25, 0x00	; 0
   15404:	0a c0       	rjmp	.+20     	; 0x1541a <vfprintf+0x566>
   15406:	f6 01       	movw	r30, r12
   15408:	80 81       	ld	r24, Z
   1540a:	91 81       	ldd	r25, Z+1	; 0x01
   1540c:	9c 01       	movw	r18, r24
   1540e:	44 27       	eor	r20, r20
   15410:	37 fd       	sbrc	r19, 7
   15412:	40 95       	com	r20
   15414:	54 2f       	mov	r21, r20
   15416:	82 e0       	ldi	r24, 0x02	; 2
   15418:	90 e0       	ldi	r25, 0x00	; 0
   1541a:	c8 0e       	add	r12, r24
   1541c:	d9 1e       	adc	r13, r25
   1541e:	9f e6       	ldi	r25, 0x6F	; 111
   15420:	f9 2e       	mov	r15, r25
   15422:	f1 22       	and	r15, r17
   15424:	57 ff       	sbrs	r21, 7
   15426:	09 c0       	rjmp	.+18     	; 0x1543a <vfprintf+0x586>
   15428:	50 95       	com	r21
   1542a:	40 95       	com	r20
   1542c:	30 95       	com	r19
   1542e:	21 95       	neg	r18
   15430:	3f 4f       	sbci	r19, 0xFF	; 255
   15432:	4f 4f       	sbci	r20, 0xFF	; 255
   15434:	5f 4f       	sbci	r21, 0xFF	; 255
   15436:	90 e8       	ldi	r25, 0x80	; 128
   15438:	f9 2a       	or	r15, r25
   1543a:	ca 01       	movw	r24, r20
   1543c:	b9 01       	movw	r22, r18
   1543e:	ae 01       	movw	r20, r28
   15440:	4f 5f       	subi	r20, 0xFF	; 255
   15442:	5f 4f       	sbci	r21, 0xFF	; 255
   15444:	2a e0       	ldi	r18, 0x0A	; 10
   15446:	30 e0       	ldi	r19, 0x00	; 0
   15448:	0e 94 d0 b1 	call	0x163a0	; 0x163a0 <__ultoa_invert>
   1544c:	e8 2e       	mov	r14, r24
   1544e:	e8 89       	ldd	r30, Y+16	; 0x10
   15450:	ee 1a       	sub	r14, r30
   15452:	41 c0       	rjmp	.+130    	; 0x154d6 <vfprintf+0x622>
   15454:	95 37       	cpi	r25, 0x75	; 117
   15456:	21 f4       	brne	.+8      	; 0x15460 <vfprintf+0x5ac>
   15458:	1f 7e       	andi	r17, 0xEF	; 239
   1545a:	2a e0       	ldi	r18, 0x0A	; 10
   1545c:	30 e0       	ldi	r19, 0x00	; 0
   1545e:	1c c0       	rjmp	.+56     	; 0x15498 <vfprintf+0x5e4>
   15460:	19 7f       	andi	r17, 0xF9	; 249
   15462:	9f 36       	cpi	r25, 0x6F	; 111
   15464:	61 f0       	breq	.+24     	; 0x1547e <vfprintf+0x5ca>
   15466:	90 37       	cpi	r25, 0x70	; 112
   15468:	20 f4       	brcc	.+8      	; 0x15472 <vfprintf+0x5be>
   1546a:	98 35       	cpi	r25, 0x58	; 88
   1546c:	09 f0       	breq	.+2      	; 0x15470 <vfprintf+0x5bc>
   1546e:	b2 c0       	rjmp	.+356    	; 0x155d4 <vfprintf+0x720>
   15470:	0f c0       	rjmp	.+30     	; 0x15490 <vfprintf+0x5dc>
   15472:	90 37       	cpi	r25, 0x70	; 112
   15474:	39 f0       	breq	.+14     	; 0x15484 <vfprintf+0x5d0>
   15476:	98 37       	cpi	r25, 0x78	; 120
   15478:	09 f0       	breq	.+2      	; 0x1547c <vfprintf+0x5c8>
   1547a:	ac c0       	rjmp	.+344    	; 0x155d4 <vfprintf+0x720>
   1547c:	04 c0       	rjmp	.+8      	; 0x15486 <vfprintf+0x5d2>
   1547e:	28 e0       	ldi	r18, 0x08	; 8
   15480:	30 e0       	ldi	r19, 0x00	; 0
   15482:	0a c0       	rjmp	.+20     	; 0x15498 <vfprintf+0x5e4>
   15484:	10 61       	ori	r17, 0x10	; 16
   15486:	14 fd       	sbrc	r17, 4
   15488:	14 60       	ori	r17, 0x04	; 4
   1548a:	20 e1       	ldi	r18, 0x10	; 16
   1548c:	30 e0       	ldi	r19, 0x00	; 0
   1548e:	04 c0       	rjmp	.+8      	; 0x15498 <vfprintf+0x5e4>
   15490:	14 fd       	sbrc	r17, 4
   15492:	16 60       	ori	r17, 0x06	; 6
   15494:	20 e1       	ldi	r18, 0x10	; 16
   15496:	32 e0       	ldi	r19, 0x02	; 2
   15498:	17 ff       	sbrs	r17, 7
   1549a:	08 c0       	rjmp	.+16     	; 0x154ac <vfprintf+0x5f8>
   1549c:	f6 01       	movw	r30, r12
   1549e:	60 81       	ld	r22, Z
   154a0:	71 81       	ldd	r23, Z+1	; 0x01
   154a2:	82 81       	ldd	r24, Z+2	; 0x02
   154a4:	93 81       	ldd	r25, Z+3	; 0x03
   154a6:	44 e0       	ldi	r20, 0x04	; 4
   154a8:	50 e0       	ldi	r21, 0x00	; 0
   154aa:	08 c0       	rjmp	.+16     	; 0x154bc <vfprintf+0x608>
   154ac:	f6 01       	movw	r30, r12
   154ae:	80 81       	ld	r24, Z
   154b0:	91 81       	ldd	r25, Z+1	; 0x01
   154b2:	bc 01       	movw	r22, r24
   154b4:	80 e0       	ldi	r24, 0x00	; 0
   154b6:	90 e0       	ldi	r25, 0x00	; 0
   154b8:	42 e0       	ldi	r20, 0x02	; 2
   154ba:	50 e0       	ldi	r21, 0x00	; 0
   154bc:	c4 0e       	add	r12, r20
   154be:	d5 1e       	adc	r13, r21
   154c0:	ae 01       	movw	r20, r28
   154c2:	4f 5f       	subi	r20, 0xFF	; 255
   154c4:	5f 4f       	sbci	r21, 0xFF	; 255
   154c6:	0e 94 d0 b1 	call	0x163a0	; 0x163a0 <__ultoa_invert>
   154ca:	e8 2e       	mov	r14, r24
   154cc:	58 89       	ldd	r21, Y+16	; 0x10
   154ce:	e5 1a       	sub	r14, r21
   154d0:	8f e7       	ldi	r24, 0x7F	; 127
   154d2:	f8 2e       	mov	r15, r24
   154d4:	f1 22       	and	r15, r17
   154d6:	f6 fe       	sbrs	r15, 6
   154d8:	0b c0       	rjmp	.+22     	; 0x154f0 <vfprintf+0x63c>
   154da:	8e ef       	ldi	r24, 0xFE	; 254
   154dc:	f8 22       	and	r15, r24
   154de:	e9 14       	cp	r14, r9
   154e0:	38 f4       	brcc	.+14     	; 0x154f0 <vfprintf+0x63c>
   154e2:	f4 fe       	sbrs	r15, 4
   154e4:	07 c0       	rjmp	.+14     	; 0x154f4 <vfprintf+0x640>
   154e6:	f2 fc       	sbrc	r15, 2
   154e8:	05 c0       	rjmp	.+10     	; 0x154f4 <vfprintf+0x640>
   154ea:	9f ee       	ldi	r25, 0xEF	; 239
   154ec:	f9 22       	and	r15, r25
   154ee:	02 c0       	rjmp	.+4      	; 0x154f4 <vfprintf+0x640>
   154f0:	1e 2d       	mov	r17, r14
   154f2:	01 c0       	rjmp	.+2      	; 0x154f6 <vfprintf+0x642>
   154f4:	19 2d       	mov	r17, r9
   154f6:	f4 fe       	sbrs	r15, 4
   154f8:	0d c0       	rjmp	.+26     	; 0x15514 <vfprintf+0x660>
   154fa:	fe 01       	movw	r30, r28
   154fc:	ee 0d       	add	r30, r14
   154fe:	f1 1d       	adc	r31, r1
   15500:	80 81       	ld	r24, Z
   15502:	80 33       	cpi	r24, 0x30	; 48
   15504:	19 f4       	brne	.+6      	; 0x1550c <vfprintf+0x658>
   15506:	e9 ee       	ldi	r30, 0xE9	; 233
   15508:	fe 22       	and	r15, r30
   1550a:	08 c0       	rjmp	.+16     	; 0x1551c <vfprintf+0x668>
   1550c:	1f 5f       	subi	r17, 0xFF	; 255
   1550e:	f2 fe       	sbrs	r15, 2
   15510:	05 c0       	rjmp	.+10     	; 0x1551c <vfprintf+0x668>
   15512:	03 c0       	rjmp	.+6      	; 0x1551a <vfprintf+0x666>
   15514:	8f 2d       	mov	r24, r15
   15516:	86 78       	andi	r24, 0x86	; 134
   15518:	09 f0       	breq	.+2      	; 0x1551c <vfprintf+0x668>
   1551a:	1f 5f       	subi	r17, 0xFF	; 255
   1551c:	0f 2d       	mov	r16, r15
   1551e:	f3 fc       	sbrc	r15, 3
   15520:	14 c0       	rjmp	.+40     	; 0x1554a <vfprintf+0x696>
   15522:	f0 fe       	sbrs	r15, 0
   15524:	0f c0       	rjmp	.+30     	; 0x15544 <vfprintf+0x690>
   15526:	18 15       	cp	r17, r8
   15528:	10 f0       	brcs	.+4      	; 0x1552e <vfprintf+0x67a>
   1552a:	9e 2c       	mov	r9, r14
   1552c:	0b c0       	rjmp	.+22     	; 0x15544 <vfprintf+0x690>
   1552e:	9e 2c       	mov	r9, r14
   15530:	98 0c       	add	r9, r8
   15532:	91 1a       	sub	r9, r17
   15534:	18 2d       	mov	r17, r8
   15536:	06 c0       	rjmp	.+12     	; 0x15544 <vfprintf+0x690>
   15538:	80 e2       	ldi	r24, 0x20	; 32
   1553a:	90 e0       	ldi	r25, 0x00	; 0
   1553c:	b3 01       	movw	r22, r6
   1553e:	0e 94 4e b1 	call	0x1629c	; 0x1629c <fputc>
   15542:	1f 5f       	subi	r17, 0xFF	; 255
   15544:	18 15       	cp	r17, r8
   15546:	c0 f3       	brcs	.-16     	; 0x15538 <vfprintf+0x684>
   15548:	04 c0       	rjmp	.+8      	; 0x15552 <vfprintf+0x69e>
   1554a:	18 15       	cp	r17, r8
   1554c:	10 f4       	brcc	.+4      	; 0x15552 <vfprintf+0x69e>
   1554e:	81 1a       	sub	r8, r17
   15550:	01 c0       	rjmp	.+2      	; 0x15554 <vfprintf+0x6a0>
   15552:	88 24       	eor	r8, r8
   15554:	04 ff       	sbrs	r16, 4
   15556:	0f c0       	rjmp	.+30     	; 0x15576 <vfprintf+0x6c2>
   15558:	80 e3       	ldi	r24, 0x30	; 48
   1555a:	90 e0       	ldi	r25, 0x00	; 0
   1555c:	b3 01       	movw	r22, r6
   1555e:	0e 94 4e b1 	call	0x1629c	; 0x1629c <fputc>
   15562:	02 ff       	sbrs	r16, 2
   15564:	1d c0       	rjmp	.+58     	; 0x155a0 <vfprintf+0x6ec>
   15566:	01 fd       	sbrc	r16, 1
   15568:	03 c0       	rjmp	.+6      	; 0x15570 <vfprintf+0x6bc>
   1556a:	88 e7       	ldi	r24, 0x78	; 120
   1556c:	90 e0       	ldi	r25, 0x00	; 0
   1556e:	0e c0       	rjmp	.+28     	; 0x1558c <vfprintf+0x6d8>
   15570:	88 e5       	ldi	r24, 0x58	; 88
   15572:	90 e0       	ldi	r25, 0x00	; 0
   15574:	0b c0       	rjmp	.+22     	; 0x1558c <vfprintf+0x6d8>
   15576:	80 2f       	mov	r24, r16
   15578:	86 78       	andi	r24, 0x86	; 134
   1557a:	91 f0       	breq	.+36     	; 0x155a0 <vfprintf+0x6ec>
   1557c:	01 ff       	sbrs	r16, 1
   1557e:	02 c0       	rjmp	.+4      	; 0x15584 <vfprintf+0x6d0>
   15580:	8b e2       	ldi	r24, 0x2B	; 43
   15582:	01 c0       	rjmp	.+2      	; 0x15586 <vfprintf+0x6d2>
   15584:	80 e2       	ldi	r24, 0x20	; 32
   15586:	f7 fc       	sbrc	r15, 7
   15588:	8d e2       	ldi	r24, 0x2D	; 45
   1558a:	90 e0       	ldi	r25, 0x00	; 0
   1558c:	b3 01       	movw	r22, r6
   1558e:	0e 94 4e b1 	call	0x1629c	; 0x1629c <fputc>
   15592:	06 c0       	rjmp	.+12     	; 0x155a0 <vfprintf+0x6ec>
   15594:	80 e3       	ldi	r24, 0x30	; 48
   15596:	90 e0       	ldi	r25, 0x00	; 0
   15598:	b3 01       	movw	r22, r6
   1559a:	0e 94 4e b1 	call	0x1629c	; 0x1629c <fputc>
   1559e:	9a 94       	dec	r9
   155a0:	e9 14       	cp	r14, r9
   155a2:	c0 f3       	brcs	.-16     	; 0x15594 <vfprintf+0x6e0>
   155a4:	ea 94       	dec	r14
   155a6:	e1 e0       	ldi	r30, 0x01	; 1
   155a8:	f0 e0       	ldi	r31, 0x00	; 0
   155aa:	ec 0f       	add	r30, r28
   155ac:	fd 1f       	adc	r31, r29
   155ae:	ee 0d       	add	r30, r14
   155b0:	f1 1d       	adc	r31, r1
   155b2:	80 81       	ld	r24, Z
   155b4:	90 e0       	ldi	r25, 0x00	; 0
   155b6:	b3 01       	movw	r22, r6
   155b8:	0e 94 4e b1 	call	0x1629c	; 0x1629c <fputc>
   155bc:	ee 20       	and	r14, r14
   155be:	91 f7       	brne	.-28     	; 0x155a4 <vfprintf+0x6f0>
   155c0:	06 c0       	rjmp	.+12     	; 0x155ce <vfprintf+0x71a>
   155c2:	80 e2       	ldi	r24, 0x20	; 32
   155c4:	90 e0       	ldi	r25, 0x00	; 0
   155c6:	b3 01       	movw	r22, r6
   155c8:	0e 94 4e b1 	call	0x1629c	; 0x1629c <fputc>
   155cc:	8a 94       	dec	r8
   155ce:	88 20       	and	r8, r8
   155d0:	c1 f7       	brne	.-16     	; 0x155c2 <vfprintf+0x70e>
   155d2:	99 cc       	rjmp	.-1742   	; 0x14f06 <vfprintf+0x52>
   155d4:	f3 01       	movw	r30, r6
   155d6:	66 81       	ldd	r22, Z+6	; 0x06
   155d8:	77 81       	ldd	r23, Z+7	; 0x07
   155da:	cb 01       	movw	r24, r22
   155dc:	61 96       	adiw	r28, 0x11	; 17
   155de:	cd bf       	out	0x3d, r28	; 61
   155e0:	de bf       	out	0x3e, r29	; 62
   155e2:	cf 91       	pop	r28
   155e4:	df 91       	pop	r29
   155e6:	1f 91       	pop	r17
   155e8:	0f 91       	pop	r16
   155ea:	ff 90       	pop	r15
   155ec:	ef 90       	pop	r14
   155ee:	df 90       	pop	r13
   155f0:	cf 90       	pop	r12
   155f2:	bf 90       	pop	r11
   155f4:	af 90       	pop	r10
   155f6:	9f 90       	pop	r9
   155f8:	8f 90       	pop	r8
   155fa:	7f 90       	pop	r7
   155fc:	6f 90       	pop	r6
   155fe:	5f 90       	pop	r5
   15600:	4f 90       	pop	r4
   15602:	3f 90       	pop	r3
   15604:	2f 90       	pop	r2
   15606:	08 95       	ret

00015608 <__subsf3>:
   15608:	50 58       	subi	r21, 0x80	; 128

0001560a <__addsf3>:
   1560a:	bb 27       	eor	r27, r27
   1560c:	aa 27       	eor	r26, r26
   1560e:	0e d0       	rcall	.+28     	; 0x1562c <__addsf3x>
   15610:	af c2       	rjmp	.+1374   	; 0x15b70 <__fp_round>
   15612:	78 d2       	rcall	.+1264   	; 0x15b04 <__fp_pscA>
   15614:	30 f0       	brcs	.+12     	; 0x15622 <__addsf3+0x18>
   15616:	7d d2       	rcall	.+1274   	; 0x15b12 <__fp_pscB>
   15618:	20 f0       	brcs	.+8      	; 0x15622 <__addsf3+0x18>
   1561a:	31 f4       	brne	.+12     	; 0x15628 <__addsf3+0x1e>
   1561c:	9f 3f       	cpi	r25, 0xFF	; 255
   1561e:	11 f4       	brne	.+4      	; 0x15624 <__addsf3+0x1a>
   15620:	1e f4       	brtc	.+6      	; 0x15628 <__addsf3+0x1e>
   15622:	38 c2       	rjmp	.+1136   	; 0x15a94 <__fp_nan>
   15624:	0e f4       	brtc	.+2      	; 0x15628 <__addsf3+0x1e>
   15626:	e0 95       	com	r30
   15628:	e7 fb       	bst	r30, 7
   1562a:	2e c2       	rjmp	.+1116   	; 0x15a88 <__fp_inf>

0001562c <__addsf3x>:
   1562c:	e9 2f       	mov	r30, r25
   1562e:	c2 d2       	rcall	.+1412   	; 0x15bb4 <__fp_split3>
   15630:	80 f3       	brcs	.-32     	; 0x15612 <__addsf3+0x8>
   15632:	ba 17       	cp	r27, r26
   15634:	62 07       	cpc	r22, r18
   15636:	73 07       	cpc	r23, r19
   15638:	84 07       	cpc	r24, r20
   1563a:	95 07       	cpc	r25, r21
   1563c:	18 f0       	brcs	.+6      	; 0x15644 <__addsf3x+0x18>
   1563e:	71 f4       	brne	.+28     	; 0x1565c <__addsf3x+0x30>
   15640:	9e f5       	brtc	.+102    	; 0x156a8 <__addsf3x+0x7c>
   15642:	da c2       	rjmp	.+1460   	; 0x15bf8 <__fp_zero>
   15644:	0e f4       	brtc	.+2      	; 0x15648 <__addsf3x+0x1c>
   15646:	e0 95       	com	r30
   15648:	0b 2e       	mov	r0, r27
   1564a:	ba 2f       	mov	r27, r26
   1564c:	a0 2d       	mov	r26, r0
   1564e:	0b 01       	movw	r0, r22
   15650:	b9 01       	movw	r22, r18
   15652:	90 01       	movw	r18, r0
   15654:	0c 01       	movw	r0, r24
   15656:	ca 01       	movw	r24, r20
   15658:	a0 01       	movw	r20, r0
   1565a:	11 24       	eor	r1, r1
   1565c:	ff 27       	eor	r31, r31
   1565e:	59 1b       	sub	r21, r25
   15660:	99 f0       	breq	.+38     	; 0x15688 <__addsf3x+0x5c>
   15662:	59 3f       	cpi	r21, 0xF9	; 249
   15664:	50 f4       	brcc	.+20     	; 0x1567a <__addsf3x+0x4e>
   15666:	50 3e       	cpi	r21, 0xE0	; 224
   15668:	68 f1       	brcs	.+90     	; 0x156c4 <__addsf3x+0x98>
   1566a:	1a 16       	cp	r1, r26
   1566c:	f0 40       	sbci	r31, 0x00	; 0
   1566e:	a2 2f       	mov	r26, r18
   15670:	23 2f       	mov	r18, r19
   15672:	34 2f       	mov	r19, r20
   15674:	44 27       	eor	r20, r20
   15676:	58 5f       	subi	r21, 0xF8	; 248
   15678:	f3 cf       	rjmp	.-26     	; 0x15660 <__addsf3x+0x34>
   1567a:	46 95       	lsr	r20
   1567c:	37 95       	ror	r19
   1567e:	27 95       	ror	r18
   15680:	a7 95       	ror	r26
   15682:	f0 40       	sbci	r31, 0x00	; 0
   15684:	53 95       	inc	r21
   15686:	c9 f7       	brne	.-14     	; 0x1567a <__addsf3x+0x4e>
   15688:	7e f4       	brtc	.+30     	; 0x156a8 <__addsf3x+0x7c>
   1568a:	1f 16       	cp	r1, r31
   1568c:	ba 0b       	sbc	r27, r26
   1568e:	62 0b       	sbc	r22, r18
   15690:	73 0b       	sbc	r23, r19
   15692:	84 0b       	sbc	r24, r20
   15694:	ba f0       	brmi	.+46     	; 0x156c4 <__addsf3x+0x98>
   15696:	91 50       	subi	r25, 0x01	; 1
   15698:	a1 f0       	breq	.+40     	; 0x156c2 <__addsf3x+0x96>
   1569a:	ff 0f       	add	r31, r31
   1569c:	bb 1f       	adc	r27, r27
   1569e:	66 1f       	adc	r22, r22
   156a0:	77 1f       	adc	r23, r23
   156a2:	88 1f       	adc	r24, r24
   156a4:	c2 f7       	brpl	.-16     	; 0x15696 <__addsf3x+0x6a>
   156a6:	0e c0       	rjmp	.+28     	; 0x156c4 <__addsf3x+0x98>
   156a8:	ba 0f       	add	r27, r26
   156aa:	62 1f       	adc	r22, r18
   156ac:	73 1f       	adc	r23, r19
   156ae:	84 1f       	adc	r24, r20
   156b0:	48 f4       	brcc	.+18     	; 0x156c4 <__addsf3x+0x98>
   156b2:	87 95       	ror	r24
   156b4:	77 95       	ror	r23
   156b6:	67 95       	ror	r22
   156b8:	b7 95       	ror	r27
   156ba:	f7 95       	ror	r31
   156bc:	9e 3f       	cpi	r25, 0xFE	; 254
   156be:	08 f0       	brcs	.+2      	; 0x156c2 <__addsf3x+0x96>
   156c0:	b3 cf       	rjmp	.-154    	; 0x15628 <__addsf3+0x1e>
   156c2:	93 95       	inc	r25
   156c4:	88 0f       	add	r24, r24
   156c6:	08 f0       	brcs	.+2      	; 0x156ca <__addsf3x+0x9e>
   156c8:	99 27       	eor	r25, r25
   156ca:	ee 0f       	add	r30, r30
   156cc:	97 95       	ror	r25
   156ce:	87 95       	ror	r24
   156d0:	08 95       	ret
   156d2:	18 d2       	rcall	.+1072   	; 0x15b04 <__fp_pscA>
   156d4:	58 f0       	brcs	.+22     	; 0x156ec <__addsf3x+0xc0>
   156d6:	80 e8       	ldi	r24, 0x80	; 128
   156d8:	91 e0       	ldi	r25, 0x01	; 1
   156da:	09 f4       	brne	.+2      	; 0x156de <__addsf3x+0xb2>
   156dc:	9e ef       	ldi	r25, 0xFE	; 254
   156de:	19 d2       	rcall	.+1074   	; 0x15b12 <__fp_pscB>
   156e0:	28 f0       	brcs	.+10     	; 0x156ec <__addsf3x+0xc0>
   156e2:	40 e8       	ldi	r20, 0x80	; 128
   156e4:	51 e0       	ldi	r21, 0x01	; 1
   156e6:	59 f4       	brne	.+22     	; 0x156fe <atan2+0xe>
   156e8:	5e ef       	ldi	r21, 0xFE	; 254
   156ea:	09 c0       	rjmp	.+18     	; 0x156fe <atan2+0xe>
   156ec:	d3 c1       	rjmp	.+934    	; 0x15a94 <__fp_nan>
   156ee:	84 c2       	rjmp	.+1288   	; 0x15bf8 <__fp_zero>

000156f0 <atan2>:
   156f0:	e9 2f       	mov	r30, r25
   156f2:	e0 78       	andi	r30, 0x80	; 128
   156f4:	5f d2       	rcall	.+1214   	; 0x15bb4 <__fp_split3>
   156f6:	68 f3       	brcs	.-38     	; 0x156d2 <__addsf3x+0xa6>
   156f8:	09 2e       	mov	r0, r25
   156fa:	05 2a       	or	r0, r21
   156fc:	c1 f3       	breq	.-16     	; 0x156ee <__addsf3x+0xc2>
   156fe:	26 17       	cp	r18, r22
   15700:	37 07       	cpc	r19, r23
   15702:	48 07       	cpc	r20, r24
   15704:	59 07       	cpc	r21, r25
   15706:	38 f0       	brcs	.+14     	; 0x15716 <atan2+0x26>
   15708:	0e 2e       	mov	r0, r30
   1570a:	07 f8       	bld	r0, 7
   1570c:	e0 25       	eor	r30, r0
   1570e:	69 f0       	breq	.+26     	; 0x1572a <atan2+0x3a>
   15710:	e0 25       	eor	r30, r0
   15712:	e0 64       	ori	r30, 0x40	; 64
   15714:	0a c0       	rjmp	.+20     	; 0x1572a <atan2+0x3a>
   15716:	ef 63       	ori	r30, 0x3F	; 63
   15718:	07 f8       	bld	r0, 7
   1571a:	00 94       	com	r0
   1571c:	07 fa       	bst	r0, 7
   1571e:	db 01       	movw	r26, r22
   15720:	b9 01       	movw	r22, r18
   15722:	9d 01       	movw	r18, r26
   15724:	dc 01       	movw	r26, r24
   15726:	ca 01       	movw	r24, r20
   15728:	ad 01       	movw	r20, r26
   1572a:	ef 93       	push	r30
   1572c:	4a d0       	rcall	.+148    	; 0x157c2 <__divsf3_pse>
   1572e:	20 d2       	rcall	.+1088   	; 0x15b70 <__fp_round>
   15730:	0a d0       	rcall	.+20     	; 0x15746 <atan>
   15732:	5f 91       	pop	r21
   15734:	55 23       	and	r21, r21
   15736:	31 f0       	breq	.+12     	; 0x15744 <atan2+0x54>
   15738:	2b ed       	ldi	r18, 0xDB	; 219
   1573a:	3f e0       	ldi	r19, 0x0F	; 15
   1573c:	49 e4       	ldi	r20, 0x49	; 73
   1573e:	50 fd       	sbrc	r21, 0
   15740:	49 ec       	ldi	r20, 0xC9	; 201
   15742:	63 cf       	rjmp	.-314    	; 0x1560a <__addsf3>
   15744:	08 95       	ret

00015746 <atan>:
   15746:	df 93       	push	r29
   15748:	dd 27       	eor	r29, r29
   1574a:	b9 2f       	mov	r27, r25
   1574c:	bf 77       	andi	r27, 0x7F	; 127
   1574e:	40 e8       	ldi	r20, 0x80	; 128
   15750:	5f e3       	ldi	r21, 0x3F	; 63
   15752:	16 16       	cp	r1, r22
   15754:	17 06       	cpc	r1, r23
   15756:	48 07       	cpc	r20, r24
   15758:	5b 07       	cpc	r21, r27
   1575a:	10 f4       	brcc	.+4      	; 0x15760 <atan+0x1a>
   1575c:	d9 2f       	mov	r29, r25
   1575e:	57 d2       	rcall	.+1198   	; 0x15c0e <inverse>
   15760:	9f 93       	push	r25
   15762:	8f 93       	push	r24
   15764:	7f 93       	push	r23
   15766:	6f 93       	push	r22
   15768:	c2 d2       	rcall	.+1412   	; 0x15cee <square>
   1576a:	e0 e2       	ldi	r30, 0x20	; 32
   1576c:	f2 e0       	ldi	r31, 0x02	; 2
   1576e:	a5 d1       	rcall	.+842    	; 0x15aba <__fp_powser>
   15770:	ff d1       	rcall	.+1022   	; 0x15b70 <__fp_round>
   15772:	2f 91       	pop	r18
   15774:	3f 91       	pop	r19
   15776:	4f 91       	pop	r20
   15778:	5f 91       	pop	r21
   1577a:	5c d2       	rcall	.+1208   	; 0x15c34 <__mulsf3x>
   1577c:	dd 23       	and	r29, r29
   1577e:	49 f0       	breq	.+18     	; 0x15792 <atan+0x4c>
   15780:	90 58       	subi	r25, 0x80	; 128
   15782:	a2 ea       	ldi	r26, 0xA2	; 162
   15784:	2a ed       	ldi	r18, 0xDA	; 218
   15786:	3f e0       	ldi	r19, 0x0F	; 15
   15788:	49 ec       	ldi	r20, 0xC9	; 201
   1578a:	5f e3       	ldi	r21, 0x3F	; 63
   1578c:	d0 78       	andi	r29, 0x80	; 128
   1578e:	5d 27       	eor	r21, r29
   15790:	4d df       	rcall	.-358    	; 0x1562c <__addsf3x>
   15792:	df 91       	pop	r29
   15794:	ed c1       	rjmp	.+986    	; 0x15b70 <__fp_round>

00015796 <__cmpsf2>:
   15796:	54 d1       	rcall	.+680    	; 0x15a40 <__fp_cmp>
   15798:	08 f4       	brcc	.+2      	; 0x1579c <__cmpsf2+0x6>
   1579a:	81 e0       	ldi	r24, 0x01	; 1
   1579c:	08 95       	ret

0001579e <cos>:
   1579e:	c1 d1       	rcall	.+898    	; 0x15b22 <__fp_rempio2>
   157a0:	e3 95       	inc	r30
   157a2:	f7 c1       	rjmp	.+1006   	; 0x15b92 <__fp_sinus>

000157a4 <__divsf3>:
   157a4:	0c d0       	rcall	.+24     	; 0x157be <__divsf3x>
   157a6:	e4 c1       	rjmp	.+968    	; 0x15b70 <__fp_round>
   157a8:	b4 d1       	rcall	.+872    	; 0x15b12 <__fp_pscB>
   157aa:	40 f0       	brcs	.+16     	; 0x157bc <__divsf3+0x18>
   157ac:	ab d1       	rcall	.+854    	; 0x15b04 <__fp_pscA>
   157ae:	30 f0       	brcs	.+12     	; 0x157bc <__divsf3+0x18>
   157b0:	21 f4       	brne	.+8      	; 0x157ba <__divsf3+0x16>
   157b2:	5f 3f       	cpi	r21, 0xFF	; 255
   157b4:	19 f0       	breq	.+6      	; 0x157bc <__divsf3+0x18>
   157b6:	68 c1       	rjmp	.+720    	; 0x15a88 <__fp_inf>
   157b8:	51 11       	cpse	r21, r1
   157ba:	1f c2       	rjmp	.+1086   	; 0x15bfa <__fp_szero>
   157bc:	6b c1       	rjmp	.+726    	; 0x15a94 <__fp_nan>

000157be <__divsf3x>:
   157be:	fa d1       	rcall	.+1012   	; 0x15bb4 <__fp_split3>
   157c0:	98 f3       	brcs	.-26     	; 0x157a8 <__divsf3+0x4>

000157c2 <__divsf3_pse>:
   157c2:	99 23       	and	r25, r25
   157c4:	c9 f3       	breq	.-14     	; 0x157b8 <__divsf3+0x14>
   157c6:	55 23       	and	r21, r21
   157c8:	b1 f3       	breq	.-20     	; 0x157b6 <__divsf3+0x12>
   157ca:	95 1b       	sub	r25, r21
   157cc:	55 0b       	sbc	r21, r21
   157ce:	bb 27       	eor	r27, r27
   157d0:	aa 27       	eor	r26, r26
   157d2:	62 17       	cp	r22, r18
   157d4:	73 07       	cpc	r23, r19
   157d6:	84 07       	cpc	r24, r20
   157d8:	38 f0       	brcs	.+14     	; 0x157e8 <__divsf3_pse+0x26>
   157da:	9f 5f       	subi	r25, 0xFF	; 255
   157dc:	5f 4f       	sbci	r21, 0xFF	; 255
   157de:	22 0f       	add	r18, r18
   157e0:	33 1f       	adc	r19, r19
   157e2:	44 1f       	adc	r20, r20
   157e4:	aa 1f       	adc	r26, r26
   157e6:	a9 f3       	breq	.-22     	; 0x157d2 <__divsf3_pse+0x10>
   157e8:	33 d0       	rcall	.+102    	; 0x15850 <__divsf3_pse+0x8e>
   157ea:	0e 2e       	mov	r0, r30
   157ec:	3a f0       	brmi	.+14     	; 0x157fc <__divsf3_pse+0x3a>
   157ee:	e0 e8       	ldi	r30, 0x80	; 128
   157f0:	30 d0       	rcall	.+96     	; 0x15852 <__divsf3_pse+0x90>
   157f2:	91 50       	subi	r25, 0x01	; 1
   157f4:	50 40       	sbci	r21, 0x00	; 0
   157f6:	e6 95       	lsr	r30
   157f8:	00 1c       	adc	r0, r0
   157fa:	ca f7       	brpl	.-14     	; 0x157ee <__divsf3_pse+0x2c>
   157fc:	29 d0       	rcall	.+82     	; 0x15850 <__divsf3_pse+0x8e>
   157fe:	fe 2f       	mov	r31, r30
   15800:	27 d0       	rcall	.+78     	; 0x15850 <__divsf3_pse+0x8e>
   15802:	66 0f       	add	r22, r22
   15804:	77 1f       	adc	r23, r23
   15806:	88 1f       	adc	r24, r24
   15808:	bb 1f       	adc	r27, r27
   1580a:	26 17       	cp	r18, r22
   1580c:	37 07       	cpc	r19, r23
   1580e:	48 07       	cpc	r20, r24
   15810:	ab 07       	cpc	r26, r27
   15812:	b0 e8       	ldi	r27, 0x80	; 128
   15814:	09 f0       	breq	.+2      	; 0x15818 <__divsf3_pse+0x56>
   15816:	bb 0b       	sbc	r27, r27
   15818:	80 2d       	mov	r24, r0
   1581a:	bf 01       	movw	r22, r30
   1581c:	ff 27       	eor	r31, r31
   1581e:	93 58       	subi	r25, 0x83	; 131
   15820:	5f 4f       	sbci	r21, 0xFF	; 255
   15822:	2a f0       	brmi	.+10     	; 0x1582e <__divsf3_pse+0x6c>
   15824:	9e 3f       	cpi	r25, 0xFE	; 254
   15826:	51 05       	cpc	r21, r1
   15828:	68 f0       	brcs	.+26     	; 0x15844 <__divsf3_pse+0x82>
   1582a:	2e c1       	rjmp	.+604    	; 0x15a88 <__fp_inf>
   1582c:	e6 c1       	rjmp	.+972    	; 0x15bfa <__fp_szero>
   1582e:	5f 3f       	cpi	r21, 0xFF	; 255
   15830:	ec f3       	brlt	.-6      	; 0x1582c <__divsf3_pse+0x6a>
   15832:	98 3e       	cpi	r25, 0xE8	; 232
   15834:	dc f3       	brlt	.-10     	; 0x1582c <__divsf3_pse+0x6a>
   15836:	86 95       	lsr	r24
   15838:	77 95       	ror	r23
   1583a:	67 95       	ror	r22
   1583c:	b7 95       	ror	r27
   1583e:	f7 95       	ror	r31
   15840:	9f 5f       	subi	r25, 0xFF	; 255
   15842:	c9 f7       	brne	.-14     	; 0x15836 <__divsf3_pse+0x74>
   15844:	88 0f       	add	r24, r24
   15846:	91 1d       	adc	r25, r1
   15848:	96 95       	lsr	r25
   1584a:	87 95       	ror	r24
   1584c:	97 f9       	bld	r25, 7
   1584e:	08 95       	ret
   15850:	e1 e0       	ldi	r30, 0x01	; 1
   15852:	66 0f       	add	r22, r22
   15854:	77 1f       	adc	r23, r23
   15856:	88 1f       	adc	r24, r24
   15858:	bb 1f       	adc	r27, r27
   1585a:	62 17       	cp	r22, r18
   1585c:	73 07       	cpc	r23, r19
   1585e:	84 07       	cpc	r24, r20
   15860:	ba 07       	cpc	r27, r26
   15862:	20 f0       	brcs	.+8      	; 0x1586c <__divsf3_pse+0xaa>
   15864:	62 1b       	sub	r22, r18
   15866:	73 0b       	sbc	r23, r19
   15868:	84 0b       	sbc	r24, r20
   1586a:	ba 0b       	sbc	r27, r26
   1586c:	ee 1f       	adc	r30, r30
   1586e:	88 f7       	brcc	.-30     	; 0x15852 <__divsf3_pse+0x90>
   15870:	e0 95       	com	r30
   15872:	08 95       	ret

00015874 <__fixsfdi>:
   15874:	be e3       	ldi	r27, 0x3E	; 62
   15876:	04 d0       	rcall	.+8      	; 0x15880 <__fixunssfdi+0x2>
   15878:	08 f4       	brcc	.+2      	; 0x1587c <__fixsfdi+0x8>
   1587a:	90 e8       	ldi	r25, 0x80	; 128
   1587c:	08 95       	ret

0001587e <__fixunssfdi>:
   1587e:	bf e3       	ldi	r27, 0x3F	; 63
   15880:	22 27       	eor	r18, r18
   15882:	33 27       	eor	r19, r19
   15884:	a9 01       	movw	r20, r18
   15886:	9e d1       	rcall	.+828    	; 0x15bc4 <__fp_splitA>
   15888:	58 f1       	brcs	.+86     	; 0x158e0 <__fixunssfdi+0x62>
   1588a:	9f 57       	subi	r25, 0x7F	; 127
   1588c:	40 f1       	brcs	.+80     	; 0x158de <__fixunssfdi+0x60>
   1588e:	b9 17       	cp	r27, r25
   15890:	38 f1       	brcs	.+78     	; 0x158e0 <__fixunssfdi+0x62>
   15892:	bf e3       	ldi	r27, 0x3F	; 63
   15894:	b9 1b       	sub	r27, r25
   15896:	99 27       	eor	r25, r25
   15898:	b8 50       	subi	r27, 0x08	; 8
   1589a:	3a f4       	brpl	.+14     	; 0x158aa <__fixunssfdi+0x2c>
   1589c:	66 0f       	add	r22, r22
   1589e:	77 1f       	adc	r23, r23
   158a0:	88 1f       	adc	r24, r24
   158a2:	99 1f       	adc	r25, r25
   158a4:	b3 95       	inc	r27
   158a6:	d2 f3       	brmi	.-12     	; 0x1589c <__fixunssfdi+0x1e>
   158a8:	16 c0       	rjmp	.+44     	; 0x158d6 <__fixunssfdi+0x58>
   158aa:	b8 50       	subi	r27, 0x08	; 8
   158ac:	4a f0       	brmi	.+18     	; 0x158c0 <__fixunssfdi+0x42>
   158ae:	23 2f       	mov	r18, r19
   158b0:	34 2f       	mov	r19, r20
   158b2:	45 2f       	mov	r20, r21
   158b4:	56 2f       	mov	r21, r22
   158b6:	67 2f       	mov	r22, r23
   158b8:	78 2f       	mov	r23, r24
   158ba:	88 27       	eor	r24, r24
   158bc:	b8 50       	subi	r27, 0x08	; 8
   158be:	ba f7       	brpl	.-18     	; 0x158ae <__fixunssfdi+0x30>
   158c0:	b8 5f       	subi	r27, 0xF8	; 248
   158c2:	49 f0       	breq	.+18     	; 0x158d6 <__fixunssfdi+0x58>
   158c4:	86 95       	lsr	r24
   158c6:	77 95       	ror	r23
   158c8:	67 95       	ror	r22
   158ca:	57 95       	ror	r21
   158cc:	47 95       	ror	r20
   158ce:	37 95       	ror	r19
   158d0:	27 95       	ror	r18
   158d2:	ba 95       	dec	r27
   158d4:	b9 f7       	brne	.-18     	; 0x158c4 <__fixunssfdi+0x46>
   158d6:	0e f4       	brtc	.+2      	; 0x158da <__fixunssfdi+0x5c>
   158d8:	e0 d0       	rcall	.+448    	; 0x15a9a <__fp_negdi>
   158da:	88 94       	clc
   158dc:	08 95       	ret
   158de:	88 94       	clc
   158e0:	60 e0       	ldi	r22, 0x00	; 0
   158e2:	70 e0       	ldi	r23, 0x00	; 0
   158e4:	cb 01       	movw	r24, r22
   158e6:	08 95       	ret

000158e8 <__fixsfsi>:
   158e8:	04 d0       	rcall	.+8      	; 0x158f2 <__fixunssfsi>
   158ea:	68 94       	set
   158ec:	b1 11       	cpse	r27, r1
   158ee:	85 c1       	rjmp	.+778    	; 0x15bfa <__fp_szero>
   158f0:	08 95       	ret

000158f2 <__fixunssfsi>:
   158f2:	68 d1       	rcall	.+720    	; 0x15bc4 <__fp_splitA>
   158f4:	88 f0       	brcs	.+34     	; 0x15918 <__fixunssfsi+0x26>
   158f6:	9f 57       	subi	r25, 0x7F	; 127
   158f8:	90 f0       	brcs	.+36     	; 0x1591e <__fixunssfsi+0x2c>
   158fa:	b9 2f       	mov	r27, r25
   158fc:	99 27       	eor	r25, r25
   158fe:	b7 51       	subi	r27, 0x17	; 23
   15900:	a0 f0       	brcs	.+40     	; 0x1592a <__fixunssfsi+0x38>
   15902:	d1 f0       	breq	.+52     	; 0x15938 <__fixunssfsi+0x46>
   15904:	66 0f       	add	r22, r22
   15906:	77 1f       	adc	r23, r23
   15908:	88 1f       	adc	r24, r24
   1590a:	99 1f       	adc	r25, r25
   1590c:	1a f0       	brmi	.+6      	; 0x15914 <__fixunssfsi+0x22>
   1590e:	ba 95       	dec	r27
   15910:	c9 f7       	brne	.-14     	; 0x15904 <__fixunssfsi+0x12>
   15912:	12 c0       	rjmp	.+36     	; 0x15938 <__fixunssfsi+0x46>
   15914:	b1 30       	cpi	r27, 0x01	; 1
   15916:	81 f0       	breq	.+32     	; 0x15938 <__fixunssfsi+0x46>
   15918:	6f d1       	rcall	.+734    	; 0x15bf8 <__fp_zero>
   1591a:	b1 e0       	ldi	r27, 0x01	; 1
   1591c:	08 95       	ret
   1591e:	6c c1       	rjmp	.+728    	; 0x15bf8 <__fp_zero>
   15920:	67 2f       	mov	r22, r23
   15922:	78 2f       	mov	r23, r24
   15924:	88 27       	eor	r24, r24
   15926:	b8 5f       	subi	r27, 0xF8	; 248
   15928:	39 f0       	breq	.+14     	; 0x15938 <__fixunssfsi+0x46>
   1592a:	b9 3f       	cpi	r27, 0xF9	; 249
   1592c:	cc f3       	brlt	.-14     	; 0x15920 <__fixunssfsi+0x2e>
   1592e:	86 95       	lsr	r24
   15930:	77 95       	ror	r23
   15932:	67 95       	ror	r22
   15934:	b3 95       	inc	r27
   15936:	d9 f7       	brne	.-10     	; 0x1592e <__fixunssfsi+0x3c>
   15938:	3e f4       	brtc	.+14     	; 0x15948 <__fixunssfsi+0x56>
   1593a:	90 95       	com	r25
   1593c:	80 95       	com	r24
   1593e:	70 95       	com	r23
   15940:	61 95       	neg	r22
   15942:	7f 4f       	sbci	r23, 0xFF	; 255
   15944:	8f 4f       	sbci	r24, 0xFF	; 255
   15946:	9f 4f       	sbci	r25, 0xFF	; 255
   15948:	08 95       	ret

0001594a <__floatunsisf>:
   1594a:	e8 94       	clt
   1594c:	09 c0       	rjmp	.+18     	; 0x15960 <__floatsisf+0x12>

0001594e <__floatsisf>:
   1594e:	97 fb       	bst	r25, 7
   15950:	3e f4       	brtc	.+14     	; 0x15960 <__floatsisf+0x12>
   15952:	90 95       	com	r25
   15954:	80 95       	com	r24
   15956:	70 95       	com	r23
   15958:	61 95       	neg	r22
   1595a:	7f 4f       	sbci	r23, 0xFF	; 255
   1595c:	8f 4f       	sbci	r24, 0xFF	; 255
   1595e:	9f 4f       	sbci	r25, 0xFF	; 255
   15960:	99 23       	and	r25, r25
   15962:	a9 f0       	breq	.+42     	; 0x1598e <__floatsisf+0x40>
   15964:	f9 2f       	mov	r31, r25
   15966:	96 e9       	ldi	r25, 0x96	; 150
   15968:	bb 27       	eor	r27, r27
   1596a:	93 95       	inc	r25
   1596c:	f6 95       	lsr	r31
   1596e:	87 95       	ror	r24
   15970:	77 95       	ror	r23
   15972:	67 95       	ror	r22
   15974:	b7 95       	ror	r27
   15976:	f1 11       	cpse	r31, r1
   15978:	f8 cf       	rjmp	.-16     	; 0x1596a <__floatsisf+0x1c>
   1597a:	fa f4       	brpl	.+62     	; 0x159ba <__floatsisf+0x6c>
   1597c:	bb 0f       	add	r27, r27
   1597e:	11 f4       	brne	.+4      	; 0x15984 <__floatsisf+0x36>
   15980:	60 ff       	sbrs	r22, 0
   15982:	1b c0       	rjmp	.+54     	; 0x159ba <__floatsisf+0x6c>
   15984:	6f 5f       	subi	r22, 0xFF	; 255
   15986:	7f 4f       	sbci	r23, 0xFF	; 255
   15988:	8f 4f       	sbci	r24, 0xFF	; 255
   1598a:	9f 4f       	sbci	r25, 0xFF	; 255
   1598c:	16 c0       	rjmp	.+44     	; 0x159ba <__floatsisf+0x6c>
   1598e:	88 23       	and	r24, r24
   15990:	11 f0       	breq	.+4      	; 0x15996 <__floatsisf+0x48>
   15992:	96 e9       	ldi	r25, 0x96	; 150
   15994:	11 c0       	rjmp	.+34     	; 0x159b8 <__floatsisf+0x6a>
   15996:	77 23       	and	r23, r23
   15998:	21 f0       	breq	.+8      	; 0x159a2 <__floatsisf+0x54>
   1599a:	9e e8       	ldi	r25, 0x8E	; 142
   1599c:	87 2f       	mov	r24, r23
   1599e:	76 2f       	mov	r23, r22
   159a0:	05 c0       	rjmp	.+10     	; 0x159ac <__floatsisf+0x5e>
   159a2:	66 23       	and	r22, r22
   159a4:	71 f0       	breq	.+28     	; 0x159c2 <__floatsisf+0x74>
   159a6:	96 e8       	ldi	r25, 0x86	; 134
   159a8:	86 2f       	mov	r24, r22
   159aa:	70 e0       	ldi	r23, 0x00	; 0
   159ac:	60 e0       	ldi	r22, 0x00	; 0
   159ae:	2a f0       	brmi	.+10     	; 0x159ba <__floatsisf+0x6c>
   159b0:	9a 95       	dec	r25
   159b2:	66 0f       	add	r22, r22
   159b4:	77 1f       	adc	r23, r23
   159b6:	88 1f       	adc	r24, r24
   159b8:	da f7       	brpl	.-10     	; 0x159b0 <__floatsisf+0x62>
   159ba:	88 0f       	add	r24, r24
   159bc:	96 95       	lsr	r25
   159be:	87 95       	ror	r24
   159c0:	97 f9       	bld	r25, 7
   159c2:	08 95       	ret

000159c4 <__floatundisf>:
   159c4:	e8 94       	clt

000159c6 <__fp_di2sf>:
   159c6:	f9 2f       	mov	r31, r25
   159c8:	96 eb       	ldi	r25, 0xB6	; 182
   159ca:	ff 23       	and	r31, r31
   159cc:	81 f0       	breq	.+32     	; 0x159ee <__fp_di2sf+0x28>
   159ce:	12 16       	cp	r1, r18
   159d0:	13 06       	cpc	r1, r19
   159d2:	14 06       	cpc	r1, r20
   159d4:	44 0b       	sbc	r20, r20
   159d6:	93 95       	inc	r25
   159d8:	f6 95       	lsr	r31
   159da:	87 95       	ror	r24
   159dc:	77 95       	ror	r23
   159de:	67 95       	ror	r22
   159e0:	57 95       	ror	r21
   159e2:	40 40       	sbci	r20, 0x00	; 0
   159e4:	ff 23       	and	r31, r31
   159e6:	b9 f7       	brne	.-18     	; 0x159d6 <__fp_di2sf+0x10>
   159e8:	1b c0       	rjmp	.+54     	; 0x15a20 <__fp_di2sf+0x5a>
   159ea:	99 27       	eor	r25, r25
   159ec:	08 95       	ret
   159ee:	88 23       	and	r24, r24
   159f0:	51 f4       	brne	.+20     	; 0x15a06 <__fp_di2sf+0x40>
   159f2:	98 50       	subi	r25, 0x08	; 8
   159f4:	d2 f7       	brpl	.-12     	; 0x159ea <__fp_di2sf+0x24>
   159f6:	87 2b       	or	r24, r23
   159f8:	76 2f       	mov	r23, r22
   159fa:	65 2f       	mov	r22, r21
   159fc:	54 2f       	mov	r21, r20
   159fe:	43 2f       	mov	r20, r19
   15a00:	32 2f       	mov	r19, r18
   15a02:	20 e0       	ldi	r18, 0x00	; 0
   15a04:	b1 f3       	breq	.-20     	; 0x159f2 <__fp_di2sf+0x2c>
   15a06:	12 16       	cp	r1, r18
   15a08:	13 06       	cpc	r1, r19
   15a0a:	14 06       	cpc	r1, r20
   15a0c:	44 0b       	sbc	r20, r20
   15a0e:	88 23       	and	r24, r24
   15a10:	3a f0       	brmi	.+14     	; 0x15a20 <__fp_di2sf+0x5a>
   15a12:	9a 95       	dec	r25
   15a14:	44 0f       	add	r20, r20
   15a16:	55 1f       	adc	r21, r21
   15a18:	66 1f       	adc	r22, r22
   15a1a:	77 1f       	adc	r23, r23
   15a1c:	88 1f       	adc	r24, r24
   15a1e:	ca f7       	brpl	.-14     	; 0x15a12 <__fp_di2sf+0x4c>
   15a20:	55 23       	and	r21, r21
   15a22:	4a f4       	brpl	.+18     	; 0x15a36 <__fp_di2sf+0x70>
   15a24:	44 0f       	add	r20, r20
   15a26:	55 1f       	adc	r21, r21
   15a28:	11 f4       	brne	.+4      	; 0x15a2e <__fp_di2sf+0x68>
   15a2a:	60 ff       	sbrs	r22, 0
   15a2c:	04 c0       	rjmp	.+8      	; 0x15a36 <__fp_di2sf+0x70>
   15a2e:	6f 5f       	subi	r22, 0xFF	; 255
   15a30:	7f 4f       	sbci	r23, 0xFF	; 255
   15a32:	8f 4f       	sbci	r24, 0xFF	; 255
   15a34:	9f 4f       	sbci	r25, 0xFF	; 255
   15a36:	88 0f       	add	r24, r24
   15a38:	96 95       	lsr	r25
   15a3a:	87 95       	ror	r24
   15a3c:	97 f9       	bld	r25, 7
   15a3e:	08 95       	ret

00015a40 <__fp_cmp>:
   15a40:	99 0f       	add	r25, r25
   15a42:	00 08       	sbc	r0, r0
   15a44:	55 0f       	add	r21, r21
   15a46:	aa 0b       	sbc	r26, r26
   15a48:	e0 e8       	ldi	r30, 0x80	; 128
   15a4a:	fe ef       	ldi	r31, 0xFE	; 254
   15a4c:	16 16       	cp	r1, r22
   15a4e:	17 06       	cpc	r1, r23
   15a50:	e8 07       	cpc	r30, r24
   15a52:	f9 07       	cpc	r31, r25
   15a54:	c0 f0       	brcs	.+48     	; 0x15a86 <__fp_cmp+0x46>
   15a56:	12 16       	cp	r1, r18
   15a58:	13 06       	cpc	r1, r19
   15a5a:	e4 07       	cpc	r30, r20
   15a5c:	f5 07       	cpc	r31, r21
   15a5e:	98 f0       	brcs	.+38     	; 0x15a86 <__fp_cmp+0x46>
   15a60:	62 1b       	sub	r22, r18
   15a62:	73 0b       	sbc	r23, r19
   15a64:	84 0b       	sbc	r24, r20
   15a66:	95 0b       	sbc	r25, r21
   15a68:	39 f4       	brne	.+14     	; 0x15a78 <__fp_cmp+0x38>
   15a6a:	0a 26       	eor	r0, r26
   15a6c:	61 f0       	breq	.+24     	; 0x15a86 <__fp_cmp+0x46>
   15a6e:	23 2b       	or	r18, r19
   15a70:	24 2b       	or	r18, r20
   15a72:	25 2b       	or	r18, r21
   15a74:	21 f4       	brne	.+8      	; 0x15a7e <__fp_cmp+0x3e>
   15a76:	08 95       	ret
   15a78:	0a 26       	eor	r0, r26
   15a7a:	09 f4       	brne	.+2      	; 0x15a7e <__fp_cmp+0x3e>
   15a7c:	a1 40       	sbci	r26, 0x01	; 1
   15a7e:	a6 95       	lsr	r26
   15a80:	8f ef       	ldi	r24, 0xFF	; 255
   15a82:	81 1d       	adc	r24, r1
   15a84:	81 1d       	adc	r24, r1
   15a86:	08 95       	ret

00015a88 <__fp_inf>:
   15a88:	97 f9       	bld	r25, 7
   15a8a:	9f 67       	ori	r25, 0x7F	; 127
   15a8c:	80 e8       	ldi	r24, 0x80	; 128
   15a8e:	70 e0       	ldi	r23, 0x00	; 0
   15a90:	60 e0       	ldi	r22, 0x00	; 0
   15a92:	08 95       	ret

00015a94 <__fp_nan>:
   15a94:	9f ef       	ldi	r25, 0xFF	; 255
   15a96:	80 ec       	ldi	r24, 0xC0	; 192
   15a98:	08 95       	ret

00015a9a <__fp_negdi>:
   15a9a:	90 95       	com	r25
   15a9c:	80 95       	com	r24
   15a9e:	70 95       	com	r23
   15aa0:	60 95       	com	r22
   15aa2:	50 95       	com	r21
   15aa4:	40 95       	com	r20
   15aa6:	30 95       	com	r19
   15aa8:	21 95       	neg	r18
   15aaa:	3f 4f       	sbci	r19, 0xFF	; 255
   15aac:	4f 4f       	sbci	r20, 0xFF	; 255
   15aae:	5f 4f       	sbci	r21, 0xFF	; 255
   15ab0:	6f 4f       	sbci	r22, 0xFF	; 255
   15ab2:	7f 4f       	sbci	r23, 0xFF	; 255
   15ab4:	8f 4f       	sbci	r24, 0xFF	; 255
   15ab6:	9f 4f       	sbci	r25, 0xFF	; 255
   15ab8:	08 95       	ret

00015aba <__fp_powser>:
   15aba:	df 93       	push	r29
   15abc:	cf 93       	push	r28
   15abe:	1f 93       	push	r17
   15ac0:	0f 93       	push	r16
   15ac2:	ff 92       	push	r15
   15ac4:	ef 92       	push	r14
   15ac6:	df 92       	push	r13
   15ac8:	7b 01       	movw	r14, r22
   15aca:	8c 01       	movw	r16, r24
   15acc:	68 94       	set
   15ace:	05 c0       	rjmp	.+10     	; 0x15ada <__fp_powser+0x20>
   15ad0:	da 2e       	mov	r13, r26
   15ad2:	ef 01       	movw	r28, r30
   15ad4:	af d0       	rcall	.+350    	; 0x15c34 <__mulsf3x>
   15ad6:	fe 01       	movw	r30, r28
   15ad8:	e8 94       	clt
   15ada:	a5 91       	lpm	r26, Z+
   15adc:	25 91       	lpm	r18, Z+
   15ade:	35 91       	lpm	r19, Z+
   15ae0:	45 91       	lpm	r20, Z+
   15ae2:	55 91       	lpm	r21, Z+
   15ae4:	ae f3       	brts	.-22     	; 0x15ad0 <__fp_powser+0x16>
   15ae6:	ef 01       	movw	r28, r30
   15ae8:	a1 dd       	rcall	.-1214   	; 0x1562c <__addsf3x>
   15aea:	fe 01       	movw	r30, r28
   15aec:	97 01       	movw	r18, r14
   15aee:	a8 01       	movw	r20, r16
   15af0:	da 94       	dec	r13
   15af2:	79 f7       	brne	.-34     	; 0x15ad2 <__fp_powser+0x18>
   15af4:	df 90       	pop	r13
   15af6:	ef 90       	pop	r14
   15af8:	ff 90       	pop	r15
   15afa:	0f 91       	pop	r16
   15afc:	1f 91       	pop	r17
   15afe:	cf 91       	pop	r28
   15b00:	df 91       	pop	r29
   15b02:	08 95       	ret

00015b04 <__fp_pscA>:
   15b04:	00 24       	eor	r0, r0
   15b06:	0a 94       	dec	r0
   15b08:	16 16       	cp	r1, r22
   15b0a:	17 06       	cpc	r1, r23
   15b0c:	18 06       	cpc	r1, r24
   15b0e:	09 06       	cpc	r0, r25
   15b10:	08 95       	ret

00015b12 <__fp_pscB>:
   15b12:	00 24       	eor	r0, r0
   15b14:	0a 94       	dec	r0
   15b16:	12 16       	cp	r1, r18
   15b18:	13 06       	cpc	r1, r19
   15b1a:	14 06       	cpc	r1, r20
   15b1c:	05 06       	cpc	r0, r21
   15b1e:	08 95       	ret
   15b20:	b9 cf       	rjmp	.-142    	; 0x15a94 <__fp_nan>

00015b22 <__fp_rempio2>:
   15b22:	50 d0       	rcall	.+160    	; 0x15bc4 <__fp_splitA>
   15b24:	e8 f3       	brcs	.-6      	; 0x15b20 <__fp_pscB+0xe>
   15b26:	e8 94       	clt
   15b28:	e0 e0       	ldi	r30, 0x00	; 0
   15b2a:	bb 27       	eor	r27, r27
   15b2c:	9f 57       	subi	r25, 0x7F	; 127
   15b2e:	f0 f0       	brcs	.+60     	; 0x15b6c <__fp_rempio2+0x4a>
   15b30:	2a ed       	ldi	r18, 0xDA	; 218
   15b32:	3f e0       	ldi	r19, 0x0F	; 15
   15b34:	49 ec       	ldi	r20, 0xC9	; 201
   15b36:	06 c0       	rjmp	.+12     	; 0x15b44 <__fp_rempio2+0x22>
   15b38:	ee 0f       	add	r30, r30
   15b3a:	bb 0f       	add	r27, r27
   15b3c:	66 1f       	adc	r22, r22
   15b3e:	77 1f       	adc	r23, r23
   15b40:	88 1f       	adc	r24, r24
   15b42:	28 f0       	brcs	.+10     	; 0x15b4e <__fp_rempio2+0x2c>
   15b44:	b2 3a       	cpi	r27, 0xA2	; 162
   15b46:	62 07       	cpc	r22, r18
   15b48:	73 07       	cpc	r23, r19
   15b4a:	84 07       	cpc	r24, r20
   15b4c:	28 f0       	brcs	.+10     	; 0x15b58 <__fp_rempio2+0x36>
   15b4e:	b2 5a       	subi	r27, 0xA2	; 162
   15b50:	62 0b       	sbc	r22, r18
   15b52:	73 0b       	sbc	r23, r19
   15b54:	84 0b       	sbc	r24, r20
   15b56:	e3 95       	inc	r30
   15b58:	9a 95       	dec	r25
   15b5a:	72 f7       	brpl	.-36     	; 0x15b38 <__fp_rempio2+0x16>
   15b5c:	80 38       	cpi	r24, 0x80	; 128
   15b5e:	30 f4       	brcc	.+12     	; 0x15b6c <__fp_rempio2+0x4a>
   15b60:	9a 95       	dec	r25
   15b62:	bb 0f       	add	r27, r27
   15b64:	66 1f       	adc	r22, r22
   15b66:	77 1f       	adc	r23, r23
   15b68:	88 1f       	adc	r24, r24
   15b6a:	d2 f7       	brpl	.-12     	; 0x15b60 <__fp_rempio2+0x3e>
   15b6c:	90 48       	sbci	r25, 0x80	; 128
   15b6e:	c4 c0       	rjmp	.+392    	; 0x15cf8 <__fp_mpack_finite>

00015b70 <__fp_round>:
   15b70:	09 2e       	mov	r0, r25
   15b72:	03 94       	inc	r0
   15b74:	00 0c       	add	r0, r0
   15b76:	11 f4       	brne	.+4      	; 0x15b7c <__fp_round+0xc>
   15b78:	88 23       	and	r24, r24
   15b7a:	52 f0       	brmi	.+20     	; 0x15b90 <__fp_round+0x20>
   15b7c:	bb 0f       	add	r27, r27
   15b7e:	40 f4       	brcc	.+16     	; 0x15b90 <__fp_round+0x20>
   15b80:	bf 2b       	or	r27, r31
   15b82:	11 f4       	brne	.+4      	; 0x15b88 <__fp_round+0x18>
   15b84:	60 ff       	sbrs	r22, 0
   15b86:	04 c0       	rjmp	.+8      	; 0x15b90 <__fp_round+0x20>
   15b88:	6f 5f       	subi	r22, 0xFF	; 255
   15b8a:	7f 4f       	sbci	r23, 0xFF	; 255
   15b8c:	8f 4f       	sbci	r24, 0xFF	; 255
   15b8e:	9f 4f       	sbci	r25, 0xFF	; 255
   15b90:	08 95       	ret

00015b92 <__fp_sinus>:
   15b92:	ef 93       	push	r30
   15b94:	e0 ff       	sbrs	r30, 0
   15b96:	06 c0       	rjmp	.+12     	; 0x15ba4 <__fp_sinus+0x12>
   15b98:	a2 ea       	ldi	r26, 0xA2	; 162
   15b9a:	2a ed       	ldi	r18, 0xDA	; 218
   15b9c:	3f e0       	ldi	r19, 0x0F	; 15
   15b9e:	49 ec       	ldi	r20, 0xC9	; 201
   15ba0:	5f eb       	ldi	r21, 0xBF	; 191
   15ba2:	44 dd       	rcall	.-1400   	; 0x1562c <__addsf3x>
   15ba4:	e5 df       	rcall	.-54     	; 0x15b70 <__fp_round>
   15ba6:	0f 90       	pop	r0
   15ba8:	03 94       	inc	r0
   15baa:	01 fc       	sbrc	r0, 1
   15bac:	90 58       	subi	r25, 0x80	; 128
   15bae:	ed e4       	ldi	r30, 0x4D	; 77
   15bb0:	f2 e0       	ldi	r31, 0x02	; 2
   15bb2:	ae c0       	rjmp	.+348    	; 0x15d10 <__fp_powsodd>

00015bb4 <__fp_split3>:
   15bb4:	57 fd       	sbrc	r21, 7
   15bb6:	90 58       	subi	r25, 0x80	; 128
   15bb8:	44 0f       	add	r20, r20
   15bba:	55 1f       	adc	r21, r21
   15bbc:	59 f0       	breq	.+22     	; 0x15bd4 <__fp_splitA+0x10>
   15bbe:	5f 3f       	cpi	r21, 0xFF	; 255
   15bc0:	71 f0       	breq	.+28     	; 0x15bde <__fp_splitA+0x1a>
   15bc2:	47 95       	ror	r20

00015bc4 <__fp_splitA>:
   15bc4:	88 0f       	add	r24, r24
   15bc6:	97 fb       	bst	r25, 7
   15bc8:	99 1f       	adc	r25, r25
   15bca:	61 f0       	breq	.+24     	; 0x15be4 <__fp_splitA+0x20>
   15bcc:	9f 3f       	cpi	r25, 0xFF	; 255
   15bce:	79 f0       	breq	.+30     	; 0x15bee <__fp_splitA+0x2a>
   15bd0:	87 95       	ror	r24
   15bd2:	08 95       	ret
   15bd4:	12 16       	cp	r1, r18
   15bd6:	13 06       	cpc	r1, r19
   15bd8:	14 06       	cpc	r1, r20
   15bda:	55 1f       	adc	r21, r21
   15bdc:	f2 cf       	rjmp	.-28     	; 0x15bc2 <__fp_split3+0xe>
   15bde:	46 95       	lsr	r20
   15be0:	f1 df       	rcall	.-30     	; 0x15bc4 <__fp_splitA>
   15be2:	08 c0       	rjmp	.+16     	; 0x15bf4 <__fp_splitA+0x30>
   15be4:	16 16       	cp	r1, r22
   15be6:	17 06       	cpc	r1, r23
   15be8:	18 06       	cpc	r1, r24
   15bea:	99 1f       	adc	r25, r25
   15bec:	f1 cf       	rjmp	.-30     	; 0x15bd0 <__fp_splitA+0xc>
   15bee:	86 95       	lsr	r24
   15bf0:	71 05       	cpc	r23, r1
   15bf2:	61 05       	cpc	r22, r1
   15bf4:	08 94       	sec
   15bf6:	08 95       	ret

00015bf8 <__fp_zero>:
   15bf8:	e8 94       	clt

00015bfa <__fp_szero>:
   15bfa:	bb 27       	eor	r27, r27
   15bfc:	66 27       	eor	r22, r22
   15bfe:	77 27       	eor	r23, r23
   15c00:	cb 01       	movw	r24, r22
   15c02:	97 f9       	bld	r25, 7
   15c04:	08 95       	ret

00015c06 <__gesf2>:
   15c06:	1c df       	rcall	.-456    	; 0x15a40 <__fp_cmp>
   15c08:	08 f4       	brcc	.+2      	; 0x15c0c <__gesf2+0x6>
   15c0a:	8f ef       	ldi	r24, 0xFF	; 255
   15c0c:	08 95       	ret

00015c0e <inverse>:
   15c0e:	9b 01       	movw	r18, r22
   15c10:	ac 01       	movw	r20, r24
   15c12:	60 e0       	ldi	r22, 0x00	; 0
   15c14:	70 e0       	ldi	r23, 0x00	; 0
   15c16:	80 e8       	ldi	r24, 0x80	; 128
   15c18:	9f e3       	ldi	r25, 0x3F	; 63
   15c1a:	c4 cd       	rjmp	.-1144   	; 0x157a4 <__divsf3>

00015c1c <__mulsf3>:
   15c1c:	0b d0       	rcall	.+22     	; 0x15c34 <__mulsf3x>
   15c1e:	a8 cf       	rjmp	.-176    	; 0x15b70 <__fp_round>
   15c20:	71 df       	rcall	.-286    	; 0x15b04 <__fp_pscA>
   15c22:	28 f0       	brcs	.+10     	; 0x15c2e <__mulsf3+0x12>
   15c24:	76 df       	rcall	.-276    	; 0x15b12 <__fp_pscB>
   15c26:	18 f0       	brcs	.+6      	; 0x15c2e <__mulsf3+0x12>
   15c28:	95 23       	and	r25, r21
   15c2a:	09 f0       	breq	.+2      	; 0x15c2e <__mulsf3+0x12>
   15c2c:	2d cf       	rjmp	.-422    	; 0x15a88 <__fp_inf>
   15c2e:	32 cf       	rjmp	.-412    	; 0x15a94 <__fp_nan>
   15c30:	11 24       	eor	r1, r1
   15c32:	e3 cf       	rjmp	.-58     	; 0x15bfa <__fp_szero>

00015c34 <__mulsf3x>:
   15c34:	bf df       	rcall	.-130    	; 0x15bb4 <__fp_split3>
   15c36:	a0 f3       	brcs	.-24     	; 0x15c20 <__mulsf3+0x4>

00015c38 <__mulsf3_pse>:
   15c38:	95 9f       	mul	r25, r21
   15c3a:	d1 f3       	breq	.-12     	; 0x15c30 <__mulsf3+0x14>
   15c3c:	95 0f       	add	r25, r21
   15c3e:	50 e0       	ldi	r21, 0x00	; 0
   15c40:	55 1f       	adc	r21, r21
   15c42:	62 9f       	mul	r22, r18
   15c44:	f0 01       	movw	r30, r0
   15c46:	72 9f       	mul	r23, r18
   15c48:	bb 27       	eor	r27, r27
   15c4a:	f0 0d       	add	r31, r0
   15c4c:	b1 1d       	adc	r27, r1
   15c4e:	63 9f       	mul	r22, r19
   15c50:	aa 27       	eor	r26, r26
   15c52:	f0 0d       	add	r31, r0
   15c54:	b1 1d       	adc	r27, r1
   15c56:	aa 1f       	adc	r26, r26
   15c58:	64 9f       	mul	r22, r20
   15c5a:	66 27       	eor	r22, r22
   15c5c:	b0 0d       	add	r27, r0
   15c5e:	a1 1d       	adc	r26, r1
   15c60:	66 1f       	adc	r22, r22
   15c62:	82 9f       	mul	r24, r18
   15c64:	22 27       	eor	r18, r18
   15c66:	b0 0d       	add	r27, r0
   15c68:	a1 1d       	adc	r26, r1
   15c6a:	62 1f       	adc	r22, r18
   15c6c:	73 9f       	mul	r23, r19
   15c6e:	b0 0d       	add	r27, r0
   15c70:	a1 1d       	adc	r26, r1
   15c72:	62 1f       	adc	r22, r18
   15c74:	83 9f       	mul	r24, r19
   15c76:	a0 0d       	add	r26, r0
   15c78:	61 1d       	adc	r22, r1
   15c7a:	22 1f       	adc	r18, r18
   15c7c:	74 9f       	mul	r23, r20
   15c7e:	33 27       	eor	r19, r19
   15c80:	a0 0d       	add	r26, r0
   15c82:	61 1d       	adc	r22, r1
   15c84:	23 1f       	adc	r18, r19
   15c86:	84 9f       	mul	r24, r20
   15c88:	60 0d       	add	r22, r0
   15c8a:	21 1d       	adc	r18, r1
   15c8c:	82 2f       	mov	r24, r18
   15c8e:	76 2f       	mov	r23, r22
   15c90:	6a 2f       	mov	r22, r26
   15c92:	11 24       	eor	r1, r1
   15c94:	9f 57       	subi	r25, 0x7F	; 127
   15c96:	50 40       	sbci	r21, 0x00	; 0
   15c98:	8a f0       	brmi	.+34     	; 0x15cbc <__mulsf3_pse+0x84>
   15c9a:	e1 f0       	breq	.+56     	; 0x15cd4 <__mulsf3_pse+0x9c>
   15c9c:	88 23       	and	r24, r24
   15c9e:	4a f0       	brmi	.+18     	; 0x15cb2 <__mulsf3_pse+0x7a>
   15ca0:	ee 0f       	add	r30, r30
   15ca2:	ff 1f       	adc	r31, r31
   15ca4:	bb 1f       	adc	r27, r27
   15ca6:	66 1f       	adc	r22, r22
   15ca8:	77 1f       	adc	r23, r23
   15caa:	88 1f       	adc	r24, r24
   15cac:	91 50       	subi	r25, 0x01	; 1
   15cae:	50 40       	sbci	r21, 0x00	; 0
   15cb0:	a9 f7       	brne	.-22     	; 0x15c9c <__mulsf3_pse+0x64>
   15cb2:	9e 3f       	cpi	r25, 0xFE	; 254
   15cb4:	51 05       	cpc	r21, r1
   15cb6:	70 f0       	brcs	.+28     	; 0x15cd4 <__mulsf3_pse+0x9c>
   15cb8:	e7 ce       	rjmp	.-562    	; 0x15a88 <__fp_inf>
   15cba:	9f cf       	rjmp	.-194    	; 0x15bfa <__fp_szero>
   15cbc:	5f 3f       	cpi	r21, 0xFF	; 255
   15cbe:	ec f3       	brlt	.-6      	; 0x15cba <__mulsf3_pse+0x82>
   15cc0:	98 3e       	cpi	r25, 0xE8	; 232
   15cc2:	dc f3       	brlt	.-10     	; 0x15cba <__mulsf3_pse+0x82>
   15cc4:	86 95       	lsr	r24
   15cc6:	77 95       	ror	r23
   15cc8:	67 95       	ror	r22
   15cca:	b7 95       	ror	r27
   15ccc:	f7 95       	ror	r31
   15cce:	e7 95       	ror	r30
   15cd0:	9f 5f       	subi	r25, 0xFF	; 255
   15cd2:	c1 f7       	brne	.-16     	; 0x15cc4 <__mulsf3_pse+0x8c>
   15cd4:	fe 2b       	or	r31, r30
   15cd6:	88 0f       	add	r24, r24
   15cd8:	91 1d       	adc	r25, r1
   15cda:	96 95       	lsr	r25
   15cdc:	87 95       	ror	r24
   15cde:	97 f9       	bld	r25, 7
   15ce0:	08 95       	ret

00015ce2 <sin>:
   15ce2:	9f 93       	push	r25
   15ce4:	1e df       	rcall	.-452    	; 0x15b22 <__fp_rempio2>
   15ce6:	0f 90       	pop	r0
   15ce8:	07 fc       	sbrc	r0, 7
   15cea:	ee 5f       	subi	r30, 0xFE	; 254
   15cec:	52 cf       	rjmp	.-348    	; 0x15b92 <__fp_sinus>

00015cee <square>:
   15cee:	9b 01       	movw	r18, r22
   15cf0:	ac 01       	movw	r20, r24
   15cf2:	94 cf       	rjmp	.-216    	; 0x15c1c <__mulsf3>

00015cf4 <__fp_mpack>:
   15cf4:	9f 3f       	cpi	r25, 0xFF	; 255
   15cf6:	31 f0       	breq	.+12     	; 0x15d04 <__fp_mpack_finite+0xc>

00015cf8 <__fp_mpack_finite>:
   15cf8:	91 50       	subi	r25, 0x01	; 1
   15cfa:	20 f4       	brcc	.+8      	; 0x15d04 <__fp_mpack_finite+0xc>
   15cfc:	87 95       	ror	r24
   15cfe:	77 95       	ror	r23
   15d00:	67 95       	ror	r22
   15d02:	b7 95       	ror	r27
   15d04:	88 0f       	add	r24, r24
   15d06:	91 1d       	adc	r25, r1
   15d08:	96 95       	lsr	r25
   15d0a:	87 95       	ror	r24
   15d0c:	97 f9       	bld	r25, 7
   15d0e:	08 95       	ret

00015d10 <__fp_powsodd>:
   15d10:	9f 93       	push	r25
   15d12:	8f 93       	push	r24
   15d14:	7f 93       	push	r23
   15d16:	6f 93       	push	r22
   15d18:	ff 93       	push	r31
   15d1a:	ef 93       	push	r30
   15d1c:	9b 01       	movw	r18, r22
   15d1e:	ac 01       	movw	r20, r24
   15d20:	7d df       	rcall	.-262    	; 0x15c1c <__mulsf3>
   15d22:	ef 91       	pop	r30
   15d24:	ff 91       	pop	r31
   15d26:	c9 de       	rcall	.-622    	; 0x15aba <__fp_powser>
   15d28:	2f 91       	pop	r18
   15d2a:	3f 91       	pop	r19
   15d2c:	4f 91       	pop	r20
   15d2e:	5f 91       	pop	r21
   15d30:	75 cf       	rjmp	.-278    	; 0x15c1c <__mulsf3>

00015d32 <malloc>:
   15d32:	cf 93       	push	r28
   15d34:	df 93       	push	r29
   15d36:	bc 01       	movw	r22, r24
   15d38:	82 30       	cpi	r24, 0x02	; 2
   15d3a:	91 05       	cpc	r25, r1
   15d3c:	10 f4       	brcc	.+4      	; 0x15d42 <malloc+0x10>
   15d3e:	62 e0       	ldi	r22, 0x02	; 2
   15d40:	70 e0       	ldi	r23, 0x00	; 0
   15d42:	a0 91 cc 27 	lds	r26, 0x27CC
   15d46:	b0 91 cd 27 	lds	r27, 0x27CD
   15d4a:	ed 01       	movw	r28, r26
   15d4c:	e0 e0       	ldi	r30, 0x00	; 0
   15d4e:	f0 e0       	ldi	r31, 0x00	; 0
   15d50:	40 e0       	ldi	r20, 0x00	; 0
   15d52:	50 e0       	ldi	r21, 0x00	; 0
   15d54:	21 c0       	rjmp	.+66     	; 0x15d98 <malloc+0x66>
   15d56:	88 81       	ld	r24, Y
   15d58:	99 81       	ldd	r25, Y+1	; 0x01
   15d5a:	86 17       	cp	r24, r22
   15d5c:	97 07       	cpc	r25, r23
   15d5e:	69 f4       	brne	.+26     	; 0x15d7a <malloc+0x48>
   15d60:	8a 81       	ldd	r24, Y+2	; 0x02
   15d62:	9b 81       	ldd	r25, Y+3	; 0x03
   15d64:	30 97       	sbiw	r30, 0x00	; 0
   15d66:	19 f0       	breq	.+6      	; 0x15d6e <malloc+0x3c>
   15d68:	82 83       	std	Z+2, r24	; 0x02
   15d6a:	93 83       	std	Z+3, r25	; 0x03
   15d6c:	04 c0       	rjmp	.+8      	; 0x15d76 <malloc+0x44>
   15d6e:	80 93 cc 27 	sts	0x27CC, r24
   15d72:	90 93 cd 27 	sts	0x27CD, r25
   15d76:	fe 01       	movw	r30, r28
   15d78:	34 c0       	rjmp	.+104    	; 0x15de2 <malloc+0xb0>
   15d7a:	68 17       	cp	r22, r24
   15d7c:	79 07       	cpc	r23, r25
   15d7e:	38 f4       	brcc	.+14     	; 0x15d8e <malloc+0x5c>
   15d80:	41 15       	cp	r20, r1
   15d82:	51 05       	cpc	r21, r1
   15d84:	19 f0       	breq	.+6      	; 0x15d8c <malloc+0x5a>
   15d86:	84 17       	cp	r24, r20
   15d88:	95 07       	cpc	r25, r21
   15d8a:	08 f4       	brcc	.+2      	; 0x15d8e <malloc+0x5c>
   15d8c:	ac 01       	movw	r20, r24
   15d8e:	fe 01       	movw	r30, r28
   15d90:	8a 81       	ldd	r24, Y+2	; 0x02
   15d92:	9b 81       	ldd	r25, Y+3	; 0x03
   15d94:	9c 01       	movw	r18, r24
   15d96:	e9 01       	movw	r28, r18
   15d98:	20 97       	sbiw	r28, 0x00	; 0
   15d9a:	e9 f6       	brne	.-70     	; 0x15d56 <malloc+0x24>
   15d9c:	41 15       	cp	r20, r1
   15d9e:	51 05       	cpc	r21, r1
   15da0:	a9 f1       	breq	.+106    	; 0x15e0c <malloc+0xda>
   15da2:	ca 01       	movw	r24, r20
   15da4:	86 1b       	sub	r24, r22
   15da6:	97 0b       	sbc	r25, r23
   15da8:	04 97       	sbiw	r24, 0x04	; 4
   15daa:	08 f4       	brcc	.+2      	; 0x15dae <malloc+0x7c>
   15dac:	ba 01       	movw	r22, r20
   15dae:	e0 e0       	ldi	r30, 0x00	; 0
   15db0:	f0 e0       	ldi	r31, 0x00	; 0
   15db2:	2a c0       	rjmp	.+84     	; 0x15e08 <malloc+0xd6>
   15db4:	8d 91       	ld	r24, X+
   15db6:	9c 91       	ld	r25, X
   15db8:	11 97       	sbiw	r26, 0x01	; 1
   15dba:	84 17       	cp	r24, r20
   15dbc:	95 07       	cpc	r25, r21
   15dbe:	f9 f4       	brne	.+62     	; 0x15dfe <malloc+0xcc>
   15dc0:	64 17       	cp	r22, r20
   15dc2:	75 07       	cpc	r23, r21
   15dc4:	81 f4       	brne	.+32     	; 0x15de6 <malloc+0xb4>
   15dc6:	12 96       	adiw	r26, 0x02	; 2
   15dc8:	8d 91       	ld	r24, X+
   15dca:	9c 91       	ld	r25, X
   15dcc:	13 97       	sbiw	r26, 0x03	; 3
   15dce:	30 97       	sbiw	r30, 0x00	; 0
   15dd0:	19 f0       	breq	.+6      	; 0x15dd8 <malloc+0xa6>
   15dd2:	82 83       	std	Z+2, r24	; 0x02
   15dd4:	93 83       	std	Z+3, r25	; 0x03
   15dd6:	04 c0       	rjmp	.+8      	; 0x15de0 <malloc+0xae>
   15dd8:	80 93 cc 27 	sts	0x27CC, r24
   15ddc:	90 93 cd 27 	sts	0x27CD, r25
   15de0:	fd 01       	movw	r30, r26
   15de2:	32 96       	adiw	r30, 0x02	; 2
   15de4:	4f c0       	rjmp	.+158    	; 0x15e84 <malloc+0x152>
   15de6:	ca 01       	movw	r24, r20
   15de8:	86 1b       	sub	r24, r22
   15dea:	97 0b       	sbc	r25, r23
   15dec:	fd 01       	movw	r30, r26
   15dee:	e8 0f       	add	r30, r24
   15df0:	f9 1f       	adc	r31, r25
   15df2:	61 93       	st	Z+, r22
   15df4:	71 93       	st	Z+, r23
   15df6:	02 97       	sbiw	r24, 0x02	; 2
   15df8:	8d 93       	st	X+, r24
   15dfa:	9c 93       	st	X, r25
   15dfc:	43 c0       	rjmp	.+134    	; 0x15e84 <malloc+0x152>
   15dfe:	fd 01       	movw	r30, r26
   15e00:	82 81       	ldd	r24, Z+2	; 0x02
   15e02:	93 81       	ldd	r25, Z+3	; 0x03
   15e04:	9c 01       	movw	r18, r24
   15e06:	d9 01       	movw	r26, r18
   15e08:	10 97       	sbiw	r26, 0x00	; 0
   15e0a:	a1 f6       	brne	.-88     	; 0x15db4 <malloc+0x82>
   15e0c:	80 91 ca 27 	lds	r24, 0x27CA
   15e10:	90 91 cb 27 	lds	r25, 0x27CB
   15e14:	89 2b       	or	r24, r25
   15e16:	41 f4       	brne	.+16     	; 0x15e28 <malloc+0xf6>
   15e18:	80 91 d8 23 	lds	r24, 0x23D8
   15e1c:	90 91 d9 23 	lds	r25, 0x23D9
   15e20:	80 93 ca 27 	sts	0x27CA, r24
   15e24:	90 93 cb 27 	sts	0x27CB, r25
   15e28:	40 91 da 23 	lds	r20, 0x23DA
   15e2c:	50 91 db 23 	lds	r21, 0x23DB
   15e30:	41 15       	cp	r20, r1
   15e32:	51 05       	cpc	r21, r1
   15e34:	41 f4       	brne	.+16     	; 0x15e46 <malloc+0x114>
   15e36:	4d b7       	in	r20, 0x3d	; 61
   15e38:	5e b7       	in	r21, 0x3e	; 62
   15e3a:	80 91 d6 23 	lds	r24, 0x23D6
   15e3e:	90 91 d7 23 	lds	r25, 0x23D7
   15e42:	48 1b       	sub	r20, r24
   15e44:	59 0b       	sbc	r21, r25
   15e46:	20 91 ca 27 	lds	r18, 0x27CA
   15e4a:	30 91 cb 27 	lds	r19, 0x27CB
   15e4e:	24 17       	cp	r18, r20
   15e50:	35 07       	cpc	r19, r21
   15e52:	b0 f4       	brcc	.+44     	; 0x15e80 <malloc+0x14e>
   15e54:	ca 01       	movw	r24, r20
   15e56:	82 1b       	sub	r24, r18
   15e58:	93 0b       	sbc	r25, r19
   15e5a:	86 17       	cp	r24, r22
   15e5c:	97 07       	cpc	r25, r23
   15e5e:	80 f0       	brcs	.+32     	; 0x15e80 <malloc+0x14e>
   15e60:	ab 01       	movw	r20, r22
   15e62:	4e 5f       	subi	r20, 0xFE	; 254
   15e64:	5f 4f       	sbci	r21, 0xFF	; 255
   15e66:	84 17       	cp	r24, r20
   15e68:	95 07       	cpc	r25, r21
   15e6a:	50 f0       	brcs	.+20     	; 0x15e80 <malloc+0x14e>
   15e6c:	42 0f       	add	r20, r18
   15e6e:	53 1f       	adc	r21, r19
   15e70:	40 93 ca 27 	sts	0x27CA, r20
   15e74:	50 93 cb 27 	sts	0x27CB, r21
   15e78:	f9 01       	movw	r30, r18
   15e7a:	61 93       	st	Z+, r22
   15e7c:	71 93       	st	Z+, r23
   15e7e:	02 c0       	rjmp	.+4      	; 0x15e84 <malloc+0x152>
   15e80:	e0 e0       	ldi	r30, 0x00	; 0
   15e82:	f0 e0       	ldi	r31, 0x00	; 0
   15e84:	cf 01       	movw	r24, r30
   15e86:	df 91       	pop	r29
   15e88:	cf 91       	pop	r28
   15e8a:	08 95       	ret

00015e8c <free>:
   15e8c:	cf 93       	push	r28
   15e8e:	df 93       	push	r29
   15e90:	00 97       	sbiw	r24, 0x00	; 0
   15e92:	09 f4       	brne	.+2      	; 0x15e96 <free+0xa>
   15e94:	50 c0       	rjmp	.+160    	; 0x15f36 <free+0xaa>
   15e96:	ec 01       	movw	r28, r24
   15e98:	22 97       	sbiw	r28, 0x02	; 2
   15e9a:	1a 82       	std	Y+2, r1	; 0x02
   15e9c:	1b 82       	std	Y+3, r1	; 0x03
   15e9e:	a0 91 cc 27 	lds	r26, 0x27CC
   15ea2:	b0 91 cd 27 	lds	r27, 0x27CD
   15ea6:	10 97       	sbiw	r26, 0x00	; 0
   15ea8:	09 f1       	breq	.+66     	; 0x15eec <free+0x60>
   15eaa:	40 e0       	ldi	r20, 0x00	; 0
   15eac:	50 e0       	ldi	r21, 0x00	; 0
   15eae:	ac 17       	cp	r26, r28
   15eb0:	bd 07       	cpc	r27, r29
   15eb2:	08 f1       	brcs	.+66     	; 0x15ef6 <free+0x6a>
   15eb4:	aa 83       	std	Y+2, r26	; 0x02
   15eb6:	bb 83       	std	Y+3, r27	; 0x03
   15eb8:	fe 01       	movw	r30, r28
   15eba:	21 91       	ld	r18, Z+
   15ebc:	31 91       	ld	r19, Z+
   15ebe:	e2 0f       	add	r30, r18
   15ec0:	f3 1f       	adc	r31, r19
   15ec2:	ae 17       	cp	r26, r30
   15ec4:	bf 07       	cpc	r27, r31
   15ec6:	79 f4       	brne	.+30     	; 0x15ee6 <free+0x5a>
   15ec8:	8d 91       	ld	r24, X+
   15eca:	9c 91       	ld	r25, X
   15ecc:	11 97       	sbiw	r26, 0x01	; 1
   15ece:	28 0f       	add	r18, r24
   15ed0:	39 1f       	adc	r19, r25
   15ed2:	2e 5f       	subi	r18, 0xFE	; 254
   15ed4:	3f 4f       	sbci	r19, 0xFF	; 255
   15ed6:	28 83       	st	Y, r18
   15ed8:	39 83       	std	Y+1, r19	; 0x01
   15eda:	12 96       	adiw	r26, 0x02	; 2
   15edc:	8d 91       	ld	r24, X+
   15ede:	9c 91       	ld	r25, X
   15ee0:	13 97       	sbiw	r26, 0x03	; 3
   15ee2:	8a 83       	std	Y+2, r24	; 0x02
   15ee4:	9b 83       	std	Y+3, r25	; 0x03
   15ee6:	41 15       	cp	r20, r1
   15ee8:	51 05       	cpc	r21, r1
   15eea:	71 f4       	brne	.+28     	; 0x15f08 <free+0x7c>
   15eec:	c0 93 cc 27 	sts	0x27CC, r28
   15ef0:	d0 93 cd 27 	sts	0x27CD, r29
   15ef4:	20 c0       	rjmp	.+64     	; 0x15f36 <free+0xaa>
   15ef6:	12 96       	adiw	r26, 0x02	; 2
   15ef8:	8d 91       	ld	r24, X+
   15efa:	9c 91       	ld	r25, X
   15efc:	13 97       	sbiw	r26, 0x03	; 3
   15efe:	ad 01       	movw	r20, r26
   15f00:	00 97       	sbiw	r24, 0x00	; 0
   15f02:	11 f0       	breq	.+4      	; 0x15f08 <free+0x7c>
   15f04:	dc 01       	movw	r26, r24
   15f06:	d3 cf       	rjmp	.-90     	; 0x15eae <free+0x22>
   15f08:	fa 01       	movw	r30, r20
   15f0a:	c2 83       	std	Z+2, r28	; 0x02
   15f0c:	d3 83       	std	Z+3, r29	; 0x03
   15f0e:	21 91       	ld	r18, Z+
   15f10:	31 91       	ld	r19, Z+
   15f12:	e2 0f       	add	r30, r18
   15f14:	f3 1f       	adc	r31, r19
   15f16:	ce 17       	cp	r28, r30
   15f18:	df 07       	cpc	r29, r31
   15f1a:	69 f4       	brne	.+26     	; 0x15f36 <free+0xaa>
   15f1c:	88 81       	ld	r24, Y
   15f1e:	99 81       	ldd	r25, Y+1	; 0x01
   15f20:	28 0f       	add	r18, r24
   15f22:	39 1f       	adc	r19, r25
   15f24:	2e 5f       	subi	r18, 0xFE	; 254
   15f26:	3f 4f       	sbci	r19, 0xFF	; 255
   15f28:	fa 01       	movw	r30, r20
   15f2a:	20 83       	st	Z, r18
   15f2c:	31 83       	std	Z+1, r19	; 0x01
   15f2e:	8a 81       	ldd	r24, Y+2	; 0x02
   15f30:	9b 81       	ldd	r25, Y+3	; 0x03
   15f32:	82 83       	std	Z+2, r24	; 0x02
   15f34:	93 83       	std	Z+3, r25	; 0x03
   15f36:	df 91       	pop	r29
   15f38:	cf 91       	pop	r28
   15f3a:	08 95       	ret

00015f3c <atoi>:
   15f3c:	fc 01       	movw	r30, r24
   15f3e:	88 27       	eor	r24, r24
   15f40:	99 27       	eor	r25, r25
   15f42:	e8 94       	clt
   15f44:	21 91       	ld	r18, Z+
   15f46:	20 32       	cpi	r18, 0x20	; 32
   15f48:	e9 f3       	breq	.-6      	; 0x15f44 <atoi+0x8>
   15f4a:	29 30       	cpi	r18, 0x09	; 9
   15f4c:	10 f0       	brcs	.+4      	; 0x15f52 <atoi+0x16>
   15f4e:	2e 30       	cpi	r18, 0x0E	; 14
   15f50:	c8 f3       	brcs	.-14     	; 0x15f44 <atoi+0x8>
   15f52:	2b 32       	cpi	r18, 0x2B	; 43
   15f54:	41 f0       	breq	.+16     	; 0x15f66 <atoi+0x2a>
   15f56:	2d 32       	cpi	r18, 0x2D	; 45
   15f58:	39 f4       	brne	.+14     	; 0x15f68 <atoi+0x2c>
   15f5a:	68 94       	set
   15f5c:	04 c0       	rjmp	.+8      	; 0x15f66 <atoi+0x2a>
   15f5e:	0e 94 46 b1 	call	0x1628c	; 0x1628c <__mulhi_const_10>
   15f62:	82 0f       	add	r24, r18
   15f64:	91 1d       	adc	r25, r1
   15f66:	21 91       	ld	r18, Z+
   15f68:	20 53       	subi	r18, 0x30	; 48
   15f6a:	2a 30       	cpi	r18, 0x0A	; 10
   15f6c:	c0 f3       	brcs	.-16     	; 0x15f5e <atoi+0x22>
   15f6e:	1e f4       	brtc	.+6      	; 0x15f76 <atoi+0x3a>
   15f70:	90 95       	com	r25
   15f72:	81 95       	neg	r24
   15f74:	9f 4f       	sbci	r25, 0xFF	; 255
   15f76:	08 95       	ret

00015f78 <exit>:
   15f78:	f8 94       	cli
   15f7a:	0c 94 43 b4 	jmp	0x16886	; 0x16886 <_exit>

00015f7e <__ftoa_engine>:
   15f7e:	28 30       	cpi	r18, 0x08	; 8
   15f80:	08 f0       	brcs	.+2      	; 0x15f84 <__ftoa_engine+0x6>
   15f82:	27 e0       	ldi	r18, 0x07	; 7
   15f84:	33 27       	eor	r19, r19
   15f86:	da 01       	movw	r26, r20
   15f88:	99 0f       	add	r25, r25
   15f8a:	31 1d       	adc	r19, r1
   15f8c:	87 fd       	sbrc	r24, 7
   15f8e:	91 60       	ori	r25, 0x01	; 1
   15f90:	00 96       	adiw	r24, 0x00	; 0
   15f92:	61 05       	cpc	r22, r1
   15f94:	71 05       	cpc	r23, r1
   15f96:	39 f4       	brne	.+14     	; 0x15fa6 <__ftoa_engine+0x28>
   15f98:	32 60       	ori	r19, 0x02	; 2
   15f9a:	2e 5f       	subi	r18, 0xFE	; 254
   15f9c:	3d 93       	st	X+, r19
   15f9e:	30 e3       	ldi	r19, 0x30	; 48
   15fa0:	2a 95       	dec	r18
   15fa2:	e1 f7       	brne	.-8      	; 0x15f9c <__ftoa_engine+0x1e>
   15fa4:	08 95       	ret
   15fa6:	9f 3f       	cpi	r25, 0xFF	; 255
   15fa8:	30 f0       	brcs	.+12     	; 0x15fb6 <__ftoa_engine+0x38>
   15faa:	80 38       	cpi	r24, 0x80	; 128
   15fac:	71 05       	cpc	r23, r1
   15fae:	61 05       	cpc	r22, r1
   15fb0:	09 f0       	breq	.+2      	; 0x15fb4 <__ftoa_engine+0x36>
   15fb2:	3c 5f       	subi	r19, 0xFC	; 252
   15fb4:	3c 5f       	subi	r19, 0xFC	; 252
   15fb6:	3d 93       	st	X+, r19
   15fb8:	91 30       	cpi	r25, 0x01	; 1
   15fba:	08 f0       	brcs	.+2      	; 0x15fbe <__ftoa_engine+0x40>
   15fbc:	80 68       	ori	r24, 0x80	; 128
   15fbe:	91 1d       	adc	r25, r1
   15fc0:	df 93       	push	r29
   15fc2:	cf 93       	push	r28
   15fc4:	1f 93       	push	r17
   15fc6:	0f 93       	push	r16
   15fc8:	ff 92       	push	r15
   15fca:	ef 92       	push	r14
   15fcc:	19 2f       	mov	r17, r25
   15fce:	98 7f       	andi	r25, 0xF8	; 248
   15fd0:	96 95       	lsr	r25
   15fd2:	e9 2f       	mov	r30, r25
   15fd4:	96 95       	lsr	r25
   15fd6:	96 95       	lsr	r25
   15fd8:	e9 0f       	add	r30, r25
   15fda:	ff 27       	eor	r31, r31
   15fdc:	ef 54       	subi	r30, 0x4F	; 79
   15fde:	f2 4f       	sbci	r31, 0xF2	; 242
   15fe0:	99 27       	eor	r25, r25
   15fe2:	33 27       	eor	r19, r19
   15fe4:	ee 24       	eor	r14, r14
   15fe6:	ff 24       	eor	r15, r15
   15fe8:	a7 01       	movw	r20, r14
   15fea:	e7 01       	movw	r28, r14
   15fec:	05 90       	lpm	r0, Z+
   15fee:	08 94       	sec
   15ff0:	07 94       	ror	r0
   15ff2:	28 f4       	brcc	.+10     	; 0x15ffe <__ftoa_engine+0x80>
   15ff4:	36 0f       	add	r19, r22
   15ff6:	e7 1e       	adc	r14, r23
   15ff8:	f8 1e       	adc	r15, r24
   15ffa:	49 1f       	adc	r20, r25
   15ffc:	51 1d       	adc	r21, r1
   15ffe:	66 0f       	add	r22, r22
   16000:	77 1f       	adc	r23, r23
   16002:	88 1f       	adc	r24, r24
   16004:	99 1f       	adc	r25, r25
   16006:	06 94       	lsr	r0
   16008:	a1 f7       	brne	.-24     	; 0x15ff2 <__ftoa_engine+0x74>
   1600a:	05 90       	lpm	r0, Z+
   1600c:	07 94       	ror	r0
   1600e:	28 f4       	brcc	.+10     	; 0x1601a <__ftoa_engine+0x9c>
   16010:	e7 0e       	add	r14, r23
   16012:	f8 1e       	adc	r15, r24
   16014:	49 1f       	adc	r20, r25
   16016:	56 1f       	adc	r21, r22
   16018:	c1 1d       	adc	r28, r1
   1601a:	77 0f       	add	r23, r23
   1601c:	88 1f       	adc	r24, r24
   1601e:	99 1f       	adc	r25, r25
   16020:	66 1f       	adc	r22, r22
   16022:	06 94       	lsr	r0
   16024:	a1 f7       	brne	.-24     	; 0x1600e <__ftoa_engine+0x90>
   16026:	05 90       	lpm	r0, Z+
   16028:	07 94       	ror	r0
   1602a:	28 f4       	brcc	.+10     	; 0x16036 <__ftoa_engine+0xb8>
   1602c:	f8 0e       	add	r15, r24
   1602e:	49 1f       	adc	r20, r25
   16030:	56 1f       	adc	r21, r22
   16032:	c7 1f       	adc	r28, r23
   16034:	d1 1d       	adc	r29, r1
   16036:	88 0f       	add	r24, r24
   16038:	99 1f       	adc	r25, r25
   1603a:	66 1f       	adc	r22, r22
   1603c:	77 1f       	adc	r23, r23
   1603e:	06 94       	lsr	r0
   16040:	a1 f7       	brne	.-24     	; 0x1602a <__ftoa_engine+0xac>
   16042:	05 90       	lpm	r0, Z+
   16044:	07 94       	ror	r0
   16046:	20 f4       	brcc	.+8      	; 0x16050 <__ftoa_engine+0xd2>
   16048:	49 0f       	add	r20, r25
   1604a:	56 1f       	adc	r21, r22
   1604c:	c7 1f       	adc	r28, r23
   1604e:	d8 1f       	adc	r29, r24
   16050:	99 0f       	add	r25, r25
   16052:	66 1f       	adc	r22, r22
   16054:	77 1f       	adc	r23, r23
   16056:	88 1f       	adc	r24, r24
   16058:	06 94       	lsr	r0
   1605a:	a9 f7       	brne	.-22     	; 0x16046 <__ftoa_engine+0xc8>
   1605c:	84 91       	lpm	r24, Z+
   1605e:	10 95       	com	r17
   16060:	17 70       	andi	r17, 0x07	; 7
   16062:	41 f0       	breq	.+16     	; 0x16074 <__ftoa_engine+0xf6>
   16064:	d6 95       	lsr	r29
   16066:	c7 95       	ror	r28
   16068:	57 95       	ror	r21
   1606a:	47 95       	ror	r20
   1606c:	f7 94       	ror	r15
   1606e:	e7 94       	ror	r14
   16070:	1a 95       	dec	r17
   16072:	c1 f7       	brne	.-16     	; 0x16064 <__ftoa_engine+0xe6>
   16074:	e7 e5       	ldi	r30, 0x57	; 87
   16076:	fd e0       	ldi	r31, 0x0D	; 13
   16078:	68 94       	set
   1607a:	15 90       	lpm	r1, Z+
   1607c:	15 91       	lpm	r17, Z+
   1607e:	35 91       	lpm	r19, Z+
   16080:	65 91       	lpm	r22, Z+
   16082:	95 91       	lpm	r25, Z+
   16084:	05 90       	lpm	r0, Z+
   16086:	7f e2       	ldi	r23, 0x2F	; 47
   16088:	73 95       	inc	r23
   1608a:	e1 18       	sub	r14, r1
   1608c:	f1 0a       	sbc	r15, r17
   1608e:	43 0b       	sbc	r20, r19
   16090:	56 0b       	sbc	r21, r22
   16092:	c9 0b       	sbc	r28, r25
   16094:	d0 09       	sbc	r29, r0
   16096:	c0 f7       	brcc	.-16     	; 0x16088 <__ftoa_engine+0x10a>
   16098:	e1 0c       	add	r14, r1
   1609a:	f1 1e       	adc	r15, r17
   1609c:	43 1f       	adc	r20, r19
   1609e:	56 1f       	adc	r21, r22
   160a0:	c9 1f       	adc	r28, r25
   160a2:	d0 1d       	adc	r29, r0
   160a4:	7e f4       	brtc	.+30     	; 0x160c4 <__ftoa_engine+0x146>
   160a6:	70 33       	cpi	r23, 0x30	; 48
   160a8:	11 f4       	brne	.+4      	; 0x160ae <__ftoa_engine+0x130>
   160aa:	8a 95       	dec	r24
   160ac:	e6 cf       	rjmp	.-52     	; 0x1607a <__ftoa_engine+0xfc>
   160ae:	e8 94       	clt
   160b0:	01 50       	subi	r16, 0x01	; 1
   160b2:	30 f0       	brcs	.+12     	; 0x160c0 <__ftoa_engine+0x142>
   160b4:	08 0f       	add	r16, r24
   160b6:	0a f4       	brpl	.+2      	; 0x160ba <__ftoa_engine+0x13c>
   160b8:	00 27       	eor	r16, r16
   160ba:	02 17       	cp	r16, r18
   160bc:	08 f4       	brcc	.+2      	; 0x160c0 <__ftoa_engine+0x142>
   160be:	20 2f       	mov	r18, r16
   160c0:	23 95       	inc	r18
   160c2:	02 2f       	mov	r16, r18
   160c4:	7a 33       	cpi	r23, 0x3A	; 58
   160c6:	28 f0       	brcs	.+10     	; 0x160d2 <__ftoa_engine+0x154>
   160c8:	79 e3       	ldi	r23, 0x39	; 57
   160ca:	7d 93       	st	X+, r23
   160cc:	2a 95       	dec	r18
   160ce:	e9 f7       	brne	.-6      	; 0x160ca <__ftoa_engine+0x14c>
   160d0:	10 c0       	rjmp	.+32     	; 0x160f2 <__ftoa_engine+0x174>
   160d2:	7d 93       	st	X+, r23
   160d4:	2a 95       	dec	r18
   160d6:	89 f6       	brne	.-94     	; 0x1607a <__ftoa_engine+0xfc>
   160d8:	06 94       	lsr	r0
   160da:	97 95       	ror	r25
   160dc:	67 95       	ror	r22
   160de:	37 95       	ror	r19
   160e0:	17 95       	ror	r17
   160e2:	17 94       	ror	r1
   160e4:	e1 18       	sub	r14, r1
   160e6:	f1 0a       	sbc	r15, r17
   160e8:	43 0b       	sbc	r20, r19
   160ea:	56 0b       	sbc	r21, r22
   160ec:	c9 0b       	sbc	r28, r25
   160ee:	d0 09       	sbc	r29, r0
   160f0:	98 f0       	brcs	.+38     	; 0x16118 <__ftoa_engine+0x19a>
   160f2:	23 95       	inc	r18
   160f4:	7e 91       	ld	r23, -X
   160f6:	73 95       	inc	r23
   160f8:	7a 33       	cpi	r23, 0x3A	; 58
   160fa:	08 f0       	brcs	.+2      	; 0x160fe <__ftoa_engine+0x180>
   160fc:	70 e3       	ldi	r23, 0x30	; 48
   160fe:	7c 93       	st	X, r23
   16100:	20 13       	cpse	r18, r16
   16102:	b8 f7       	brcc	.-18     	; 0x160f2 <__ftoa_engine+0x174>
   16104:	7e 91       	ld	r23, -X
   16106:	70 61       	ori	r23, 0x10	; 16
   16108:	7d 93       	st	X+, r23
   1610a:	30 f0       	brcs	.+12     	; 0x16118 <__ftoa_engine+0x19a>
   1610c:	83 95       	inc	r24
   1610e:	71 e3       	ldi	r23, 0x31	; 49
   16110:	7d 93       	st	X+, r23
   16112:	70 e3       	ldi	r23, 0x30	; 48
   16114:	2a 95       	dec	r18
   16116:	e1 f7       	brne	.-8      	; 0x16110 <__ftoa_engine+0x192>
   16118:	11 24       	eor	r1, r1
   1611a:	ef 90       	pop	r14
   1611c:	ff 90       	pop	r15
   1611e:	0f 91       	pop	r16
   16120:	1f 91       	pop	r17
   16122:	cf 91       	pop	r28
   16124:	df 91       	pop	r29
   16126:	99 27       	eor	r25, r25
   16128:	87 fd       	sbrc	r24, 7
   1612a:	90 95       	com	r25
   1612c:	08 95       	ret

0001612e <strcasecmp_P>:
   1612e:	fb 01       	movw	r30, r22
   16130:	dc 01       	movw	r26, r24
   16132:	8d 91       	ld	r24, X+
   16134:	81 34       	cpi	r24, 0x41	; 65
   16136:	1c f0       	brlt	.+6      	; 0x1613e <strcasecmp_P+0x10>
   16138:	8b 35       	cpi	r24, 0x5B	; 91
   1613a:	0c f4       	brge	.+2      	; 0x1613e <strcasecmp_P+0x10>
   1613c:	80 5e       	subi	r24, 0xE0	; 224
   1613e:	65 91       	lpm	r22, Z+
   16140:	61 34       	cpi	r22, 0x41	; 65
   16142:	1c f0       	brlt	.+6      	; 0x1614a <strcasecmp_P+0x1c>
   16144:	6b 35       	cpi	r22, 0x5B	; 91
   16146:	0c f4       	brge	.+2      	; 0x1614a <strcasecmp_P+0x1c>
   16148:	60 5e       	subi	r22, 0xE0	; 224
   1614a:	86 1b       	sub	r24, r22
   1614c:	61 11       	cpse	r22, r1
   1614e:	89 f3       	breq	.-30     	; 0x16132 <strcasecmp_P+0x4>
   16150:	99 0b       	sbc	r25, r25
   16152:	08 95       	ret

00016154 <strnlen_P>:
   16154:	fc 01       	movw	r30, r24
   16156:	05 90       	lpm	r0, Z+
   16158:	61 50       	subi	r22, 0x01	; 1
   1615a:	70 40       	sbci	r23, 0x00	; 0
   1615c:	01 10       	cpse	r0, r1
   1615e:	d8 f7       	brcc	.-10     	; 0x16156 <strnlen_P+0x2>
   16160:	80 95       	com	r24
   16162:	90 95       	com	r25
   16164:	8e 0f       	add	r24, r30
   16166:	9f 1f       	adc	r25, r31
   16168:	08 95       	ret

0001616a <strtok>:
   1616a:	43 eb       	ldi	r20, 0xB3	; 179
   1616c:	57 e2       	ldi	r21, 0x27	; 39
   1616e:	0e 94 1f b1 	call	0x1623e	; 0x1623e <strtok_r>
   16172:	08 95       	ret

00016174 <memcmp>:
   16174:	fb 01       	movw	r30, r22
   16176:	dc 01       	movw	r26, r24
   16178:	04 c0       	rjmp	.+8      	; 0x16182 <memcmp+0xe>
   1617a:	8d 91       	ld	r24, X+
   1617c:	01 90       	ld	r0, Z+
   1617e:	80 19       	sub	r24, r0
   16180:	21 f4       	brne	.+8      	; 0x1618a <memcmp+0x16>
   16182:	41 50       	subi	r20, 0x01	; 1
   16184:	50 40       	sbci	r21, 0x00	; 0
   16186:	c8 f7       	brcc	.-14     	; 0x1617a <memcmp+0x6>
   16188:	88 1b       	sub	r24, r24
   1618a:	99 0b       	sbc	r25, r25
   1618c:	08 95       	ret

0001618e <memcpy>:
   1618e:	fb 01       	movw	r30, r22
   16190:	dc 01       	movw	r26, r24
   16192:	02 c0       	rjmp	.+4      	; 0x16198 <memcpy+0xa>
   16194:	01 90       	ld	r0, Z+
   16196:	0d 92       	st	X+, r0
   16198:	41 50       	subi	r20, 0x01	; 1
   1619a:	50 40       	sbci	r21, 0x00	; 0
   1619c:	d8 f7       	brcc	.-10     	; 0x16194 <memcpy+0x6>
   1619e:	08 95       	ret

000161a0 <memset>:
   161a0:	dc 01       	movw	r26, r24
   161a2:	01 c0       	rjmp	.+2      	; 0x161a6 <memset+0x6>
   161a4:	6d 93       	st	X+, r22
   161a6:	41 50       	subi	r20, 0x01	; 1
   161a8:	50 40       	sbci	r21, 0x00	; 0
   161aa:	e0 f7       	brcc	.-8      	; 0x161a4 <memset+0x4>
   161ac:	08 95       	ret

000161ae <strcasecmp>:
   161ae:	fb 01       	movw	r30, r22
   161b0:	dc 01       	movw	r26, r24
   161b2:	8d 91       	ld	r24, X+
   161b4:	81 34       	cpi	r24, 0x41	; 65
   161b6:	1c f0       	brlt	.+6      	; 0x161be <strcasecmp+0x10>
   161b8:	8b 35       	cpi	r24, 0x5B	; 91
   161ba:	0c f4       	brge	.+2      	; 0x161be <strcasecmp+0x10>
   161bc:	80 5e       	subi	r24, 0xE0	; 224
   161be:	61 91       	ld	r22, Z+
   161c0:	61 34       	cpi	r22, 0x41	; 65
   161c2:	1c f0       	brlt	.+6      	; 0x161ca <strcasecmp+0x1c>
   161c4:	6b 35       	cpi	r22, 0x5B	; 91
   161c6:	0c f4       	brge	.+2      	; 0x161ca <strcasecmp+0x1c>
   161c8:	60 5e       	subi	r22, 0xE0	; 224
   161ca:	86 1b       	sub	r24, r22
   161cc:	61 11       	cpse	r22, r1
   161ce:	89 f3       	breq	.-30     	; 0x161b2 <strcasecmp+0x4>
   161d0:	99 0b       	sbc	r25, r25
   161d2:	08 95       	ret

000161d4 <strchr>:
   161d4:	fc 01       	movw	r30, r24
   161d6:	81 91       	ld	r24, Z+
   161d8:	86 17       	cp	r24, r22
   161da:	21 f0       	breq	.+8      	; 0x161e4 <strchr+0x10>
   161dc:	88 23       	and	r24, r24
   161de:	d9 f7       	brne	.-10     	; 0x161d6 <strchr+0x2>
   161e0:	99 27       	eor	r25, r25
   161e2:	08 95       	ret
   161e4:	31 97       	sbiw	r30, 0x01	; 1
   161e6:	cf 01       	movw	r24, r30
   161e8:	08 95       	ret

000161ea <strcmp>:
   161ea:	fb 01       	movw	r30, r22
   161ec:	dc 01       	movw	r26, r24
   161ee:	8d 91       	ld	r24, X+
   161f0:	01 90       	ld	r0, Z+
   161f2:	80 19       	sub	r24, r0
   161f4:	01 10       	cpse	r0, r1
   161f6:	d9 f3       	breq	.-10     	; 0x161ee <strcmp+0x4>
   161f8:	99 0b       	sbc	r25, r25
   161fa:	08 95       	ret

000161fc <strcpy>:
   161fc:	fb 01       	movw	r30, r22
   161fe:	dc 01       	movw	r26, r24
   16200:	01 90       	ld	r0, Z+
   16202:	0d 92       	st	X+, r0
   16204:	00 20       	and	r0, r0
   16206:	e1 f7       	brne	.-8      	; 0x16200 <strcpy+0x4>
   16208:	08 95       	ret

0001620a <strncpy>:
   1620a:	fb 01       	movw	r30, r22
   1620c:	dc 01       	movw	r26, r24
   1620e:	41 50       	subi	r20, 0x01	; 1
   16210:	50 40       	sbci	r21, 0x00	; 0
   16212:	48 f0       	brcs	.+18     	; 0x16226 <strncpy+0x1c>
   16214:	01 90       	ld	r0, Z+
   16216:	0d 92       	st	X+, r0
   16218:	00 20       	and	r0, r0
   1621a:	c9 f7       	brne	.-14     	; 0x1620e <strncpy+0x4>
   1621c:	01 c0       	rjmp	.+2      	; 0x16220 <strncpy+0x16>
   1621e:	1d 92       	st	X+, r1
   16220:	41 50       	subi	r20, 0x01	; 1
   16222:	50 40       	sbci	r21, 0x00	; 0
   16224:	e0 f7       	brcc	.-8      	; 0x1621e <strncpy+0x14>
   16226:	08 95       	ret

00016228 <strnlen>:
   16228:	fc 01       	movw	r30, r24
   1622a:	61 50       	subi	r22, 0x01	; 1
   1622c:	70 40       	sbci	r23, 0x00	; 0
   1622e:	01 90       	ld	r0, Z+
   16230:	01 10       	cpse	r0, r1
   16232:	d8 f7       	brcc	.-10     	; 0x1622a <strnlen+0x2>
   16234:	80 95       	com	r24
   16236:	90 95       	com	r25
   16238:	8e 0f       	add	r24, r30
   1623a:	9f 1f       	adc	r25, r31
   1623c:	08 95       	ret

0001623e <strtok_r>:
   1623e:	fa 01       	movw	r30, r20
   16240:	a1 91       	ld	r26, Z+
   16242:	b0 81       	ld	r27, Z
   16244:	00 97       	sbiw	r24, 0x00	; 0
   16246:	19 f4       	brne	.+6      	; 0x1624e <strtok_r+0x10>
   16248:	10 97       	sbiw	r26, 0x00	; 0
   1624a:	e1 f0       	breq	.+56     	; 0x16284 <strtok_r+0x46>
   1624c:	cd 01       	movw	r24, r26
   1624e:	dc 01       	movw	r26, r24
   16250:	cd 01       	movw	r24, r26
   16252:	0d 90       	ld	r0, X+
   16254:	00 20       	and	r0, r0
   16256:	11 f4       	brne	.+4      	; 0x1625c <strtok_r+0x1e>
   16258:	c0 01       	movw	r24, r0
   1625a:	13 c0       	rjmp	.+38     	; 0x16282 <strtok_r+0x44>
   1625c:	fb 01       	movw	r30, r22
   1625e:	21 91       	ld	r18, Z+
   16260:	22 23       	and	r18, r18
   16262:	19 f0       	breq	.+6      	; 0x1626a <strtok_r+0x2c>
   16264:	20 15       	cp	r18, r0
   16266:	d9 f7       	brne	.-10     	; 0x1625e <strtok_r+0x20>
   16268:	f3 cf       	rjmp	.-26     	; 0x16250 <strtok_r+0x12>
   1626a:	fb 01       	movw	r30, r22
   1626c:	21 91       	ld	r18, Z+
   1626e:	20 15       	cp	r18, r0
   16270:	19 f4       	brne	.+6      	; 0x16278 <strtok_r+0x3a>
   16272:	1e 92       	st	-X, r1
   16274:	11 96       	adiw	r26, 0x01	; 1
   16276:	06 c0       	rjmp	.+12     	; 0x16284 <strtok_r+0x46>
   16278:	22 23       	and	r18, r18
   1627a:	c1 f7       	brne	.-16     	; 0x1626c <strtok_r+0x2e>
   1627c:	0d 90       	ld	r0, X+
   1627e:	00 20       	and	r0, r0
   16280:	a1 f7       	brne	.-24     	; 0x1626a <strtok_r+0x2c>
   16282:	d0 01       	movw	r26, r0
   16284:	fa 01       	movw	r30, r20
   16286:	a1 93       	st	Z+, r26
   16288:	b0 83       	st	Z, r27
   1628a:	08 95       	ret

0001628c <__mulhi_const_10>:
   1628c:	7a e0       	ldi	r23, 0x0A	; 10
   1628e:	97 9f       	mul	r25, r23
   16290:	90 2d       	mov	r25, r0
   16292:	87 9f       	mul	r24, r23
   16294:	80 2d       	mov	r24, r0
   16296:	91 0d       	add	r25, r1
   16298:	11 24       	eor	r1, r1
   1629a:	08 95       	ret

0001629c <fputc>:
   1629c:	0f 93       	push	r16
   1629e:	1f 93       	push	r17
   162a0:	cf 93       	push	r28
   162a2:	df 93       	push	r29
   162a4:	8c 01       	movw	r16, r24
   162a6:	eb 01       	movw	r28, r22
   162a8:	8b 81       	ldd	r24, Y+3	; 0x03
   162aa:	81 ff       	sbrs	r24, 1
   162ac:	1b c0       	rjmp	.+54     	; 0x162e4 <fputc+0x48>
   162ae:	82 ff       	sbrs	r24, 2
   162b0:	0d c0       	rjmp	.+26     	; 0x162cc <fputc+0x30>
   162b2:	2e 81       	ldd	r18, Y+6	; 0x06
   162b4:	3f 81       	ldd	r19, Y+7	; 0x07
   162b6:	8c 81       	ldd	r24, Y+4	; 0x04
   162b8:	9d 81       	ldd	r25, Y+5	; 0x05
   162ba:	28 17       	cp	r18, r24
   162bc:	39 07       	cpc	r19, r25
   162be:	64 f4       	brge	.+24     	; 0x162d8 <fputc+0x3c>
   162c0:	e8 81       	ld	r30, Y
   162c2:	f9 81       	ldd	r31, Y+1	; 0x01
   162c4:	01 93       	st	Z+, r16
   162c6:	e8 83       	st	Y, r30
   162c8:	f9 83       	std	Y+1, r31	; 0x01
   162ca:	06 c0       	rjmp	.+12     	; 0x162d8 <fputc+0x3c>
   162cc:	e8 85       	ldd	r30, Y+8	; 0x08
   162ce:	f9 85       	ldd	r31, Y+9	; 0x09
   162d0:	80 2f       	mov	r24, r16
   162d2:	19 95       	eicall
   162d4:	89 2b       	or	r24, r25
   162d6:	31 f4       	brne	.+12     	; 0x162e4 <fputc+0x48>
   162d8:	8e 81       	ldd	r24, Y+6	; 0x06
   162da:	9f 81       	ldd	r25, Y+7	; 0x07
   162dc:	01 96       	adiw	r24, 0x01	; 1
   162de:	8e 83       	std	Y+6, r24	; 0x06
   162e0:	9f 83       	std	Y+7, r25	; 0x07
   162e2:	02 c0       	rjmp	.+4      	; 0x162e8 <fputc+0x4c>
   162e4:	0f ef       	ldi	r16, 0xFF	; 255
   162e6:	1f ef       	ldi	r17, 0xFF	; 255
   162e8:	c8 01       	movw	r24, r16
   162ea:	df 91       	pop	r29
   162ec:	cf 91       	pop	r28
   162ee:	1f 91       	pop	r17
   162f0:	0f 91       	pop	r16
   162f2:	08 95       	ret

000162f4 <sprintf>:
   162f4:	0f 93       	push	r16
   162f6:	1f 93       	push	r17
   162f8:	df 93       	push	r29
   162fa:	cf 93       	push	r28
   162fc:	cd b7       	in	r28, 0x3d	; 61
   162fe:	de b7       	in	r29, 0x3e	; 62
   16300:	2e 97       	sbiw	r28, 0x0e	; 14
   16302:	cd bf       	out	0x3d, r28	; 61
   16304:	de bf       	out	0x3e, r29	; 62
   16306:	0e 89       	ldd	r16, Y+22	; 0x16
   16308:	1f 89       	ldd	r17, Y+23	; 0x17
   1630a:	86 e0       	ldi	r24, 0x06	; 6
   1630c:	8c 83       	std	Y+4, r24	; 0x04
   1630e:	09 83       	std	Y+1, r16	; 0x01
   16310:	1a 83       	std	Y+2, r17	; 0x02
   16312:	8f ef       	ldi	r24, 0xFF	; 255
   16314:	9f e7       	ldi	r25, 0x7F	; 127
   16316:	8d 83       	std	Y+5, r24	; 0x05
   16318:	9e 83       	std	Y+6, r25	; 0x06
   1631a:	9e 01       	movw	r18, r28
   1631c:	26 5e       	subi	r18, 0xE6	; 230
   1631e:	3f 4f       	sbci	r19, 0xFF	; 255
   16320:	ce 01       	movw	r24, r28
   16322:	01 96       	adiw	r24, 0x01	; 1
   16324:	68 8d       	ldd	r22, Y+24	; 0x18
   16326:	79 8d       	ldd	r23, Y+25	; 0x19
   16328:	a9 01       	movw	r20, r18
   1632a:	0e 94 5a a7 	call	0x14eb4	; 0x14eb4 <vfprintf>
   1632e:	2f 81       	ldd	r18, Y+7	; 0x07
   16330:	38 85       	ldd	r19, Y+8	; 0x08
   16332:	02 0f       	add	r16, r18
   16334:	13 1f       	adc	r17, r19
   16336:	f8 01       	movw	r30, r16
   16338:	10 82       	st	Z, r1
   1633a:	2e 96       	adiw	r28, 0x0e	; 14
   1633c:	cd bf       	out	0x3d, r28	; 61
   1633e:	de bf       	out	0x3e, r29	; 62
   16340:	cf 91       	pop	r28
   16342:	df 91       	pop	r29
   16344:	1f 91       	pop	r17
   16346:	0f 91       	pop	r16
   16348:	08 95       	ret

0001634a <sprintf_P>:
   1634a:	0f 93       	push	r16
   1634c:	1f 93       	push	r17
   1634e:	df 93       	push	r29
   16350:	cf 93       	push	r28
   16352:	cd b7       	in	r28, 0x3d	; 61
   16354:	de b7       	in	r29, 0x3e	; 62
   16356:	2e 97       	sbiw	r28, 0x0e	; 14
   16358:	cd bf       	out	0x3d, r28	; 61
   1635a:	de bf       	out	0x3e, r29	; 62
   1635c:	0e 89       	ldd	r16, Y+22	; 0x16
   1635e:	1f 89       	ldd	r17, Y+23	; 0x17
   16360:	8e e0       	ldi	r24, 0x0E	; 14
   16362:	8c 83       	std	Y+4, r24	; 0x04
   16364:	09 83       	std	Y+1, r16	; 0x01
   16366:	1a 83       	std	Y+2, r17	; 0x02
   16368:	8f ef       	ldi	r24, 0xFF	; 255
   1636a:	9f e7       	ldi	r25, 0x7F	; 127
   1636c:	8d 83       	std	Y+5, r24	; 0x05
   1636e:	9e 83       	std	Y+6, r25	; 0x06
   16370:	9e 01       	movw	r18, r28
   16372:	26 5e       	subi	r18, 0xE6	; 230
   16374:	3f 4f       	sbci	r19, 0xFF	; 255
   16376:	ce 01       	movw	r24, r28
   16378:	01 96       	adiw	r24, 0x01	; 1
   1637a:	68 8d       	ldd	r22, Y+24	; 0x18
   1637c:	79 8d       	ldd	r23, Y+25	; 0x19
   1637e:	a9 01       	movw	r20, r18
   16380:	0e 94 5a a7 	call	0x14eb4	; 0x14eb4 <vfprintf>
   16384:	2f 81       	ldd	r18, Y+7	; 0x07
   16386:	38 85       	ldd	r19, Y+8	; 0x08
   16388:	02 0f       	add	r16, r18
   1638a:	13 1f       	adc	r17, r19
   1638c:	f8 01       	movw	r30, r16
   1638e:	10 82       	st	Z, r1
   16390:	2e 96       	adiw	r28, 0x0e	; 14
   16392:	cd bf       	out	0x3d, r28	; 61
   16394:	de bf       	out	0x3e, r29	; 62
   16396:	cf 91       	pop	r28
   16398:	df 91       	pop	r29
   1639a:	1f 91       	pop	r17
   1639c:	0f 91       	pop	r16
   1639e:	08 95       	ret

000163a0 <__ultoa_invert>:
   163a0:	fa 01       	movw	r30, r20
   163a2:	aa 27       	eor	r26, r26
   163a4:	28 30       	cpi	r18, 0x08	; 8
   163a6:	51 f1       	breq	.+84     	; 0x163fc <__ultoa_invert+0x5c>
   163a8:	20 31       	cpi	r18, 0x10	; 16
   163aa:	81 f1       	breq	.+96     	; 0x1640c <__ultoa_invert+0x6c>
   163ac:	e8 94       	clt
   163ae:	6f 93       	push	r22
   163b0:	6e 7f       	andi	r22, 0xFE	; 254
   163b2:	6e 5f       	subi	r22, 0xFE	; 254
   163b4:	7f 4f       	sbci	r23, 0xFF	; 255
   163b6:	8f 4f       	sbci	r24, 0xFF	; 255
   163b8:	9f 4f       	sbci	r25, 0xFF	; 255
   163ba:	af 4f       	sbci	r26, 0xFF	; 255
   163bc:	b1 e0       	ldi	r27, 0x01	; 1
   163be:	3e d0       	rcall	.+124    	; 0x1643c <__ultoa_invert+0x9c>
   163c0:	b4 e0       	ldi	r27, 0x04	; 4
   163c2:	3c d0       	rcall	.+120    	; 0x1643c <__ultoa_invert+0x9c>
   163c4:	67 0f       	add	r22, r23
   163c6:	78 1f       	adc	r23, r24
   163c8:	89 1f       	adc	r24, r25
   163ca:	9a 1f       	adc	r25, r26
   163cc:	a1 1d       	adc	r26, r1
   163ce:	68 0f       	add	r22, r24
   163d0:	79 1f       	adc	r23, r25
   163d2:	8a 1f       	adc	r24, r26
   163d4:	91 1d       	adc	r25, r1
   163d6:	a1 1d       	adc	r26, r1
   163d8:	6a 0f       	add	r22, r26
   163da:	71 1d       	adc	r23, r1
   163dc:	81 1d       	adc	r24, r1
   163de:	91 1d       	adc	r25, r1
   163e0:	a1 1d       	adc	r26, r1
   163e2:	20 d0       	rcall	.+64     	; 0x16424 <__ultoa_invert+0x84>
   163e4:	09 f4       	brne	.+2      	; 0x163e8 <__ultoa_invert+0x48>
   163e6:	68 94       	set
   163e8:	3f 91       	pop	r19
   163ea:	2a e0       	ldi	r18, 0x0A	; 10
   163ec:	26 9f       	mul	r18, r22
   163ee:	11 24       	eor	r1, r1
   163f0:	30 19       	sub	r19, r0
   163f2:	30 5d       	subi	r19, 0xD0	; 208
   163f4:	31 93       	st	Z+, r19
   163f6:	de f6       	brtc	.-74     	; 0x163ae <__ultoa_invert+0xe>
   163f8:	cf 01       	movw	r24, r30
   163fa:	08 95       	ret
   163fc:	46 2f       	mov	r20, r22
   163fe:	47 70       	andi	r20, 0x07	; 7
   16400:	40 5d       	subi	r20, 0xD0	; 208
   16402:	41 93       	st	Z+, r20
   16404:	b3 e0       	ldi	r27, 0x03	; 3
   16406:	0f d0       	rcall	.+30     	; 0x16426 <__ultoa_invert+0x86>
   16408:	c9 f7       	brne	.-14     	; 0x163fc <__ultoa_invert+0x5c>
   1640a:	f6 cf       	rjmp	.-20     	; 0x163f8 <__ultoa_invert+0x58>
   1640c:	46 2f       	mov	r20, r22
   1640e:	4f 70       	andi	r20, 0x0F	; 15
   16410:	40 5d       	subi	r20, 0xD0	; 208
   16412:	4a 33       	cpi	r20, 0x3A	; 58
   16414:	18 f0       	brcs	.+6      	; 0x1641c <__ultoa_invert+0x7c>
   16416:	49 5d       	subi	r20, 0xD9	; 217
   16418:	31 fd       	sbrc	r19, 1
   1641a:	40 52       	subi	r20, 0x20	; 32
   1641c:	41 93       	st	Z+, r20
   1641e:	02 d0       	rcall	.+4      	; 0x16424 <__ultoa_invert+0x84>
   16420:	a9 f7       	brne	.-22     	; 0x1640c <__ultoa_invert+0x6c>
   16422:	ea cf       	rjmp	.-44     	; 0x163f8 <__ultoa_invert+0x58>
   16424:	b4 e0       	ldi	r27, 0x04	; 4
   16426:	a6 95       	lsr	r26
   16428:	97 95       	ror	r25
   1642a:	87 95       	ror	r24
   1642c:	77 95       	ror	r23
   1642e:	67 95       	ror	r22
   16430:	ba 95       	dec	r27
   16432:	c9 f7       	brne	.-14     	; 0x16426 <__ultoa_invert+0x86>
   16434:	00 97       	sbiw	r24, 0x00	; 0
   16436:	61 05       	cpc	r22, r1
   16438:	71 05       	cpc	r23, r1
   1643a:	08 95       	ret
   1643c:	9b 01       	movw	r18, r22
   1643e:	ac 01       	movw	r20, r24
   16440:	0a 2e       	mov	r0, r26
   16442:	06 94       	lsr	r0
   16444:	57 95       	ror	r21
   16446:	47 95       	ror	r20
   16448:	37 95       	ror	r19
   1644a:	27 95       	ror	r18
   1644c:	ba 95       	dec	r27
   1644e:	c9 f7       	brne	.-14     	; 0x16442 <__ultoa_invert+0xa2>
   16450:	62 0f       	add	r22, r18
   16452:	73 1f       	adc	r23, r19
   16454:	84 1f       	adc	r24, r20
   16456:	95 1f       	adc	r25, r21
   16458:	a0 1d       	adc	r26, r0
   1645a:	08 95       	ret

0001645c <arb_createMemIntsOn>:
   1645c:	0f 92       	push	r0
   1645e:	0f b6       	in	r0, 0x3f	; 63
   16460:	0f 93       	push	r16
   16462:	00 2d       	mov	r16, r0
   16464:	00 68       	ori	r16, 0x80	; 128
   16466:	00 2e       	mov	r0, r16
   16468:	0f 91       	pop	r16
   1646a:	0f 92       	push	r0
   1646c:	1f 92       	push	r1
   1646e:	11 24       	eor	r1, r1
   16470:	2f 92       	push	r2
   16472:	3f 92       	push	r3
   16474:	4f 92       	push	r4
   16476:	5f 92       	push	r5
   16478:	6f 92       	push	r6
   1647a:	7f 92       	push	r7
   1647c:	8f 92       	push	r8
   1647e:	9f 92       	push	r9
   16480:	af 92       	push	r10
   16482:	bf 92       	push	r11
   16484:	cf 92       	push	r12
   16486:	df 92       	push	r13
   16488:	ef 92       	push	r14
   1648a:	ff 92       	push	r15
   1648c:	0f 93       	push	r16
   1648e:	1f 93       	push	r17
   16490:	2f 93       	push	r18
   16492:	3f 93       	push	r19
   16494:	4f 93       	push	r20
   16496:	5f 93       	push	r21
   16498:	6f 93       	push	r22
   1649a:	7f 93       	push	r23
   1649c:	8f 93       	push	r24
   1649e:	9f 93       	push	r25
   164a0:	af 93       	push	r26
   164a2:	bf 93       	push	r27
   164a4:	cf 93       	push	r28
   164a6:	df 93       	push	r29
   164a8:	ef 93       	push	r30
   164aa:	ff 93       	push	r31
   164ac:	e0 91 ab 22 	lds	r30, 0x22AB
   164b0:	f0 91 ac 22 	lds	r31, 0x22AC
   164b4:	06 80       	ldd	r0, Z+6	; 0x06
   164b6:	f7 81       	ldd	r31, Z+7	; 0x07
   164b8:	e0 2d       	mov	r30, r0
   164ba:	01 90       	ld	r0, Z+
   164bc:	f0 81       	ld	r31, Z
   164be:	e0 2d       	mov	r30, r0
   164c0:	e0 93 c8 27 	sts	0x27C8, r30
   164c4:	f0 93 c9 27 	sts	0x27C9, r31
   164c8:	2d b7       	in	r18, 0x3d	; 61
   164ca:	4e b7       	in	r20, 0x3e	; 62
   164cc:	94 2f       	mov	r25, r20
   164ce:	80 e0       	ldi	r24, 0x00	; 0
   164d0:	30 e0       	ldi	r19, 0x00	; 0
   164d2:	82 2b       	or	r24, r18
   164d4:	93 2b       	or	r25, r19
   164d6:	81 87       	std	Z+9, r24	; 0x09
   164d8:	92 87       	std	Z+10, r25	; 0x0a
   164da:	8f ef       	ldi	r24, 0xFF	; 255
   164dc:	8d bf       	out	0x3d, r24	; 61
   164de:	8f e3       	ldi	r24, 0x3F	; 63
   164e0:	8e bf       	out	0x3e, r24	; 62
   164e2:	c0 91 3d 00 	lds	r28, 0x003D
   164e6:	d0 91 3e 00 	lds	r29, 0x003E
   164ea:	e0 91 ab 22 	lds	r30, 0x22AB
   164ee:	f0 91 ac 22 	lds	r31, 0x22AC
   164f2:	06 80       	ldd	r0, Z+6	; 0x06
   164f4:	f7 81       	ldd	r31, Z+7	; 0x07
   164f6:	e0 2d       	mov	r30, r0
   164f8:	a0 81       	ld	r26, Z
   164fa:	b1 81       	ldd	r27, Z+1	; 0x01
   164fc:	a0 93 c0 27 	sts	0x27C0, r26
   16500:	b0 93 c1 27 	sts	0x27C1, r27
   16504:	1b 96       	adiw	r26, 0x0b	; 11
   16506:	ed 91       	ld	r30, X+
   16508:	fc 91       	ld	r31, X
   1650a:	1c 97       	sbiw	r26, 0x0c	; 12
   1650c:	80 81       	ld	r24, Z
   1650e:	91 81       	ldd	r25, Z+1	; 0x01
   16510:	8d 5a       	subi	r24, 0xAD	; 173
   16512:	9e 4d       	sbci	r25, 0xDE	; 222
   16514:	21 f0       	breq	.+8      	; 0x1651e <arb_createMemIntsOn+0xc2>
   16516:	ab 2b       	or	r26, r27
   16518:	11 f0       	breq	.+4      	; 0x1651e <arb_createMemIntsOn+0xc2>
   1651a:	0e 94 92 85 	call	0x10b24	; 0x10b24 <arb_stackOverflow>
   1651e:	80 91 bf 27 	lds	r24, 0x27BF
   16522:	88 23       	and	r24, r24
   16524:	71 f0       	breq	.+28     	; 0x16542 <arb_createMemIntsOn+0xe6>
   16526:	00 91 bd 27 	lds	r16, 0x27BD
   1652a:	10 91 be 27 	lds	r17, 0x27BE
   1652e:	80 91 bb 27 	lds	r24, 0x27BB
   16532:	90 91 bc 27 	lds	r25, 0x27BC
   16536:	0e 94 99 ae 	call	0x15d32	; 0x15d32 <malloc>
   1653a:	f8 01       	movw	r30, r16
   1653c:	80 83       	st	Z, r24
   1653e:	91 83       	std	Z+1, r25	; 0x01
   16540:	08 c0       	rjmp	.+16     	; 0x16552 <arb_createMemIntsOn+0xf6>
   16542:	e0 91 bd 27 	lds	r30, 0x27BD
   16546:	f0 91 be 27 	lds	r31, 0x27BE
   1654a:	80 81       	ld	r24, Z
   1654c:	91 81       	ldd	r25, Z+1	; 0x01
   1654e:	0e 94 46 af 	call	0x15e8c	; 0x15e8c <free>
   16552:	e0 91 ab 22 	lds	r30, 0x22AB
   16556:	f0 91 ac 22 	lds	r31, 0x22AC
   1655a:	06 80       	ldd	r0, Z+6	; 0x06
   1655c:	f7 81       	ldd	r31, Z+7	; 0x07
   1655e:	e0 2d       	mov	r30, r0
   16560:	01 90       	ld	r0, Z+
   16562:	f0 81       	ld	r31, Z
   16564:	e0 2d       	mov	r30, r0
   16566:	e0 93 c8 27 	sts	0x27C8, r30
   1656a:	f0 93 c9 27 	sts	0x27C9, r31
   1656e:	81 85       	ldd	r24, Z+9	; 0x09
   16570:	92 85       	ldd	r25, Z+10	; 0x0a
   16572:	8d bf       	out	0x3d, r24	; 61
   16574:	9e bf       	out	0x3e, r25	; 62
   16576:	ff 91       	pop	r31
   16578:	ef 91       	pop	r30
   1657a:	df 91       	pop	r29
   1657c:	cf 91       	pop	r28
   1657e:	bf 91       	pop	r27
   16580:	af 91       	pop	r26
   16582:	9f 91       	pop	r25
   16584:	8f 91       	pop	r24
   16586:	7f 91       	pop	r23
   16588:	6f 91       	pop	r22
   1658a:	5f 91       	pop	r21
   1658c:	4f 91       	pop	r20
   1658e:	3f 91       	pop	r19
   16590:	2f 91       	pop	r18
   16592:	1f 91       	pop	r17
   16594:	0f 91       	pop	r16
   16596:	ff 90       	pop	r15
   16598:	ef 90       	pop	r14
   1659a:	df 90       	pop	r13
   1659c:	cf 90       	pop	r12
   1659e:	bf 90       	pop	r11
   165a0:	af 90       	pop	r10
   165a2:	9f 90       	pop	r9
   165a4:	8f 90       	pop	r8
   165a6:	7f 90       	pop	r7
   165a8:	6f 90       	pop	r6
   165aa:	5f 90       	pop	r5
   165ac:	4f 90       	pop	r4
   165ae:	3f 90       	pop	r3
   165b0:	2f 90       	pop	r2
   165b2:	1f 90       	pop	r1
   165b4:	0f 90       	pop	r0
   165b6:	0f be       	out	0x3f, r0	; 63
   165b8:	0f 90       	pop	r0
   165ba:	08 95       	ret

000165bc <arb_createMemIntsOff>:
   165bc:	0f 92       	push	r0
   165be:	0f b6       	in	r0, 0x3f	; 63
   165c0:	0f 92       	push	r0
   165c2:	1f 92       	push	r1
   165c4:	11 24       	eor	r1, r1
   165c6:	2f 92       	push	r2
   165c8:	3f 92       	push	r3
   165ca:	4f 92       	push	r4
   165cc:	5f 92       	push	r5
   165ce:	6f 92       	push	r6
   165d0:	7f 92       	push	r7
   165d2:	8f 92       	push	r8
   165d4:	9f 92       	push	r9
   165d6:	af 92       	push	r10
   165d8:	bf 92       	push	r11
   165da:	cf 92       	push	r12
   165dc:	df 92       	push	r13
   165de:	ef 92       	push	r14
   165e0:	ff 92       	push	r15
   165e2:	0f 93       	push	r16
   165e4:	1f 93       	push	r17
   165e6:	2f 93       	push	r18
   165e8:	3f 93       	push	r19
   165ea:	4f 93       	push	r20
   165ec:	5f 93       	push	r21
   165ee:	6f 93       	push	r22
   165f0:	7f 93       	push	r23
   165f2:	8f 93       	push	r24
   165f4:	9f 93       	push	r25
   165f6:	af 93       	push	r26
   165f8:	bf 93       	push	r27
   165fa:	cf 93       	push	r28
   165fc:	df 93       	push	r29
   165fe:	ef 93       	push	r30
   16600:	ff 93       	push	r31
   16602:	e0 91 ab 22 	lds	r30, 0x22AB
   16606:	f0 91 ac 22 	lds	r31, 0x22AC
   1660a:	06 80       	ldd	r0, Z+6	; 0x06
   1660c:	f7 81       	ldd	r31, Z+7	; 0x07
   1660e:	e0 2d       	mov	r30, r0
   16610:	01 90       	ld	r0, Z+
   16612:	f0 81       	ld	r31, Z
   16614:	e0 2d       	mov	r30, r0
   16616:	e0 93 c8 27 	sts	0x27C8, r30
   1661a:	f0 93 c9 27 	sts	0x27C9, r31
   1661e:	2d b7       	in	r18, 0x3d	; 61
   16620:	4e b7       	in	r20, 0x3e	; 62
   16622:	94 2f       	mov	r25, r20
   16624:	80 e0       	ldi	r24, 0x00	; 0
   16626:	30 e0       	ldi	r19, 0x00	; 0
   16628:	82 2b       	or	r24, r18
   1662a:	93 2b       	or	r25, r19
   1662c:	81 87       	std	Z+9, r24	; 0x09
   1662e:	92 87       	std	Z+10, r25	; 0x0a
   16630:	8f ef       	ldi	r24, 0xFF	; 255
   16632:	8d bf       	out	0x3d, r24	; 61
   16634:	8f e3       	ldi	r24, 0x3F	; 63
   16636:	8e bf       	out	0x3e, r24	; 62
   16638:	c0 91 3d 00 	lds	r28, 0x003D
   1663c:	d0 91 3e 00 	lds	r29, 0x003E
   16640:	e0 91 ab 22 	lds	r30, 0x22AB
   16644:	f0 91 ac 22 	lds	r31, 0x22AC
   16648:	06 80       	ldd	r0, Z+6	; 0x06
   1664a:	f7 81       	ldd	r31, Z+7	; 0x07
   1664c:	e0 2d       	mov	r30, r0
   1664e:	a0 81       	ld	r26, Z
   16650:	b1 81       	ldd	r27, Z+1	; 0x01
   16652:	a0 93 c0 27 	sts	0x27C0, r26
   16656:	b0 93 c1 27 	sts	0x27C1, r27
   1665a:	1b 96       	adiw	r26, 0x0b	; 11
   1665c:	ed 91       	ld	r30, X+
   1665e:	fc 91       	ld	r31, X
   16660:	1c 97       	sbiw	r26, 0x0c	; 12
   16662:	80 81       	ld	r24, Z
   16664:	91 81       	ldd	r25, Z+1	; 0x01
   16666:	8d 5a       	subi	r24, 0xAD	; 173
   16668:	9e 4d       	sbci	r25, 0xDE	; 222
   1666a:	21 f0       	breq	.+8      	; 0x16674 <arb_createMemIntsOff+0xb8>
   1666c:	ab 2b       	or	r26, r27
   1666e:	11 f0       	breq	.+4      	; 0x16674 <arb_createMemIntsOff+0xb8>
   16670:	0e 94 92 85 	call	0x10b24	; 0x10b24 <arb_stackOverflow>
   16674:	80 91 bf 27 	lds	r24, 0x27BF
   16678:	88 23       	and	r24, r24
   1667a:	71 f0       	breq	.+28     	; 0x16698 <arb_createMemIntsOff+0xdc>
   1667c:	00 91 bd 27 	lds	r16, 0x27BD
   16680:	10 91 be 27 	lds	r17, 0x27BE
   16684:	80 91 bb 27 	lds	r24, 0x27BB
   16688:	90 91 bc 27 	lds	r25, 0x27BC
   1668c:	0e 94 99 ae 	call	0x15d32	; 0x15d32 <malloc>
   16690:	f8 01       	movw	r30, r16
   16692:	80 83       	st	Z, r24
   16694:	91 83       	std	Z+1, r25	; 0x01
   16696:	08 c0       	rjmp	.+16     	; 0x166a8 <arb_createMemIntsOff+0xec>
   16698:	e0 91 bd 27 	lds	r30, 0x27BD
   1669c:	f0 91 be 27 	lds	r31, 0x27BE
   166a0:	80 81       	ld	r24, Z
   166a2:	91 81       	ldd	r25, Z+1	; 0x01
   166a4:	0e 94 46 af 	call	0x15e8c	; 0x15e8c <free>
   166a8:	e0 91 ab 22 	lds	r30, 0x22AB
   166ac:	f0 91 ac 22 	lds	r31, 0x22AC
   166b0:	06 80       	ldd	r0, Z+6	; 0x06
   166b2:	f7 81       	ldd	r31, Z+7	; 0x07
   166b4:	e0 2d       	mov	r30, r0
   166b6:	01 90       	ld	r0, Z+
   166b8:	f0 81       	ld	r31, Z
   166ba:	e0 2d       	mov	r30, r0
   166bc:	e0 93 c8 27 	sts	0x27C8, r30
   166c0:	f0 93 c9 27 	sts	0x27C9, r31
   166c4:	81 85       	ldd	r24, Z+9	; 0x09
   166c6:	92 85       	ldd	r25, Z+10	; 0x0a
   166c8:	8d bf       	out	0x3d, r24	; 61
   166ca:	9e bf       	out	0x3e, r25	; 62
   166cc:	ff 91       	pop	r31
   166ce:	ef 91       	pop	r30
   166d0:	df 91       	pop	r29
   166d2:	cf 91       	pop	r28
   166d4:	bf 91       	pop	r27
   166d6:	af 91       	pop	r26
   166d8:	9f 91       	pop	r25
   166da:	8f 91       	pop	r24
   166dc:	7f 91       	pop	r23
   166de:	6f 91       	pop	r22
   166e0:	5f 91       	pop	r21
   166e2:	4f 91       	pop	r20
   166e4:	3f 91       	pop	r19
   166e6:	2f 91       	pop	r18
   166e8:	1f 91       	pop	r17
   166ea:	0f 91       	pop	r16
   166ec:	ff 90       	pop	r15
   166ee:	ef 90       	pop	r14
   166f0:	df 90       	pop	r13
   166f2:	cf 90       	pop	r12
   166f4:	bf 90       	pop	r11
   166f6:	af 90       	pop	r10
   166f8:	9f 90       	pop	r9
   166fa:	8f 90       	pop	r8
   166fc:	7f 90       	pop	r7
   166fe:	6f 90       	pop	r6
   16700:	5f 90       	pop	r5
   16702:	4f 90       	pop	r4
   16704:	3f 90       	pop	r3
   16706:	2f 90       	pop	r2
   16708:	1f 90       	pop	r1
   1670a:	0f 90       	pop	r0
   1670c:	0f be       	out	0x3f, r0	; 63
   1670e:	0f 90       	pop	r0
   16710:	08 95       	ret

00016712 <arb_free>:
   16712:	cf 93       	push	r28
   16714:	df 93       	push	r29
   16716:	ec 01       	movw	r28, r24
   16718:	0e 94 4a 80 	call	0x10094	; 0x10094 <arb_sysTimerEnabled>
   1671c:	88 23       	and	r24, r24
   1671e:	b1 f0       	breq	.+44     	; 0x1674c <arb_free+0x3a>
   16720:	0f b6       	in	r0, 0x3f	; 63
   16722:	07 fe       	sbrs	r0, 7
   16724:	0a c0       	rjmp	.+20     	; 0x1673a <arb_free+0x28>
   16726:	f8 94       	cli
   16728:	10 92 bf 27 	sts	0x27BF, r1
   1672c:	c0 93 bd 27 	sts	0x27BD, r28
   16730:	d0 93 be 27 	sts	0x27BE, r29
   16734:	0e 94 2e b2 	call	0x1645c	; 0x1645c <arb_createMemIntsOn>
   16738:	0d c0       	rjmp	.+26     	; 0x16754 <arb_free+0x42>
   1673a:	10 92 bf 27 	sts	0x27BF, r1
   1673e:	c0 93 bd 27 	sts	0x27BD, r28
   16742:	d0 93 be 27 	sts	0x27BE, r29
   16746:	0e 94 de b2 	call	0x165bc	; 0x165bc <arb_createMemIntsOff>
   1674a:	04 c0       	rjmp	.+8      	; 0x16754 <arb_free+0x42>
   1674c:	88 81       	ld	r24, Y
   1674e:	99 81       	ldd	r25, Y+1	; 0x01
   16750:	0e 94 46 af 	call	0x15e8c	; 0x15e8c <free>
   16754:	df 91       	pop	r29
   16756:	cf 91       	pop	r28
   16758:	08 95       	ret

0001675a <arb_malloc>:
   1675a:	0f 93       	push	r16
   1675c:	1f 93       	push	r17
   1675e:	cf 93       	push	r28
   16760:	df 93       	push	r29
   16762:	8c 01       	movw	r16, r24
   16764:	eb 01       	movw	r28, r22
   16766:	0e 94 4a 80 	call	0x10094	; 0x10094 <arb_sysTimerEnabled>
   1676a:	88 23       	and	r24, r24
   1676c:	01 f1       	breq	.+64     	; 0x167ae <arb_malloc+0x54>
   1676e:	0f b6       	in	r0, 0x3f	; 63
   16770:	07 fe       	sbrs	r0, 7
   16772:	0f c0       	rjmp	.+30     	; 0x16792 <arb_malloc+0x38>
   16774:	f8 94       	cli
   16776:	81 e0       	ldi	r24, 0x01	; 1
   16778:	80 93 bf 27 	sts	0x27BF, r24
   1677c:	c0 93 bd 27 	sts	0x27BD, r28
   16780:	d0 93 be 27 	sts	0x27BE, r29
   16784:	00 93 bb 27 	sts	0x27BB, r16
   16788:	10 93 bc 27 	sts	0x27BC, r17
   1678c:	0e 94 2e b2 	call	0x1645c	; 0x1645c <arb_createMemIntsOn>
   16790:	13 c0       	rjmp	.+38     	; 0x167b8 <arb_malloc+0x5e>
   16792:	81 e0       	ldi	r24, 0x01	; 1
   16794:	80 93 bf 27 	sts	0x27BF, r24
   16798:	c0 93 bd 27 	sts	0x27BD, r28
   1679c:	d0 93 be 27 	sts	0x27BE, r29
   167a0:	00 93 bb 27 	sts	0x27BB, r16
   167a4:	10 93 bc 27 	sts	0x27BC, r17
   167a8:	0e 94 de b2 	call	0x165bc	; 0x165bc <arb_createMemIntsOff>
   167ac:	05 c0       	rjmp	.+10     	; 0x167b8 <arb_malloc+0x5e>
   167ae:	c8 01       	movw	r24, r16
   167b0:	0e 94 99 ae 	call	0x15d32	; 0x15d32 <malloc>
   167b4:	88 83       	st	Y, r24
   167b6:	99 83       	std	Y+1, r25	; 0x01
   167b8:	df 91       	pop	r29
   167ba:	cf 91       	pop	r28
   167bc:	1f 91       	pop	r17
   167be:	0f 91       	pop	r16
   167c0:	08 95       	ret

000167c2 <__mulsi3>:
   167c2:	62 9f       	mul	r22, r18
   167c4:	d0 01       	movw	r26, r0
   167c6:	73 9f       	mul	r23, r19
   167c8:	f0 01       	movw	r30, r0
   167ca:	82 9f       	mul	r24, r18
   167cc:	e0 0d       	add	r30, r0
   167ce:	f1 1d       	adc	r31, r1
   167d0:	64 9f       	mul	r22, r20
   167d2:	e0 0d       	add	r30, r0
   167d4:	f1 1d       	adc	r31, r1
   167d6:	92 9f       	mul	r25, r18
   167d8:	f0 0d       	add	r31, r0
   167da:	83 9f       	mul	r24, r19
   167dc:	f0 0d       	add	r31, r0
   167de:	74 9f       	mul	r23, r20
   167e0:	f0 0d       	add	r31, r0
   167e2:	65 9f       	mul	r22, r21
   167e4:	f0 0d       	add	r31, r0
   167e6:	99 27       	eor	r25, r25
   167e8:	72 9f       	mul	r23, r18
   167ea:	b0 0d       	add	r27, r0
   167ec:	e1 1d       	adc	r30, r1
   167ee:	f9 1f       	adc	r31, r25
   167f0:	63 9f       	mul	r22, r19
   167f2:	b0 0d       	add	r27, r0
   167f4:	e1 1d       	adc	r30, r1
   167f6:	f9 1f       	adc	r31, r25
   167f8:	bd 01       	movw	r22, r26
   167fa:	cf 01       	movw	r24, r30
   167fc:	11 24       	eor	r1, r1
   167fe:	08 95       	ret

00016800 <__udivmodsi4>:
   16800:	a1 e2       	ldi	r26, 0x21	; 33
   16802:	1a 2e       	mov	r1, r26
   16804:	aa 1b       	sub	r26, r26
   16806:	bb 1b       	sub	r27, r27
   16808:	fd 01       	movw	r30, r26
   1680a:	0d c0       	rjmp	.+26     	; 0x16826 <__udivmodsi4_ep>

0001680c <__udivmodsi4_loop>:
   1680c:	aa 1f       	adc	r26, r26
   1680e:	bb 1f       	adc	r27, r27
   16810:	ee 1f       	adc	r30, r30
   16812:	ff 1f       	adc	r31, r31
   16814:	a2 17       	cp	r26, r18
   16816:	b3 07       	cpc	r27, r19
   16818:	e4 07       	cpc	r30, r20
   1681a:	f5 07       	cpc	r31, r21
   1681c:	20 f0       	brcs	.+8      	; 0x16826 <__udivmodsi4_ep>
   1681e:	a2 1b       	sub	r26, r18
   16820:	b3 0b       	sbc	r27, r19
   16822:	e4 0b       	sbc	r30, r20
   16824:	f5 0b       	sbc	r31, r21

00016826 <__udivmodsi4_ep>:
   16826:	66 1f       	adc	r22, r22
   16828:	77 1f       	adc	r23, r23
   1682a:	88 1f       	adc	r24, r24
   1682c:	99 1f       	adc	r25, r25
   1682e:	1a 94       	dec	r1
   16830:	69 f7       	brne	.-38     	; 0x1680c <__udivmodsi4_loop>
   16832:	60 95       	com	r22
   16834:	70 95       	com	r23
   16836:	80 95       	com	r24
   16838:	90 95       	com	r25
   1683a:	9b 01       	movw	r18, r22
   1683c:	ac 01       	movw	r20, r24
   1683e:	bd 01       	movw	r22, r26
   16840:	cf 01       	movw	r24, r30
   16842:	08 95       	ret

00016844 <__divmodsi4>:
   16844:	97 fb       	bst	r25, 7
   16846:	09 2e       	mov	r0, r25
   16848:	05 26       	eor	r0, r21
   1684a:	0e d0       	rcall	.+28     	; 0x16868 <__divmodsi4_neg1>
   1684c:	57 fd       	sbrc	r21, 7
   1684e:	04 d0       	rcall	.+8      	; 0x16858 <__divmodsi4_neg2>
   16850:	d7 df       	rcall	.-82     	; 0x16800 <__udivmodsi4>
   16852:	0a d0       	rcall	.+20     	; 0x16868 <__divmodsi4_neg1>
   16854:	00 1c       	adc	r0, r0
   16856:	38 f4       	brcc	.+14     	; 0x16866 <__divmodsi4_exit>

00016858 <__divmodsi4_neg2>:
   16858:	50 95       	com	r21
   1685a:	40 95       	com	r20
   1685c:	30 95       	com	r19
   1685e:	21 95       	neg	r18
   16860:	3f 4f       	sbci	r19, 0xFF	; 255
   16862:	4f 4f       	sbci	r20, 0xFF	; 255
   16864:	5f 4f       	sbci	r21, 0xFF	; 255

00016866 <__divmodsi4_exit>:
   16866:	08 95       	ret

00016868 <__divmodsi4_neg1>:
   16868:	f6 f7       	brtc	.-4      	; 0x16866 <__divmodsi4_exit>
   1686a:	90 95       	com	r25
   1686c:	80 95       	com	r24
   1686e:	70 95       	com	r23
   16870:	61 95       	neg	r22
   16872:	7f 4f       	sbci	r23, 0xFF	; 255
   16874:	8f 4f       	sbci	r24, 0xFF	; 255
   16876:	9f 4f       	sbci	r25, 0xFF	; 255
   16878:	08 95       	ret

0001687a <__tablejump2__>:
   1687a:	ee 0f       	add	r30, r30
   1687c:	ff 1f       	adc	r31, r31

0001687e <__tablejump__>:
   1687e:	05 90       	lpm	r0, Z+
   16880:	f4 91       	lpm	r31, Z+
   16882:	e0 2d       	mov	r30, r0
   16884:	19 94       	eijmp

00016886 <_exit>:
   16886:	f8 94       	cli

00016888 <__stop_program>:
   16888:	ff cf       	rjmp	.-2      	; 0x16888 <__stop_program>
