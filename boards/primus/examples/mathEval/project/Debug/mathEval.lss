
mathEval.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00016a5e  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000468  00802000  00016a5e  00016af2  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000386  00802468  00802468  00016f5a  2**0
                  ALLOC
  3 .stab         00005f7c  00000000  00000000  00016f5c  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      000019f3  00000000  00000000  0001ced8  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_aranges 00000388  00000000  00000000  0001e8d0  2**3
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00004670  00000000  00000000  0001ec58  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00001489  00000000  00000000  000232c8  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00002ae5  00000000  00000000  00024751  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000830  00000000  00000000  00027238  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00001b64  00000000  00000000  00027a68  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000656b  00000000  00000000  000295cc  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00001298  00000000  00000000  0002fb37  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 2b 07 	jmp	0xe56	; 0xe56 <__ctors_end>
       4:	0c 94 62 07 	jmp	0xec4	; 0xec4 <__bad_interrupt>
       8:	0c 94 35 26 	jmp	0x4c6a	; 0x4c6a <__vector_2>
       c:	0c 94 73 26 	jmp	0x4ce6	; 0x4ce6 <__vector_3>
      10:	0c 94 15 2a 	jmp	0x542a	; 0x542a <__vector_4>
      14:	0c 94 53 2a 	jmp	0x54a6	; 0x54a6 <__vector_5>
      18:	0c 94 1a 4a 	jmp	0x9434	; 0x9434 <__vector_6>
      1c:	0c 94 65 4a 	jmp	0x94ca	; 0x94ca <__vector_7>
      20:	0c 94 b0 4a 	jmp	0x9560	; 0x9560 <__vector_8>
      24:	0c 94 fb 4a 	jmp	0x95f6	; 0x95f6 <__vector_9>
      28:	0c 94 62 07 	jmp	0xec4	; 0xec4 <__bad_interrupt>
      2c:	0c 94 62 07 	jmp	0xec4	; 0xec4 <__bad_interrupt>
      30:	0c 94 62 07 	jmp	0xec4	; 0xec4 <__bad_interrupt>
      34:	0c 94 62 07 	jmp	0xec4	; 0xec4 <__bad_interrupt>
      38:	0c 94 42 52 	jmp	0xa484	; 0xa484 <__vector_14>
      3c:	0c 94 48 51 	jmp	0xa290	; 0xa290 <__vector_15>
      40:	0c 94 56 51 	jmp	0xa2ac	; 0xa2ac <__vector_16>
      44:	0c 94 91 51 	jmp	0xa322	; 0xa322 <__vector_17>
      48:	0c 94 cc 51 	jmp	0xa398	; 0xa398 <__vector_18>
      4c:	0c 94 07 52 	jmp	0xa40e	; 0xa40e <__vector_19>
      50:	0c 94 f3 52 	jmp	0xa5e6	; 0xa5e6 <__vector_20>
      54:	0c 94 62 07 	jmp	0xec4	; 0xec4 <__bad_interrupt>
      58:	0c 94 7d 52 	jmp	0xa4fa	; 0xa4fa <__vector_22>
      5c:	0c 94 b8 52 	jmp	0xa570	; 0xa570 <__vector_23>
      60:	0c 94 15 2f 	jmp	0x5e2a	; 0x5e2a <__vector_24>
      64:	0c 94 9c 3e 	jmp	0x7d38	; 0x7d38 <__vector_25>
      68:	0c 94 d2 3e 	jmp	0x7da4	; 0x7da4 <__vector_26>
      6c:	0c 94 62 07 	jmp	0xec4	; 0xec4 <__bad_interrupt>
      70:	0c 94 08 3f 	jmp	0x7e10	; 0x7e10 <__vector_28>
      74:	0c 94 3e 3f 	jmp	0x7e7c	; 0x7e7c <__vector_29>
      78:	0c 94 62 07 	jmp	0xec4	; 0xec4 <__bad_interrupt>
      7c:	0c 94 62 07 	jmp	0xec4	; 0xec4 <__bad_interrupt>
      80:	0c 94 62 07 	jmp	0xec4	; 0xec4 <__bad_interrupt>
      84:	0c 94 62 07 	jmp	0xec4	; 0xec4 <__bad_interrupt>
      88:	0c 94 b9 25 	jmp	0x4b72	; 0x4b72 <__vector_34>
      8c:	0c 94 f7 25 	jmp	0x4bee	; 0x4bee <__vector_35>
      90:	0c 94 62 07 	jmp	0xec4	; 0xec4 <__bad_interrupt>
      94:	0c 94 62 07 	jmp	0xec4	; 0xec4 <__bad_interrupt>
      98:	0c 94 62 07 	jmp	0xec4	; 0xec4 <__bad_interrupt>
      9c:	0c 94 62 07 	jmp	0xec4	; 0xec4 <__bad_interrupt>
      a0:	0c 94 62 07 	jmp	0xec4	; 0xec4 <__bad_interrupt>
      a4:	0c 94 62 07 	jmp	0xec4	; 0xec4 <__bad_interrupt>
      a8:	0c 94 62 07 	jmp	0xec4	; 0xec4 <__bad_interrupt>
      ac:	0c 94 2d 27 	jmp	0x4e5a	; 0x4e5a <__vector_43>
      b0:	0c 94 6b 27 	jmp	0x4ed6	; 0x4ed6 <__vector_44>
      b4:	0c 94 62 07 	jmp	0xec4	; 0xec4 <__bad_interrupt>
      b8:	0c 94 62 07 	jmp	0xec4	; 0xec4 <__bad_interrupt>
      bc:	0c 94 f2 55 	jmp	0xabe4	; 0xabe4 <__vector_47>
      c0:	0c 94 62 07 	jmp	0xec4	; 0xec4 <__bad_interrupt>
      c4:	0c 94 06 55 	jmp	0xaa0c	; 0xaa0c <__vector_49>
      c8:	0c 94 41 55 	jmp	0xaa82	; 0xaa82 <__vector_50>
      cc:	0c 94 7c 55 	jmp	0xaaf8	; 0xaaf8 <__vector_51>
      d0:	0c 94 b7 55 	jmp	0xab6e	; 0xab6e <__vector_52>
      d4:	0c 94 a3 56 	jmp	0xad46	; 0xad46 <__vector_53>
      d8:	0c 94 62 07 	jmp	0xec4	; 0xec4 <__bad_interrupt>
      dc:	0c 94 2d 56 	jmp	0xac5a	; 0xac5a <__vector_55>
      e0:	0c 94 68 56 	jmp	0xacd0	; 0xacd0 <__vector_56>
      e4:	0c 94 85 2f 	jmp	0x5f0a	; 0x5f0a <__vector_57>
      e8:	0c 94 4c 40 	jmp	0x8098	; 0x8098 <__vector_58>
      ec:	0c 94 82 40 	jmp	0x8104	; 0x8104 <__vector_59>
      f0:	0c 94 62 07 	jmp	0xec4	; 0xec4 <__bad_interrupt>
      f4:	0c 94 b8 40 	jmp	0x8170	; 0x8170 <__vector_61>
      f8:	0c 94 ee 40 	jmp	0x81dc	; 0x81dc <__vector_62>
      fc:	0c 94 62 07 	jmp	0xec4	; 0xec4 <__bad_interrupt>
     100:	0c 94 b1 26 	jmp	0x4d62	; 0x4d62 <__vector_64>
     104:	0c 94 ef 26 	jmp	0x4dde	; 0x4dde <__vector_65>
     108:	0c 94 3d 25 	jmp	0x4a7a	; 0x4a7a <__vector_66>
     10c:	0c 94 7b 25 	jmp	0x4af6	; 0x4af6 <__vector_67>
     110:	0c 94 62 07 	jmp	0xec4	; 0xec4 <__bad_interrupt>
     114:	0c 94 62 07 	jmp	0xec4	; 0xec4 <__bad_interrupt>
     118:	0c 94 62 07 	jmp	0xec4	; 0xec4 <__bad_interrupt>
     11c:	0c 94 62 07 	jmp	0xec4	; 0xec4 <__bad_interrupt>
     120:	0c 94 62 07 	jmp	0xec4	; 0xec4 <__bad_interrupt>
     124:	0c 94 62 07 	jmp	0xec4	; 0xec4 <__bad_interrupt>
     128:	0c 94 62 07 	jmp	0xec4	; 0xec4 <__bad_interrupt>
     12c:	0c 94 62 07 	jmp	0xec4	; 0xec4 <__bad_interrupt>
     130:	0c 94 62 07 	jmp	0xec4	; 0xec4 <__bad_interrupt>
     134:	0c 94 1a 54 	jmp	0xa834	; 0xa834 <__vector_77>
     138:	0c 94 62 07 	jmp	0xec4	; 0xec4 <__bad_interrupt>
     13c:	0c 94 2e 53 	jmp	0xa65c	; 0xa65c <__vector_79>
     140:	0c 94 69 53 	jmp	0xa6d2	; 0xa6d2 <__vector_80>
     144:	0c 94 a4 53 	jmp	0xa748	; 0xa748 <__vector_81>
     148:	0c 94 df 53 	jmp	0xa7be	; 0xa7be <__vector_82>
     14c:	0c 94 cb 54 	jmp	0xa996	; 0xa996 <__vector_83>
     150:	0c 94 62 07 	jmp	0xec4	; 0xec4 <__bad_interrupt>
     154:	0c 94 55 54 	jmp	0xa8aa	; 0xa8aa <__vector_85>
     158:	0c 94 90 54 	jmp	0xa920	; 0xa920 <__vector_86>
     15c:	0c 94 4d 2f 	jmp	0x5e9a	; 0x5e9a <__vector_87>
     160:	0c 94 74 3f 	jmp	0x7ee8	; 0x7ee8 <__vector_88>
     164:	0c 94 aa 3f 	jmp	0x7f54	; 0x7f54 <__vector_89>
     168:	0c 94 62 07 	jmp	0xec4	; 0xec4 <__bad_interrupt>
     16c:	0c 94 e0 3f 	jmp	0x7fc0	; 0x7fc0 <__vector_91>
     170:	0c 94 16 40 	jmp	0x802c	; 0x802c <__vector_92>
     174:	0c 94 62 07 	jmp	0xec4	; 0xec4 <__bad_interrupt>
     178:	0c 94 99 29 	jmp	0x5332	; 0x5332 <__vector_94>
     17c:	0c 94 d7 29 	jmp	0x53ae	; 0x53ae <__vector_95>
     180:	0c 94 25 28 	jmp	0x504a	; 0x504a <__vector_96>
     184:	0c 94 63 28 	jmp	0x50c6	; 0x50c6 <__vector_97>
     188:	0c 94 a1 28 	jmp	0x5142	; 0x5142 <__vector_98>
     18c:	0c 94 df 28 	jmp	0x51be	; 0x51be <__vector_99>
     190:	0c 94 1d 29 	jmp	0x523a	; 0x523a <__vector_100>
     194:	0c 94 5b 29 	jmp	0x52b6	; 0x52b6 <__vector_101>
     198:	0c 94 62 07 	jmp	0xec4	; 0xec4 <__bad_interrupt>
     19c:	0c 94 62 07 	jmp	0xec4	; 0xec4 <__bad_interrupt>
     1a0:	0c 94 a9 27 	jmp	0x4f52	; 0x4f52 <__vector_104>
     1a4:	0c 94 e7 27 	jmp	0x4fce	; 0x4fce <__vector_105>
     1a8:	0c 94 62 07 	jmp	0xec4	; 0xec4 <__bad_interrupt>
     1ac:	0c 94 62 07 	jmp	0xec4	; 0xec4 <__bad_interrupt>
     1b0:	0c 94 ca 57 	jmp	0xaf94	; 0xaf94 <__vector_108>
     1b4:	0c 94 62 07 	jmp	0xec4	; 0xec4 <__bad_interrupt>
     1b8:	0c 94 de 56 	jmp	0xadbc	; 0xadbc <__vector_110>
     1bc:	0c 94 19 57 	jmp	0xae32	; 0xae32 <__vector_111>
     1c0:	0c 94 54 57 	jmp	0xaea8	; 0xaea8 <__vector_112>
     1c4:	0c 94 8f 57 	jmp	0xaf1e	; 0xaf1e <__vector_113>
     1c8:	0c 94 7b 58 	jmp	0xb0f6	; 0xb0f6 <__vector_114>
     1cc:	0c 94 62 07 	jmp	0xec4	; 0xec4 <__bad_interrupt>
     1d0:	0c 94 05 58 	jmp	0xb00a	; 0xb00a <__vector_116>
     1d4:	0c 94 40 58 	jmp	0xb080	; 0xb080 <__vector_117>
     1d8:	0c 94 bd 2f 	jmp	0x5f7a	; 0x5f7a <__vector_118>
     1dc:	0c 94 24 41 	jmp	0x8248	; 0x8248 <__vector_119>
     1e0:	0c 94 5a 41 	jmp	0x82b4	; 0x82b4 <__vector_120>
     1e4:	0c 94 62 07 	jmp	0xec4	; 0xec4 <__bad_interrupt>
     1e8:	0c 94 90 41 	jmp	0x8320	; 0x8320 <__vector_122>
     1ec:	0c 94 c6 41 	jmp	0x838c	; 0x838c <__vector_123>
     1f0:	0c 94 62 07 	jmp	0xec4	; 0xec4 <__bad_interrupt>
     1f4:	ba 2b       	or	r27, r26
     1f6:	bf 2b       	or	r27, r31
     1f8:	c4 2b       	or	r28, r20
     1fa:	cc 2b       	or	r28, r28
     1fc:	d1 2b       	or	r29, r17
     1fe:	d6 2b       	or	r29, r22
     200:	db 2b       	or	r29, r27
     202:	e0 2b       	or	r30, r16
     204:	e5 2b       	or	r30, r21
     206:	ea 2b       	or	r30, r26
     208:	ef 2b       	or	r30, r31
     20a:	f4 2b       	or	r31, r20
     20c:	f9 2b       	or	r31, r25
     20e:	fe 2b       	or	r31, r30
     210:	03 2c       	mov	r0, r3
     212:	08 2c       	mov	r0, r8
     214:	0d 2c       	mov	r0, r13
     216:	12 2c       	mov	r1, r2
     218:	17 2c       	mov	r1, r7
     21a:	1c 2c       	mov	r1, r12
     21c:	21 2c       	mov	r2, r1
     21e:	26 2c       	mov	r2, r6
     220:	08 4a       	sbci	r16, 0xA8	; 168
     222:	d7 3b       	cpi	r29, 0xB7	; 183
     224:	3b ce       	rjmp	.-906    	; 0xfffffe9c <__eeprom_end+0xff7efe9c>
     226:	01 6e       	ori	r16, 0xE1	; 225
     228:	84 bc       	out	0x24, r8	; 36
     22a:	bf fd       	.word	0xfdbf	; ????
     22c:	c1 2f       	mov	r28, r17
     22e:	3d 6c       	ori	r19, 0xCD	; 205
     230:	74 31       	cpi	r23, 0x14	; 20
     232:	9a bd       	out	0x2a, r25	; 42
     234:	56 83       	std	Z+6, r21	; 0x06
     236:	3d da       	rcall	.-2950   	; 0xfffff6b2 <__eeprom_end+0xff7ef6b2>
     238:	3d 00       	.word	0x003d	; ????
     23a:	c7 7f       	andi	r28, 0xF7	; 247
     23c:	11 be       	out	0x31, r1	; 49
     23e:	d9 e4       	ldi	r29, 0x49	; 73
     240:	bb 4c       	sbci	r27, 0xCB	; 203
     242:	3e 91       	ld	r19, -X
     244:	6b aa       	sts	0x9b, r22
     246:	aa be       	out	0x3a, r10	; 58
     248:	00 00       	nop
     24a:	00 80       	ld	r0, Z
     24c:	3f 05       	cpc	r19, r15
     24e:	a8 4c       	sbci	r26, 0xC8	; 200
     250:	cd b2       	in	r12, 0x1d	; 29
     252:	d4 4e       	sbci	r29, 0xE4	; 228
     254:	b9 38       	cpi	r27, 0x89	; 137
     256:	36 a9       	sts	0x46, r19
     258:	02 0c       	add	r0, r2
     25a:	50 b9       	out	0x00, r21	; 0
     25c:	91 86       	std	Z+9, r9	; 0x09
     25e:	88 08       	sbc	r8, r8
     260:	3c a6       	lds	r19, 0xbc
     262:	aa aa       	sts	0x9a, r26
     264:	2a be       	out	0x3a, r2	; 58
     266:	00 00       	nop
     268:	00 80       	ld	r0, Z
     26a:	3f 1b       	sub	r19, r31

0000026b <__c.4344>:
     26b:	1b 63 00                                            .c.

0000026e <__c.4380>:
     26e:	2e 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d     .---------------
     27e:	2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d     ----------------
     28e:	2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d     ----------------
     29e:	2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d     ----------------
     2ae:	2d 2d 2d 2d 2d 2d 2d 2d 2d 2e 0a 0d 00              ---------....

000002bb <__c.4382>:
     2bb:	7c 20 43 6f 6d 6d 61 6e 64 20 7c 20 20 20 20 20     | Command |     
     2cb:	41 72 67 75 6d 65 6e 74 73 20 20 20 20 20 7c 20     Arguments     | 
     2db:	20 20 20 20 20 20 20 20 20 20 20 20 20 44 65 73                  Des
     2eb:	63 72 69 70 74 69 6f 6e 20 20 20 20 20 20 20 20     cription        
     2fb:	20 20 20 20 20 20 20 20 20 7c 0a 0d 00                       |...

00000308 <__c.4384>:
     308:	7c 2d 2d 2d 2d 2d 2d 2d 2d 2d 7c 2d 2d 2d 2d 2d     |---------|-----
     318:	2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 7c 2d     --------------|-
     328:	2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d     ----------------
     338:	2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d     ----------------
     348:	2d 2d 2d 2d 2d 2d 2d 2d 2d 7c 0a 0d 00              ---------|...

00000355 <__c.4985>:
     355:	49 6e 76 61 6c 69 64 20 43 4d 44 0a 0d 00           Invalid CMD...

00000363 <__c.4983>:
     363:	68 65 61 64 00                                      head.

00000368 <__c.4981>:
     368:	2f 00                                               /.

0000036a <__c.4978>:
     36a:	63 64 00                                            cd.

0000036d <__c.4976>:
     36d:	6d 6b 64 69 72 00                                   mkdir.

00000373 <__c.4974>:
     373:	72 6d 64 69 72 00                                   rmdir.

00000379 <__c.4972>:
     379:	2d 72 00                                            -r.

0000037c <__c.4970>:
     37c:	72 6d 00                                            rm.

0000037f <__c.4968>:
     37f:	6c 73 00                                            ls.

00000382 <__c.4966>:
     382:	74 6f 70 00                                         top.

00000386 <__c.4964>:
     386:	64 65 76 00                                         dev.

0000038a <__c.4962>:
     38a:	73 64 6c 00                                         sdl.

0000038e <__c.4960>:
     38e:	68 65 6c 70 00                                      help.

00000393 <__c.4955>:
     393:	73 63 74 00                                         sct.

00000397 <__c.4953>:
     397:	49 6e 76 61 6c 69 64 20 6e 75 6d 62 65 72 20 6f     Invalid number o
     3a7:	66 20 74 6f 6b 65 6e 73 0a 0d 00                    f tokens...

000003b2 <__c.4951>:
     3b2:	49 6e 76 61 6c 69 64 20 74 6f 6b 65 6e 20 73 69     Invalid token si
     3c2:	7a 65 0a 0d 00                                      ze...

000003c7 <__c.4722>:
     3c7:	27 2d 2d 2d 2d 2d 2d 2d 2d 2d 27 2d 2d 2d 2d 2d     '---------'-----
     3d7:	2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 27 2d     --------------'-
     3e7:	2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d     ----------------
     3f7:	2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d     ----------------
     407:	2d 2d 2d 2d 2d 2d 2d 2d 2d 27 0a 0d 00              ---------'...

00000414 <__c.4720>:
     414:	7c 20 68 65 61 64 20 20 20 20 7c 20 3c 61 72 67     | head    | <arg
     424:	31 3e 20 20 20 20 20 20 20 20 20 20 20 20 7c 20     1>            | 
     434:	50 72 69 6e 74 73 20 61 20 66 69 6c 65 20 3c 61     Prints a file <a
     444:	72 67 31 3e 20 74 6f 20 74 68 65 20 74 65 72 6d     rg1> to the term
     454:	69 6e 61 6c 2e 20 20 20 20 7c 0a 0d 00              inal.    |...

00000461 <__c.4718>:
     461:	7c 20 74 6f 75 63 68 20 20 20 7c 20 3c 61 72 67     | touch   | <arg
     471:	31 3e 20 20 20 20 20 20 20 20 20 20 20 20 7c 20     1>            | 
     481:	43 72 65 61 74 65 20 66 69 6c 65 20 3c 61 72 67     Create file <arg
     491:	31 3e 2e 20 20 20 20 20 20 20 20 20 20 20 20 20     1>.             
     4a1:	20 20 20 20 20 20 20 20 20 7c 0a 0d 00                       |...

000004ae <__c.4716>:
     4ae:	7c 20 6d 6b 64 69 72 20 20 20 7c 20 3c 61 72 67     | mkdir   | <arg
     4be:	31 3e 20 20 20 20 20 20 20 20 20 20 20 20 7c 20     1>            | 
     4ce:	43 72 65 61 74 65 20 61 20 64 69 72 65 63 74 6f     Create a directo
     4de:	72 79 20 3c 61 72 67 31 3e 2e 20 20 20 20 20 20     ry <arg1>.      
     4ee:	20 20 20 20 20 20 20 20 20 7c 0a 0d 00                       |...

000004fb <__c.4714>:
     4fb:	7c 20 72 6d 64 69 72 20 20 20 7c 20 3c 61 72 67     | rmdir   | <arg
     50b:	31 3e 20 20 20 20 20 20 20 20 20 20 20 20 7c 20     1>            | 
     51b:	52 65 6d 6f 76 65 20 61 20 64 69 72 65 63 74 6f     Remove a directo
     52b:	72 79 2e 20 20 20 20 20 20 20 20 20 20 20 20 20     ry.             
     53b:	20 20 20 20 20 20 20 20 20 7c 0a 0d 00                       |...

00000548 <__c.4712>:
     548:	7c 20 72 6d 20 20 20 20 20 20 7c 20 3c 61 72 67     | rm      | <arg
     558:	31 3e 20 20 20 20 20 20 20 20 20 20 20 20 7c 20     1>            | 
     568:	52 65 6d 6f 76 65 20 61 20 66 69 6c 65 20 3c 61     Remove a file <a
     578:	72 67 31 3e 2e 20 20 20 20 20 20 20 20 20 20 20     rg1>.           
     588:	20 20 20 20 20 20 20 20 20 7c 0a 0d 00                       |...

00000595 <__c.4710>:
     595:	7c 20 63 64 20 20 20 20 20 20 7c 20 3c 61 72 67     | cd      | <arg
     5a5:	31 3e 20 20 20 20 20 20 20 20 20 20 20 20 7c 20     1>            | 
     5b5:	43 68 61 6e 67 65 20 74 6f 20 64 69 72 20 3c 61     Change to dir <a
     5c5:	72 67 31 3e 2e 20 20 20 20 20 20 20 20 20 20 20     rg1>.           
     5d5:	20 20 20 20 20 20 20 20 20 7c 0a 0d 00                       |...

000005e2 <__c.4708>:
     5e2:	7c 20 6c 73 20 20 20 20 20 20 7c 20 3c 61 72 67     | ls      | <arg
     5f2:	31 3e 20 20 20 20 20 20 20 20 20 20 20 20 7c 20     1>            | 
     602:	44 69 73 70 6c 61 79 73 20 74 68 65 20 63 6f 6e     Displays the con
     612:	74 65 6e 74 73 20 6f 66 20 64 69 72 20 3c 61 72     tents of dir <ar
     622:	67 31 3e 2e 20 20 20 20 20 7c 0a 0d 00              g1>.     |...

0000062f <__c.4706>:
     62f:	7c 20 74 6f 70 20 20 20 20 20 7c 20 20 20 20 20     | top     |     
     63f:	20 20 20 20 20 20 20 20 20 20 20 20 20 20 7c 20                   | 
     64f:	44 69 73 70 6c 61 79 73 20 73 79 73 74 65 6d 20     Displays system 
     65f:	73 74 61 74 69 73 74 69 63 73 2e 20 20 20 20 20     statistics.     
     66f:	20 20 20 20 20 20 20 20 20 7c 0a 0d 00                       |...

0000067c <__c.4704>:
     67c:	7c 20 64 65 76 20 20 20 20 20 7c 20 20 20 20 20     | dev     |     
     68c:	20 20 20 20 20 20 20 20 20 20 20 20 20 20 7c 20                   | 
     69c:	52 65 74 75 72 6e 73 20 61 20 6c 69 73 74 20 6f     Returns a list o
     6ac:	66 20 61 63 74 69 76 65 20 64 72 69 76 65 72 73     f active drivers
     6bc:	2e 20 20 20 20 20 20 20 20 7c 0a 0d 00              .        |...

000006c9 <__c.4702>:
     6c9:	7c 20 20 20 20 20 20 20 20 20 7c 20 20 20 20 20     |         |     
     6d9:	20 20 20 20 20 20 20 20 20 20 20 20 20 20 7c 20                   | 
     6e9:	30 2c 31 2c 32 20 28 6c 6f 77 2c 20 6d 65 64 2c     0,1,2 (low, med,
     6f9:	20 68 69 67 68 29 20 20 20 20 20 20 20 20 20 20      high)          
     709:	20 20 20 20 20 20 20 20 20 7c 0a 0d 00                       |...

00000716 <__c.4700>:
     716:	7c 20 73 64 6c 20 20 20 20 20 7c 20 3c 61 72 67     | sdl     | <arg
     726:	31 3e 20 20 20 20 20 20 20 20 20 20 20 20 7c 20     1>            | 
     736:	53 65 74 20 74 68 65 20 64 65 62 75 67 20 6c 65     Set the debug le
     746:	76 65 6c 2c 20 77 68 65 72 65 20 3c 61 72 67 31     vel, where <arg1
     756:	3e 20 3d 20 20 20 20 20 20 7c 0a 0d 00              > =      |...

00000763 <__c.4698>:
     763:	7c 2d 2d 2d 2d 2d 2d 2d 2d 2d 7c 2d 2d 2d 2d 2d     |---------|-----
     773:	2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 7c 2d     --------------|-
     783:	2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d     ----------------
     793:	2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d     ----------------
     7a3:	2d 2d 2d 2d 2d 2d 2d 2d 2d 7c 0a 0d 00              ---------|...

000007b0 <__c.4696>:
     7b0:	7c 20 43 6f 6d 6d 61 6e 64 20 7c 20 20 20 20 20     | Command |     
     7c0:	41 72 67 75 6d 65 6e 74 73 20 20 20 20 20 7c 20     Arguments     | 
     7d0:	20 20 20 20 20 20 20 20 20 20 20 20 20 44 65 73                  Des
     7e0:	63 72 69 70 74 69 6f 6e 20 20 20 20 20 20 20 20     cription        
     7f0:	20 20 20 20 20 20 20 20 20 7c 0a 0d 00                       |...

000007fd <__c.4694>:
     7fd:	2e 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d     .---------------
     80d:	2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d     ----------------
     81d:	2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d     ----------------
     82d:	2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d     ----------------
     83d:	2d 2d 2d 2d 2d 2d 2d 2d 2d 2e 0a 0d 00              ---------....

0000084a <__c.4764>:
     84a:	54 68 65 20 27 45 6e 74 65 72 27 20 62 75 74 74     The 'Enter' butt
     85a:	6f 6e 20 77 69 6c 6c 20 65 6e 61 62 6c 65 2f 64     on will enable/d
     86a:	69 73 61 62 6c 65 20 61 20 64 65 62 75 67 67 69     isable a debuggi
     87a:	6e 67 20 73 65 73 73 69 6f 6e 2e 20 50 72 65 73     ng session. Pres
     88a:	73 20 27 45 6e 74 65 72 27 20 74 6f 20 62 65 67     s 'Enter' to beg
     89a:	69 6e 2e 2e 2e 0a 0d 00                             in......

000008a2 <__c.4762>:
     8a2:	49 6e 76 61 6c 69 64 20 4c 65 76 65 6c 0a 0d 00     Invalid Level...

000008b2 <__c.4797>:
     8b2:	27 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d     '---------------
     8c2:	2d 2d 27 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d     --'-------------
     8d2:	2d 27 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 27     -'-------------'
     8e2:	2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 27 0a     --------------'.
     8f2:	0d 00                                               ..

000008f4 <__c.4792>:
     8f4:	7c 20 25 31 36 73 7c 20 25 32 64 20 20 20 20 20     | %16s| %2d     
     904:	20 20 20 20 20 20 7c 20 25 32 64 20 20 20 20 20           | %2d     
     914:	20 20 20 20 20 7c 20 25 32 64 20 20 20 20 20 20          | %2d      
     924:	20 20 20 20 20 7c 0a 0d 00                               |...

0000092d <__c.4790>:
     92d:	7c 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d     |---------------
     93d:	2d 2d 7c 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d     --|-------------
     94d:	2d 7c 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 7c     -|-------------|
     95d:	2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 7c 0a     --------------|.
     96d:	0d 00                                               ..

0000096f <__c.4788>:
     96f:	7c 20 20 20 44 72 69 76 65 72 20 4e 61 6d 65 20     |   Driver Name 
     97f:	20 20 7c 20 4d 61 6a 6f 72 20 4e 75 6d 62 65 72       | Major Number
     98f:	20 7c 20 4d 69 6e 6f 72 20 4e 75 6d 62 65 72 7c      | Minor Number|
     99f:	20 23 20 6f 66 20 48 61 6e 64 6c 65 73 20 7c 0a      # of Handles |.
     9af:	0d 00                                               ..

000009b1 <__c.4786>:
     9b1:	2e 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d     .---------------
     9c1:	2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d     ----------------
     9d1:	2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d     ----------------
     9e1:	2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2e 0a     --------------..
     9f1:	0d 00                                               ..

000009f3 <__c.4881>:
     9f3:	27 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d     '---------------
     a03:	2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 27 2d 2d 2d 2d 2d     ----------'-----
     a13:	2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 27 0a 0d 00           ----------'...

00000a21 <__c.4879>:
     a21:	7c 53 79 73 20 4c 6f 61 64 20 61 66 74 65 72 20     |Sys Load after 
     a31:	35 20 6d 69 6e 75 74 65 73 20 7c 20 25 31 32 2e     5 minutes | %12.
     a41:	31 66 25 25 20 7c 0a 0d 00                          1f%% |...

00000a4a <__c.4877>:
     a4a:	27 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d     '---------------
     a5a:	2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 27 2d 2d 2d 2d 2d     ----------'-----
     a6a:	2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 27 0a 0d 00           ----------'...

00000a78 <__c.4875>:
     a78:	7c 53 79 73 20 4c 6f 61 64 20 61 66 74 65 72 20     |Sys Load after 
     a88:	31 20 6d 69 6e 75 74 65 20 20 7c 20 25 31 32 2e     1 minute  | %12.
     a98:	31 66 25 25 20 7c 0a 0d 00                          1f%% |...

00000aa1 <__c.4873>:
     aa1:	27 2d 2d 2d 2d 2d 2d 2d 2d 2d 27 2d 2d 2d 2d 2d     '---------'-----
     ab1:	2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 27 2d 2d 2d 2d 2d     ----------'-----
     ac1:	2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 27 0a 0d 00           ----------'...

00000acf <__c.4871>:
     acf:	7c 20 20 20 20 20 20 20 20 20 7c 20 20 20 20 20     |         |     
     adf:	20 20 20 20 20 20 20 20 20 20 7c 20 25 31 32 64               | %12d
     aef:	25 25 20 7c 0a 0d 00                                %% |...

00000af6 <__c.4869>:
     af6:	7c 46 72 65 65 20 52 41 4d 20 7c 20 20 20 20 20     |Free RAM |     
     b06:	20 20 20 20 20 20 20 20 20 20 7c 20 25 31 33 64               | %13d
     b16:	20 7c 0a 0d 00                                       |...

00000b1b <__c.4867>:
     b1b:	27 2d 2d 2d 2d 2d 2d 2d 2d 2d 27 2d 2d 2d 2d 2d     '---------'-----
     b2b:	2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 27 2d 2d 2d 2d 2d     ----------'-----
     b3b:	2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 27 0a 0d 00           ----------'...

00000b49 <__c.4865>:
     b49:	7c 20 20 20 20 20 20 20 20 20 7c 20 20 20 20 20     |         |     
     b59:	20 20 20 20 20 20 20 20 20 20 7c 20 25 31 32 64               | %12d
     b69:	25 25 20 7c 0a 0d 00                                %% |...

00000b70 <__c.4863>:
     b70:	7c 55 73 65 64 20 52 41 4d 20 7c 20 20 20 20 20     |Used RAM |     
     b80:	20 20 20 20 20 20 20 20 20 20 7c 20 25 31 33 64               | %13d
     b90:	20 7c 0a 0d 00                                       |...

00000b95 <__c.4861>:
     b95:	27 2d 2d 2d 2d 2d 2d 2d 2d 2d 27 2d 2d 2d 2d 2d     '---------'-----
     ba5:	2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 27 2d 2d 2d 2d 2d     ----------'-----
     bb5:	2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 27 0a 0d 00           ----------'...

00000bc3 <__c.4859>:
     bc3:	7c 20 20 20 2e 68 65 61 70 20 7c 20 20 20 20 20     |   .heap |     
     bd3:	20 20 20 30 78 25 78 20 7c 20 25 31 33 64 20 7c        0x%x | %13d |
     be3:	0a 0d 00                                            ...

00000be6 <__c.4857>:
     be6:	7c 20 20 20 20 2e 62 73 73 20 7c 20 20 20 20 20     |    .bss |     
     bf6:	20 20 20 30 78 25 78 20 7c 20 25 31 33 64 20 7c        0x%x | %13d |
     c06:	0a 0d 00                                            ...

00000c09 <__c.4855>:
     c09:	7c 20 20 20 2e 64 61 74 61 20 7c 20 20 20 20 20     |   .data |     
     c19:	20 20 20 30 78 25 78 20 7c 20 25 31 33 64 20 7c        0x%x | %13d |
     c29:	0a 0d 00                                            ...

00000c2c <__c.4853>:
     c2c:	7c 2d 2d 2d 2d 2d 2d 2d 2d 2d 7c 2d 2d 2d 2d 2d     |---------|-----
     c3c:	2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 7c 2d 2d 2d 2d 2d     ----------|-----
     c4c:	2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 7c 0a 0d 00           ----------|...

00000c5a <__c.4851>:
     c5a:	7c 20 53 65 63 74 69 6f 6e 20 7c 20 20 20 20 41     | Section |    A
     c6a:	64 64 72 65 73 73 20 20 20 20 7c 20 20 20 53 69     ddress    |   Si
     c7a:	7a 65 20 42 79 74 65 73 20 20 7c 0a 0d 00           ze Bytes  |...

00000c88 <__c.4849>:
     c88:	2e 2d 2d 2d 2d 2d 2d 2d 2d 2d 2e 2d 2d 2d 2d 2d     .---------.-----
     c98:	2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2e 2d 2d 2d 2d 2d     ----------.-----
     ca8:	2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2e 0a 0d 00           ----------....

00000cb6 <__c.4650>:
     cb6:	0d 0a 50 72 65 73 73 20 27 45 6e 74 65 72 27 20     ..Press 'Enter' 
     cc6:	74 6f 20 72 65 73 75 6d 65 2c 20 27 71 27 20 74     to resume, 'q' t
     cd6:	6f 20 73 74 6f 70 2e 0a 0d 00                       o stop....

00000ce0 <__c.4691>:
     ce0:	25 33 64 5d 20 20 00                                %3d]  .

00000ce7 <__c.4689>:
     ce7:	25 30 33 64 5d 20 20 00                             %03d]  .

00000cef <__c.4687>:
     cef:	25 30 30 33 64 5d 20 20 00                          %003d]  .

00000cf8 <__c.4685>:
     cf8:	25 32 64 3a 00                                      %2d:.

00000cfd <__c.4683>:
     cfd:	25 30 32 64 3a 00                                   %02d:.

00000d03 <__c.4681>:
     d03:	25 32 64 3a 00                                      %2d:.

00000d08 <__c.4679>:
     d08:	25 30 32 64 3a 00                                   %02d:.

00000d0e <__c.4677>:
     d0e:	5b 25 32 64 3a 00                                   [%2d:.

00000d14 <__c.4675>:
     d14:	5b 25 30 32 64 3a 00                                [%02d:.

00000d1b <__c.3937>:
     d1b:	61 72 62 5f 73 79 73 54 69 6d 65 72 53 74 61 72     arb_sysTimerStar
     d2b:	74 20 66 61 69 6c 65 64 20 77 69 74 68 20 25 64     t failed with %d
     d3b:	2e 0a 0d 00                                         ....

00000d3f <_ZZN10SdBaseFile10make83NameEPKcPhPS1_E3__c>:
     d3f:	7c 3c 3e 5e 2b 3d 3f 2f 5b 5d 3b 2c 2a 22 5c 00     |<>^+=?/[];,*"\.

00000d4f <__c.1905>:
     d4f:	6e 61 6e 00                                         nan.

00000d53 <__c.1903>:
     d53:	69 6e 66 00 00 40 7a 10 f3 5a 00 a0 72 4e 18 09     inf..@z..Z..rN..
     d63:	00 10 a5 d4 e8 00 00 e8 76 48 17 00 00 e4 0b 54     ........vH.....T
     d73:	02 00 00 ca 9a 3b 00 00 00 e1 f5 05 00 00 80 96     .....;..........
     d83:	98 00 00 00 40 42 0f 00 00 00 a0 86 01 00 00 00     ....@B..........
     d93:	10 27 00 00 00 00 e8 03 00 00 00 00 64 00 00 00     .'..........d...
     da3:	00 00 0a 00 00 00 00 00 01 00 00 00 00 00 2c 76     ..............,v
     db3:	d8 88 dc 67 4f 08 23 df c1 df ae 59 e1 b1 b7 96     ...gO.#....Y....
     dc3:	e5 e3 e4 53 c6 3a e6 51 99 76 96 e8 e6 c2 84 26     ...S.:.Q.v.....&
     dd3:	eb 89 8c 9b 62 ed 40 7c 6f fc ef bc 9c 9f 40 f2     ....b.@|o.....@.
     de3:	ba a5 6f a5 f4 90 05 5a 2a f7 5c 93 6b 6c f9 67     ..o....Z*.\.kl.g
     df3:	6d c1 1b fc e0 e4 0d 47 fe f5 20 e6 b5 00 d0 ed     m......G.. .....
     e03:	90 2e 03 00 94 35 77 05 00 80 84 1e 08 00 00 20     .....5w........ 
     e13:	4e 0a 00 00 00 c8 0c 33 33 33 33 0f 98 6e 12 83     N......3333..n..
     e23:	11 41 ef 8d 21 14 89 3b e6 55 16 cf fe e6 db 18     .A..!..;.U......
     e33:	d1 84 4b 38 1b f7 7c 1d 90 1d a4 bb e4 24 20 32     ..K8..|......$ 2
     e43:	84 72 5e 22 81 00 c9 f1 24 ec a1 e5 3d 27 00        .r^"....$...='.

00000e52 <__ctors_start>:
     e52:	38 8f       	std	Y+24, r19	; 0x18
     e54:	0f a8       	sts	0x8f, r16

00000e56 <__ctors_end>:
     e56:	11 24       	eor	r1, r1
     e58:	1f be       	out	0x3f, r1	; 63
     e5a:	cf ef       	ldi	r28, 0xFF	; 255
     e5c:	df e3       	ldi	r29, 0x3F	; 63
     e5e:	de bf       	out	0x3e, r29	; 62
     e60:	cd bf       	out	0x3d, r28	; 61
     e62:	00 e0       	ldi	r16, 0x00	; 0
     e64:	0c bf       	out	0x3c, r16	; 60
     e66:	18 be       	out	0x38, r1	; 56
     e68:	19 be       	out	0x39, r1	; 57
     e6a:	1a be       	out	0x3a, r1	; 58
     e6c:	1b be       	out	0x3b, r1	; 59

00000e6e <__do_copy_data>:
     e6e:	14 e2       	ldi	r17, 0x24	; 36
     e70:	a0 e0       	ldi	r26, 0x00	; 0
     e72:	b0 e2       	ldi	r27, 0x20	; 32
     e74:	ee e5       	ldi	r30, 0x5E	; 94
     e76:	fa e6       	ldi	r31, 0x6A	; 106
     e78:	01 e0       	ldi	r16, 0x01	; 1
     e7a:	0b bf       	out	0x3b, r16	; 59
     e7c:	02 c0       	rjmp	.+4      	; 0xe82 <__do_copy_data+0x14>
     e7e:	07 90       	elpm	r0, Z+
     e80:	0d 92       	st	X+, r0
     e82:	a8 36       	cpi	r26, 0x68	; 104
     e84:	b1 07       	cpc	r27, r17
     e86:	d9 f7       	brne	.-10     	; 0xe7e <__do_copy_data+0x10>
     e88:	1b be       	out	0x3b, r1	; 59

00000e8a <__do_clear_bss>:
     e8a:	17 e2       	ldi	r17, 0x27	; 39
     e8c:	a8 e6       	ldi	r26, 0x68	; 104
     e8e:	b4 e2       	ldi	r27, 0x24	; 36
     e90:	01 c0       	rjmp	.+2      	; 0xe94 <.do_clear_bss_start>

00000e92 <.do_clear_bss_loop>:
     e92:	1d 92       	st	X+, r1

00000e94 <.do_clear_bss_start>:
     e94:	ae 3e       	cpi	r26, 0xEE	; 238
     e96:	b1 07       	cpc	r27, r17
     e98:	e1 f7       	brne	.-8      	; 0xe92 <.do_clear_bss_loop>

00000e9a <__do_global_ctors>:
     e9a:	1e e0       	ldi	r17, 0x0E	; 14
     e9c:	c6 e5       	ldi	r28, 0x56	; 86
     e9e:	de e0       	ldi	r29, 0x0E	; 14
     ea0:	00 e0       	ldi	r16, 0x00	; 0
     ea2:	06 c0       	rjmp	.+12     	; 0xeb0 <__do_global_ctors+0x16>
     ea4:	22 97       	sbiw	r28, 0x02	; 2
     ea6:	01 09       	sbc	r16, r1
     ea8:	fe 01       	movw	r30, r28
     eaa:	0b bf       	out	0x3b, r16	; 59
     eac:	0e 94 29 b5 	call	0x16a52	; 0x16a52 <__tablejump_elpm__>
     eb0:	c2 35       	cpi	r28, 0x52	; 82
     eb2:	d1 07       	cpc	r29, r17
     eb4:	80 e0       	ldi	r24, 0x00	; 0
     eb6:	08 07       	cpc	r16, r24
     eb8:	a9 f7       	brne	.-22     	; 0xea4 <__do_global_ctors+0xa>
     eba:	1b be       	out	0x3b, r1	; 59
     ebc:	0e 94 8e 70 	call	0xe11c	; 0xe11c <main>
     ec0:	0c 94 ac b0 	jmp	0x16158	; 0x16158 <exit>

00000ec4 <__bad_interrupt>:
     ec4:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000ec8 <consoleClose>:

/*---------------------------------------------------------------------------*
 * Remove this particular file attached to this device
 *---------------------------------------------------------------------------*/
static t_error consoleClose( t_DEVHANDLE t_handle)
{
     ec8:	1f 93       	push	r17
     eca:	cf 93       	push	r28
     ecc:	df 93       	push	r29
     ece:	0f 92       	push	r0
     ed0:	0f 92       	push	r0
     ed2:	cd b7       	in	r28, 0x3d	; 61
     ed4:	de b7       	in	r29, 0x3e	; 62
     ed6:	89 83       	std	Y+1, r24	; 0x01
     ed8:	9a 83       	std	Y+2, r25	; 0x02
   t_error t_err = ARB_PASSED;

   /*------------------------------------------------------------------------*
    * We are going to access global memory or a register, so perform lock
    *------------------------------------------------------------------------*/
   arb_wait( gt_consoleDev.t_rxMutex,
     eda:	80 91 68 24 	lds	r24, 0x2468
     ede:	90 91 69 24 	lds	r25, 0x2469
     ee2:	60 e0       	ldi	r22, 0x00	; 0
     ee4:	0e 94 69 7e 	call	0xfcd2	; 0xfcd2 <arb_wait>
             0);

   /*------------------------------------------------------------------------*
    * Keep track of the number of user-space applications using the driver.
    *------------------------------------------------------------------------*/
   gt_consoleDev.c_numUsers--;
     ee8:	80 91 70 24 	lds	r24, 0x2470
     eec:	81 50       	subi	r24, 0x01	; 1
     eee:	80 93 70 24 	sts	0x2470, r24

   /*------------------------------------------------------------------------*
    * If there are no more handles attached to this driver than disable the
    * receive interrupt.
    *------------------------------------------------------------------------*/
   if( gt_consoleDev.c_numUsers == 0)
     ef2:	88 23       	and	r24, r24
     ef4:	79 f0       	breq	.+30     	; 0xf14 <consoleClose+0x4c>
 * Remove this particular file attached to this device
 *---------------------------------------------------------------------------*/
static t_error consoleClose( t_DEVHANDLE t_handle)
{
   t_uartError t_uErr;
   t_error t_err = ARB_PASSED;
     ef6:	10 e0       	ldi	r17, 0x00	; 0
   }/*End if( gt_consoleDev.c_numUsers == 0)*/

   /*------------------------------------------------------------------------*
    * Release the lock
    *------------------------------------------------------------------------*/
   arb_signal( gt_consoleDev.t_rxMutex);
     ef8:	20 91 68 24 	lds	r18, 0x2468
     efc:	30 91 69 24 	lds	r19, 0x2469
     f00:	c9 01       	movw	r24, r18
     f02:	0e 94 22 7b 	call	0xf644	; 0xf644 <arb_signal>

   return t_err;

}/*End consoleClose*/
     f06:	81 2f       	mov	r24, r17
     f08:	0f 90       	pop	r0
     f0a:	0f 90       	pop	r0
     f0c:	df 91       	pop	r29
     f0e:	cf 91       	pop	r28
     f10:	1f 91       	pop	r17
     f12:	08 95       	ret
    * receive interrupt.
    *------------------------------------------------------------------------*/
   if( gt_consoleDev.c_numUsers == 0)
   {

      t_uErr = hal_disableUartRxInt( gt_consoleDev.t_uHandle);
     f14:	80 91 71 24 	lds	r24, 0x2471
     f18:	90 91 72 24 	lds	r25, 0x2472
     f1c:	0e 94 32 42 	call	0x8464	; 0x8464 <hal_disableUartRxInt>

      if( t_uErr < 0)
     f20:	87 ff       	sbrs	r24, 7
     f22:	e9 cf       	rjmp	.-46     	; 0xef6 <consoleClose+0x2e>
         t_err = ARB_HAL_ERROR;
     f24:	16 ef       	ldi	r17, 0xF6	; 246
     f26:	e8 cf       	rjmp	.-48     	; 0xef8 <consoleClose+0x30>

00000f28 <consoleOpen>:
   }

}/*End rxComplete*/

static t_error consoleOpen( t_DEVHANDLE t_handle)
{
     f28:	1f 93       	push	r17
     f2a:	cf 93       	push	r28
     f2c:	df 93       	push	r29
     f2e:	0f 92       	push	r0
     f30:	0f 92       	push	r0
     f32:	cd b7       	in	r28, 0x3d	; 61
     f34:	de b7       	in	r29, 0x3e	; 62
     f36:	89 83       	std	Y+1, r24	; 0x01
     f38:	9a 83       	std	Y+2, r25	; 0x02
   t_error t_err = ARB_PASSED;

   /*------------------------------------------------------------------------*
    * We are going to access global memory or a register, so perform lock
    *------------------------------------------------------------------------*/
   arb_wait( gt_consoleDev.t_txMutex,
     f3a:	80 91 6a 24 	lds	r24, 0x246A
     f3e:	90 91 6b 24 	lds	r25, 0x246B
     f42:	60 e0       	ldi	r22, 0x00	; 0
     f44:	0e 94 69 7e 	call	0xfcd2	; 0xfcd2 <arb_wait>
             0);

   /*------------------------------------------------------------------------*
    * Keep track of the number of user-space applications using the driver.
    *------------------------------------------------------------------------*/
   gt_consoleDev.c_numUsers++;
     f48:	80 91 70 24 	lds	r24, 0x2470
     f4c:	8f 5f       	subi	r24, 0xFF	; 255
     f4e:	80 93 70 24 	sts	0x2470, r24

   /*------------------------------------------------------------------------*
    * If there is at least one user-space handle attached to this driver
    * than enable the receive interrupt.
    *------------------------------------------------------------------------*/
   if( gt_consoleDev.c_numUsers == 1)
     f52:	81 30       	cpi	r24, 0x01	; 1
     f54:	79 f0       	breq	.+30     	; 0xf74 <consoleOpen+0x4c>

static t_error consoleOpen( t_DEVHANDLE t_handle)
{

   t_uartError t_uErr;
   t_error t_err = ARB_PASSED;
     f56:	10 e0       	ldi	r17, 0x00	; 0
   }/*End if( gt_consoleDev.c_numUsers == 1)*/

   /*------------------------------------------------------------------------*
    * Release the lock
    *------------------------------------------------------------------------*/
   arb_signal( gt_consoleDev.t_txMutex);
     f58:	20 91 6a 24 	lds	r18, 0x246A
     f5c:	30 91 6b 24 	lds	r19, 0x246B
     f60:	c9 01       	movw	r24, r18
     f62:	0e 94 22 7b 	call	0xf644	; 0xf644 <arb_signal>

   return t_err;

}/*End consoleOpen*/
     f66:	81 2f       	mov	r24, r17
     f68:	0f 90       	pop	r0
     f6a:	0f 90       	pop	r0
     f6c:	df 91       	pop	r29
     f6e:	cf 91       	pop	r28
     f70:	1f 91       	pop	r17
     f72:	08 95       	ret
    * than enable the receive interrupt.
    *------------------------------------------------------------------------*/
   if( gt_consoleDev.c_numUsers == 1)
   {

      t_uErr = hal_enableUartRxInt( gt_consoleDev.t_uHandle);
     f74:	80 91 71 24 	lds	r24, 0x2471
     f78:	90 91 72 24 	lds	r25, 0x2472
     f7c:	0e 94 fc 41 	call	0x83f8	; 0x83f8 <hal_enableUartRxInt>

      if( t_uErr < 0)
     f80:	87 ff       	sbrs	r24, 7
     f82:	e9 cf       	rjmp	.-46     	; 0xf56 <consoleOpen+0x2e>
         t_err = ARB_HAL_ERROR;
     f84:	16 ef       	ldi	r17, 0xF6	; 246
     f86:	e8 cf       	rjmp	.-48     	; 0xf58 <consoleOpen+0x30>

00000f88 <consoleWrite>:
}/*End consoleRead*/

static int16_t consoleWrite( t_DEVHANDLE t_handle,
                             int8_t *pc_buff,
                             uint16_t s_size)
{
     f88:	cf 93       	push	r28
     f8a:	df 93       	push	r29
     f8c:	00 d0       	rcall	.+0      	; 0xf8e <consoleWrite+0x6>
     f8e:	cd b7       	in	r28, 0x3d	; 61
     f90:	de b7       	in	r29, 0x3e	; 62
     f92:	8a 83       	std	Y+2, r24	; 0x02
     f94:	9b 83       	std	Y+3, r25	; 0x03
   /*------------------------------------------------------------------------*
    * A call to this function can occur within an interrupt, therefore 
    * mutual exclusion is performed by disabling interrupts for a brief
    * period of time.
    *------------------------------------------------------------------------*/
   HAL_BEGIN_CRITICAL();
     f96:	8f b7       	in	r24, 0x3f	; 63
     f98:	89 83       	std	Y+1, r24	; 0x01
     f9a:	f8 94       	cli

   s_numBytes = hal_uartWriteBlock( gt_consoleDev.t_uHandle,
     f9c:	80 91 71 24 	lds	r24, 0x2471
     fa0:	90 91 72 24 	lds	r25, 0x2472
     fa4:	0e 94 2d 43 	call	0x865a	; 0x865a <hal_uartWriteBlock>


   /*------------------------------------------------------------------------*
    * Release the lock
    *------------------------------------------------------------------------*/
   HAL_END_CRITICAL();
     fa8:	99 81       	ldd	r25, Y+1	; 0x01
     faa:	9f bf       	out	0x3f, r25	; 63
    * mutual exclusion is performed by disabling interrupts for a brief
    * period of time.
    *------------------------------------------------------------------------*/
   HAL_BEGIN_CRITICAL();

   s_numBytes = hal_uartWriteBlock( gt_consoleDev.t_uHandle,
     fac:	28 2f       	mov	r18, r24
     fae:	33 27       	eor	r19, r19
     fb0:	27 fd       	sbrc	r18, 7
     fb2:	30 95       	com	r19
    *------------------------------------------------------------------------*/
   HAL_END_CRITICAL();

   return s_numBytes;

}/*End consoleWrite*/
     fb4:	93 2f       	mov	r25, r19
     fb6:	23 96       	adiw	r28, 0x03	; 3
     fb8:	cd bf       	out	0x3d, r28	; 61
     fba:	de bf       	out	0x3e, r29	; 62
     fbc:	df 91       	pop	r29
     fbe:	cf 91       	pop	r28
     fc0:	08 95       	ret

00000fc2 <consoleIoctl>:

static int32_t consoleIoctl( t_DEVHANDLE t_handle,
                             uint16_t s_command,
                             int32_t i_arguments)
{
     fc2:	cf 92       	push	r12
     fc4:	df 92       	push	r13
     fc6:	ef 92       	push	r14
     fc8:	ff 92       	push	r15
     fca:	0f 93       	push	r16
     fcc:	1f 93       	push	r17
     fce:	cf 93       	push	r28
     fd0:	df 93       	push	r29
     fd2:	cd b7       	in	r28, 0x3d	; 61
     fd4:	de b7       	in	r29, 0x3e	; 62
     fd6:	aa 97       	sbiw	r28, 0x2a	; 42
     fd8:	cd bf       	out	0x3d, r28	; 61
     fda:	de bf       	out	0x3e, r29	; 62
     fdc:	89 a7       	lds	r24, 0x79
     fde:	9a a7       	lds	r25, 0x7a
     fe0:	69 01       	movw	r12, r18
     fe2:	7a 01       	movw	r14, r20
   t_consoleTokHndl *pt_tokens = NULL;
   int8_t *pc_rxBuffPtr = NULL;
   uint16_t s_size = 0;
   int8_t ac_buff[40];

   switch( (t_consoleCmd)s_command)
     fe4:	64 30       	cpi	r22, 0x04	; 4
     fe6:	09 f4       	brne	.+2      	; 0xfea <consoleIoctl+0x28>
     fe8:	eb c1       	rjmp	.+982    	; 0x13c0 <consoleIoctl+0x3fe>
     fea:	65 30       	cpi	r22, 0x05	; 5
     fec:	10 f1       	brcs	.+68     	; 0x1032 <consoleIoctl+0x70>
     fee:	67 30       	cpi	r22, 0x07	; 7
     ff0:	09 f4       	brne	.+2      	; 0xff4 <consoleIoctl+0x32>
     ff2:	7a c2       	rjmp	.+1268   	; 0x14e8 <consoleIoctl+0x526>
     ff4:	68 30       	cpi	r22, 0x08	; 8
     ff6:	08 f0       	brcs	.+2      	; 0xffa <consoleIoctl+0x38>
     ff8:	b0 c1       	rjmp	.+864    	; 0x135a <consoleIoctl+0x398>
     ffa:	65 30       	cpi	r22, 0x05	; 5
     ffc:	09 f4       	brne	.+2      	; 0x1000 <consoleIoctl+0x3e>
     ffe:	55 c2       	rjmp	.+1194   	; 0x14aa <consoleIoctl+0x4e8>
    1000:	66 30       	cpi	r22, 0x06	; 6
    1002:	09 f4       	brne	.+2      	; 0x1006 <consoleIoctl+0x44>
    1004:	22 c2       	rjmp	.+1092   	; 0x144a <consoleIoctl+0x488>

      break;/*End case CONSOLE_SET_FG_COLOR:*/

      default:

         i_return = (int32_t)CONSOLE_INVALID_CMD;
    1006:	9d ef       	ldi	r25, 0xFD	; 253
    1008:	c9 2e       	mov	r12, r25
    100a:	9f ef       	ldi	r25, 0xFF	; 255
    100c:	d9 2e       	mov	r13, r25
    100e:	9f ef       	ldi	r25, 0xFF	; 255
    1010:	e9 2e       	mov	r14, r25
    1012:	9f ef       	ldi	r25, 0xFF	; 255
    1014:	f9 2e       	mov	r15, r25

   }/*End switch( (t_consoleCmd)s_command)*/

   return i_return;

}/*End consoleIoctl*/
    1016:	b6 01       	movw	r22, r12
    1018:	c7 01       	movw	r24, r14
    101a:	aa 96       	adiw	r28, 0x2a	; 42
    101c:	cd bf       	out	0x3d, r28	; 61
    101e:	de bf       	out	0x3e, r29	; 62
    1020:	df 91       	pop	r29
    1022:	cf 91       	pop	r28
    1024:	1f 91       	pop	r17
    1026:	0f 91       	pop	r16
    1028:	ff 90       	pop	r15
    102a:	ef 90       	pop	r14
    102c:	df 90       	pop	r13
    102e:	cf 90       	pop	r12
    1030:	08 95       	ret
   t_consoleTokHndl *pt_tokens = NULL;
   int8_t *pc_rxBuffPtr = NULL;
   uint16_t s_size = 0;
   int8_t ac_buff[40];

   switch( (t_consoleCmd)s_command)
    1032:	61 30       	cpi	r22, 0x01	; 1
    1034:	09 f4       	brne	.+2      	; 0x1038 <consoleIoctl+0x76>
    1036:	05 c2       	rjmp	.+1034   	; 0x1442 <consoleIoctl+0x480>
    1038:	61 30       	cpi	r22, 0x01	; 1
    103a:	08 f4       	brcc	.+2      	; 0x103e <consoleIoctl+0x7c>
    103c:	b5 c1       	rjmp	.+874    	; 0x13a8 <consoleIoctl+0x3e6>
    103e:	62 30       	cpi	r22, 0x02	; 2
    1040:	09 f4       	brne	.+2      	; 0x1044 <consoleIoctl+0x82>
    1042:	49 c2       	rjmp	.+1170   	; 0x14d6 <consoleIoctl+0x514>
    1044:	63 30       	cpi	r22, 0x03	; 3
    1046:	f9 f6       	brne	.-66     	; 0x1006 <consoleIoctl+0x44>
      case CONSOLE_PARSE_CMD_LINE:

         /*------------------------------------------------------------------*
          * We are going to access global memory or a register, so perform lock
          *------------------------------------------------------------------*/
         arb_wait( gt_consoleDev.t_rxMutex,
    1048:	80 91 68 24 	lds	r24, 0x2468
    104c:	90 91 69 24 	lds	r25, 0x2469
    1050:	60 e0       	ldi	r22, 0x00	; 0
    1052:	0e 94 69 7e 	call	0xfcd2	; 0xfcd2 <arb_wait>
         pt_tokens = (t_consoleTokHndl *)((uint16_t)i_arguments);

         /*------------------------------------------------------------------*
          * Wait for data to be available in the RX buffer.
          *------------------------------------------------------------------*/
         arb_wait( gt_consoleDev.t_rxBlockingSem,
    1056:	80 91 6c 24 	lds	r24, 0x246C
    105a:	90 91 6d 24 	lds	r25, 0x246D
    105e:	60 e0       	ldi	r22, 0x00	; 0
    1060:	0e 94 69 7e 	call	0xfcd2	; 0xfcd2 <arb_wait>
                   0);

         /*------------------------------------------------------------------*
          * Get the head location of the RX buffer...
          *------------------------------------------------------------------*/
         pc_rxBuffPtr = utl_getBufferPtr( gt_consoleDev.t_rxBuffer);
    1064:	80 91 6e 24 	lds	r24, 0x246E
    1068:	90 91 6f 24 	lds	r25, 0x246F
    106c:	0e 94 6c 87 	call	0x10ed8	; 0x10ed8 <utl_getBufferPtr>
    1070:	8c 01       	movw	r16, r24
          * Parse the string into tokens represented by...
          * <cmd> <arg1> <arg2> <arg3>, where ac_tok[0] = <cmd>, ac_tok[1] =
          * <arg1>, ac_tok[2] = <arg2>, ac_tok[3] = <arg3>
          *------------------------------------------------------------------*/
         i_return = (int32_t)drv_parseMessage( pc_rxBuffPtr,
                                               pt_tokens->ac_tok,
    1072:	76 01       	movw	r14, r12
         /*------------------------------------------------------------------*
          * Parse the string into tokens represented by...
          * <cmd> <arg1> <arg2> <arg3>, where ac_tok[0] = <cmd>, ac_tok[1] =
          * <arg1>, ac_tok[2] = <arg2>, ac_tok[3] = <arg3>
          *------------------------------------------------------------------*/
         i_return = (int32_t)drv_parseMessage( pc_rxBuffPtr,
    1074:	60 e7       	ldi	r22, 0x70	; 112
    1076:	c6 2e       	mov	r12, r22
    1078:	d1 2c       	mov	r13, r1
    107a:	ce 0c       	add	r12, r14
    107c:	df 1c       	adc	r13, r15
static t_consoleError drv_parseMessage( int8_t *pc_cbuff,
                                        int8_t ac_tok[][CONSOLE_MAX_TOKEN_SIZE],
                                        uint8_t *pc_tokenCount)
{
   int8_t *pc_nextLoc      = NULL;
   int8_t c_bytesRemaining = utl_getBufferSize( gt_consoleDev.t_rxBuffer);
    107e:	80 91 6e 24 	lds	r24, 0x246E
    1082:	90 91 6f 24 	lds	r25, 0x246F
    1086:	0e 94 58 87 	call	0x10eb0	; 0x10eb0 <utl_getBufferSize>
    * char. If it exits for another reason, the returned ptr will contain the
    * location of the last character in the buffer i.e. a NULL ptr, '\0', '\n',
    * or whatever is there when reaching the max size.
    *------------------------------------------------------------------------*/
   pc_nextLoc = pc_cbuff;
   (*pc_tokenCount) = 0;
    108a:	d6 01       	movw	r26, r12
    108c:	1c 92       	st	X, r1
    108e:	f8 01       	movw	r30, r16
    1090:	90 81       	ld	r25, Z
    1092:	e0 e0       	ldi	r30, 0x00	; 0
   do
   {
      pc_nextLoc = drv_strTok( pc_nextLoc,
                               &ac_tok[(*pc_tokenCount)][0],
    1094:	f0 e0       	ldi	r31, 0x00	; 0
    1096:	e2 95       	swap	r30
    1098:	f2 95       	swap	r31
    109a:	f0 7f       	andi	r31, 0xF0	; 240
    109c:	fe 27       	eor	r31, r30
    109e:	e0 7f       	andi	r30, 0xF0	; 240
    10a0:	fe 27       	eor	r31, r30
    *------------------------------------------------------------------------*/
   pc_nextLoc = pc_cbuff;
   (*pc_tokenCount) = 0;
   do
   {
      pc_nextLoc = drv_strTok( pc_nextLoc,
    10a2:	ee 0d       	add	r30, r14
    10a4:	ff 1d       	adc	r31, r15

   /*------------------------------------------------------------------------*
    * Search for delimiting character, if not found stop at max string size
    * carriage return, or NULL char.
    *------------------------------------------------------------------------*/
   while( (*pc_in != CONSOLE_RETURN_CHAR)
    10a6:	9d 30       	cpi	r25, 0x0D	; 13
    10a8:	09 f4       	brne	.+2      	; 0x10ac <consoleIoctl+0xea>
    10aa:	7b c2       	rjmp	.+1270   	; 0x15a2 <consoleIoctl+0x5e0>
       && (*pc_in != '\0')
    10ac:	99 23       	and	r25, r25
    10ae:	09 f4       	brne	.+2      	; 0x10b2 <consoleIoctl+0xf0>
    10b0:	78 c2       	rjmp	.+1264   	; 0x15a2 <consoleIoctl+0x5e0>
       && (*pc_in != c_delim)
    10b2:	90 32       	cpi	r25, 0x20	; 32
    10b4:	09 f4       	brne	.+2      	; 0x10b8 <consoleIoctl+0xf6>
    10b6:	d8 c2       	rjmp	.+1456   	; 0x1668 <consoleIoctl+0x6a6>
       && (c_tokenSizeCount < *pc_bytesRemaining))
    10b8:	18 16       	cp	r1, r24
    10ba:	0c f0       	brlt	.+2      	; 0x10be <consoleIoctl+0xfc>
    10bc:	72 c2       	rjmp	.+1252   	; 0x15a2 <consoleIoctl+0x5e0>
   {
      pc_out[c_tokenSizeCount] = *pc_in;
    10be:	90 83       	st	Z, r25
      pc_in++;
    10c0:	98 01       	movw	r18, r16
    10c2:	2f 5f       	subi	r18, 0xFF	; 255
    10c4:	3f 4f       	sbci	r19, 0xFF	; 255

   /*------------------------------------------------------------------------*
    * Search for delimiting character, if not found stop at max string size
    * carriage return, or NULL char.
    *------------------------------------------------------------------------*/
   while( (*pc_in != CONSOLE_RETURN_CHAR)
    10c6:	d8 01       	movw	r26, r16
    10c8:	11 96       	adiw	r26, 0x01	; 1
    10ca:	9c 91       	ld	r25, X
    10cc:	11 97       	sbiw	r26, 0x01	; 1
    10ce:	9d 30       	cpi	r25, 0x0D	; 13
    10d0:	09 f4       	brne	.+2      	; 0x10d4 <consoleIoctl+0x112>
    10d2:	70 c2       	rjmp	.+1248   	; 0x15b4 <consoleIoctl+0x5f2>
       && (*pc_in != '\0')
    10d4:	99 23       	and	r25, r25
    10d6:	09 f4       	brne	.+2      	; 0x10da <consoleIoctl+0x118>
    10d8:	6d c2       	rjmp	.+1242   	; 0x15b4 <consoleIoctl+0x5f2>
       && (*pc_in != c_delim)
    10da:	90 32       	cpi	r25, 0x20	; 32
    10dc:	09 f4       	brne	.+2      	; 0x10e0 <consoleIoctl+0x11e>
    10de:	d0 c2       	rjmp	.+1440   	; 0x1680 <consoleIoctl+0x6be>
       && (c_tokenSizeCount < *pc_bytesRemaining))
    10e0:	81 30       	cpi	r24, 0x01	; 1
    10e2:	09 f4       	brne	.+2      	; 0x10e6 <consoleIoctl+0x124>
    10e4:	67 c2       	rjmp	.+1230   	; 0x15b4 <consoleIoctl+0x5f2>
   {
      pc_out[c_tokenSizeCount] = *pc_in;
    10e6:	91 83       	std	Z+1, r25	; 0x01
      pc_in++;
    10e8:	98 01       	movw	r18, r16
    10ea:	2e 5f       	subi	r18, 0xFE	; 254
    10ec:	3f 4f       	sbci	r19, 0xFF	; 255

   /*------------------------------------------------------------------------*
    * Search for delimiting character, if not found stop at max string size
    * carriage return, or NULL char.
    *------------------------------------------------------------------------*/
   while( (*pc_in != CONSOLE_RETURN_CHAR)
    10ee:	12 96       	adiw	r26, 0x02	; 2
    10f0:	9c 91       	ld	r25, X
    10f2:	12 97       	sbiw	r26, 0x02	; 2
    10f4:	9d 30       	cpi	r25, 0x0D	; 13
    10f6:	09 f4       	brne	.+2      	; 0x10fa <consoleIoctl+0x138>
    10f8:	63 c2       	rjmp	.+1222   	; 0x15c0 <consoleIoctl+0x5fe>
       && (*pc_in != '\0')
    10fa:	99 23       	and	r25, r25
    10fc:	09 f4       	brne	.+2      	; 0x1100 <consoleIoctl+0x13e>
    10fe:	60 c2       	rjmp	.+1216   	; 0x15c0 <consoleIoctl+0x5fe>
       && (*pc_in != c_delim)
    1100:	90 32       	cpi	r25, 0x20	; 32
    1102:	09 f4       	brne	.+2      	; 0x1106 <consoleIoctl+0x144>
    1104:	c3 c2       	rjmp	.+1414   	; 0x168c <consoleIoctl+0x6ca>
       && (c_tokenSizeCount < *pc_bytesRemaining))
    1106:	82 30       	cpi	r24, 0x02	; 2
    1108:	09 f4       	brne	.+2      	; 0x110c <consoleIoctl+0x14a>
    110a:	5a c2       	rjmp	.+1204   	; 0x15c0 <consoleIoctl+0x5fe>
   {
      pc_out[c_tokenSizeCount] = *pc_in;
    110c:	92 83       	std	Z+2, r25	; 0x02
      pc_in++;
    110e:	98 01       	movw	r18, r16
    1110:	2d 5f       	subi	r18, 0xFD	; 253
    1112:	3f 4f       	sbci	r19, 0xFF	; 255

   /*------------------------------------------------------------------------*
    * Search for delimiting character, if not found stop at max string size
    * carriage return, or NULL char.
    *------------------------------------------------------------------------*/
   while( (*pc_in != CONSOLE_RETURN_CHAR)
    1114:	13 96       	adiw	r26, 0x03	; 3
    1116:	9c 91       	ld	r25, X
    1118:	13 97       	sbiw	r26, 0x03	; 3
    111a:	9d 30       	cpi	r25, 0x0D	; 13
    111c:	09 f4       	brne	.+2      	; 0x1120 <consoleIoctl+0x15e>
    111e:	56 c2       	rjmp	.+1196   	; 0x15cc <consoleIoctl+0x60a>
       && (*pc_in != '\0')
    1120:	99 23       	and	r25, r25
    1122:	09 f4       	brne	.+2      	; 0x1126 <consoleIoctl+0x164>
    1124:	53 c2       	rjmp	.+1190   	; 0x15cc <consoleIoctl+0x60a>
       && (*pc_in != c_delim)
    1126:	90 32       	cpi	r25, 0x20	; 32
    1128:	09 f4       	brne	.+2      	; 0x112c <consoleIoctl+0x16a>
    112a:	b6 c2       	rjmp	.+1388   	; 0x1698 <consoleIoctl+0x6d6>
       && (c_tokenSizeCount < *pc_bytesRemaining))
    112c:	83 30       	cpi	r24, 0x03	; 3
    112e:	09 f4       	brne	.+2      	; 0x1132 <consoleIoctl+0x170>
    1130:	4d c2       	rjmp	.+1178   	; 0x15cc <consoleIoctl+0x60a>
   {
      pc_out[c_tokenSizeCount] = *pc_in;
    1132:	93 83       	std	Z+3, r25	; 0x03
      pc_in++;
    1134:	98 01       	movw	r18, r16
    1136:	2c 5f       	subi	r18, 0xFC	; 252
    1138:	3f 4f       	sbci	r19, 0xFF	; 255

   /*------------------------------------------------------------------------*
    * Search for delimiting character, if not found stop at max string size
    * carriage return, or NULL char.
    *------------------------------------------------------------------------*/
   while( (*pc_in != CONSOLE_RETURN_CHAR)
    113a:	14 96       	adiw	r26, 0x04	; 4
    113c:	9c 91       	ld	r25, X
    113e:	14 97       	sbiw	r26, 0x04	; 4
    1140:	9d 30       	cpi	r25, 0x0D	; 13
    1142:	09 f4       	brne	.+2      	; 0x1146 <consoleIoctl+0x184>
    1144:	48 c2       	rjmp	.+1168   	; 0x15d6 <consoleIoctl+0x614>
       && (*pc_in != '\0')
    1146:	99 23       	and	r25, r25
    1148:	09 f4       	brne	.+2      	; 0x114c <consoleIoctl+0x18a>
    114a:	45 c2       	rjmp	.+1162   	; 0x15d6 <consoleIoctl+0x614>
       && (*pc_in != c_delim)
    114c:	90 32       	cpi	r25, 0x20	; 32
    114e:	09 f4       	brne	.+2      	; 0x1152 <consoleIoctl+0x190>
    1150:	a9 c2       	rjmp	.+1362   	; 0x16a4 <consoleIoctl+0x6e2>
       && (c_tokenSizeCount < *pc_bytesRemaining))
    1152:	84 30       	cpi	r24, 0x04	; 4
    1154:	09 f4       	brne	.+2      	; 0x1158 <consoleIoctl+0x196>
    1156:	3f c2       	rjmp	.+1150   	; 0x15d6 <consoleIoctl+0x614>
   {
      pc_out[c_tokenSizeCount] = *pc_in;
    1158:	94 83       	std	Z+4, r25	; 0x04
      pc_in++;
    115a:	98 01       	movw	r18, r16
    115c:	2b 5f       	subi	r18, 0xFB	; 251
    115e:	3f 4f       	sbci	r19, 0xFF	; 255

   /*------------------------------------------------------------------------*
    * Search for delimiting character, if not found stop at max string size
    * carriage return, or NULL char.
    *------------------------------------------------------------------------*/
   while( (*pc_in != CONSOLE_RETURN_CHAR)
    1160:	15 96       	adiw	r26, 0x05	; 5
    1162:	9c 91       	ld	r25, X
    1164:	15 97       	sbiw	r26, 0x05	; 5
    1166:	9d 30       	cpi	r25, 0x0D	; 13
    1168:	09 f4       	brne	.+2      	; 0x116c <consoleIoctl+0x1aa>
    116a:	3a c2       	rjmp	.+1140   	; 0x15e0 <consoleIoctl+0x61e>
       && (*pc_in != '\0')
    116c:	99 23       	and	r25, r25
    116e:	09 f4       	brne	.+2      	; 0x1172 <consoleIoctl+0x1b0>
    1170:	37 c2       	rjmp	.+1134   	; 0x15e0 <consoleIoctl+0x61e>
       && (*pc_in != c_delim)
    1172:	90 32       	cpi	r25, 0x20	; 32
    1174:	09 f4       	brne	.+2      	; 0x1178 <consoleIoctl+0x1b6>
    1176:	9c c2       	rjmp	.+1336   	; 0x16b0 <consoleIoctl+0x6ee>
       && (c_tokenSizeCount < *pc_bytesRemaining))
    1178:	85 30       	cpi	r24, 0x05	; 5
    117a:	09 f4       	brne	.+2      	; 0x117e <consoleIoctl+0x1bc>
    117c:	31 c2       	rjmp	.+1122   	; 0x15e0 <consoleIoctl+0x61e>
   {
      pc_out[c_tokenSizeCount] = *pc_in;
    117e:	95 83       	std	Z+5, r25	; 0x05
      pc_in++;
    1180:	98 01       	movw	r18, r16
    1182:	2a 5f       	subi	r18, 0xFA	; 250
    1184:	3f 4f       	sbci	r19, 0xFF	; 255

   /*------------------------------------------------------------------------*
    * Search for delimiting character, if not found stop at max string size
    * carriage return, or NULL char.
    *------------------------------------------------------------------------*/
   while( (*pc_in != CONSOLE_RETURN_CHAR)
    1186:	16 96       	adiw	r26, 0x06	; 6
    1188:	9c 91       	ld	r25, X
    118a:	16 97       	sbiw	r26, 0x06	; 6
    118c:	9d 30       	cpi	r25, 0x0D	; 13
    118e:	09 f4       	brne	.+2      	; 0x1192 <consoleIoctl+0x1d0>
    1190:	2c c2       	rjmp	.+1112   	; 0x15ea <consoleIoctl+0x628>
       && (*pc_in != '\0')
    1192:	99 23       	and	r25, r25
    1194:	09 f4       	brne	.+2      	; 0x1198 <consoleIoctl+0x1d6>
    1196:	29 c2       	rjmp	.+1106   	; 0x15ea <consoleIoctl+0x628>
       && (*pc_in != c_delim)
    1198:	90 32       	cpi	r25, 0x20	; 32
    119a:	09 f4       	brne	.+2      	; 0x119e <consoleIoctl+0x1dc>
    119c:	8f c2       	rjmp	.+1310   	; 0x16bc <consoleIoctl+0x6fa>
       && (c_tokenSizeCount < *pc_bytesRemaining))
    119e:	86 30       	cpi	r24, 0x06	; 6
    11a0:	09 f4       	brne	.+2      	; 0x11a4 <consoleIoctl+0x1e2>
    11a2:	23 c2       	rjmp	.+1094   	; 0x15ea <consoleIoctl+0x628>
   {
      pc_out[c_tokenSizeCount] = *pc_in;
    11a4:	96 83       	std	Z+6, r25	; 0x06
      pc_in++;
    11a6:	98 01       	movw	r18, r16
    11a8:	29 5f       	subi	r18, 0xF9	; 249
    11aa:	3f 4f       	sbci	r19, 0xFF	; 255

   /*------------------------------------------------------------------------*
    * Search for delimiting character, if not found stop at max string size
    * carriage return, or NULL char.
    *------------------------------------------------------------------------*/
   while( (*pc_in != CONSOLE_RETURN_CHAR)
    11ac:	17 96       	adiw	r26, 0x07	; 7
    11ae:	9c 91       	ld	r25, X
    11b0:	17 97       	sbiw	r26, 0x07	; 7
    11b2:	9d 30       	cpi	r25, 0x0D	; 13
    11b4:	09 f4       	brne	.+2      	; 0x11b8 <consoleIoctl+0x1f6>
    11b6:	1e c2       	rjmp	.+1084   	; 0x15f4 <consoleIoctl+0x632>
       && (*pc_in != '\0')
    11b8:	99 23       	and	r25, r25
    11ba:	09 f4       	brne	.+2      	; 0x11be <consoleIoctl+0x1fc>
    11bc:	1b c2       	rjmp	.+1078   	; 0x15f4 <consoleIoctl+0x632>
       && (*pc_in != c_delim)
    11be:	90 32       	cpi	r25, 0x20	; 32
    11c0:	09 f4       	brne	.+2      	; 0x11c4 <consoleIoctl+0x202>
    11c2:	82 c2       	rjmp	.+1284   	; 0x16c8 <consoleIoctl+0x706>
       && (c_tokenSizeCount < *pc_bytesRemaining))
    11c4:	87 30       	cpi	r24, 0x07	; 7
    11c6:	09 f4       	brne	.+2      	; 0x11ca <consoleIoctl+0x208>
    11c8:	15 c2       	rjmp	.+1066   	; 0x15f4 <consoleIoctl+0x632>
   {
      pc_out[c_tokenSizeCount] = *pc_in;
    11ca:	97 83       	std	Z+7, r25	; 0x07
      pc_in++;
    11cc:	98 01       	movw	r18, r16
    11ce:	28 5f       	subi	r18, 0xF8	; 248
    11d0:	3f 4f       	sbci	r19, 0xFF	; 255

   /*------------------------------------------------------------------------*
    * Search for delimiting character, if not found stop at max string size
    * carriage return, or NULL char.
    *------------------------------------------------------------------------*/
   while( (*pc_in != CONSOLE_RETURN_CHAR)
    11d2:	18 96       	adiw	r26, 0x08	; 8
    11d4:	9c 91       	ld	r25, X
    11d6:	18 97       	sbiw	r26, 0x08	; 8
    11d8:	9d 30       	cpi	r25, 0x0D	; 13
    11da:	09 f4       	brne	.+2      	; 0x11de <consoleIoctl+0x21c>
    11dc:	10 c2       	rjmp	.+1056   	; 0x15fe <consoleIoctl+0x63c>
       && (*pc_in != '\0')
    11de:	99 23       	and	r25, r25
    11e0:	09 f4       	brne	.+2      	; 0x11e4 <consoleIoctl+0x222>
    11e2:	0d c2       	rjmp	.+1050   	; 0x15fe <consoleIoctl+0x63c>
       && (*pc_in != c_delim)
    11e4:	90 32       	cpi	r25, 0x20	; 32
    11e6:	09 f4       	brne	.+2      	; 0x11ea <consoleIoctl+0x228>
    11e8:	75 c2       	rjmp	.+1258   	; 0x16d4 <consoleIoctl+0x712>
       && (c_tokenSizeCount < *pc_bytesRemaining))
    11ea:	88 30       	cpi	r24, 0x08	; 8
    11ec:	09 f4       	brne	.+2      	; 0x11f0 <consoleIoctl+0x22e>
    11ee:	07 c2       	rjmp	.+1038   	; 0x15fe <consoleIoctl+0x63c>
   {
      pc_out[c_tokenSizeCount] = *pc_in;
    11f0:	90 87       	std	Z+8, r25	; 0x08
      pc_in++;
    11f2:	98 01       	movw	r18, r16
    11f4:	27 5f       	subi	r18, 0xF7	; 247
    11f6:	3f 4f       	sbci	r19, 0xFF	; 255

   /*------------------------------------------------------------------------*
    * Search for delimiting character, if not found stop at max string size
    * carriage return, or NULL char.
    *------------------------------------------------------------------------*/
   while( (*pc_in != CONSOLE_RETURN_CHAR)
    11f8:	19 96       	adiw	r26, 0x09	; 9
    11fa:	9c 91       	ld	r25, X
    11fc:	19 97       	sbiw	r26, 0x09	; 9
    11fe:	9d 30       	cpi	r25, 0x0D	; 13
    1200:	09 f4       	brne	.+2      	; 0x1204 <consoleIoctl+0x242>
    1202:	02 c2       	rjmp	.+1028   	; 0x1608 <consoleIoctl+0x646>
       && (*pc_in != '\0')
    1204:	99 23       	and	r25, r25
    1206:	09 f4       	brne	.+2      	; 0x120a <consoleIoctl+0x248>
    1208:	ff c1       	rjmp	.+1022   	; 0x1608 <consoleIoctl+0x646>
       && (*pc_in != c_delim)
    120a:	90 32       	cpi	r25, 0x20	; 32
    120c:	09 f4       	brne	.+2      	; 0x1210 <consoleIoctl+0x24e>
    120e:	71 c2       	rjmp	.+1250   	; 0x16f2 <consoleIoctl+0x730>
       && (c_tokenSizeCount < *pc_bytesRemaining))
    1210:	89 30       	cpi	r24, 0x09	; 9
    1212:	09 f4       	brne	.+2      	; 0x1216 <consoleIoctl+0x254>
    1214:	f9 c1       	rjmp	.+1010   	; 0x1608 <consoleIoctl+0x646>
   {
      pc_out[c_tokenSizeCount] = *pc_in;
    1216:	91 87       	std	Z+9, r25	; 0x09
      pc_in++;
    1218:	98 01       	movw	r18, r16
    121a:	26 5f       	subi	r18, 0xF6	; 246
    121c:	3f 4f       	sbci	r19, 0xFF	; 255

   /*------------------------------------------------------------------------*
    * Search for delimiting character, if not found stop at max string size
    * carriage return, or NULL char.
    *------------------------------------------------------------------------*/
   while( (*pc_in != CONSOLE_RETURN_CHAR)
    121e:	1a 96       	adiw	r26, 0x0a	; 10
    1220:	9c 91       	ld	r25, X
    1222:	1a 97       	sbiw	r26, 0x0a	; 10
    1224:	9d 30       	cpi	r25, 0x0D	; 13
    1226:	09 f4       	brne	.+2      	; 0x122a <consoleIoctl+0x268>
    1228:	f4 c1       	rjmp	.+1000   	; 0x1612 <consoleIoctl+0x650>
       && (*pc_in != '\0')
    122a:	99 23       	and	r25, r25
    122c:	09 f4       	brne	.+2      	; 0x1230 <consoleIoctl+0x26e>
    122e:	f1 c1       	rjmp	.+994    	; 0x1612 <consoleIoctl+0x650>
       && (*pc_in != c_delim)
    1230:	90 32       	cpi	r25, 0x20	; 32
    1232:	09 f4       	brne	.+2      	; 0x1236 <consoleIoctl+0x274>
    1234:	64 c2       	rjmp	.+1224   	; 0x16fe <consoleIoctl+0x73c>
       && (c_tokenSizeCount < *pc_bytesRemaining))
    1236:	8a 30       	cpi	r24, 0x0A	; 10
    1238:	09 f4       	brne	.+2      	; 0x123c <consoleIoctl+0x27a>
    123a:	eb c1       	rjmp	.+982    	; 0x1612 <consoleIoctl+0x650>
   {
      pc_out[c_tokenSizeCount] = *pc_in;
    123c:	92 87       	std	Z+10, r25	; 0x0a
      pc_in++;
    123e:	98 01       	movw	r18, r16
    1240:	25 5f       	subi	r18, 0xF5	; 245
    1242:	3f 4f       	sbci	r19, 0xFF	; 255

   /*------------------------------------------------------------------------*
    * Search for delimiting character, if not found stop at max string size
    * carriage return, or NULL char.
    *------------------------------------------------------------------------*/
   while( (*pc_in != CONSOLE_RETURN_CHAR)
    1244:	1b 96       	adiw	r26, 0x0b	; 11
    1246:	9c 91       	ld	r25, X
    1248:	1b 97       	sbiw	r26, 0x0b	; 11
    124a:	9d 30       	cpi	r25, 0x0D	; 13
    124c:	09 f4       	brne	.+2      	; 0x1250 <consoleIoctl+0x28e>
    124e:	e6 c1       	rjmp	.+972    	; 0x161c <consoleIoctl+0x65a>
       && (*pc_in != '\0')
    1250:	99 23       	and	r25, r25
    1252:	09 f4       	brne	.+2      	; 0x1256 <consoleIoctl+0x294>
    1254:	e3 c1       	rjmp	.+966    	; 0x161c <consoleIoctl+0x65a>
       && (*pc_in != c_delim)
    1256:	90 32       	cpi	r25, 0x20	; 32
    1258:	09 f4       	brne	.+2      	; 0x125c <consoleIoctl+0x29a>
    125a:	57 c2       	rjmp	.+1198   	; 0x170a <consoleIoctl+0x748>
       && (c_tokenSizeCount < *pc_bytesRemaining))
    125c:	8b 30       	cpi	r24, 0x0B	; 11
    125e:	09 f4       	brne	.+2      	; 0x1262 <consoleIoctl+0x2a0>
    1260:	dd c1       	rjmp	.+954    	; 0x161c <consoleIoctl+0x65a>
   {
      pc_out[c_tokenSizeCount] = *pc_in;
    1262:	93 87       	std	Z+11, r25	; 0x0b
      pc_in++;
    1264:	98 01       	movw	r18, r16
    1266:	24 5f       	subi	r18, 0xF4	; 244
    1268:	3f 4f       	sbci	r19, 0xFF	; 255

   /*------------------------------------------------------------------------*
    * Search for delimiting character, if not found stop at max string size
    * carriage return, or NULL char.
    *------------------------------------------------------------------------*/
   while( (*pc_in != CONSOLE_RETURN_CHAR)
    126a:	1c 96       	adiw	r26, 0x0c	; 12
    126c:	9c 91       	ld	r25, X
    126e:	1c 97       	sbiw	r26, 0x0c	; 12
    1270:	9d 30       	cpi	r25, 0x0D	; 13
    1272:	09 f4       	brne	.+2      	; 0x1276 <consoleIoctl+0x2b4>
    1274:	d8 c1       	rjmp	.+944    	; 0x1626 <consoleIoctl+0x664>
       && (*pc_in != '\0')
    1276:	99 23       	and	r25, r25
    1278:	09 f4       	brne	.+2      	; 0x127c <consoleIoctl+0x2ba>
    127a:	d5 c1       	rjmp	.+938    	; 0x1626 <consoleIoctl+0x664>
       && (*pc_in != c_delim)
    127c:	90 32       	cpi	r25, 0x20	; 32
    127e:	09 f4       	brne	.+2      	; 0x1282 <consoleIoctl+0x2c0>
    1280:	4a c2       	rjmp	.+1172   	; 0x1716 <consoleIoctl+0x754>
       && (c_tokenSizeCount < *pc_bytesRemaining))
    1282:	8c 30       	cpi	r24, 0x0C	; 12
    1284:	09 f4       	brne	.+2      	; 0x1288 <consoleIoctl+0x2c6>
    1286:	cf c1       	rjmp	.+926    	; 0x1626 <consoleIoctl+0x664>
   {
      pc_out[c_tokenSizeCount] = *pc_in;
    1288:	94 87       	std	Z+12, r25	; 0x0c
      pc_in++;
    128a:	98 01       	movw	r18, r16
    128c:	23 5f       	subi	r18, 0xF3	; 243
    128e:	3f 4f       	sbci	r19, 0xFF	; 255

   /*------------------------------------------------------------------------*
    * Search for delimiting character, if not found stop at max string size
    * carriage return, or NULL char.
    *------------------------------------------------------------------------*/
   while( (*pc_in != CONSOLE_RETURN_CHAR)
    1290:	1d 96       	adiw	r26, 0x0d	; 13
    1292:	9c 91       	ld	r25, X
    1294:	1d 97       	sbiw	r26, 0x0d	; 13
    1296:	9d 30       	cpi	r25, 0x0D	; 13
    1298:	09 f4       	brne	.+2      	; 0x129c <consoleIoctl+0x2da>
    129a:	ca c1       	rjmp	.+916    	; 0x1630 <consoleIoctl+0x66e>
       && (*pc_in != '\0')
    129c:	99 23       	and	r25, r25
    129e:	09 f4       	brne	.+2      	; 0x12a2 <consoleIoctl+0x2e0>
    12a0:	c7 c1       	rjmp	.+910    	; 0x1630 <consoleIoctl+0x66e>
       && (*pc_in != c_delim)
    12a2:	90 32       	cpi	r25, 0x20	; 32
    12a4:	09 f4       	brne	.+2      	; 0x12a8 <consoleIoctl+0x2e6>
    12a6:	3d c2       	rjmp	.+1146   	; 0x1722 <consoleIoctl+0x760>
       && (c_tokenSizeCount < *pc_bytesRemaining))
    12a8:	8d 30       	cpi	r24, 0x0D	; 13
    12aa:	09 f4       	brne	.+2      	; 0x12ae <consoleIoctl+0x2ec>
    12ac:	c1 c1       	rjmp	.+898    	; 0x1630 <consoleIoctl+0x66e>
   {
      pc_out[c_tokenSizeCount] = *pc_in;
    12ae:	95 87       	std	Z+13, r25	; 0x0d
      pc_in++;
    12b0:	98 01       	movw	r18, r16
    12b2:	22 5f       	subi	r18, 0xF2	; 242
    12b4:	3f 4f       	sbci	r19, 0xFF	; 255

   /*------------------------------------------------------------------------*
    * Search for delimiting character, if not found stop at max string size
    * carriage return, or NULL char.
    *------------------------------------------------------------------------*/
   while( (*pc_in != CONSOLE_RETURN_CHAR)
    12b6:	1e 96       	adiw	r26, 0x0e	; 14
    12b8:	9c 91       	ld	r25, X
    12ba:	1e 97       	sbiw	r26, 0x0e	; 14
    12bc:	9d 30       	cpi	r25, 0x0D	; 13
    12be:	09 f4       	brne	.+2      	; 0x12c2 <consoleIoctl+0x300>
    12c0:	ce c1       	rjmp	.+924    	; 0x165e <consoleIoctl+0x69c>
       && (*pc_in != '\0')
    12c2:	99 23       	and	r25, r25
    12c4:	09 f4       	brne	.+2      	; 0x12c8 <consoleIoctl+0x306>
    12c6:	cb c1       	rjmp	.+918    	; 0x165e <consoleIoctl+0x69c>
       && (*pc_in != c_delim)
    12c8:	90 32       	cpi	r25, 0x20	; 32
    12ca:	09 f4       	brne	.+2      	; 0x12ce <consoleIoctl+0x30c>
    12cc:	36 c2       	rjmp	.+1132   	; 0x173a <consoleIoctl+0x778>
       && (c_tokenSizeCount < *pc_bytesRemaining))
    12ce:	8e 30       	cpi	r24, 0x0E	; 14
    12d0:	09 f4       	brne	.+2      	; 0x12d4 <consoleIoctl+0x312>
    12d2:	c5 c1       	rjmp	.+906    	; 0x165e <consoleIoctl+0x69c>
   {
      pc_out[c_tokenSizeCount] = *pc_in;
    12d4:	96 87       	std	Z+14, r25	; 0x0e
      pc_in++;
    12d6:	98 01       	movw	r18, r16
    12d8:	21 5f       	subi	r18, 0xF1	; 241
    12da:	3f 4f       	sbci	r19, 0xFF	; 255

   /*------------------------------------------------------------------------*
    * Search for delimiting character, if not found stop at max string size
    * carriage return, or NULL char.
    *------------------------------------------------------------------------*/
   while( (*pc_in != CONSOLE_RETURN_CHAR)
    12dc:	1f 96       	adiw	r26, 0x0f	; 15
    12de:	9c 91       	ld	r25, X
    12e0:	1f 97       	sbiw	r26, 0x0f	; 15
    12e2:	9d 30       	cpi	r25, 0x0D	; 13
    12e4:	09 f4       	brne	.+2      	; 0x12e8 <consoleIoctl+0x326>
    12e6:	c7 c1       	rjmp	.+910    	; 0x1676 <consoleIoctl+0x6b4>
       && (*pc_in != '\0')
    12e8:	99 23       	and	r25, r25
    12ea:	09 f4       	brne	.+2      	; 0x12ee <consoleIoctl+0x32c>
    12ec:	c4 c1       	rjmp	.+904    	; 0x1676 <consoleIoctl+0x6b4>
       && (*pc_in != c_delim)
    12ee:	90 32       	cpi	r25, 0x20	; 32
    12f0:	09 f4       	brne	.+2      	; 0x12f4 <consoleIoctl+0x332>
    12f2:	1d c2       	rjmp	.+1082   	; 0x172e <consoleIoctl+0x76c>
       && (c_tokenSizeCount < *pc_bytesRemaining))
    12f4:	8f 30       	cpi	r24, 0x0F	; 15
    12f6:	09 f4       	brne	.+2      	; 0x12fa <consoleIoctl+0x338>
    12f8:	be c1       	rjmp	.+892    	; 0x1676 <consoleIoctl+0x6b4>
   {
      pc_out[c_tokenSizeCount] = *pc_in;
    12fa:	97 87       	std	Z+15, r25	; 0x0f
      {
         /*------------------------------------------------------------------*
          * Add one to the count in order to trigger the error condition.
          *------------------------------------------------------------------*/
         c_tokenSizeCount++;
         *pc_tokenSize = c_tokenSizeCount;
    12fc:	91 e1       	ldi	r25, 0x11	; 17
         return NULL;
    12fe:	00 e0       	ldi	r16, 0x00	; 0
    1300:	10 e0       	ldi	r17, 0x00	; 0
      pc_nextLoc = drv_strTok( pc_nextLoc,
                               &ac_tok[(*pc_tokenCount)][0],
                               ' ',
                               &c_bytesRemaining,
                               &c_tokenSize);
      (*pc_tokenCount)++;
    1302:	d6 01       	movw	r26, r12
    1304:	ec 91       	ld	r30, X
    1306:	ef 5f       	subi	r30, 0xFF	; 255
    1308:	ec 93       	st	X, r30
      if( (*pc_tokenCount) > CONSOLE_MAX_TOKENS)
    130a:	e8 30       	cpi	r30, 0x08	; 8
    130c:	08 f0       	brcs	.+2      	; 0x1310 <consoleIoctl+0x34e>
    130e:	9e c1       	rjmp	.+828    	; 0x164c <consoleIoctl+0x68a>
         /*------------------------------------------------------------------*
          * Error too many tokens....
          *------------------------------------------------------------------*/
         return CONSOLE_TOO_MANY_TOKENS;
      }/*End if( (*pc_tokenCount) > CONSOLE_MAX_TOKENS)*/
      else if( c_tokenSize > CONSOLE_MAX_TOKEN_SIZE)
    1310:	91 31       	cpi	r25, 0x11	; 17
    1312:	09 f4       	brne	.+2      	; 0x1316 <consoleIoctl+0x354>
    1314:	92 c1       	rjmp	.+804    	; 0x163a <consoleIoctl+0x678>
      }

      if( t_err < 0)
         return t_err;

   }while( (*pc_nextLoc != '\n') && (*pc_nextLoc != '\0') && (pc_nextLoc != NULL)
    1316:	d8 01       	movw	r26, r16
    1318:	9c 91       	ld	r25, X
   && (c_bytesRemaining > 0));
    131a:	9a 30       	cpi	r25, 0x0A	; 10
    131c:	41 f0       	breq	.+16     	; 0x132e <consoleIoctl+0x36c>
      }

      if( t_err < 0)
         return t_err;

   }while( (*pc_nextLoc != '\n') && (*pc_nextLoc != '\0') && (pc_nextLoc != NULL)
    131e:	99 23       	and	r25, r25
    1320:	31 f0       	breq	.+12     	; 0x132e <consoleIoctl+0x36c>
    1322:	01 15       	cp	r16, r1
    1324:	11 05       	cpc	r17, r1
    1326:	19 f0       	breq	.+6      	; 0x132e <consoleIoctl+0x36c>
   && (c_bytesRemaining > 0));
    1328:	18 16       	cp	r1, r24
    132a:	0c f4       	brge	.+2      	; 0x132e <consoleIoctl+0x36c>
    132c:	b3 ce       	rjmp	.-666    	; 0x1094 <consoleIoctl+0xd2>
      }

      if( t_err < 0)
         return t_err;

   }while( (*pc_nextLoc != '\n') && (*pc_nextLoc != '\0') && (pc_nextLoc != NULL)
    132e:	cc 24       	eor	r12, r12
    1330:	dd 24       	eor	r13, r13
    1332:	76 01       	movw	r14, r12
         /*------------------------------------------------------------------*
          * In order to treat the buffer as if its linear (when using the ioctl
          * command 'CONSOLE_PARSE_CMD_LINE') we need to reset the pointers
          * each time we read its contents.
          *------------------------------------------------------------------*/
         ult_resetBuffer( gt_consoleDev.t_rxBuffer);
    1334:	80 91 6e 24 	lds	r24, 0x246E
    1338:	90 91 6f 24 	lds	r25, 0x246F
    133c:	0e 94 25 88 	call	0x1104a	; 0x1104a <ult_resetBuffer>

         hal_enableUartRxInt( gt_consoleDev.t_uHandle);
    1340:	80 91 71 24 	lds	r24, 0x2471
    1344:	90 91 72 24 	lds	r25, 0x2472
    1348:	0e 94 fc 41 	call	0x83f8	; 0x83f8 <hal_enableUartRxInt>

         /*------------------------------------------------------------------*
          * Release the lock
          *------------------------------------------------------------------*/
         arb_signal( gt_consoleDev.t_rxMutex);
    134c:	80 91 68 24 	lds	r24, 0x2468
    1350:	90 91 69 24 	lds	r25, 0x2469
    1354:	0e 94 22 7b 	call	0xf644	; 0xf644 <arb_signal>

      break;/*End case CONSOLE_PARSE_CMD_LINE:*/
    1358:	5e ce       	rjmp	.-836    	; 0x1016 <consoleIoctl+0x54>
   t_consoleTokHndl *pt_tokens = NULL;
   int8_t *pc_rxBuffPtr = NULL;
   uint16_t s_size = 0;
   int8_t ac_buff[40];

   switch( (t_consoleCmd)s_command)
    135a:	68 30       	cpi	r22, 0x08	; 8
    135c:	09 f4       	brne	.+2      	; 0x1360 <consoleIoctl+0x39e>
    135e:	fd c0       	rjmp	.+506    	; 0x155a <consoleIoctl+0x598>
    1360:	69 30       	cpi	r22, 0x09	; 9
    1362:	09 f0       	breq	.+2      	; 0x1366 <consoleIoctl+0x3a4>
    1364:	50 ce       	rjmp	.-864    	; 0x1006 <consoleIoctl+0x44>
      case CONSOLE_SET_FG_COLOR:

         /*------------------------------------------------------------------*
          * We are going to access global memory or a register, so perform lock
          *------------------------------------------------------------------*/
         arb_wait( gt_consoleDev.t_txMutex,
    1366:	80 91 6a 24 	lds	r24, 0x246A
    136a:	90 91 6b 24 	lds	r25, 0x246B
    136e:	60 e0       	ldi	r22, 0x00	; 0
    1370:	0e 94 69 7e 	call	0xfcd2	; 0xfcd2 <arb_wait>
                   0);

         if( (i_arguments < CONSOLE_BLACK) || (i_arguments > CONSOLE_WHITE))
    1374:	d7 01       	movw	r26, r14
    1376:	c6 01       	movw	r24, r12
    1378:	c0 97       	sbiw	r24, 0x30	; 48
    137a:	a1 09       	sbc	r26, r1
    137c:	b1 09       	sbc	r27, r1
    137e:	88 30       	cpi	r24, 0x08	; 8
    1380:	91 05       	cpc	r25, r1
    1382:	a1 05       	cpc	r26, r1
    1384:	b1 05       	cpc	r27, r1
    1386:	08 f4       	brcc	.+2      	; 0x138a <consoleIoctl+0x3c8>
    1388:	f9 c0       	rjmp	.+498    	; 0x157c <consoleIoctl+0x5ba>
         {
            i_return = (int32_t)CONSOLE_INVALID_COLOR;
    138a:	29 ef       	ldi	r18, 0xF9	; 249
    138c:	c2 2e       	mov	r12, r18
    138e:	2f ef       	ldi	r18, 0xFF	; 255
    1390:	d2 2e       	mov	r13, r18
    1392:	2f ef       	ldi	r18, 0xFF	; 255
    1394:	e2 2e       	mov	r14, r18
    1396:	2f ef       	ldi	r18, 0xFF	; 255
    1398:	f2 2e       	mov	r15, r18
         }

         /*------------------------------------------------------------------*
          * Release the lock
          *------------------------------------------------------------------*/
         arb_signal( gt_consoleDev.t_txMutex);
    139a:	80 91 6a 24 	lds	r24, 0x246A
    139e:	90 91 6b 24 	lds	r25, 0x246B
    13a2:	0e 94 22 7b 	call	0xf644	; 0xf644 <arb_signal>

      break;/*End case CONSOLE_SET_FG_COLOR:*/
    13a6:	37 ce       	rjmp	.-914    	; 0x1016 <consoleIoctl+0x54>

   switch( (t_consoleCmd)s_command)
   {
      case CONSOLE_GET_RX_BUFFER_SIZE:

         i_return = (int32_t)utl_getBufferSize( gt_consoleDev.t_rxBuffer);
    13a8:	80 91 6e 24 	lds	r24, 0x246E
    13ac:	90 91 6f 24 	lds	r25, 0x246F
    13b0:	0e 94 58 87 	call	0x10eb0	; 0x10eb0 <utl_getBufferSize>
    13b4:	6c 01       	movw	r12, r24
    13b6:	ee 24       	eor	r14, r14
    13b8:	d7 fc       	sbrc	r13, 7
    13ba:	e0 94       	com	r14
    13bc:	fe 2c       	mov	r15, r14

      break;/*End case CONSOLE_GET_RX_BUFFER_SIZE:*/
    13be:	2b ce       	rjmp	.-938    	; 0x1016 <consoleIoctl+0x54>
      case CONSOLE_DISPLAY_PROMPT:

         /*------------------------------------------------------------------*
          * We are going to access global memory or a register, so perform lock
          *------------------------------------------------------------------*/
         arb_wait( gt_consoleDev.t_txMutex,
    13c0:	80 91 6a 24 	lds	r24, 0x246A
    13c4:	90 91 6b 24 	lds	r25, 0x246B
    13c8:	60 e0       	ldi	r22, 0x00	; 0
    13ca:	0e 94 69 7e 	call	0xfcd2	; 0xfcd2 <arb_wait>
                   0);

         /*------------------------------------------------------------------*
          * Set the background color and repaint the entire screen
          *------------------------------------------------------------------*/
         s_size = sprintf( (char *)ac_buff, 
    13ce:	ed b7       	in	r30, 0x3d	; 61
    13d0:	fe b7       	in	r31, 0x3e	; 62
    13d2:	3a 97       	sbiw	r30, 0x0a	; 10
    13d4:	ed bf       	out	0x3d, r30	; 61
    13d6:	fe bf       	out	0x3e, r31	; 62
    13d8:	31 96       	adiw	r30, 0x01	; 1
    13da:	8e 01       	movw	r16, r28
    13dc:	0f 5f       	subi	r16, 0xFF	; 255
    13de:	1f 4f       	sbci	r17, 0xFF	; 255
    13e0:	ad b7       	in	r26, 0x3d	; 61
    13e2:	be b7       	in	r27, 0x3e	; 62
    13e4:	11 96       	adiw	r26, 0x01	; 1
    13e6:	0d 93       	st	X+, r16
    13e8:	1c 93       	st	X, r17
    13ea:	12 97       	sbiw	r26, 0x02	; 2
    13ec:	80 e0       	ldi	r24, 0x00	; 0
    13ee:	90 e2       	ldi	r25, 0x20	; 32
    13f0:	82 83       	std	Z+2, r24	; 0x02
    13f2:	93 83       	std	Z+3, r25	; 0x03
    13f4:	80 91 74 24 	lds	r24, 0x2474
    13f8:	99 27       	eor	r25, r25
    13fa:	87 fd       	sbrc	r24, 7
    13fc:	90 95       	com	r25
    13fe:	84 83       	std	Z+4, r24	; 0x04
    1400:	95 83       	std	Z+5, r25	; 0x05
    1402:	86 e7       	ldi	r24, 0x76	; 118
    1404:	94 e2       	ldi	r25, 0x24	; 36
    1406:	86 83       	std	Z+6, r24	; 0x06
    1408:	97 83       	std	Z+7, r25	; 0x07
    140a:	80 91 75 24 	lds	r24, 0x2475
    140e:	99 27       	eor	r25, r25
    1410:	87 fd       	sbrc	r24, 7
    1412:	90 95       	com	r25
    1414:	80 87       	std	Z+8, r24	; 0x08
    1416:	91 87       	std	Z+9, r25	; 0x09
    1418:	0e 94 6a b2 	call	0x164d4	; 0x164d4 <sprintf>
    141c:	ac 01       	movw	r20, r24
                           "\e[1;3%cm[%s]#\e[1;3%cm ",
                           gt_consoleDev.c_cmdPromptColor,
                           gt_consoleDev.ac_dirName,
                           gt_consoleDev.c_fgColor);

         hal_uartWriteBlock( gt_consoleDev.t_uHandle,
    141e:	80 91 71 24 	lds	r24, 0x2471
    1422:	90 91 72 24 	lds	r25, 0x2472
    1426:	ed b7       	in	r30, 0x3d	; 61
    1428:	fe b7       	in	r31, 0x3e	; 62
    142a:	3a 96       	adiw	r30, 0x0a	; 10
    142c:	ed bf       	out	0x3d, r30	; 61
    142e:	fe bf       	out	0x3e, r31	; 62
    1430:	b8 01       	movw	r22, r16
    1432:	0e 94 2d 43 	call	0x865a	; 0x865a <hal_uartWriteBlock>
                             s_size);

         /*------------------------------------------------------------------*
          * Release the lock
          *------------------------------------------------------------------*/
         arb_signal( gt_consoleDev.t_txMutex);
    1436:	80 91 6a 24 	lds	r24, 0x246A
    143a:	90 91 6b 24 	lds	r25, 0x246B
    143e:	0e 94 22 7b 	call	0xf644	; 0xf644 <arb_signal>

static int32_t consoleIoctl( t_DEVHANDLE t_handle,
                             uint16_t s_command,
                             int32_t i_arguments)
{
   int32_t i_return = (int32_t)CONSOLE_PASSED;
    1442:	cc 24       	eor	r12, r12
    1444:	dd 24       	eor	r13, r13
    1446:	76 01       	movw	r14, r12
         /*------------------------------------------------------------------*
          * Release the lock
          *------------------------------------------------------------------*/
         arb_signal( gt_consoleDev.t_txMutex);

      break;/*End case CONSOLE_DISPLAY_PROMPT:*/
    1448:	e6 cd       	rjmp	.-1076   	; 0x1016 <consoleIoctl+0x54>
      case CONSOLE_RESET_TERMINAL:

         /*------------------------------------------------------------------*
          * We are going to access global memory or a register, so perform lock
          *------------------------------------------------------------------*/
         arb_wait( gt_consoleDev.t_txMutex,
    144a:	80 91 6a 24 	lds	r24, 0x246A
    144e:	90 91 6b 24 	lds	r25, 0x246B
    1452:	60 e0       	ldi	r22, 0x00	; 0
    1454:	0e 94 69 7e 	call	0xfcd2	; 0xfcd2 <arb_wait>
                   0);

         /*------------------------------------------------------------------*
          * Reset the terminal to its default settings...
          *------------------------------------------------------------------*/
         s_size = sprintf_P((char *)ac_buff, PSTR("\ec"));
    1458:	00 d0       	rcall	.+0      	; 0x145a <consoleIoctl+0x498>
    145a:	0f 92       	push	r0
    145c:	8e 01       	movw	r16, r28
    145e:	0f 5f       	subi	r16, 0xFF	; 255
    1460:	1f 4f       	sbci	r17, 0xFF	; 255
    1462:	ad b7       	in	r26, 0x3d	; 61
    1464:	be b7       	in	r27, 0x3e	; 62
    1466:	11 96       	adiw	r26, 0x01	; 1
    1468:	0d 93       	st	X+, r16
    146a:	1c 93       	st	X, r17
    146c:	12 97       	sbiw	r26, 0x02	; 2
    146e:	8b e6       	ldi	r24, 0x6B	; 107
    1470:	92 e0       	ldi	r25, 0x02	; 2
    1472:	13 96       	adiw	r26, 0x03	; 3
    1474:	8d 93       	st	X+, r24
    1476:	9c 93       	st	X, r25
    1478:	14 97       	sbiw	r26, 0x04	; 4
    147a:	0e 94 93 b2 	call	0x16526	; 0x16526 <sprintf_P>
    147e:	ac 01       	movw	r20, r24

         hal_uartWriteBlock( gt_consoleDev.t_uHandle,
    1480:	80 91 71 24 	lds	r24, 0x2471
    1484:	90 91 72 24 	lds	r25, 0x2472
    1488:	0f 90       	pop	r0
    148a:	0f 90       	pop	r0
    148c:	0f 90       	pop	r0
    148e:	0f 90       	pop	r0
    1490:	b8 01       	movw	r22, r16
    1492:	0e 94 2d 43 	call	0x865a	; 0x865a <hal_uartWriteBlock>
                             s_size);

         /*------------------------------------------------------------------*
          * Release the lock
          *------------------------------------------------------------------*/
         arb_signal( gt_consoleDev.t_txMutex);
    1496:	80 91 6a 24 	lds	r24, 0x246A
    149a:	90 91 6b 24 	lds	r25, 0x246B
    149e:	0e 94 22 7b 	call	0xf644	; 0xf644 <arb_signal>

static int32_t consoleIoctl( t_DEVHANDLE t_handle,
                             uint16_t s_command,
                             int32_t i_arguments)
{
   int32_t i_return = (int32_t)CONSOLE_PASSED;
    14a2:	cc 24       	eor	r12, r12
    14a4:	dd 24       	eor	r13, r13
    14a6:	76 01       	movw	r14, r12
         /*------------------------------------------------------------------*
          * Release the lock
          *------------------------------------------------------------------*/
         arb_signal( gt_consoleDev.t_txMutex);

      break;/*End case CONSOLE_RESET_TERMINAL:*/
    14a8:	b6 cd       	rjmp	.-1172   	; 0x1016 <consoleIoctl+0x54>
      case CONSOLE_SET_PROMPT:
      {
         /*------------------------------------------------------------------*
          * We are going to access global memory or a register, so perform lock
          *------------------------------------------------------------------*/
         arb_wait( gt_consoleDev.t_txMutex,
    14aa:	80 91 6a 24 	lds	r24, 0x246A
    14ae:	90 91 6b 24 	lds	r25, 0x246B
    14b2:	60 e0       	ldi	r22, 0x00	; 0
    14b4:	0e 94 69 7e 	call	0xfcd2	; 0xfcd2 <arb_wait>
                   0);

         char *pc_name = (char *)((uint16_t)i_arguments);
         sprintf( gt_consoleDev.ac_dirName, "%s", pc_name);
    14b8:	86 e7       	ldi	r24, 0x76	; 118
    14ba:	94 e2       	ldi	r25, 0x24	; 36
    14bc:	b6 01       	movw	r22, r12
    14be:	0e 94 ee b1 	call	0x163dc	; 0x163dc <strcpy>

         /*------------------------------------------------------------------*
          * Release the lock
          *------------------------------------------------------------------*/
         arb_signal( gt_consoleDev.t_txMutex);
    14c2:	80 91 6a 24 	lds	r24, 0x246A
    14c6:	90 91 6b 24 	lds	r25, 0x246B
    14ca:	0e 94 22 7b 	call	0xf644	; 0xf644 <arb_signal>

static int32_t consoleIoctl( t_DEVHANDLE t_handle,
                             uint16_t s_command,
                             int32_t i_arguments)
{
   int32_t i_return = (int32_t)CONSOLE_PASSED;
    14ce:	cc 24       	eor	r12, r12
    14d0:	dd 24       	eor	r13, r13
    14d2:	76 01       	movw	r14, r12
         /*------------------------------------------------------------------*
          * Release the lock
          *------------------------------------------------------------------*/
         arb_signal( gt_consoleDev.t_txMutex);
      }
      break;/*End case CONSOLE_SET_PROMPT:*/
    14d4:	a0 cd       	rjmp	.-1216   	; 0x1016 <consoleIoctl+0x54>

      break;/*End case CONSOLE_GET_RX_BUFFER_SIZE:*/

      case CONSOLE_GET_BAUD_RATE:

         i_return = (int32_t)hal_uartGetBaudRate( gt_consoleDev.t_uHandle);
    14d6:	80 91 71 24 	lds	r24, 0x2471
    14da:	90 91 72 24 	lds	r25, 0x2472
    14de:	0e 94 04 44 	call	0x8808	; 0x8808 <hal_uartGetBaudRate>
    14e2:	6b 01       	movw	r12, r22
    14e4:	7c 01       	movw	r14, r24

      break;/*End case CONSOLE_GET_BAUD_RATE:*/
    14e6:	97 cd       	rjmp	.-1234   	; 0x1016 <consoleIoctl+0x54>
      case CONSOLE_SET_BG_COLOR:

         /*------------------------------------------------------------------*
          * We are going to access global memory or a register, so perform lock
          *------------------------------------------------------------------*/
         arb_wait( gt_consoleDev.t_txMutex,
    14e8:	80 91 6a 24 	lds	r24, 0x246A
    14ec:	90 91 6b 24 	lds	r25, 0x246B
    14f0:	60 e0       	ldi	r22, 0x00	; 0
    14f2:	0e 94 69 7e 	call	0xfcd2	; 0xfcd2 <arb_wait>
                   0);

         if( (i_arguments < CONSOLE_BLACK) || (i_arguments > CONSOLE_WHITE))
    14f6:	d7 01       	movw	r26, r14
    14f8:	c6 01       	movw	r24, r12
    14fa:	c0 97       	sbiw	r24, 0x30	; 48
    14fc:	a1 09       	sbc	r26, r1
    14fe:	b1 09       	sbc	r27, r1
    1500:	88 30       	cpi	r24, 0x08	; 8
    1502:	91 05       	cpc	r25, r1
    1504:	a1 05       	cpc	r26, r1
    1506:	b1 05       	cpc	r27, r1
    1508:	08 f0       	brcs	.+2      	; 0x150c <consoleIoctl+0x54a>
    150a:	3f cf       	rjmp	.-386    	; 0x138a <consoleIoctl+0x3c8>
         else
         {
            /*---------------------------------------------------------------*
             * Set the background color and repaint the entire screen
             *---------------------------------------------------------------*/
            s_size = sprintf( (char *)ac_buff, 
    150c:	00 d0       	rcall	.+0      	; 0x150e <consoleIoctl+0x54c>
    150e:	00 d0       	rcall	.+0      	; 0x1510 <consoleIoctl+0x54e>
    1510:	ed b7       	in	r30, 0x3d	; 61
    1512:	fe b7       	in	r31, 0x3e	; 62
    1514:	31 96       	adiw	r30, 0x01	; 1
    1516:	8e 01       	movw	r16, r28
    1518:	0f 5f       	subi	r16, 0xFF	; 255
    151a:	1f 4f       	sbci	r17, 0xFF	; 255
    151c:	ad b7       	in	r26, 0x3d	; 61
    151e:	be b7       	in	r27, 0x3e	; 62
    1520:	11 96       	adiw	r26, 0x01	; 1
    1522:	0d 93       	st	X+, r16
    1524:	1c 93       	st	X, r17
    1526:	12 97       	sbiw	r26, 0x02	; 2
    1528:	87 e1       	ldi	r24, 0x17	; 23
    152a:	90 e2       	ldi	r25, 0x20	; 32
         {
            gt_consoleDev.c_fgColor = (int8_t)i_arguments;
            /*---------------------------------------------------------------*
             * Set the foreground color...
             *---------------------------------------------------------------*/
            s_size = sprintf( (char *)ac_buff, 
    152c:	82 83       	std	Z+2, r24	; 0x02
    152e:	93 83       	std	Z+3, r25	; 0x03
    1530:	c4 82       	std	Z+4, r12	; 0x04
    1532:	15 82       	std	Z+5, r1	; 0x05
    1534:	0e 94 6a b2 	call	0x164d4	; 0x164d4 <sprintf>
    1538:	ac 01       	movw	r20, r24
                              "\e[1;3%cm", 
                              (char)i_arguments);

            hal_uartWriteBlock( gt_consoleDev.t_uHandle,
    153a:	80 91 71 24 	lds	r24, 0x2471
    153e:	90 91 72 24 	lds	r25, 0x2472
    1542:	ed b7       	in	r30, 0x3d	; 61
    1544:	fe b7       	in	r31, 0x3e	; 62
    1546:	36 96       	adiw	r30, 0x06	; 6
    1548:	ed bf       	out	0x3d, r30	; 61
    154a:	fe bf       	out	0x3e, r31	; 62
    154c:	b8 01       	movw	r22, r16
    154e:	0e 94 2d 43 	call	0x865a	; 0x865a <hal_uartWriteBlock>

static int32_t consoleIoctl( t_DEVHANDLE t_handle,
                             uint16_t s_command,
                             int32_t i_arguments)
{
   int32_t i_return = (int32_t)CONSOLE_PASSED;
    1552:	cc 24       	eor	r12, r12
    1554:	dd 24       	eor	r13, r13
    1556:	76 01       	movw	r14, r12
    1558:	20 cf       	rjmp	.-448    	; 0x139a <consoleIoctl+0x3d8>

      break;/*End case CONSOLE_SET_BG_COLOR:*/

      case CONSOLE_SET_PROMPT_COLOR:

         if( (i_arguments < CONSOLE_BLACK) || (i_arguments > CONSOLE_WHITE))
    155a:	da 01       	movw	r26, r20
    155c:	c9 01       	movw	r24, r18
    155e:	c0 97       	sbiw	r24, 0x30	; 48
    1560:	a1 09       	sbc	r26, r1
    1562:	b1 09       	sbc	r27, r1
    1564:	88 30       	cpi	r24, 0x08	; 8
    1566:	91 05       	cpc	r25, r1
    1568:	a1 05       	cpc	r26, r1
    156a:	b1 05       	cpc	r27, r1
    156c:	08 f0       	brcs	.+2      	; 0x1570 <consoleIoctl+0x5ae>
    156e:	b8 c0       	rjmp	.+368    	; 0x16e0 <consoleIoctl+0x71e>
         {
            i_return = (int32_t)CONSOLE_INVALID_COLOR;
         }
         else
         {
            gt_consoleDev.c_cmdPromptColor = (int8_t)i_arguments;
    1570:	20 93 74 24 	sts	0x2474, r18

static int32_t consoleIoctl( t_DEVHANDLE t_handle,
                             uint16_t s_command,
                             int32_t i_arguments)
{
   int32_t i_return = (int32_t)CONSOLE_PASSED;
    1574:	cc 24       	eor	r12, r12
    1576:	dd 24       	eor	r13, r13
    1578:	76 01       	movw	r14, r12
    157a:	4d cd       	rjmp	.-1382   	; 0x1016 <consoleIoctl+0x54>
         {
            i_return = (int32_t)CONSOLE_INVALID_COLOR;
         }
         else
         {
            gt_consoleDev.c_fgColor = (int8_t)i_arguments;
    157c:	c0 92 75 24 	sts	0x2475, r12
            /*---------------------------------------------------------------*
             * Set the foreground color...
             *---------------------------------------------------------------*/
            s_size = sprintf( (char *)ac_buff, 
    1580:	00 d0       	rcall	.+0      	; 0x1582 <consoleIoctl+0x5c0>
    1582:	00 d0       	rcall	.+0      	; 0x1584 <consoleIoctl+0x5c2>
    1584:	ed b7       	in	r30, 0x3d	; 61
    1586:	fe b7       	in	r31, 0x3e	; 62
    1588:	31 96       	adiw	r30, 0x01	; 1
    158a:	8e 01       	movw	r16, r28
    158c:	0f 5f       	subi	r16, 0xFF	; 255
    158e:	1f 4f       	sbci	r17, 0xFF	; 255
    1590:	ad b7       	in	r26, 0x3d	; 61
    1592:	be b7       	in	r27, 0x3e	; 62
    1594:	11 96       	adiw	r26, 0x01	; 1
    1596:	0d 93       	st	X+, r16
    1598:	1c 93       	st	X, r17
    159a:	12 97       	sbiw	r26, 0x02	; 2
    159c:	82 e2       	ldi	r24, 0x22	; 34
    159e:	90 e2       	ldi	r25, 0x20	; 32
    15a0:	c5 cf       	rjmp	.-118    	; 0x152c <consoleIoctl+0x56a>
    * carriage return, or NULL char.
    *------------------------------------------------------------------------*/
   while( (*pc_in != CONSOLE_RETURN_CHAR)
       && (*pc_in != '\0')
       && (*pc_in != c_delim)
       && (c_tokenSizeCount < *pc_bytesRemaining))
    15a2:	41 e0       	ldi	r20, 0x01	; 1
    15a4:	91 e0       	ldi	r25, 0x01	; 1
    15a6:	60 e0       	ldi	r22, 0x00	; 0
    15a8:	70 e0       	ldi	r23, 0x00	; 0

   /*------------------------------------------------------------------------*
    * Replace 'ending' character (either c_delim, '\n', '\0' or the character
    * at (c_maxSize) with null character).
    *------------------------------------------------------------------------*/
   pc_out[c_tokenSizeCount] = '\0';
    15aa:	e6 0f       	add	r30, r22
    15ac:	f7 1f       	adc	r31, r23
    15ae:	10 82       	st	Z, r1
    * Since we are extracting a token decrement *pc_maxSize by the number of
    * characters stored in pc_out. An addition 1 is subtracted for the
    * 'exit' character as well since its not included in the original s_count
    * value.
    *------------------------------------------------------------------------*/
   (*pc_bytesRemaining) = (*pc_bytesRemaining) - c_tokenSizeCount;
    15b0:	84 1b       	sub	r24, r20
    15b2:	a7 ce       	rjmp	.-690    	; 0x1302 <consoleIoctl+0x340>
    * carriage return, or NULL char.
    *------------------------------------------------------------------------*/
   while( (*pc_in != CONSOLE_RETURN_CHAR)
       && (*pc_in != '\0')
       && (*pc_in != c_delim)
       && (c_tokenSizeCount < *pc_bytesRemaining))
    15b4:	42 e0       	ldi	r20, 0x02	; 2
    15b6:	92 e0       	ldi	r25, 0x02	; 2
    15b8:	61 e0       	ldi	r22, 0x01	; 1
    15ba:	70 e0       	ldi	r23, 0x00	; 0
    * Search for delimiting character, if not found stop at max string size
    * carriage return, or NULL char.
    *------------------------------------------------------------------------*/
   while( (*pc_in != CONSOLE_RETURN_CHAR)
       && (*pc_in != '\0')
       && (*pc_in != c_delim)
    15bc:	89 01       	movw	r16, r18
    15be:	f5 cf       	rjmp	.-22     	; 0x15aa <consoleIoctl+0x5e8>
       && (c_tokenSizeCount < *pc_bytesRemaining))
    15c0:	43 e0       	ldi	r20, 0x03	; 3
    15c2:	93 e0       	ldi	r25, 0x03	; 3
    15c4:	62 e0       	ldi	r22, 0x02	; 2
    15c6:	70 e0       	ldi	r23, 0x00	; 0
    * Search for delimiting character, if not found stop at max string size
    * carriage return, or NULL char.
    *------------------------------------------------------------------------*/
   while( (*pc_in != CONSOLE_RETURN_CHAR)
       && (*pc_in != '\0')
       && (*pc_in != c_delim)
    15c8:	89 01       	movw	r16, r18
    15ca:	ef cf       	rjmp	.-34     	; 0x15aa <consoleIoctl+0x5e8>
       && (c_tokenSizeCount < *pc_bytesRemaining))
    15cc:	44 e0       	ldi	r20, 0x04	; 4
    15ce:	94 e0       	ldi	r25, 0x04	; 4
    15d0:	63 e0       	ldi	r22, 0x03	; 3
    15d2:	70 e0       	ldi	r23, 0x00	; 0
    15d4:	f3 cf       	rjmp	.-26     	; 0x15bc <consoleIoctl+0x5fa>
    15d6:	45 e0       	ldi	r20, 0x05	; 5
    15d8:	95 e0       	ldi	r25, 0x05	; 5
    15da:	64 e0       	ldi	r22, 0x04	; 4
    15dc:	70 e0       	ldi	r23, 0x00	; 0
    15de:	ee cf       	rjmp	.-36     	; 0x15bc <consoleIoctl+0x5fa>
    15e0:	46 e0       	ldi	r20, 0x06	; 6
    15e2:	96 e0       	ldi	r25, 0x06	; 6
    15e4:	65 e0       	ldi	r22, 0x05	; 5
    15e6:	70 e0       	ldi	r23, 0x00	; 0
    15e8:	e9 cf       	rjmp	.-46     	; 0x15bc <consoleIoctl+0x5fa>
    15ea:	47 e0       	ldi	r20, 0x07	; 7
    15ec:	97 e0       	ldi	r25, 0x07	; 7
    15ee:	66 e0       	ldi	r22, 0x06	; 6
    15f0:	70 e0       	ldi	r23, 0x00	; 0
    15f2:	e4 cf       	rjmp	.-56     	; 0x15bc <consoleIoctl+0x5fa>
    15f4:	48 e0       	ldi	r20, 0x08	; 8
    15f6:	98 e0       	ldi	r25, 0x08	; 8
    15f8:	67 e0       	ldi	r22, 0x07	; 7
    15fa:	70 e0       	ldi	r23, 0x00	; 0
    15fc:	df cf       	rjmp	.-66     	; 0x15bc <consoleIoctl+0x5fa>
    15fe:	49 e0       	ldi	r20, 0x09	; 9
    1600:	99 e0       	ldi	r25, 0x09	; 9
    1602:	68 e0       	ldi	r22, 0x08	; 8
    1604:	70 e0       	ldi	r23, 0x00	; 0
    1606:	da cf       	rjmp	.-76     	; 0x15bc <consoleIoctl+0x5fa>
    1608:	4a e0       	ldi	r20, 0x0A	; 10
    160a:	9a e0       	ldi	r25, 0x0A	; 10
    160c:	69 e0       	ldi	r22, 0x09	; 9
    160e:	70 e0       	ldi	r23, 0x00	; 0
    1610:	d5 cf       	rjmp	.-86     	; 0x15bc <consoleIoctl+0x5fa>
    1612:	4b e0       	ldi	r20, 0x0B	; 11
    1614:	9b e0       	ldi	r25, 0x0B	; 11
    1616:	6a e0       	ldi	r22, 0x0A	; 10
    1618:	70 e0       	ldi	r23, 0x00	; 0
    161a:	d0 cf       	rjmp	.-96     	; 0x15bc <consoleIoctl+0x5fa>
    161c:	4c e0       	ldi	r20, 0x0C	; 12
    161e:	9c e0       	ldi	r25, 0x0C	; 12
    1620:	6b e0       	ldi	r22, 0x0B	; 11
    1622:	70 e0       	ldi	r23, 0x00	; 0
    1624:	cb cf       	rjmp	.-106    	; 0x15bc <consoleIoctl+0x5fa>
    1626:	4d e0       	ldi	r20, 0x0D	; 13
    1628:	9d e0       	ldi	r25, 0x0D	; 13
    162a:	6c e0       	ldi	r22, 0x0C	; 12
    162c:	70 e0       	ldi	r23, 0x00	; 0
    162e:	c6 cf       	rjmp	.-116    	; 0x15bc <consoleIoctl+0x5fa>
    1630:	4e e0       	ldi	r20, 0x0E	; 14
    1632:	9e e0       	ldi	r25, 0x0E	; 14
    1634:	6d e0       	ldi	r22, 0x0D	; 13
    1636:	70 e0       	ldi	r23, 0x00	; 0
    1638:	c1 cf       	rjmp	.-126    	; 0x15bc <consoleIoctl+0x5fa>
         /*------------------------------------------------------------------*
          * Error too many tokens....
          *------------------------------------------------------------------*/
         return CONSOLE_TOO_MANY_TOKENS;
      }/*End if( (*pc_tokenCount) > CONSOLE_MAX_TOKENS)*/
      else if( c_tokenSize > CONSOLE_MAX_TOKEN_SIZE)
    163a:	3b ef       	ldi	r19, 0xFB	; 251
    163c:	c3 2e       	mov	r12, r19
    163e:	3f ef       	ldi	r19, 0xFF	; 255
    1640:	d3 2e       	mov	r13, r19
    1642:	3f ef       	ldi	r19, 0xFF	; 255
    1644:	e3 2e       	mov	r14, r19
    1646:	3f ef       	ldi	r19, 0xFF	; 255
    1648:	f3 2e       	mov	r15, r19
    164a:	74 ce       	rjmp	.-792    	; 0x1334 <consoleIoctl+0x372>
                               &ac_tok[(*pc_tokenCount)][0],
                               ' ',
                               &c_bytesRemaining,
                               &c_tokenSize);
      (*pc_tokenCount)++;
      if( (*pc_tokenCount) > CONSOLE_MAX_TOKENS)
    164c:	4a ef       	ldi	r20, 0xFA	; 250
    164e:	c4 2e       	mov	r12, r20
    1650:	4f ef       	ldi	r20, 0xFF	; 255
    1652:	d4 2e       	mov	r13, r20
    1654:	4f ef       	ldi	r20, 0xFF	; 255
    1656:	e4 2e       	mov	r14, r20
    1658:	4f ef       	ldi	r20, 0xFF	; 255
    165a:	f4 2e       	mov	r15, r20
    165c:	6b ce       	rjmp	.-810    	; 0x1334 <consoleIoctl+0x372>
    * carriage return, or NULL char.
    *------------------------------------------------------------------------*/
   while( (*pc_in != CONSOLE_RETURN_CHAR)
       && (*pc_in != '\0')
       && (*pc_in != c_delim)
       && (c_tokenSizeCount < *pc_bytesRemaining))
    165e:	4f e0       	ldi	r20, 0x0F	; 15
    1660:	9f e0       	ldi	r25, 0x0F	; 15
    1662:	6e e0       	ldi	r22, 0x0E	; 14
    1664:	70 e0       	ldi	r23, 0x00	; 0
    1666:	aa cf       	rjmp	.-172    	; 0x15bc <consoleIoctl+0x5fa>
    * Search for delimiting character, if not found stop at max string size
    * carriage return, or NULL char.
    *------------------------------------------------------------------------*/
   while( (*pc_in != CONSOLE_RETURN_CHAR)
       && (*pc_in != '\0')
       && (*pc_in != c_delim)
    1668:	41 e0       	ldi	r20, 0x01	; 1
    166a:	91 e0       	ldi	r25, 0x01	; 1
    166c:	60 e0       	ldi	r22, 0x00	; 0
    166e:	70 e0       	ldi	r23, 0x00	; 0
    * tokens, index the pointer to the next character so that we are starting
    * at the first character of the next token on the next call into this
    * function.
    *------------------------------------------------------------------------*/
   if( *pc_in == c_delim)
      pc_in++;
    1670:	0f 5f       	subi	r16, 0xFF	; 255
    1672:	1f 4f       	sbci	r17, 0xFF	; 255
    1674:	9a cf       	rjmp	.-204    	; 0x15aa <consoleIoctl+0x5e8>
   /*------------------------------------------------------------------------*
    * Search for delimiting character, if not found stop at max string size
    * carriage return, or NULL char.
    *------------------------------------------------------------------------*/
   while( (*pc_in != CONSOLE_RETURN_CHAR)
       && (*pc_in != '\0')
    1676:	40 e1       	ldi	r20, 0x10	; 16
    1678:	90 e1       	ldi	r25, 0x10	; 16
    167a:	6f e0       	ldi	r22, 0x0F	; 15
    167c:	70 e0       	ldi	r23, 0x00	; 0
    167e:	9e cf       	rjmp	.-196    	; 0x15bc <consoleIoctl+0x5fa>
       && (*pc_in != c_delim)
       && (c_tokenSizeCount < *pc_bytesRemaining))
   {
      pc_out[c_tokenSizeCount] = *pc_in;
      pc_in++;
    1680:	89 01       	movw	r16, r18
    * Search for delimiting character, if not found stop at max string size
    * carriage return, or NULL char.
    *------------------------------------------------------------------------*/
   while( (*pc_in != CONSOLE_RETURN_CHAR)
       && (*pc_in != '\0')
       && (*pc_in != c_delim)
    1682:	42 e0       	ldi	r20, 0x02	; 2
    1684:	92 e0       	ldi	r25, 0x02	; 2
    1686:	61 e0       	ldi	r22, 0x01	; 1
    1688:	70 e0       	ldi	r23, 0x00	; 0
    168a:	f2 cf       	rjmp	.-28     	; 0x1670 <consoleIoctl+0x6ae>
       && (c_tokenSizeCount < *pc_bytesRemaining))
   {
      pc_out[c_tokenSizeCount] = *pc_in;
      pc_in++;
    168c:	89 01       	movw	r16, r18
    * Search for delimiting character, if not found stop at max string size
    * carriage return, or NULL char.
    *------------------------------------------------------------------------*/
   while( (*pc_in != CONSOLE_RETURN_CHAR)
       && (*pc_in != '\0')
       && (*pc_in != c_delim)
    168e:	43 e0       	ldi	r20, 0x03	; 3
    1690:	93 e0       	ldi	r25, 0x03	; 3
    1692:	62 e0       	ldi	r22, 0x02	; 2
    1694:	70 e0       	ldi	r23, 0x00	; 0
    1696:	ec cf       	rjmp	.-40     	; 0x1670 <consoleIoctl+0x6ae>
       && (c_tokenSizeCount < *pc_bytesRemaining))
   {
      pc_out[c_tokenSizeCount] = *pc_in;
      pc_in++;
    1698:	89 01       	movw	r16, r18
    * Search for delimiting character, if not found stop at max string size
    * carriage return, or NULL char.
    *------------------------------------------------------------------------*/
   while( (*pc_in != CONSOLE_RETURN_CHAR)
       && (*pc_in != '\0')
       && (*pc_in != c_delim)
    169a:	44 e0       	ldi	r20, 0x04	; 4
    169c:	94 e0       	ldi	r25, 0x04	; 4
    169e:	63 e0       	ldi	r22, 0x03	; 3
    16a0:	70 e0       	ldi	r23, 0x00	; 0
    16a2:	e6 cf       	rjmp	.-52     	; 0x1670 <consoleIoctl+0x6ae>
       && (c_tokenSizeCount < *pc_bytesRemaining))
   {
      pc_out[c_tokenSizeCount] = *pc_in;
      pc_in++;
    16a4:	89 01       	movw	r16, r18
    * Search for delimiting character, if not found stop at max string size
    * carriage return, or NULL char.
    *------------------------------------------------------------------------*/
   while( (*pc_in != CONSOLE_RETURN_CHAR)
       && (*pc_in != '\0')
       && (*pc_in != c_delim)
    16a6:	45 e0       	ldi	r20, 0x05	; 5
    16a8:	95 e0       	ldi	r25, 0x05	; 5
    16aa:	64 e0       	ldi	r22, 0x04	; 4
    16ac:	70 e0       	ldi	r23, 0x00	; 0
    16ae:	e0 cf       	rjmp	.-64     	; 0x1670 <consoleIoctl+0x6ae>
       && (c_tokenSizeCount < *pc_bytesRemaining))
   {
      pc_out[c_tokenSizeCount] = *pc_in;
      pc_in++;
    16b0:	89 01       	movw	r16, r18
    * Search for delimiting character, if not found stop at max string size
    * carriage return, or NULL char.
    *------------------------------------------------------------------------*/
   while( (*pc_in != CONSOLE_RETURN_CHAR)
       && (*pc_in != '\0')
       && (*pc_in != c_delim)
    16b2:	46 e0       	ldi	r20, 0x06	; 6
    16b4:	96 e0       	ldi	r25, 0x06	; 6
    16b6:	65 e0       	ldi	r22, 0x05	; 5
    16b8:	70 e0       	ldi	r23, 0x00	; 0
    16ba:	da cf       	rjmp	.-76     	; 0x1670 <consoleIoctl+0x6ae>
       && (c_tokenSizeCount < *pc_bytesRemaining))
   {
      pc_out[c_tokenSizeCount] = *pc_in;
      pc_in++;
    16bc:	89 01       	movw	r16, r18
    * Search for delimiting character, if not found stop at max string size
    * carriage return, or NULL char.
    *------------------------------------------------------------------------*/
   while( (*pc_in != CONSOLE_RETURN_CHAR)
       && (*pc_in != '\0')
       && (*pc_in != c_delim)
    16be:	47 e0       	ldi	r20, 0x07	; 7
    16c0:	97 e0       	ldi	r25, 0x07	; 7
    16c2:	66 e0       	ldi	r22, 0x06	; 6
    16c4:	70 e0       	ldi	r23, 0x00	; 0
    16c6:	d4 cf       	rjmp	.-88     	; 0x1670 <consoleIoctl+0x6ae>
       && (c_tokenSizeCount < *pc_bytesRemaining))
   {
      pc_out[c_tokenSizeCount] = *pc_in;
      pc_in++;
    16c8:	89 01       	movw	r16, r18
    * Search for delimiting character, if not found stop at max string size
    * carriage return, or NULL char.
    *------------------------------------------------------------------------*/
   while( (*pc_in != CONSOLE_RETURN_CHAR)
       && (*pc_in != '\0')
       && (*pc_in != c_delim)
    16ca:	48 e0       	ldi	r20, 0x08	; 8
    16cc:	98 e0       	ldi	r25, 0x08	; 8
    16ce:	67 e0       	ldi	r22, 0x07	; 7
    16d0:	70 e0       	ldi	r23, 0x00	; 0
    16d2:	ce cf       	rjmp	.-100    	; 0x1670 <consoleIoctl+0x6ae>
       && (c_tokenSizeCount < *pc_bytesRemaining))
   {
      pc_out[c_tokenSizeCount] = *pc_in;
      pc_in++;
    16d4:	89 01       	movw	r16, r18
    * Search for delimiting character, if not found stop at max string size
    * carriage return, or NULL char.
    *------------------------------------------------------------------------*/
   while( (*pc_in != CONSOLE_RETURN_CHAR)
       && (*pc_in != '\0')
       && (*pc_in != c_delim)
    16d6:	49 e0       	ldi	r20, 0x09	; 9
    16d8:	99 e0       	ldi	r25, 0x09	; 9
    16da:	68 e0       	ldi	r22, 0x08	; 8
    16dc:	70 e0       	ldi	r23, 0x00	; 0
    16de:	c8 cf       	rjmp	.-112    	; 0x1670 <consoleIoctl+0x6ae>

      case CONSOLE_SET_PROMPT_COLOR:

         if( (i_arguments < CONSOLE_BLACK) || (i_arguments > CONSOLE_WHITE))
         {
            i_return = (int32_t)CONSOLE_INVALID_COLOR;
    16e0:	89 ef       	ldi	r24, 0xF9	; 249
    16e2:	c8 2e       	mov	r12, r24
    16e4:	8f ef       	ldi	r24, 0xFF	; 255
    16e6:	d8 2e       	mov	r13, r24
    16e8:	8f ef       	ldi	r24, 0xFF	; 255
    16ea:	e8 2e       	mov	r14, r24
    16ec:	8f ef       	ldi	r24, 0xFF	; 255
    16ee:	f8 2e       	mov	r15, r24
    16f0:	92 cc       	rjmp	.-1756   	; 0x1016 <consoleIoctl+0x54>
       && (*pc_in != '\0')
       && (*pc_in != c_delim)
       && (c_tokenSizeCount < *pc_bytesRemaining))
   {
      pc_out[c_tokenSizeCount] = *pc_in;
      pc_in++;
    16f2:	89 01       	movw	r16, r18
    * Search for delimiting character, if not found stop at max string size
    * carriage return, or NULL char.
    *------------------------------------------------------------------------*/
   while( (*pc_in != CONSOLE_RETURN_CHAR)
       && (*pc_in != '\0')
       && (*pc_in != c_delim)
    16f4:	4a e0       	ldi	r20, 0x0A	; 10
    16f6:	9a e0       	ldi	r25, 0x0A	; 10
    16f8:	69 e0       	ldi	r22, 0x09	; 9
    16fa:	70 e0       	ldi	r23, 0x00	; 0
    16fc:	b9 cf       	rjmp	.-142    	; 0x1670 <consoleIoctl+0x6ae>
       && (c_tokenSizeCount < *pc_bytesRemaining))
   {
      pc_out[c_tokenSizeCount] = *pc_in;
      pc_in++;
    16fe:	89 01       	movw	r16, r18
    * Search for delimiting character, if not found stop at max string size
    * carriage return, or NULL char.
    *------------------------------------------------------------------------*/
   while( (*pc_in != CONSOLE_RETURN_CHAR)
       && (*pc_in != '\0')
       && (*pc_in != c_delim)
    1700:	4b e0       	ldi	r20, 0x0B	; 11
    1702:	9b e0       	ldi	r25, 0x0B	; 11
    1704:	6a e0       	ldi	r22, 0x0A	; 10
    1706:	70 e0       	ldi	r23, 0x00	; 0
    1708:	b3 cf       	rjmp	.-154    	; 0x1670 <consoleIoctl+0x6ae>
       && (c_tokenSizeCount < *pc_bytesRemaining))
   {
      pc_out[c_tokenSizeCount] = *pc_in;
      pc_in++;
    170a:	89 01       	movw	r16, r18
    * Search for delimiting character, if not found stop at max string size
    * carriage return, or NULL char.
    *------------------------------------------------------------------------*/
   while( (*pc_in != CONSOLE_RETURN_CHAR)
       && (*pc_in != '\0')
       && (*pc_in != c_delim)
    170c:	4c e0       	ldi	r20, 0x0C	; 12
    170e:	9c e0       	ldi	r25, 0x0C	; 12
    1710:	6b e0       	ldi	r22, 0x0B	; 11
    1712:	70 e0       	ldi	r23, 0x00	; 0
    1714:	ad cf       	rjmp	.-166    	; 0x1670 <consoleIoctl+0x6ae>
       && (c_tokenSizeCount < *pc_bytesRemaining))
   {
      pc_out[c_tokenSizeCount] = *pc_in;
      pc_in++;
    1716:	89 01       	movw	r16, r18
    * Search for delimiting character, if not found stop at max string size
    * carriage return, or NULL char.
    *------------------------------------------------------------------------*/
   while( (*pc_in != CONSOLE_RETURN_CHAR)
       && (*pc_in != '\0')
       && (*pc_in != c_delim)
    1718:	4d e0       	ldi	r20, 0x0D	; 13
    171a:	9d e0       	ldi	r25, 0x0D	; 13
    171c:	6c e0       	ldi	r22, 0x0C	; 12
    171e:	70 e0       	ldi	r23, 0x00	; 0
    1720:	a7 cf       	rjmp	.-178    	; 0x1670 <consoleIoctl+0x6ae>
       && (c_tokenSizeCount < *pc_bytesRemaining))
   {
      pc_out[c_tokenSizeCount] = *pc_in;
      pc_in++;
    1722:	89 01       	movw	r16, r18
    * Search for delimiting character, if not found stop at max string size
    * carriage return, or NULL char.
    *------------------------------------------------------------------------*/
   while( (*pc_in != CONSOLE_RETURN_CHAR)
       && (*pc_in != '\0')
       && (*pc_in != c_delim)
    1724:	4e e0       	ldi	r20, 0x0E	; 14
    1726:	9e e0       	ldi	r25, 0x0E	; 14
    1728:	6d e0       	ldi	r22, 0x0D	; 13
    172a:	70 e0       	ldi	r23, 0x00	; 0
    172c:	a1 cf       	rjmp	.-190    	; 0x1670 <consoleIoctl+0x6ae>
    172e:	89 01       	movw	r16, r18
    1730:	40 e1       	ldi	r20, 0x10	; 16
    1732:	90 e1       	ldi	r25, 0x10	; 16
    1734:	6f e0       	ldi	r22, 0x0F	; 15
    1736:	70 e0       	ldi	r23, 0x00	; 0
    1738:	9b cf       	rjmp	.-202    	; 0x1670 <consoleIoctl+0x6ae>
       && (c_tokenSizeCount < *pc_bytesRemaining))
   {
      pc_out[c_tokenSizeCount] = *pc_in;
      pc_in++;
    173a:	89 01       	movw	r16, r18
    * Search for delimiting character, if not found stop at max string size
    * carriage return, or NULL char.
    *------------------------------------------------------------------------*/
   while( (*pc_in != CONSOLE_RETURN_CHAR)
       && (*pc_in != '\0')
       && (*pc_in != c_delim)
    173c:	4f e0       	ldi	r20, 0x0F	; 15
    173e:	9f e0       	ldi	r25, 0x0F	; 15
    1740:	6e e0       	ldi	r22, 0x0E	; 14
    1742:	70 e0       	ldi	r23, 0x00	; 0
    1744:	95 cf       	rjmp	.-214    	; 0x1670 <consoleIoctl+0x6ae>

00001746 <rxComplete>:
   return CONSOLE_PASSED;

}/*End usr_parseMessage*/

static void rxComplete( uint16_t s_byte)
{
    1746:	0f 93       	push	r16
    1748:	1f 93       	push	r17
    174a:	cf 93       	push	r28
    174c:	df 93       	push	r29
    174e:	ec 01       	movw	r28, r24
   uint16_t s_bufferLevel = utl_getBufferFullLevel( gt_consoleDev.t_rxBuffer);
    1750:	80 91 6e 24 	lds	r24, 0x246E
    1754:	90 91 6f 24 	lds	r25, 0x246F
    1758:	0e 94 44 87 	call	0x10e88	; 0x10e88 <utl_getBufferFullLevel>
    175c:	8c 01       	movw	r16, r24
   uint16_t s_bufferSize  = utl_getBufferSize( gt_consoleDev.t_rxBuffer);
    175e:	80 91 6e 24 	lds	r24, 0x246E
    1762:	90 91 6f 24 	lds	r25, 0x246F
    1766:	0e 94 58 87 	call	0x10eb0	; 0x10eb0 <utl_getBufferSize>

   gt_consoleDev.b_rxActive = true;
    176a:	21 e0       	ldi	r18, 0x01	; 1
    176c:	20 93 73 24 	sts	0x2473, r18

   /*------------------------------------------------------------------------*
    * If a backspace has been entered, erase the bytes in the buffer until
    * there is no longer any more data available.
    *------------------------------------------------------------------------*/
   if( (s_byte == CONSOLE_BACKSPACE_CHAR) && (s_bufferLevel > 0))
    1770:	cf 37       	cpi	r28, 0x7F	; 127
    1772:	d1 05       	cpc	r29, r1
    1774:	01 f1       	breq	.+64     	; 0x17b6 <rxComplete+0x70>
       * Remove the last byte in the buffer...
       *---------------------------------------------------------------------*/
      utl_buffEraseTailByte( gt_consoleDev.t_rxBuffer);

   }/*End if( (s_byte == CONSOLE_BACKSPACE_CHAR) && (s_bufferLevel > 0))*/
   else if( s_byte == CONSOLE_RETURN_CHAR)
    1776:	cd 30       	cpi	r28, 0x0D	; 13
    1778:	d1 05       	cpc	r29, r1
    177a:	71 f1       	breq	.+92     	; 0x17d8 <rxComplete+0x92>
       *------------------------------------------------------------------*/
      arb_signal( gt_consoleDev.t_rxBlockingSem);


   }/*End else if( c_byte == CONSOLE_BACKSPACE_CHAR)*/
   else if( (s_bufferLevel < (s_bufferSize - 1)) && (s_byte !=
    177c:	01 97       	sbiw	r24, 0x01	; 1
    177e:	08 17       	cp	r16, r24
    1780:	19 07       	cpc	r17, r25
    1782:	a0 f4       	brcc	.+40     	; 0x17ac <rxComplete+0x66>
    1784:	cf 37       	cpi	r28, 0x7F	; 127
    1786:	d1 05       	cpc	r29, r1
    1788:	89 f0       	breq	.+34     	; 0x17ac <rxComplete+0x66>
   CONSOLE_BACKSPACE_CHAR) && (s_byte != 27)) /*Leave room for NULL char*/
    178a:	cb 31       	cpi	r28, 0x1B	; 27
    178c:	d1 05       	cpc	r29, r1
    178e:	71 f0       	breq	.+28     	; 0x17ac <rxComplete+0x66>
   {

      /*---------------------------------------------------------------------*
       * Echo back received byte....
       *---------------------------------------------------------------------*/
      hal_uartWriteByte( gt_consoleDev.t_uHandle,
    1790:	80 91 71 24 	lds	r24, 0x2471
    1794:	90 91 72 24 	lds	r25, 0x2472
    1798:	6c 2f       	mov	r22, r28
    179a:	0e 94 5f 42 	call	0x84be	; 0x84be <hal_uartWriteByte>

      /*---------------------------------------------------------------------*
       * Fill RX buffer with received bytes until the buffer is full
       * leaving room for the insertion of the NULL character.
       *---------------------------------------------------------------------*/
      utl_writeByte( gt_consoleDev.t_rxBuffer,
    179e:	80 91 6e 24 	lds	r24, 0x246E
    17a2:	90 91 6f 24 	lds	r25, 0x246F
    17a6:	6c 2f       	mov	r22, r28
    17a8:	0e 94 80 87 	call	0x10f00	; 0x10f00 <utl_writeByte>
                     s_byte);

   }

}/*End rxComplete*/
    17ac:	df 91       	pop	r29
    17ae:	cf 91       	pop	r28
    17b0:	1f 91       	pop	r17
    17b2:	0f 91       	pop	r16
    17b4:	08 95       	ret

   /*------------------------------------------------------------------------*
    * If a backspace has been entered, erase the bytes in the buffer until
    * there is no longer any more data available.
    *------------------------------------------------------------------------*/
   if( (s_byte == CONSOLE_BACKSPACE_CHAR) && (s_bufferLevel > 0))
    17b6:	01 15       	cp	r16, r1
    17b8:	11 05       	cpc	r17, r1
    17ba:	01 f3       	breq	.-64     	; 0x177c <rxComplete+0x36>
   {
      /*---------------------------------------------------------------------*
       * Echo back received byte- in this case the backspace character.
       *---------------------------------------------------------------------*/
      hal_uartWriteByte( gt_consoleDev.t_uHandle,
    17bc:	80 91 71 24 	lds	r24, 0x2471
    17c0:	90 91 72 24 	lds	r25, 0x2472
    17c4:	6f e7       	ldi	r22, 0x7F	; 127
    17c6:	0e 94 5f 42 	call	0x84be	; 0x84be <hal_uartWriteByte>
                         s_byte);

      /*---------------------------------------------------------------------*
       * Remove the last byte in the buffer...
       *---------------------------------------------------------------------*/
      utl_buffEraseTailByte( gt_consoleDev.t_rxBuffer);
    17ca:	80 91 6e 24 	lds	r24, 0x246E
    17ce:	90 91 6f 24 	lds	r25, 0x246F
    17d2:	0e 94 f0 87 	call	0x10fe0	; 0x10fe0 <utl_buffEraseTailByte>
    17d6:	ea cf       	rjmp	.-44     	; 0x17ac <rxComplete+0x66>
   {

      /*---------------------------------------------------------------------*
       * Echo back received byte
       *---------------------------------------------------------------------*/
      hal_uartWriteByte( gt_consoleDev.t_uHandle,
    17d8:	80 91 71 24 	lds	r24, 0x2471
    17dc:	90 91 72 24 	lds	r25, 0x2472
    17e0:	6d e0       	ldi	r22, 0x0D	; 13
    17e2:	0e 94 5f 42 	call	0x84be	; 0x84be <hal_uartWriteByte>
                         s_byte);

      /*------------------------------------------------------------------*
       * Write new line character out uart interface
       *------------------------------------------------------------------*/
      hal_uartWriteByte( gt_consoleDev.t_uHandle,
    17e6:	80 91 71 24 	lds	r24, 0x2471
    17ea:	90 91 72 24 	lds	r25, 0x2472
    17ee:	6a e0       	ldi	r22, 0x0A	; 10
    17f0:	0e 94 5f 42 	call	0x84be	; 0x84be <hal_uartWriteByte>
                         '\n');

      gt_consoleDev.b_rxActive = false;
    17f4:	10 92 73 24 	sts	0x2473, r1

      /*------------------------------------------------------------------*
       * Disable the receive interrupt until the data has been handled.
       *------------------------------------------------------------------*/
      hal_disableUartRxInt( gt_consoleDev.t_uHandle);
    17f8:	80 91 71 24 	lds	r24, 0x2471
    17fc:	90 91 72 24 	lds	r25, 0x2472
    1800:	0e 94 32 42 	call	0x8464	; 0x8464 <hal_disableUartRxInt>

      /*------------------------------------------------------------------*
       * Add a the NULL character to the end of the buffer - this is for
       * data parsing purposes only.
       *------------------------------------------------------------------*/
      utl_writeByte( gt_consoleDev.t_rxBuffer,
    1804:	80 91 6e 24 	lds	r24, 0x246E
    1808:	90 91 6f 24 	lds	r25, 0x246F
    180c:	60 e0       	ldi	r22, 0x00	; 0
    180e:	0e 94 80 87 	call	0x10f00	; 0x10f00 <utl_writeByte>

      /*------------------------------------------------------------------*
       * Signal any waiting threads that a carriage return has been
       * received.
       *------------------------------------------------------------------*/
      arb_signal( gt_consoleDev.t_rxBlockingSem);
    1812:	80 91 6c 24 	lds	r24, 0x246C
    1816:	90 91 6d 24 	lds	r25, 0x246D
    181a:	0e 94 22 7b 	call	0xf644	; 0xf644 <arb_signal>
    181e:	c6 cf       	rjmp	.-116    	; 0x17ac <rxComplete+0x66>

00001820 <consoleRead>:
}/*End consoleOpen*/

static int16_t consoleRead( t_DEVHANDLE t_handle,
                            int8_t *pc_buff,
                            uint16_t s_size)
{
    1820:	cf 92       	push	r12
    1822:	df 92       	push	r13
    1824:	ef 92       	push	r14
    1826:	ff 92       	push	r15
    1828:	0f 93       	push	r16
    182a:	1f 93       	push	r17
    182c:	cf 93       	push	r28
    182e:	df 93       	push	r29
    1830:	0f 92       	push	r0
    1832:	0f 92       	push	r0
    1834:	cd b7       	in	r28, 0x3d	; 61
    1836:	de b7       	in	r29, 0x3e	; 62
    1838:	89 83       	std	Y+1, r24	; 0x01
    183a:	9a 83       	std	Y+2, r25	; 0x02
    183c:	6b 01       	movw	r12, r22
    183e:	7a 01       	movw	r14, r20
   int16_t s_bufferLevel = 0;

   /*------------------------------------------------------------------------*
    * We are going to access global memory or a register, so perform lock
    *------------------------------------------------------------------------*/
   arb_wait( gt_consoleDev.t_rxMutex,
    1840:	80 91 68 24 	lds	r24, 0x2468
    1844:	90 91 69 24 	lds	r25, 0x2469
    1848:	60 e0       	ldi	r22, 0x00	; 0
    184a:	0e 94 69 7e 	call	0xfcd2	; 0xfcd2 <arb_wait>
             0);

   /*------------------------------------------------------------------------*
    * Wait for data to be available in the RX buffer.
    *------------------------------------------------------------------------*/
   arb_wait( gt_consoleDev.t_rxBlockingSem,
    184e:	80 91 6c 24 	lds	r24, 0x246C
    1852:	90 91 6d 24 	lds	r25, 0x246D
    1856:	60 e0       	ldi	r22, 0x00	; 0
    1858:	0e 94 69 7e 	call	0xfcd2	; 0xfcd2 <arb_wait>
             0);

   /*------------------------------------------------------------------------*
    * Level plus an extra NULL character.
    *------------------------------------------------------------------------*/
   s_bufferLevel = utl_getBufferFullLevel( gt_consoleDev.t_rxBuffer);
    185c:	80 91 6e 24 	lds	r24, 0x246E
    1860:	90 91 6f 24 	lds	r25, 0x246F
    1864:	0e 94 44 87 	call	0x10e88	; 0x10e88 <utl_getBufferFullLevel>
    1868:	8c 01       	movw	r16, r24
   /*------------------------------------------------------------------------*
    * Can the user-space buffer hold all the data plus the NULL character?
    *------------------------------------------------------------------------*/
   if( s_bufferLevel > s_size)
   {
      ult_resetBuffer( gt_consoleDev.t_rxBuffer);
    186a:	80 91 6e 24 	lds	r24, 0x246E
    186e:	90 91 6f 24 	lds	r25, 0x246F
   s_bufferLevel = utl_getBufferFullLevel( gt_consoleDev.t_rxBuffer);

   /*------------------------------------------------------------------------*
    * Can the user-space buffer hold all the data plus the NULL character?
    *------------------------------------------------------------------------*/
   if( s_bufferLevel > s_size)
    1872:	e0 16       	cp	r14, r16
    1874:	f1 06       	cpc	r15, r17
    1876:	10 f1       	brcs	.+68     	; 0x18bc <consoleRead+0x9c>
      arb_signal( gt_consoleDev.t_rxMutex);
      return (int16_t)ARB_READ_ERROR;

   }/*End if( s_bufferLevel > s_size)*/

   utl_readBlock( gt_consoleDev.t_rxBuffer,
    1878:	b6 01       	movw	r22, r12
    187a:	a8 01       	movw	r20, r16
    187c:	0e 94 b0 88 	call	0x11160	; 0x11160 <utl_readBlock>
   /*------------------------------------------------------------------------*
    * In order to treat the buffer as if its linear (when using the ioctl
    * command 'CONSOLE_PARSE_CMD_LINE') we need to reset the pointers each
    * time we read its contents.
    *------------------------------------------------------------------------*/
   ult_resetBuffer( gt_consoleDev.t_rxBuffer);
    1880:	80 91 6e 24 	lds	r24, 0x246E
    1884:	90 91 6f 24 	lds	r25, 0x246F
    1888:	0e 94 25 88 	call	0x1104a	; 0x1104a <ult_resetBuffer>

   hal_enableUartRxInt( gt_consoleDev.t_uHandle);
    188c:	80 91 71 24 	lds	r24, 0x2471
    1890:	90 91 72 24 	lds	r25, 0x2472
    1894:	0e 94 fc 41 	call	0x83f8	; 0x83f8 <hal_enableUartRxInt>

   /*------------------------------------------------------------------------*
    * Release the lock
    *------------------------------------------------------------------------*/
   arb_signal( gt_consoleDev.t_rxMutex);
    1898:	80 91 68 24 	lds	r24, 0x2468
    189c:	90 91 69 24 	lds	r25, 0x2469
    18a0:	0e 94 22 7b 	call	0xf644	; 0xf644 <arb_signal>

   return s_bufferLevel;

}/*End consoleRead*/
    18a4:	c8 01       	movw	r24, r16
    18a6:	0f 90       	pop	r0
    18a8:	0f 90       	pop	r0
    18aa:	df 91       	pop	r29
    18ac:	cf 91       	pop	r28
    18ae:	1f 91       	pop	r17
    18b0:	0f 91       	pop	r16
    18b2:	ff 90       	pop	r15
    18b4:	ef 90       	pop	r14
    18b6:	df 90       	pop	r13
    18b8:	cf 90       	pop	r12
    18ba:	08 95       	ret
   /*------------------------------------------------------------------------*
    * Can the user-space buffer hold all the data plus the NULL character?
    *------------------------------------------------------------------------*/
   if( s_bufferLevel > s_size)
   {
      ult_resetBuffer( gt_consoleDev.t_rxBuffer);
    18bc:	0e 94 25 88 	call	0x1104a	; 0x1104a <ult_resetBuffer>

      hal_enableUartRxInt( gt_consoleDev.t_uHandle);
    18c0:	80 91 71 24 	lds	r24, 0x2471
    18c4:	90 91 72 24 	lds	r25, 0x2472
    18c8:	0e 94 fc 41 	call	0x83f8	; 0x83f8 <hal_enableUartRxInt>

      /*---------------------------------------------------------------------*
       * Release the lock
       *---------------------------------------------------------------------*/
      arb_signal( gt_consoleDev.t_rxMutex);
    18cc:	80 91 68 24 	lds	r24, 0x2468
    18d0:	90 91 69 24 	lds	r25, 0x2469
    18d4:	0e 94 22 7b 	call	0xf644	; 0xf644 <arb_signal>
    18d8:	04 ef       	ldi	r16, 0xF4	; 244
    18da:	1f ef       	ldi	r17, 0xFF	; 255
    18dc:	e3 cf       	rjmp	.-58     	; 0x18a4 <consoleRead+0x84>

000018de <drv_consoleInit>:
   return t_err;

}/*End consoleClose*/

t_error drv_consoleInit( t_consoleSetup t_setup)
{
    18de:	af 92       	push	r10
    18e0:	bf 92       	push	r11
    18e2:	cf 92       	push	r12
    18e4:	df 92       	push	r13
    18e6:	ef 92       	push	r14
    18e8:	ff 92       	push	r15
    18ea:	0f 93       	push	r16
    18ec:	1f 93       	push	r17
    18ee:	cf 93       	push	r28
    18f0:	df 93       	push	r29
    18f2:	cd b7       	in	r28, 0x3d	; 61
    18f4:	de b7       	in	r29, 0x3e	; 62
    18f6:	64 97       	sbiw	r28, 0x14	; 20
    18f8:	cd bf       	out	0x3d, r28	; 61
    18fa:	de bf       	out	0x3e, r29	; 62
    18fc:	4f 87       	std	Y+15, r20	; 0x0f
    18fe:	58 8b       	std	Y+16, r21	; 0x10
    1900:	69 8b       	std	Y+17, r22	; 0x11
    1902:	7a 8b       	std	Y+18, r23	; 0x12
    1904:	8b 8b       	std	Y+19, r24	; 0x13
    1906:	9c 8b       	std	Y+20, r25	; 0x14
    * Global Inline functions
    *------------------------------------------------------------------------*/
   static inline t_deviceId __attribute__((always_inline))
   arb_createDevId( uint8_t c_major, uint8_t c_minor)
   {
      return( ((uint16_t)c_major << 8) | (uint16_t)c_minor);
    1908:	79 2f       	mov	r23, r25
   t_uartConfig t_uConf;

   /*------------------------------------------------------------------------*
    * Make sure the kernel is aware that a new device has been loaded.
    *------------------------------------------------------------------------*/
   t_err = arb_registerDevice( "consoleDevice0",
    190a:	8b e2       	ldi	r24, 0x2B	; 43
    190c:	90 e2       	ldi	r25, 0x20	; 32
    190e:	60 e0       	ldi	r22, 0x00	; 0
    1910:	4a e3       	ldi	r20, 0x3A	; 58
    1912:	50 e2       	ldi	r21, 0x20	; 32
    1914:	0e 94 2a 6f 	call	0xde54	; 0xde54 <arb_registerDevice>
    1918:	18 2f       	mov	r17, r24
                               arb_createDevId( t_setup.c_majorNum, 0),
                               &gt_consoleDevOps);

   if( t_err < 0)
    191a:	87 fd       	sbrc	r24, 7
    191c:	91 c0       	rjmp	.+290    	; 0x1a40 <drv_consoleInit+0x162>

   /*------------------------------------------------------------------------*
    * Request a semaphore from the kernel. Since the signal port is a shared
    * resource we need to have all actions on it be mutually exclusive.
    *------------------------------------------------------------------------*/
   gt_consoleDev.t_rxMutex = arb_semaphoreCreate( MUTEX);
    191e:	82 e0       	ldi	r24, 0x02	; 2
    1920:	0e 94 07 79 	call	0xf20e	; 0xf20e <arb_semaphoreCreate>
    1924:	80 93 68 24 	sts	0x2468, r24
    1928:	90 93 69 24 	sts	0x2469, r25

   if( gt_consoleDev.t_rxMutex < 0)
    192c:	80 91 68 24 	lds	r24, 0x2468
    1930:	90 91 69 24 	lds	r25, 0x2469
    1934:	97 fd       	sbrc	r25, 7
    1936:	7b c0       	rjmp	.+246    	; 0x1a2e <drv_consoleInit+0x150>

   /*------------------------------------------------------------------------*
    * Request a semaphore from the kernel. We will use this semaphore for
    * signaling the user-space program when the RX buffer has data.
    *------------------------------------------------------------------------*/
   gt_consoleDev.t_rxBlockingSem = arb_semaphoreCreate( COUNTING);
    1938:	80 e0       	ldi	r24, 0x00	; 0
    193a:	0e 94 07 79 	call	0xf20e	; 0xf20e <arb_semaphoreCreate>
    193e:	80 93 6c 24 	sts	0x246C, r24
    1942:	90 93 6d 24 	sts	0x246D, r25

   if( gt_consoleDev.t_rxBlockingSem < 0)
    1946:	80 91 6c 24 	lds	r24, 0x246C
    194a:	90 91 6d 24 	lds	r25, 0x246D
    194e:	97 fd       	sbrc	r25, 7
    1950:	86 c0       	rjmp	.+268    	; 0x1a5e <drv_consoleInit+0x180>
   }/*End if( gt_consoleDev.t_rxBlockingSem < 0)*/

   /*------------------------------------------------------------------------*
    * Grab handle to console UART
    *------------------------------------------------------------------------*/
   gt_consoleDev.t_uHandle = hal_requestUartChannel( t_setup.c_uartId);
    1952:	8b 89       	ldd	r24, Y+19	; 0x13
    1954:	0e 94 6c 44 	call	0x88d8	; 0x88d8 <hal_requestUartChannel>
    1958:	80 93 71 24 	sts	0x2471, r24
    195c:	90 93 72 24 	sts	0x2472, r25
   if( gt_consoleDev.t_uHandle < 0)
    1960:	80 91 71 24 	lds	r24, 0x2471
    1964:	90 91 72 24 	lds	r25, 0x2472
    1968:	97 fd       	sbrc	r25, 7
    196a:	88 c0       	rjmp	.+272    	; 0x1a7c <drv_consoleInit+0x19e>
   {
      t_err = ARB_HAL_ERROR;
      goto failed4;
   }

   t_uConf.t_comMd = ASYNC;
    196c:	19 82       	std	Y+1, r1	; 0x01
   t_uConf.t_charSz = CHAR_8BIT;
    196e:	83 e0       	ldi	r24, 0x03	; 3
    1970:	8a 83       	std	Y+2, r24	; 0x02
   t_uConf.t_parityMd = NO_PARITY;
    1972:	1b 82       	std	Y+3, r1	; 0x03
   t_uConf.t_stopBitMd = ONE_STOP_BIT;
    1974:	1c 82       	std	Y+4, r1	; 0x04
   t_uConf.i_baudRate = t_setup.i_baudRate;
    1976:	8f 85       	ldd	r24, Y+15	; 0x0f
    1978:	98 89       	ldd	r25, Y+16	; 0x10
    197a:	a9 89       	ldd	r26, Y+17	; 0x11
    197c:	ba 89       	ldd	r27, Y+18	; 0x12
    197e:	8d 83       	std	Y+5, r24	; 0x05
    1980:	9e 83       	std	Y+6, r25	; 0x06
    1982:	af 83       	std	Y+7, r26	; 0x07
    1984:	b8 87       	std	Y+8, r27	; 0x08
   t_uConf.b_enRxDma = false;
    1986:	1a 86       	std	Y+10, r1	; 0x0a
   t_uConf.b_enTxDma = false;
    1988:	19 86       	std	Y+9, r1	; 0x09
   t_uConf.pf_rxCallBack = &rxComplete;
    198a:	83 ea       	ldi	r24, 0xA3	; 163
    198c:	9b e0       	ldi	r25, 0x0B	; 11
    198e:	8b 87       	std	Y+11, r24	; 0x0b
    1990:	9c 87       	std	Y+12, r25	; 0x0c
   /*------------------------------------------------------------------------*
    * By setting the tx call-back to NULL, all data transfers over the uart
    * are performed "in-place".
    *------------------------------------------------------------------------*/
   t_uConf.pf_txCallBack = NULL;
    1992:	1d 86       	std	Y+13, r1	; 0x0d
    1994:	1e 86       	std	Y+14, r1	; 0x0e

   /*------------------------------------------------------------------------*
    * Configure console UART
    *------------------------------------------------------------------------*/
   if( hal_configureUartChannel( gt_consoleDev.t_uHandle,
    1996:	80 91 71 24 	lds	r24, 0x2471
    199a:	90 91 72 24 	lds	r25, 0x2472
    199e:	aa 24       	eor	r10, r10
    19a0:	73 e0       	ldi	r23, 0x03	; 3
    19a2:	b7 2e       	mov	r11, r23
    19a4:	cc 24       	eor	r12, r12
    19a6:	dd 24       	eor	r13, r13
    19a8:	ed 80       	ldd	r14, Y+5	; 0x05
    19aa:	fe 80       	ldd	r15, Y+6	; 0x06
    19ac:	0f 81       	ldd	r16, Y+7	; 0x07
    19ae:	18 85       	ldd	r17, Y+8	; 0x08
    19b0:	20 e0       	ldi	r18, 0x00	; 0
    19b2:	30 e0       	ldi	r19, 0x00	; 0
    19b4:	4b 85       	ldd	r20, Y+11	; 0x0b
    19b6:	5c 85       	ldd	r21, Y+12	; 0x0c
    19b8:	6d 85       	ldd	r22, Y+13	; 0x0d
    19ba:	7e 85       	ldd	r23, Y+14	; 0x0e
    19bc:	0e 94 b7 46 	call	0x8d6e	; 0x8d6e <hal_configureUartChannel>
    19c0:	87 fd       	sbrc	r24, 7
    19c2:	5e c0       	rjmp	.+188    	; 0x1a80 <drv_consoleInit+0x1a2>
   /*------------------------------------------------------------------------*
    * Allocate RX buffer of size = A*B1, where A = the max number of
    * possible tokens, B = the size of each token including a terminating
    * character, and 1 byte for the character that ends the string.
    *------------------------------------------------------------------------*/
   gt_consoleDev.t_rxBuffer = utl_createBuffer( CONSOLE_MAX_TOKENS*
    19c4:	81 e7       	ldi	r24, 0x71	; 113
    19c6:	90 e0       	ldi	r25, 0x00	; 0
    19c8:	0e 94 5e 88 	call	0x110bc	; 0x110bc <utl_createBuffer>
    19cc:	80 93 6e 24 	sts	0x246E, r24
    19d0:	90 93 6f 24 	sts	0x246F, r25
   CONSOLE_MAX_TOKEN_SIZE + 1);
   if( gt_consoleDev.t_rxBuffer < 0)
    19d4:	80 91 6e 24 	lds	r24, 0x246E
    19d8:	90 91 6f 24 	lds	r25, 0x246F
    19dc:	97 fd       	sbrc	r25, 7
    19de:	4c c0       	rjmp	.+152    	; 0x1a78 <drv_consoleInit+0x19a>

   /*------------------------------------------------------------------------*
    * Request a semaphore from the kernel. Since the signal port is a shared
    * resource we need to have all actions on it be mutually exclusive.
    *------------------------------------------------------------------------*/
   gt_consoleDev.t_txMutex = arb_semaphoreCreate( MUTEX);
    19e0:	82 e0       	ldi	r24, 0x02	; 2
    19e2:	0e 94 07 79 	call	0xf20e	; 0xf20e <arb_semaphoreCreate>
    19e6:	80 93 6a 24 	sts	0x246A, r24
    19ea:	90 93 6b 24 	sts	0x246B, r25

   if( gt_consoleDev.t_txMutex < 0)
    19ee:	80 91 6a 24 	lds	r24, 0x246A
    19f2:	90 91 6b 24 	lds	r25, 0x246B
    19f6:	97 ff       	sbrs	r25, 7
    19f8:	45 c0       	rjmp	.+138    	; 0x1a84 <drv_consoleInit+0x1a6>
   {
      t_err = (t_error)gt_consoleDev.t_txMutex;
    19fa:	80 91 6a 24 	lds	r24, 0x246A
    19fe:	90 91 6b 24 	lds	r25, 0x246B
    1a02:	18 2f       	mov	r17, r24

   return ARB_PASSED;

failed6:

   utl_destroyBuffer( gt_consoleDev.t_rxBuffer);
    1a04:	80 91 6e 24 	lds	r24, 0x246E
    1a08:	90 91 6f 24 	lds	r25, 0x246F
    1a0c:	0e 94 3d 88 	call	0x1107a	; 0x1107a <utl_destroyBuffer>

failed5:

   hal_releaseUartChannel( gt_consoleDev.t_uHandle);
    1a10:	20 91 71 24 	lds	r18, 0x2471
    1a14:	30 91 72 24 	lds	r19, 0x2472
    1a18:	c9 01       	movw	r24, r18
    1a1a:	0e 94 d1 45 	call	0x8ba2	; 0x8ba2 <hal_releaseUartChannel>

failed4:

   arb_semaphoreDestroy( gt_consoleDev.t_rxBlockingSem);
    1a1e:	20 91 6c 24 	lds	r18, 0x246C
    1a22:	30 91 6d 24 	lds	r19, 0x246D
    1a26:	c9 01       	movw	r24, r18
    1a28:	0e 94 90 78 	call	0xf120	; 0xf120 <arb_semaphoreDestroy>
    1a2c:	1d c0       	rjmp	.+58     	; 0x1a68 <drv_consoleInit+0x18a>
    *------------------------------------------------------------------------*/
   gt_consoleDev.t_rxMutex = arb_semaphoreCreate( MUTEX);

   if( gt_consoleDev.t_rxMutex < 0)
   {
      t_err = (t_error)gt_consoleDev.t_rxMutex;
    1a2e:	80 91 68 24 	lds	r24, 0x2468
    1a32:	90 91 69 24 	lds	r25, 0x2469
    1a36:	18 2f       	mov	r17, r24

   arb_semaphoreDestroy( gt_consoleDev.t_rxMutex);

failed2:

   arb_destroyDevice( "consoleDevice0");
    1a38:	8b e2       	ldi	r24, 0x2B	; 43
    1a3a:	90 e2       	ldi	r25, 0x20	; 32
    1a3c:	0e 94 b1 6e 	call	0xdd62	; 0xdd62 <arb_destroyDevice>

failed1:

   return t_err;

}/*End drv_consoleInit*/
    1a40:	81 2f       	mov	r24, r17
    1a42:	64 96       	adiw	r28, 0x14	; 20
    1a44:	cd bf       	out	0x3d, r28	; 61
    1a46:	de bf       	out	0x3e, r29	; 62
    1a48:	df 91       	pop	r29
    1a4a:	cf 91       	pop	r28
    1a4c:	1f 91       	pop	r17
    1a4e:	0f 91       	pop	r16
    1a50:	ff 90       	pop	r15
    1a52:	ef 90       	pop	r14
    1a54:	df 90       	pop	r13
    1a56:	cf 90       	pop	r12
    1a58:	bf 90       	pop	r11
    1a5a:	af 90       	pop	r10
    1a5c:	08 95       	ret
    *------------------------------------------------------------------------*/
   gt_consoleDev.t_rxBlockingSem = arb_semaphoreCreate( COUNTING);

   if( gt_consoleDev.t_rxBlockingSem < 0)
   {
      t_err = (t_error)gt_consoleDev.t_rxBlockingSem;
    1a5e:	80 91 6c 24 	lds	r24, 0x246C
    1a62:	90 91 6d 24 	lds	r25, 0x246D
    1a66:	18 2f       	mov	r17, r24

   arb_semaphoreDestroy( gt_consoleDev.t_rxBlockingSem);

failed3:

   arb_semaphoreDestroy( gt_consoleDev.t_rxMutex);
    1a68:	20 91 68 24 	lds	r18, 0x2468
    1a6c:	30 91 69 24 	lds	r19, 0x2469
    1a70:	c9 01       	movw	r24, r18
    1a72:	0e 94 90 78 	call	0xf120	; 0xf120 <arb_semaphoreDestroy>
    1a76:	e0 cf       	rjmp	.-64     	; 0x1a38 <drv_consoleInit+0x15a>
    *------------------------------------------------------------------------*/
   gt_consoleDev.t_rxBuffer = utl_createBuffer( CONSOLE_MAX_TOKENS*
   CONSOLE_MAX_TOKEN_SIZE + 1);
   if( gt_consoleDev.t_rxBuffer < 0)
   {
      t_err = ARB_OUT_OF_HEAP;
    1a78:	1f ef       	ldi	r17, 0xFF	; 255
    1a7a:	ca cf       	rjmp	.-108    	; 0x1a10 <drv_consoleInit+0x132>
    * Grab handle to console UART
    *------------------------------------------------------------------------*/
   gt_consoleDev.t_uHandle = hal_requestUartChannel( t_setup.c_uartId);
   if( gt_consoleDev.t_uHandle < 0)
   {
      t_err = ARB_HAL_ERROR;
    1a7c:	16 ef       	ldi	r17, 0xF6	; 246
    1a7e:	cf cf       	rjmp	.-98     	; 0x1a1e <drv_consoleInit+0x140>
    * Configure console UART
    *------------------------------------------------------------------------*/
   if( hal_configureUartChannel( gt_consoleDev.t_uHandle,
                                 t_uConf) < 0)
   {
      t_err = ARB_HAL_ERROR;
    1a80:	16 ef       	ldi	r17, 0xF6	; 246
    1a82:	c6 cf       	rjmp	.-116    	; 0x1a10 <drv_consoleInit+0x132>
   }/*End if( gt_consoleDev.t_txMutex < 0)*/

   /*------------------------------------------------------------------------*
    * We don't have any users attached to this device
    *------------------------------------------------------------------------*/
   gt_consoleDev.c_numUsers = 0;
    1a84:	10 92 70 24 	sts	0x2470, r1
   /*------------------------------------------------------------------------*
    * This variable is used as a means of blocking the TX register empty
    * interrupt from sending a byte of data out of the uart interface while
    * the driver is currently receiving data over the user interface.
    *------------------------------------------------------------------------*/
   gt_consoleDev.b_rxActive = false;
    1a88:	10 92 73 24 	sts	0x2473, r1

   /*------------------------------------------------------------------------*
    * Set the default colors...
    *------------------------------------------------------------------------*/
   gt_consoleDev.c_cmdPromptColor = CONSOLE_GREEN;
    1a8c:	82 e3       	ldi	r24, 0x32	; 50
    1a8e:	80 93 74 24 	sts	0x2474, r24
   gt_consoleDev.c_fgColor = CONSOLE_WHITE;
    1a92:	87 e3       	ldi	r24, 0x37	; 55
    1a94:	80 93 75 24 	sts	0x2475, r24

   /*------------------------------------------------------------------------*
    * Set the default prompt working directory.
    *------------------------------------------------------------------------*/
   sprintf( gt_consoleDev.ac_dirName, "/");
    1a98:	8f e2       	ldi	r24, 0x2F	; 47
    1a9a:	90 e0       	ldi	r25, 0x00	; 0
    1a9c:	80 93 76 24 	sts	0x2476, r24
    1aa0:	90 93 77 24 	sts	0x2477, r25

   return ARB_PASSED;
    1aa4:	10 e0       	ldi	r17, 0x00	; 0
    1aa6:	cc cf       	rjmp	.-104    	; 0x1a40 <drv_consoleInit+0x162>

00001aa8 <drv_consoleExit>:
 * Remove the device from the system
 *---------------------------------------------------------------------------*/
void drv_consoleExit( void)
{

   if( gt_consoleDev.t_rxMutex != 0) /*If created... destroy*/
    1aa8:	80 91 68 24 	lds	r24, 0x2468
    1aac:	90 91 69 24 	lds	r25, 0x2469
    1ab0:	00 97       	sbiw	r24, 0x00	; 0
    1ab2:	09 f4       	brne	.+2      	; 0x1ab6 <drv_consoleExit+0xe>
    1ab4:	08 95       	ret
   {

      utl_destroyBuffer( gt_consoleDev.t_rxBuffer);
    1ab6:	80 91 6e 24 	lds	r24, 0x246E
    1aba:	90 91 6f 24 	lds	r25, 0x246F
    1abe:	0e 94 3d 88 	call	0x1107a	; 0x1107a <utl_destroyBuffer>
      hal_releaseUartChannel( gt_consoleDev.t_uHandle);
    1ac2:	80 91 71 24 	lds	r24, 0x2471
    1ac6:	90 91 72 24 	lds	r25, 0x2472
    1aca:	0e 94 d1 45 	call	0x8ba2	; 0x8ba2 <hal_releaseUartChannel>
      arb_semaphoreDestroy( gt_consoleDev.t_rxBlockingSem);
    1ace:	80 91 6c 24 	lds	r24, 0x246C
    1ad2:	90 91 6d 24 	lds	r25, 0x246D
    1ad6:	0e 94 90 78 	call	0xf120	; 0xf120 <arb_semaphoreDestroy>
      arb_semaphoreDestroy( gt_consoleDev.t_rxMutex);
    1ada:	80 91 68 24 	lds	r24, 0x2468
    1ade:	90 91 69 24 	lds	r25, 0x2469
    1ae2:	0e 94 90 78 	call	0xf120	; 0xf120 <arb_semaphoreDestroy>
      arb_semaphoreDestroy( gt_consoleDev.t_txMutex);
    1ae6:	80 91 6a 24 	lds	r24, 0x246A
    1aea:	90 91 6b 24 	lds	r25, 0x246B
    1aee:	0e 94 90 78 	call	0xf120	; 0xf120 <arb_semaphoreDestroy>
      arb_destroyDevice( "consoleDevice0");
    1af2:	8b e2       	ldi	r24, 0x2B	; 43
    1af4:	90 e2       	ldi	r25, 0x20	; 32
    1af6:	0e 94 b1 6e 	call	0xdd62	; 0xdd62 <arb_destroyDevice>

      memset( (void *)&gt_consoleDev, 0, sizeof( gt_consoleDev));
    1afa:	8e e1       	ldi	r24, 0x1E	; 30
    1afc:	e8 e6       	ldi	r30, 0x68	; 104
    1afe:	f4 e2       	ldi	r31, 0x24	; 36
    1b00:	df 01       	movw	r26, r30
    1b02:	1d 92       	st	X+, r1
    1b04:	8a 95       	dec	r24
    1b06:	e9 f7       	brne	.-6      	; 0x1b02 <drv_consoleExit+0x5a>
    1b08:	08 95       	ret

00001b0a <sdClose>:

/*---------------------------------------------------------------------------*
 * Remove this particular file attached to this device
 *---------------------------------------------------------------------------*/
t_error sdClose( t_DEVHANDLE t_dev)
{
    1b0a:	0f 93       	push	r16
    1b0c:	1f 93       	push	r17
    1b0e:	cf 93       	push	r28
    1b10:	df 93       	push	r29
    1b12:	0f 92       	push	r0
    1b14:	0f 92       	push	r0
    1b16:	cd b7       	in	r28, 0x3d	; 61
    1b18:	de b7       	in	r29, 0x3e	; 62
    1b1a:	89 83       	std	Y+1, r24	; 0x01
    1b1c:	9a 83       	std	Y+2, r25	; 0x02
   t_devHandle *pt_dev = (t_devHandle *)t_dev;
    1b1e:	09 81       	ldd	r16, Y+1	; 0x01
    1b20:	1a 81       	ldd	r17, Y+2	; 0x02
   bool b_status;

   /*------------------------------------------------------------------------*
    * We are going to access global memory or a register, so perform lock
    *------------------------------------------------------------------------*/
   arb_wait( gt_sdDev.t_mutex,
    1b22:	80 91 86 24 	lds	r24, 0x2486
    1b26:	90 91 87 24 	lds	r25, 0x2487
    1b2a:	60 e0       	ldi	r22, 0x00	; 0
    1b2c:	0e 94 69 7e 	call	0xfcd2	; 0xfcd2 <arb_wait>
             0);

   gt_sdDev.c_numUsers--;
    1b30:	80 91 8a 24 	lds	r24, 0x248A
    1b34:	81 50       	subi	r24, 0x01	; 1
    1b36:	80 93 8a 24 	sts	0x248A, r24

   b_status = sd_close( pt_dev->pv_privateData);
    1b3a:	f8 01       	movw	r30, r16
    1b3c:	82 81       	ldd	r24, Z+2	; 0x02
    1b3e:	93 81       	ldd	r25, Z+3	; 0x03
    1b40:	0e 94 9b 8e 	call	0x11d36	; 0x11d36 <sd_close>
   if( b_status == true)
    1b44:	88 23       	and	r24, r24
    1b46:	19 f0       	breq	.+6      	; 0x1b4e <sdClose+0x44>
   {
      pt_dev->pv_privateData = NULL;
    1b48:	f8 01       	movw	r30, r16
    1b4a:	12 82       	std	Z+2, r1	; 0x02
    1b4c:	13 82       	std	Z+3, r1	; 0x03
   }

   /*------------------------------------------------------------------------*
    * Release the lock
    *------------------------------------------------------------------------*/
   arb_signal( gt_sdDev.t_mutex);
    1b4e:	80 91 86 24 	lds	r24, 0x2486
    1b52:	90 91 87 24 	lds	r25, 0x2487
    1b56:	0e 94 22 7b 	call	0xf644	; 0xf644 <arb_signal>

   return ARB_PASSED;

}/*End sdClose*/
    1b5a:	80 e0       	ldi	r24, 0x00	; 0
    1b5c:	0f 90       	pop	r0
    1b5e:	0f 90       	pop	r0
    1b60:	df 91       	pop	r29
    1b62:	cf 91       	pop	r28
    1b64:	1f 91       	pop	r17
    1b66:	0f 91       	pop	r16
    1b68:	08 95       	ret

00001b6a <sdIoctl>:
}/*End sdOpen*/

int32_t sdIoctl( t_DEVHANDLE t_dev,
                 uint16_t s_command,
                 int32_t  i_arguments)
{
    1b6a:	8f 92       	push	r8
    1b6c:	9f 92       	push	r9
    1b6e:	af 92       	push	r10
    1b70:	bf 92       	push	r11
    1b72:	cf 92       	push	r12
    1b74:	df 92       	push	r13
    1b76:	ef 92       	push	r14
    1b78:	ff 92       	push	r15
    1b7a:	1f 93       	push	r17
    1b7c:	cf 93       	push	r28
    1b7e:	df 93       	push	r29
    1b80:	0f 92       	push	r0
    1b82:	0f 92       	push	r0
    1b84:	cd b7       	in	r28, 0x3d	; 61
    1b86:	de b7       	in	r29, 0x3e	; 62
    1b88:	89 83       	std	Y+1, r24	; 0x01
    1b8a:	9a 83       	std	Y+2, r25	; 0x02
    1b8c:	16 2f       	mov	r17, r22
    1b8e:	49 01       	movw	r8, r18
    1b90:	5a 01       	movw	r10, r20
   int32_t i_return = (int32_t)ARB_PASSED;
   t_devHandle *pt_dev = (t_devHandle *)t_dev;
    1b92:	c9 80       	ldd	r12, Y+1	; 0x01
    1b94:	da 80       	ldd	r13, Y+2	; 0x02

   /*------------------------------------------------------------------------*
    * We are going to access global memory or a register, so perform lock
    *------------------------------------------------------------------------*/
   arb_wait( gt_sdDev.t_mutex,
    1b96:	80 91 86 24 	lds	r24, 0x2486
    1b9a:	90 91 87 24 	lds	r25, 0x2487
    1b9e:	60 e0       	ldi	r22, 0x00	; 0
    1ba0:	0e 94 69 7e 	call	0xfcd2	; 0xfcd2 <arb_wait>
             0);

   switch( (t_sdCmd)s_command)
    1ba4:	15 30       	cpi	r17, 0x05	; 5
    1ba6:	09 f4       	brne	.+2      	; 0x1baa <sdIoctl+0x40>
    1ba8:	97 c0       	rjmp	.+302    	; 0x1cd8 <sdIoctl+0x16e>
    1baa:	16 30       	cpi	r17, 0x06	; 6
    1bac:	48 f1       	brcs	.+82     	; 0x1c00 <sdIoctl+0x96>
    1bae:	18 30       	cpi	r17, 0x08	; 8
    1bb0:	09 f4       	brne	.+2      	; 0x1bb4 <sdIoctl+0x4a>
    1bb2:	7e c0       	rjmp	.+252    	; 0x1cb0 <sdIoctl+0x146>
    1bb4:	19 30       	cpi	r17, 0x09	; 9
    1bb6:	90 f5       	brcc	.+100    	; 0x1c1c <sdIoctl+0xb2>
    1bb8:	16 30       	cpi	r17, 0x06	; 6
    1bba:	09 f4       	brne	.+2      	; 0x1bbe <sdIoctl+0x54>
    1bbc:	69 c0       	rjmp	.+210    	; 0x1c90 <sdIoctl+0x126>
    1bbe:	17 30       	cpi	r17, 0x07	; 7
    1bc0:	09 f4       	brne	.+2      	; 0x1bc4 <sdIoctl+0x5a>
    1bc2:	60 c0       	rjmp	.+192    	; 0x1c84 <sdIoctl+0x11a>
      case SD_GET_SIZE:
         i_return = sd_fileSize( pt_dev->pv_privateData);
      break;

      default:
         i_return = (int32_t)ARB_INVALID_CMD;
    1bc4:	2b ef       	ldi	r18, 0xFB	; 251
    1bc6:	c2 2e       	mov	r12, r18
    1bc8:	2f ef       	ldi	r18, 0xFF	; 255
    1bca:	d2 2e       	mov	r13, r18
    1bcc:	2f ef       	ldi	r18, 0xFF	; 255
    1bce:	e2 2e       	mov	r14, r18
    1bd0:	2f ef       	ldi	r18, 0xFF	; 255
    1bd2:	f2 2e       	mov	r15, r18
   }/*End switch( (t_sdCmd)s_command)*/

   /*------------------------------------------------------------------------*
    * Release the lock
    *------------------------------------------------------------------------*/
   arb_signal( gt_sdDev.t_mutex);
    1bd4:	80 91 86 24 	lds	r24, 0x2486
    1bd8:	90 91 87 24 	lds	r25, 0x2487
    1bdc:	0e 94 22 7b 	call	0xf644	; 0xf644 <arb_signal>

   return i_return;

}/*End sdIoctl*/
    1be0:	b6 01       	movw	r22, r12
    1be2:	c7 01       	movw	r24, r14
    1be4:	0f 90       	pop	r0
    1be6:	0f 90       	pop	r0
    1be8:	df 91       	pop	r29
    1bea:	cf 91       	pop	r28
    1bec:	1f 91       	pop	r17
    1bee:	ff 90       	pop	r15
    1bf0:	ef 90       	pop	r14
    1bf2:	df 90       	pop	r13
    1bf4:	cf 90       	pop	r12
    1bf6:	bf 90       	pop	r11
    1bf8:	af 90       	pop	r10
    1bfa:	9f 90       	pop	r9
    1bfc:	8f 90       	pop	r8
    1bfe:	08 95       	ret
    * We are going to access global memory or a register, so perform lock
    *------------------------------------------------------------------------*/
   arb_wait( gt_sdDev.t_mutex,
             0);

   switch( (t_sdCmd)s_command)
    1c00:	12 30       	cpi	r17, 0x02	; 2
    1c02:	09 f4       	brne	.+2      	; 0x1c06 <sdIoctl+0x9c>
    1c04:	5c c0       	rjmp	.+184    	; 0x1cbe <sdIoctl+0x154>
    1c06:	13 30       	cpi	r17, 0x03	; 3
    1c08:	a8 f0       	brcs	.+42     	; 0x1c34 <sdIoctl+0xca>
    1c0a:	13 30       	cpi	r17, 0x03	; 3
    1c0c:	09 f4       	brne	.+2      	; 0x1c10 <sdIoctl+0xa6>
    1c0e:	47 c0       	rjmp	.+142    	; 0x1c9e <sdIoctl+0x134>
    1c10:	14 30       	cpi	r17, 0x04	; 4
    1c12:	c1 f6       	brne	.-80     	; 0x1bc4 <sdIoctl+0x5a>

int32_t sdIoctl( t_DEVHANDLE t_dev,
                 uint16_t s_command,
                 int32_t  i_arguments)
{
   int32_t i_return = (int32_t)ARB_PASSED;
    1c14:	cc 24       	eor	r12, r12
    1c16:	dd 24       	eor	r13, r13
    1c18:	76 01       	movw	r14, r12

      break;/*End case SD_CARD_INFO:*/

      case SD_LS:
         sd_ls();
      break;/*End case SD_LS:*/
    1c1a:	dc cf       	rjmp	.-72     	; 0x1bd4 <sdIoctl+0x6a>
    * We are going to access global memory or a register, so perform lock
    *------------------------------------------------------------------------*/
   arb_wait( gt_sdDev.t_mutex,
             0);

   switch( (t_sdCmd)s_command)
    1c1c:	19 30       	cpi	r17, 0x09	; 9
    1c1e:	d9 f0       	breq	.+54     	; 0x1c56 <sdIoctl+0xec>
    1c20:	1a 30       	cpi	r17, 0x0A	; 10
    1c22:	81 f6       	brne	.-96     	; 0x1bc4 <sdIoctl+0x5a>
          *------------------------------------------------------------------*/
         i_return = sd_truncate( pt_dev->pv_privateData, 0);
      break;

      case SD_GET_SIZE:
         i_return = sd_fileSize( pt_dev->pv_privateData);
    1c24:	f6 01       	movw	r30, r12
    1c26:	82 81       	ldd	r24, Z+2	; 0x02
    1c28:	93 81       	ldd	r25, Z+3	; 0x03
    1c2a:	0e 94 27 8f 	call	0x11e4e	; 0x11e4e <sd_fileSize>
    1c2e:	6b 01       	movw	r12, r22
    1c30:	7c 01       	movw	r14, r24
      break;
    1c32:	d0 cf       	rjmp	.-96     	; 0x1bd4 <sdIoctl+0x6a>
    * We are going to access global memory or a register, so perform lock
    *------------------------------------------------------------------------*/
   arb_wait( gt_sdDev.t_mutex,
             0);

   switch( (t_sdCmd)s_command)
    1c34:	11 23       	and	r17, r17
    1c36:	a9 f0       	breq	.+42     	; 0x1c62 <sdIoctl+0xf8>
    1c38:	11 30       	cpi	r17, 0x01	; 1
    1c3a:	21 f6       	brne	.-120    	; 0x1bc4 <sdIoctl+0x5a>
         if( sd_init( gt_sdDev.t_spiHndl) == false)
            i_return = (int32_t)SD_CARD_INIT_FAILED;
      break;/*End case SD_INIT:*/

      case SD_RMDASHR:
         if( sd_rmDashR( ) == false)
    1c3c:	0e 94 e7 8e 	call	0x11dce	; 0x11dce <sd_rmDashR>
    1c40:	88 23       	and	r24, r24
    1c42:	41 f7       	brne	.-48     	; 0x1c14 <sdIoctl+0xaa>

      case SD_RMDIR:
      {
         char *pc_filename = (char *)((uint16_t)i_arguments);
         if( sd_rmdir( pc_filename) == false)
            i_return = (int32_t)SD_OPERATION_FAILED;
    1c44:	8d ef       	ldi	r24, 0xFD	; 253
    1c46:	c8 2e       	mov	r12, r24
    1c48:	8f ef       	ldi	r24, 0xFF	; 255
    1c4a:	d8 2e       	mov	r13, r24
    1c4c:	8f ef       	ldi	r24, 0xFF	; 255
    1c4e:	e8 2e       	mov	r14, r24
    1c50:	8f ef       	ldi	r24, 0xFF	; 255
    1c52:	f8 2e       	mov	r15, r24
    1c54:	bf cf       	rjmp	.-130    	; 0x1bd4 <sdIoctl+0x6a>
      break;/*End case SD_RM:*/

      case SD_CD:
      {
         char *pc_filename = (char *)((uint16_t)i_arguments);
         if( sd_chdir( pc_filename) == false)
    1c56:	c4 01       	movw	r24, r8
    1c58:	0e 94 bb 8e 	call	0x11d76	; 0x11d76 <sd_chdir>
    1c5c:	88 23       	and	r24, r24
    1c5e:	d1 f6       	brne	.-76     	; 0x1c14 <sdIoctl+0xaa>
    1c60:	f1 cf       	rjmp	.-30     	; 0x1c44 <sdIoctl+0xda>
             0);

   switch( (t_sdCmd)s_command)
   {
      case SD_INIT:
         if( sd_init( gt_sdDev.t_spiHndl) == false)
    1c62:	80 91 88 24 	lds	r24, 0x2488
    1c66:	90 91 89 24 	lds	r25, 0x2489
    1c6a:	0e 94 b4 8d 	call	0x11b68	; 0x11b68 <sd_init>
    1c6e:	88 23       	and	r24, r24
    1c70:	89 f6       	brne	.-94     	; 0x1c14 <sdIoctl+0xaa>
            i_return = (int32_t)SD_CARD_INIT_FAILED;
    1c72:	9e ef       	ldi	r25, 0xFE	; 254
    1c74:	c9 2e       	mov	r12, r25
    1c76:	9f ef       	ldi	r25, 0xFF	; 255
    1c78:	d9 2e       	mov	r13, r25
    1c7a:	9f ef       	ldi	r25, 0xFF	; 255
    1c7c:	e9 2e       	mov	r14, r25
    1c7e:	9f ef       	ldi	r25, 0xFF	; 255
    1c80:	f9 2e       	mov	r15, r25
    1c82:	a8 cf       	rjmp	.-176    	; 0x1bd4 <sdIoctl+0x6a>
      break;/*End  case SD_MKDIR:*/

      case SD_RMDIR:
      {
         char *pc_filename = (char *)((uint16_t)i_arguments);
         if( sd_rmdir( pc_filename) == false)
    1c84:	c4 01       	movw	r24, r8
    1c86:	0e 94 db 8e 	call	0x11db6	; 0x11db6 <sd_rmdir>
    1c8a:	88 23       	and	r24, r24
    1c8c:	19 f6       	brne	.-122    	; 0x1c14 <sdIoctl+0xaa>
    1c8e:	da cf       	rjmp	.-76     	; 0x1c44 <sdIoctl+0xda>
      break;/*End case SD_CD:*/

      case SD_MKDIR:
      {
         char *pc_filename = (char *)((uint16_t)i_arguments);
         if( sd_mkdir( pc_filename) == false)
    1c90:	c4 01       	movw	r24, r8
    1c92:	0e 94 c2 8e 	call	0x11d84	; 0x11d84 <sd_mkdir>
    1c96:	88 23       	and	r24, r24
    1c98:	09 f0       	breq	.+2      	; 0x1c9c <sdIoctl+0x132>
    1c9a:	bc cf       	rjmp	.-136    	; 0x1c14 <sdIoctl+0xaa>
    1c9c:	d3 cf       	rjmp	.-90     	; 0x1c44 <sdIoctl+0xda>

      case SD_REWIND:
         /*------------------------------------------------------------------*
          * Set the position of the file back to the beginning.
          *------------------------------------------------------------------*/
         sd_rewind( pt_dev->pv_privateData);
    1c9e:	f6 01       	movw	r30, r12
    1ca0:	82 81       	ldd	r24, Z+2	; 0x02
    1ca2:	93 81       	ldd	r25, Z+3	; 0x03
    1ca4:	0e 94 2d 8f 	call	0x11e5a	; 0x11e5a <sd_rewind>

int32_t sdIoctl( t_DEVHANDLE t_dev,
                 uint16_t s_command,
                 int32_t  i_arguments)
{
   int32_t i_return = (int32_t)ARB_PASSED;
    1ca8:	cc 24       	eor	r12, r12
    1caa:	dd 24       	eor	r13, r13
    1cac:	76 01       	movw	r14, r12
      case SD_REWIND:
         /*------------------------------------------------------------------*
          * Set the position of the file back to the beginning.
          *------------------------------------------------------------------*/
         sd_rewind( pt_dev->pv_privateData);
      break;/*End case SD_REWIND:*/
    1cae:	92 cf       	rjmp	.-220    	; 0x1bd4 <sdIoctl+0x6a>
      break;/*End case SD_LS:*/

      case SD_RM:
      {
         char *pc_filename = (char *)((uint16_t)i_arguments);
         if( sd_remove( pc_filename) == false)
    1cb0:	c4 01       	movw	r24, r8
    1cb2:	0e 94 e1 8e 	call	0x11dc2	; 0x11dc2 <sd_remove>
    1cb6:	88 23       	and	r24, r24
    1cb8:	09 f0       	breq	.+2      	; 0x1cbc <sdIoctl+0x152>
    1cba:	ac cf       	rjmp	.-168    	; 0x1c14 <sdIoctl+0xaa>
    1cbc:	c3 cf       	rjmp	.-122    	; 0x1c44 <sdIoctl+0xda>

      case SD_ERASE:
         /*------------------------------------------------------------------*
          * ERASE the contents of the file.
          *------------------------------------------------------------------*/
         i_return = sd_truncate( pt_dev->pv_privateData, 0);
    1cbe:	f6 01       	movw	r30, r12
    1cc0:	82 81       	ldd	r24, Z+2	; 0x02
    1cc2:	93 81       	ldd	r25, Z+3	; 0x03
    1cc4:	40 e0       	ldi	r20, 0x00	; 0
    1cc6:	50 e0       	ldi	r21, 0x00	; 0
    1cc8:	ba 01       	movw	r22, r20
    1cca:	0e 94 34 8f 	call	0x11e68	; 0x11e68 <sd_truncate>
    1cce:	c8 2e       	mov	r12, r24
    1cd0:	dd 24       	eor	r13, r13
    1cd2:	ee 24       	eor	r14, r14
    1cd4:	ff 24       	eor	r15, r15
      break;
    1cd6:	7e cf       	rjmp	.-260    	; 0x1bd4 <sdIoctl+0x6a>
      case SD_CARD_INFO:

      break;/*End case SD_CARD_INFO:*/

      case SD_LS:
         sd_ls();
    1cd8:	0e 94 b5 8e 	call	0x11d6a	; 0x11d6a <sd_ls>
    1cdc:	9b cf       	rjmp	.-202    	; 0x1c14 <sdIoctl+0xaa>

00001cde <sdWrite>:
}/*End sdRead*/

static int16_t sdWrite( t_DEVHANDLE t_dev,
                        int8_t *pc_buff,
                        uint16_t s_size)
{
    1cde:	af 92       	push	r10
    1ce0:	bf 92       	push	r11
    1ce2:	cf 92       	push	r12
    1ce4:	df 92       	push	r13
    1ce6:	ef 92       	push	r14
    1ce8:	ff 92       	push	r15
    1cea:	0f 93       	push	r16
    1cec:	1f 93       	push	r17
    1cee:	cf 93       	push	r28
    1cf0:	df 93       	push	r29
    1cf2:	0f 92       	push	r0
    1cf4:	0f 92       	push	r0
    1cf6:	cd b7       	in	r28, 0x3d	; 61
    1cf8:	de b7       	in	r29, 0x3e	; 62
    1cfa:	89 83       	std	Y+1, r24	; 0x01
    1cfc:	9a 83       	std	Y+2, r25	; 0x02
    1cfe:	6b 01       	movw	r12, r22
    1d00:	5a 01       	movw	r10, r20
   int16_t s_bufferLevel = 0;
   t_devHandle *pt_dev = (t_devHandle *)t_dev;
    1d02:	e9 80       	ldd	r14, Y+1	; 0x01
    1d04:	fa 80       	ldd	r15, Y+2	; 0x02
   uint8_t c_retries = 0;

   /*------------------------------------------------------------------------*
    * We are going to access global memory or a register, so perform lock
    *------------------------------------------------------------------------*/
   arb_wait( gt_sdDev.t_mutex,
    1d06:	80 91 86 24 	lds	r24, 0x2486
    1d0a:	90 91 87 24 	lds	r25, 0x2487
    1d0e:	60 e0       	ldi	r22, 0x00	; 0
    1d10:	0e 94 69 7e 	call	0xfcd2	; 0xfcd2 <arb_wait>
             0);

   if( pt_dev->pv_privateData != NULL)
    1d14:	f7 01       	movw	r30, r14
    1d16:	62 81       	ldd	r22, Z+2	; 0x02
    1d18:	73 81       	ldd	r23, Z+3	; 0x03
    1d1a:	61 15       	cp	r22, r1
    1d1c:	71 05       	cpc	r23, r1
    1d1e:	09 f4       	brne	.+2      	; 0x1d22 <sdWrite+0x44>
    1d20:	7b c0       	rjmp	.+246    	; 0x1e18 <sdWrite+0x13a>
   {
      do
      {

         s_bufferLevel = (int16_t)sd_write( gt_sdDev.t_spiHndl,
    1d22:	80 91 88 24 	lds	r24, 0x2488
    1d26:	90 91 89 24 	lds	r25, 0x2489
    1d2a:	a6 01       	movw	r20, r12
    1d2c:	95 01       	movw	r18, r10
    1d2e:	0e 94 ec 8e 	call	0x11dd8	; 0x11dd8 <sd_write>
    1d32:	8b 01       	movw	r16, r22
    1d34:	9c 01       	movw	r18, r24
                                            pt_dev->pv_privateData,
                                            (uint8_t *)pc_buff,
                                            s_size);

         if( s_bufferLevel < 0)
    1d36:	77 fd       	sbrc	r23, 7
    1d38:	14 c0       	rjmp	.+40     	; 0x1d62 <sdWrite+0x84>
   }/*End if( pt_dev->pv_privateData != NULL)*/

   /*------------------------------------------------------------------------*
    * Release the lock
    *------------------------------------------------------------------------*/
   arb_signal( gt_sdDev.t_mutex);
    1d3a:	80 91 86 24 	lds	r24, 0x2486
    1d3e:	90 91 87 24 	lds	r25, 0x2487
    1d42:	0e 94 22 7b 	call	0xf644	; 0xf644 <arb_signal>

   return s_bufferLevel;

}/*End sdWrite*/
    1d46:	c8 01       	movw	r24, r16
    1d48:	0f 90       	pop	r0
    1d4a:	0f 90       	pop	r0
    1d4c:	df 91       	pop	r29
    1d4e:	cf 91       	pop	r28
    1d50:	1f 91       	pop	r17
    1d52:	0f 91       	pop	r16
    1d54:	ff 90       	pop	r15
    1d56:	ef 90       	pop	r14
    1d58:	df 90       	pop	r13
    1d5a:	cf 90       	pop	r12
    1d5c:	bf 90       	pop	r11
    1d5e:	af 90       	pop	r10
    1d60:	08 95       	ret
                                            (uint8_t *)pc_buff,
                                            s_size);

         if( s_bufferLevel < 0)
         {
            sd_init( gt_sdDev.t_spiHndl);
    1d62:	80 91 88 24 	lds	r24, 0x2488
    1d66:	90 91 89 24 	lds	r25, 0x2489
    1d6a:	0e 94 b4 8d 	call	0x11b68	; 0x11b68 <sd_init>
   if( pt_dev->pv_privateData != NULL)
   {
      do
      {

         s_bufferLevel = (int16_t)sd_write( gt_sdDev.t_spiHndl,
    1d6e:	80 91 88 24 	lds	r24, 0x2488
    1d72:	90 91 89 24 	lds	r25, 0x2489
    1d76:	f7 01       	movw	r30, r14
    1d78:	62 81       	ldd	r22, Z+2	; 0x02
    1d7a:	73 81       	ldd	r23, Z+3	; 0x03
    1d7c:	a6 01       	movw	r20, r12
    1d7e:	95 01       	movw	r18, r10
    1d80:	0e 94 ec 8e 	call	0x11dd8	; 0x11dd8 <sd_write>
    1d84:	8b 01       	movw	r16, r22
    1d86:	9c 01       	movw	r18, r24
                                            pt_dev->pv_privateData,
                                            (uint8_t *)pc_buff,
                                            s_size);

         if( s_bufferLevel < 0)
    1d88:	77 ff       	sbrs	r23, 7
    1d8a:	d7 cf       	rjmp	.-82     	; 0x1d3a <sdWrite+0x5c>
         {
            sd_init( gt_sdDev.t_spiHndl);
    1d8c:	80 91 88 24 	lds	r24, 0x2488
    1d90:	90 91 89 24 	lds	r25, 0x2489
    1d94:	0e 94 b4 8d 	call	0x11b68	; 0x11b68 <sd_init>
   if( pt_dev->pv_privateData != NULL)
   {
      do
      {

         s_bufferLevel = (int16_t)sd_write( gt_sdDev.t_spiHndl,
    1d98:	80 91 88 24 	lds	r24, 0x2488
    1d9c:	90 91 89 24 	lds	r25, 0x2489
    1da0:	f7 01       	movw	r30, r14
    1da2:	62 81       	ldd	r22, Z+2	; 0x02
    1da4:	73 81       	ldd	r23, Z+3	; 0x03
    1da6:	a6 01       	movw	r20, r12
    1da8:	95 01       	movw	r18, r10
    1daa:	0e 94 ec 8e 	call	0x11dd8	; 0x11dd8 <sd_write>
    1dae:	8b 01       	movw	r16, r22
    1db0:	9c 01       	movw	r18, r24
                                            pt_dev->pv_privateData,
                                            (uint8_t *)pc_buff,
                                            s_size);

         if( s_bufferLevel < 0)
    1db2:	77 ff       	sbrs	r23, 7
    1db4:	c2 cf       	rjmp	.-124    	; 0x1d3a <sdWrite+0x5c>
         {
            sd_init( gt_sdDev.t_spiHndl);
    1db6:	80 91 88 24 	lds	r24, 0x2488
    1dba:	90 91 89 24 	lds	r25, 0x2489
    1dbe:	0e 94 b4 8d 	call	0x11b68	; 0x11b68 <sd_init>
   if( pt_dev->pv_privateData != NULL)
   {
      do
      {

         s_bufferLevel = (int16_t)sd_write( gt_sdDev.t_spiHndl,
    1dc2:	80 91 88 24 	lds	r24, 0x2488
    1dc6:	90 91 89 24 	lds	r25, 0x2489
    1dca:	f7 01       	movw	r30, r14
    1dcc:	62 81       	ldd	r22, Z+2	; 0x02
    1dce:	73 81       	ldd	r23, Z+3	; 0x03
    1dd0:	a6 01       	movw	r20, r12
    1dd2:	95 01       	movw	r18, r10
    1dd4:	0e 94 ec 8e 	call	0x11dd8	; 0x11dd8 <sd_write>
    1dd8:	8b 01       	movw	r16, r22
    1dda:	9c 01       	movw	r18, r24
                                            pt_dev->pv_privateData,
                                            (uint8_t *)pc_buff,
                                            s_size);

         if( s_bufferLevel < 0)
    1ddc:	77 ff       	sbrs	r23, 7
    1dde:	ad cf       	rjmp	.-166    	; 0x1d3a <sdWrite+0x5c>
         {
            sd_init( gt_sdDev.t_spiHndl);
    1de0:	80 91 88 24 	lds	r24, 0x2488
    1de4:	90 91 89 24 	lds	r25, 0x2489
    1de8:	0e 94 b4 8d 	call	0x11b68	; 0x11b68 <sd_init>
   if( pt_dev->pv_privateData != NULL)
   {
      do
      {

         s_bufferLevel = (int16_t)sd_write( gt_sdDev.t_spiHndl,
    1dec:	80 91 88 24 	lds	r24, 0x2488
    1df0:	90 91 89 24 	lds	r25, 0x2489
    1df4:	f7 01       	movw	r30, r14
    1df6:	62 81       	ldd	r22, Z+2	; 0x02
    1df8:	73 81       	ldd	r23, Z+3	; 0x03
    1dfa:	a6 01       	movw	r20, r12
    1dfc:	95 01       	movw	r18, r10
    1dfe:	0e 94 ec 8e 	call	0x11dd8	; 0x11dd8 <sd_write>
    1e02:	8b 01       	movw	r16, r22
    1e04:	9c 01       	movw	r18, r24
                                            pt_dev->pv_privateData,
                                            (uint8_t *)pc_buff,
                                            s_size);

         if( s_bufferLevel < 0)
    1e06:	77 ff       	sbrs	r23, 7
    1e08:	98 cf       	rjmp	.-208    	; 0x1d3a <sdWrite+0x5c>
         {
            sd_init( gt_sdDev.t_spiHndl);
    1e0a:	80 91 88 24 	lds	r24, 0x2488
    1e0e:	90 91 89 24 	lds	r25, 0x2489
    1e12:	0e 94 b4 8d 	call	0x11b68	; 0x11b68 <sd_init>
    1e16:	91 cf       	rjmp	.-222    	; 0x1d3a <sdWrite+0x5c>

static int16_t sdWrite( t_DEVHANDLE t_dev,
                        int8_t *pc_buff,
                        uint16_t s_size)
{
   int16_t s_bufferLevel = 0;
    1e18:	00 e0       	ldi	r16, 0x00	; 0
    1e1a:	10 e0       	ldi	r17, 0x00	; 0
    1e1c:	8e cf       	rjmp	.-228    	; 0x1d3a <sdWrite+0x5c>

00001e1e <sdRead>:
 * Private Function Definitions
 *---------------------------------------------------------------------------*/
static int16_t sdRead( t_DEVHANDLE t_dev,
                       int8_t *pc_buff,
                       uint16_t s_size)
{
    1e1e:	af 92       	push	r10
    1e20:	bf 92       	push	r11
    1e22:	cf 92       	push	r12
    1e24:	df 92       	push	r13
    1e26:	ef 92       	push	r14
    1e28:	ff 92       	push	r15
    1e2a:	0f 93       	push	r16
    1e2c:	1f 93       	push	r17
    1e2e:	cf 93       	push	r28
    1e30:	df 93       	push	r29
    1e32:	0f 92       	push	r0
    1e34:	0f 92       	push	r0
    1e36:	cd b7       	in	r28, 0x3d	; 61
    1e38:	de b7       	in	r29, 0x3e	; 62
    1e3a:	89 83       	std	Y+1, r24	; 0x01
    1e3c:	9a 83       	std	Y+2, r25	; 0x02
    1e3e:	6b 01       	movw	r12, r22
    1e40:	5a 01       	movw	r10, r20
   int16_t s_bufferLevel = 0;
   t_devHandle *pt_dev = (t_devHandle *)t_dev;
    1e42:	e9 80       	ldd	r14, Y+1	; 0x01
    1e44:	fa 80       	ldd	r15, Y+2	; 0x02
   uint8_t c_retries = 0;

   /*------------------------------------------------------------------------*
    * We are going to access global memory or a register, so perform lock
    *------------------------------------------------------------------------*/
   arb_wait( gt_sdDev.t_mutex,
    1e46:	80 91 86 24 	lds	r24, 0x2486
    1e4a:	90 91 87 24 	lds	r25, 0x2487
    1e4e:	60 e0       	ldi	r22, 0x00	; 0
    1e50:	0e 94 69 7e 	call	0xfcd2	; 0xfcd2 <arb_wait>
             0);

   if( pt_dev->pv_privateData != NULL)
    1e54:	f7 01       	movw	r30, r14
    1e56:	62 81       	ldd	r22, Z+2	; 0x02
    1e58:	73 81       	ldd	r23, Z+3	; 0x03
    1e5a:	61 15       	cp	r22, r1
    1e5c:	71 05       	cpc	r23, r1
    1e5e:	09 f4       	brne	.+2      	; 0x1e62 <sdRead+0x44>
    1e60:	7b c0       	rjmp	.+246    	; 0x1f58 <sdRead+0x13a>
   {

      do
      {

         s_bufferLevel = (int16_t)sd_read( gt_sdDev.t_spiHndl,
    1e62:	80 91 88 24 	lds	r24, 0x2488
    1e66:	90 91 89 24 	lds	r25, 0x2489
    1e6a:	a6 01       	movw	r20, r12
    1e6c:	95 01       	movw	r18, r10
    1e6e:	0e 94 09 8f 	call	0x11e12	; 0x11e12 <sd_read>
    1e72:	8b 01       	movw	r16, r22
    1e74:	9c 01       	movw	r18, r24
                                           pt_dev->pv_privateData,
                                           (uint8_t *)pc_buff,
                                           s_size);

         if( s_bufferLevel < 0)
    1e76:	77 fd       	sbrc	r23, 7
    1e78:	14 c0       	rjmp	.+40     	; 0x1ea2 <sdRead+0x84>
   }/*End if( pt_dev->pv_privateData != NULL)*/

   /*------------------------------------------------------------------------*
    * Release the lock
    *------------------------------------------------------------------------*/
   arb_signal( gt_sdDev.t_mutex);
    1e7a:	80 91 86 24 	lds	r24, 0x2486
    1e7e:	90 91 87 24 	lds	r25, 0x2487
    1e82:	0e 94 22 7b 	call	0xf644	; 0xf644 <arb_signal>

   return s_bufferLevel;

}/*End sdRead*/
    1e86:	c8 01       	movw	r24, r16
    1e88:	0f 90       	pop	r0
    1e8a:	0f 90       	pop	r0
    1e8c:	df 91       	pop	r29
    1e8e:	cf 91       	pop	r28
    1e90:	1f 91       	pop	r17
    1e92:	0f 91       	pop	r16
    1e94:	ff 90       	pop	r15
    1e96:	ef 90       	pop	r14
    1e98:	df 90       	pop	r13
    1e9a:	cf 90       	pop	r12
    1e9c:	bf 90       	pop	r11
    1e9e:	af 90       	pop	r10
    1ea0:	08 95       	ret
                                           (uint8_t *)pc_buff,
                                           s_size);

         if( s_bufferLevel < 0)
         {
            sd_init( gt_sdDev.t_spiHndl);
    1ea2:	80 91 88 24 	lds	r24, 0x2488
    1ea6:	90 91 89 24 	lds	r25, 0x2489
    1eaa:	0e 94 b4 8d 	call	0x11b68	; 0x11b68 <sd_init>
   {

      do
      {

         s_bufferLevel = (int16_t)sd_read( gt_sdDev.t_spiHndl,
    1eae:	80 91 88 24 	lds	r24, 0x2488
    1eb2:	90 91 89 24 	lds	r25, 0x2489
    1eb6:	f7 01       	movw	r30, r14
    1eb8:	62 81       	ldd	r22, Z+2	; 0x02
    1eba:	73 81       	ldd	r23, Z+3	; 0x03
    1ebc:	a6 01       	movw	r20, r12
    1ebe:	95 01       	movw	r18, r10
    1ec0:	0e 94 09 8f 	call	0x11e12	; 0x11e12 <sd_read>
    1ec4:	8b 01       	movw	r16, r22
    1ec6:	9c 01       	movw	r18, r24
                                           pt_dev->pv_privateData,
                                           (uint8_t *)pc_buff,
                                           s_size);

         if( s_bufferLevel < 0)
    1ec8:	77 ff       	sbrs	r23, 7
    1eca:	d7 cf       	rjmp	.-82     	; 0x1e7a <sdRead+0x5c>
         {
            sd_init( gt_sdDev.t_spiHndl);
    1ecc:	80 91 88 24 	lds	r24, 0x2488
    1ed0:	90 91 89 24 	lds	r25, 0x2489
    1ed4:	0e 94 b4 8d 	call	0x11b68	; 0x11b68 <sd_init>
   {

      do
      {

         s_bufferLevel = (int16_t)sd_read( gt_sdDev.t_spiHndl,
    1ed8:	80 91 88 24 	lds	r24, 0x2488
    1edc:	90 91 89 24 	lds	r25, 0x2489
    1ee0:	f7 01       	movw	r30, r14
    1ee2:	62 81       	ldd	r22, Z+2	; 0x02
    1ee4:	73 81       	ldd	r23, Z+3	; 0x03
    1ee6:	a6 01       	movw	r20, r12
    1ee8:	95 01       	movw	r18, r10
    1eea:	0e 94 09 8f 	call	0x11e12	; 0x11e12 <sd_read>
    1eee:	8b 01       	movw	r16, r22
    1ef0:	9c 01       	movw	r18, r24
                                           pt_dev->pv_privateData,
                                           (uint8_t *)pc_buff,
                                           s_size);

         if( s_bufferLevel < 0)
    1ef2:	77 ff       	sbrs	r23, 7
    1ef4:	c2 cf       	rjmp	.-124    	; 0x1e7a <sdRead+0x5c>
         {
            sd_init( gt_sdDev.t_spiHndl);
    1ef6:	80 91 88 24 	lds	r24, 0x2488
    1efa:	90 91 89 24 	lds	r25, 0x2489
    1efe:	0e 94 b4 8d 	call	0x11b68	; 0x11b68 <sd_init>
   {

      do
      {

         s_bufferLevel = (int16_t)sd_read( gt_sdDev.t_spiHndl,
    1f02:	80 91 88 24 	lds	r24, 0x2488
    1f06:	90 91 89 24 	lds	r25, 0x2489
    1f0a:	f7 01       	movw	r30, r14
    1f0c:	62 81       	ldd	r22, Z+2	; 0x02
    1f0e:	73 81       	ldd	r23, Z+3	; 0x03
    1f10:	a6 01       	movw	r20, r12
    1f12:	95 01       	movw	r18, r10
    1f14:	0e 94 09 8f 	call	0x11e12	; 0x11e12 <sd_read>
    1f18:	8b 01       	movw	r16, r22
    1f1a:	9c 01       	movw	r18, r24
                                           pt_dev->pv_privateData,
                                           (uint8_t *)pc_buff,
                                           s_size);

         if( s_bufferLevel < 0)
    1f1c:	77 ff       	sbrs	r23, 7
    1f1e:	ad cf       	rjmp	.-166    	; 0x1e7a <sdRead+0x5c>
         {
            sd_init( gt_sdDev.t_spiHndl);
    1f20:	80 91 88 24 	lds	r24, 0x2488
    1f24:	90 91 89 24 	lds	r25, 0x2489
    1f28:	0e 94 b4 8d 	call	0x11b68	; 0x11b68 <sd_init>
   {

      do
      {

         s_bufferLevel = (int16_t)sd_read( gt_sdDev.t_spiHndl,
    1f2c:	80 91 88 24 	lds	r24, 0x2488
    1f30:	90 91 89 24 	lds	r25, 0x2489
    1f34:	f7 01       	movw	r30, r14
    1f36:	62 81       	ldd	r22, Z+2	; 0x02
    1f38:	73 81       	ldd	r23, Z+3	; 0x03
    1f3a:	a6 01       	movw	r20, r12
    1f3c:	95 01       	movw	r18, r10
    1f3e:	0e 94 09 8f 	call	0x11e12	; 0x11e12 <sd_read>
    1f42:	8b 01       	movw	r16, r22
    1f44:	9c 01       	movw	r18, r24
                                           pt_dev->pv_privateData,
                                           (uint8_t *)pc_buff,
                                           s_size);

         if( s_bufferLevel < 0)
    1f46:	77 ff       	sbrs	r23, 7
    1f48:	98 cf       	rjmp	.-208    	; 0x1e7a <sdRead+0x5c>
         {
            sd_init( gt_sdDev.t_spiHndl);
    1f4a:	80 91 88 24 	lds	r24, 0x2488
    1f4e:	90 91 89 24 	lds	r25, 0x2489
    1f52:	0e 94 b4 8d 	call	0x11b68	; 0x11b68 <sd_init>
    1f56:	91 cf       	rjmp	.-222    	; 0x1e7a <sdRead+0x5c>
 *---------------------------------------------------------------------------*/
static int16_t sdRead( t_DEVHANDLE t_dev,
                       int8_t *pc_buff,
                       uint16_t s_size)
{
   int16_t s_bufferLevel = 0;
    1f58:	00 e0       	ldi	r16, 0x00	; 0
    1f5a:	10 e0       	ldi	r17, 0x00	; 0
    1f5c:	8e cf       	rjmp	.-228    	; 0x1e7a <sdRead+0x5c>

00001f5e <sdOpen>:
   return s_bufferLevel;

}/*End sdWrite*/

t_error sdOpen( t_DEVHANDLE t_dev)
{
    1f5e:	0f 93       	push	r16
    1f60:	1f 93       	push	r17
    1f62:	cf 93       	push	r28
    1f64:	df 93       	push	r29
    1f66:	0f 92       	push	r0
    1f68:	0f 92       	push	r0
    1f6a:	cd b7       	in	r28, 0x3d	; 61
    1f6c:	de b7       	in	r29, 0x3e	; 62
    1f6e:	89 83       	std	Y+1, r24	; 0x01
    1f70:	9a 83       	std	Y+2, r25	; 0x02
   t_error t_err = ARB_PASSED;

   /*------------------------------------------------------------------------*
    * We are going to access global memory or a register, so perform lock
    *------------------------------------------------------------------------*/
   arb_wait( gt_sdDev.t_mutex,
    1f72:	80 91 86 24 	lds	r24, 0x2486
    1f76:	90 91 87 24 	lds	r25, 0x2487
    1f7a:	60 e0       	ldi	r22, 0x00	; 0
    1f7c:	0e 94 69 7e 	call	0xfcd2	; 0xfcd2 <arb_wait>
             0);

   pt_dev = (t_devHandle *)t_dev;
    1f80:	09 81       	ldd	r16, Y+1	; 0x01
    1f82:	1a 81       	ldd	r17, Y+2	; 0x02
    1f84:	00 93 8c 24 	sts	0x248C, r16
    1f88:	10 93 8d 24 	sts	0x248D, r17

   if( gt_sdDev.c_numUsers == 0)
    1f8c:	80 91 8a 24 	lds	r24, 0x248A
    1f90:	88 23       	and	r24, r24
    1f92:	09 f4       	brne	.+2      	; 0x1f96 <sdOpen+0x38>
    1f94:	3a c0       	rjmp	.+116    	; 0x200a <sdOpen+0xac>
         goto failed;
      }

   }/*End if( gt_sdDev.c_numUsers == 1)*/

   pc_filename = (char *)pt_dev->pv_privateData;
    1f96:	f8 01       	movw	r30, r16
    1f98:	82 81       	ldd	r24, Z+2	; 0x02
    1f9a:	93 81       	ldd	r25, Z+3	; 0x03
    1f9c:	80 93 8e 24 	sts	0x248E, r24
    1fa0:	90 93 8f 24 	sts	0x248F, r25

   if( pc_filename != NULL)
    1fa4:	00 97       	sbiw	r24, 0x00	; 0
    1fa6:	e1 f0       	breq	.+56     	; 0x1fe0 <sdOpen+0x82>
   {
      uint8_t c_flags = 0;

      if( pt_dev->c_flags & ARB_O_READ)
    1fa8:	24 81       	ldd	r18, Z+4	; 0x04

   pc_filename = (char *)pt_dev->pv_privateData;

   if( pc_filename != NULL)
   {
      uint8_t c_flags = 0;
    1faa:	62 2f       	mov	r22, r18
    1fac:	61 70       	andi	r22, 0x01	; 1

      if( pt_dev->c_flags & ARB_O_READ)
         c_flags |= SD_FILE_READ;
      if( pt_dev->c_flags & ARB_O_WRITE)
    1fae:	21 fd       	sbrc	r18, 1
         c_flags |= SD_FILE_WRITE;
    1fb0:	62 60       	ori	r22, 0x02	; 2
      if( pt_dev->c_flags & ARB_O_APPEND)
    1fb2:	22 fd       	sbrc	r18, 2
         c_flags |= SD_FILE_APPEND;
    1fb4:	64 60       	ori	r22, 0x04	; 4
      if( pt_dev->c_flags & ARB_O_SYNC)
    1fb6:	23 fd       	sbrc	r18, 3
         c_flags |= SD_FILE_SYNC;
    1fb8:	68 60       	ori	r22, 0x08	; 8
      if( pt_dev->c_flags & ARB_O_TRUNC)
    1fba:	24 fd       	sbrc	r18, 4
         c_flags |= SD_FILE_TRUNC;
    1fbc:	60 61       	ori	r22, 0x10	; 16
      if( pt_dev->c_flags & ARB_O_AT_END)
    1fbe:	25 fd       	sbrc	r18, 5
         c_flags |= SD_FILE_AT_END;
    1fc0:	60 62       	ori	r22, 0x20	; 32
      if( pt_dev->c_flags & ARB_O_CREAT)
    1fc2:	26 fd       	sbrc	r18, 6
    1fc4:	20 c0       	rjmp	.+64     	; 0x2006 <sdOpen+0xa8>
         c_flags |= SD_FILE_CREAT;

      pt_dev->pv_privateData = sd_open( pc_filename, c_flags);
    1fc6:	0e 94 c7 8d 	call	0x11b8e	; 0x11b8e <sd_open>
    1fca:	f8 01       	movw	r30, r16
    1fcc:	82 83       	std	Z+2, r24	; 0x02
    1fce:	93 83       	std	Z+3, r25	; 0x03
      if( pt_dev->pv_privateData == NULL)
    1fd0:	e0 91 8c 24 	lds	r30, 0x248C
    1fd4:	f0 91 8d 24 	lds	r31, 0x248D
    1fd8:	82 81       	ldd	r24, Z+2	; 0x02
    1fda:	93 81       	ldd	r25, Z+3	; 0x03
    1fdc:	00 97       	sbiw	r24, 0x00	; 0
    1fde:	11 f1       	breq	.+68     	; 0x2024 <sdOpen+0xc6>
         t_err = ARB_OPEN_ERROR;
         goto failed;
      }
   }

   gt_sdDev.c_numUsers++;
    1fe0:	80 91 8a 24 	lds	r24, 0x248A
    1fe4:	8f 5f       	subi	r24, 0xFF	; 255
    1fe6:	80 93 8a 24 	sts	0x248A, r24

   /*------------------------------------------------------------------------*
    * Release the lock
    *------------------------------------------------------------------------*/
   arb_signal( gt_sdDev.t_mutex);
    1fea:	80 91 86 24 	lds	r24, 0x2486
    1fee:	90 91 87 24 	lds	r25, 0x2487
    1ff2:	0e 94 22 7b 	call	0xf644	; 0xf644 <arb_signal>

   return ARB_PASSED;
    1ff6:	80 e0       	ldi	r24, 0x00	; 0
    *------------------------------------------------------------------------*/
   arb_signal( gt_sdDev.t_mutex);

   return t_err;

}/*End sdOpen*/
    1ff8:	0f 90       	pop	r0
    1ffa:	0f 90       	pop	r0
    1ffc:	df 91       	pop	r29
    1ffe:	cf 91       	pop	r28
    2000:	1f 91       	pop	r17
    2002:	0f 91       	pop	r16
    2004:	08 95       	ret
      if( pt_dev->c_flags & ARB_O_TRUNC)
         c_flags |= SD_FILE_TRUNC;
      if( pt_dev->c_flags & ARB_O_AT_END)
         c_flags |= SD_FILE_AT_END;
      if( pt_dev->c_flags & ARB_O_CREAT)
         c_flags |= SD_FILE_CREAT;
    2006:	60 64       	ori	r22, 0x40	; 64
    2008:	de cf       	rjmp	.-68     	; 0x1fc6 <sdOpen+0x68>

   pt_dev = (t_devHandle *)t_dev;

   if( gt_sdDev.c_numUsers == 0)
   {
      if( sd_begin( gt_sdDev.t_spiHndl) == false)
    200a:	80 91 88 24 	lds	r24, 0x2488
    200e:	90 91 89 24 	lds	r25, 0x2489
    2012:	0e 94 a1 8d 	call	0x11b42	; 0x11b42 <sd_begin>
    2016:	88 23       	and	r24, r24
    2018:	29 f0       	breq	.+10     	; 0x2024 <sdOpen+0xc6>
    201a:	00 91 8c 24 	lds	r16, 0x248C
    201e:	10 91 8d 24 	lds	r17, 0x248D
    2022:	b9 cf       	rjmp	.-142    	; 0x1f96 <sdOpen+0x38>
failed:

   /*------------------------------------------------------------------------*
    * Release the lock
    *------------------------------------------------------------------------*/
   arb_signal( gt_sdDev.t_mutex);
    2024:	80 91 86 24 	lds	r24, 0x2486
    2028:	90 91 87 24 	lds	r25, 0x2487
    202c:	0e 94 22 7b 	call	0xf644	; 0xf644 <arb_signal>

   return t_err;
    2030:	80 ef       	ldi	r24, 0xF0	; 240
    2032:	e2 cf       	rjmp	.-60     	; 0x1ff8 <sdOpen+0x9a>

00002034 <drv_sdInit>:
   return ARB_PASSED;

}/*End sdClose*/

t_error drv_sdInit( t_sdSetup t_setup)
{
    2034:	df 92       	push	r13
    2036:	ef 92       	push	r14
    2038:	ff 92       	push	r15
    203a:	0f 93       	push	r16
    203c:	1f 93       	push	r17
    203e:	cf 93       	push	r28
    2040:	df 93       	push	r29
    2042:	cd b7       	in	r28, 0x3d	; 61
    2044:	de b7       	in	r29, 0x3e	; 62
    2046:	28 97       	sbiw	r28, 0x08	; 8
    2048:	cd bf       	out	0x3d, r28	; 61
    204a:	de bf       	out	0x3e, r29	; 62
    204c:	f6 2e       	mov	r15, r22
    204e:	e7 2e       	mov	r14, r23
    2050:	d8 2e       	mov	r13, r24
    2052:	79 2f       	mov	r23, r25
   t_error t_err = ARB_PASSED;
   t_spiConfig t_sConf;
   static t_spiError t_sErr;

   memset( (void *)&gt_sdDev, 0, sizeof(t_sdDev));
    2054:	85 e0       	ldi	r24, 0x05	; 5
    2056:	e6 e8       	ldi	r30, 0x86	; 134
    2058:	f4 e2       	ldi	r31, 0x24	; 36
    205a:	df 01       	movw	r26, r30
    205c:	1d 92       	st	X+, r1
    205e:	8a 95       	dec	r24
    2060:	e9 f7       	brne	.-6      	; 0x205c <drv_sdInit+0x28>

   /*------------------------------------------------------------------------*
    * Make sure the kernel is aware that a new device has been loaded.
    *------------------------------------------------------------------------*/
   t_err = arb_registerDevice( "sdDevice0",
    2062:	84 e4       	ldi	r24, 0x44	; 68
    2064:	90 e2       	ldi	r25, 0x20	; 32
    2066:	60 e0       	ldi	r22, 0x00	; 0
    2068:	4e e4       	ldi	r20, 0x4E	; 78
    206a:	50 e2       	ldi	r21, 0x20	; 32
    206c:	0e 94 2a 6f 	call	0xde54	; 0xde54 <arb_registerDevice>
    2070:	18 2f       	mov	r17, r24
                               arb_createDevId( t_setup.c_majorNum,
                               0),
                               &gat_sdDevOps);

   if( t_err < 0)
    2072:	87 fd       	sbrc	r24, 7
    2074:	3c c0       	rjmp	.+120    	; 0x20ee <drv_sdInit+0xba>

   /*------------------------------------------------------------------------*
    * Request a semaphore from the kernel. Since the sd port is a shared
    * resource we need to have all actions on it be mutually exclusive.
    *------------------------------------------------------------------------*/
   gt_sdDev.t_mutex = arb_semaphoreCreate( MUTEX);
    2076:	82 e0       	ldi	r24, 0x02	; 2
    2078:	0e 94 07 79 	call	0xf20e	; 0xf20e <arb_semaphoreCreate>
    207c:	80 93 86 24 	sts	0x2486, r24
    2080:	90 93 87 24 	sts	0x2487, r25

   if( gt_sdDev.t_mutex < 0)
    2084:	80 91 86 24 	lds	r24, 0x2486
    2088:	90 91 87 24 	lds	r25, 0x2487
    208c:	97 fd       	sbrc	r25, 7
    208e:	3b c0       	rjmp	.+118    	; 0x2106 <drv_sdInit+0xd2>

   /*------------------------------------------------------------------------*
    * Request access to the spi port required for controlling this particular
    * sd card.
    *------------------------------------------------------------------------*/
   t_sConf.b_enDma    = false;
    2090:	18 86       	std	Y+8, r1	; 0x08
   t_sConf.i_baudRate = 800000;     /*Set the baud rate low until initialized*/
    2092:	80 e0       	ldi	r24, 0x00	; 0
    2094:	95 e3       	ldi	r25, 0x35	; 53
    2096:	ac e0       	ldi	r26, 0x0C	; 12
    2098:	b0 e0       	ldi	r27, 0x00	; 0
    209a:	38 2f       	mov	r19, r24
    209c:	8c 83       	std	Y+4, r24	; 0x04
    209e:	9d 83       	std	Y+5, r25	; 0x05
    20a0:	ae 83       	std	Y+6, r26	; 0x06
    20a2:	bf 83       	std	Y+7, r27	; 0x07
   t_sConf.t_spiMd    = SPI_MODE_0;
    20a4:	19 82       	std	Y+1, r1	; 0x01
   t_sConf.t_spiOp    = SPI_MASTER;
    20a6:	1a 82       	std	Y+2, r1	; 0x02
   t_sConf.t_spiOrder = SPI_MSB_FIRST;
    20a8:	81 e0       	ldi	r24, 0x01	; 1
    20aa:	8b 83       	std	Y+3, r24	; 0x03

   t_sErr = hal_configureSpiChannel( t_setup.t_spiChan,
    20ac:	8f 2d       	mov	r24, r15
    20ae:	00 e0       	ldi	r16, 0x00	; 0
    20b0:	10 e0       	ldi	r17, 0x00	; 0
    20b2:	21 e0       	ldi	r18, 0x01	; 1
    20b4:	4d 81       	ldd	r20, Y+5	; 0x05
    20b6:	5e 81       	ldd	r21, Y+6	; 0x06
    20b8:	6f 81       	ldd	r22, Y+7	; 0x07
    20ba:	70 e0       	ldi	r23, 0x00	; 0
    20bc:	0e 94 17 3a 	call	0x742e	; 0x742e <hal_configureSpiChannel>
    20c0:	80 93 8b 24 	sts	0x248B, r24
                                     t_sConf);
   if( t_sErr < 0)
    20c4:	87 fd       	sbrc	r24, 7
    20c6:	29 c0       	rjmp	.+82     	; 0x211a <drv_sdInit+0xe6>
      t_err = ARB_HAL_ERROR;
      goto failed3;

   }/*End if( t_sErr < 0)*/

   gt_sdDev.t_spiHndl = hal_requestSpiChannel( t_setup.t_spiChan,
    20c8:	8f 2d       	mov	r24, r15
    20ca:	60 e0       	ldi	r22, 0x00	; 0
    20cc:	70 e0       	ldi	r23, 0x00	; 0
    20ce:	4e 2d       	mov	r20, r14
    20d0:	2d 2d       	mov	r18, r13
    20d2:	0e 94 46 38 	call	0x708c	; 0x708c <hal_requestSpiChannel>
    20d6:	80 93 88 24 	sts	0x2488, r24
    20da:	90 93 89 24 	sts	0x2489, r25
                                               NULL,
                                               t_setup.t_csPort,
                                               t_setup.t_csPin);
   if( gt_sdDev.t_spiHndl < 0)
    20de:	80 91 88 24 	lds	r24, 0x2488
    20e2:	90 91 89 24 	lds	r25, 0x2489
    20e6:	97 fd       	sbrc	r25, 7
    20e8:	18 c0       	rjmp	.+48     	; 0x211a <drv_sdInit+0xe6>
   }/*End if( t_sErr < 0)*/

   /*------------------------------------------------------------------------*
    * We don't have any users attached to this device
    *------------------------------------------------------------------------*/
   gt_sdDev.c_numUsers = 0;
    20ea:	10 92 8a 24 	sts	0x248A, r1

failed1:

   return t_err;

}/*End drv_sdInit*/
    20ee:	81 2f       	mov	r24, r17
    20f0:	28 96       	adiw	r28, 0x08	; 8
    20f2:	cd bf       	out	0x3d, r28	; 61
    20f4:	de bf       	out	0x3e, r29	; 62
    20f6:	df 91       	pop	r29
    20f8:	cf 91       	pop	r28
    20fa:	1f 91       	pop	r17
    20fc:	0f 91       	pop	r16
    20fe:	ff 90       	pop	r15
    2100:	ef 90       	pop	r14
    2102:	df 90       	pop	r13
    2104:	08 95       	ret
    *------------------------------------------------------------------------*/
   gt_sdDev.t_mutex = arb_semaphoreCreate( MUTEX);

   if( gt_sdDev.t_mutex < 0)
   {
      t_err = (t_error)gt_sdDev.t_mutex;
    2106:	80 91 86 24 	lds	r24, 0x2486
    210a:	90 91 87 24 	lds	r25, 0x2487
    210e:	18 2f       	mov	r17, r24

   arb_semaphoreDestroy( gt_sdDev.t_mutex);

failed2:

   arb_destroyDevice( "sdDevice0");
    2110:	84 e4       	ldi	r24, 0x44	; 68
    2112:	90 e2       	ldi	r25, 0x20	; 32
    2114:	0e 94 b1 6e 	call	0xdd62	; 0xdd62 <arb_destroyDevice>
    2118:	ea cf       	rjmp	.-44     	; 0x20ee <drv_sdInit+0xba>

   return ARB_PASSED;

failed3:

   arb_semaphoreDestroy( gt_sdDev.t_mutex);
    211a:	80 91 86 24 	lds	r24, 0x2486
    211e:	90 91 87 24 	lds	r25, 0x2487
    2122:	0e 94 90 78 	call	0xf120	; 0xf120 <arb_semaphoreDestroy>
    2126:	16 ef       	ldi	r17, 0xF6	; 246
    2128:	f3 cf       	rjmp	.-26     	; 0x2110 <drv_sdInit+0xdc>

0000212a <drv_sdExit>:
 * Remove the device from the system
 *---------------------------------------------------------------------------*/
void drv_sdExit( void)
{

   if( gt_sdDev.t_mutex != 0) /*If created... destroy*/
    212a:	80 91 86 24 	lds	r24, 0x2486
    212e:	90 91 87 24 	lds	r25, 0x2487
    2132:	00 97       	sbiw	r24, 0x00	; 0
    2134:	09 f4       	brne	.+2      	; 0x2138 <drv_sdExit+0xe>
    2136:	08 95       	ret
   {
      arb_semaphoreDestroy( gt_sdDev.t_mutex);
    2138:	80 91 86 24 	lds	r24, 0x2486
    213c:	90 91 87 24 	lds	r25, 0x2487
    2140:	0e 94 90 78 	call	0xf120	; 0xf120 <arb_semaphoreDestroy>
      arb_destroyDevice( "sdDevice0");
    2144:	84 e4       	ldi	r24, 0x44	; 68
    2146:	90 e2       	ldi	r25, 0x20	; 32
    2148:	0e 94 b1 6e 	call	0xdd62	; 0xdd62 <arb_destroyDevice>
      hal_releaseSpiChannel( gt_sdDev.t_spiHndl);
    214c:	80 91 88 24 	lds	r24, 0x2488
    2150:	90 91 89 24 	lds	r25, 0x2489
    2154:	0e 94 bb 39 	call	0x7376	; 0x7376 <hal_releaseSpiChannel>
    2158:	08 95       	ret

0000215a <signalClose>:

/*---------------------------------------------------------------------------*
 * Remove this particular file attached to this device
 *---------------------------------------------------------------------------*/
t_error signalClose( t_DEVHANDLE t_devHandle)
{
    215a:	cf 93       	push	r28
    215c:	df 93       	push	r29
    215e:	0f 92       	push	r0
    2160:	0f 92       	push	r0
    2162:	cd b7       	in	r28, 0x3d	; 61
    2164:	de b7       	in	r29, 0x3e	; 62
    2166:	89 83       	std	Y+1, r24	; 0x01
    2168:	9a 83       	std	Y+2, r25	; 0x02

   /*------------------------------------------------------------------------*
    * We are going to access global memory or a register, so perform lock
    *------------------------------------------------------------------------*/
   arb_wait( gt_signalDev.t_mutex,
    216a:	80 91 90 24 	lds	r24, 0x2490
    216e:	90 91 91 24 	lds	r25, 0x2491
    2172:	60 e0       	ldi	r22, 0x00	; 0
    2174:	0e 94 69 7e 	call	0xfcd2	; 0xfcd2 <arb_wait>
             0);

   gt_signalDev.c_numUsers--;
    2178:	80 91 97 24 	lds	r24, 0x2497
    217c:	81 50       	subi	r24, 0x01	; 1
    217e:	80 93 97 24 	sts	0x2497, r24

   /*------------------------------------------------------------------------*
    * Release the lock
    *------------------------------------------------------------------------*/
   arb_signal( gt_signalDev.t_mutex);
    2182:	80 91 90 24 	lds	r24, 0x2490
    2186:	90 91 91 24 	lds	r25, 0x2491
    218a:	0e 94 22 7b 	call	0xf644	; 0xf644 <arb_signal>

   return ARB_PASSED;

}/*End signalClose*/
    218e:	80 e0       	ldi	r24, 0x00	; 0
    2190:	0f 90       	pop	r0
    2192:	0f 90       	pop	r0
    2194:	df 91       	pop	r29
    2196:	cf 91       	pop	r28
    2198:	08 95       	ret

0000219a <signalIoctl>:
}/*End signalOpen*/

int32_t signalIoctl( t_DEVHANDLE t_devHandle,
                     uint16_t s_command,
                     int32_t  i_arguments)
{
    219a:	cf 92       	push	r12
    219c:	df 92       	push	r13
    219e:	ef 92       	push	r14
    21a0:	ff 92       	push	r15
    21a2:	1f 93       	push	r17
    21a4:	cf 93       	push	r28
    21a6:	df 93       	push	r29
    21a8:	0f 92       	push	r0
    21aa:	0f 92       	push	r0
    21ac:	cd b7       	in	r28, 0x3d	; 61
    21ae:	de b7       	in	r29, 0x3e	; 62
    21b0:	89 83       	std	Y+1, r24	; 0x01
    21b2:	9a 83       	std	Y+2, r25	; 0x02
    21b4:	16 2f       	mov	r17, r22
   int32_t i_return = (int32_t)ARB_PASSED;

   /*------------------------------------------------------------------------*
    * We are going to access global memory or a register, so perform lock
    *------------------------------------------------------------------------*/
   arb_wait( gt_signalDev.t_mutex,
    21b6:	80 91 90 24 	lds	r24, 0x2490
    21ba:	90 91 91 24 	lds	r25, 0x2491
    21be:	60 e0       	ldi	r22, 0x00	; 0
    21c0:	0e 94 69 7e 	call	0xfcd2	; 0xfcd2 <arb_wait>
             0);

   switch( (t_signalCmd)s_command)
    21c4:	15 30       	cpi	r17, 0x05	; 5
    21c6:	09 f4       	brne	.+2      	; 0x21ca <signalIoctl+0x30>
    21c8:	c0 c1       	rjmp	.+896    	; 0x254a <signalIoctl+0x3b0>
    21ca:	16 30       	cpi	r17, 0x06	; 6
    21cc:	30 f1       	brcs	.+76     	; 0x221a <signalIoctl+0x80>
    21ce:	18 30       	cpi	r17, 0x08	; 8
    21d0:	09 f4       	brne	.+2      	; 0x21d4 <signalIoctl+0x3a>
    21d2:	52 c1       	rjmp	.+676    	; 0x2478 <signalIoctl+0x2de>
    21d4:	19 30       	cpi	r17, 0x09	; 9
    21d6:	08 f0       	brcs	.+2      	; 0x21da <signalIoctl+0x40>
    21d8:	50 c0       	rjmp	.+160    	; 0x227a <signalIoctl+0xe0>
    21da:	16 30       	cpi	r17, 0x06	; 6
    21dc:	09 f4       	brne	.+2      	; 0x21e0 <signalIoctl+0x46>
    21de:	29 c1       	rjmp	.+594    	; 0x2432 <signalIoctl+0x298>
    21e0:	17 30       	cpi	r17, 0x07	; 7
    21e2:	09 f4       	brne	.+2      	; 0x21e6 <signalIoctl+0x4c>
    21e4:	03 c1       	rjmp	.+518    	; 0x23ec <signalIoctl+0x252>

      break;/*End case ALL_LEDS_TOGGLE:*/

      default:

         i_return = (int32_t)ARB_INVALID_CMD;
    21e6:	8b ef       	ldi	r24, 0xFB	; 251
    21e8:	c8 2e       	mov	r12, r24
    21ea:	8f ef       	ldi	r24, 0xFF	; 255
    21ec:	d8 2e       	mov	r13, r24
    21ee:	8f ef       	ldi	r24, 0xFF	; 255
    21f0:	e8 2e       	mov	r14, r24
    21f2:	8f ef       	ldi	r24, 0xFF	; 255
    21f4:	f8 2e       	mov	r15, r24
   }/*End switch( (t_signalCmd)s_command)*/

   /*------------------------------------------------------------------------*
    * Release the lock
    *------------------------------------------------------------------------*/
   arb_signal( gt_signalDev.t_mutex);
    21f6:	80 91 90 24 	lds	r24, 0x2490
    21fa:	90 91 91 24 	lds	r25, 0x2491
    21fe:	0e 94 22 7b 	call	0xf644	; 0xf644 <arb_signal>

   return i_return;

}/*End signalIoctl*/
    2202:	b6 01       	movw	r22, r12
    2204:	c7 01       	movw	r24, r14
    2206:	0f 90       	pop	r0
    2208:	0f 90       	pop	r0
    220a:	df 91       	pop	r29
    220c:	cf 91       	pop	r28
    220e:	1f 91       	pop	r17
    2210:	ff 90       	pop	r15
    2212:	ef 90       	pop	r14
    2214:	df 90       	pop	r13
    2216:	cf 90       	pop	r12
    2218:	08 95       	ret
    * We are going to access global memory or a register, so perform lock
    *------------------------------------------------------------------------*/
   arb_wait( gt_signalDev.t_mutex,
             0);

   switch( (t_signalCmd)s_command)
    221a:	12 30       	cpi	r17, 0x02	; 2
    221c:	09 f4       	brne	.+2      	; 0x2220 <signalIoctl+0x86>
    221e:	72 c1       	rjmp	.+740    	; 0x2504 <signalIoctl+0x36a>
    2220:	13 30       	cpi	r17, 0x03	; 3
    2222:	08 f4       	brcc	.+2      	; 0x2226 <signalIoctl+0x8c>
    2224:	4e c0       	rjmp	.+156    	; 0x22c2 <signalIoctl+0x128>
    2226:	13 30       	cpi	r17, 0x03	; 3
    2228:	09 f4       	brne	.+2      	; 0x222c <signalIoctl+0x92>
    222a:	98 c0       	rjmp	.+304    	; 0x235c <signalIoctl+0x1c2>
    222c:	14 30       	cpi	r17, 0x04	; 4
    222e:	d9 f6       	brne	.-74     	; 0x21e6 <signalIoctl+0x4c>

      break;/*End case GREEN_LED_ON:*/

      case GREEN_LED_OFF:

         hal_gpioOn( gt_signalDev.c_signalPort,
    2230:	80 91 95 24 	lds	r24, 0x2495
   static inline t_gpioError __attribute__ ( (always_inline)) hal_gpioOn(
   t_gpioPort t_port, uint8_t    c_pin)
   {
      t_gpioError t_err = GPIO_PASSED;

      switch( t_port)
    2234:	90 91 92 24 	lds	r25, 0x2492
    2238:	95 30       	cpi	r25, 0x05	; 5
    223a:	11 f4       	brne	.+4      	; 0x2240 <signalIoctl+0xa6>
    223c:	0c 94 3f 19 	jmp	0x327e	; 0x327e <signalIoctl+0x10e4>
    2240:	96 30       	cpi	r25, 0x06	; 6
    2242:	08 f4       	brcc	.+2      	; 0x2246 <signalIoctl+0xac>
    2244:	03 c2       	rjmp	.+1030   	; 0x264c <signalIoctl+0x4b2>
    2246:	98 30       	cpi	r25, 0x08	; 8
    2248:	11 f4       	brne	.+4      	; 0x224e <signalIoctl+0xb4>
    224a:	0c 94 b4 19 	jmp	0x3368	; 0x3368 <signalIoctl+0x11ce>
    224e:	99 30       	cpi	r25, 0x09	; 9
    2250:	08 f0       	brcs	.+2      	; 0x2254 <signalIoctl+0xba>
    2252:	9a c3       	rjmp	.+1844   	; 0x2988 <signalIoctl+0x7ee>
    2254:	96 30       	cpi	r25, 0x06	; 6
    2256:	09 f4       	brne	.+2      	; 0x225a <signalIoctl+0xc0>
    2258:	1c c5       	rjmp	.+2616   	; 0x2c92 <signalIoctl+0xaf8>
    225a:	97 30       	cpi	r25, 0x07	; 7
    225c:	09 f0       	breq	.+2      	; 0x2260 <signalIoctl+0xc6>
    225e:	02 c2       	rjmp	.+1028   	; 0x2664 <signalIoctl+0x4ca>
         case GPIO_PORTJ:

            /*---------------------------------------------------------------*
             * Make sure the requested pin is configured as an output
             *---------------------------------------------------------------*/
            if( !(PORTJ.DIR & c_pin))
    2260:	90 91 00 07 	lds	r25, 0x0700
    2264:	98 23       	and	r25, r24
    2266:	11 f4       	brne	.+4      	; 0x226c <signalIoctl+0xd2>
    2268:	0c 94 16 1a 	jmp	0x342c	; 0x342c <signalIoctl+0x1292>
               t_err = GPIO_PIN_IS_INPUT;
            else
               PORTJ.OUTSET = c_pin;
    226c:	e0 e0       	ldi	r30, 0x00	; 0
    226e:	f7 e0       	ldi	r31, 0x07	; 7
    2270:	85 83       	std	Z+5, r24	; 0x05

int32_t signalIoctl( t_DEVHANDLE t_devHandle,
                     uint16_t s_command,
                     int32_t  i_arguments)
{
   int32_t i_return = (int32_t)ARB_PASSED;
    2272:	cc 24       	eor	r12, r12
    2274:	dd 24       	eor	r13, r13
    2276:	76 01       	movw	r14, r12
    2278:	be cf       	rjmp	.-132    	; 0x21f6 <signalIoctl+0x5c>
    * We are going to access global memory or a register, so perform lock
    *------------------------------------------------------------------------*/
   arb_wait( gt_signalDev.t_mutex,
             0);

   switch( (t_signalCmd)s_command)
    227a:	1a 30       	cpi	r17, 0x0A	; 10
    227c:	09 f4       	brne	.+2      	; 0x2280 <signalIoctl+0xe6>
    227e:	1f c1       	rjmp	.+574    	; 0x24be <signalIoctl+0x324>
    2280:	1a 30       	cpi	r17, 0x0A	; 10
    2282:	08 f4       	brcc	.+2      	; 0x2286 <signalIoctl+0xec>
    2284:	48 c0       	rjmp	.+144    	; 0x2316 <signalIoctl+0x17c>
    2286:	1b 30       	cpi	r17, 0x0B	; 11
    2288:	09 f0       	breq	.+2      	; 0x228c <signalIoctl+0xf2>
    228a:	ad cf       	rjmp	.-166    	; 0x21e6 <signalIoctl+0x4c>

      break;/*End case ALL_LEDS_OFF:*/

      case ALL_LEDS_TOGGLE:

         hal_gpioToggle( gt_signalDev.c_signalPort,
    228c:	80 91 96 24 	lds	r24, 0x2496
   static inline t_gpioError __attribute__ ( (always_inline)) hal_gpioToggle(
   t_gpioPort t_port, uint8_t    c_pin)
   {
      t_gpioError t_err = GPIO_PASSED;

      switch( t_port)
    2290:	90 91 92 24 	lds	r25, 0x2492
    2294:	95 30       	cpi	r25, 0x05	; 5
    2296:	11 f4       	brne	.+4      	; 0x229c <signalIoctl+0x102>
    2298:	0c 94 e4 18 	jmp	0x31c8	; 0x31c8 <signalIoctl+0x102e>
    229c:	96 30       	cpi	r25, 0x06	; 6
    229e:	08 f0       	brcs	.+2      	; 0x22a2 <signalIoctl+0x108>
    22a0:	25 c2       	rjmp	.+1098   	; 0x26ec <signalIoctl+0x552>
    22a2:	92 30       	cpi	r25, 0x02	; 2
    22a4:	09 f4       	brne	.+2      	; 0x22a8 <signalIoctl+0x10e>
    22a6:	09 c6       	rjmp	.+3090   	; 0x2eba <signalIoctl+0xd20>
    22a8:	93 30       	cpi	r25, 0x03	; 3
    22aa:	08 f0       	brcs	.+2      	; 0x22ae <signalIoctl+0x114>
    22ac:	37 c2       	rjmp	.+1134   	; 0x271c <signalIoctl+0x582>
    22ae:	99 23       	and	r25, r25
    22b0:	09 f4       	brne	.+2      	; 0x22b4 <signalIoctl+0x11a>
    22b2:	17 c7       	rjmp	.+3630   	; 0x30e2 <signalIoctl+0xf48>
    22b4:	91 30       	cpi	r25, 0x01	; 1
    22b6:	09 f4       	brne	.+2      	; 0x22ba <signalIoctl+0x120>
    22b8:	14 c4       	rjmp	.+2088   	; 0x2ae2 <signalIoctl+0x948>

int32_t signalIoctl( t_DEVHANDLE t_devHandle,
                     uint16_t s_command,
                     int32_t  i_arguments)
{
   int32_t i_return = (int32_t)ARB_PASSED;
    22ba:	cc 24       	eor	r12, r12
    22bc:	dd 24       	eor	r13, r13
    22be:	76 01       	movw	r14, r12
    22c0:	9a cf       	rjmp	.-204    	; 0x21f6 <signalIoctl+0x5c>
    * We are going to access global memory or a register, so perform lock
    *------------------------------------------------------------------------*/
   arb_wait( gt_signalDev.t_mutex,
             0);

   switch( (t_signalCmd)s_command)
    22c2:	11 23       	and	r17, r17
    22c4:	09 f4       	brne	.+2      	; 0x22c8 <signalIoctl+0x12e>
    22c6:	6e c0       	rjmp	.+220    	; 0x23a4 <signalIoctl+0x20a>
    22c8:	11 30       	cpi	r17, 0x01	; 1
    22ca:	09 f0       	breq	.+2      	; 0x22ce <signalIoctl+0x134>
    22cc:	8c cf       	rjmp	.-232    	; 0x21e6 <signalIoctl+0x4c>

      break;/*End case RED_LED_ON:*/

      case RED_LED_OFF:

         hal_gpioOn( gt_signalDev.c_signalPort,
    22ce:	80 91 93 24 	lds	r24, 0x2493
   static inline t_gpioError __attribute__ ( (always_inline)) hal_gpioOn(
   t_gpioPort t_port, uint8_t    c_pin)
   {
      t_gpioError t_err = GPIO_PASSED;

      switch( t_port)
    22d2:	90 91 92 24 	lds	r25, 0x2492
    22d6:	95 30       	cpi	r25, 0x05	; 5
    22d8:	09 f4       	brne	.+2      	; 0x22dc <signalIoctl+0x142>
    22da:	77 c5       	rjmp	.+2798   	; 0x2dca <signalIoctl+0xc30>
    22dc:	96 30       	cpi	r25, 0x06	; 6
    22de:	08 f0       	brcs	.+2      	; 0x22e2 <signalIoctl+0x148>
    22e0:	a5 c1       	rjmp	.+842    	; 0x262c <signalIoctl+0x492>
    22e2:	92 30       	cpi	r25, 0x02	; 2
    22e4:	11 f4       	brne	.+4      	; 0x22ea <signalIoctl+0x150>
    22e6:	0c 94 ce 19 	jmp	0x339c	; 0x339c <signalIoctl+0x1202>
    22ea:	93 30       	cpi	r25, 0x03	; 3
    22ec:	08 f0       	brcs	.+2      	; 0x22f0 <signalIoctl+0x156>
    22ee:	94 c3       	rjmp	.+1832   	; 0x2a18 <signalIoctl+0x87e>
    22f0:	99 23       	and	r25, r25
    22f2:	09 f4       	brne	.+2      	; 0x22f6 <signalIoctl+0x15c>
    22f4:	2e c5       	rjmp	.+2652   	; 0x2d52 <signalIoctl+0xbb8>
    22f6:	91 30       	cpi	r25, 0x01	; 1
    22f8:	09 f0       	breq	.+2      	; 0x22fc <signalIoctl+0x162>
    22fa:	a4 c1       	rjmp	.+840    	; 0x2644 <signalIoctl+0x4aa>
         case GPIO_PORTB:

            /*---------------------------------------------------------------*
             * Make sure the requested pin is configured as an output
             *---------------------------------------------------------------*/
            if( !(PORTB.DIR & c_pin))
    22fc:	90 91 20 06 	lds	r25, 0x0620
    2300:	98 23       	and	r25, r24
    2302:	11 f4       	brne	.+4      	; 0x2308 <signalIoctl+0x16e>
    2304:	0c 94 02 1a 	jmp	0x3404	; 0x3404 <signalIoctl+0x126a>
               t_err = GPIO_PIN_IS_INPUT;
            else
               PORTB.OUTSET = c_pin;
    2308:	e0 e2       	ldi	r30, 0x20	; 32
    230a:	f6 e0       	ldi	r31, 0x06	; 6
    230c:	85 83       	std	Z+5, r24	; 0x05

int32_t signalIoctl( t_DEVHANDLE t_devHandle,
                     uint16_t s_command,
                     int32_t  i_arguments)
{
   int32_t i_return = (int32_t)ARB_PASSED;
    230e:	cc 24       	eor	r12, r12
    2310:	dd 24       	eor	r13, r13
    2312:	76 01       	movw	r14, r12
    2314:	70 cf       	rjmp	.-288    	; 0x21f6 <signalIoctl+0x5c>

      break;/*End case YELLOW_LED_TOGGLE:*/

      case ALL_LEDS_ON:

         hal_gpioOff( gt_signalDev.c_signalPort,
    2316:	80 91 96 24 	lds	r24, 0x2496
   t_gpioPort t_port, uint8_t    c_pin)
   {

      t_gpioError t_err = GPIO_PASSED;

      switch( t_port)
    231a:	90 91 92 24 	lds	r25, 0x2492
    231e:	95 30       	cpi	r25, 0x05	; 5
    2320:	09 f4       	brne	.+2      	; 0x2324 <signalIoctl+0x18a>
    2322:	4b c4       	rjmp	.+2198   	; 0x2bba <signalIoctl+0xa20>
    2324:	96 30       	cpi	r25, 0x06	; 6
    2326:	08 f4       	brcc	.+2      	; 0x232a <signalIoctl+0x190>
    2328:	d1 c1       	rjmp	.+930    	; 0x26cc <signalIoctl+0x532>
    232a:	98 30       	cpi	r25, 0x08	; 8
    232c:	09 f4       	brne	.+2      	; 0x2330 <signalIoctl+0x196>
    232e:	a9 c3       	rjmp	.+1874   	; 0x2a82 <signalIoctl+0x8e8>
    2330:	99 30       	cpi	r25, 0x09	; 9
    2332:	08 f0       	brcs	.+2      	; 0x2336 <signalIoctl+0x19c>
    2334:	83 c3       	rjmp	.+1798   	; 0x2a3c <signalIoctl+0x8a2>
    2336:	96 30       	cpi	r25, 0x06	; 6
    2338:	09 f4       	brne	.+2      	; 0x233c <signalIoctl+0x1a2>
    233a:	23 c5       	rjmp	.+2630   	; 0x2d82 <signalIoctl+0xbe8>
    233c:	97 30       	cpi	r25, 0x07	; 7
    233e:	09 f0       	breq	.+2      	; 0x2342 <signalIoctl+0x1a8>
    2340:	d1 c1       	rjmp	.+930    	; 0x26e4 <signalIoctl+0x54a>
         case GPIO_PORTJ:

            /*---------------------------------------------------------------*
             * Make sure the requested pin is configured as an output
             *---------------------------------------------------------------*/
            if( !(PORTJ.DIR & c_pin))
    2342:	90 91 00 07 	lds	r25, 0x0700
    2346:	98 23       	and	r25, r24
    2348:	11 f4       	brne	.+4      	; 0x234e <signalIoctl+0x1b4>
    234a:	0c 94 a2 1a 	jmp	0x3544	; 0x3544 <signalIoctl+0x13aa>
               t_err = GPIO_PIN_IS_INPUT;
            else
               PORTJ.OUTCLR = c_pin;
    234e:	e0 e0       	ldi	r30, 0x00	; 0
    2350:	f7 e0       	ldi	r31, 0x07	; 7
    2352:	86 83       	std	Z+6, r24	; 0x06

int32_t signalIoctl( t_DEVHANDLE t_devHandle,
                     uint16_t s_command,
                     int32_t  i_arguments)
{
   int32_t i_return = (int32_t)ARB_PASSED;
    2354:	cc 24       	eor	r12, r12
    2356:	dd 24       	eor	r13, r13
    2358:	76 01       	movw	r14, r12
    235a:	4d cf       	rjmp	.-358    	; 0x21f6 <signalIoctl+0x5c>

      break;/*End case RED_LED_TOGGLE:*/

      case GREEN_LED_ON:

         hal_gpioOff( gt_signalDev.c_signalPort,
    235c:	80 91 95 24 	lds	r24, 0x2495
   t_gpioPort t_port, uint8_t    c_pin)
   {

      t_gpioError t_err = GPIO_PASSED;

      switch( t_port)
    2360:	90 91 92 24 	lds	r25, 0x2492
    2364:	95 30       	cpi	r25, 0x05	; 5
    2366:	09 f4       	brne	.+2      	; 0x236a <signalIoctl+0x1d0>
    2368:	c8 c6       	rjmp	.+3472   	; 0x30fa <signalIoctl+0xf60>
    236a:	96 30       	cpi	r25, 0x06	; 6
    236c:	08 f4       	brcc	.+2      	; 0x2370 <signalIoctl+0x1d6>
    236e:	8e c1       	rjmp	.+796    	; 0x268c <signalIoctl+0x4f2>
    2370:	98 30       	cpi	r25, 0x08	; 8
    2372:	11 f4       	brne	.+4      	; 0x2378 <signalIoctl+0x1de>
    2374:	0c 94 73 19 	jmp	0x32e6	; 0x32e6 <signalIoctl+0x114c>
    2378:	99 30       	cpi	r25, 0x09	; 9
    237a:	08 f0       	brcs	.+2      	; 0x237e <signalIoctl+0x1e4>
    237c:	07 c2       	rjmp	.+1038   	; 0x278c <signalIoctl+0x5f2>
    237e:	96 30       	cpi	r25, 0x06	; 6
    2380:	09 f4       	brne	.+2      	; 0x2384 <signalIoctl+0x1ea>
    2382:	d3 c3       	rjmp	.+1958   	; 0x2b2a <signalIoctl+0x990>
    2384:	97 30       	cpi	r25, 0x07	; 7
    2386:	09 f0       	breq	.+2      	; 0x238a <signalIoctl+0x1f0>
    2388:	8d c1       	rjmp	.+794    	; 0x26a4 <signalIoctl+0x50a>
         case GPIO_PORTJ:

            /*---------------------------------------------------------------*
             * Make sure the requested pin is configured as an output
             *---------------------------------------------------------------*/
            if( !(PORTJ.DIR & c_pin))
    238a:	90 91 00 07 	lds	r25, 0x0700
    238e:	98 23       	and	r25, r24
    2390:	11 f4       	brne	.+4      	; 0x2396 <signalIoctl+0x1fc>
    2392:	0c 94 2e 1b 	jmp	0x365c	; 0x365c <signalIoctl+0x14c2>
               t_err = GPIO_PIN_IS_INPUT;
            else
               PORTJ.OUTCLR = c_pin;
    2396:	e0 e0       	ldi	r30, 0x00	; 0
    2398:	f7 e0       	ldi	r31, 0x07	; 7
    239a:	86 83       	std	Z+6, r24	; 0x06

int32_t signalIoctl( t_DEVHANDLE t_devHandle,
                     uint16_t s_command,
                     int32_t  i_arguments)
{
   int32_t i_return = (int32_t)ARB_PASSED;
    239c:	cc 24       	eor	r12, r12
    239e:	dd 24       	eor	r13, r13
    23a0:	76 01       	movw	r14, r12
    23a2:	29 cf       	rjmp	.-430    	; 0x21f6 <signalIoctl+0x5c>

   switch( (t_signalCmd)s_command)
   {
      case RED_LED_ON:

         hal_gpioOff( gt_signalDev.c_signalPort,
    23a4:	80 91 93 24 	lds	r24, 0x2493
   t_gpioPort t_port, uint8_t    c_pin)
   {

      t_gpioError t_err = GPIO_PASSED;

      switch( t_port)
    23a8:	90 91 92 24 	lds	r25, 0x2492
    23ac:	95 30       	cpi	r25, 0x05	; 5
    23ae:	09 f4       	brne	.+2      	; 0x23b2 <signalIoctl+0x218>
    23b0:	8c c3       	rjmp	.+1816   	; 0x2aca <signalIoctl+0x930>
    23b2:	96 30       	cpi	r25, 0x06	; 6
    23b4:	08 f4       	brcc	.+2      	; 0x23b8 <signalIoctl+0x21e>
    23b6:	0a c1       	rjmp	.+532    	; 0x25cc <signalIoctl+0x432>
    23b8:	98 30       	cpi	r25, 0x08	; 8
    23ba:	11 f4       	brne	.+4      	; 0x23c0 <signalIoctl+0x226>
    23bc:	0c 94 c1 19 	jmp	0x3382	; 0x3382 <signalIoctl+0x11e8>
    23c0:	99 30       	cpi	r25, 0x09	; 9
    23c2:	08 f0       	brcs	.+2      	; 0x23c6 <signalIoctl+0x22c>
    23c4:	99 c2       	rjmp	.+1330   	; 0x28f8 <signalIoctl+0x75e>
    23c6:	96 30       	cpi	r25, 0x06	; 6
    23c8:	09 f4       	brne	.+2      	; 0x23cc <signalIoctl+0x232>
    23ca:	03 c4       	rjmp	.+2054   	; 0x2bd2 <signalIoctl+0xa38>
    23cc:	97 30       	cpi	r25, 0x07	; 7
    23ce:	09 f0       	breq	.+2      	; 0x23d2 <signalIoctl+0x238>
    23d0:	09 c1       	rjmp	.+530    	; 0x25e4 <signalIoctl+0x44a>
         case GPIO_PORTJ:

            /*---------------------------------------------------------------*
             * Make sure the requested pin is configured as an output
             *---------------------------------------------------------------*/
            if( !(PORTJ.DIR & c_pin))
    23d2:	90 91 00 07 	lds	r25, 0x0700
    23d6:	98 23       	and	r25, r24
    23d8:	11 f4       	brne	.+4      	; 0x23de <signalIoctl+0x244>
    23da:	0c 94 ee 19 	jmp	0x33dc	; 0x33dc <signalIoctl+0x1242>
               t_err = GPIO_PIN_IS_INPUT;
            else
               PORTJ.OUTCLR = c_pin;
    23de:	e0 e0       	ldi	r30, 0x00	; 0
    23e0:	f7 e0       	ldi	r31, 0x07	; 7
    23e2:	86 83       	std	Z+6, r24	; 0x06

int32_t signalIoctl( t_DEVHANDLE t_devHandle,
                     uint16_t s_command,
                     int32_t  i_arguments)
{
   int32_t i_return = (int32_t)ARB_PASSED;
    23e4:	cc 24       	eor	r12, r12
    23e6:	dd 24       	eor	r13, r13
    23e8:	76 01       	movw	r14, r12
    23ea:	05 cf       	rjmp	.-502    	; 0x21f6 <signalIoctl+0x5c>

      break;/*End case YELLOW_LED_ON:*/

      case YELLOW_LED_OFF:

         hal_gpioOn( gt_signalDev.c_signalPort,
    23ec:	80 91 94 24 	lds	r24, 0x2494
   static inline t_gpioError __attribute__ ( (always_inline)) hal_gpioOn(
   t_gpioPort t_port, uint8_t    c_pin)
   {
      t_gpioError t_err = GPIO_PASSED;

      switch( t_port)
    23f0:	90 91 92 24 	lds	r25, 0x2492
    23f4:	95 30       	cpi	r25, 0x05	; 5
    23f6:	09 f4       	brne	.+2      	; 0x23fa <signalIoctl+0x260>
    23f8:	28 c7       	rjmp	.+3664   	; 0x324a <signalIoctl+0x10b0>
    23fa:	96 30       	cpi	r25, 0x06	; 6
    23fc:	08 f4       	brcc	.+2      	; 0x2400 <signalIoctl+0x266>
    23fe:	56 c1       	rjmp	.+684    	; 0x26ac <signalIoctl+0x512>
    2400:	98 30       	cpi	r25, 0x08	; 8
    2402:	09 f4       	brne	.+2      	; 0x2406 <signalIoctl+0x26c>
    2404:	4a c3       	rjmp	.+1684   	; 0x2a9a <signalIoctl+0x900>
    2406:	99 30       	cpi	r25, 0x09	; 9
    2408:	08 f0       	brcs	.+2      	; 0x240c <signalIoctl+0x272>
    240a:	2a c3       	rjmp	.+1620   	; 0x2a60 <signalIoctl+0x8c6>
    240c:	96 30       	cpi	r25, 0x06	; 6
    240e:	09 f4       	brne	.+2      	; 0x2412 <signalIoctl+0x278>
    2410:	d0 c4       	rjmp	.+2464   	; 0x2db2 <signalIoctl+0xc18>
    2412:	97 30       	cpi	r25, 0x07	; 7
    2414:	09 f0       	breq	.+2      	; 0x2418 <signalIoctl+0x27e>
    2416:	56 c1       	rjmp	.+684    	; 0x26c4 <signalIoctl+0x52a>
         case GPIO_PORTJ:

            /*---------------------------------------------------------------*
             * Make sure the requested pin is configured as an output
             *---------------------------------------------------------------*/
            if( !(PORTJ.DIR & c_pin))
    2418:	90 91 00 07 	lds	r25, 0x0700
    241c:	98 23       	and	r25, r24
    241e:	11 f4       	brne	.+4      	; 0x2424 <signalIoctl+0x28a>
    2420:	0c 94 66 1a 	jmp	0x34cc	; 0x34cc <signalIoctl+0x1332>
               t_err = GPIO_PIN_IS_INPUT;
            else
               PORTJ.OUTSET = c_pin;
    2424:	e0 e0       	ldi	r30, 0x00	; 0
    2426:	f7 e0       	ldi	r31, 0x07	; 7
    2428:	85 83       	std	Z+5, r24	; 0x05

int32_t signalIoctl( t_DEVHANDLE t_devHandle,
                     uint16_t s_command,
                     int32_t  i_arguments)
{
   int32_t i_return = (int32_t)ARB_PASSED;
    242a:	cc 24       	eor	r12, r12
    242c:	dd 24       	eor	r13, r13
    242e:	76 01       	movw	r14, r12
    2430:	e2 ce       	rjmp	.-572    	; 0x21f6 <signalIoctl+0x5c>

      break;/*End case GREEN_LED_TOGGLE:*/

      case YELLOW_LED_ON:

         hal_gpioOff( gt_signalDev.c_signalPort,
    2432:	80 91 94 24 	lds	r24, 0x2494
   t_gpioPort t_port, uint8_t    c_pin)
   {

      t_gpioError t_err = GPIO_PASSED;

      switch( t_port)
    2436:	90 91 92 24 	lds	r25, 0x2492
    243a:	95 30       	cpi	r25, 0x05	; 5
    243c:	09 f4       	brne	.+2      	; 0x2440 <signalIoctl+0x2a6>
    243e:	dd c4       	rjmp	.+2490   	; 0x2dfa <signalIoctl+0xc60>
    2440:	96 30       	cpi	r25, 0x06	; 6
    2442:	08 f4       	brcc	.+2      	; 0x2446 <signalIoctl+0x2ac>
    2444:	e3 c0       	rjmp	.+454    	; 0x260c <signalIoctl+0x472>
    2446:	98 30       	cpi	r25, 0x08	; 8
    2448:	09 f4       	brne	.+2      	; 0x244c <signalIoctl+0x2b2>
    244a:	8a c6       	rjmp	.+3348   	; 0x3160 <signalIoctl+0xfc6>
    244c:	99 30       	cpi	r25, 0x09	; 9
    244e:	08 f0       	brcs	.+2      	; 0x2452 <signalIoctl+0x2b8>
    2450:	e7 c1       	rjmp	.+974    	; 0x2820 <signalIoctl+0x686>
    2452:	96 30       	cpi	r25, 0x06	; 6
    2454:	09 f4       	brne	.+2      	; 0x2458 <signalIoctl+0x2be>
    2456:	29 c4       	rjmp	.+2130   	; 0x2caa <signalIoctl+0xb10>
    2458:	97 30       	cpi	r25, 0x07	; 7
    245a:	09 f0       	breq	.+2      	; 0x245e <signalIoctl+0x2c4>
    245c:	e3 c0       	rjmp	.+454    	; 0x2624 <signalIoctl+0x48a>
         case GPIO_PORTJ:

            /*---------------------------------------------------------------*
             * Make sure the requested pin is configured as an output
             *---------------------------------------------------------------*/
            if( !(PORTJ.DIR & c_pin))
    245e:	90 91 00 07 	lds	r25, 0x0700
    2462:	98 23       	and	r25, r24
    2464:	11 f4       	brne	.+4      	; 0x246a <signalIoctl+0x2d0>
    2466:	0c 94 42 1b 	jmp	0x3684	; 0x3684 <signalIoctl+0x14ea>
               t_err = GPIO_PIN_IS_INPUT;
            else
               PORTJ.OUTCLR = c_pin;
    246a:	e0 e0       	ldi	r30, 0x00	; 0
    246c:	f7 e0       	ldi	r31, 0x07	; 7
    246e:	86 83       	std	Z+6, r24	; 0x06

int32_t signalIoctl( t_DEVHANDLE t_devHandle,
                     uint16_t s_command,
                     int32_t  i_arguments)
{
   int32_t i_return = (int32_t)ARB_PASSED;
    2470:	cc 24       	eor	r12, r12
    2472:	dd 24       	eor	r13, r13
    2474:	76 01       	movw	r14, r12
    2476:	bf ce       	rjmp	.-642    	; 0x21f6 <signalIoctl+0x5c>

      break;/*End case YELLOW_LED_OFF:*/

      case YELLOW_LED_TOGGLE:

         hal_gpioToggle( gt_signalDev.c_signalPort,
    2478:	80 91 94 24 	lds	r24, 0x2494
   static inline t_gpioError __attribute__ ( (always_inline)) hal_gpioToggle(
   t_gpioPort t_port, uint8_t    c_pin)
   {
      t_gpioError t_err = GPIO_PASSED;

      switch( t_port)
    247c:	90 91 92 24 	lds	r25, 0x2492
    2480:	95 30       	cpi	r25, 0x05	; 5
    2482:	09 f4       	brne	.+2      	; 0x2486 <signalIoctl+0x2ec>
    2484:	22 c6       	rjmp	.+3140   	; 0x30ca <signalIoctl+0xf30>
    2486:	96 30       	cpi	r25, 0x06	; 6
    2488:	08 f4       	brcc	.+2      	; 0x248c <signalIoctl+0x2f2>
    248a:	b0 c0       	rjmp	.+352    	; 0x25ec <signalIoctl+0x452>
    248c:	98 30       	cpi	r25, 0x08	; 8
    248e:	09 f4       	brne	.+2      	; 0x2492 <signalIoctl+0x2f8>
    2490:	c4 c3       	rjmp	.+1928   	; 0x2c1a <signalIoctl+0xa80>
    2492:	99 30       	cpi	r25, 0x09	; 9
    2494:	08 f0       	brcs	.+2      	; 0x2498 <signalIoctl+0x2fe>
    2496:	42 c2       	rjmp	.+1156   	; 0x291c <signalIoctl+0x782>
    2498:	96 30       	cpi	r25, 0x06	; 6
    249a:	09 f4       	brne	.+2      	; 0x249e <signalIoctl+0x304>
    249c:	82 c3       	rjmp	.+1796   	; 0x2ba2 <signalIoctl+0xa08>
    249e:	97 30       	cpi	r25, 0x07	; 7
    24a0:	09 f0       	breq	.+2      	; 0x24a4 <signalIoctl+0x30a>
    24a2:	b0 c0       	rjmp	.+352    	; 0x2604 <signalIoctl+0x46a>
         case GPIO_PORTJ:

            /*---------------------------------------------------------------*
             * Make sure the requested pin is configured as an output
             *---------------------------------------------------------------*/
            if( !(PORTJ.DIR & c_pin))
    24a4:	90 91 00 07 	lds	r25, 0x0700
    24a8:	98 23       	and	r25, r24
    24aa:	11 f4       	brne	.+4      	; 0x24b0 <signalIoctl+0x316>
    24ac:	0c 94 de 1a 	jmp	0x35bc	; 0x35bc <signalIoctl+0x1422>
               t_err = GPIO_PIN_IS_INPUT;
            else
               PORTJ.OUTTGL = c_pin;
    24b0:	e0 e0       	ldi	r30, 0x00	; 0
    24b2:	f7 e0       	ldi	r31, 0x07	; 7
    24b4:	87 83       	std	Z+7, r24	; 0x07

int32_t signalIoctl( t_DEVHANDLE t_devHandle,
                     uint16_t s_command,
                     int32_t  i_arguments)
{
   int32_t i_return = (int32_t)ARB_PASSED;
    24b6:	cc 24       	eor	r12, r12
    24b8:	dd 24       	eor	r13, r13
    24ba:	76 01       	movw	r14, r12
    24bc:	9c ce       	rjmp	.-712    	; 0x21f6 <signalIoctl+0x5c>

      break;/*End case ALL_LEDS_ON:*/

      case ALL_LEDS_OFF:

         hal_gpioOn( gt_signalDev.c_signalPort,
    24be:	80 91 96 24 	lds	r24, 0x2496
   static inline t_gpioError __attribute__ ( (always_inline)) hal_gpioOn(
   t_gpioPort t_port, uint8_t    c_pin)
   {
      t_gpioError t_err = GPIO_PASSED;

      switch( t_port)
    24c2:	90 91 92 24 	lds	r25, 0x2492
    24c6:	95 30       	cpi	r25, 0x05	; 5
    24c8:	09 f4       	brne	.+2      	; 0x24cc <signalIoctl+0x332>
    24ca:	17 c3       	rjmp	.+1582   	; 0x2afa <signalIoctl+0x960>
    24cc:	96 30       	cpi	r25, 0x06	; 6
    24ce:	08 f4       	brcc	.+2      	; 0x24d2 <signalIoctl+0x338>
    24d0:	cd c0       	rjmp	.+410    	; 0x266c <signalIoctl+0x4d2>
    24d2:	98 30       	cpi	r25, 0x08	; 8
    24d4:	09 f4       	brne	.+2      	; 0x24d8 <signalIoctl+0x33e>
    24d6:	14 c7       	rjmp	.+3624   	; 0x3300 <signalIoctl+0x1166>
    24d8:	99 30       	cpi	r25, 0x09	; 9
    24da:	08 f0       	brcs	.+2      	; 0x24de <signalIoctl+0x344>
    24dc:	79 c2       	rjmp	.+1266   	; 0x29d0 <signalIoctl+0x836>
    24de:	96 30       	cpi	r25, 0x06	; 6
    24e0:	09 f4       	brne	.+2      	; 0x24e4 <signalIoctl+0x34a>
    24e2:	07 c4       	rjmp	.+2062   	; 0x2cf2 <signalIoctl+0xb58>
    24e4:	97 30       	cpi	r25, 0x07	; 7
    24e6:	09 f0       	breq	.+2      	; 0x24ea <signalIoctl+0x350>
    24e8:	cd c0       	rjmp	.+410    	; 0x2684 <signalIoctl+0x4ea>
         case GPIO_PORTJ:

            /*---------------------------------------------------------------*
             * Make sure the requested pin is configured as an output
             *---------------------------------------------------------------*/
            if( !(PORTJ.DIR & c_pin))
    24ea:	90 91 00 07 	lds	r25, 0x0700
    24ee:	98 23       	and	r25, r24
    24f0:	11 f4       	brne	.+4      	; 0x24f6 <signalIoctl+0x35c>
    24f2:	0c 94 52 1a 	jmp	0x34a4	; 0x34a4 <signalIoctl+0x130a>
               t_err = GPIO_PIN_IS_INPUT;
            else
               PORTJ.OUTSET = c_pin;
    24f6:	e0 e0       	ldi	r30, 0x00	; 0
    24f8:	f7 e0       	ldi	r31, 0x07	; 7
    24fa:	85 83       	std	Z+5, r24	; 0x05

int32_t signalIoctl( t_DEVHANDLE t_devHandle,
                     uint16_t s_command,
                     int32_t  i_arguments)
{
   int32_t i_return = (int32_t)ARB_PASSED;
    24fc:	cc 24       	eor	r12, r12
    24fe:	dd 24       	eor	r13, r13
    2500:	76 01       	movw	r14, r12
    2502:	79 ce       	rjmp	.-782    	; 0x21f6 <signalIoctl+0x5c>

      break;/*End case RED_LED_OFF:*/

      case RED_LED_TOGGLE:

         hal_gpioToggle( gt_signalDev.c_signalPort,
    2504:	80 91 93 24 	lds	r24, 0x2493
   static inline t_gpioError __attribute__ ( (always_inline)) hal_gpioToggle(
   t_gpioPort t_port, uint8_t    c_pin)
   {
      t_gpioError t_err = GPIO_PASSED;

      switch( t_port)
    2508:	90 91 92 24 	lds	r25, 0x2492
    250c:	95 30       	cpi	r25, 0x05	; 5
    250e:	09 f4       	brne	.+2      	; 0x2512 <signalIoctl+0x378>
    2510:	dd c6       	rjmp	.+3514   	; 0x32cc <signalIoctl+0x1132>
    2512:	96 30       	cpi	r25, 0x06	; 6
    2514:	08 f4       	brcc	.+2      	; 0x2518 <signalIoctl+0x37e>
    2516:	4a c0       	rjmp	.+148    	; 0x25ac <signalIoctl+0x412>
    2518:	98 30       	cpi	r25, 0x08	; 8
    251a:	09 f4       	brne	.+2      	; 0x251e <signalIoctl+0x384>
    251c:	ca c6       	rjmp	.+3476   	; 0x32b2 <signalIoctl+0x1118>
    251e:	99 30       	cpi	r25, 0x09	; 9
    2520:	08 f0       	brcs	.+2      	; 0x2524 <signalIoctl+0x38a>
    2522:	c6 c1       	rjmp	.+908    	; 0x28b0 <signalIoctl+0x716>
    2524:	96 30       	cpi	r25, 0x06	; 6
    2526:	09 f4       	brne	.+2      	; 0x252a <signalIoctl+0x390>
    2528:	24 c3       	rjmp	.+1608   	; 0x2b72 <signalIoctl+0x9d8>
    252a:	97 30       	cpi	r25, 0x07	; 7
    252c:	09 f0       	breq	.+2      	; 0x2530 <signalIoctl+0x396>
    252e:	4a c0       	rjmp	.+148    	; 0x25c4 <signalIoctl+0x42a>
         case GPIO_PORTJ:

            /*---------------------------------------------------------------*
             * Make sure the requested pin is configured as an output
             *---------------------------------------------------------------*/
            if( !(PORTJ.DIR & c_pin))
    2530:	90 91 00 07 	lds	r25, 0x0700
    2534:	98 23       	and	r25, r24
    2536:	11 f4       	brne	.+4      	; 0x253c <signalIoctl+0x3a2>
    2538:	0c 94 3e 1a 	jmp	0x347c	; 0x347c <signalIoctl+0x12e2>
               t_err = GPIO_PIN_IS_INPUT;
            else
               PORTJ.OUTTGL = c_pin;
    253c:	e0 e0       	ldi	r30, 0x00	; 0
    253e:	f7 e0       	ldi	r31, 0x07	; 7
    2540:	87 83       	std	Z+7, r24	; 0x07

int32_t signalIoctl( t_DEVHANDLE t_devHandle,
                     uint16_t s_command,
                     int32_t  i_arguments)
{
   int32_t i_return = (int32_t)ARB_PASSED;
    2542:	cc 24       	eor	r12, r12
    2544:	dd 24       	eor	r13, r13
    2546:	76 01       	movw	r14, r12
    2548:	56 ce       	rjmp	.-852    	; 0x21f6 <signalIoctl+0x5c>

      break;/*End case GREEN_LED_OFF:*/

      case GREEN_LED_TOGGLE:

         hal_gpioToggle( gt_signalDev.c_signalPort,
    254a:	80 91 95 24 	lds	r24, 0x2495
   static inline t_gpioError __attribute__ ( (always_inline)) hal_gpioToggle(
   t_gpioPort t_port, uint8_t    c_pin)
   {
      t_gpioError t_err = GPIO_PASSED;

      switch( t_port)
    254e:	90 91 92 24 	lds	r25, 0x2492
    2552:	95 30       	cpi	r25, 0x05	; 5
    2554:	09 f4       	brne	.+2      	; 0x2558 <signalIoctl+0x3be>
    2556:	45 c4       	rjmp	.+2186   	; 0x2de2 <signalIoctl+0xc48>
    2558:	96 30       	cpi	r25, 0x06	; 6
    255a:	c0 f0       	brcs	.+48     	; 0x258c <signalIoctl+0x3f2>
    255c:	98 30       	cpi	r25, 0x08	; 8
    255e:	09 f4       	brne	.+2      	; 0x2562 <signalIoctl+0x3c8>
    2560:	dc c4       	rjmp	.+2488   	; 0x2f1a <signalIoctl+0xd80>
    2562:	99 30       	cpi	r25, 0x09	; 9
    2564:	08 f0       	brcs	.+2      	; 0x2568 <signalIoctl+0x3ce>
    2566:	fe c1       	rjmp	.+1020   	; 0x2964 <signalIoctl+0x7ca>
    2568:	96 30       	cpi	r25, 0x06	; 6
    256a:	09 f4       	brne	.+2      	; 0x256e <signalIoctl+0x3d4>
    256c:	4a c3       	rjmp	.+1684   	; 0x2c02 <signalIoctl+0xa68>
    256e:	97 30       	cpi	r25, 0x07	; 7
    2570:	c9 f4       	brne	.+50     	; 0x25a4 <signalIoctl+0x40a>
         case GPIO_PORTJ:

            /*---------------------------------------------------------------*
             * Make sure the requested pin is configured as an output
             *---------------------------------------------------------------*/
            if( !(PORTJ.DIR & c_pin))
    2572:	90 91 00 07 	lds	r25, 0x0700
    2576:	98 23       	and	r25, r24
    2578:	11 f4       	brne	.+4      	; 0x257e <signalIoctl+0x3e4>
    257a:	0c 94 8e 1a 	jmp	0x351c	; 0x351c <signalIoctl+0x1382>
               t_err = GPIO_PIN_IS_INPUT;
            else
               PORTJ.OUTTGL = c_pin;
    257e:	e0 e0       	ldi	r30, 0x00	; 0
    2580:	f7 e0       	ldi	r31, 0x07	; 7
    2582:	87 83       	std	Z+7, r24	; 0x07

int32_t signalIoctl( t_DEVHANDLE t_devHandle,
                     uint16_t s_command,
                     int32_t  i_arguments)
{
   int32_t i_return = (int32_t)ARB_PASSED;
    2584:	cc 24       	eor	r12, r12
    2586:	dd 24       	eor	r13, r13
    2588:	76 01       	movw	r14, r12
    258a:	35 ce       	rjmp	.-918    	; 0x21f6 <signalIoctl+0x5c>
   static inline t_gpioError __attribute__ ( (always_inline)) hal_gpioToggle(
   t_gpioPort t_port, uint8_t    c_pin)
   {
      t_gpioError t_err = GPIO_PASSED;

      switch( t_port)
    258c:	92 30       	cpi	r25, 0x02	; 2
    258e:	09 f4       	brne	.+2      	; 0x2592 <signalIoctl+0x3f8>
    2590:	d1 c6       	rjmp	.+3490   	; 0x3334 <signalIoctl+0x119a>
    2592:	93 30       	cpi	r25, 0x03	; 3
    2594:	08 f0       	brcs	.+2      	; 0x2598 <signalIoctl+0x3fe>
    2596:	68 c1       	rjmp	.+720    	; 0x2868 <signalIoctl+0x6ce>
    2598:	99 23       	and	r25, r25
    259a:	09 f4       	brne	.+2      	; 0x259e <signalIoctl+0x404>
    259c:	ba c5       	rjmp	.+2932   	; 0x3112 <signalIoctl+0xf78>
    259e:	91 30       	cpi	r25, 0x01	; 1
    25a0:	09 f4       	brne	.+2      	; 0x25a4 <signalIoctl+0x40a>
    25a2:	b7 c2       	rjmp	.+1390   	; 0x2b12 <signalIoctl+0x978>
    25a4:	cc 24       	eor	r12, r12
    25a6:	dd 24       	eor	r13, r13
    25a8:	76 01       	movw	r14, r12
    25aa:	25 ce       	rjmp	.-950    	; 0x21f6 <signalIoctl+0x5c>
    25ac:	92 30       	cpi	r25, 0x02	; 2
    25ae:	09 f4       	brne	.+2      	; 0x25b2 <signalIoctl+0x418>
    25b0:	14 c5       	rjmp	.+2600   	; 0x2fda <signalIoctl+0xe40>
    25b2:	93 30       	cpi	r25, 0x03	; 3
    25b4:	08 f0       	brcs	.+2      	; 0x25b8 <signalIoctl+0x41e>
    25b6:	8e c1       	rjmp	.+796    	; 0x28d4 <signalIoctl+0x73a>
    25b8:	99 23       	and	r25, r25
    25ba:	09 f4       	brne	.+2      	; 0x25be <signalIoctl+0x424>
    25bc:	c4 c5       	rjmp	.+2952   	; 0x3146 <signalIoctl+0xfac>
    25be:	91 30       	cpi	r25, 0x01	; 1
    25c0:	09 f4       	brne	.+2      	; 0x25c4 <signalIoctl+0x42a>
    25c2:	bf c2       	rjmp	.+1406   	; 0x2b42 <signalIoctl+0x9a8>
    25c4:	cc 24       	eor	r12, r12
    25c6:	dd 24       	eor	r13, r13
    25c8:	76 01       	movw	r14, r12
    25ca:	15 ce       	rjmp	.-982    	; 0x21f6 <signalIoctl+0x5c>
   t_gpioPort t_port, uint8_t    c_pin)
   {

      t_gpioError t_err = GPIO_PASSED;

      switch( t_port)
    25cc:	92 30       	cpi	r25, 0x02	; 2
    25ce:	09 f4       	brne	.+2      	; 0x25d2 <signalIoctl+0x438>
    25d0:	64 c5       	rjmp	.+2760   	; 0x309a <signalIoctl+0xf00>
    25d2:	93 30       	cpi	r25, 0x03	; 3
    25d4:	08 f0       	brcs	.+2      	; 0x25d8 <signalIoctl+0x43e>
    25d6:	0e c2       	rjmp	.+1052   	; 0x29f4 <signalIoctl+0x85a>
    25d8:	99 23       	and	r25, r25
    25da:	09 f4       	brne	.+2      	; 0x25de <signalIoctl+0x444>
    25dc:	02 c6       	rjmp	.+3076   	; 0x31e2 <signalIoctl+0x1048>
    25de:	91 30       	cpi	r25, 0x01	; 1
    25e0:	09 f4       	brne	.+2      	; 0x25e4 <signalIoctl+0x44a>
    25e2:	6f c3       	rjmp	.+1758   	; 0x2cc2 <signalIoctl+0xb28>
    25e4:	cc 24       	eor	r12, r12
    25e6:	dd 24       	eor	r13, r13
    25e8:	76 01       	movw	r14, r12
    25ea:	05 ce       	rjmp	.-1014   	; 0x21f6 <signalIoctl+0x5c>
   static inline t_gpioError __attribute__ ( (always_inline)) hal_gpioToggle(
   t_gpioPort t_port, uint8_t    c_pin)
   {
      t_gpioError t_err = GPIO_PASSED;

      switch( t_port)
    25ec:	92 30       	cpi	r25, 0x02	; 2
    25ee:	09 f4       	brne	.+2      	; 0x25f2 <signalIoctl+0x458>
    25f0:	74 c3       	rjmp	.+1768   	; 0x2cda <signalIoctl+0xb40>
    25f2:	93 30       	cpi	r25, 0x03	; 3
    25f4:	08 f0       	brcs	.+2      	; 0x25f8 <signalIoctl+0x45e>
    25f6:	4a c1       	rjmp	.+660    	; 0x288c <signalIoctl+0x6f2>
    25f8:	99 23       	and	r25, r25
    25fa:	09 f4       	brne	.+2      	; 0x25fe <signalIoctl+0x464>
    25fc:	0c c6       	rjmp	.+3096   	; 0x3216 <signalIoctl+0x107c>
    25fe:	91 30       	cpi	r25, 0x01	; 1
    2600:	09 f4       	brne	.+2      	; 0x2604 <signalIoctl+0x46a>
    2602:	2f c3       	rjmp	.+1630   	; 0x2c62 <signalIoctl+0xac8>
    2604:	cc 24       	eor	r12, r12
    2606:	dd 24       	eor	r13, r13
    2608:	76 01       	movw	r14, r12
    260a:	f5 cd       	rjmp	.-1046   	; 0x21f6 <signalIoctl+0x5c>
   t_gpioPort t_port, uint8_t    c_pin)
   {

      t_gpioError t_err = GPIO_PASSED;

      switch( t_port)
    260c:	92 30       	cpi	r25, 0x02	; 2
    260e:	09 f4       	brne	.+2      	; 0x2612 <signalIoctl+0x478>
    2610:	0f c6       	rjmp	.+3102   	; 0x3230 <signalIoctl+0x1096>
    2612:	93 30       	cpi	r25, 0x03	; 3
    2614:	08 f0       	brcs	.+2      	; 0x2618 <signalIoctl+0x47e>
    2616:	94 c1       	rjmp	.+808    	; 0x2940 <signalIoctl+0x7a6>
    2618:	99 23       	and	r25, r25
    261a:	09 f4       	brne	.+2      	; 0x261e <signalIoctl+0x484>
    261c:	ae c5       	rjmp	.+2908   	; 0x317a <signalIoctl+0xfe0>
    261e:	91 30       	cpi	r25, 0x01	; 1
    2620:	09 f4       	brne	.+2      	; 0x2624 <signalIoctl+0x48a>
    2622:	07 c3       	rjmp	.+1550   	; 0x2c32 <signalIoctl+0xa98>
    2624:	cc 24       	eor	r12, r12
    2626:	dd 24       	eor	r13, r13
    2628:	76 01       	movw	r14, r12
    262a:	e5 cd       	rjmp	.-1078   	; 0x21f6 <signalIoctl+0x5c>
   static inline t_gpioError __attribute__ ( (always_inline)) hal_gpioOn(
   t_gpioPort t_port, uint8_t    c_pin)
   {
      t_gpioError t_err = GPIO_PASSED;

      switch( t_port)
    262c:	98 30       	cpi	r25, 0x08	; 8
    262e:	09 f4       	brne	.+2      	; 0x2632 <signalIoctl+0x498>
    2630:	b4 c3       	rjmp	.+1896   	; 0x2d9a <signalIoctl+0xc00>
    2632:	99 30       	cpi	r25, 0x09	; 9
    2634:	08 f0       	brcs	.+2      	; 0x2638 <signalIoctl+0x49e>
    2636:	ba c1       	rjmp	.+884    	; 0x29ac <signalIoctl+0x812>
    2638:	96 30       	cpi	r25, 0x06	; 6
    263a:	09 f4       	brne	.+2      	; 0x263e <signalIoctl+0x4a4>
    263c:	b8 c5       	rjmp	.+2928   	; 0x31ae <signalIoctl+0x1014>
    263e:	97 30       	cpi	r25, 0x07	; 7
    2640:	09 f4       	brne	.+2      	; 0x2644 <signalIoctl+0x4aa>
    2642:	6f c3       	rjmp	.+1758   	; 0x2d22 <signalIoctl+0xb88>
    2644:	cc 24       	eor	r12, r12
    2646:	dd 24       	eor	r13, r13
    2648:	76 01       	movw	r14, r12
    264a:	d5 cd       	rjmp	.-1110   	; 0x21f6 <signalIoctl+0x5c>
    264c:	92 30       	cpi	r25, 0x02	; 2
    264e:	09 f4       	brne	.+2      	; 0x2652 <signalIoctl+0x4b8>
    2650:	74 c3       	rjmp	.+1768   	; 0x2d3a <signalIoctl+0xba0>
    2652:	93 30       	cpi	r25, 0x03	; 3
    2654:	08 f0       	brcs	.+2      	; 0x2658 <signalIoctl+0x4be>
    2656:	88 c0       	rjmp	.+272    	; 0x2768 <signalIoctl+0x5ce>
    2658:	99 23       	and	r25, r25
    265a:	09 f4       	brne	.+2      	; 0x265e <signalIoctl+0x4c4>
    265c:	9b c5       	rjmp	.+2870   	; 0x3194 <signalIoctl+0xffa>
    265e:	91 30       	cpi	r25, 0x01	; 1
    2660:	09 f4       	brne	.+2      	; 0x2664 <signalIoctl+0x4ca>
    2662:	93 c2       	rjmp	.+1318   	; 0x2b8a <signalIoctl+0x9f0>
    2664:	cc 24       	eor	r12, r12
    2666:	dd 24       	eor	r13, r13
    2668:	76 01       	movw	r14, r12
    266a:	c5 cd       	rjmp	.-1142   	; 0x21f6 <signalIoctl+0x5c>
    266c:	92 30       	cpi	r25, 0x02	; 2
    266e:	09 f4       	brne	.+2      	; 0x2672 <signalIoctl+0x4d8>
    2670:	74 c2       	rjmp	.+1256   	; 0x2b5a <signalIoctl+0x9c0>
    2672:	93 30       	cpi	r25, 0x03	; 3
    2674:	08 f0       	brcs	.+2      	; 0x2678 <signalIoctl+0x4de>
    2676:	c2 c0       	rjmp	.+388    	; 0x27fc <signalIoctl+0x662>
    2678:	99 23       	and	r25, r25
    267a:	09 f4       	brne	.+2      	; 0x267e <signalIoctl+0x4e4>
    267c:	0d c6       	rjmp	.+3098   	; 0x3298 <signalIoctl+0x10fe>
    267e:	91 30       	cpi	r25, 0x01	; 1
    2680:	09 f4       	brne	.+2      	; 0x2684 <signalIoctl+0x4ea>
    2682:	43 c3       	rjmp	.+1670   	; 0x2d0a <signalIoctl+0xb70>
    2684:	cc 24       	eor	r12, r12
    2686:	dd 24       	eor	r13, r13
    2688:	76 01       	movw	r14, r12
    268a:	b5 cd       	rjmp	.-1174   	; 0x21f6 <signalIoctl+0x5c>
   t_gpioPort t_port, uint8_t    c_pin)
   {

      t_gpioError t_err = GPIO_PASSED;

      switch( t_port)
    268c:	92 30       	cpi	r25, 0x02	; 2
    268e:	09 f4       	brne	.+2      	; 0x2692 <signalIoctl+0x4f8>
    2690:	d4 c4       	rjmp	.+2472   	; 0x303a <signalIoctl+0xea0>
    2692:	93 30       	cpi	r25, 0x03	; 3
    2694:	08 f0       	brcs	.+2      	; 0x2698 <signalIoctl+0x4fe>
    2696:	8d c0       	rjmp	.+282    	; 0x27b2 <signalIoctl+0x618>
    2698:	99 23       	and	r25, r25
    269a:	09 f4       	brne	.+2      	; 0x269e <signalIoctl+0x504>
    269c:	e3 c5       	rjmp	.+3014   	; 0x3264 <signalIoctl+0x10ca>
    269e:	91 30       	cpi	r25, 0x01	; 1
    26a0:	09 f4       	brne	.+2      	; 0x26a4 <signalIoctl+0x50a>
    26a2:	d3 c2       	rjmp	.+1446   	; 0x2c4a <signalIoctl+0xab0>
    26a4:	cc 24       	eor	r12, r12
    26a6:	dd 24       	eor	r13, r13
    26a8:	76 01       	movw	r14, r12
    26aa:	a5 cd       	rjmp	.-1206   	; 0x21f6 <signalIoctl+0x5c>
   static inline t_gpioError __attribute__ ( (always_inline)) hal_gpioOn(
   t_gpioPort t_port, uint8_t    c_pin)
   {
      t_gpioError t_err = GPIO_PASSED;

      switch( t_port)
    26ac:	92 30       	cpi	r25, 0x02	; 2
    26ae:	09 f4       	brne	.+2      	; 0x26b2 <signalIoctl+0x518>
    26b0:	4e c6       	rjmp	.+3228   	; 0x334e <signalIoctl+0x11b4>
    26b2:	93 30       	cpi	r25, 0x03	; 3
    26b4:	08 f0       	brcs	.+2      	; 0x26b8 <signalIoctl+0x51e>
    26b6:	8f c0       	rjmp	.+286    	; 0x27d6 <signalIoctl+0x63c>
    26b8:	99 23       	and	r25, r25
    26ba:	09 f4       	brne	.+2      	; 0x26be <signalIoctl+0x524>
    26bc:	37 c5       	rjmp	.+2670   	; 0x312c <signalIoctl+0xf92>
    26be:	91 30       	cpi	r25, 0x01	; 1
    26c0:	09 f4       	brne	.+2      	; 0x26c4 <signalIoctl+0x52a>
    26c2:	93 c2       	rjmp	.+1318   	; 0x2bea <signalIoctl+0xa50>
    26c4:	cc 24       	eor	r12, r12
    26c6:	dd 24       	eor	r13, r13
    26c8:	76 01       	movw	r14, r12
    26ca:	95 cd       	rjmp	.-1238   	; 0x21f6 <signalIoctl+0x5c>
   t_gpioPort t_port, uint8_t    c_pin)
   {

      t_gpioError t_err = GPIO_PASSED;

      switch( t_port)
    26cc:	92 30       	cpi	r25, 0x02	; 2
    26ce:	09 f4       	brne	.+2      	; 0x26d2 <signalIoctl+0x538>
    26d0:	c4 c3       	rjmp	.+1928   	; 0x2e5a <signalIoctl+0xcc0>
    26d2:	93 30       	cpi	r25, 0x03	; 3
    26d4:	08 f0       	brcs	.+2      	; 0x26d8 <signalIoctl+0x53e>
    26d6:	b6 c0       	rjmp	.+364    	; 0x2844 <signalIoctl+0x6aa>
    26d8:	99 23       	and	r25, r25
    26da:	09 f4       	brne	.+2      	; 0x26de <signalIoctl+0x544>
    26dc:	8f c5       	rjmp	.+2846   	; 0x31fc <signalIoctl+0x1062>
    26de:	91 30       	cpi	r25, 0x01	; 1
    26e0:	09 f4       	brne	.+2      	; 0x26e4 <signalIoctl+0x54a>
    26e2:	43 c3       	rjmp	.+1670   	; 0x2d6a <signalIoctl+0xbd0>
    26e4:	cc 24       	eor	r12, r12
    26e6:	dd 24       	eor	r13, r13
    26e8:	76 01       	movw	r14, r12
    26ea:	85 cd       	rjmp	.-1270   	; 0x21f6 <signalIoctl+0x5c>
   static inline t_gpioError __attribute__ ( (always_inline)) hal_gpioToggle(
   t_gpioPort t_port, uint8_t    c_pin)
   {
      t_gpioError t_err = GPIO_PASSED;

      switch( t_port)
    26ec:	98 30       	cpi	r25, 0x08	; 8
    26ee:	09 f4       	brne	.+2      	; 0x26f2 <signalIoctl+0x558>
    26f0:	14 c6       	rjmp	.+3112   	; 0x331a <signalIoctl+0x1180>
    26f2:	99 30       	cpi	r25, 0x09	; 9
    26f4:	30 f5       	brcc	.+76     	; 0x2742 <signalIoctl+0x5a8>
    26f6:	96 30       	cpi	r25, 0x06	; 6
    26f8:	09 f4       	brne	.+2      	; 0x26fc <signalIoctl+0x562>
    26fa:	bf c2       	rjmp	.+1406   	; 0x2c7a <signalIoctl+0xae0>
    26fc:	97 30       	cpi	r25, 0x07	; 7
    26fe:	09 f0       	breq	.+2      	; 0x2702 <signalIoctl+0x568>
    2700:	dc cd       	rjmp	.-1096   	; 0x22ba <signalIoctl+0x120>
         case GPIO_PORTJ:

            /*---------------------------------------------------------------*
             * Make sure the requested pin is configured as an output
             *---------------------------------------------------------------*/
            if( !(PORTJ.DIR & c_pin))
    2702:	90 91 00 07 	lds	r25, 0x0700
    2706:	98 23       	and	r25, r24
    2708:	11 f4       	brne	.+4      	; 0x270e <signalIoctl+0x574>
    270a:	0c 94 c9 1b 	jmp	0x3792	; 0x3792 <signalIoctl+0x15f8>
               t_err = GPIO_PIN_IS_INPUT;
            else
               PORTJ.OUTTGL = c_pin;
    270e:	e0 e0       	ldi	r30, 0x00	; 0
    2710:	f7 e0       	ldi	r31, 0x07	; 7
    2712:	87 83       	std	Z+7, r24	; 0x07
    2714:	cc 24       	eor	r12, r12
    2716:	dd 24       	eor	r13, r13
    2718:	76 01       	movw	r14, r12
    271a:	6d cd       	rjmp	.-1318   	; 0x21f6 <signalIoctl+0x5c>
   static inline t_gpioError __attribute__ ( (always_inline)) hal_gpioToggle(
   t_gpioPort t_port, uint8_t    c_pin)
   {
      t_gpioError t_err = GPIO_PASSED;

      switch( t_port)
    271c:	93 30       	cpi	r25, 0x03	; 3
    271e:	09 f4       	brne	.+2      	; 0x2722 <signalIoctl+0x588>
    2720:	2c c4       	rjmp	.+2136   	; 0x2f7a <signalIoctl+0xde0>
    2722:	94 30       	cpi	r25, 0x04	; 4
    2724:	09 f0       	breq	.+2      	; 0x2728 <signalIoctl+0x58e>
    2726:	c9 cd       	rjmp	.-1134   	; 0x22ba <signalIoctl+0x120>
         case GPIO_PORTE:

            /*---------------------------------------------------------------*
             * Make sure the requested pin is configured as an output
             *---------------------------------------------------------------*/
            if( !(PORTE.DIR & c_pin))
    2728:	90 91 80 06 	lds	r25, 0x0680
    272c:	98 23       	and	r25, r24
    272e:	11 f4       	brne	.+4      	; 0x2734 <signalIoctl+0x59a>
    2730:	0c 94 d3 1b 	jmp	0x37a6	; 0x37a6 <signalIoctl+0x160c>
               t_err = GPIO_PIN_IS_INPUT;
            else
               PORTE.OUTTGL = c_pin;
    2734:	e0 e8       	ldi	r30, 0x80	; 128
    2736:	f6 e0       	ldi	r31, 0x06	; 6
    2738:	87 83       	std	Z+7, r24	; 0x07
    273a:	cc 24       	eor	r12, r12
    273c:	dd 24       	eor	r13, r13
    273e:	76 01       	movw	r14, r12
    2740:	5a cd       	rjmp	.-1356   	; 0x21f6 <signalIoctl+0x5c>
   static inline t_gpioError __attribute__ ( (always_inline)) hal_gpioToggle(
   t_gpioPort t_port, uint8_t    c_pin)
   {
      t_gpioError t_err = GPIO_PASSED;

      switch( t_port)
    2742:	99 30       	cpi	r25, 0x09	; 9
    2744:	09 f4       	brne	.+2      	; 0x2748 <signalIoctl+0x5ae>
    2746:	a1 c3       	rjmp	.+1858   	; 0x2e8a <signalIoctl+0xcf0>
    2748:	9a 30       	cpi	r25, 0x0A	; 10
    274a:	09 f0       	breq	.+2      	; 0x274e <signalIoctl+0x5b4>
    274c:	b6 cd       	rjmp	.-1172   	; 0x22ba <signalIoctl+0x120>
         case GPIO_PORTR:

            /*---------------------------------------------------------------*
             * Make sure the requested pin is configured as an output
             *---------------------------------------------------------------*/
            if( !(PORTR.DIR & c_pin))
    274e:	90 91 e0 07 	lds	r25, 0x07E0
    2752:	98 23       	and	r25, r24
    2754:	11 f4       	brne	.+4      	; 0x275a <signalIoctl+0x5c0>
    2756:	0c 94 69 1c 	jmp	0x38d2	; 0x38d2 <signalIoctl+0x1738>
               t_err = GPIO_PIN_IS_INPUT;
            else
               PORTR.OUTTGL = c_pin;
    275a:	e0 ee       	ldi	r30, 0xE0	; 224
    275c:	f7 e0       	ldi	r31, 0x07	; 7
    275e:	87 83       	std	Z+7, r24	; 0x07
    2760:	cc 24       	eor	r12, r12
    2762:	dd 24       	eor	r13, r13
    2764:	76 01       	movw	r14, r12
    2766:	47 cd       	rjmp	.-1394   	; 0x21f6 <signalIoctl+0x5c>
   static inline t_gpioError __attribute__ ( (always_inline)) hal_gpioOn(
   t_gpioPort t_port, uint8_t    c_pin)
   {
      t_gpioError t_err = GPIO_PASSED;

      switch( t_port)
    2768:	93 30       	cpi	r25, 0x03	; 3
    276a:	09 f4       	brne	.+2      	; 0x276e <signalIoctl+0x5d4>
    276c:	5e c3       	rjmp	.+1724   	; 0x2e2a <signalIoctl+0xc90>
    276e:	94 30       	cpi	r25, 0x04	; 4
    2770:	09 f0       	breq	.+2      	; 0x2774 <signalIoctl+0x5da>
    2772:	78 cf       	rjmp	.-272    	; 0x2664 <signalIoctl+0x4ca>
         case GPIO_PORTE:

            /*---------------------------------------------------------------*
             * Make sure the requested pin is configured as an output
             *---------------------------------------------------------------*/
            if( !(PORTE.DIR & c_pin))
    2774:	90 91 80 06 	lds	r25, 0x0680
    2778:	98 23       	and	r25, r24
    277a:	09 f4       	brne	.+2      	; 0x277e <signalIoctl+0x5e4>
    277c:	79 c7       	rjmp	.+3826   	; 0x3670 <signalIoctl+0x14d6>
               t_err = GPIO_PIN_IS_INPUT;
            else
               PORTE.OUTSET = c_pin;
    277e:	e0 e8       	ldi	r30, 0x80	; 128
    2780:	f6 e0       	ldi	r31, 0x06	; 6
    2782:	85 83       	std	Z+5, r24	; 0x05
    2784:	cc 24       	eor	r12, r12
    2786:	dd 24       	eor	r13, r13
    2788:	76 01       	movw	r14, r12
    278a:	35 cd       	rjmp	.-1430   	; 0x21f6 <signalIoctl+0x5c>
   t_gpioPort t_port, uint8_t    c_pin)
   {

      t_gpioError t_err = GPIO_PASSED;

      switch( t_port)
    278c:	99 30       	cpi	r25, 0x09	; 9
    278e:	09 f4       	brne	.+2      	; 0x2792 <signalIoctl+0x5f8>
    2790:	dc c3       	rjmp	.+1976   	; 0x2f4a <signalIoctl+0xdb0>
    2792:	9a 30       	cpi	r25, 0x0A	; 10
    2794:	09 f0       	breq	.+2      	; 0x2798 <signalIoctl+0x5fe>
    2796:	86 cf       	rjmp	.-244    	; 0x26a4 <signalIoctl+0x50a>
         case GPIO_PORTR:

            /*---------------------------------------------------------------*
             * Make sure the requested pin is configured as an output
             *---------------------------------------------------------------*/
            if( !(PORTR.DIR & c_pin))
    2798:	90 91 e0 07 	lds	r25, 0x07E0
    279c:	98 23       	and	r25, r24
    279e:	11 f4       	brne	.+4      	; 0x27a4 <signalIoctl+0x60a>
    27a0:	0c 94 a1 1b 	jmp	0x3742	; 0x3742 <signalIoctl+0x15a8>
               t_err = GPIO_PIN_IS_INPUT;
            else
               PORTR.OUTCLR = c_pin;
    27a4:	e0 ee       	ldi	r30, 0xE0	; 224
    27a6:	f7 e0       	ldi	r31, 0x07	; 7
    27a8:	86 83       	std	Z+6, r24	; 0x06
    27aa:	cc 24       	eor	r12, r12
    27ac:	dd 24       	eor	r13, r13
    27ae:	76 01       	movw	r14, r12
    27b0:	22 cd       	rjmp	.-1468   	; 0x21f6 <signalIoctl+0x5c>
   t_gpioPort t_port, uint8_t    c_pin)
   {

      t_gpioError t_err = GPIO_PASSED;

      switch( t_port)
    27b2:	93 30       	cpi	r25, 0x03	; 3
    27b4:	09 f4       	brne	.+2      	; 0x27b8 <signalIoctl+0x61e>
    27b6:	99 c3       	rjmp	.+1842   	; 0x2eea <signalIoctl+0xd50>
    27b8:	94 30       	cpi	r25, 0x04	; 4
    27ba:	09 f0       	breq	.+2      	; 0x27be <signalIoctl+0x624>
    27bc:	73 cf       	rjmp	.-282    	; 0x26a4 <signalIoctl+0x50a>
         case GPIO_PORTE:

            /*---------------------------------------------------------------*
             * Make sure the requested pin is configured as an output
             *---------------------------------------------------------------*/
            if( !(PORTE.DIR & c_pin))
    27be:	90 91 80 06 	lds	r25, 0x0680
    27c2:	98 23       	and	r25, r24
    27c4:	09 f4       	brne	.+2      	; 0x27c8 <signalIoctl+0x62e>
    27c6:	72 c7       	rjmp	.+3812   	; 0x36ac <signalIoctl+0x1512>
               t_err = GPIO_PIN_IS_INPUT;
            else
               PORTE.OUTCLR = c_pin;
    27c8:	e0 e8       	ldi	r30, 0x80	; 128
    27ca:	f6 e0       	ldi	r31, 0x06	; 6
    27cc:	86 83       	std	Z+6, r24	; 0x06
    27ce:	cc 24       	eor	r12, r12
    27d0:	dd 24       	eor	r13, r13
    27d2:	76 01       	movw	r14, r12
    27d4:	10 cd       	rjmp	.-1504   	; 0x21f6 <signalIoctl+0x5c>
   static inline t_gpioError __attribute__ ( (always_inline)) hal_gpioOn(
   t_gpioPort t_port, uint8_t    c_pin)
   {
      t_gpioError t_err = GPIO_PASSED;

      switch( t_port)
    27d6:	93 30       	cpi	r25, 0x03	; 3
    27d8:	09 f4       	brne	.+2      	; 0x27dc <signalIoctl+0x642>
    27da:	17 c4       	rjmp	.+2094   	; 0x300a <signalIoctl+0xe70>
    27dc:	94 30       	cpi	r25, 0x04	; 4
    27de:	09 f0       	breq	.+2      	; 0x27e2 <signalIoctl+0x648>
    27e0:	71 cf       	rjmp	.-286    	; 0x26c4 <signalIoctl+0x52a>
         case GPIO_PORTE:

            /*---------------------------------------------------------------*
             * Make sure the requested pin is configured as an output
             *---------------------------------------------------------------*/
            if( !(PORTE.DIR & c_pin))
    27e2:	90 91 80 06 	lds	r25, 0x0680
    27e6:	98 23       	and	r25, r24
    27e8:	11 f4       	brne	.+4      	; 0x27ee <signalIoctl+0x654>
    27ea:	0c 94 8d 1b 	jmp	0x371a	; 0x371a <signalIoctl+0x1580>
               t_err = GPIO_PIN_IS_INPUT;
            else
               PORTE.OUTSET = c_pin;
    27ee:	e0 e8       	ldi	r30, 0x80	; 128
    27f0:	f6 e0       	ldi	r31, 0x06	; 6
    27f2:	85 83       	std	Z+5, r24	; 0x05
    27f4:	cc 24       	eor	r12, r12
    27f6:	dd 24       	eor	r13, r13
    27f8:	76 01       	movw	r14, r12
    27fa:	fd cc       	rjmp	.-1542   	; 0x21f6 <signalIoctl+0x5c>
   static inline t_gpioError __attribute__ ( (always_inline)) hal_gpioOn(
   t_gpioPort t_port, uint8_t    c_pin)
   {
      t_gpioError t_err = GPIO_PASSED;

      switch( t_port)
    27fc:	93 30       	cpi	r25, 0x03	; 3
    27fe:	09 f4       	brne	.+2      	; 0x2802 <signalIoctl+0x668>
    2800:	d4 c3       	rjmp	.+1960   	; 0x2faa <signalIoctl+0xe10>
    2802:	94 30       	cpi	r25, 0x04	; 4
    2804:	09 f0       	breq	.+2      	; 0x2808 <signalIoctl+0x66e>
    2806:	3e cf       	rjmp	.-388    	; 0x2684 <signalIoctl+0x4ea>
         case GPIO_PORTE:

            /*---------------------------------------------------------------*
             * Make sure the requested pin is configured as an output
             *---------------------------------------------------------------*/
            if( !(PORTE.DIR & c_pin))
    2808:	90 91 80 06 	lds	r25, 0x0680
    280c:	98 23       	and	r25, r24
    280e:	09 f4       	brne	.+2      	; 0x2812 <signalIoctl+0x678>
    2810:	43 c7       	rjmp	.+3718   	; 0x3698 <signalIoctl+0x14fe>
               t_err = GPIO_PIN_IS_INPUT;
            else
               PORTE.OUTSET = c_pin;
    2812:	e0 e8       	ldi	r30, 0x80	; 128
    2814:	f6 e0       	ldi	r31, 0x06	; 6
    2816:	85 83       	std	Z+5, r24	; 0x05
    2818:	cc 24       	eor	r12, r12
    281a:	dd 24       	eor	r13, r13
    281c:	76 01       	movw	r14, r12
    281e:	eb cc       	rjmp	.-1578   	; 0x21f6 <signalIoctl+0x5c>
   t_gpioPort t_port, uint8_t    c_pin)
   {

      t_gpioError t_err = GPIO_PASSED;

      switch( t_port)
    2820:	99 30       	cpi	r25, 0x09	; 9
    2822:	09 f4       	brne	.+2      	; 0x2826 <signalIoctl+0x68c>
    2824:	22 c4       	rjmp	.+2116   	; 0x306a <signalIoctl+0xed0>
    2826:	9a 30       	cpi	r25, 0x0A	; 10
    2828:	09 f0       	breq	.+2      	; 0x282c <signalIoctl+0x692>
    282a:	fc ce       	rjmp	.-520    	; 0x2624 <signalIoctl+0x48a>
         case GPIO_PORTR:

            /*---------------------------------------------------------------*
             * Make sure the requested pin is configured as an output
             *---------------------------------------------------------------*/
            if( !(PORTR.DIR & c_pin))
    282c:	90 91 e0 07 	lds	r25, 0x07E0
    2830:	98 23       	and	r25, r24
    2832:	09 f4       	brne	.+2      	; 0x2836 <signalIoctl+0x69c>
    2834:	4f c7       	rjmp	.+3742   	; 0x36d4 <signalIoctl+0x153a>
               t_err = GPIO_PIN_IS_INPUT;
            else
               PORTR.OUTCLR = c_pin;
    2836:	e0 ee       	ldi	r30, 0xE0	; 224
    2838:	f7 e0       	ldi	r31, 0x07	; 7
    283a:	86 83       	std	Z+6, r24	; 0x06
    283c:	cc 24       	eor	r12, r12
    283e:	dd 24       	eor	r13, r13
    2840:	76 01       	movw	r14, r12
    2842:	d9 cc       	rjmp	.-1614   	; 0x21f6 <signalIoctl+0x5c>
   t_gpioPort t_port, uint8_t    c_pin)
   {

      t_gpioError t_err = GPIO_PASSED;

      switch( t_port)
    2844:	93 30       	cpi	r25, 0x03	; 3
    2846:	09 f4       	brne	.+2      	; 0x284a <signalIoctl+0x6b0>
    2848:	e4 c2       	rjmp	.+1480   	; 0x2e12 <signalIoctl+0xc78>
    284a:	94 30       	cpi	r25, 0x04	; 4
    284c:	09 f0       	breq	.+2      	; 0x2850 <signalIoctl+0x6b6>
    284e:	4a cf       	rjmp	.-364    	; 0x26e4 <signalIoctl+0x54a>
         case GPIO_PORTE:

            /*---------------------------------------------------------------*
             * Make sure the requested pin is configured as an output
             *---------------------------------------------------------------*/
            if( !(PORTE.DIR & c_pin))
    2850:	90 91 80 06 	lds	r25, 0x0680
    2854:	98 23       	and	r25, r24
    2856:	09 f4       	brne	.+2      	; 0x285a <signalIoctl+0x6c0>
    2858:	fd c5       	rjmp	.+3066   	; 0x3454 <signalIoctl+0x12ba>
               t_err = GPIO_PIN_IS_INPUT;
            else
               PORTE.OUTCLR = c_pin;
    285a:	e0 e8       	ldi	r30, 0x80	; 128
    285c:	f6 e0       	ldi	r31, 0x06	; 6
    285e:	86 83       	std	Z+6, r24	; 0x06
    2860:	cc 24       	eor	r12, r12
    2862:	dd 24       	eor	r13, r13
    2864:	76 01       	movw	r14, r12
    2866:	c7 cc       	rjmp	.-1650   	; 0x21f6 <signalIoctl+0x5c>
   static inline t_gpioError __attribute__ ( (always_inline)) hal_gpioToggle(
   t_gpioPort t_port, uint8_t    c_pin)
   {
      t_gpioError t_err = GPIO_PASSED;

      switch( t_port)
    2868:	93 30       	cpi	r25, 0x03	; 3
    286a:	09 f4       	brne	.+2      	; 0x286e <signalIoctl+0x6d4>
    286c:	7a c3       	rjmp	.+1780   	; 0x2f62 <signalIoctl+0xdc8>
    286e:	94 30       	cpi	r25, 0x04	; 4
    2870:	09 f0       	breq	.+2      	; 0x2874 <signalIoctl+0x6da>
    2872:	98 ce       	rjmp	.-720    	; 0x25a4 <signalIoctl+0x40a>
         case GPIO_PORTE:

            /*---------------------------------------------------------------*
             * Make sure the requested pin is configured as an output
             *---------------------------------------------------------------*/
            if( !(PORTE.DIR & c_pin))
    2874:	90 91 80 06 	lds	r25, 0x0680
    2878:	98 23       	and	r25, r24
    287a:	09 f4       	brne	.+2      	; 0x287e <signalIoctl+0x6e4>
    287c:	c7 c6       	rjmp	.+3470   	; 0x360c <signalIoctl+0x1472>
               t_err = GPIO_PIN_IS_INPUT;
            else
               PORTE.OUTTGL = c_pin;
    287e:	e0 e8       	ldi	r30, 0x80	; 128
    2880:	f6 e0       	ldi	r31, 0x06	; 6
    2882:	87 83       	std	Z+7, r24	; 0x07
    2884:	cc 24       	eor	r12, r12
    2886:	dd 24       	eor	r13, r13
    2888:	76 01       	movw	r14, r12
    288a:	b5 cc       	rjmp	.-1686   	; 0x21f6 <signalIoctl+0x5c>
   static inline t_gpioError __attribute__ ( (always_inline)) hal_gpioToggle(
   t_gpioPort t_port, uint8_t    c_pin)
   {
      t_gpioError t_err = GPIO_PASSED;

      switch( t_port)
    288c:	93 30       	cpi	r25, 0x03	; 3
    288e:	09 f4       	brne	.+2      	; 0x2892 <signalIoctl+0x6f8>
    2890:	f0 c2       	rjmp	.+1504   	; 0x2e72 <signalIoctl+0xcd8>
    2892:	94 30       	cpi	r25, 0x04	; 4
    2894:	09 f0       	breq	.+2      	; 0x2898 <signalIoctl+0x6fe>
    2896:	b6 ce       	rjmp	.-660    	; 0x2604 <signalIoctl+0x46a>
         case GPIO_PORTE:

            /*---------------------------------------------------------------*
             * Make sure the requested pin is configured as an output
             *---------------------------------------------------------------*/
            if( !(PORTE.DIR & c_pin))
    2898:	90 91 80 06 	lds	r25, 0x0680
    289c:	98 23       	and	r25, r24
    289e:	09 f4       	brne	.+2      	; 0x28a2 <signalIoctl+0x708>
    28a0:	f7 c5       	rjmp	.+3054   	; 0x3490 <signalIoctl+0x12f6>
               t_err = GPIO_PIN_IS_INPUT;
            else
               PORTE.OUTTGL = c_pin;
    28a2:	e0 e8       	ldi	r30, 0x80	; 128
    28a4:	f6 e0       	ldi	r31, 0x06	; 6
    28a6:	87 83       	std	Z+7, r24	; 0x07
    28a8:	cc 24       	eor	r12, r12
    28aa:	dd 24       	eor	r13, r13
    28ac:	76 01       	movw	r14, r12
    28ae:	a3 cc       	rjmp	.-1722   	; 0x21f6 <signalIoctl+0x5c>
   static inline t_gpioError __attribute__ ( (always_inline)) hal_gpioToggle(
   t_gpioPort t_port, uint8_t    c_pin)
   {
      t_gpioError t_err = GPIO_PASSED;

      switch( t_port)
    28b0:	99 30       	cpi	r25, 0x09	; 9
    28b2:	09 f4       	brne	.+2      	; 0x28b6 <signalIoctl+0x71c>
    28b4:	c6 c2       	rjmp	.+1420   	; 0x2e42 <signalIoctl+0xca8>
    28b6:	9a 30       	cpi	r25, 0x0A	; 10
    28b8:	09 f0       	breq	.+2      	; 0x28bc <signalIoctl+0x722>
    28ba:	84 ce       	rjmp	.-760    	; 0x25c4 <signalIoctl+0x42a>
         case GPIO_PORTR:

            /*---------------------------------------------------------------*
             * Make sure the requested pin is configured as an output
             *---------------------------------------------------------------*/
            if( !(PORTR.DIR & c_pin))
    28bc:	90 91 e0 07 	lds	r25, 0x07E0
    28c0:	98 23       	and	r25, r24
    28c2:	09 f4       	brne	.+2      	; 0x28c6 <signalIoctl+0x72c>
    28c4:	53 c6       	rjmp	.+3238   	; 0x356c <signalIoctl+0x13d2>
               t_err = GPIO_PIN_IS_INPUT;
            else
               PORTR.OUTTGL = c_pin;
    28c6:	e0 ee       	ldi	r30, 0xE0	; 224
    28c8:	f7 e0       	ldi	r31, 0x07	; 7
    28ca:	87 83       	std	Z+7, r24	; 0x07
    28cc:	cc 24       	eor	r12, r12
    28ce:	dd 24       	eor	r13, r13
    28d0:	76 01       	movw	r14, r12
    28d2:	91 cc       	rjmp	.-1758   	; 0x21f6 <signalIoctl+0x5c>
   static inline t_gpioError __attribute__ ( (always_inline)) hal_gpioToggle(
   t_gpioPort t_port, uint8_t    c_pin)
   {
      t_gpioError t_err = GPIO_PASSED;

      switch( t_port)
    28d4:	93 30       	cpi	r25, 0x03	; 3
    28d6:	09 f4       	brne	.+2      	; 0x28da <signalIoctl+0x740>
    28d8:	fc c2       	rjmp	.+1528   	; 0x2ed2 <signalIoctl+0xd38>
    28da:	94 30       	cpi	r25, 0x04	; 4
    28dc:	09 f0       	breq	.+2      	; 0x28e0 <signalIoctl+0x746>
    28de:	72 ce       	rjmp	.-796    	; 0x25c4 <signalIoctl+0x42a>
         case GPIO_PORTE:

            /*---------------------------------------------------------------*
             * Make sure the requested pin is configured as an output
             *---------------------------------------------------------------*/
            if( !(PORTE.DIR & c_pin))
    28e0:	90 91 80 06 	lds	r25, 0x0680
    28e4:	98 23       	and	r25, r24
    28e6:	09 f4       	brne	.+2      	; 0x28ea <signalIoctl+0x750>
    28e8:	83 c5       	rjmp	.+2822   	; 0x33f0 <signalIoctl+0x1256>
               t_err = GPIO_PIN_IS_INPUT;
            else
               PORTE.OUTTGL = c_pin;
    28ea:	e0 e8       	ldi	r30, 0x80	; 128
    28ec:	f6 e0       	ldi	r31, 0x06	; 6
    28ee:	87 83       	std	Z+7, r24	; 0x07
    28f0:	cc 24       	eor	r12, r12
    28f2:	dd 24       	eor	r13, r13
    28f4:	76 01       	movw	r14, r12
    28f6:	7f cc       	rjmp	.-1794   	; 0x21f6 <signalIoctl+0x5c>
   t_gpioPort t_port, uint8_t    c_pin)
   {

      t_gpioError t_err = GPIO_PASSED;

      switch( t_port)
    28f8:	99 30       	cpi	r25, 0x09	; 9
    28fa:	09 f4       	brne	.+2      	; 0x28fe <signalIoctl+0x764>
    28fc:	d2 c2       	rjmp	.+1444   	; 0x2ea2 <signalIoctl+0xd08>
    28fe:	9a 30       	cpi	r25, 0x0A	; 10
    2900:	09 f0       	breq	.+2      	; 0x2904 <signalIoctl+0x76a>
    2902:	70 ce       	rjmp	.-800    	; 0x25e4 <signalIoctl+0x44a>
         case GPIO_PORTR:

            /*---------------------------------------------------------------*
             * Make sure the requested pin is configured as an output
             *---------------------------------------------------------------*/
            if( !(PORTR.DIR & c_pin))
    2904:	90 91 e0 07 	lds	r25, 0x07E0
    2908:	98 23       	and	r25, r24
    290a:	09 f4       	brne	.+2      	; 0x290e <signalIoctl+0x774>
    290c:	61 c6       	rjmp	.+3266   	; 0x35d0 <signalIoctl+0x1436>
               t_err = GPIO_PIN_IS_INPUT;
            else
               PORTR.OUTCLR = c_pin;
    290e:	e0 ee       	ldi	r30, 0xE0	; 224
    2910:	f7 e0       	ldi	r31, 0x07	; 7
    2912:	86 83       	std	Z+6, r24	; 0x06
    2914:	cc 24       	eor	r12, r12
    2916:	dd 24       	eor	r13, r13
    2918:	76 01       	movw	r14, r12
    291a:	6d cc       	rjmp	.-1830   	; 0x21f6 <signalIoctl+0x5c>
   static inline t_gpioError __attribute__ ( (always_inline)) hal_gpioToggle(
   t_gpioPort t_port, uint8_t    c_pin)
   {
      t_gpioError t_err = GPIO_PASSED;

      switch( t_port)
    291c:	99 30       	cpi	r25, 0x09	; 9
    291e:	09 f4       	brne	.+2      	; 0x2922 <signalIoctl+0x788>
    2920:	08 c3       	rjmp	.+1552   	; 0x2f32 <signalIoctl+0xd98>
    2922:	9a 30       	cpi	r25, 0x0A	; 10
    2924:	09 f0       	breq	.+2      	; 0x2928 <signalIoctl+0x78e>
    2926:	6e ce       	rjmp	.-804    	; 0x2604 <signalIoctl+0x46a>
         case GPIO_PORTR:

            /*---------------------------------------------------------------*
             * Make sure the requested pin is configured as an output
             *---------------------------------------------------------------*/
            if( !(PORTR.DIR & c_pin))
    2928:	90 91 e0 07 	lds	r25, 0x07E0
    292c:	98 23       	and	r25, r24
    292e:	09 f4       	brne	.+2      	; 0x2932 <signalIoctl+0x798>
    2930:	e1 c5       	rjmp	.+3010   	; 0x34f4 <signalIoctl+0x135a>
               t_err = GPIO_PIN_IS_INPUT;
            else
               PORTR.OUTTGL = c_pin;
    2932:	e0 ee       	ldi	r30, 0xE0	; 224
    2934:	f7 e0       	ldi	r31, 0x07	; 7
    2936:	87 83       	std	Z+7, r24	; 0x07
    2938:	cc 24       	eor	r12, r12
    293a:	dd 24       	eor	r13, r13
    293c:	76 01       	movw	r14, r12
    293e:	5b cc       	rjmp	.-1866   	; 0x21f6 <signalIoctl+0x5c>
   t_gpioPort t_port, uint8_t    c_pin)
   {

      t_gpioError t_err = GPIO_PASSED;

      switch( t_port)
    2940:	93 30       	cpi	r25, 0x03	; 3
    2942:	09 f4       	brne	.+2      	; 0x2946 <signalIoctl+0x7ac>
    2944:	de c2       	rjmp	.+1468   	; 0x2f02 <signalIoctl+0xd68>
    2946:	94 30       	cpi	r25, 0x04	; 4
    2948:	09 f0       	breq	.+2      	; 0x294c <signalIoctl+0x7b2>
    294a:	6c ce       	rjmp	.-808    	; 0x2624 <signalIoctl+0x48a>
         case GPIO_PORTE:

            /*---------------------------------------------------------------*
             * Make sure the requested pin is configured as an output
             *---------------------------------------------------------------*/
            if( !(PORTE.DIR & c_pin))
    294c:	90 91 80 06 	lds	r25, 0x0680
    2950:	98 23       	and	r25, r24
    2952:	09 f4       	brne	.+2      	; 0x2956 <signalIoctl+0x7bc>
    2954:	ed c5       	rjmp	.+3034   	; 0x3530 <signalIoctl+0x1396>
               t_err = GPIO_PIN_IS_INPUT;
            else
               PORTE.OUTCLR = c_pin;
    2956:	e0 e8       	ldi	r30, 0x80	; 128
    2958:	f6 e0       	ldi	r31, 0x06	; 6
    295a:	86 83       	std	Z+6, r24	; 0x06
    295c:	cc 24       	eor	r12, r12
    295e:	dd 24       	eor	r13, r13
    2960:	76 01       	movw	r14, r12
    2962:	49 cc       	rjmp	.-1902   	; 0x21f6 <signalIoctl+0x5c>
   static inline t_gpioError __attribute__ ( (always_inline)) hal_gpioToggle(
   t_gpioPort t_port, uint8_t    c_pin)
   {
      t_gpioError t_err = GPIO_PASSED;

      switch( t_port)
    2964:	99 30       	cpi	r25, 0x09	; 9
    2966:	09 f4       	brne	.+2      	; 0x296a <signalIoctl+0x7d0>
    2968:	14 c3       	rjmp	.+1576   	; 0x2f92 <signalIoctl+0xdf8>
    296a:	9a 30       	cpi	r25, 0x0A	; 10
    296c:	09 f0       	breq	.+2      	; 0x2970 <signalIoctl+0x7d6>
    296e:	1a ce       	rjmp	.-972    	; 0x25a4 <signalIoctl+0x40a>
         case GPIO_PORTR:

            /*---------------------------------------------------------------*
             * Make sure the requested pin is configured as an output
             *---------------------------------------------------------------*/
            if( !(PORTR.DIR & c_pin))
    2970:	90 91 e0 07 	lds	r25, 0x07E0
    2974:	98 23       	and	r25, r24
    2976:	09 f4       	brne	.+2      	; 0x297a <signalIoctl+0x7e0>
    2978:	63 c5       	rjmp	.+2758   	; 0x3440 <signalIoctl+0x12a6>
               t_err = GPIO_PIN_IS_INPUT;
            else
               PORTR.OUTTGL = c_pin;
    297a:	e0 ee       	ldi	r30, 0xE0	; 224
    297c:	f7 e0       	ldi	r31, 0x07	; 7
    297e:	87 83       	std	Z+7, r24	; 0x07
    2980:	cc 24       	eor	r12, r12
    2982:	dd 24       	eor	r13, r13
    2984:	76 01       	movw	r14, r12
    2986:	37 cc       	rjmp	.-1938   	; 0x21f6 <signalIoctl+0x5c>
   static inline t_gpioError __attribute__ ( (always_inline)) hal_gpioOn(
   t_gpioPort t_port, uint8_t    c_pin)
   {
      t_gpioError t_err = GPIO_PASSED;

      switch( t_port)
    2988:	99 30       	cpi	r25, 0x09	; 9
    298a:	09 f4       	brne	.+2      	; 0x298e <signalIoctl+0x7f4>
    298c:	4a c3       	rjmp	.+1684   	; 0x3022 <signalIoctl+0xe88>
    298e:	9a 30       	cpi	r25, 0x0A	; 10
    2990:	09 f0       	breq	.+2      	; 0x2994 <signalIoctl+0x7fa>
    2992:	68 ce       	rjmp	.-816    	; 0x2664 <signalIoctl+0x4ca>
         case GPIO_PORTR:

            /*---------------------------------------------------------------*
             * Make sure the requested pin is configured as an output
             *---------------------------------------------------------------*/
            if( !(PORTR.DIR & c_pin))
    2994:	90 91 e0 07 	lds	r25, 0x07E0
    2998:	98 23       	and	r25, r24
    299a:	09 f4       	brne	.+2      	; 0x299e <signalIoctl+0x804>
    299c:	23 c6       	rjmp	.+3142   	; 0x35e4 <signalIoctl+0x144a>
               t_err = GPIO_PIN_IS_INPUT;
            else
               PORTR.OUTSET = c_pin;
    299e:	e0 ee       	ldi	r30, 0xE0	; 224
    29a0:	f7 e0       	ldi	r31, 0x07	; 7
    29a2:	85 83       	std	Z+5, r24	; 0x05
    29a4:	cc 24       	eor	r12, r12
    29a6:	dd 24       	eor	r13, r13
    29a8:	76 01       	movw	r14, r12
    29aa:	25 cc       	rjmp	.-1974   	; 0x21f6 <signalIoctl+0x5c>
   static inline t_gpioError __attribute__ ( (always_inline)) hal_gpioOn(
   t_gpioPort t_port, uint8_t    c_pin)
   {
      t_gpioError t_err = GPIO_PASSED;

      switch( t_port)
    29ac:	99 30       	cpi	r25, 0x09	; 9
    29ae:	09 f4       	brne	.+2      	; 0x29b2 <signalIoctl+0x818>
    29b0:	20 c3       	rjmp	.+1600   	; 0x2ff2 <signalIoctl+0xe58>
    29b2:	9a 30       	cpi	r25, 0x0A	; 10
    29b4:	09 f0       	breq	.+2      	; 0x29b8 <signalIoctl+0x81e>
    29b6:	46 ce       	rjmp	.-884    	; 0x2644 <signalIoctl+0x4aa>
         case GPIO_PORTR:

            /*---------------------------------------------------------------*
             * Make sure the requested pin is configured as an output
             *---------------------------------------------------------------*/
            if( !(PORTR.DIR & c_pin))
    29b8:	90 91 e0 07 	lds	r25, 0x07E0
    29bc:	98 23       	and	r25, r24
    29be:	09 f4       	brne	.+2      	; 0x29c2 <signalIoctl+0x828>
    29c0:	7b c5       	rjmp	.+2806   	; 0x34b8 <signalIoctl+0x131e>
               t_err = GPIO_PIN_IS_INPUT;
            else
               PORTR.OUTSET = c_pin;
    29c2:	e0 ee       	ldi	r30, 0xE0	; 224
    29c4:	f7 e0       	ldi	r31, 0x07	; 7
    29c6:	85 83       	std	Z+5, r24	; 0x05
    29c8:	cc 24       	eor	r12, r12
    29ca:	dd 24       	eor	r13, r13
    29cc:	76 01       	movw	r14, r12
    29ce:	13 cc       	rjmp	.-2010   	; 0x21f6 <signalIoctl+0x5c>
   static inline t_gpioError __attribute__ ( (always_inline)) hal_gpioOn(
   t_gpioPort t_port, uint8_t    c_pin)
   {
      t_gpioError t_err = GPIO_PASSED;

      switch( t_port)
    29d0:	99 30       	cpi	r25, 0x09	; 9
    29d2:	09 f4       	brne	.+2      	; 0x29d6 <signalIoctl+0x83c>
    29d4:	f6 c2       	rjmp	.+1516   	; 0x2fc2 <signalIoctl+0xe28>
    29d6:	9a 30       	cpi	r25, 0x0A	; 10
    29d8:	09 f0       	breq	.+2      	; 0x29dc <signalIoctl+0x842>
    29da:	54 ce       	rjmp	.-856    	; 0x2684 <signalIoctl+0x4ea>
         case GPIO_PORTR:

            /*---------------------------------------------------------------*
             * Make sure the requested pin is configured as an output
             *---------------------------------------------------------------*/
            if( !(PORTR.DIR & c_pin))
    29dc:	90 91 e0 07 	lds	r25, 0x07E0
    29e0:	98 23       	and	r25, r24
    29e2:	09 f4       	brne	.+2      	; 0x29e6 <signalIoctl+0x84c>
    29e4:	d7 c5       	rjmp	.+2990   	; 0x3594 <signalIoctl+0x13fa>
               t_err = GPIO_PIN_IS_INPUT;
            else
               PORTR.OUTSET = c_pin;
    29e6:	e0 ee       	ldi	r30, 0xE0	; 224
    29e8:	f7 e0       	ldi	r31, 0x07	; 7
    29ea:	85 83       	std	Z+5, r24	; 0x05
    29ec:	cc 24       	eor	r12, r12
    29ee:	dd 24       	eor	r13, r13
    29f0:	76 01       	movw	r14, r12
    29f2:	01 cc       	rjmp	.-2046   	; 0x21f6 <signalIoctl+0x5c>
   t_gpioPort t_port, uint8_t    c_pin)
   {

      t_gpioError t_err = GPIO_PASSED;

      switch( t_port)
    29f4:	93 30       	cpi	r25, 0x03	; 3
    29f6:	09 f4       	brne	.+2      	; 0x29fa <signalIoctl+0x860>
    29f8:	2c c3       	rjmp	.+1624   	; 0x3052 <signalIoctl+0xeb8>
    29fa:	94 30       	cpi	r25, 0x04	; 4
    29fc:	09 f0       	breq	.+2      	; 0x2a00 <signalIoctl+0x866>
    29fe:	f2 cd       	rjmp	.-1052   	; 0x25e4 <signalIoctl+0x44a>
         case GPIO_PORTE:

            /*---------------------------------------------------------------*
             * Make sure the requested pin is configured as an output
             *---------------------------------------------------------------*/
            if( !(PORTE.DIR & c_pin))
    2a00:	90 91 80 06 	lds	r25, 0x0680
    2a04:	98 23       	and	r25, r24
    2a06:	09 f4       	brne	.+2      	; 0x2a0a <signalIoctl+0x870>
    2a08:	07 c5       	rjmp	.+2574   	; 0x3418 <signalIoctl+0x127e>
               t_err = GPIO_PIN_IS_INPUT;
            else
               PORTE.OUTCLR = c_pin;
    2a0a:	e0 e8       	ldi	r30, 0x80	; 128
    2a0c:	f6 e0       	ldi	r31, 0x06	; 6
    2a0e:	86 83       	std	Z+6, r24	; 0x06
    2a10:	cc 24       	eor	r12, r12
    2a12:	dd 24       	eor	r13, r13
    2a14:	76 01       	movw	r14, r12
    2a16:	ef cb       	rjmp	.-2082   	; 0x21f6 <signalIoctl+0x5c>
   static inline t_gpioError __attribute__ ( (always_inline)) hal_gpioOn(
   t_gpioPort t_port, uint8_t    c_pin)
   {
      t_gpioError t_err = GPIO_PASSED;

      switch( t_port)
    2a18:	93 30       	cpi	r25, 0x03	; 3
    2a1a:	09 f4       	brne	.+2      	; 0x2a1e <signalIoctl+0x884>
    2a1c:	32 c3       	rjmp	.+1636   	; 0x3082 <signalIoctl+0xee8>
    2a1e:	94 30       	cpi	r25, 0x04	; 4
    2a20:	09 f0       	breq	.+2      	; 0x2a24 <signalIoctl+0x88a>
    2a22:	10 ce       	rjmp	.-992    	; 0x2644 <signalIoctl+0x4aa>
         case GPIO_PORTE:

            /*---------------------------------------------------------------*
             * Make sure the requested pin is configured as an output
             *---------------------------------------------------------------*/
            if( !(PORTE.DIR & c_pin))
    2a24:	90 91 80 06 	lds	r25, 0x0680
    2a28:	98 23       	and	r25, r24
    2a2a:	09 f4       	brne	.+2      	; 0x2a2e <signalIoctl+0x894>
    2a2c:	95 c5       	rjmp	.+2858   	; 0x3558 <signalIoctl+0x13be>
               t_err = GPIO_PIN_IS_INPUT;
            else
               PORTE.OUTSET = c_pin;
    2a2e:	e0 e8       	ldi	r30, 0x80	; 128
    2a30:	f6 e0       	ldi	r31, 0x06	; 6
    2a32:	85 83       	std	Z+5, r24	; 0x05
    2a34:	cc 24       	eor	r12, r12
    2a36:	dd 24       	eor	r13, r13
    2a38:	76 01       	movw	r14, r12
    2a3a:	dd cb       	rjmp	.-2118   	; 0x21f6 <signalIoctl+0x5c>
   t_gpioPort t_port, uint8_t    c_pin)
   {

      t_gpioError t_err = GPIO_PASSED;

      switch( t_port)
    2a3c:	99 30       	cpi	r25, 0x09	; 9
    2a3e:	09 f4       	brne	.+2      	; 0x2a42 <signalIoctl+0x8a8>
    2a40:	38 c3       	rjmp	.+1648   	; 0x30b2 <signalIoctl+0xf18>
    2a42:	9a 30       	cpi	r25, 0x0A	; 10
    2a44:	09 f0       	breq	.+2      	; 0x2a48 <signalIoctl+0x8ae>
    2a46:	4e ce       	rjmp	.-868    	; 0x26e4 <signalIoctl+0x54a>
         case GPIO_PORTR:

            /*---------------------------------------------------------------*
             * Make sure the requested pin is configured as an output
             *---------------------------------------------------------------*/
            if( !(PORTR.DIR & c_pin))
    2a48:	90 91 e0 07 	lds	r25, 0x07E0
    2a4c:	98 23       	and	r25, r24
    2a4e:	09 f4       	brne	.+2      	; 0x2a52 <signalIoctl+0x8b8>
    2a50:	47 c5       	rjmp	.+2702   	; 0x34e0 <signalIoctl+0x1346>
               t_err = GPIO_PIN_IS_INPUT;
            else
               PORTR.OUTCLR = c_pin;
    2a52:	e0 ee       	ldi	r30, 0xE0	; 224
    2a54:	f7 e0       	ldi	r31, 0x07	; 7
    2a56:	86 83       	std	Z+6, r24	; 0x06
    2a58:	cc 24       	eor	r12, r12
    2a5a:	dd 24       	eor	r13, r13
    2a5c:	76 01       	movw	r14, r12
    2a5e:	cb cb       	rjmp	.-2154   	; 0x21f6 <signalIoctl+0x5c>
   static inline t_gpioError __attribute__ ( (always_inline)) hal_gpioOn(
   t_gpioPort t_port, uint8_t    c_pin)
   {
      t_gpioError t_err = GPIO_PASSED;

      switch( t_port)
    2a60:	99 30       	cpi	r25, 0x09	; 9
    2a62:	39 f1       	breq	.+78     	; 0x2ab2 <signalIoctl+0x918>
    2a64:	9a 30       	cpi	r25, 0x0A	; 10
    2a66:	09 f0       	breq	.+2      	; 0x2a6a <signalIoctl+0x8d0>
    2a68:	2d ce       	rjmp	.-934    	; 0x26c4 <signalIoctl+0x52a>
         case GPIO_PORTR:

            /*---------------------------------------------------------------*
             * Make sure the requested pin is configured as an output
             *---------------------------------------------------------------*/
            if( !(PORTR.DIR & c_pin))
    2a6a:	90 91 e0 07 	lds	r25, 0x07E0
    2a6e:	98 23       	and	r25, r24
    2a70:	09 f4       	brne	.+2      	; 0x2a74 <signalIoctl+0x8da>
    2a72:	aa c4       	rjmp	.+2388   	; 0x33c8 <signalIoctl+0x122e>
               t_err = GPIO_PIN_IS_INPUT;
            else
               PORTR.OUTSET = c_pin;
    2a74:	e0 ee       	ldi	r30, 0xE0	; 224
    2a76:	f7 e0       	ldi	r31, 0x07	; 7
    2a78:	85 83       	std	Z+5, r24	; 0x05
    2a7a:	cc 24       	eor	r12, r12
    2a7c:	dd 24       	eor	r13, r13
    2a7e:	76 01       	movw	r14, r12
    2a80:	ba cb       	rjmp	.-2188   	; 0x21f6 <signalIoctl+0x5c>
         case GPIO_PORTK:

            /*---------------------------------------------------------------*
             * Make sure the requested pin is configured as an output
             *---------------------------------------------------------------*/
            if( !(PORTK.DIR & c_pin))
    2a82:	90 91 20 07 	lds	r25, 0x0720
    2a86:	98 23       	and	r25, r24
    2a88:	09 f4       	brne	.+2      	; 0x2a8c <signalIoctl+0x8f2>
    2a8a:	94 c4       	rjmp	.+2344   	; 0x33b4 <signalIoctl+0x121a>
               t_err = GPIO_PIN_IS_INPUT;
            else
               PORTK.OUTCLR = c_pin;
    2a8c:	e0 e2       	ldi	r30, 0x20	; 32
    2a8e:	f7 e0       	ldi	r31, 0x07	; 7
    2a90:	86 83       	std	Z+6, r24	; 0x06
    2a92:	cc 24       	eor	r12, r12
    2a94:	dd 24       	eor	r13, r13
    2a96:	76 01       	movw	r14, r12
    2a98:	ae cb       	rjmp	.-2212   	; 0x21f6 <signalIoctl+0x5c>
         case GPIO_PORTK:

            /*---------------------------------------------------------------*
             * Make sure the requested pin is configured as an output
             *---------------------------------------------------------------*/
            if( !(PORTK.DIR & c_pin))
    2a9a:	90 91 20 07 	lds	r25, 0x0720
    2a9e:	98 23       	and	r25, r24
    2aa0:	09 f4       	brne	.+2      	; 0x2aa4 <signalIoctl+0x90a>
    2aa2:	97 c4       	rjmp	.+2350   	; 0x33d2 <signalIoctl+0x1238>
               t_err = GPIO_PIN_IS_INPUT;
            else
               PORTK.OUTSET = c_pin;
    2aa4:	e0 e2       	ldi	r30, 0x20	; 32
    2aa6:	f7 e0       	ldi	r31, 0x07	; 7
    2aa8:	85 83       	std	Z+5, r24	; 0x05
    2aaa:	cc 24       	eor	r12, r12
    2aac:	dd 24       	eor	r13, r13
    2aae:	76 01       	movw	r14, r12
    2ab0:	a2 cb       	rjmp	.-2236   	; 0x21f6 <signalIoctl+0x5c>
         case GPIO_PORTQ:

            /*---------------------------------------------------------------*
             * Make sure the requested pin is configured as an output
             *---------------------------------------------------------------*/
            if( !(PORTQ.DIR & c_pin))
    2ab2:	90 91 c0 07 	lds	r25, 0x07C0
    2ab6:	98 23       	and	r25, r24
    2ab8:	09 f4       	brne	.+2      	; 0x2abc <signalIoctl+0x922>
    2aba:	57 c6       	rjmp	.+3246   	; 0x376a <signalIoctl+0x15d0>
               t_err = GPIO_PIN_IS_INPUT;
            else
               PORTQ.OUTSET = c_pin;
    2abc:	e0 ec       	ldi	r30, 0xC0	; 192
    2abe:	f7 e0       	ldi	r31, 0x07	; 7
    2ac0:	85 83       	std	Z+5, r24	; 0x05
    2ac2:	cc 24       	eor	r12, r12
    2ac4:	dd 24       	eor	r13, r13
    2ac6:	76 01       	movw	r14, r12
    2ac8:	96 cb       	rjmp	.-2260   	; 0x21f6 <signalIoctl+0x5c>
         case GPIO_PORTF:

            /*---------------------------------------------------------------*
             * Make sure the requested pin is configured as an output
             *---------------------------------------------------------------*/
            if( !(PORTF.DIR & c_pin))
    2aca:	90 91 a0 06 	lds	r25, 0x06A0
    2ace:	98 23       	and	r25, r24
    2ad0:	09 f4       	brne	.+2      	; 0x2ad4 <signalIoctl+0x93a>
    2ad2:	b0 c5       	rjmp	.+2912   	; 0x3634 <signalIoctl+0x149a>
               t_err = GPIO_PIN_IS_INPUT;
            else
               PORTF.OUTCLR = c_pin;
    2ad4:	e0 ea       	ldi	r30, 0xA0	; 160
    2ad6:	f6 e0       	ldi	r31, 0x06	; 6
    2ad8:	86 83       	std	Z+6, r24	; 0x06
    2ada:	cc 24       	eor	r12, r12
    2adc:	dd 24       	eor	r13, r13
    2ade:	76 01       	movw	r14, r12
    2ae0:	8a cb       	rjmp	.-2284   	; 0x21f6 <signalIoctl+0x5c>
         case GPIO_PORTB:

            /*---------------------------------------------------------------*
             * Make sure the requested pin is configured as an output
             *---------------------------------------------------------------*/
            if( !(PORTB.DIR & c_pin))
    2ae2:	90 91 20 06 	lds	r25, 0x0620
    2ae6:	98 23       	and	r25, r24
    2ae8:	09 f4       	brne	.+2      	; 0x2aec <signalIoctl+0x952>
    2aea:	67 c6       	rjmp	.+3278   	; 0x37ba <signalIoctl+0x1620>
               t_err = GPIO_PIN_IS_INPUT;
            else
               PORTB.OUTTGL = c_pin;
    2aec:	e0 e2       	ldi	r30, 0x20	; 32
    2aee:	f6 e0       	ldi	r31, 0x06	; 6
    2af0:	87 83       	std	Z+7, r24	; 0x07
    2af2:	cc 24       	eor	r12, r12
    2af4:	dd 24       	eor	r13, r13
    2af6:	76 01       	movw	r14, r12
    2af8:	7e cb       	rjmp	.-2308   	; 0x21f6 <signalIoctl+0x5c>
         case GPIO_PORTF:

            /*---------------------------------------------------------------*
             * Make sure the requested pin is configured as an output
             *---------------------------------------------------------------*/
            if( !(PORTF.DIR & c_pin))
    2afa:	90 91 a0 06 	lds	r25, 0x06A0
    2afe:	98 23       	and	r25, r24
    2b00:	09 f4       	brne	.+2      	; 0x2b04 <signalIoctl+0x96a>
    2b02:	b2 c4       	rjmp	.+2404   	; 0x3468 <signalIoctl+0x12ce>
               t_err = GPIO_PIN_IS_INPUT;
            else
               PORTF.OUTSET = c_pin;
    2b04:	e0 ea       	ldi	r30, 0xA0	; 160
    2b06:	f6 e0       	ldi	r31, 0x06	; 6
    2b08:	85 83       	std	Z+5, r24	; 0x05
    2b0a:	cc 24       	eor	r12, r12
    2b0c:	dd 24       	eor	r13, r13
    2b0e:	76 01       	movw	r14, r12
    2b10:	72 cb       	rjmp	.-2332   	; 0x21f6 <signalIoctl+0x5c>
         case GPIO_PORTB:

            /*---------------------------------------------------------------*
             * Make sure the requested pin is configured as an output
             *---------------------------------------------------------------*/
            if( !(PORTB.DIR & c_pin))
    2b12:	90 91 20 06 	lds	r25, 0x0620
    2b16:	98 23       	and	r25, r24
    2b18:	09 f4       	brne	.+2      	; 0x2b1c <signalIoctl+0x982>
    2b1a:	a5 c5       	rjmp	.+2890   	; 0x3666 <signalIoctl+0x14cc>
               t_err = GPIO_PIN_IS_INPUT;
            else
               PORTB.OUTTGL = c_pin;
    2b1c:	e0 e2       	ldi	r30, 0x20	; 32
    2b1e:	f6 e0       	ldi	r31, 0x06	; 6
    2b20:	87 83       	std	Z+7, r24	; 0x07
    2b22:	cc 24       	eor	r12, r12
    2b24:	dd 24       	eor	r13, r13
    2b26:	76 01       	movw	r14, r12
    2b28:	66 cb       	rjmp	.-2356   	; 0x21f6 <signalIoctl+0x5c>
         case GPIO_PORTH:

            /*---------------------------------------------------------------*
             * Make sure the requested pin is configured as an output
             *---------------------------------------------------------------*/
            if( !(PORTH.DIR & c_pin))
    2b2a:	90 91 e0 06 	lds	r25, 0x06E0
    2b2e:	98 23       	and	r25, r24
    2b30:	09 f4       	brne	.+2      	; 0x2b34 <signalIoctl+0x99a>
    2b32:	26 c5       	rjmp	.+2636   	; 0x3580 <signalIoctl+0x13e6>
               t_err = GPIO_PIN_IS_INPUT;
            else
               PORTH.OUTCLR = c_pin;
    2b34:	e0 ee       	ldi	r30, 0xE0	; 224
    2b36:	f6 e0       	ldi	r31, 0x06	; 6
    2b38:	86 83       	std	Z+6, r24	; 0x06
    2b3a:	cc 24       	eor	r12, r12
    2b3c:	dd 24       	eor	r13, r13
    2b3e:	76 01       	movw	r14, r12
    2b40:	5a cb       	rjmp	.-2380   	; 0x21f6 <signalIoctl+0x5c>
         case GPIO_PORTB:

            /*---------------------------------------------------------------*
             * Make sure the requested pin is configured as an output
             *---------------------------------------------------------------*/
            if( !(PORTB.DIR & c_pin))
    2b42:	90 91 20 06 	lds	r25, 0x0620
    2b46:	98 23       	and	r25, r24
    2b48:	09 f4       	brne	.+2      	; 0x2b4c <signalIoctl+0x9b2>
    2b4a:	73 c6       	rjmp	.+3302   	; 0x3832 <signalIoctl+0x1698>
               t_err = GPIO_PIN_IS_INPUT;
            else
               PORTB.OUTTGL = c_pin;
    2b4c:	e0 e2       	ldi	r30, 0x20	; 32
    2b4e:	f6 e0       	ldi	r31, 0x06	; 6
    2b50:	87 83       	std	Z+7, r24	; 0x07
    2b52:	cc 24       	eor	r12, r12
    2b54:	dd 24       	eor	r13, r13
    2b56:	76 01       	movw	r14, r12
    2b58:	4e cb       	rjmp	.-2404   	; 0x21f6 <signalIoctl+0x5c>
         case GPIO_PORTC:

            /*---------------------------------------------------------------*
             * Make sure the requested pin is configured as an output
             *---------------------------------------------------------------*/
            if( !(PORTC.DIR & c_pin))
    2b5a:	90 91 40 06 	lds	r25, 0x0640
    2b5e:	98 23       	and	r25, r24
    2b60:	09 f4       	brne	.+2      	; 0x2b64 <signalIoctl+0x9ca>
    2b62:	91 c4       	rjmp	.+2338   	; 0x3486 <signalIoctl+0x12ec>
               t_err = GPIO_PIN_IS_INPUT;
            else
               PORTC.OUTSET = c_pin;
    2b64:	e0 e4       	ldi	r30, 0x40	; 64
    2b66:	f6 e0       	ldi	r31, 0x06	; 6
    2b68:	85 83       	std	Z+5, r24	; 0x05
    2b6a:	cc 24       	eor	r12, r12
    2b6c:	dd 24       	eor	r13, r13
    2b6e:	76 01       	movw	r14, r12
    2b70:	42 cb       	rjmp	.-2428   	; 0x21f6 <signalIoctl+0x5c>
         case GPIO_PORTH:

            /*---------------------------------------------------------------*
             * Make sure the requested pin is configured as an output
             *---------------------------------------------------------------*/
            if( !(PORTH.DIR & c_pin))
    2b72:	90 91 e0 06 	lds	r25, 0x06E0
    2b76:	98 23       	and	r25, r24
    2b78:	09 f4       	brne	.+2      	; 0x2b7c <signalIoctl+0x9e2>
    2b7a:	c5 c5       	rjmp	.+2954   	; 0x3706 <signalIoctl+0x156c>
               t_err = GPIO_PIN_IS_INPUT;
            else
               PORTH.OUTTGL = c_pin;
    2b7c:	e0 ee       	ldi	r30, 0xE0	; 224
    2b7e:	f6 e0       	ldi	r31, 0x06	; 6
    2b80:	87 83       	std	Z+7, r24	; 0x07
    2b82:	cc 24       	eor	r12, r12
    2b84:	dd 24       	eor	r13, r13
    2b86:	76 01       	movw	r14, r12
    2b88:	36 cb       	rjmp	.-2452   	; 0x21f6 <signalIoctl+0x5c>
         case GPIO_PORTB:

            /*---------------------------------------------------------------*
             * Make sure the requested pin is configured as an output
             *---------------------------------------------------------------*/
            if( !(PORTB.DIR & c_pin))
    2b8a:	90 91 20 06 	lds	r25, 0x0620
    2b8e:	98 23       	and	r25, r24
    2b90:	09 f4       	brne	.+2      	; 0x2b94 <signalIoctl+0x9fa>
    2b92:	19 c5       	rjmp	.+2610   	; 0x35c6 <signalIoctl+0x142c>
               t_err = GPIO_PIN_IS_INPUT;
            else
               PORTB.OUTSET = c_pin;
    2b94:	e0 e2       	ldi	r30, 0x20	; 32
    2b96:	f6 e0       	ldi	r31, 0x06	; 6
    2b98:	85 83       	std	Z+5, r24	; 0x05
    2b9a:	cc 24       	eor	r12, r12
    2b9c:	dd 24       	eor	r13, r13
    2b9e:	76 01       	movw	r14, r12
    2ba0:	2a cb       	rjmp	.-2476   	; 0x21f6 <signalIoctl+0x5c>
         case GPIO_PORTH:

            /*---------------------------------------------------------------*
             * Make sure the requested pin is configured as an output
             *---------------------------------------------------------------*/
            if( !(PORTH.DIR & c_pin))
    2ba2:	90 91 e0 06 	lds	r25, 0x06E0
    2ba6:	98 23       	and	r25, r24
    2ba8:	09 f4       	brne	.+2      	; 0x2bac <signalIoctl+0xa12>
    2baa:	1b c6       	rjmp	.+3126   	; 0x37e2 <signalIoctl+0x1648>
               t_err = GPIO_PIN_IS_INPUT;
            else
               PORTH.OUTTGL = c_pin;
    2bac:	e0 ee       	ldi	r30, 0xE0	; 224
    2bae:	f6 e0       	ldi	r31, 0x06	; 6
    2bb0:	87 83       	std	Z+7, r24	; 0x07
    2bb2:	cc 24       	eor	r12, r12
    2bb4:	dd 24       	eor	r13, r13
    2bb6:	76 01       	movw	r14, r12
    2bb8:	1e cb       	rjmp	.-2500   	; 0x21f6 <signalIoctl+0x5c>
         case GPIO_PORTF:

            /*---------------------------------------------------------------*
             * Make sure the requested pin is configured as an output
             *---------------------------------------------------------------*/
            if( !(PORTF.DIR & c_pin))
    2bba:	90 91 a0 06 	lds	r25, 0x06A0
    2bbe:	98 23       	and	r25, r24
    2bc0:	09 f4       	brne	.+2      	; 0x2bc4 <signalIoctl+0xa2a>
    2bc2:	11 c4       	rjmp	.+2082   	; 0x33e6 <signalIoctl+0x124c>
               t_err = GPIO_PIN_IS_INPUT;
            else
               PORTF.OUTCLR = c_pin;
    2bc4:	e0 ea       	ldi	r30, 0xA0	; 160
    2bc6:	f6 e0       	ldi	r31, 0x06	; 6
    2bc8:	86 83       	std	Z+6, r24	; 0x06
    2bca:	cc 24       	eor	r12, r12
    2bcc:	dd 24       	eor	r13, r13
    2bce:	76 01       	movw	r14, r12
    2bd0:	12 cb       	rjmp	.-2524   	; 0x21f6 <signalIoctl+0x5c>
         case GPIO_PORTH:

            /*---------------------------------------------------------------*
             * Make sure the requested pin is configured as an output
             *---------------------------------------------------------------*/
            if( !(PORTH.DIR & c_pin))
    2bd2:	90 91 e0 06 	lds	r25, 0x06E0
    2bd6:	98 23       	and	r25, r24
    2bd8:	09 f4       	brne	.+2      	; 0x2bdc <signalIoctl+0xa42>
    2bda:	72 c5       	rjmp	.+2788   	; 0x36c0 <signalIoctl+0x1526>
               t_err = GPIO_PIN_IS_INPUT;
            else
               PORTH.OUTCLR = c_pin;
    2bdc:	e0 ee       	ldi	r30, 0xE0	; 224
    2bde:	f6 e0       	ldi	r31, 0x06	; 6
    2be0:	86 83       	std	Z+6, r24	; 0x06
    2be2:	cc 24       	eor	r12, r12
    2be4:	dd 24       	eor	r13, r13
    2be6:	76 01       	movw	r14, r12
    2be8:	06 cb       	rjmp	.-2548   	; 0x21f6 <signalIoctl+0x5c>
         case GPIO_PORTB:

            /*---------------------------------------------------------------*
             * Make sure the requested pin is configured as an output
             *---------------------------------------------------------------*/
            if( !(PORTB.DIR & c_pin))
    2bea:	90 91 20 06 	lds	r25, 0x0620
    2bee:	98 23       	and	r25, r24
    2bf0:	09 f4       	brne	.+2      	; 0x2bf4 <signalIoctl+0xa5a>
    2bf2:	99 c4       	rjmp	.+2354   	; 0x3526 <signalIoctl+0x138c>
               t_err = GPIO_PIN_IS_INPUT;
            else
               PORTB.OUTSET = c_pin;
    2bf4:	e0 e2       	ldi	r30, 0x20	; 32
    2bf6:	f6 e0       	ldi	r31, 0x06	; 6
    2bf8:	85 83       	std	Z+5, r24	; 0x05
    2bfa:	cc 24       	eor	r12, r12
    2bfc:	dd 24       	eor	r13, r13
    2bfe:	76 01       	movw	r14, r12
    2c00:	fa ca       	rjmp	.-2572   	; 0x21f6 <signalIoctl+0x5c>
         case GPIO_PORTH:

            /*---------------------------------------------------------------*
             * Make sure the requested pin is configured as an output
             *---------------------------------------------------------------*/
            if( !(PORTH.DIR & c_pin))
    2c02:	90 91 e0 06 	lds	r25, 0x06E0
    2c06:	98 23       	and	r25, r24
    2c08:	09 f4       	brne	.+2      	; 0x2c0c <signalIoctl+0xa72>
    2c0a:	3b c6       	rjmp	.+3190   	; 0x3882 <signalIoctl+0x16e8>
               t_err = GPIO_PIN_IS_INPUT;
            else
               PORTH.OUTTGL = c_pin;
    2c0c:	e0 ee       	ldi	r30, 0xE0	; 224
    2c0e:	f6 e0       	ldi	r31, 0x06	; 6
    2c10:	87 83       	std	Z+7, r24	; 0x07
    2c12:	cc 24       	eor	r12, r12
    2c14:	dd 24       	eor	r13, r13
    2c16:	76 01       	movw	r14, r12
    2c18:	ee ca       	rjmp	.-2596   	; 0x21f6 <signalIoctl+0x5c>
         case GPIO_PORTK:

            /*---------------------------------------------------------------*
             * Make sure the requested pin is configured as an output
             *---------------------------------------------------------------*/
            if( !(PORTK.DIR & c_pin))
    2c1a:	90 91 20 07 	lds	r25, 0x0720
    2c1e:	98 23       	and	r25, r24
    2c20:	09 f4       	brne	.+2      	; 0x2c24 <signalIoctl+0xa8a>
    2c22:	72 c4       	rjmp	.+2276   	; 0x3508 <signalIoctl+0x136e>
               t_err = GPIO_PIN_IS_INPUT;
            else
               PORTK.OUTTGL = c_pin;
    2c24:	e0 e2       	ldi	r30, 0x20	; 32
    2c26:	f7 e0       	ldi	r31, 0x07	; 7
    2c28:	87 83       	std	Z+7, r24	; 0x07
    2c2a:	cc 24       	eor	r12, r12
    2c2c:	dd 24       	eor	r13, r13
    2c2e:	76 01       	movw	r14, r12
    2c30:	e2 ca       	rjmp	.-2620   	; 0x21f6 <signalIoctl+0x5c>
         case GPIO_PORTB:

            /*---------------------------------------------------------------*
             * Make sure the requested pin is configured as an output
             *---------------------------------------------------------------*/
            if( !(PORTB.DIR & c_pin))
    2c32:	90 91 20 06 	lds	r25, 0x0620
    2c36:	98 23       	and	r25, r24
    2c38:	09 f4       	brne	.+2      	; 0x2c3c <signalIoctl+0xaa2>
    2c3a:	8d c5       	rjmp	.+2842   	; 0x3756 <signalIoctl+0x15bc>
               t_err = GPIO_PIN_IS_INPUT;
            else
               PORTB.OUTCLR = c_pin;
    2c3c:	e0 e2       	ldi	r30, 0x20	; 32
    2c3e:	f6 e0       	ldi	r31, 0x06	; 6
    2c40:	86 83       	std	Z+6, r24	; 0x06
    2c42:	cc 24       	eor	r12, r12
    2c44:	dd 24       	eor	r13, r13
    2c46:	76 01       	movw	r14, r12
    2c48:	d6 ca       	rjmp	.-2644   	; 0x21f6 <signalIoctl+0x5c>
         case GPIO_PORTB:

            /*---------------------------------------------------------------*
             * Make sure the requested pin is configured as an output
             *---------------------------------------------------------------*/
            if( !(PORTB.DIR & c_pin))
    2c4a:	90 91 20 06 	lds	r25, 0x0620
    2c4e:	98 23       	and	r25, r24
    2c50:	09 f4       	brne	.+2      	; 0x2c54 <signalIoctl+0xaba>
    2c52:	e6 c4       	rjmp	.+2508   	; 0x3620 <signalIoctl+0x1486>
               t_err = GPIO_PIN_IS_INPUT;
            else
               PORTB.OUTCLR = c_pin;
    2c54:	e0 e2       	ldi	r30, 0x20	; 32
    2c56:	f6 e0       	ldi	r31, 0x06	; 6
    2c58:	86 83       	std	Z+6, r24	; 0x06
    2c5a:	cc 24       	eor	r12, r12
    2c5c:	dd 24       	eor	r13, r13
    2c5e:	76 01       	movw	r14, r12
    2c60:	ca ca       	rjmp	.-2668   	; 0x21f6 <signalIoctl+0x5c>
         case GPIO_PORTB:

            /*---------------------------------------------------------------*
             * Make sure the requested pin is configured as an output
             *---------------------------------------------------------------*/
            if( !(PORTB.DIR & c_pin))
    2c62:	90 91 20 06 	lds	r25, 0x0620
    2c66:	98 23       	and	r25, r24
    2c68:	09 f4       	brne	.+2      	; 0x2c6c <signalIoctl+0xad2>
    2c6a:	98 c5       	rjmp	.+2864   	; 0x379c <signalIoctl+0x1602>
               t_err = GPIO_PIN_IS_INPUT;
            else
               PORTB.OUTTGL = c_pin;
    2c6c:	e0 e2       	ldi	r30, 0x20	; 32
    2c6e:	f6 e0       	ldi	r31, 0x06	; 6
    2c70:	87 83       	std	Z+7, r24	; 0x07
    2c72:	cc 24       	eor	r12, r12
    2c74:	dd 24       	eor	r13, r13
    2c76:	76 01       	movw	r14, r12
    2c78:	be ca       	rjmp	.-2692   	; 0x21f6 <signalIoctl+0x5c>
         case GPIO_PORTH:

            /*---------------------------------------------------------------*
             * Make sure the requested pin is configured as an output
             *---------------------------------------------------------------*/
            if( !(PORTH.DIR & c_pin))
    2c7a:	90 91 e0 06 	lds	r25, 0x06E0
    2c7e:	98 23       	and	r25, r24
    2c80:	09 f4       	brne	.+2      	; 0x2c84 <signalIoctl+0xaea>
    2c82:	d9 c3       	rjmp	.+1970   	; 0x3436 <signalIoctl+0x129c>
               t_err = GPIO_PIN_IS_INPUT;
            else
               PORTH.OUTTGL = c_pin;
    2c84:	e0 ee       	ldi	r30, 0xE0	; 224
    2c86:	f6 e0       	ldi	r31, 0x06	; 6
    2c88:	87 83       	std	Z+7, r24	; 0x07
    2c8a:	cc 24       	eor	r12, r12
    2c8c:	dd 24       	eor	r13, r13
    2c8e:	76 01       	movw	r14, r12
    2c90:	b2 ca       	rjmp	.-2716   	; 0x21f6 <signalIoctl+0x5c>
         case GPIO_PORTH:

            /*---------------------------------------------------------------*
             * Make sure the requested pin is configured as an output
             *---------------------------------------------------------------*/
            if( !(PORTH.DIR & c_pin))
    2c92:	90 91 e0 06 	lds	r25, 0x06E0
    2c96:	98 23       	and	r25, r24
    2c98:	09 f4       	brne	.+2      	; 0x2c9c <signalIoctl+0xb02>
    2c9a:	f9 c4       	rjmp	.+2546   	; 0x368e <signalIoctl+0x14f4>
               t_err = GPIO_PIN_IS_INPUT;
            else
               PORTH.OUTSET = c_pin;
    2c9c:	e0 ee       	ldi	r30, 0xE0	; 224
    2c9e:	f6 e0       	ldi	r31, 0x06	; 6
    2ca0:	85 83       	std	Z+5, r24	; 0x05
    2ca2:	cc 24       	eor	r12, r12
    2ca4:	dd 24       	eor	r13, r13
    2ca6:	76 01       	movw	r14, r12
    2ca8:	a6 ca       	rjmp	.-2740   	; 0x21f6 <signalIoctl+0x5c>
         case GPIO_PORTH:

            /*---------------------------------------------------------------*
             * Make sure the requested pin is configured as an output
             *---------------------------------------------------------------*/
            if( !(PORTH.DIR & c_pin))
    2caa:	90 91 e0 06 	lds	r25, 0x06E0
    2cae:	98 23       	and	r25, r24
    2cb0:	09 f4       	brne	.+2      	; 0x2cb4 <signalIoctl+0xb1a>
    2cb2:	7a c4       	rjmp	.+2292   	; 0x35a8 <signalIoctl+0x140e>
               t_err = GPIO_PIN_IS_INPUT;
            else
               PORTH.OUTCLR = c_pin;
    2cb4:	e0 ee       	ldi	r30, 0xE0	; 224
    2cb6:	f6 e0       	ldi	r31, 0x06	; 6
    2cb8:	86 83       	std	Z+6, r24	; 0x06
    2cba:	cc 24       	eor	r12, r12
    2cbc:	dd 24       	eor	r13, r13
    2cbe:	76 01       	movw	r14, r12
    2cc0:	9a ca       	rjmp	.-2764   	; 0x21f6 <signalIoctl+0x5c>
         case GPIO_PORTB:

            /*---------------------------------------------------------------*
             * Make sure the requested pin is configured as an output
             *---------------------------------------------------------------*/
            if( !(PORTB.DIR & c_pin))
    2cc2:	90 91 20 06 	lds	r25, 0x0620
    2cc6:	98 23       	and	r25, r24
    2cc8:	09 f4       	brne	.+2      	; 0x2ccc <signalIoctl+0xb32>
    2cca:	c7 c5       	rjmp	.+2958   	; 0x385a <signalIoctl+0x16c0>
               t_err = GPIO_PIN_IS_INPUT;
            else
               PORTB.OUTCLR = c_pin;
    2ccc:	e0 e2       	ldi	r30, 0x20	; 32
    2cce:	f6 e0       	ldi	r31, 0x06	; 6
    2cd0:	86 83       	std	Z+6, r24	; 0x06
    2cd2:	cc 24       	eor	r12, r12
    2cd4:	dd 24       	eor	r13, r13
    2cd6:	76 01       	movw	r14, r12
    2cd8:	8e ca       	rjmp	.-2788   	; 0x21f6 <signalIoctl+0x5c>
         case GPIO_PORTC:

            /*---------------------------------------------------------------*
             * Make sure the requested pin is configured as an output
             *---------------------------------------------------------------*/
            if( !(PORTC.DIR & c_pin))
    2cda:	90 91 40 06 	lds	r25, 0x0640
    2cde:	98 23       	and	r25, r24
    2ce0:	09 f4       	brne	.+2      	; 0x2ce4 <signalIoctl+0xb4a>
    2ce2:	e5 c3       	rjmp	.+1994   	; 0x34ae <signalIoctl+0x1314>
               t_err = GPIO_PIN_IS_INPUT;
            else
               PORTC.OUTTGL = c_pin;
    2ce4:	e0 e4       	ldi	r30, 0x40	; 64
    2ce6:	f6 e0       	ldi	r31, 0x06	; 6
    2ce8:	87 83       	std	Z+7, r24	; 0x07
    2cea:	cc 24       	eor	r12, r12
    2cec:	dd 24       	eor	r13, r13
    2cee:	76 01       	movw	r14, r12
    2cf0:	82 ca       	rjmp	.-2812   	; 0x21f6 <signalIoctl+0x5c>
         case GPIO_PORTH:

            /*---------------------------------------------------------------*
             * Make sure the requested pin is configured as an output
             *---------------------------------------------------------------*/
            if( !(PORTH.DIR & c_pin))
    2cf2:	90 91 e0 06 	lds	r25, 0x06E0
    2cf6:	98 23       	and	r25, r24
    2cf8:	09 f4       	brne	.+2      	; 0x2cfc <signalIoctl+0xb62>
    2cfa:	19 c5       	rjmp	.+2610   	; 0x372e <signalIoctl+0x1594>
               t_err = GPIO_PIN_IS_INPUT;
            else
               PORTH.OUTSET = c_pin;
    2cfc:	e0 ee       	ldi	r30, 0xE0	; 224
    2cfe:	f6 e0       	ldi	r31, 0x06	; 6
    2d00:	85 83       	std	Z+5, r24	; 0x05
    2d02:	cc 24       	eor	r12, r12
    2d04:	dd 24       	eor	r13, r13
    2d06:	76 01       	movw	r14, r12
    2d08:	76 ca       	rjmp	.-2836   	; 0x21f6 <signalIoctl+0x5c>
         case GPIO_PORTB:

            /*---------------------------------------------------------------*
             * Make sure the requested pin is configured as an output
             *---------------------------------------------------------------*/
            if( !(PORTB.DIR & c_pin))
    2d0a:	90 91 20 06 	lds	r25, 0x0620
    2d0e:	98 23       	and	r25, r24
    2d10:	09 f4       	brne	.+2      	; 0x2d14 <signalIoctl+0xb7a>
    2d12:	72 c4       	rjmp	.+2276   	; 0x35f8 <signalIoctl+0x145e>
               t_err = GPIO_PIN_IS_INPUT;
            else
               PORTB.OUTSET = c_pin;
    2d14:	e0 e2       	ldi	r30, 0x20	; 32
    2d16:	f6 e0       	ldi	r31, 0x06	; 6
    2d18:	85 83       	std	Z+5, r24	; 0x05
    2d1a:	cc 24       	eor	r12, r12
    2d1c:	dd 24       	eor	r13, r13
    2d1e:	76 01       	movw	r14, r12
    2d20:	6a ca       	rjmp	.-2860   	; 0x21f6 <signalIoctl+0x5c>
         case GPIO_PORTJ:

            /*---------------------------------------------------------------*
             * Make sure the requested pin is configured as an output
             *---------------------------------------------------------------*/
            if( !(PORTJ.DIR & c_pin))
    2d22:	90 91 00 07 	lds	r25, 0x0700
    2d26:	98 23       	and	r25, r24
    2d28:	09 f4       	brne	.+2      	; 0x2d2c <signalIoctl+0xb92>
    2d2a:	6f c5       	rjmp	.+2782   	; 0x380a <signalIoctl+0x1670>
               t_err = GPIO_PIN_IS_INPUT;
            else
               PORTJ.OUTSET = c_pin;
    2d2c:	e0 e0       	ldi	r30, 0x00	; 0
    2d2e:	f7 e0       	ldi	r31, 0x07	; 7
    2d30:	85 83       	std	Z+5, r24	; 0x05
    2d32:	cc 24       	eor	r12, r12
    2d34:	dd 24       	eor	r13, r13
    2d36:	76 01       	movw	r14, r12
    2d38:	5e ca       	rjmp	.-2884   	; 0x21f6 <signalIoctl+0x5c>
         case GPIO_PORTC:

            /*---------------------------------------------------------------*
             * Make sure the requested pin is configured as an output
             *---------------------------------------------------------------*/
            if( !(PORTC.DIR & c_pin))
    2d3a:	90 91 40 06 	lds	r25, 0x0640
    2d3e:	98 23       	and	r25, r24
    2d40:	09 f4       	brne	.+2      	; 0x2d44 <signalIoctl+0xbaa>
    2d42:	65 c3       	rjmp	.+1738   	; 0x340e <signalIoctl+0x1274>
               t_err = GPIO_PIN_IS_INPUT;
            else
               PORTC.OUTSET = c_pin;
    2d44:	e0 e4       	ldi	r30, 0x40	; 64
    2d46:	f6 e0       	ldi	r31, 0x06	; 6
    2d48:	85 83       	std	Z+5, r24	; 0x05
    2d4a:	cc 24       	eor	r12, r12
    2d4c:	dd 24       	eor	r13, r13
    2d4e:	76 01       	movw	r14, r12
    2d50:	52 ca       	rjmp	.-2908   	; 0x21f6 <signalIoctl+0x5c>
         case GPIO_PORTA:

            /*---------------------------------------------------------------*
             * Make sure the requested pin is configured as an output
             *---------------------------------------------------------------*/
            if( !(PORTA.DIR & c_pin))
    2d52:	90 91 00 06 	lds	r25, 0x0600
    2d56:	98 23       	and	r25, r24
    2d58:	09 f4       	brne	.+2      	; 0x2d5c <signalIoctl+0xbc2>
    2d5a:	c6 c4       	rjmp	.+2444   	; 0x36e8 <signalIoctl+0x154e>
               t_err = GPIO_PIN_IS_INPUT;
            else
               PORTA.OUTSET = c_pin;
    2d5c:	e0 e0       	ldi	r30, 0x00	; 0
    2d5e:	f6 e0       	ldi	r31, 0x06	; 6
    2d60:	85 83       	std	Z+5, r24	; 0x05
    2d62:	cc 24       	eor	r12, r12
    2d64:	dd 24       	eor	r13, r13
    2d66:	76 01       	movw	r14, r12
    2d68:	46 ca       	rjmp	.-2932   	; 0x21f6 <signalIoctl+0x5c>
         case GPIO_PORTB:

            /*---------------------------------------------------------------*
             * Make sure the requested pin is configured as an output
             *---------------------------------------------------------------*/
            if( !(PORTB.DIR & c_pin))
    2d6a:	90 91 20 06 	lds	r25, 0x0620
    2d6e:	98 23       	and	r25, r24
    2d70:	09 f4       	brne	.+2      	; 0x2d74 <signalIoctl+0xbda>
    2d72:	ed c3       	rjmp	.+2010   	; 0x354e <signalIoctl+0x13b4>
               t_err = GPIO_PIN_IS_INPUT;
            else
               PORTB.OUTCLR = c_pin;
    2d74:	e0 e2       	ldi	r30, 0x20	; 32
    2d76:	f6 e0       	ldi	r31, 0x06	; 6
    2d78:	86 83       	std	Z+6, r24	; 0x06
    2d7a:	cc 24       	eor	r12, r12
    2d7c:	dd 24       	eor	r13, r13
    2d7e:	76 01       	movw	r14, r12
    2d80:	3a ca       	rjmp	.-2956   	; 0x21f6 <signalIoctl+0x5c>
         case GPIO_PORTH:

            /*---------------------------------------------------------------*
             * Make sure the requested pin is configured as an output
             *---------------------------------------------------------------*/
            if( !(PORTH.DIR & c_pin))
    2d82:	90 91 e0 06 	lds	r25, 0x06E0
    2d86:	98 23       	and	r25, r24
    2d88:	09 f4       	brne	.+2      	; 0x2d8c <signalIoctl+0xbf2>
    2d8a:	8f c5       	rjmp	.+2846   	; 0x38aa <signalIoctl+0x1710>
               t_err = GPIO_PIN_IS_INPUT;
            else
               PORTH.OUTCLR = c_pin;
    2d8c:	e0 ee       	ldi	r30, 0xE0	; 224
    2d8e:	f6 e0       	ldi	r31, 0x06	; 6
    2d90:	86 83       	std	Z+6, r24	; 0x06
    2d92:	cc 24       	eor	r12, r12
    2d94:	dd 24       	eor	r13, r13
    2d96:	76 01       	movw	r14, r12
    2d98:	2e ca       	rjmp	.-2980   	; 0x21f6 <signalIoctl+0x5c>
         case GPIO_PORTK:

            /*---------------------------------------------------------------*
             * Make sure the requested pin is configured as an output
             *---------------------------------------------------------------*/
            if( !(PORTK.DIR & c_pin))
    2d9a:	90 91 20 07 	lds	r25, 0x0720
    2d9e:	98 23       	and	r25, r24
    2da0:	09 f4       	brne	.+2      	; 0x2da4 <signalIoctl+0xc0a>
    2da2:	99 c3       	rjmp	.+1842   	; 0x34d6 <signalIoctl+0x133c>
               t_err = GPIO_PIN_IS_INPUT;
            else
               PORTK.OUTSET = c_pin;
    2da4:	e0 e2       	ldi	r30, 0x20	; 32
    2da6:	f7 e0       	ldi	r31, 0x07	; 7
    2da8:	85 83       	std	Z+5, r24	; 0x05
    2daa:	cc 24       	eor	r12, r12
    2dac:	dd 24       	eor	r13, r13
    2dae:	76 01       	movw	r14, r12
    2db0:	22 ca       	rjmp	.-3004   	; 0x21f6 <signalIoctl+0x5c>
         case GPIO_PORTH:

            /*---------------------------------------------------------------*
             * Make sure the requested pin is configured as an output
             *---------------------------------------------------------------*/
            if( !(PORTH.DIR & c_pin))
    2db2:	90 91 e0 06 	lds	r25, 0x06E0
    2db6:	98 23       	and	r25, r24
    2db8:	09 f4       	brne	.+2      	; 0x2dbc <signalIoctl+0xc22>
    2dba:	e1 c4       	rjmp	.+2498   	; 0x377e <signalIoctl+0x15e4>
               t_err = GPIO_PIN_IS_INPUT;
            else
               PORTH.OUTSET = c_pin;
    2dbc:	e0 ee       	ldi	r30, 0xE0	; 224
    2dbe:	f6 e0       	ldi	r31, 0x06	; 6
    2dc0:	85 83       	std	Z+5, r24	; 0x05
    2dc2:	cc 24       	eor	r12, r12
    2dc4:	dd 24       	eor	r13, r13
    2dc6:	76 01       	movw	r14, r12
    2dc8:	16 ca       	rjmp	.-3028   	; 0x21f6 <signalIoctl+0x5c>
         case GPIO_PORTF:

            /*---------------------------------------------------------------*
             * Make sure the requested pin is configured as an output
             *---------------------------------------------------------------*/
            if( !(PORTF.DIR & c_pin))
    2dca:	90 91 a0 06 	lds	r25, 0x06A0
    2dce:	98 23       	and	r25, r24
    2dd0:	09 f4       	brne	.+2      	; 0x2dd4 <signalIoctl+0xc3a>
    2dd2:	3a c4       	rjmp	.+2164   	; 0x3648 <signalIoctl+0x14ae>
               t_err = GPIO_PIN_IS_INPUT;
            else
               PORTF.OUTSET = c_pin;
    2dd4:	e0 ea       	ldi	r30, 0xA0	; 160
    2dd6:	f6 e0       	ldi	r31, 0x06	; 6
    2dd8:	85 83       	std	Z+5, r24	; 0x05
    2dda:	cc 24       	eor	r12, r12
    2ddc:	dd 24       	eor	r13, r13
    2dde:	76 01       	movw	r14, r12
    2de0:	0a ca       	rjmp	.-3052   	; 0x21f6 <signalIoctl+0x5c>
         case GPIO_PORTF:

            /*---------------------------------------------------------------*
             * Make sure the requested pin is configured as an output
             *---------------------------------------------------------------*/
            if( !(PORTF.DIR & c_pin))
    2de2:	90 91 a0 06 	lds	r25, 0x06A0
    2de6:	98 23       	and	r25, r24
    2de8:	09 f4       	brne	.+2      	; 0x2dec <signalIoctl+0xc52>
    2dea:	f1 c4       	rjmp	.+2530   	; 0x37ce <signalIoctl+0x1634>
               t_err = GPIO_PIN_IS_INPUT;
            else
               PORTF.OUTTGL = c_pin;
    2dec:	e0 ea       	ldi	r30, 0xA0	; 160
    2dee:	f6 e0       	ldi	r31, 0x06	; 6
    2df0:	87 83       	std	Z+7, r24	; 0x07
    2df2:	cc 24       	eor	r12, r12
    2df4:	dd 24       	eor	r13, r13
    2df6:	76 01       	movw	r14, r12
    2df8:	fe c9       	rjmp	.-3076   	; 0x21f6 <signalIoctl+0x5c>
         case GPIO_PORTF:

            /*---------------------------------------------------------------*
             * Make sure the requested pin is configured as an output
             *---------------------------------------------------------------*/
            if( !(PORTF.DIR & c_pin))
    2dfa:	90 91 a0 06 	lds	r25, 0x06A0
    2dfe:	98 23       	and	r25, r24
    2e00:	09 f4       	brne	.+2      	; 0x2e04 <signalIoctl+0xc6a>
    2e02:	2d c3       	rjmp	.+1626   	; 0x345e <signalIoctl+0x12c4>
               t_err = GPIO_PIN_IS_INPUT;
            else
               PORTF.OUTCLR = c_pin;
    2e04:	e0 ea       	ldi	r30, 0xA0	; 160
    2e06:	f6 e0       	ldi	r31, 0x06	; 6
    2e08:	86 83       	std	Z+6, r24	; 0x06
    2e0a:	cc 24       	eor	r12, r12
    2e0c:	dd 24       	eor	r13, r13
    2e0e:	76 01       	movw	r14, r12
    2e10:	f2 c9       	rjmp	.-3100   	; 0x21f6 <signalIoctl+0x5c>
         case GPIO_PORTD:

            /*---------------------------------------------------------------*
             * Make sure the requested pin is configured as an output
             *---------------------------------------------------------------*/
            if( !(PORTD.DIR & c_pin))
    2e12:	90 91 60 06 	lds	r25, 0x0660
    2e16:	98 23       	and	r25, r24
    2e18:	09 f4       	brne	.+2      	; 0x2e1c <signalIoctl+0xc82>
    2e1a:	2f c4       	rjmp	.+2142   	; 0x367a <signalIoctl+0x14e0>
               t_err = GPIO_PIN_IS_INPUT;
            else
               PORTD.OUTCLR = c_pin;
    2e1c:	e0 e6       	ldi	r30, 0x60	; 96
    2e1e:	f6 e0       	ldi	r31, 0x06	; 6
    2e20:	86 83       	std	Z+6, r24	; 0x06
    2e22:	cc 24       	eor	r12, r12
    2e24:	dd 24       	eor	r13, r13
    2e26:	76 01       	movw	r14, r12
    2e28:	e6 c9       	rjmp	.-3124   	; 0x21f6 <signalIoctl+0x5c>
         case GPIO_PORTD:

            /*---------------------------------------------------------------*
             * Make sure the requested pin is configured as an output
             *---------------------------------------------------------------*/
            if( !(PORTD.DIR & c_pin))
    2e2a:	90 91 60 06 	lds	r25, 0x0660
    2e2e:	98 23       	and	r25, r24
    2e30:	09 f4       	brne	.+2      	; 0x2e34 <signalIoctl+0xc9a>
    2e32:	a1 c3       	rjmp	.+1858   	; 0x3576 <signalIoctl+0x13dc>
               t_err = GPIO_PIN_IS_INPUT;
            else
               PORTD.OUTSET = c_pin;
    2e34:	e0 e6       	ldi	r30, 0x60	; 96
    2e36:	f6 e0       	ldi	r31, 0x06	; 6
    2e38:	85 83       	std	Z+5, r24	; 0x05
    2e3a:	cc 24       	eor	r12, r12
    2e3c:	dd 24       	eor	r13, r13
    2e3e:	76 01       	movw	r14, r12
    2e40:	da c9       	rjmp	.-3148   	; 0x21f6 <signalIoctl+0x5c>
         case GPIO_PORTQ:

            /*---------------------------------------------------------------*
             * Make sure the requested pin is configured as an output
             *---------------------------------------------------------------*/
            if( !(PORTQ.DIR & c_pin))
    2e42:	90 91 c0 07 	lds	r25, 0x07C0
    2e46:	98 23       	and	r25, r24
    2e48:	09 f4       	brne	.+2      	; 0x2e4c <signalIoctl+0xcb2>
    2e4a:	fd c4       	rjmp	.+2554   	; 0x3846 <signalIoctl+0x16ac>
               t_err = GPIO_PIN_IS_INPUT;
            else
               PORTQ.OUTTGL = c_pin;
    2e4c:	e0 ec       	ldi	r30, 0xC0	; 192
    2e4e:	f7 e0       	ldi	r31, 0x07	; 7
    2e50:	87 83       	std	Z+7, r24	; 0x07
    2e52:	cc 24       	eor	r12, r12
    2e54:	dd 24       	eor	r13, r13
    2e56:	76 01       	movw	r14, r12
    2e58:	ce c9       	rjmp	.-3172   	; 0x21f6 <signalIoctl+0x5c>
         case GPIO_PORTC:

            /*---------------------------------------------------------------*
             * Make sure the requested pin is configured as an output
             *---------------------------------------------------------------*/
            if( !(PORTC.DIR & c_pin))
    2e5a:	90 91 40 06 	lds	r25, 0x0640
    2e5e:	98 23       	and	r25, r24
    2e60:	09 f4       	brne	.+2      	; 0x2e64 <signalIoctl+0xcca>
    2e62:	1b c3       	rjmp	.+1590   	; 0x349a <signalIoctl+0x1300>
               t_err = GPIO_PIN_IS_INPUT;
            else
               PORTC.OUTCLR = c_pin;
    2e64:	e0 e4       	ldi	r30, 0x40	; 64
    2e66:	f6 e0       	ldi	r31, 0x06	; 6
    2e68:	86 83       	std	Z+6, r24	; 0x06
    2e6a:	cc 24       	eor	r12, r12
    2e6c:	dd 24       	eor	r13, r13
    2e6e:	76 01       	movw	r14, r12
    2e70:	c2 c9       	rjmp	.-3196   	; 0x21f6 <signalIoctl+0x5c>
         case GPIO_PORTD:

            /*---------------------------------------------------------------*
             * Make sure the requested pin is configured as an output
             *---------------------------------------------------------------*/
            if( !(PORTD.DIR & c_pin))
    2e72:	90 91 60 06 	lds	r25, 0x0660
    2e76:	98 23       	and	r25, r24
    2e78:	09 f4       	brne	.+2      	; 0x2e7c <signalIoctl+0xce2>
    2e7a:	40 c4       	rjmp	.+2176   	; 0x36fc <signalIoctl+0x1562>
               t_err = GPIO_PIN_IS_INPUT;
            else
               PORTD.OUTTGL = c_pin;
    2e7c:	e0 e6       	ldi	r30, 0x60	; 96
    2e7e:	f6 e0       	ldi	r31, 0x06	; 6
    2e80:	87 83       	std	Z+7, r24	; 0x07
    2e82:	cc 24       	eor	r12, r12
    2e84:	dd 24       	eor	r13, r13
    2e86:	76 01       	movw	r14, r12
    2e88:	b6 c9       	rjmp	.-3220   	; 0x21f6 <signalIoctl+0x5c>
         case GPIO_PORTQ:

            /*---------------------------------------------------------------*
             * Make sure the requested pin is configured as an output
             *---------------------------------------------------------------*/
            if( !(PORTQ.DIR & c_pin))
    2e8a:	90 91 c0 07 	lds	r25, 0x07C0
    2e8e:	98 23       	and	r25, r24
    2e90:	09 f4       	brne	.+2      	; 0x2e94 <signalIoctl+0xcfa>
    2e92:	a3 c3       	rjmp	.+1862   	; 0x35da <signalIoctl+0x1440>
               t_err = GPIO_PIN_IS_INPUT;
            else
               PORTQ.OUTTGL = c_pin;
    2e94:	e0 ec       	ldi	r30, 0xC0	; 192
    2e96:	f7 e0       	ldi	r31, 0x07	; 7
    2e98:	87 83       	std	Z+7, r24	; 0x07
    2e9a:	cc 24       	eor	r12, r12
    2e9c:	dd 24       	eor	r13, r13
    2e9e:	76 01       	movw	r14, r12
    2ea0:	aa c9       	rjmp	.-3244   	; 0x21f6 <signalIoctl+0x5c>
         case GPIO_PORTQ:

            /*---------------------------------------------------------------*
             * Make sure the requested pin is configured as an output
             *---------------------------------------------------------------*/
            if( !(PORTQ.DIR & c_pin))
    2ea2:	90 91 c0 07 	lds	r25, 0x07C0
    2ea6:	98 23       	and	r25, r24
    2ea8:	09 f4       	brne	.+2      	; 0x2eac <signalIoctl+0xd12>
    2eaa:	a5 c4       	rjmp	.+2378   	; 0x37f6 <signalIoctl+0x165c>
               t_err = GPIO_PIN_IS_INPUT;
            else
               PORTQ.OUTCLR = c_pin;
    2eac:	e0 ec       	ldi	r30, 0xC0	; 192
    2eae:	f7 e0       	ldi	r31, 0x07	; 7
    2eb0:	86 83       	std	Z+6, r24	; 0x06
    2eb2:	cc 24       	eor	r12, r12
    2eb4:	dd 24       	eor	r13, r13
    2eb6:	76 01       	movw	r14, r12
    2eb8:	9e c9       	rjmp	.-3268   	; 0x21f6 <signalIoctl+0x5c>
         case GPIO_PORTC:

            /*---------------------------------------------------------------*
             * Make sure the requested pin is configured as an output
             *---------------------------------------------------------------*/
            if( !(PORTC.DIR & c_pin))
    2eba:	90 91 40 06 	lds	r25, 0x0640
    2ebe:	98 23       	and	r25, r24
    2ec0:	09 f4       	brne	.+2      	; 0x2ec4 <signalIoctl+0xd2a>
    2ec2:	9b c2       	rjmp	.+1334   	; 0x33fa <signalIoctl+0x1260>
               t_err = GPIO_PIN_IS_INPUT;
            else
               PORTC.OUTTGL = c_pin;
    2ec4:	e0 e4       	ldi	r30, 0x40	; 64
    2ec6:	f6 e0       	ldi	r31, 0x06	; 6
    2ec8:	87 83       	std	Z+7, r24	; 0x07
    2eca:	cc 24       	eor	r12, r12
    2ecc:	dd 24       	eor	r13, r13
    2ece:	76 01       	movw	r14, r12
    2ed0:	92 c9       	rjmp	.-3292   	; 0x21f6 <signalIoctl+0x5c>
         case GPIO_PORTD:

            /*---------------------------------------------------------------*
             * Make sure the requested pin is configured as an output
             *---------------------------------------------------------------*/
            if( !(PORTD.DIR & c_pin))
    2ed2:	90 91 60 06 	lds	r25, 0x0660
    2ed6:	98 23       	and	r25, r24
    2ed8:	09 f4       	brne	.+2      	; 0x2edc <signalIoctl+0xd42>
    2eda:	ed c3       	rjmp	.+2010   	; 0x36b6 <signalIoctl+0x151c>
               t_err = GPIO_PIN_IS_INPUT;
            else
               PORTD.OUTTGL = c_pin;
    2edc:	e0 e6       	ldi	r30, 0x60	; 96
    2ede:	f6 e0       	ldi	r31, 0x06	; 6
    2ee0:	87 83       	std	Z+7, r24	; 0x07
    2ee2:	cc 24       	eor	r12, r12
    2ee4:	dd 24       	eor	r13, r13
    2ee6:	76 01       	movw	r14, r12
    2ee8:	86 c9       	rjmp	.-3316   	; 0x21f6 <signalIoctl+0x5c>
         case GPIO_PORTD:

            /*---------------------------------------------------------------*
             * Make sure the requested pin is configured as an output
             *---------------------------------------------------------------*/
            if( !(PORTD.DIR & c_pin))
    2eea:	90 91 60 06 	lds	r25, 0x0660
    2eee:	98 23       	and	r25, r24
    2ef0:	09 f4       	brne	.+2      	; 0x2ef4 <signalIoctl+0xd5a>
    2ef2:	23 c3       	rjmp	.+1606   	; 0x353a <signalIoctl+0x13a0>
               t_err = GPIO_PIN_IS_INPUT;
            else
               PORTD.OUTCLR = c_pin;
    2ef4:	e0 e6       	ldi	r30, 0x60	; 96
    2ef6:	f6 e0       	ldi	r31, 0x06	; 6
    2ef8:	86 83       	std	Z+6, r24	; 0x06
    2efa:	cc 24       	eor	r12, r12
    2efc:	dd 24       	eor	r13, r13
    2efe:	76 01       	movw	r14, r12
    2f00:	7a c9       	rjmp	.-3340   	; 0x21f6 <signalIoctl+0x5c>
         case GPIO_PORTD:

            /*---------------------------------------------------------------*
             * Make sure the requested pin is configured as an output
             *---------------------------------------------------------------*/
            if( !(PORTD.DIR & c_pin))
    2f02:	90 91 60 06 	lds	r25, 0x0660
    2f06:	98 23       	and	r25, r24
    2f08:	09 f4       	brne	.+2      	; 0x2f0c <signalIoctl+0xd72>
    2f0a:	c5 c4       	rjmp	.+2442   	; 0x3896 <signalIoctl+0x16fc>
               t_err = GPIO_PIN_IS_INPUT;
            else
               PORTD.OUTCLR = c_pin;
    2f0c:	e0 e6       	ldi	r30, 0x60	; 96
    2f0e:	f6 e0       	ldi	r31, 0x06	; 6
    2f10:	86 83       	std	Z+6, r24	; 0x06
    2f12:	cc 24       	eor	r12, r12
    2f14:	dd 24       	eor	r13, r13
    2f16:	76 01       	movw	r14, r12
    2f18:	6e c9       	rjmp	.-3364   	; 0x21f6 <signalIoctl+0x5c>
         case GPIO_PORTK:

            /*---------------------------------------------------------------*
             * Make sure the requested pin is configured as an output
             *---------------------------------------------------------------*/
            if( !(PORTK.DIR & c_pin))
    2f1a:	90 91 20 07 	lds	r25, 0x0720
    2f1e:	98 23       	and	r25, r24
    2f20:	09 f4       	brne	.+2      	; 0x2f24 <signalIoctl+0xd8a>
    2f22:	ed c2       	rjmp	.+1498   	; 0x34fe <signalIoctl+0x1364>
               t_err = GPIO_PIN_IS_INPUT;
            else
               PORTK.OUTTGL = c_pin;
    2f24:	e0 e2       	ldi	r30, 0x20	; 32
    2f26:	f7 e0       	ldi	r31, 0x07	; 7
    2f28:	87 83       	std	Z+7, r24	; 0x07
    2f2a:	cc 24       	eor	r12, r12
    2f2c:	dd 24       	eor	r13, r13
    2f2e:	76 01       	movw	r14, r12
    2f30:	62 c9       	rjmp	.-3388   	; 0x21f6 <signalIoctl+0x5c>
         case GPIO_PORTQ:

            /*---------------------------------------------------------------*
             * Make sure the requested pin is configured as an output
             *---------------------------------------------------------------*/
            if( !(PORTQ.DIR & c_pin))
    2f32:	90 91 c0 07 	lds	r25, 0x07C0
    2f36:	98 23       	and	r25, r24
    2f38:	09 f4       	brne	.+2      	; 0x2f3c <signalIoctl+0xda2>
    2f3a:	08 c4       	rjmp	.+2064   	; 0x374c <signalIoctl+0x15b2>
               t_err = GPIO_PIN_IS_INPUT;
            else
               PORTQ.OUTTGL = c_pin;
    2f3c:	e0 ec       	ldi	r30, 0xC0	; 192
    2f3e:	f7 e0       	ldi	r31, 0x07	; 7
    2f40:	87 83       	std	Z+7, r24	; 0x07
    2f42:	cc 24       	eor	r12, r12
    2f44:	dd 24       	eor	r13, r13
    2f46:	76 01       	movw	r14, r12
    2f48:	56 c9       	rjmp	.-3412   	; 0x21f6 <signalIoctl+0x5c>
         case GPIO_PORTQ:

            /*---------------------------------------------------------------*
             * Make sure the requested pin is configured as an output
             *---------------------------------------------------------------*/
            if( !(PORTQ.DIR & c_pin))
    2f4a:	90 91 c0 07 	lds	r25, 0x07C0
    2f4e:	98 23       	and	r25, r24
    2f50:	09 f4       	brne	.+2      	; 0x2f54 <signalIoctl+0xdba>
    2f52:	61 c3       	rjmp	.+1730   	; 0x3616 <signalIoctl+0x147c>
               t_err = GPIO_PIN_IS_INPUT;
            else
               PORTQ.OUTCLR = c_pin;
    2f54:	e0 ec       	ldi	r30, 0xC0	; 192
    2f56:	f7 e0       	ldi	r31, 0x07	; 7
    2f58:	86 83       	std	Z+6, r24	; 0x06
    2f5a:	cc 24       	eor	r12, r12
    2f5c:	dd 24       	eor	r13, r13
    2f5e:	76 01       	movw	r14, r12
    2f60:	4a c9       	rjmp	.-3436   	; 0x21f6 <signalIoctl+0x5c>
         case GPIO_PORTD:

            /*---------------------------------------------------------------*
             * Make sure the requested pin is configured as an output
             *---------------------------------------------------------------*/
            if( !(PORTD.DIR & c_pin))
    2f62:	90 91 60 06 	lds	r25, 0x0660
    2f66:	98 23       	and	r25, r24
    2f68:	09 f4       	brne	.+2      	; 0x2f6c <signalIoctl+0xdd2>
    2f6a:	22 c4       	rjmp	.+2116   	; 0x37b0 <signalIoctl+0x1616>
               t_err = GPIO_PIN_IS_INPUT;
            else
               PORTD.OUTTGL = c_pin;
    2f6c:	e0 e6       	ldi	r30, 0x60	; 96
    2f6e:	f6 e0       	ldi	r31, 0x06	; 6
    2f70:	87 83       	std	Z+7, r24	; 0x07
    2f72:	cc 24       	eor	r12, r12
    2f74:	dd 24       	eor	r13, r13
    2f76:	76 01       	movw	r14, r12
    2f78:	3e c9       	rjmp	.-3460   	; 0x21f6 <signalIoctl+0x5c>
         case GPIO_PORTD:

            /*---------------------------------------------------------------*
             * Make sure the requested pin is configured as an output
             *---------------------------------------------------------------*/
            if( !(PORTD.DIR & c_pin))
    2f7a:	90 91 60 06 	lds	r25, 0x0660
    2f7e:	98 23       	and	r25, r24
    2f80:	09 f4       	brne	.+2      	; 0x2f84 <signalIoctl+0xdea>
    2f82:	63 c2       	rjmp	.+1222   	; 0x344a <signalIoctl+0x12b0>
               t_err = GPIO_PIN_IS_INPUT;
            else
               PORTD.OUTTGL = c_pin;
    2f84:	e0 e6       	ldi	r30, 0x60	; 96
    2f86:	f6 e0       	ldi	r31, 0x06	; 6
    2f88:	87 83       	std	Z+7, r24	; 0x07
    2f8a:	cc 24       	eor	r12, r12
    2f8c:	dd 24       	eor	r13, r13
    2f8e:	76 01       	movw	r14, r12
    2f90:	32 c9       	rjmp	.-3484   	; 0x21f6 <signalIoctl+0x5c>
         case GPIO_PORTQ:

            /*---------------------------------------------------------------*
             * Make sure the requested pin is configured as an output
             *---------------------------------------------------------------*/
            if( !(PORTQ.DIR & c_pin))
    2f92:	90 91 c0 07 	lds	r25, 0x07C0
    2f96:	98 23       	and	r25, r24
    2f98:	09 f4       	brne	.+2      	; 0x2f9c <signalIoctl+0xe02>
    2f9a:	83 c3       	rjmp	.+1798   	; 0x36a2 <signalIoctl+0x1508>
               t_err = GPIO_PIN_IS_INPUT;
            else
               PORTQ.OUTTGL = c_pin;
    2f9c:	e0 ec       	ldi	r30, 0xC0	; 192
    2f9e:	f7 e0       	ldi	r31, 0x07	; 7
    2fa0:	87 83       	std	Z+7, r24	; 0x07
    2fa2:	cc 24       	eor	r12, r12
    2fa4:	dd 24       	eor	r13, r13
    2fa6:	76 01       	movw	r14, r12
    2fa8:	26 c9       	rjmp	.-3508   	; 0x21f6 <signalIoctl+0x5c>
         case GPIO_PORTD:

            /*---------------------------------------------------------------*
             * Make sure the requested pin is configured as an output
             *---------------------------------------------------------------*/
            if( !(PORTD.DIR & c_pin))
    2faa:	90 91 60 06 	lds	r25, 0x0660
    2fae:	98 23       	and	r25, r24
    2fb0:	09 f4       	brne	.+2      	; 0x2fb4 <signalIoctl+0xe1a>
    2fb2:	f5 c2       	rjmp	.+1514   	; 0x359e <signalIoctl+0x1404>
               t_err = GPIO_PIN_IS_INPUT;
            else
               PORTD.OUTSET = c_pin;
    2fb4:	e0 e6       	ldi	r30, 0x60	; 96
    2fb6:	f6 e0       	ldi	r31, 0x06	; 6
    2fb8:	85 83       	std	Z+5, r24	; 0x05
    2fba:	cc 24       	eor	r12, r12
    2fbc:	dd 24       	eor	r13, r13
    2fbe:	76 01       	movw	r14, r12
    2fc0:	1a c9       	rjmp	.-3532   	; 0x21f6 <signalIoctl+0x5c>
         case GPIO_PORTQ:

            /*---------------------------------------------------------------*
             * Make sure the requested pin is configured as an output
             *---------------------------------------------------------------*/
            if( !(PORTQ.DIR & c_pin))
    2fc2:	90 91 c0 07 	lds	r25, 0x07C0
    2fc6:	98 23       	and	r25, r24
    2fc8:	09 f4       	brne	.+2      	; 0x2fcc <signalIoctl+0xe32>
    2fca:	51 c4       	rjmp	.+2210   	; 0x386e <signalIoctl+0x16d4>
               t_err = GPIO_PIN_IS_INPUT;
            else
               PORTQ.OUTSET = c_pin;
    2fcc:	e0 ec       	ldi	r30, 0xC0	; 192
    2fce:	f7 e0       	ldi	r31, 0x07	; 7
    2fd0:	85 83       	std	Z+5, r24	; 0x05
    2fd2:	cc 24       	eor	r12, r12
    2fd4:	dd 24       	eor	r13, r13
    2fd6:	76 01       	movw	r14, r12
    2fd8:	0e c9       	rjmp	.-3556   	; 0x21f6 <signalIoctl+0x5c>
         case GPIO_PORTC:

            /*---------------------------------------------------------------*
             * Make sure the requested pin is configured as an output
             *---------------------------------------------------------------*/
            if( !(PORTC.DIR & c_pin))
    2fda:	90 91 40 06 	lds	r25, 0x0640
    2fde:	98 23       	and	r25, r24
    2fe0:	09 f4       	brne	.+2      	; 0x2fe4 <signalIoctl+0xe4a>
    2fe2:	6f c2       	rjmp	.+1246   	; 0x34c2 <signalIoctl+0x1328>
               t_err = GPIO_PIN_IS_INPUT;
            else
               PORTC.OUTTGL = c_pin;
    2fe4:	e0 e4       	ldi	r30, 0x40	; 64
    2fe6:	f6 e0       	ldi	r31, 0x06	; 6
    2fe8:	87 83       	std	Z+7, r24	; 0x07
    2fea:	cc 24       	eor	r12, r12
    2fec:	dd 24       	eor	r13, r13
    2fee:	76 01       	movw	r14, r12
    2ff0:	02 c9       	rjmp	.-3580   	; 0x21f6 <signalIoctl+0x5c>
         case GPIO_PORTQ:

            /*---------------------------------------------------------------*
             * Make sure the requested pin is configured as an output
             *---------------------------------------------------------------*/
            if( !(PORTQ.DIR & c_pin))
    2ff2:	90 91 c0 07 	lds	r25, 0x07C0
    2ff6:	98 23       	and	r25, r24
    2ff8:	09 f4       	brne	.+2      	; 0x2ffc <signalIoctl+0xe62>
    2ffa:	94 c3       	rjmp	.+1832   	; 0x3724 <signalIoctl+0x158a>
               t_err = GPIO_PIN_IS_INPUT;
            else
               PORTQ.OUTSET = c_pin;
    2ffc:	e0 ec       	ldi	r30, 0xC0	; 192
    2ffe:	f7 e0       	ldi	r31, 0x07	; 7
    3000:	85 83       	std	Z+5, r24	; 0x05
    3002:	cc 24       	eor	r12, r12
    3004:	dd 24       	eor	r13, r13
    3006:	76 01       	movw	r14, r12
    3008:	f6 c8       	rjmp	.-3604   	; 0x21f6 <signalIoctl+0x5c>
         case GPIO_PORTD:

            /*---------------------------------------------------------------*
             * Make sure the requested pin is configured as an output
             *---------------------------------------------------------------*/
            if( !(PORTD.DIR & c_pin))
    300a:	90 91 60 06 	lds	r25, 0x0660
    300e:	98 23       	and	r25, r24
    3010:	09 f4       	brne	.+2      	; 0x3014 <signalIoctl+0xe7a>
    3012:	ed c2       	rjmp	.+1498   	; 0x35ee <signalIoctl+0x1454>
               t_err = GPIO_PIN_IS_INPUT;
            else
               PORTD.OUTSET = c_pin;
    3014:	e0 e6       	ldi	r30, 0x60	; 96
    3016:	f6 e0       	ldi	r31, 0x06	; 6
    3018:	85 83       	std	Z+5, r24	; 0x05
    301a:	cc 24       	eor	r12, r12
    301c:	dd 24       	eor	r13, r13
    301e:	76 01       	movw	r14, r12
    3020:	ea c8       	rjmp	.-3628   	; 0x21f6 <signalIoctl+0x5c>
         case GPIO_PORTQ:

            /*---------------------------------------------------------------*
             * Make sure the requested pin is configured as an output
             *---------------------------------------------------------------*/
            if( !(PORTQ.DIR & c_pin))
    3022:	90 91 c0 07 	lds	r25, 0x07C0
    3026:	98 23       	and	r25, r24
    3028:	09 f4       	brne	.+2      	; 0x302c <signalIoctl+0xe92>
    302a:	f9 c3       	rjmp	.+2034   	; 0x381e <signalIoctl+0x1684>
               t_err = GPIO_PIN_IS_INPUT;
            else
               PORTQ.OUTSET = c_pin;
    302c:	e0 ec       	ldi	r30, 0xC0	; 192
    302e:	f7 e0       	ldi	r31, 0x07	; 7
    3030:	85 83       	std	Z+5, r24	; 0x05
    3032:	cc 24       	eor	r12, r12
    3034:	dd 24       	eor	r13, r13
    3036:	76 01       	movw	r14, r12
    3038:	de c8       	rjmp	.-3652   	; 0x21f6 <signalIoctl+0x5c>
         case GPIO_PORTC:

            /*---------------------------------------------------------------*
             * Make sure the requested pin is configured as an output
             *---------------------------------------------------------------*/
            if( !(PORTC.DIR & c_pin))
    303a:	90 91 40 06 	lds	r25, 0x0640
    303e:	98 23       	and	r25, r24
    3040:	09 f4       	brne	.+2      	; 0x3044 <signalIoctl+0xeaa>
    3042:	ef c1       	rjmp	.+990    	; 0x3422 <signalIoctl+0x1288>
               t_err = GPIO_PIN_IS_INPUT;
            else
               PORTC.OUTCLR = c_pin;
    3044:	e0 e4       	ldi	r30, 0x40	; 64
    3046:	f6 e0       	ldi	r31, 0x06	; 6
    3048:	86 83       	std	Z+6, r24	; 0x06
    304a:	cc 24       	eor	r12, r12
    304c:	dd 24       	eor	r13, r13
    304e:	76 01       	movw	r14, r12
    3050:	d2 c8       	rjmp	.-3676   	; 0x21f6 <signalIoctl+0x5c>
         case GPIO_PORTD:

            /*---------------------------------------------------------------*
             * Make sure the requested pin is configured as an output
             *---------------------------------------------------------------*/
            if( !(PORTD.DIR & c_pin))
    3052:	90 91 60 06 	lds	r25, 0x0660
    3056:	98 23       	and	r25, r24
    3058:	09 f4       	brne	.+2      	; 0x305c <signalIoctl+0xec2>
    305a:	41 c3       	rjmp	.+1666   	; 0x36de <signalIoctl+0x1544>
               t_err = GPIO_PIN_IS_INPUT;
            else
               PORTD.OUTCLR = c_pin;
    305c:	e0 e6       	ldi	r30, 0x60	; 96
    305e:	f6 e0       	ldi	r31, 0x06	; 6
    3060:	86 83       	std	Z+6, r24	; 0x06
    3062:	cc 24       	eor	r12, r12
    3064:	dd 24       	eor	r13, r13
    3066:	76 01       	movw	r14, r12
    3068:	c6 c8       	rjmp	.-3700   	; 0x21f6 <signalIoctl+0x5c>
         case GPIO_PORTQ:

            /*---------------------------------------------------------------*
             * Make sure the requested pin is configured as an output
             *---------------------------------------------------------------*/
            if( !(PORTQ.DIR & c_pin))
    306a:	90 91 c0 07 	lds	r25, 0x07C0
    306e:	98 23       	and	r25, r24
    3070:	09 f4       	brne	.+2      	; 0x3074 <signalIoctl+0xeda>
    3072:	77 c2       	rjmp	.+1262   	; 0x3562 <signalIoctl+0x13c8>
               t_err = GPIO_PIN_IS_INPUT;
            else
               PORTQ.OUTCLR = c_pin;
    3074:	e0 ec       	ldi	r30, 0xC0	; 192
    3076:	f7 e0       	ldi	r31, 0x07	; 7
    3078:	86 83       	std	Z+6, r24	; 0x06
    307a:	cc 24       	eor	r12, r12
    307c:	dd 24       	eor	r13, r13
    307e:	76 01       	movw	r14, r12
    3080:	ba c8       	rjmp	.-3724   	; 0x21f6 <signalIoctl+0x5c>
         case GPIO_PORTD:

            /*---------------------------------------------------------------*
             * Make sure the requested pin is configured as an output
             *---------------------------------------------------------------*/
            if( !(PORTD.DIR & c_pin))
    3082:	90 91 60 06 	lds	r25, 0x0660
    3086:	98 23       	and	r25, r24
    3088:	09 f4       	brne	.+2      	; 0x308c <signalIoctl+0xef2>
    308a:	19 c4       	rjmp	.+2098   	; 0x38be <signalIoctl+0x1724>
               t_err = GPIO_PIN_IS_INPUT;
            else
               PORTD.OUTSET = c_pin;
    308c:	e0 e6       	ldi	r30, 0x60	; 96
    308e:	f6 e0       	ldi	r31, 0x06	; 6
    3090:	85 83       	std	Z+5, r24	; 0x05
    3092:	cc 24       	eor	r12, r12
    3094:	dd 24       	eor	r13, r13
    3096:	76 01       	movw	r14, r12
    3098:	ae c8       	rjmp	.-3748   	; 0x21f6 <signalIoctl+0x5c>
         case GPIO_PORTC:

            /*---------------------------------------------------------------*
             * Make sure the requested pin is configured as an output
             *---------------------------------------------------------------*/
            if( !(PORTC.DIR & c_pin))
    309a:	90 91 40 06 	lds	r25, 0x0640
    309e:	98 23       	and	r25, r24
    30a0:	09 f4       	brne	.+2      	; 0x30a4 <signalIoctl+0xf0a>
    30a2:	23 c2       	rjmp	.+1094   	; 0x34ea <signalIoctl+0x1350>
               t_err = GPIO_PIN_IS_INPUT;
            else
               PORTC.OUTCLR = c_pin;
    30a4:	e0 e4       	ldi	r30, 0x40	; 64
    30a6:	f6 e0       	ldi	r31, 0x06	; 6
    30a8:	86 83       	std	Z+6, r24	; 0x06
    30aa:	cc 24       	eor	r12, r12
    30ac:	dd 24       	eor	r13, r13
    30ae:	76 01       	movw	r14, r12
    30b0:	a2 c8       	rjmp	.-3772   	; 0x21f6 <signalIoctl+0x5c>
         case GPIO_PORTQ:

            /*---------------------------------------------------------------*
             * Make sure the requested pin is configured as an output
             *---------------------------------------------------------------*/
            if( !(PORTQ.DIR & c_pin))
    30b2:	90 91 c0 07 	lds	r25, 0x07C0
    30b6:	98 23       	and	r25, r24
    30b8:	09 f4       	brne	.+2      	; 0x30bc <signalIoctl+0xf22>
    30ba:	5c c3       	rjmp	.+1720   	; 0x3774 <signalIoctl+0x15da>
               t_err = GPIO_PIN_IS_INPUT;
            else
               PORTQ.OUTCLR = c_pin;
    30bc:	e0 ec       	ldi	r30, 0xC0	; 192
    30be:	f7 e0       	ldi	r31, 0x07	; 7
    30c0:	86 83       	std	Z+6, r24	; 0x06
    30c2:	cc 24       	eor	r12, r12
    30c4:	dd 24       	eor	r13, r13
    30c6:	76 01       	movw	r14, r12
    30c8:	96 c8       	rjmp	.-3796   	; 0x21f6 <signalIoctl+0x5c>
         case GPIO_PORTF:

            /*---------------------------------------------------------------*
             * Make sure the requested pin is configured as an output
             *---------------------------------------------------------------*/
            if( !(PORTF.DIR & c_pin))
    30ca:	90 91 a0 06 	lds	r25, 0x06A0
    30ce:	98 23       	and	r25, r24
    30d0:	09 f4       	brne	.+2      	; 0x30d4 <signalIoctl+0xf3a>
    30d2:	b5 c2       	rjmp	.+1386   	; 0x363e <signalIoctl+0x14a4>
               t_err = GPIO_PIN_IS_INPUT;
            else
               PORTF.OUTTGL = c_pin;
    30d4:	e0 ea       	ldi	r30, 0xA0	; 160
    30d6:	f6 e0       	ldi	r31, 0x06	; 6
    30d8:	87 83       	std	Z+7, r24	; 0x07
    30da:	cc 24       	eor	r12, r12
    30dc:	dd 24       	eor	r13, r13
    30de:	76 01       	movw	r14, r12
    30e0:	8a c8       	rjmp	.-3820   	; 0x21f6 <signalIoctl+0x5c>
         case GPIO_PORTA:

            /*---------------------------------------------------------------*
             * Make sure the requested pin is configured as an output
             *---------------------------------------------------------------*/
            if( !(PORTA.DIR & c_pin))
    30e2:	90 91 00 06 	lds	r25, 0x0600
    30e6:	98 23       	and	r25, r24
    30e8:	09 f4       	brne	.+2      	; 0x30ec <signalIoctl+0xf52>
    30ea:	6c c3       	rjmp	.+1752   	; 0x37c4 <signalIoctl+0x162a>
               t_err = GPIO_PIN_IS_INPUT;
            else
               PORTA.OUTTGL = c_pin;
    30ec:	e0 e0       	ldi	r30, 0x00	; 0
    30ee:	f6 e0       	ldi	r31, 0x06	; 6
    30f0:	87 83       	std	Z+7, r24	; 0x07
    30f2:	cc 24       	eor	r12, r12
    30f4:	dd 24       	eor	r13, r13
    30f6:	76 01       	movw	r14, r12
    30f8:	7e c8       	rjmp	.-3844   	; 0x21f6 <signalIoctl+0x5c>
         case GPIO_PORTF:

            /*---------------------------------------------------------------*
             * Make sure the requested pin is configured as an output
             *---------------------------------------------------------------*/
            if( !(PORTF.DIR & c_pin))
    30fa:	90 91 a0 06 	lds	r25, 0x06A0
    30fe:	98 23       	and	r25, r24
    3100:	09 f4       	brne	.+2      	; 0x3104 <signalIoctl+0xf6a>
    3102:	b7 c1       	rjmp	.+878    	; 0x3472 <signalIoctl+0x12d8>
               t_err = GPIO_PIN_IS_INPUT;
            else
               PORTF.OUTCLR = c_pin;
    3104:	e0 ea       	ldi	r30, 0xA0	; 160
    3106:	f6 e0       	ldi	r31, 0x06	; 6
    3108:	86 83       	std	Z+6, r24	; 0x06
    310a:	cc 24       	eor	r12, r12
    310c:	dd 24       	eor	r13, r13
    310e:	76 01       	movw	r14, r12
    3110:	72 c8       	rjmp	.-3868   	; 0x21f6 <signalIoctl+0x5c>
         case GPIO_PORTA:

            /*---------------------------------------------------------------*
             * Make sure the requested pin is configured as an output
             *---------------------------------------------------------------*/
            if( !(PORTA.DIR & c_pin))
    3112:	90 91 00 06 	lds	r25, 0x0600
    3116:	98 23       	and	r25, r24
    3118:	09 f4       	brne	.+2      	; 0x311c <signalIoctl+0xf82>
    311a:	d7 c2       	rjmp	.+1454   	; 0x36ca <signalIoctl+0x1530>
               t_err = GPIO_PIN_IS_INPUT;
            else
               PORTA.OUTTGL = c_pin;
    311c:	e0 e0       	ldi	r30, 0x00	; 0
    311e:	f6 e0       	ldi	r31, 0x06	; 6
    3120:	87 83       	std	Z+7, r24	; 0x07
    3122:	cc 24       	eor	r12, r12
    3124:	dd 24       	eor	r13, r13
    3126:	76 01       	movw	r14, r12
    3128:	0c 94 fb 10 	jmp	0x21f6	; 0x21f6 <signalIoctl+0x5c>
         case GPIO_PORTA:

            /*---------------------------------------------------------------*
             * Make sure the requested pin is configured as an output
             *---------------------------------------------------------------*/
            if( !(PORTA.DIR & c_pin))
    312c:	90 91 00 06 	lds	r25, 0x0600
    3130:	98 23       	and	r25, r24
    3132:	09 f4       	brne	.+2      	; 0x3136 <signalIoctl+0xf9c>
    3134:	2a c2       	rjmp	.+1108   	; 0x358a <signalIoctl+0x13f0>
               t_err = GPIO_PIN_IS_INPUT;
            else
               PORTA.OUTSET = c_pin;
    3136:	e0 e0       	ldi	r30, 0x00	; 0
    3138:	f6 e0       	ldi	r31, 0x06	; 6
    313a:	85 83       	std	Z+5, r24	; 0x05
    313c:	cc 24       	eor	r12, r12
    313e:	dd 24       	eor	r13, r13
    3140:	76 01       	movw	r14, r12
    3142:	0c 94 fb 10 	jmp	0x21f6	; 0x21f6 <signalIoctl+0x5c>
         case GPIO_PORTA:

            /*---------------------------------------------------------------*
             * Make sure the requested pin is configured as an output
             *---------------------------------------------------------------*/
            if( !(PORTA.DIR & c_pin))
    3146:	90 91 00 06 	lds	r25, 0x0600
    314a:	98 23       	and	r25, r24
    314c:	09 f4       	brne	.+2      	; 0x3150 <signalIoctl+0xfb6>
    314e:	76 c3       	rjmp	.+1772   	; 0x383c <signalIoctl+0x16a2>
               t_err = GPIO_PIN_IS_INPUT;
            else
               PORTA.OUTTGL = c_pin;
    3150:	e0 e0       	ldi	r30, 0x00	; 0
    3152:	f6 e0       	ldi	r31, 0x06	; 6
    3154:	87 83       	std	Z+7, r24	; 0x07
    3156:	cc 24       	eor	r12, r12
    3158:	dd 24       	eor	r13, r13
    315a:	76 01       	movw	r14, r12
    315c:	0c 94 fb 10 	jmp	0x21f6	; 0x21f6 <signalIoctl+0x5c>
         case GPIO_PORTK:

            /*---------------------------------------------------------------*
             * Make sure the requested pin is configured as an output
             *---------------------------------------------------------------*/
            if( !(PORTK.DIR & c_pin))
    3160:	90 91 20 07 	lds	r25, 0x0720
    3164:	98 23       	and	r25, r24
    3166:	09 f4       	brne	.+2      	; 0x316a <signalIoctl+0xfd0>
    3168:	d4 c1       	rjmp	.+936    	; 0x3512 <signalIoctl+0x1378>
               t_err = GPIO_PIN_IS_INPUT;
            else
               PORTK.OUTCLR = c_pin;
    316a:	e0 e2       	ldi	r30, 0x20	; 32
    316c:	f7 e0       	ldi	r31, 0x07	; 7
    316e:	86 83       	std	Z+6, r24	; 0x06
    3170:	cc 24       	eor	r12, r12
    3172:	dd 24       	eor	r13, r13
    3174:	76 01       	movw	r14, r12
    3176:	0c 94 fb 10 	jmp	0x21f6	; 0x21f6 <signalIoctl+0x5c>
         case GPIO_PORTA:

            /*---------------------------------------------------------------*
             * Make sure the requested pin is configured as an output
             *---------------------------------------------------------------*/
            if( !(PORTA.DIR & c_pin))
    317a:	90 91 00 06 	lds	r25, 0x0600
    317e:	98 23       	and	r25, r24
    3180:	09 f4       	brne	.+2      	; 0x3184 <signalIoctl+0xfea>
    3182:	c6 c2       	rjmp	.+1420   	; 0x3710 <signalIoctl+0x1576>
               t_err = GPIO_PIN_IS_INPUT;
            else
               PORTA.OUTCLR = c_pin;
    3184:	e0 e0       	ldi	r30, 0x00	; 0
    3186:	f6 e0       	ldi	r31, 0x06	; 6
    3188:	86 83       	std	Z+6, r24	; 0x06
    318a:	cc 24       	eor	r12, r12
    318c:	dd 24       	eor	r13, r13
    318e:	76 01       	movw	r14, r12
    3190:	0c 94 fb 10 	jmp	0x21f6	; 0x21f6 <signalIoctl+0x5c>
         case GPIO_PORTA:

            /*---------------------------------------------------------------*
             * Make sure the requested pin is configured as an output
             *---------------------------------------------------------------*/
            if( !(PORTA.DIR & c_pin))
    3194:	90 91 00 06 	lds	r25, 0x0600
    3198:	98 23       	and	r25, r24
    319a:	09 f4       	brne	.+2      	; 0x319e <signalIoctl+0x1004>
    319c:	32 c2       	rjmp	.+1124   	; 0x3602 <signalIoctl+0x1468>
               t_err = GPIO_PIN_IS_INPUT;
            else
               PORTA.OUTSET = c_pin;
    319e:	e0 e0       	ldi	r30, 0x00	; 0
    31a0:	f6 e0       	ldi	r31, 0x06	; 6
    31a2:	85 83       	std	Z+5, r24	; 0x05
    31a4:	cc 24       	eor	r12, r12
    31a6:	dd 24       	eor	r13, r13
    31a8:	76 01       	movw	r14, r12
    31aa:	0c 94 fb 10 	jmp	0x21f6	; 0x21f6 <signalIoctl+0x5c>
         case GPIO_PORTH:

            /*---------------------------------------------------------------*
             * Make sure the requested pin is configured as an output
             *---------------------------------------------------------------*/
            if( !(PORTH.DIR & c_pin))
    31ae:	90 91 e0 06 	lds	r25, 0x06E0
    31b2:	98 23       	and	r25, r24
    31b4:	09 f4       	brne	.+2      	; 0x31b8 <signalIoctl+0x101e>
    31b6:	1a c3       	rjmp	.+1588   	; 0x37ec <signalIoctl+0x1652>
               t_err = GPIO_PIN_IS_INPUT;
            else
               PORTH.OUTSET = c_pin;
    31b8:	e0 ee       	ldi	r30, 0xE0	; 224
    31ba:	f6 e0       	ldi	r31, 0x06	; 6
    31bc:	85 83       	std	Z+5, r24	; 0x05
    31be:	cc 24       	eor	r12, r12
    31c0:	dd 24       	eor	r13, r13
    31c2:	76 01       	movw	r14, r12
    31c4:	0c 94 fb 10 	jmp	0x21f6	; 0x21f6 <signalIoctl+0x5c>
         case GPIO_PORTF:

            /*---------------------------------------------------------------*
             * Make sure the requested pin is configured as an output
             *---------------------------------------------------------------*/
            if( !(PORTF.DIR & c_pin))
    31c8:	90 91 a0 06 	lds	r25, 0x06A0
    31cc:	98 23       	and	r25, r24
    31ce:	09 f4       	brne	.+2      	; 0x31d2 <signalIoctl+0x1038>
    31d0:	f0 c1       	rjmp	.+992    	; 0x35b2 <signalIoctl+0x1418>
               t_err = GPIO_PIN_IS_INPUT;
            else
               PORTF.OUTTGL = c_pin;
    31d2:	e0 ea       	ldi	r30, 0xA0	; 160
    31d4:	f6 e0       	ldi	r31, 0x06	; 6
    31d6:	87 83       	std	Z+7, r24	; 0x07
    31d8:	cc 24       	eor	r12, r12
    31da:	dd 24       	eor	r13, r13
    31dc:	76 01       	movw	r14, r12
    31de:	0c 94 fb 10 	jmp	0x21f6	; 0x21f6 <signalIoctl+0x5c>
         case GPIO_PORTA:

            /*---------------------------------------------------------------*
             * Make sure the requested pin is configured as an output
             *---------------------------------------------------------------*/
            if( !(PORTA.DIR & c_pin))
    31e2:	90 91 00 06 	lds	r25, 0x0600
    31e6:	98 23       	and	r25, r24
    31e8:	09 f4       	brne	.+2      	; 0x31ec <signalIoctl+0x1052>
    31ea:	83 c2       	rjmp	.+1286   	; 0x36f2 <signalIoctl+0x1558>
               t_err = GPIO_PIN_IS_INPUT;
            else
               PORTA.OUTCLR = c_pin;
    31ec:	e0 e0       	ldi	r30, 0x00	; 0
    31ee:	f6 e0       	ldi	r31, 0x06	; 6
    31f0:	86 83       	std	Z+6, r24	; 0x06
    31f2:	cc 24       	eor	r12, r12
    31f4:	dd 24       	eor	r13, r13
    31f6:	76 01       	movw	r14, r12
    31f8:	0c 94 fb 10 	jmp	0x21f6	; 0x21f6 <signalIoctl+0x5c>
         case GPIO_PORTA:

            /*---------------------------------------------------------------*
             * Make sure the requested pin is configured as an output
             *---------------------------------------------------------------*/
            if( !(PORTA.DIR & c_pin))
    31fc:	90 91 00 06 	lds	r25, 0x0600
    3200:	98 23       	and	r25, r24
    3202:	09 f4       	brne	.+2      	; 0x3206 <signalIoctl+0x106c>
    3204:	12 c2       	rjmp	.+1060   	; 0x362a <signalIoctl+0x1490>
               t_err = GPIO_PIN_IS_INPUT;
            else
               PORTA.OUTCLR = c_pin;
    3206:	e0 e0       	ldi	r30, 0x00	; 0
    3208:	f6 e0       	ldi	r31, 0x06	; 6
    320a:	86 83       	std	Z+6, r24	; 0x06
    320c:	cc 24       	eor	r12, r12
    320e:	dd 24       	eor	r13, r13
    3210:	76 01       	movw	r14, r12
    3212:	0c 94 fb 10 	jmp	0x21f6	; 0x21f6 <signalIoctl+0x5c>
         case GPIO_PORTA:

            /*---------------------------------------------------------------*
             * Make sure the requested pin is configured as an output
             *---------------------------------------------------------------*/
            if( !(PORTA.DIR & c_pin))
    3216:	90 91 00 06 	lds	r25, 0x0600
    321a:	98 23       	and	r25, r24
    321c:	09 f4       	brne	.+2      	; 0x3220 <signalIoctl+0x1086>
    321e:	36 c3       	rjmp	.+1644   	; 0x388c <signalIoctl+0x16f2>
               t_err = GPIO_PIN_IS_INPUT;
            else
               PORTA.OUTTGL = c_pin;
    3220:	e0 e0       	ldi	r30, 0x00	; 0
    3222:	f6 e0       	ldi	r31, 0x06	; 6
    3224:	87 83       	std	Z+7, r24	; 0x07
    3226:	cc 24       	eor	r12, r12
    3228:	dd 24       	eor	r13, r13
    322a:	76 01       	movw	r14, r12
    322c:	0c 94 fb 10 	jmp	0x21f6	; 0x21f6 <signalIoctl+0x5c>
         case GPIO_PORTC:

            /*---------------------------------------------------------------*
             * Make sure the requested pin is configured as an output
             *---------------------------------------------------------------*/
            if( !(PORTC.DIR & c_pin))
    3230:	90 91 40 06 	lds	r25, 0x0640
    3234:	98 23       	and	r25, r24
    3236:	09 f4       	brne	.+2      	; 0x323a <signalIoctl+0x10a0>
    3238:	0c c2       	rjmp	.+1048   	; 0x3652 <signalIoctl+0x14b8>
               t_err = GPIO_PIN_IS_INPUT;
            else
               PORTC.OUTCLR = c_pin;
    323a:	e0 e4       	ldi	r30, 0x40	; 64
    323c:	f6 e0       	ldi	r31, 0x06	; 6
    323e:	86 83       	std	Z+6, r24	; 0x06
    3240:	cc 24       	eor	r12, r12
    3242:	dd 24       	eor	r13, r13
    3244:	76 01       	movw	r14, r12
    3246:	0c 94 fb 10 	jmp	0x21f6	; 0x21f6 <signalIoctl+0x5c>
         case GPIO_PORTF:

            /*---------------------------------------------------------------*
             * Make sure the requested pin is configured as an output
             *---------------------------------------------------------------*/
            if( !(PORTF.DIR & c_pin))
    324a:	90 91 a0 06 	lds	r25, 0x06A0
    324e:	98 23       	and	r25, r24
    3250:	09 f4       	brne	.+2      	; 0x3254 <signalIoctl+0x10ba>
    3252:	86 c2       	rjmp	.+1292   	; 0x3760 <signalIoctl+0x15c6>
               t_err = GPIO_PIN_IS_INPUT;
            else
               PORTF.OUTSET = c_pin;
    3254:	e0 ea       	ldi	r30, 0xA0	; 160
    3256:	f6 e0       	ldi	r31, 0x06	; 6
    3258:	85 83       	std	Z+5, r24	; 0x05
    325a:	cc 24       	eor	r12, r12
    325c:	dd 24       	eor	r13, r13
    325e:	76 01       	movw	r14, r12
    3260:	0c 94 fb 10 	jmp	0x21f6	; 0x21f6 <signalIoctl+0x5c>
         case GPIO_PORTA:

            /*---------------------------------------------------------------*
             * Make sure the requested pin is configured as an output
             *---------------------------------------------------------------*/
            if( !(PORTA.DIR & c_pin))
    3264:	90 91 00 06 	lds	r25, 0x0600
    3268:	98 23       	and	r25, r24
    326a:	09 f4       	brne	.+2      	; 0x326e <signalIoctl+0x10d4>
    326c:	b5 c2       	rjmp	.+1386   	; 0x37d8 <signalIoctl+0x163e>
               t_err = GPIO_PIN_IS_INPUT;
            else
               PORTA.OUTCLR = c_pin;
    326e:	e0 e0       	ldi	r30, 0x00	; 0
    3270:	f6 e0       	ldi	r31, 0x06	; 6
    3272:	86 83       	std	Z+6, r24	; 0x06
    3274:	cc 24       	eor	r12, r12
    3276:	dd 24       	eor	r13, r13
    3278:	76 01       	movw	r14, r12
    327a:	0c 94 fb 10 	jmp	0x21f6	; 0x21f6 <signalIoctl+0x5c>
         case GPIO_PORTF:

            /*---------------------------------------------------------------*
             * Make sure the requested pin is configured as an output
             *---------------------------------------------------------------*/
            if( !(PORTF.DIR & c_pin))
    327e:	90 91 a0 06 	lds	r25, 0x06A0
    3282:	98 23       	and	r25, r24
    3284:	09 f4       	brne	.+2      	; 0x3288 <signalIoctl+0x10ee>
    3286:	58 c2       	rjmp	.+1200   	; 0x3738 <signalIoctl+0x159e>
               t_err = GPIO_PIN_IS_INPUT;
            else
               PORTF.OUTSET = c_pin;
    3288:	e0 ea       	ldi	r30, 0xA0	; 160
    328a:	f6 e0       	ldi	r31, 0x06	; 6
    328c:	85 83       	std	Z+5, r24	; 0x05
    328e:	cc 24       	eor	r12, r12
    3290:	dd 24       	eor	r13, r13
    3292:	76 01       	movw	r14, r12
    3294:	0c 94 fb 10 	jmp	0x21f6	; 0x21f6 <signalIoctl+0x5c>
         case GPIO_PORTA:

            /*---------------------------------------------------------------*
             * Make sure the requested pin is configured as an output
             *---------------------------------------------------------------*/
            if( !(PORTA.DIR & c_pin))
    3298:	90 91 00 06 	lds	r25, 0x0600
    329c:	98 23       	and	r25, r24
    329e:	09 f4       	brne	.+2      	; 0x32a2 <signalIoctl+0x1108>
    32a0:	e1 c2       	rjmp	.+1474   	; 0x3864 <signalIoctl+0x16ca>
               t_err = GPIO_PIN_IS_INPUT;
            else
               PORTA.OUTSET = c_pin;
    32a2:	e0 e0       	ldi	r30, 0x00	; 0
    32a4:	f6 e0       	ldi	r31, 0x06	; 6
    32a6:	85 83       	std	Z+5, r24	; 0x05
    32a8:	cc 24       	eor	r12, r12
    32aa:	dd 24       	eor	r13, r13
    32ac:	76 01       	movw	r14, r12
    32ae:	0c 94 fb 10 	jmp	0x21f6	; 0x21f6 <signalIoctl+0x5c>
         case GPIO_PORTK:

            /*---------------------------------------------------------------*
             * Make sure the requested pin is configured as an output
             *---------------------------------------------------------------*/
            if( !(PORTK.DIR & c_pin))
    32b2:	90 91 20 07 	lds	r25, 0x0720
    32b6:	98 23       	and	r25, r24
    32b8:	09 f4       	brne	.+2      	; 0x32bc <signalIoctl+0x1122>
    32ba:	66 c2       	rjmp	.+1228   	; 0x3788 <signalIoctl+0x15ee>
               t_err = GPIO_PIN_IS_INPUT;
            else
               PORTK.OUTTGL = c_pin;
    32bc:	e0 e2       	ldi	r30, 0x20	; 32
    32be:	f7 e0       	ldi	r31, 0x07	; 7
    32c0:	87 83       	std	Z+7, r24	; 0x07
    32c2:	cc 24       	eor	r12, r12
    32c4:	dd 24       	eor	r13, r13
    32c6:	76 01       	movw	r14, r12
    32c8:	0c 94 fb 10 	jmp	0x21f6	; 0x21f6 <signalIoctl+0x5c>
         case GPIO_PORTF:

            /*---------------------------------------------------------------*
             * Make sure the requested pin is configured as an output
             *---------------------------------------------------------------*/
            if( !(PORTF.DIR & c_pin))
    32cc:	90 91 a0 06 	lds	r25, 0x06A0
    32d0:	98 23       	and	r25, r24
    32d2:	09 f4       	brne	.+2      	; 0x32d6 <signalIoctl+0x113c>
    32d4:	9f c2       	rjmp	.+1342   	; 0x3814 <signalIoctl+0x167a>
               t_err = GPIO_PIN_IS_INPUT;
            else
               PORTF.OUTTGL = c_pin;
    32d6:	e0 ea       	ldi	r30, 0xA0	; 160
    32d8:	f6 e0       	ldi	r31, 0x06	; 6
    32da:	87 83       	std	Z+7, r24	; 0x07
    32dc:	cc 24       	eor	r12, r12
    32de:	dd 24       	eor	r13, r13
    32e0:	76 01       	movw	r14, r12
    32e2:	0c 94 fb 10 	jmp	0x21f6	; 0x21f6 <signalIoctl+0x5c>
         case GPIO_PORTK:

            /*---------------------------------------------------------------*
             * Make sure the requested pin is configured as an output
             *---------------------------------------------------------------*/
            if( !(PORTK.DIR & c_pin))
    32e6:	90 91 20 07 	lds	r25, 0x0720
    32ea:	98 23       	and	r25, r24
    32ec:	09 f4       	brne	.+2      	; 0x32f0 <signalIoctl+0x1156>
    32ee:	e2 c2       	rjmp	.+1476   	; 0x38b4 <signalIoctl+0x171a>
               t_err = GPIO_PIN_IS_INPUT;
            else
               PORTK.OUTCLR = c_pin;
    32f0:	e0 e2       	ldi	r30, 0x20	; 32
    32f2:	f7 e0       	ldi	r31, 0x07	; 7
    32f4:	86 83       	std	Z+6, r24	; 0x06
    32f6:	cc 24       	eor	r12, r12
    32f8:	dd 24       	eor	r13, r13
    32fa:	76 01       	movw	r14, r12
    32fc:	0c 94 fb 10 	jmp	0x21f6	; 0x21f6 <signalIoctl+0x5c>
         case GPIO_PORTK:

            /*---------------------------------------------------------------*
             * Make sure the requested pin is configured as an output
             *---------------------------------------------------------------*/
            if( !(PORTK.DIR & c_pin))
    3300:	90 91 20 07 	lds	r25, 0x0720
    3304:	98 23       	and	r25, r24
    3306:	09 f4       	brne	.+2      	; 0x330a <signalIoctl+0x1170>
    3308:	7b c2       	rjmp	.+1270   	; 0x3800 <signalIoctl+0x1666>
               t_err = GPIO_PIN_IS_INPUT;
            else
               PORTK.OUTSET = c_pin;
    330a:	e0 e2       	ldi	r30, 0x20	; 32
    330c:	f7 e0       	ldi	r31, 0x07	; 7
    330e:	85 83       	std	Z+5, r24	; 0x05
    3310:	cc 24       	eor	r12, r12
    3312:	dd 24       	eor	r13, r13
    3314:	76 01       	movw	r14, r12
    3316:	0c 94 fb 10 	jmp	0x21f6	; 0x21f6 <signalIoctl+0x5c>
         case GPIO_PORTK:

            /*---------------------------------------------------------------*
             * Make sure the requested pin is configured as an output
             *---------------------------------------------------------------*/
            if( !(PORTK.DIR & c_pin))
    331a:	90 91 20 07 	lds	r25, 0x0720
    331e:	98 23       	and	r25, r24
    3320:	09 f4       	brne	.+2      	; 0x3324 <signalIoctl+0x118a>
    3322:	96 c2       	rjmp	.+1324   	; 0x3850 <signalIoctl+0x16b6>
               t_err = GPIO_PIN_IS_INPUT;
            else
               PORTK.OUTTGL = c_pin;
    3324:	e0 e2       	ldi	r30, 0x20	; 32
    3326:	f7 e0       	ldi	r31, 0x07	; 7
    3328:	87 83       	std	Z+7, r24	; 0x07
    332a:	cc 24       	eor	r12, r12
    332c:	dd 24       	eor	r13, r13
    332e:	76 01       	movw	r14, r12
    3330:	0c 94 fb 10 	jmp	0x21f6	; 0x21f6 <signalIoctl+0x5c>
         case GPIO_PORTC:

            /*---------------------------------------------------------------*
             * Make sure the requested pin is configured as an output
             *---------------------------------------------------------------*/
            if( !(PORTC.DIR & c_pin))
    3334:	90 91 40 06 	lds	r25, 0x0640
    3338:	98 23       	and	r25, r24
    333a:	09 f4       	brne	.+2      	; 0x333e <signalIoctl+0x11a4>
    333c:	75 c2       	rjmp	.+1258   	; 0x3828 <signalIoctl+0x168e>
               t_err = GPIO_PIN_IS_INPUT;
            else
               PORTC.OUTTGL = c_pin;
    333e:	e0 e4       	ldi	r30, 0x40	; 64
    3340:	f6 e0       	ldi	r31, 0x06	; 6
    3342:	87 83       	std	Z+7, r24	; 0x07
    3344:	cc 24       	eor	r12, r12
    3346:	dd 24       	eor	r13, r13
    3348:	76 01       	movw	r14, r12
    334a:	0c 94 fb 10 	jmp	0x21f6	; 0x21f6 <signalIoctl+0x5c>
         case GPIO_PORTC:

            /*---------------------------------------------------------------*
             * Make sure the requested pin is configured as an output
             *---------------------------------------------------------------*/
            if( !(PORTC.DIR & c_pin))
    334e:	90 91 40 06 	lds	r25, 0x0640
    3352:	98 23       	and	r25, r24
    3354:	09 f4       	brne	.+2      	; 0x3358 <signalIoctl+0x11be>
    3356:	a4 c2       	rjmp	.+1352   	; 0x38a0 <signalIoctl+0x1706>
               t_err = GPIO_PIN_IS_INPUT;
            else
               PORTC.OUTSET = c_pin;
    3358:	e0 e4       	ldi	r30, 0x40	; 64
    335a:	f6 e0       	ldi	r31, 0x06	; 6
    335c:	85 83       	std	Z+5, r24	; 0x05
    335e:	cc 24       	eor	r12, r12
    3360:	dd 24       	eor	r13, r13
    3362:	76 01       	movw	r14, r12
    3364:	0c 94 fb 10 	jmp	0x21f6	; 0x21f6 <signalIoctl+0x5c>
         case GPIO_PORTK:

            /*---------------------------------------------------------------*
             * Make sure the requested pin is configured as an output
             *---------------------------------------------------------------*/
            if( !(PORTK.DIR & c_pin))
    3368:	90 91 20 07 	lds	r25, 0x0720
    336c:	98 23       	and	r25, r24
    336e:	09 f4       	brne	.+2      	; 0x3372 <signalIoctl+0x11d8>
    3370:	83 c2       	rjmp	.+1286   	; 0x3878 <signalIoctl+0x16de>
               t_err = GPIO_PIN_IS_INPUT;
            else
               PORTK.OUTSET = c_pin;
    3372:	e0 e2       	ldi	r30, 0x20	; 32
    3374:	f7 e0       	ldi	r31, 0x07	; 7
    3376:	85 83       	std	Z+5, r24	; 0x05
    3378:	cc 24       	eor	r12, r12
    337a:	dd 24       	eor	r13, r13
    337c:	76 01       	movw	r14, r12
    337e:	0c 94 fb 10 	jmp	0x21f6	; 0x21f6 <signalIoctl+0x5c>
         case GPIO_PORTK:

            /*---------------------------------------------------------------*
             * Make sure the requested pin is configured as an output
             *---------------------------------------------------------------*/
            if( !(PORTK.DIR & c_pin))
    3382:	90 91 20 07 	lds	r25, 0x0720
    3386:	98 23       	and	r25, r24
    3388:	09 f4       	brne	.+2      	; 0x338c <signalIoctl+0x11f2>
    338a:	9e c2       	rjmp	.+1340   	; 0x38c8 <signalIoctl+0x172e>
               t_err = GPIO_PIN_IS_INPUT;
            else
               PORTK.OUTCLR = c_pin;
    338c:	e0 e2       	ldi	r30, 0x20	; 32
    338e:	f7 e0       	ldi	r31, 0x07	; 7
    3390:	86 83       	std	Z+6, r24	; 0x06
    3392:	cc 24       	eor	r12, r12
    3394:	dd 24       	eor	r13, r13
    3396:	76 01       	movw	r14, r12
    3398:	0c 94 fb 10 	jmp	0x21f6	; 0x21f6 <signalIoctl+0x5c>
         case GPIO_PORTC:

            /*---------------------------------------------------------------*
             * Make sure the requested pin is configured as an output
             *---------------------------------------------------------------*/
            if( !(PORTC.DIR & c_pin))
    339c:	90 91 40 06 	lds	r25, 0x0640
    33a0:	98 23       	and	r25, r24
    33a2:	69 f0       	breq	.+26     	; 0x33be <signalIoctl+0x1224>
               t_err = GPIO_PIN_IS_INPUT;
            else
               PORTC.OUTSET = c_pin;
    33a4:	e0 e4       	ldi	r30, 0x40	; 64
    33a6:	f6 e0       	ldi	r31, 0x06	; 6
    33a8:	85 83       	std	Z+5, r24	; 0x05
    33aa:	cc 24       	eor	r12, r12
    33ac:	dd 24       	eor	r13, r13
    33ae:	76 01       	movw	r14, r12
    33b0:	0c 94 fb 10 	jmp	0x21f6	; 0x21f6 <signalIoctl+0x5c>
    33b4:	cc 24       	eor	r12, r12
    33b6:	dd 24       	eor	r13, r13
    33b8:	76 01       	movw	r14, r12
    33ba:	0c 94 fb 10 	jmp	0x21f6	; 0x21f6 <signalIoctl+0x5c>
    33be:	cc 24       	eor	r12, r12
    33c0:	dd 24       	eor	r13, r13
    33c2:	76 01       	movw	r14, r12
    33c4:	0c 94 fb 10 	jmp	0x21f6	; 0x21f6 <signalIoctl+0x5c>
    33c8:	cc 24       	eor	r12, r12
    33ca:	dd 24       	eor	r13, r13
    33cc:	76 01       	movw	r14, r12
    33ce:	0c 94 fb 10 	jmp	0x21f6	; 0x21f6 <signalIoctl+0x5c>
    33d2:	cc 24       	eor	r12, r12
    33d4:	dd 24       	eor	r13, r13
    33d6:	76 01       	movw	r14, r12
    33d8:	0c 94 fb 10 	jmp	0x21f6	; 0x21f6 <signalIoctl+0x5c>
    33dc:	cc 24       	eor	r12, r12
    33de:	dd 24       	eor	r13, r13
    33e0:	76 01       	movw	r14, r12
    33e2:	0c 94 fb 10 	jmp	0x21f6	; 0x21f6 <signalIoctl+0x5c>
    33e6:	cc 24       	eor	r12, r12
    33e8:	dd 24       	eor	r13, r13
    33ea:	76 01       	movw	r14, r12
    33ec:	0c 94 fb 10 	jmp	0x21f6	; 0x21f6 <signalIoctl+0x5c>
    33f0:	cc 24       	eor	r12, r12
    33f2:	dd 24       	eor	r13, r13
    33f4:	76 01       	movw	r14, r12
    33f6:	0c 94 fb 10 	jmp	0x21f6	; 0x21f6 <signalIoctl+0x5c>
    33fa:	cc 24       	eor	r12, r12
    33fc:	dd 24       	eor	r13, r13
    33fe:	76 01       	movw	r14, r12
    3400:	0c 94 fb 10 	jmp	0x21f6	; 0x21f6 <signalIoctl+0x5c>
    3404:	cc 24       	eor	r12, r12
    3406:	dd 24       	eor	r13, r13
    3408:	76 01       	movw	r14, r12
    340a:	0c 94 fb 10 	jmp	0x21f6	; 0x21f6 <signalIoctl+0x5c>
    340e:	cc 24       	eor	r12, r12
    3410:	dd 24       	eor	r13, r13
    3412:	76 01       	movw	r14, r12
    3414:	0c 94 fb 10 	jmp	0x21f6	; 0x21f6 <signalIoctl+0x5c>
    3418:	cc 24       	eor	r12, r12
    341a:	dd 24       	eor	r13, r13
    341c:	76 01       	movw	r14, r12
    341e:	0c 94 fb 10 	jmp	0x21f6	; 0x21f6 <signalIoctl+0x5c>
    3422:	cc 24       	eor	r12, r12
    3424:	dd 24       	eor	r13, r13
    3426:	76 01       	movw	r14, r12
    3428:	0c 94 fb 10 	jmp	0x21f6	; 0x21f6 <signalIoctl+0x5c>
    342c:	cc 24       	eor	r12, r12
    342e:	dd 24       	eor	r13, r13
    3430:	76 01       	movw	r14, r12
    3432:	0c 94 fb 10 	jmp	0x21f6	; 0x21f6 <signalIoctl+0x5c>
    3436:	cc 24       	eor	r12, r12
    3438:	dd 24       	eor	r13, r13
    343a:	76 01       	movw	r14, r12
    343c:	0c 94 fb 10 	jmp	0x21f6	; 0x21f6 <signalIoctl+0x5c>
    3440:	cc 24       	eor	r12, r12
    3442:	dd 24       	eor	r13, r13
    3444:	76 01       	movw	r14, r12
    3446:	0c 94 fb 10 	jmp	0x21f6	; 0x21f6 <signalIoctl+0x5c>
    344a:	cc 24       	eor	r12, r12
    344c:	dd 24       	eor	r13, r13
    344e:	76 01       	movw	r14, r12
    3450:	0c 94 fb 10 	jmp	0x21f6	; 0x21f6 <signalIoctl+0x5c>
    3454:	cc 24       	eor	r12, r12
    3456:	dd 24       	eor	r13, r13
    3458:	76 01       	movw	r14, r12
    345a:	0c 94 fb 10 	jmp	0x21f6	; 0x21f6 <signalIoctl+0x5c>
    345e:	cc 24       	eor	r12, r12
    3460:	dd 24       	eor	r13, r13
    3462:	76 01       	movw	r14, r12
    3464:	0c 94 fb 10 	jmp	0x21f6	; 0x21f6 <signalIoctl+0x5c>
    3468:	cc 24       	eor	r12, r12
    346a:	dd 24       	eor	r13, r13
    346c:	76 01       	movw	r14, r12
    346e:	0c 94 fb 10 	jmp	0x21f6	; 0x21f6 <signalIoctl+0x5c>
    3472:	cc 24       	eor	r12, r12
    3474:	dd 24       	eor	r13, r13
    3476:	76 01       	movw	r14, r12
    3478:	0c 94 fb 10 	jmp	0x21f6	; 0x21f6 <signalIoctl+0x5c>
    347c:	cc 24       	eor	r12, r12
    347e:	dd 24       	eor	r13, r13
    3480:	76 01       	movw	r14, r12
    3482:	0c 94 fb 10 	jmp	0x21f6	; 0x21f6 <signalIoctl+0x5c>
    3486:	cc 24       	eor	r12, r12
    3488:	dd 24       	eor	r13, r13
    348a:	76 01       	movw	r14, r12
    348c:	0c 94 fb 10 	jmp	0x21f6	; 0x21f6 <signalIoctl+0x5c>
    3490:	cc 24       	eor	r12, r12
    3492:	dd 24       	eor	r13, r13
    3494:	76 01       	movw	r14, r12
    3496:	0c 94 fb 10 	jmp	0x21f6	; 0x21f6 <signalIoctl+0x5c>
    349a:	cc 24       	eor	r12, r12
    349c:	dd 24       	eor	r13, r13
    349e:	76 01       	movw	r14, r12
    34a0:	0c 94 fb 10 	jmp	0x21f6	; 0x21f6 <signalIoctl+0x5c>
    34a4:	cc 24       	eor	r12, r12
    34a6:	dd 24       	eor	r13, r13
    34a8:	76 01       	movw	r14, r12
    34aa:	0c 94 fb 10 	jmp	0x21f6	; 0x21f6 <signalIoctl+0x5c>
    34ae:	cc 24       	eor	r12, r12
    34b0:	dd 24       	eor	r13, r13
    34b2:	76 01       	movw	r14, r12
    34b4:	0c 94 fb 10 	jmp	0x21f6	; 0x21f6 <signalIoctl+0x5c>
    34b8:	cc 24       	eor	r12, r12
    34ba:	dd 24       	eor	r13, r13
    34bc:	76 01       	movw	r14, r12
    34be:	0c 94 fb 10 	jmp	0x21f6	; 0x21f6 <signalIoctl+0x5c>
    34c2:	cc 24       	eor	r12, r12
    34c4:	dd 24       	eor	r13, r13
    34c6:	76 01       	movw	r14, r12
    34c8:	0c 94 fb 10 	jmp	0x21f6	; 0x21f6 <signalIoctl+0x5c>
    34cc:	cc 24       	eor	r12, r12
    34ce:	dd 24       	eor	r13, r13
    34d0:	76 01       	movw	r14, r12
    34d2:	0c 94 fb 10 	jmp	0x21f6	; 0x21f6 <signalIoctl+0x5c>
    34d6:	cc 24       	eor	r12, r12
    34d8:	dd 24       	eor	r13, r13
    34da:	76 01       	movw	r14, r12
    34dc:	0c 94 fb 10 	jmp	0x21f6	; 0x21f6 <signalIoctl+0x5c>
    34e0:	cc 24       	eor	r12, r12
    34e2:	dd 24       	eor	r13, r13
    34e4:	76 01       	movw	r14, r12
    34e6:	0c 94 fb 10 	jmp	0x21f6	; 0x21f6 <signalIoctl+0x5c>
    34ea:	cc 24       	eor	r12, r12
    34ec:	dd 24       	eor	r13, r13
    34ee:	76 01       	movw	r14, r12
    34f0:	0c 94 fb 10 	jmp	0x21f6	; 0x21f6 <signalIoctl+0x5c>
    34f4:	cc 24       	eor	r12, r12
    34f6:	dd 24       	eor	r13, r13
    34f8:	76 01       	movw	r14, r12
    34fa:	0c 94 fb 10 	jmp	0x21f6	; 0x21f6 <signalIoctl+0x5c>
    34fe:	cc 24       	eor	r12, r12
    3500:	dd 24       	eor	r13, r13
    3502:	76 01       	movw	r14, r12
    3504:	0c 94 fb 10 	jmp	0x21f6	; 0x21f6 <signalIoctl+0x5c>
    3508:	cc 24       	eor	r12, r12
    350a:	dd 24       	eor	r13, r13
    350c:	76 01       	movw	r14, r12
    350e:	0c 94 fb 10 	jmp	0x21f6	; 0x21f6 <signalIoctl+0x5c>
    3512:	cc 24       	eor	r12, r12
    3514:	dd 24       	eor	r13, r13
    3516:	76 01       	movw	r14, r12
    3518:	0c 94 fb 10 	jmp	0x21f6	; 0x21f6 <signalIoctl+0x5c>
    351c:	cc 24       	eor	r12, r12
    351e:	dd 24       	eor	r13, r13
    3520:	76 01       	movw	r14, r12
    3522:	0c 94 fb 10 	jmp	0x21f6	; 0x21f6 <signalIoctl+0x5c>
    3526:	cc 24       	eor	r12, r12
    3528:	dd 24       	eor	r13, r13
    352a:	76 01       	movw	r14, r12
    352c:	0c 94 fb 10 	jmp	0x21f6	; 0x21f6 <signalIoctl+0x5c>
    3530:	cc 24       	eor	r12, r12
    3532:	dd 24       	eor	r13, r13
    3534:	76 01       	movw	r14, r12
    3536:	0c 94 fb 10 	jmp	0x21f6	; 0x21f6 <signalIoctl+0x5c>
    353a:	cc 24       	eor	r12, r12
    353c:	dd 24       	eor	r13, r13
    353e:	76 01       	movw	r14, r12
    3540:	0c 94 fb 10 	jmp	0x21f6	; 0x21f6 <signalIoctl+0x5c>
    3544:	cc 24       	eor	r12, r12
    3546:	dd 24       	eor	r13, r13
    3548:	76 01       	movw	r14, r12
    354a:	0c 94 fb 10 	jmp	0x21f6	; 0x21f6 <signalIoctl+0x5c>
    354e:	cc 24       	eor	r12, r12
    3550:	dd 24       	eor	r13, r13
    3552:	76 01       	movw	r14, r12
    3554:	0c 94 fb 10 	jmp	0x21f6	; 0x21f6 <signalIoctl+0x5c>
    3558:	cc 24       	eor	r12, r12
    355a:	dd 24       	eor	r13, r13
    355c:	76 01       	movw	r14, r12
    355e:	0c 94 fb 10 	jmp	0x21f6	; 0x21f6 <signalIoctl+0x5c>
    3562:	cc 24       	eor	r12, r12
    3564:	dd 24       	eor	r13, r13
    3566:	76 01       	movw	r14, r12
    3568:	0c 94 fb 10 	jmp	0x21f6	; 0x21f6 <signalIoctl+0x5c>
    356c:	cc 24       	eor	r12, r12
    356e:	dd 24       	eor	r13, r13
    3570:	76 01       	movw	r14, r12
    3572:	0c 94 fb 10 	jmp	0x21f6	; 0x21f6 <signalIoctl+0x5c>
    3576:	cc 24       	eor	r12, r12
    3578:	dd 24       	eor	r13, r13
    357a:	76 01       	movw	r14, r12
    357c:	0c 94 fb 10 	jmp	0x21f6	; 0x21f6 <signalIoctl+0x5c>
    3580:	cc 24       	eor	r12, r12
    3582:	dd 24       	eor	r13, r13
    3584:	76 01       	movw	r14, r12
    3586:	0c 94 fb 10 	jmp	0x21f6	; 0x21f6 <signalIoctl+0x5c>
    358a:	cc 24       	eor	r12, r12
    358c:	dd 24       	eor	r13, r13
    358e:	76 01       	movw	r14, r12
    3590:	0c 94 fb 10 	jmp	0x21f6	; 0x21f6 <signalIoctl+0x5c>
    3594:	cc 24       	eor	r12, r12
    3596:	dd 24       	eor	r13, r13
    3598:	76 01       	movw	r14, r12
    359a:	0c 94 fb 10 	jmp	0x21f6	; 0x21f6 <signalIoctl+0x5c>
    359e:	cc 24       	eor	r12, r12
    35a0:	dd 24       	eor	r13, r13
    35a2:	76 01       	movw	r14, r12
    35a4:	0c 94 fb 10 	jmp	0x21f6	; 0x21f6 <signalIoctl+0x5c>
    35a8:	cc 24       	eor	r12, r12
    35aa:	dd 24       	eor	r13, r13
    35ac:	76 01       	movw	r14, r12
    35ae:	0c 94 fb 10 	jmp	0x21f6	; 0x21f6 <signalIoctl+0x5c>
    35b2:	cc 24       	eor	r12, r12
    35b4:	dd 24       	eor	r13, r13
    35b6:	76 01       	movw	r14, r12
    35b8:	0c 94 fb 10 	jmp	0x21f6	; 0x21f6 <signalIoctl+0x5c>
    35bc:	cc 24       	eor	r12, r12
    35be:	dd 24       	eor	r13, r13
    35c0:	76 01       	movw	r14, r12
    35c2:	0c 94 fb 10 	jmp	0x21f6	; 0x21f6 <signalIoctl+0x5c>
    35c6:	cc 24       	eor	r12, r12
    35c8:	dd 24       	eor	r13, r13
    35ca:	76 01       	movw	r14, r12
    35cc:	0c 94 fb 10 	jmp	0x21f6	; 0x21f6 <signalIoctl+0x5c>
    35d0:	cc 24       	eor	r12, r12
    35d2:	dd 24       	eor	r13, r13
    35d4:	76 01       	movw	r14, r12
    35d6:	0c 94 fb 10 	jmp	0x21f6	; 0x21f6 <signalIoctl+0x5c>
    35da:	cc 24       	eor	r12, r12
    35dc:	dd 24       	eor	r13, r13
    35de:	76 01       	movw	r14, r12
    35e0:	0c 94 fb 10 	jmp	0x21f6	; 0x21f6 <signalIoctl+0x5c>
    35e4:	cc 24       	eor	r12, r12
    35e6:	dd 24       	eor	r13, r13
    35e8:	76 01       	movw	r14, r12
    35ea:	0c 94 fb 10 	jmp	0x21f6	; 0x21f6 <signalIoctl+0x5c>
    35ee:	cc 24       	eor	r12, r12
    35f0:	dd 24       	eor	r13, r13
    35f2:	76 01       	movw	r14, r12
    35f4:	0c 94 fb 10 	jmp	0x21f6	; 0x21f6 <signalIoctl+0x5c>
    35f8:	cc 24       	eor	r12, r12
    35fa:	dd 24       	eor	r13, r13
    35fc:	76 01       	movw	r14, r12
    35fe:	0c 94 fb 10 	jmp	0x21f6	; 0x21f6 <signalIoctl+0x5c>
    3602:	cc 24       	eor	r12, r12
    3604:	dd 24       	eor	r13, r13
    3606:	76 01       	movw	r14, r12
    3608:	0c 94 fb 10 	jmp	0x21f6	; 0x21f6 <signalIoctl+0x5c>
    360c:	cc 24       	eor	r12, r12
    360e:	dd 24       	eor	r13, r13
    3610:	76 01       	movw	r14, r12
    3612:	0c 94 fb 10 	jmp	0x21f6	; 0x21f6 <signalIoctl+0x5c>
    3616:	cc 24       	eor	r12, r12
    3618:	dd 24       	eor	r13, r13
    361a:	76 01       	movw	r14, r12
    361c:	0c 94 fb 10 	jmp	0x21f6	; 0x21f6 <signalIoctl+0x5c>
    3620:	cc 24       	eor	r12, r12
    3622:	dd 24       	eor	r13, r13
    3624:	76 01       	movw	r14, r12
    3626:	0c 94 fb 10 	jmp	0x21f6	; 0x21f6 <signalIoctl+0x5c>
    362a:	cc 24       	eor	r12, r12
    362c:	dd 24       	eor	r13, r13
    362e:	76 01       	movw	r14, r12
    3630:	0c 94 fb 10 	jmp	0x21f6	; 0x21f6 <signalIoctl+0x5c>
    3634:	cc 24       	eor	r12, r12
    3636:	dd 24       	eor	r13, r13
    3638:	76 01       	movw	r14, r12
    363a:	0c 94 fb 10 	jmp	0x21f6	; 0x21f6 <signalIoctl+0x5c>
    363e:	cc 24       	eor	r12, r12
    3640:	dd 24       	eor	r13, r13
    3642:	76 01       	movw	r14, r12
    3644:	0c 94 fb 10 	jmp	0x21f6	; 0x21f6 <signalIoctl+0x5c>
    3648:	cc 24       	eor	r12, r12
    364a:	dd 24       	eor	r13, r13
    364c:	76 01       	movw	r14, r12
    364e:	0c 94 fb 10 	jmp	0x21f6	; 0x21f6 <signalIoctl+0x5c>
    3652:	cc 24       	eor	r12, r12
    3654:	dd 24       	eor	r13, r13
    3656:	76 01       	movw	r14, r12
    3658:	0c 94 fb 10 	jmp	0x21f6	; 0x21f6 <signalIoctl+0x5c>
    365c:	cc 24       	eor	r12, r12
    365e:	dd 24       	eor	r13, r13
    3660:	76 01       	movw	r14, r12
    3662:	0c 94 fb 10 	jmp	0x21f6	; 0x21f6 <signalIoctl+0x5c>
    3666:	cc 24       	eor	r12, r12
    3668:	dd 24       	eor	r13, r13
    366a:	76 01       	movw	r14, r12
    366c:	0c 94 fb 10 	jmp	0x21f6	; 0x21f6 <signalIoctl+0x5c>
    3670:	cc 24       	eor	r12, r12
    3672:	dd 24       	eor	r13, r13
    3674:	76 01       	movw	r14, r12
    3676:	0c 94 fb 10 	jmp	0x21f6	; 0x21f6 <signalIoctl+0x5c>
    367a:	cc 24       	eor	r12, r12
    367c:	dd 24       	eor	r13, r13
    367e:	76 01       	movw	r14, r12
    3680:	0c 94 fb 10 	jmp	0x21f6	; 0x21f6 <signalIoctl+0x5c>
    3684:	cc 24       	eor	r12, r12
    3686:	dd 24       	eor	r13, r13
    3688:	76 01       	movw	r14, r12
    368a:	0c 94 fb 10 	jmp	0x21f6	; 0x21f6 <signalIoctl+0x5c>
    368e:	cc 24       	eor	r12, r12
    3690:	dd 24       	eor	r13, r13
    3692:	76 01       	movw	r14, r12
    3694:	0c 94 fb 10 	jmp	0x21f6	; 0x21f6 <signalIoctl+0x5c>
    3698:	cc 24       	eor	r12, r12
    369a:	dd 24       	eor	r13, r13
    369c:	76 01       	movw	r14, r12
    369e:	0c 94 fb 10 	jmp	0x21f6	; 0x21f6 <signalIoctl+0x5c>
    36a2:	cc 24       	eor	r12, r12
    36a4:	dd 24       	eor	r13, r13
    36a6:	76 01       	movw	r14, r12
    36a8:	0c 94 fb 10 	jmp	0x21f6	; 0x21f6 <signalIoctl+0x5c>
    36ac:	cc 24       	eor	r12, r12
    36ae:	dd 24       	eor	r13, r13
    36b0:	76 01       	movw	r14, r12
    36b2:	0c 94 fb 10 	jmp	0x21f6	; 0x21f6 <signalIoctl+0x5c>
    36b6:	cc 24       	eor	r12, r12
    36b8:	dd 24       	eor	r13, r13
    36ba:	76 01       	movw	r14, r12
    36bc:	0c 94 fb 10 	jmp	0x21f6	; 0x21f6 <signalIoctl+0x5c>
    36c0:	cc 24       	eor	r12, r12
    36c2:	dd 24       	eor	r13, r13
    36c4:	76 01       	movw	r14, r12
    36c6:	0c 94 fb 10 	jmp	0x21f6	; 0x21f6 <signalIoctl+0x5c>
    36ca:	cc 24       	eor	r12, r12
    36cc:	dd 24       	eor	r13, r13
    36ce:	76 01       	movw	r14, r12
    36d0:	0c 94 fb 10 	jmp	0x21f6	; 0x21f6 <signalIoctl+0x5c>
    36d4:	cc 24       	eor	r12, r12
    36d6:	dd 24       	eor	r13, r13
    36d8:	76 01       	movw	r14, r12
    36da:	0c 94 fb 10 	jmp	0x21f6	; 0x21f6 <signalIoctl+0x5c>
    36de:	cc 24       	eor	r12, r12
    36e0:	dd 24       	eor	r13, r13
    36e2:	76 01       	movw	r14, r12
    36e4:	0c 94 fb 10 	jmp	0x21f6	; 0x21f6 <signalIoctl+0x5c>
    36e8:	cc 24       	eor	r12, r12
    36ea:	dd 24       	eor	r13, r13
    36ec:	76 01       	movw	r14, r12
    36ee:	0c 94 fb 10 	jmp	0x21f6	; 0x21f6 <signalIoctl+0x5c>
    36f2:	cc 24       	eor	r12, r12
    36f4:	dd 24       	eor	r13, r13
    36f6:	76 01       	movw	r14, r12
    36f8:	0c 94 fb 10 	jmp	0x21f6	; 0x21f6 <signalIoctl+0x5c>
    36fc:	cc 24       	eor	r12, r12
    36fe:	dd 24       	eor	r13, r13
    3700:	76 01       	movw	r14, r12
    3702:	0c 94 fb 10 	jmp	0x21f6	; 0x21f6 <signalIoctl+0x5c>
    3706:	cc 24       	eor	r12, r12
    3708:	dd 24       	eor	r13, r13
    370a:	76 01       	movw	r14, r12
    370c:	0c 94 fb 10 	jmp	0x21f6	; 0x21f6 <signalIoctl+0x5c>
    3710:	cc 24       	eor	r12, r12
    3712:	dd 24       	eor	r13, r13
    3714:	76 01       	movw	r14, r12
    3716:	0c 94 fb 10 	jmp	0x21f6	; 0x21f6 <signalIoctl+0x5c>
    371a:	cc 24       	eor	r12, r12
    371c:	dd 24       	eor	r13, r13
    371e:	76 01       	movw	r14, r12
    3720:	0c 94 fb 10 	jmp	0x21f6	; 0x21f6 <signalIoctl+0x5c>
    3724:	cc 24       	eor	r12, r12
    3726:	dd 24       	eor	r13, r13
    3728:	76 01       	movw	r14, r12
    372a:	0c 94 fb 10 	jmp	0x21f6	; 0x21f6 <signalIoctl+0x5c>
    372e:	cc 24       	eor	r12, r12
    3730:	dd 24       	eor	r13, r13
    3732:	76 01       	movw	r14, r12
    3734:	0c 94 fb 10 	jmp	0x21f6	; 0x21f6 <signalIoctl+0x5c>
    3738:	cc 24       	eor	r12, r12
    373a:	dd 24       	eor	r13, r13
    373c:	76 01       	movw	r14, r12
    373e:	0c 94 fb 10 	jmp	0x21f6	; 0x21f6 <signalIoctl+0x5c>
    3742:	cc 24       	eor	r12, r12
    3744:	dd 24       	eor	r13, r13
    3746:	76 01       	movw	r14, r12
    3748:	0c 94 fb 10 	jmp	0x21f6	; 0x21f6 <signalIoctl+0x5c>
    374c:	cc 24       	eor	r12, r12
    374e:	dd 24       	eor	r13, r13
    3750:	76 01       	movw	r14, r12
    3752:	0c 94 fb 10 	jmp	0x21f6	; 0x21f6 <signalIoctl+0x5c>
    3756:	cc 24       	eor	r12, r12
    3758:	dd 24       	eor	r13, r13
    375a:	76 01       	movw	r14, r12
    375c:	0c 94 fb 10 	jmp	0x21f6	; 0x21f6 <signalIoctl+0x5c>
    3760:	cc 24       	eor	r12, r12
    3762:	dd 24       	eor	r13, r13
    3764:	76 01       	movw	r14, r12
    3766:	0c 94 fb 10 	jmp	0x21f6	; 0x21f6 <signalIoctl+0x5c>
    376a:	cc 24       	eor	r12, r12
    376c:	dd 24       	eor	r13, r13
    376e:	76 01       	movw	r14, r12
    3770:	0c 94 fb 10 	jmp	0x21f6	; 0x21f6 <signalIoctl+0x5c>
    3774:	cc 24       	eor	r12, r12
    3776:	dd 24       	eor	r13, r13
    3778:	76 01       	movw	r14, r12
    377a:	0c 94 fb 10 	jmp	0x21f6	; 0x21f6 <signalIoctl+0x5c>
    377e:	cc 24       	eor	r12, r12
    3780:	dd 24       	eor	r13, r13
    3782:	76 01       	movw	r14, r12
    3784:	0c 94 fb 10 	jmp	0x21f6	; 0x21f6 <signalIoctl+0x5c>
    3788:	cc 24       	eor	r12, r12
    378a:	dd 24       	eor	r13, r13
    378c:	76 01       	movw	r14, r12
    378e:	0c 94 fb 10 	jmp	0x21f6	; 0x21f6 <signalIoctl+0x5c>
    3792:	cc 24       	eor	r12, r12
    3794:	dd 24       	eor	r13, r13
    3796:	76 01       	movw	r14, r12
    3798:	0c 94 fb 10 	jmp	0x21f6	; 0x21f6 <signalIoctl+0x5c>
    379c:	cc 24       	eor	r12, r12
    379e:	dd 24       	eor	r13, r13
    37a0:	76 01       	movw	r14, r12
    37a2:	0c 94 fb 10 	jmp	0x21f6	; 0x21f6 <signalIoctl+0x5c>
    37a6:	cc 24       	eor	r12, r12
    37a8:	dd 24       	eor	r13, r13
    37aa:	76 01       	movw	r14, r12
    37ac:	0c 94 fb 10 	jmp	0x21f6	; 0x21f6 <signalIoctl+0x5c>
    37b0:	cc 24       	eor	r12, r12
    37b2:	dd 24       	eor	r13, r13
    37b4:	76 01       	movw	r14, r12
    37b6:	0c 94 fb 10 	jmp	0x21f6	; 0x21f6 <signalIoctl+0x5c>
    37ba:	cc 24       	eor	r12, r12
    37bc:	dd 24       	eor	r13, r13
    37be:	76 01       	movw	r14, r12
    37c0:	0c 94 fb 10 	jmp	0x21f6	; 0x21f6 <signalIoctl+0x5c>
    37c4:	cc 24       	eor	r12, r12
    37c6:	dd 24       	eor	r13, r13
    37c8:	76 01       	movw	r14, r12
    37ca:	0c 94 fb 10 	jmp	0x21f6	; 0x21f6 <signalIoctl+0x5c>
    37ce:	cc 24       	eor	r12, r12
    37d0:	dd 24       	eor	r13, r13
    37d2:	76 01       	movw	r14, r12
    37d4:	0c 94 fb 10 	jmp	0x21f6	; 0x21f6 <signalIoctl+0x5c>
    37d8:	cc 24       	eor	r12, r12
    37da:	dd 24       	eor	r13, r13
    37dc:	76 01       	movw	r14, r12
    37de:	0c 94 fb 10 	jmp	0x21f6	; 0x21f6 <signalIoctl+0x5c>
    37e2:	cc 24       	eor	r12, r12
    37e4:	dd 24       	eor	r13, r13
    37e6:	76 01       	movw	r14, r12
    37e8:	0c 94 fb 10 	jmp	0x21f6	; 0x21f6 <signalIoctl+0x5c>
    37ec:	cc 24       	eor	r12, r12
    37ee:	dd 24       	eor	r13, r13
    37f0:	76 01       	movw	r14, r12
    37f2:	0c 94 fb 10 	jmp	0x21f6	; 0x21f6 <signalIoctl+0x5c>
    37f6:	cc 24       	eor	r12, r12
    37f8:	dd 24       	eor	r13, r13
    37fa:	76 01       	movw	r14, r12
    37fc:	0c 94 fb 10 	jmp	0x21f6	; 0x21f6 <signalIoctl+0x5c>
    3800:	cc 24       	eor	r12, r12
    3802:	dd 24       	eor	r13, r13
    3804:	76 01       	movw	r14, r12
    3806:	0c 94 fb 10 	jmp	0x21f6	; 0x21f6 <signalIoctl+0x5c>
    380a:	cc 24       	eor	r12, r12
    380c:	dd 24       	eor	r13, r13
    380e:	76 01       	movw	r14, r12
    3810:	0c 94 fb 10 	jmp	0x21f6	; 0x21f6 <signalIoctl+0x5c>
    3814:	cc 24       	eor	r12, r12
    3816:	dd 24       	eor	r13, r13
    3818:	76 01       	movw	r14, r12
    381a:	0c 94 fb 10 	jmp	0x21f6	; 0x21f6 <signalIoctl+0x5c>
    381e:	cc 24       	eor	r12, r12
    3820:	dd 24       	eor	r13, r13
    3822:	76 01       	movw	r14, r12
    3824:	0c 94 fb 10 	jmp	0x21f6	; 0x21f6 <signalIoctl+0x5c>
    3828:	cc 24       	eor	r12, r12
    382a:	dd 24       	eor	r13, r13
    382c:	76 01       	movw	r14, r12
    382e:	0c 94 fb 10 	jmp	0x21f6	; 0x21f6 <signalIoctl+0x5c>
    3832:	cc 24       	eor	r12, r12
    3834:	dd 24       	eor	r13, r13
    3836:	76 01       	movw	r14, r12
    3838:	0c 94 fb 10 	jmp	0x21f6	; 0x21f6 <signalIoctl+0x5c>
    383c:	cc 24       	eor	r12, r12
    383e:	dd 24       	eor	r13, r13
    3840:	76 01       	movw	r14, r12
    3842:	0c 94 fb 10 	jmp	0x21f6	; 0x21f6 <signalIoctl+0x5c>
    3846:	cc 24       	eor	r12, r12
    3848:	dd 24       	eor	r13, r13
    384a:	76 01       	movw	r14, r12
    384c:	0c 94 fb 10 	jmp	0x21f6	; 0x21f6 <signalIoctl+0x5c>
    3850:	cc 24       	eor	r12, r12
    3852:	dd 24       	eor	r13, r13
    3854:	76 01       	movw	r14, r12
    3856:	0c 94 fb 10 	jmp	0x21f6	; 0x21f6 <signalIoctl+0x5c>
    385a:	cc 24       	eor	r12, r12
    385c:	dd 24       	eor	r13, r13
    385e:	76 01       	movw	r14, r12
    3860:	0c 94 fb 10 	jmp	0x21f6	; 0x21f6 <signalIoctl+0x5c>
    3864:	cc 24       	eor	r12, r12
    3866:	dd 24       	eor	r13, r13
    3868:	76 01       	movw	r14, r12
    386a:	0c 94 fb 10 	jmp	0x21f6	; 0x21f6 <signalIoctl+0x5c>
    386e:	cc 24       	eor	r12, r12
    3870:	dd 24       	eor	r13, r13
    3872:	76 01       	movw	r14, r12
    3874:	0c 94 fb 10 	jmp	0x21f6	; 0x21f6 <signalIoctl+0x5c>
    3878:	cc 24       	eor	r12, r12
    387a:	dd 24       	eor	r13, r13
    387c:	76 01       	movw	r14, r12
    387e:	0c 94 fb 10 	jmp	0x21f6	; 0x21f6 <signalIoctl+0x5c>
    3882:	cc 24       	eor	r12, r12
    3884:	dd 24       	eor	r13, r13
    3886:	76 01       	movw	r14, r12
    3888:	0c 94 fb 10 	jmp	0x21f6	; 0x21f6 <signalIoctl+0x5c>
    388c:	cc 24       	eor	r12, r12
    388e:	dd 24       	eor	r13, r13
    3890:	76 01       	movw	r14, r12
    3892:	0c 94 fb 10 	jmp	0x21f6	; 0x21f6 <signalIoctl+0x5c>
    3896:	cc 24       	eor	r12, r12
    3898:	dd 24       	eor	r13, r13
    389a:	76 01       	movw	r14, r12
    389c:	0c 94 fb 10 	jmp	0x21f6	; 0x21f6 <signalIoctl+0x5c>
    38a0:	cc 24       	eor	r12, r12
    38a2:	dd 24       	eor	r13, r13
    38a4:	76 01       	movw	r14, r12
    38a6:	0c 94 fb 10 	jmp	0x21f6	; 0x21f6 <signalIoctl+0x5c>
    38aa:	cc 24       	eor	r12, r12
    38ac:	dd 24       	eor	r13, r13
    38ae:	76 01       	movw	r14, r12
    38b0:	0c 94 fb 10 	jmp	0x21f6	; 0x21f6 <signalIoctl+0x5c>
    38b4:	cc 24       	eor	r12, r12
    38b6:	dd 24       	eor	r13, r13
    38b8:	76 01       	movw	r14, r12
    38ba:	0c 94 fb 10 	jmp	0x21f6	; 0x21f6 <signalIoctl+0x5c>
    38be:	cc 24       	eor	r12, r12
    38c0:	dd 24       	eor	r13, r13
    38c2:	76 01       	movw	r14, r12
    38c4:	0c 94 fb 10 	jmp	0x21f6	; 0x21f6 <signalIoctl+0x5c>
    38c8:	cc 24       	eor	r12, r12
    38ca:	dd 24       	eor	r13, r13
    38cc:	76 01       	movw	r14, r12
    38ce:	0c 94 fb 10 	jmp	0x21f6	; 0x21f6 <signalIoctl+0x5c>
    38d2:	cc 24       	eor	r12, r12
    38d4:	dd 24       	eor	r13, r13
    38d6:	76 01       	movw	r14, r12
    38d8:	0c 94 fb 10 	jmp	0x21f6	; 0x21f6 <signalIoctl+0x5c>

000038dc <signalOpen>:

/*---------------------------------------------------------------------------*
 * Private Function Definitions
 *---------------------------------------------------------------------------*/
t_error signalOpen( t_DEVHANDLE t_devHandle)
{
    38dc:	cf 93       	push	r28
    38de:	df 93       	push	r29
    38e0:	0f 92       	push	r0
    38e2:	0f 92       	push	r0
    38e4:	cd b7       	in	r28, 0x3d	; 61
    38e6:	de b7       	in	r29, 0x3e	; 62
    38e8:	89 83       	std	Y+1, r24	; 0x01
    38ea:	9a 83       	std	Y+2, r25	; 0x02

   /*------------------------------------------------------------------------*
    * We are going to access global memory or a register, so perform lock
    *------------------------------------------------------------------------*/
   arb_wait( gt_signalDev.t_mutex,
    38ec:	80 91 90 24 	lds	r24, 0x2490
    38f0:	90 91 91 24 	lds	r25, 0x2491
    38f4:	60 e0       	ldi	r22, 0x00	; 0
    38f6:	0e 94 69 7e 	call	0xfcd2	; 0xfcd2 <arb_wait>
             0);

   gt_signalDev.c_numUsers++;
    38fa:	80 91 97 24 	lds	r24, 0x2497
    38fe:	8f 5f       	subi	r24, 0xFF	; 255
    3900:	80 93 97 24 	sts	0x2497, r24

   /*------------------------------------------------------------------------*
    * Release the lock
    *------------------------------------------------------------------------*/
   arb_signal( gt_signalDev.t_mutex);
    3904:	80 91 90 24 	lds	r24, 0x2490
    3908:	90 91 91 24 	lds	r25, 0x2491
    390c:	0e 94 22 7b 	call	0xf644	; 0xf644 <arb_signal>

   return ARB_PASSED;

}/*End signalOpen*/
    3910:	80 e0       	ldi	r24, 0x00	; 0
    3912:	0f 90       	pop	r0
    3914:	0f 90       	pop	r0
    3916:	df 91       	pop	r29
    3918:	cf 91       	pop	r28
    391a:	08 95       	ret

0000391c <drv_signalInit>:
   return ARB_PASSED;

}/*End signalClose*/

t_error drv_signalInit( t_signalSetup t_setup)
{
    391c:	0f 93       	push	r16
    391e:	1f 93       	push	r17
    3920:	cf 93       	push	r28
    3922:	df 93       	push	r29
    3924:	cd b7       	in	r28, 0x3d	; 61
    3926:	de b7       	in	r29, 0x3e	; 62
    3928:	2a 97       	sbiw	r28, 0x0a	; 10
    392a:	cd bf       	out	0x3d, r28	; 61
    392c:	de bf       	out	0x3e, r29	; 62
    392e:	14 2f       	mov	r17, r20
    3930:	4e 83       	std	Y+6, r20	; 0x06
    3932:	5f 83       	std	Y+7, r21	; 0x07
    3934:	68 87       	std	Y+8, r22	; 0x08
    3936:	79 87       	std	Y+9, r23	; 0x09
    3938:	8a 87       	std	Y+10, r24	; 0x0a
    393a:	78 2f       	mov	r23, r24
   int8_t c_index;

   /*------------------------------------------------------------------------*
    * Make sure the kernel is aware that a new device has been loaded.
    *------------------------------------------------------------------------*/
   t_err = arb_registerDevice( "signalDevice0",
    393c:	88 e5       	ldi	r24, 0x58	; 88
    393e:	90 e2       	ldi	r25, 0x20	; 32
    3940:	60 e0       	ldi	r22, 0x00	; 0
    3942:	46 e6       	ldi	r20, 0x66	; 102
    3944:	50 e2       	ldi	r21, 0x20	; 32
    3946:	0e 94 2a 6f 	call	0xde54	; 0xde54 <arb_registerDevice>
    394a:	08 2f       	mov	r16, r24
                               arb_createDevId( t_setup.c_majorNum,
                               0),
                               &gat_signalDevOps);

   if( t_err < 0)
    394c:	87 fd       	sbrc	r24, 7
    394e:	40 c0       	rjmp	.+128    	; 0x39d0 <drv_signalInit+0xb4>

   /*------------------------------------------------------------------------*
    * Request a semaphore from the kernel. Since the signal port is a shared
    * resource we need to have all actions on it be mutually exclusive.
    *------------------------------------------------------------------------*/
   gt_signalDev.t_mutex = arb_semaphoreCreate( MUTEX);
    3950:	82 e0       	ldi	r24, 0x02	; 2
    3952:	0e 94 07 79 	call	0xf20e	; 0xf20e <arb_semaphoreCreate>
    3956:	80 93 90 24 	sts	0x2490, r24
    395a:	90 93 91 24 	sts	0x2491, r25

   if( gt_signalDev.t_mutex < 0)
    395e:	20 91 90 24 	lds	r18, 0x2490
    3962:	30 91 91 24 	lds	r19, 0x2491
    3966:	37 fd       	sbrc	r19, 7
    3968:	3c c0       	rjmp	.+120    	; 0x39e2 <drv_signalInit+0xc6>
   }/*End if( gt_signalDev.t_mutex < 0)*/

   /*------------------------------------------------------------------------*
    * We dont have any users attached to this device
    *------------------------------------------------------------------------*/
   gt_signalDev.c_numUsers = 0;
    396a:	10 92 97 24 	sts	0x2497, r1

   /*------------------------------------------------------------------------*
    * Configure the pins that control the led's...
    *------------------------------------------------------------------------*/
   gt_signalDev.c_signalPort = t_setup.c_signalPort;
    396e:	10 93 92 24 	sts	0x2492, r17
   gt_signalDev.c_allLedMask = 0;

   for( c_index = 0; c_index < SIGNAL_MAX_LEDS; c_index++)
   {
      gt_signalDev.ac_ledPins[c_index] =
      t_setup.ac_ledPins[c_index];
    3972:	3f 81       	ldd	r19, Y+7	; 0x07
   gt_signalDev.c_signalPort = t_setup.c_signalPort;
   gt_signalDev.c_allLedMask = 0;

   for( c_index = 0; c_index < SIGNAL_MAX_LEDS; c_index++)
   {
      gt_signalDev.ac_ledPins[c_index] =
    3974:	30 93 93 24 	sts	0x2493, r19
      t_setup.ac_ledPins[c_index];
    3978:	88 85       	ldd	r24, Y+8	; 0x08
   gt_signalDev.c_signalPort = t_setup.c_signalPort;
   gt_signalDev.c_allLedMask = 0;

   for( c_index = 0; c_index < SIGNAL_MAX_LEDS; c_index++)
   {
      gt_signalDev.ac_ledPins[c_index] =
    397a:	80 93 94 24 	sts	0x2494, r24
      t_setup.ac_ledPins[c_index];
      gt_signalDev.c_allLedMask |= t_setup.ac_ledPins[c_index];
    397e:	38 2b       	or	r19, r24
   gt_signalDev.c_allLedMask = 0;

   for( c_index = 0; c_index < SIGNAL_MAX_LEDS; c_index++)
   {
      gt_signalDev.ac_ledPins[c_index] =
      t_setup.ac_ledPins[c_index];
    3980:	89 85       	ldd	r24, Y+9	; 0x09
   gt_signalDev.c_signalPort = t_setup.c_signalPort;
   gt_signalDev.c_allLedMask = 0;

   for( c_index = 0; c_index < SIGNAL_MAX_LEDS; c_index++)
   {
      gt_signalDev.ac_ledPins[c_index] =
    3982:	80 93 95 24 	sts	0x2495, r24
      t_setup.ac_ledPins[c_index];
      gt_signalDev.c_allLedMask |= t_setup.ac_ledPins[c_index];
    3986:	38 2b       	or	r19, r24
    3988:	30 93 96 24 	sts	0x2496, r19
   }

   t_conf.c_inputMask    = 0;
    398c:	19 82       	std	Y+1, r1	; 0x01
   t_conf.c_outputMask   = gt_signalDev.c_allLedMask;
    398e:	3a 83       	std	Y+2, r19	; 0x02
   t_conf.b_setOutputLow = false;
    3990:	1b 82       	std	Y+3, r1	; 0x03
   t_conf.t_outConf      = TOTEM;
    3992:	1d 82       	std	Y+5, r1	; 0x05

   if( hal_configureGpioPort( t_setup.c_signalPort, t_conf) < 0)
    3994:	81 2f       	mov	r24, r17
    3996:	20 e0       	ldi	r18, 0x00	; 0
    3998:	40 e0       	ldi	r20, 0x00	; 0
    399a:	5c 81       	ldd	r21, Y+4	; 0x04
    399c:	60 e0       	ldi	r22, 0x00	; 0
    399e:	0e 94 91 2a 	call	0x5522	; 0x5522 <hal_configureGpioPort>
    39a2:	87 fd       	sbrc	r24, 7
    39a4:	3b c0       	rjmp	.+118    	; 0x3a1c <drv_signalInit+0x100>
   }

   /*------------------------------------------------------------------------*
    * Make sure the LED's are off - logic high is off...
    *------------------------------------------------------------------------*/
   hal_gpioOn( gt_signalDev.c_signalPort,
    39a6:	80 91 96 24 	lds	r24, 0x2496
   static inline t_gpioError __attribute__ ( (always_inline)) hal_gpioOn(
   t_gpioPort t_port, uint8_t    c_pin)
   {
      t_gpioError t_err = GPIO_PASSED;

      switch( t_port)
    39aa:	90 91 92 24 	lds	r25, 0x2492
    39ae:	95 30       	cpi	r25, 0x05	; 5
    39b0:	09 f4       	brne	.+2      	; 0x39b4 <drv_signalInit+0x98>
    39b2:	9e c0       	rjmp	.+316    	; 0x3af0 <drv_signalInit+0x1d4>
    39b4:	96 30       	cpi	r25, 0x06	; 6
    39b6:	f8 f0       	brcs	.+62     	; 0x39f6 <drv_signalInit+0xda>
    39b8:	98 30       	cpi	r25, 0x08	; 8
    39ba:	09 f4       	brne	.+2      	; 0x39be <drv_signalInit+0xa2>
    39bc:	7b c0       	rjmp	.+246    	; 0x3ab4 <drv_signalInit+0x198>
    39be:	99 30       	cpi	r25, 0x09	; 9
    39c0:	a8 f1       	brcs	.+106    	; 0x3a2c <drv_signalInit+0x110>
    39c2:	99 30       	cpi	r25, 0x09	; 9
    39c4:	09 f4       	brne	.+2      	; 0x39c8 <drv_signalInit+0xac>
    39c6:	80 c0       	rjmp	.+256    	; 0x3ac8 <drv_signalInit+0x1ac>
    39c8:	9a 30       	cpi	r25, 0x0A	; 10
    39ca:	09 f4       	brne	.+2      	; 0x39ce <drv_signalInit+0xb2>
    39cc:	4b c0       	rjmp	.+150    	; 0x3a64 <drv_signalInit+0x148>
               gt_signalDev.c_allLedMask);

   return ARB_PASSED;
    39ce:	00 e0       	ldi	r16, 0x00	; 0

failed1:

   return t_err;

}/*End drv_signalInit*/
    39d0:	80 2f       	mov	r24, r16
    39d2:	2a 96       	adiw	r28, 0x0a	; 10
    39d4:	cd bf       	out	0x3d, r28	; 61
    39d6:	de bf       	out	0x3e, r29	; 62
    39d8:	df 91       	pop	r29
    39da:	cf 91       	pop	r28
    39dc:	1f 91       	pop	r17
    39de:	0f 91       	pop	r16
    39e0:	08 95       	ret
    *------------------------------------------------------------------------*/
   gt_signalDev.t_mutex = arb_semaphoreCreate( MUTEX);

   if( gt_signalDev.t_mutex < 0)
   {
      t_err = (t_error)gt_signalDev.t_mutex;
    39e2:	80 91 90 24 	lds	r24, 0x2490
    39e6:	90 91 91 24 	lds	r25, 0x2491
    39ea:	08 2f       	mov	r16, r24

   arb_semaphoreDestroy( gt_signalDev.t_mutex);

failed2:

   arb_destroyDevice( "signalDevice0");
    39ec:	88 e5       	ldi	r24, 0x58	; 88
    39ee:	90 e2       	ldi	r25, 0x20	; 32
    39f0:	0e 94 b1 6e 	call	0xdd62	; 0xdd62 <arb_destroyDevice>
    39f4:	ed cf       	rjmp	.-38     	; 0x39d0 <drv_signalInit+0xb4>
    39f6:	92 30       	cpi	r25, 0x02	; 2
    39f8:	09 f4       	brne	.+2      	; 0x39fc <drv_signalInit+0xe0>
    39fa:	70 c0       	rjmp	.+224    	; 0x3adc <drv_signalInit+0x1c0>
    39fc:	93 30       	cpi	r25, 0x03	; 3
    39fe:	18 f1       	brcs	.+70     	; 0x3a46 <drv_signalInit+0x12a>
    3a00:	93 30       	cpi	r25, 0x03	; 3
    3a02:	09 f4       	brne	.+2      	; 0x3a06 <drv_signalInit+0xea>
    3a04:	4d c0       	rjmp	.+154    	; 0x3aa0 <drv_signalInit+0x184>
    3a06:	94 30       	cpi	r25, 0x04	; 4
    3a08:	11 f7       	brne	.-60     	; 0x39ce <drv_signalInit+0xb2>
         case GPIO_PORTE:

            /*---------------------------------------------------------------*
             * Make sure the requested pin is configured as an output
             *---------------------------------------------------------------*/
            if( !(PORTE.DIR & c_pin))
    3a0a:	90 91 80 06 	lds	r25, 0x0680
    3a0e:	98 23       	and	r25, r24
    3a10:	f1 f2       	breq	.-68     	; 0x39ce <drv_signalInit+0xb2>
               t_err = GPIO_PIN_IS_INPUT;
            else
               PORTE.OUTSET = c_pin;
    3a12:	e0 e8       	ldi	r30, 0x80	; 128
    3a14:	f6 e0       	ldi	r31, 0x06	; 6
    3a16:	85 83       	std	Z+5, r24	; 0x05
    * Make sure the LED's are off - logic high is off...
    *------------------------------------------------------------------------*/
   hal_gpioOn( gt_signalDev.c_signalPort,
               gt_signalDev.c_allLedMask);

   return ARB_PASSED;
    3a18:	00 e0       	ldi	r16, 0x00	; 0
    3a1a:	da cf       	rjmp	.-76     	; 0x39d0 <drv_signalInit+0xb4>

failed3:

   arb_semaphoreDestroy( gt_signalDev.t_mutex);
    3a1c:	80 91 90 24 	lds	r24, 0x2490
    3a20:	90 91 91 24 	lds	r25, 0x2491
    3a24:	0e 94 90 78 	call	0xf120	; 0xf120 <arb_semaphoreDestroy>
   t_conf.b_setOutputLow = false;
   t_conf.t_outConf      = TOTEM;

   if( hal_configureGpioPort( t_setup.c_signalPort, t_conf) < 0)
   {
      t_err = ARB_HAL_ERROR;
    3a28:	06 ef       	ldi	r16, 0xF6	; 246
    3a2a:	e0 cf       	rjmp	.-64     	; 0x39ec <drv_signalInit+0xd0>
   static inline t_gpioError __attribute__ ( (always_inline)) hal_gpioOn(
   t_gpioPort t_port, uint8_t    c_pin)
   {
      t_gpioError t_err = GPIO_PASSED;

      switch( t_port)
    3a2c:	96 30       	cpi	r25, 0x06	; 6
    3a2e:	71 f1       	breq	.+92     	; 0x3a8c <drv_signalInit+0x170>
    3a30:	97 30       	cpi	r25, 0x07	; 7
    3a32:	69 f6       	brne	.-102    	; 0x39ce <drv_signalInit+0xb2>
         case GPIO_PORTJ:

            /*---------------------------------------------------------------*
             * Make sure the requested pin is configured as an output
             *---------------------------------------------------------------*/
            if( !(PORTJ.DIR & c_pin))
    3a34:	90 91 00 07 	lds	r25, 0x0700
    3a38:	98 23       	and	r25, r24
    3a3a:	49 f2       	breq	.-110    	; 0x39ce <drv_signalInit+0xb2>
               t_err = GPIO_PIN_IS_INPUT;
            else
               PORTJ.OUTSET = c_pin;
    3a3c:	e0 e0       	ldi	r30, 0x00	; 0
    3a3e:	f7 e0       	ldi	r31, 0x07	; 7
    3a40:	85 83       	std	Z+5, r24	; 0x05
    * Make sure the LED's are off - logic high is off...
    *------------------------------------------------------------------------*/
   hal_gpioOn( gt_signalDev.c_signalPort,
               gt_signalDev.c_allLedMask);

   return ARB_PASSED;
    3a42:	00 e0       	ldi	r16, 0x00	; 0
    3a44:	c5 cf       	rjmp	.-118    	; 0x39d0 <drv_signalInit+0xb4>
   static inline t_gpioError __attribute__ ( (always_inline)) hal_gpioOn(
   t_gpioPort t_port, uint8_t    c_pin)
   {
      t_gpioError t_err = GPIO_PASSED;

      switch( t_port)
    3a46:	99 23       	and	r25, r25
    3a48:	b9 f0       	breq	.+46     	; 0x3a78 <drv_signalInit+0x15c>
    3a4a:	91 30       	cpi	r25, 0x01	; 1
    3a4c:	09 f0       	breq	.+2      	; 0x3a50 <drv_signalInit+0x134>
    3a4e:	bf cf       	rjmp	.-130    	; 0x39ce <drv_signalInit+0xb2>
         case GPIO_PORTB:

            /*---------------------------------------------------------------*
             * Make sure the requested pin is configured as an output
             *---------------------------------------------------------------*/
            if( !(PORTB.DIR & c_pin))
    3a50:	90 91 20 06 	lds	r25, 0x0620
    3a54:	98 23       	and	r25, r24
    3a56:	09 f4       	brne	.+2      	; 0x3a5a <drv_signalInit+0x13e>
    3a58:	ba cf       	rjmp	.-140    	; 0x39ce <drv_signalInit+0xb2>
               t_err = GPIO_PIN_IS_INPUT;
            else
               PORTB.OUTSET = c_pin;
    3a5a:	e0 e2       	ldi	r30, 0x20	; 32
    3a5c:	f6 e0       	ldi	r31, 0x06	; 6
    3a5e:	85 83       	std	Z+5, r24	; 0x05
    3a60:	00 e0       	ldi	r16, 0x00	; 0
    3a62:	b6 cf       	rjmp	.-148    	; 0x39d0 <drv_signalInit+0xb4>
         case GPIO_PORTR:

            /*---------------------------------------------------------------*
             * Make sure the requested pin is configured as an output
             *---------------------------------------------------------------*/
            if( !(PORTR.DIR & c_pin))
    3a64:	90 91 e0 07 	lds	r25, 0x07E0
    3a68:	98 23       	and	r25, r24
    3a6a:	09 f4       	brne	.+2      	; 0x3a6e <drv_signalInit+0x152>
    3a6c:	b0 cf       	rjmp	.-160    	; 0x39ce <drv_signalInit+0xb2>
               t_err = GPIO_PIN_IS_INPUT;
            else
               PORTR.OUTSET = c_pin;
    3a6e:	e0 ee       	ldi	r30, 0xE0	; 224
    3a70:	f7 e0       	ldi	r31, 0x07	; 7
    3a72:	85 83       	std	Z+5, r24	; 0x05
    3a74:	00 e0       	ldi	r16, 0x00	; 0
    3a76:	ac cf       	rjmp	.-168    	; 0x39d0 <drv_signalInit+0xb4>
         case GPIO_PORTA:

            /*---------------------------------------------------------------*
             * Make sure the requested pin is configured as an output
             *---------------------------------------------------------------*/
            if( !(PORTA.DIR & c_pin))
    3a78:	90 91 00 06 	lds	r25, 0x0600
    3a7c:	98 23       	and	r25, r24
    3a7e:	09 f4       	brne	.+2      	; 0x3a82 <drv_signalInit+0x166>
    3a80:	a6 cf       	rjmp	.-180    	; 0x39ce <drv_signalInit+0xb2>
               t_err = GPIO_PIN_IS_INPUT;
            else
               PORTA.OUTSET = c_pin;
    3a82:	e0 e0       	ldi	r30, 0x00	; 0
    3a84:	f6 e0       	ldi	r31, 0x06	; 6
    3a86:	85 83       	std	Z+5, r24	; 0x05
    3a88:	00 e0       	ldi	r16, 0x00	; 0
    3a8a:	a2 cf       	rjmp	.-188    	; 0x39d0 <drv_signalInit+0xb4>
         case GPIO_PORTH:

            /*---------------------------------------------------------------*
             * Make sure the requested pin is configured as an output
             *---------------------------------------------------------------*/
            if( !(PORTH.DIR & c_pin))
    3a8c:	90 91 e0 06 	lds	r25, 0x06E0
    3a90:	98 23       	and	r25, r24
    3a92:	09 f4       	brne	.+2      	; 0x3a96 <drv_signalInit+0x17a>
    3a94:	9c cf       	rjmp	.-200    	; 0x39ce <drv_signalInit+0xb2>
               t_err = GPIO_PIN_IS_INPUT;
            else
               PORTH.OUTSET = c_pin;
    3a96:	e0 ee       	ldi	r30, 0xE0	; 224
    3a98:	f6 e0       	ldi	r31, 0x06	; 6
    3a9a:	85 83       	std	Z+5, r24	; 0x05
    3a9c:	00 e0       	ldi	r16, 0x00	; 0
    3a9e:	98 cf       	rjmp	.-208    	; 0x39d0 <drv_signalInit+0xb4>
         case GPIO_PORTD:

            /*---------------------------------------------------------------*
             * Make sure the requested pin is configured as an output
             *---------------------------------------------------------------*/
            if( !(PORTD.DIR & c_pin))
    3aa0:	90 91 60 06 	lds	r25, 0x0660
    3aa4:	98 23       	and	r25, r24
    3aa6:	09 f4       	brne	.+2      	; 0x3aaa <drv_signalInit+0x18e>
    3aa8:	92 cf       	rjmp	.-220    	; 0x39ce <drv_signalInit+0xb2>
               t_err = GPIO_PIN_IS_INPUT;
            else
               PORTD.OUTSET = c_pin;
    3aaa:	e0 e6       	ldi	r30, 0x60	; 96
    3aac:	f6 e0       	ldi	r31, 0x06	; 6
    3aae:	85 83       	std	Z+5, r24	; 0x05
    3ab0:	00 e0       	ldi	r16, 0x00	; 0
    3ab2:	8e cf       	rjmp	.-228    	; 0x39d0 <drv_signalInit+0xb4>
         case GPIO_PORTK:

            /*---------------------------------------------------------------*
             * Make sure the requested pin is configured as an output
             *---------------------------------------------------------------*/
            if( !(PORTK.DIR & c_pin))
    3ab4:	90 91 20 07 	lds	r25, 0x0720
    3ab8:	98 23       	and	r25, r24
    3aba:	09 f4       	brne	.+2      	; 0x3abe <drv_signalInit+0x1a2>
    3abc:	88 cf       	rjmp	.-240    	; 0x39ce <drv_signalInit+0xb2>
               t_err = GPIO_PIN_IS_INPUT;
            else
               PORTK.OUTSET = c_pin;
    3abe:	e0 e2       	ldi	r30, 0x20	; 32
    3ac0:	f7 e0       	ldi	r31, 0x07	; 7
    3ac2:	85 83       	std	Z+5, r24	; 0x05
    3ac4:	00 e0       	ldi	r16, 0x00	; 0
    3ac6:	84 cf       	rjmp	.-248    	; 0x39d0 <drv_signalInit+0xb4>
         case GPIO_PORTQ:

            /*---------------------------------------------------------------*
             * Make sure the requested pin is configured as an output
             *---------------------------------------------------------------*/
            if( !(PORTQ.DIR & c_pin))
    3ac8:	90 91 c0 07 	lds	r25, 0x07C0
    3acc:	98 23       	and	r25, r24
    3ace:	09 f4       	brne	.+2      	; 0x3ad2 <drv_signalInit+0x1b6>
    3ad0:	7e cf       	rjmp	.-260    	; 0x39ce <drv_signalInit+0xb2>
               t_err = GPIO_PIN_IS_INPUT;
            else
               PORTQ.OUTSET = c_pin;
    3ad2:	e0 ec       	ldi	r30, 0xC0	; 192
    3ad4:	f7 e0       	ldi	r31, 0x07	; 7
    3ad6:	85 83       	std	Z+5, r24	; 0x05
    3ad8:	00 e0       	ldi	r16, 0x00	; 0
    3ada:	7a cf       	rjmp	.-268    	; 0x39d0 <drv_signalInit+0xb4>
         case GPIO_PORTC:

            /*---------------------------------------------------------------*
             * Make sure the requested pin is configured as an output
             *---------------------------------------------------------------*/
            if( !(PORTC.DIR & c_pin))
    3adc:	90 91 40 06 	lds	r25, 0x0640
    3ae0:	98 23       	and	r25, r24
    3ae2:	09 f4       	brne	.+2      	; 0x3ae6 <drv_signalInit+0x1ca>
    3ae4:	74 cf       	rjmp	.-280    	; 0x39ce <drv_signalInit+0xb2>
               t_err = GPIO_PIN_IS_INPUT;
            else
               PORTC.OUTSET = c_pin;
    3ae6:	e0 e4       	ldi	r30, 0x40	; 64
    3ae8:	f6 e0       	ldi	r31, 0x06	; 6
    3aea:	85 83       	std	Z+5, r24	; 0x05
    3aec:	00 e0       	ldi	r16, 0x00	; 0
    3aee:	70 cf       	rjmp	.-288    	; 0x39d0 <drv_signalInit+0xb4>
         case GPIO_PORTF:

            /*---------------------------------------------------------------*
             * Make sure the requested pin is configured as an output
             *---------------------------------------------------------------*/
            if( !(PORTF.DIR & c_pin))
    3af0:	90 91 a0 06 	lds	r25, 0x06A0
    3af4:	98 23       	and	r25, r24
    3af6:	09 f4       	brne	.+2      	; 0x3afa <drv_signalInit+0x1de>
    3af8:	6a cf       	rjmp	.-300    	; 0x39ce <drv_signalInit+0xb2>
               t_err = GPIO_PIN_IS_INPUT;
            else
               PORTF.OUTSET = c_pin;
    3afa:	e0 ea       	ldi	r30, 0xA0	; 160
    3afc:	f6 e0       	ldi	r31, 0x06	; 6
    3afe:	85 83       	std	Z+5, r24	; 0x05
    3b00:	00 e0       	ldi	r16, 0x00	; 0
    3b02:	66 cf       	rjmp	.-308    	; 0x39d0 <drv_signalInit+0xb4>

00003b04 <drv_signalExit>:
 * Remove the device from the system
 *---------------------------------------------------------------------------*/
void drv_signalExit( void)
{

   if( gt_signalDev.t_mutex != 0) /*If created... destroy*/
    3b04:	80 91 90 24 	lds	r24, 0x2490
    3b08:	90 91 91 24 	lds	r25, 0x2491
    3b0c:	00 97       	sbiw	r24, 0x00	; 0
    3b0e:	09 f4       	brne	.+2      	; 0x3b12 <drv_signalExit+0xe>
    3b10:	08 95       	ret
   {
      arb_semaphoreDestroy( gt_signalDev.t_mutex);
    3b12:	80 91 90 24 	lds	r24, 0x2490
    3b16:	90 91 91 24 	lds	r25, 0x2491
    3b1a:	0e 94 90 78 	call	0xf120	; 0xf120 <arb_semaphoreDestroy>
      arb_destroyDevice( "signalDevice0");
    3b1e:	88 e5       	ldi	r24, 0x58	; 88
    3b20:	90 e2       	ldi	r25, 0x20	; 32
    3b22:	0e 94 b1 6e 	call	0xdd62	; 0xdd62 <arb_destroyDevice>
    3b26:	08 95       	ret

00003b28 <usr_appInit>:

/*---------------------------------------------------------------------------*
 * Public Function Definitions
 *---------------------------------------------------------------------------*/
void usr_appInit( void)
{
    3b28:	0f 93       	push	r16
    3b2a:	1f 93       	push	r17
    3b2c:	cf 93       	push	r28
    3b2e:	df 93       	push	r29
    3b30:	cd b7       	in	r28, 0x3d	; 61
    3b32:	de b7       	in	r29, 0x3e	; 62
    3b34:	2b 97       	sbiw	r28, 0x0b	; 11
    3b36:	cd bf       	out	0x3d, r28	; 61
    3b38:	de bf       	out	0x3e, r29	; 62
    *------------------------------------------------------------------------*/

   /*------------------------------------------------------------------------*
    * Register the console driver with the kernel.
    *------------------------------------------------------------------------*/
   t_conSetup.c_uartId   = UART_1;
    3b3a:	1a 86       	std	Y+10, r1	; 0x0a
   t_conSetup.i_baudRate = 115200;
    3b3c:	80 e0       	ldi	r24, 0x00	; 0
    3b3e:	92 ec       	ldi	r25, 0xC2	; 194
    3b40:	a1 e0       	ldi	r26, 0x01	; 1
    3b42:	b0 e0       	ldi	r27, 0x00	; 0
    3b44:	48 2f       	mov	r20, r24
    3b46:	8e 83       	std	Y+6, r24	; 0x06
    3b48:	9f 83       	std	Y+7, r25	; 0x07
    3b4a:	a8 87       	std	Y+8, r26	; 0x08
    3b4c:	b9 87       	std	Y+9, r27	; 0x09
   t_conSetup.c_majorNum = 1;
    3b4e:	11 e0       	ldi	r17, 0x01	; 1
    3b50:	1b 87       	std	Y+11, r17	; 0x0b

   if( drv_consoleInit( t_conSetup) < 0)
    3b52:	5f 81       	ldd	r21, Y+7	; 0x07
    3b54:	68 85       	ldd	r22, Y+8	; 0x08
    3b56:	79 85       	ldd	r23, Y+9	; 0x09
    3b58:	80 e0       	ldi	r24, 0x00	; 0
    3b5a:	91 e0       	ldi	r25, 0x01	; 1
    3b5c:	0e 94 6f 0c 	call	0x18de	; 0x18de <drv_consoleInit>
    3b60:	87 fd       	sbrc	r24, 7
    3b62:	41 c0       	rjmp	.+130    	; 0x3be6 <usr_appInit+0xbe>
      exit(0);

   /*------------------------------------------------------------------------*
    * Register the LED signaling driver with the kernel.
    *------------------------------------------------------------------------*/
   t_sigSetup.c_signalPort  = GPIO_PORTK;
    3b64:	88 e0       	ldi	r24, 0x08	; 8
    3b66:	89 83       	std	Y+1, r24	; 0x01
   t_sigSetup.ac_ledPins[0] = PIN_0; /*Red LED pin*/
    3b68:	1a 83       	std	Y+2, r17	; 0x02
   t_sigSetup.ac_ledPins[1] = PIN_1; /*Yellow LED pin*/
    3b6a:	82 e0       	ldi	r24, 0x02	; 2
    3b6c:	8b 83       	std	Y+3, r24	; 0x03
   t_sigSetup.ac_ledPins[2] = PIN_2; /*Green LED pin*/
    3b6e:	94 e0       	ldi	r25, 0x04	; 4
    3b70:	9c 83       	std	Y+4, r25	; 0x04
   t_sigSetup.c_majorNum    = 2;
    3b72:	8d 83       	std	Y+5, r24	; 0x05

   if( drv_signalInit( t_sigSetup) < 0)
    3b74:	48 e0       	ldi	r20, 0x08	; 8
    3b76:	51 e0       	ldi	r21, 0x01	; 1
    3b78:	62 e0       	ldi	r22, 0x02	; 2
    3b7a:	74 e0       	ldi	r23, 0x04	; 4
    3b7c:	0e 94 8e 1c 	call	0x391c	; 0x391c <drv_signalInit>
    3b80:	87 fd       	sbrc	r24, 7
    3b82:	31 c0       	rjmp	.+98     	; 0x3be6 <usr_appInit+0xbe>
   t_sdCardSetup.t_csPort   = GPIO_PORTC;
   t_sdCardSetup.t_csPin    = PIN_4;
   t_sdCardSetup.t_spiChan  = SPI_1;
   t_sdCardSetup.c_majorNum = 5;

   if( drv_sdInit( t_sdCardSetup) < 0)
    3b84:	60 e0       	ldi	r22, 0x00	; 0
    3b86:	72 e0       	ldi	r23, 0x02	; 2
    3b88:	80 e1       	ldi	r24, 0x10	; 16
    3b8a:	95 e0       	ldi	r25, 0x05	; 5
    3b8c:	0e 94 1a 10 	call	0x2034	; 0x2034 <drv_sdInit>
    3b90:	87 fd       	sbrc	r24, 7
    3b92:	29 c0       	rjmp	.+82     	; 0x3be6 <usr_appInit+0xbe>
   usr_driverRegistration();

   /*------------------------------------------------------------------------*
    * Initialize the debug interface.
    *------------------------------------------------------------------------*/
   if( arb_printfInit( "consoleDevice0",
    3b94:	80 e7       	ldi	r24, 0x70	; 112
    3b96:	90 e2       	ldi	r25, 0x20	; 32
    3b98:	60 e0       	ldi	r22, 0x00	; 0
    3b9a:	72 e0       	ldi	r23, 0x02	; 2
    3b9c:	4f e7       	ldi	r20, 0x7F	; 127
    3b9e:	50 e2       	ldi	r21, 0x20	; 32
    3ba0:	0e 94 af 70 	call	0xe15e	; 0xe15e <arb_printfInit>
    3ba4:	87 fd       	sbrc	r24, 7
    3ba6:	1f c0       	rjmp	.+62     	; 0x3be6 <usr_appInit+0xbe>
   }

   /*------------------------------------------------------------------------*
    * Initialize the console interface.
    *------------------------------------------------------------------------*/
   if( arb_consoleInit( "consoleDevice0",
    3ba8:	80 e7       	ldi	r24, 0x70	; 112
    3baa:	90 e2       	ldi	r25, 0x20	; 32
    3bac:	67 e9       	ldi	r22, 0x97	; 151
    3bae:	70 e2       	ldi	r23, 0x20	; 32
    3bb0:	40 e0       	ldi	r20, 0x00	; 0
    3bb2:	54 e0       	ldi	r21, 0x04	; 4
    3bb4:	2e ef       	ldi	r18, 0xFE	; 254
    3bb6:	07 ef       	ldi	r16, 0xF7	; 247
    3bb8:	1d e1       	ldi	r17, 0x1D	; 29
    3bba:	0e 94 fb 62 	call	0xc5f6	; 0xc5f6 <arb_consoleInit>
    3bbe:	87 fd       	sbrc	r24, 7
    3bc0:	12 c0       	rjmp	.+36     	; 0x3be6 <usr_appInit+0xbe>
   }

   /*------------------------------------------------------------------------*
    * Initialize the scheduler specifically for this application.
    *------------------------------------------------------------------------*/
   if( arb_schedulerInit( PRIORITY,
    3bc2:	81 e0       	ldi	r24, 0x01	; 1
    3bc4:	60 e0       	ldi	r22, 0x00	; 0
    3bc6:	72 e0       	ldi	r23, 0x02	; 2
    3bc8:	4e e1       	ldi	r20, 0x1E	; 30
    3bca:	0e 94 2d 78 	call	0xf05a	; 0xf05a <arb_schedulerInit>
    3bce:	87 fd       	sbrc	r24, 7
    3bd0:	0a c0       	rjmp	.+20     	; 0x3be6 <usr_appInit+0xbe>
   usr_platformInit();

   /*########################################################################
     # Initialize user-space threads here...
     ########################################################################*/
   usr_mathTestInit();
    3bd2:	0e 94 15 23 	call	0x462a	; 0x462a <usr_mathTestInit>

   /*------------------------------------------------------------------------*
    * Once we have exited this function the OS will begin running.
    *------------------------------------------------------------------------*/

}/*End usr_appInit*/
    3bd6:	2b 96       	adiw	r28, 0x0b	; 11
    3bd8:	cd bf       	out	0x3d, r28	; 61
    3bda:	de bf       	out	0x3e, r29	; 62
    3bdc:	df 91       	pop	r29
    3bde:	cf 91       	pop	r28
    3be0:	1f 91       	pop	r17
    3be2:	0f 91       	pop	r16
    3be4:	08 95       	ret
    *------------------------------------------------------------------------*/
   if( arb_schedulerInit( PRIORITY,
                          ARB_STACK_512B,
                          TIMER_7) < 0)
   {
      exit(0);
    3be6:	80 e0       	ldi	r24, 0x00	; 0
    3be8:	90 e0       	ldi	r25, 0x00	; 0
    3bea:	0e 94 ac b0 	call	0x16158	; 0x16158 <exit>

00003bee <usr_console>:
 * Public Function Definitions
 *---------------------------------------------------------------------------*/
bool usr_console( t_DEVHANDLE t_consoleHndl,
                  int8_t *pc_buff,
                  t_consoleTokHndl *pt_tokHndl)
{
    3bee:	ef 92       	push	r14
    3bf0:	ff 92       	push	r15
    3bf2:	0f 93       	push	r16
    3bf4:	1f 93       	push	r17
    3bf6:	cf 93       	push	r28
    3bf8:	df 93       	push	r29
    3bfa:	0f 92       	push	r0
    3bfc:	0f 92       	push	r0
    3bfe:	cd b7       	in	r28, 0x3d	; 61
    3c00:	de b7       	in	r29, 0x3e	; 62
    3c02:	89 83       	std	Y+1, r24	; 0x01
    3c04:	9a 83       	std	Y+2, r25	; 0x02
    3c06:	8b 01       	movw	r16, r22
    3c08:	ca 01       	movw	r24, r20

   bool b_success = true; /*A valid command was found...*/

   if( strcmp( (char *)pt_tokHndl->ac_tok[0], "hlpu") == 0)
    3c0a:	61 ea       	ldi	r22, 0xA1	; 161
    3c0c:	70 e2       	ldi	r23, 0x20	; 32
    3c0e:	0e 94 e5 b1 	call	0x163ca	; 0x163ca <strcmp>
    3c12:	00 97       	sbiw	r24, 0x00	; 0
    3c14:	51 f0       	breq	.+20     	; 0x3c2a <usr_console+0x3c>
   else /*Unrecognized message*/
   {
      /*---------------------------------------------------------------------*
       * Let 'arb_console' know the command wasn't found.
       *---------------------------------------------------------------------*/
      b_success = false;
    3c16:	80 e0       	ldi	r24, 0x00	; 0
   /*------------------------------------------------------------------------*
    * Return control over the console to the kernel...
    *------------------------------------------------------------------------*/
   return b_success;

}/*End usr_console*/
    3c18:	0f 90       	pop	r0
    3c1a:	0f 90       	pop	r0
    3c1c:	df 91       	pop	r29
    3c1e:	cf 91       	pop	r28
    3c20:	1f 91       	pop	r17
    3c22:	0f 91       	pop	r16
    3c24:	ff 90       	pop	r15
    3c26:	ef 90       	pop	r14
    3c28:	08 95       	ret
   if( strcmp( (char *)pt_tokHndl->ac_tok[0], "hlpu") == 0)
   {
      /*---------------------------------------------------------------------*
       * Display a list of all the possible user-space specific commands.
       *---------------------------------------------------------------------*/
      usr_displayUserHelp( t_consoleHndl,
    3c2a:	e9 80       	ldd	r14, Y+1	; 0x01
    3c2c:	fa 80       	ldd	r15, Y+2	; 0x02

   /*------------------------------------------------------------------------*
    * Display a list of all the possible console commands specific
    * to a user-space application.
    *------------------------------------------------------------------------*/
   s_size = sprintf_P( (char *)pc_buff, PSTR(".------------------------------------------------------------------------.\n\r"));
    3c2e:	00 d0       	rcall	.+0      	; 0x3c30 <usr_console+0x42>
    3c30:	0f 92       	push	r0
    3c32:	ed b7       	in	r30, 0x3d	; 61
    3c34:	fe b7       	in	r31, 0x3e	; 62
    3c36:	01 83       	std	Z+1, r16	; 0x01
    3c38:	12 83       	std	Z+2, r17	; 0x02
    3c3a:	8e e6       	ldi	r24, 0x6E	; 110
    3c3c:	92 e0       	ldi	r25, 0x02	; 2
    3c3e:	83 83       	std	Z+3, r24	; 0x03
    3c40:	94 83       	std	Z+4, r25	; 0x04
    3c42:	0e 94 93 b2 	call	0x16526	; 0x16526 <sprintf_P>
    3c46:	ac 01       	movw	r20, r24
   arb_write( t_consoleHndl,
    3c48:	0f 90       	pop	r0
    3c4a:	0f 90       	pop	r0
    3c4c:	0f 90       	pop	r0
    3c4e:	0f 90       	pop	r0
    3c50:	c7 01       	movw	r24, r14
    3c52:	b8 01       	movw	r22, r16
    3c54:	0e 94 95 6d 	call	0xdb2a	; 0xdb2a <arb_write>
              pc_buff,
              s_size);
   s_size = sprintf_P( (char *)pc_buff, PSTR("| Command |     Arguments     |              Description                 |\n\r"));
    3c58:	00 d0       	rcall	.+0      	; 0x3c5a <usr_console+0x6c>
    3c5a:	0f 92       	push	r0
    3c5c:	ed b7       	in	r30, 0x3d	; 61
    3c5e:	fe b7       	in	r31, 0x3e	; 62
    3c60:	01 83       	std	Z+1, r16	; 0x01
    3c62:	12 83       	std	Z+2, r17	; 0x02
    3c64:	8b eb       	ldi	r24, 0xBB	; 187
    3c66:	92 e0       	ldi	r25, 0x02	; 2
    3c68:	83 83       	std	Z+3, r24	; 0x03
    3c6a:	94 83       	std	Z+4, r25	; 0x04
    3c6c:	0e 94 93 b2 	call	0x16526	; 0x16526 <sprintf_P>
    3c70:	ac 01       	movw	r20, r24
   arb_write( t_consoleHndl,
    3c72:	0f 90       	pop	r0
    3c74:	0f 90       	pop	r0
    3c76:	0f 90       	pop	r0
    3c78:	0f 90       	pop	r0
    3c7a:	c7 01       	movw	r24, r14
    3c7c:	b8 01       	movw	r22, r16
    3c7e:	0e 94 95 6d 	call	0xdb2a	; 0xdb2a <arb_write>
              pc_buff,
              s_size);
   s_size = sprintf_P( (char *)pc_buff, PSTR("|---------|-------------------|------------------------------------------|\n\r"));
    3c82:	00 d0       	rcall	.+0      	; 0x3c84 <usr_console+0x96>
    3c84:	0f 92       	push	r0
    3c86:	ed b7       	in	r30, 0x3d	; 61
    3c88:	fe b7       	in	r31, 0x3e	; 62
    3c8a:	01 83       	std	Z+1, r16	; 0x01
    3c8c:	12 83       	std	Z+2, r17	; 0x02
    3c8e:	88 e0       	ldi	r24, 0x08	; 8
    3c90:	93 e0       	ldi	r25, 0x03	; 3
    3c92:	83 83       	std	Z+3, r24	; 0x03
    3c94:	94 83       	std	Z+4, r25	; 0x04
    3c96:	0e 94 93 b2 	call	0x16526	; 0x16526 <sprintf_P>
    3c9a:	ac 01       	movw	r20, r24
   arb_write( t_consoleHndl,
    3c9c:	0f 90       	pop	r0
    3c9e:	0f 90       	pop	r0
    3ca0:	0f 90       	pop	r0
    3ca2:	0f 90       	pop	r0
    3ca4:	c7 01       	movw	r24, r14
    3ca6:	b8 01       	movw	r22, r16
    3ca8:	0e 94 95 6d 	call	0xdb2a	; 0xdb2a <arb_write>
bool usr_console( t_DEVHANDLE t_consoleHndl,
                  int8_t *pc_buff,
                  t_consoleTokHndl *pt_tokHndl)
{

   bool b_success = true; /*A valid command was found...*/
    3cac:	81 e0       	ldi	r24, 0x01	; 1
    3cae:	b4 cf       	rjmp	.-152    	; 0x3c18 <usr_console+0x2a>

00003cb0 <usr_mathTest>:
/*---------------------------------------------------------------------------*
 * Private Function Definitions
 *---------------------------------------------------------------------------*/
static void usr_mathTest( t_parameters t_param,
                          t_arguments  t_args)
{
    3cb0:	ef 92       	push	r14
    3cb2:	ff 92       	push	r15
    3cb4:	0f 93       	push	r16
    3cb6:	1f 93       	push	r17
    3cb8:	cf 93       	push	r28
    3cba:	df 93       	push	r29
    3cbc:	cd b7       	in	r28, 0x3d	; 61
    3cbe:	de b7       	in	r29, 0x3e	; 62
    3cc0:	cd 5a       	subi	r28, 0xAD	; 173
    3cc2:	d0 40       	sbci	r29, 0x00	; 0
    3cc4:	cd bf       	out	0x3d, r28	; 61
    3cc6:	de bf       	out	0x3e, r29	; 62
    3cc8:	9e 01       	movw	r18, r28
    3cca:	2f 56       	subi	r18, 0x6F	; 111
    3ccc:	3f 4f       	sbci	r19, 0xFF	; 255
    3cce:	f9 01       	movw	r30, r18
    3cd0:	80 83       	st	Z, r24
    3cd2:	91 83       	std	Z+1, r25	; 0x01
    3cd4:	ce 01       	movw	r24, r28
    3cd6:	8d 56       	subi	r24, 0x6D	; 109
    3cd8:	9f 4f       	sbci	r25, 0xFF	; 255
    3cda:	fc 01       	movw	r30, r24
    3cdc:	60 83       	st	Z, r22
    3cde:	71 83       	std	Z+1, r23	; 0x01
   uint32_t i_phase = 0;
    3ce0:	19 82       	std	Y+1, r1	; 0x01
    3ce2:	1a 82       	std	Y+2, r1	; 0x02
    3ce4:	1b 82       	std	Y+3, r1	; 0x03
    3ce6:	1c 82       	std	Y+4, r1	; 0x04
   static float f_phase;

   /*------------------------------------------------------------------------*
    * Determine how long it takes to call the system time function.
    *------------------------------------------------------------------------*/
   t_time1 = arb_sysTimeNow();
    3ce8:	ce 01       	movw	r24, r28
    3cea:	8b 56       	subi	r24, 0x6B	; 107
    3cec:	9f 4f       	sbci	r25, 0xFF	; 255
    3cee:	0e 94 4a 82 	call	0x10494	; 0x10494 <arb_sysTimeNow>
    3cf2:	9e 01       	movw	r18, r28
    3cf4:	2b 56       	subi	r18, 0x6B	; 107
    3cf6:	3f 4f       	sbci	r19, 0xFF	; 255
    3cf8:	8c e9       	ldi	r24, 0x9C	; 156
    3cfa:	94 e2       	ldi	r25, 0x24	; 36
    3cfc:	49 e1       	ldi	r20, 0x19	; 25
    3cfe:	f9 01       	movw	r30, r18
    3d00:	00 80       	ld	r0, Z
    3d02:	2f 5f       	subi	r18, 0xFF	; 255
    3d04:	3f 4f       	sbci	r19, 0xFF	; 255
    3d06:	fc 01       	movw	r30, r24
    3d08:	00 82       	st	Z, r0
    3d0a:	01 96       	adiw	r24, 0x01	; 1
    3d0c:	41 50       	subi	r20, 0x01	; 1
    3d0e:	44 23       	and	r20, r20
    3d10:	b1 f7       	brne	.-20     	; 0x3cfe <usr_mathTest+0x4e>
   t_time2 = arb_sysTimeNow();
    3d12:	ce 01       	movw	r24, r28
    3d14:	8b 56       	subi	r24, 0x6B	; 107
    3d16:	9f 4f       	sbci	r25, 0xFF	; 255
    3d18:	0e 94 4a 82 	call	0x10494	; 0x10494 <arb_sysTimeNow>
    3d1c:	9e 01       	movw	r18, r28
    3d1e:	2b 56       	subi	r18, 0x6B	; 107
    3d20:	3f 4f       	sbci	r19, 0xFF	; 255
    3d22:	85 eb       	ldi	r24, 0xB5	; 181
    3d24:	94 e2       	ldi	r25, 0x24	; 36
    3d26:	49 e1       	ldi	r20, 0x19	; 25
    3d28:	f9 01       	movw	r30, r18
    3d2a:	00 80       	ld	r0, Z
    3d2c:	2f 5f       	subi	r18, 0xFF	; 255
    3d2e:	3f 4f       	sbci	r19, 0xFF	; 255
    3d30:	fc 01       	movw	r30, r24
    3d32:	00 82       	st	Z, r0
    3d34:	01 96       	adiw	r24, 0x01	; 1
    3d36:	41 50       	subi	r20, 0x01	; 1
    3d38:	44 23       	and	r20, r20
    3d3a:	b1 f7       	brne	.-20     	; 0x3d28 <usr_mathTest+0x78>
   s_callLoad = t_time2.i_usec - t_time1.i_usec;
    3d3c:	80 91 ca 24 	lds	r24, 0x24CA
    3d40:	90 91 cb 24 	lds	r25, 0x24CB
    3d44:	a0 91 cc 24 	lds	r26, 0x24CC
    3d48:	b0 91 cd 24 	lds	r27, 0x24CD
    3d4c:	9c 01       	movw	r18, r24
    3d4e:	80 91 b1 24 	lds	r24, 0x24B1
    3d52:	90 91 b2 24 	lds	r25, 0x24B2
    3d56:	a0 91 b3 24 	lds	r26, 0x24B3
    3d5a:	b0 91 b4 24 	lds	r27, 0x24B4
    3d5e:	79 01       	movw	r14, r18
    3d60:	e8 1a       	sub	r14, r24
    3d62:	f9 0a       	sbc	r15, r25
    3d64:	c7 01       	movw	r24, r14
    3d66:	80 93 ce 24 	sts	0x24CE, r24
    3d6a:	90 93 cf 24 	sts	0x24CF, r25

   while( RUN_FOREVER)
   {
      i_phase = i_phase + 64;
    3d6e:	89 81       	ldd	r24, Y+1	; 0x01
    3d70:	9a 81       	ldd	r25, Y+2	; 0x02
    3d72:	ab 81       	ldd	r26, Y+3	; 0x03
    3d74:	bc 81       	ldd	r27, Y+4	; 0x04
    3d76:	80 5c       	subi	r24, 0xC0	; 192
    3d78:	9f 4f       	sbci	r25, 0xFF	; 255
    3d7a:	af 4f       	sbci	r26, 0xFF	; 255
    3d7c:	bf 4f       	sbci	r27, 0xFF	; 255
    3d7e:	89 83       	std	Y+1, r24	; 0x01
    3d80:	9a 83       	std	Y+2, r25	; 0x02
    3d82:	ab 83       	std	Y+3, r26	; 0x03
    3d84:	bc 83       	std	Y+4, r27	; 0x04
      if( i_phase > UTL_MATH_FXDPNT_TWO_PI_WRAP)
    3d86:	89 81       	ldd	r24, Y+1	; 0x01
    3d88:	9a 81       	ldd	r25, Y+2	; 0x02
    3d8a:	ab 81       	ldd	r26, Y+3	; 0x03
    3d8c:	bc 81       	ldd	r27, Y+4	; 0x04
    3d8e:	81 30       	cpi	r24, 0x01	; 1
    3d90:	00 e0       	ldi	r16, 0x00	; 0
    3d92:	90 07       	cpc	r25, r16
    3d94:	01 e0       	ldi	r16, 0x01	; 1
    3d96:	a0 07       	cpc	r26, r16
    3d98:	00 e0       	ldi	r16, 0x00	; 0
    3d9a:	b0 07       	cpc	r27, r16
    3d9c:	60 f0       	brcs	.+24     	; 0x3db6 <usr_mathTest+0x106>
         i_phase = i_phase - UTL_MATH_FXDPNT_TWO_PI_WRAP;
    3d9e:	89 81       	ldd	r24, Y+1	; 0x01
    3da0:	9a 81       	ldd	r25, Y+2	; 0x02
    3da2:	ab 81       	ldd	r26, Y+3	; 0x03
    3da4:	bc 81       	ldd	r27, Y+4	; 0x04
    3da6:	80 50       	subi	r24, 0x00	; 0
    3da8:	90 40       	sbci	r25, 0x00	; 0
    3daa:	a1 40       	sbci	r26, 0x01	; 1
    3dac:	b0 40       	sbci	r27, 0x00	; 0
    3dae:	89 83       	std	Y+1, r24	; 0x01
    3db0:	9a 83       	std	Y+2, r25	; 0x02
    3db2:	ab 83       	std	Y+3, r26	; 0x03
    3db4:	bc 83       	std	Y+4, r27	; 0x04

      /*---------------------------------------------------------------------*
       * Determine the loading when calling the utl_math.c cosine routine.
       *---------------------------------------------------------------------*/
      t_time1 = arb_sysTimeNow();
    3db6:	ce 01       	movw	r24, r28
    3db8:	8b 56       	subi	r24, 0x6B	; 107
    3dba:	9f 4f       	sbci	r25, 0xFF	; 255
    3dbc:	0e 94 4a 82 	call	0x10494	; 0x10494 <arb_sysTimeNow>
    3dc0:	9e 01       	movw	r18, r28
    3dc2:	2b 56       	subi	r18, 0x6B	; 107
    3dc4:	3f 4f       	sbci	r19, 0xFF	; 255
    3dc6:	8c e9       	ldi	r24, 0x9C	; 156
    3dc8:	94 e2       	ldi	r25, 0x24	; 36
    3dca:	49 e1       	ldi	r20, 0x19	; 25
    3dcc:	f9 01       	movw	r30, r18
    3dce:	00 80       	ld	r0, Z
    3dd0:	2f 5f       	subi	r18, 0xFF	; 255
    3dd2:	3f 4f       	sbci	r19, 0xFF	; 255
    3dd4:	fc 01       	movw	r30, r24
    3dd6:	00 82       	st	Z, r0
    3dd8:	01 96       	adiw	r24, 0x01	; 1
    3dda:	41 50       	subi	r20, 0x01	; 1
    3ddc:	44 23       	and	r20, r20
    3dde:	b1 f7       	brne	.-20     	; 0x3dcc <usr_mathTest+0x11c>
      s_cos = utl_cos16_16( i_phase);
    3de0:	89 81       	ldd	r24, Y+1	; 0x01
    3de2:	9a 81       	ldd	r25, Y+2	; 0x02
    3de4:	0e 94 0b 8c 	call	0x11816	; 0x11816 <utl_cos16_16>
    3de8:	8d 83       	std	Y+5, r24	; 0x05
    3dea:	9e 83       	std	Y+6, r25	; 0x06
      t_time2 = arb_sysTimeNow();
    3dec:	ce 01       	movw	r24, r28
    3dee:	8b 56       	subi	r24, 0x6B	; 107
    3df0:	9f 4f       	sbci	r25, 0xFF	; 255
    3df2:	0e 94 4a 82 	call	0x10494	; 0x10494 <arb_sysTimeNow>
    3df6:	9e 01       	movw	r18, r28
    3df8:	2b 56       	subi	r18, 0x6B	; 107
    3dfa:	3f 4f       	sbci	r19, 0xFF	; 255
    3dfc:	85 eb       	ldi	r24, 0xB5	; 181
    3dfe:	94 e2       	ldi	r25, 0x24	; 36
    3e00:	49 e1       	ldi	r20, 0x19	; 25
    3e02:	f9 01       	movw	r30, r18
    3e04:	00 80       	ld	r0, Z
    3e06:	2f 5f       	subi	r18, 0xFF	; 255
    3e08:	3f 4f       	sbci	r19, 0xFF	; 255
    3e0a:	fc 01       	movw	r30, r24
    3e0c:	00 82       	st	Z, r0
    3e0e:	01 96       	adiw	r24, 0x01	; 1
    3e10:	41 50       	subi	r20, 0x01	; 1
    3e12:	44 23       	and	r20, r20
    3e14:	b1 f7       	brne	.-20     	; 0x3e02 <usr_mathTest+0x152>
      i_loading1 = t_time2.i_usec-t_time1.i_usec;
    3e16:	20 91 ca 24 	lds	r18, 0x24CA
    3e1a:	30 91 cb 24 	lds	r19, 0x24CB
    3e1e:	40 91 cc 24 	lds	r20, 0x24CC
    3e22:	50 91 cd 24 	lds	r21, 0x24CD
    3e26:	80 91 b1 24 	lds	r24, 0x24B1
    3e2a:	90 91 b2 24 	lds	r25, 0x24B2
    3e2e:	a0 91 b3 24 	lds	r26, 0x24B3
    3e32:	b0 91 b4 24 	lds	r27, 0x24B4
    3e36:	79 01       	movw	r14, r18
    3e38:	8a 01       	movw	r16, r20
    3e3a:	e8 1a       	sub	r14, r24
    3e3c:	f9 0a       	sbc	r15, r25
    3e3e:	0a 0b       	sbc	r16, r26
    3e40:	1b 0b       	sbc	r17, r27
    3e42:	d8 01       	movw	r26, r16
    3e44:	c7 01       	movw	r24, r14
    3e46:	80 93 d0 24 	sts	0x24D0, r24
    3e4a:	90 93 d1 24 	sts	0x24D1, r25
    3e4e:	a0 93 d2 24 	sts	0x24D2, r26
    3e52:	b0 93 d3 24 	sts	0x24D3, r27
      i_loading1 = i_loading1 - s_callLoad;
    3e56:	20 91 d0 24 	lds	r18, 0x24D0
    3e5a:	30 91 d1 24 	lds	r19, 0x24D1
    3e5e:	40 91 d2 24 	lds	r20, 0x24D2
    3e62:	50 91 d3 24 	lds	r21, 0x24D3
    3e66:	80 91 ce 24 	lds	r24, 0x24CE
    3e6a:	90 91 cf 24 	lds	r25, 0x24CF
    3e6e:	aa 27       	eor	r26, r26
    3e70:	97 fd       	sbrc	r25, 7
    3e72:	a0 95       	com	r26
    3e74:	ba 2f       	mov	r27, r26
    3e76:	79 01       	movw	r14, r18
    3e78:	8a 01       	movw	r16, r20
    3e7a:	e8 1a       	sub	r14, r24
    3e7c:	f9 0a       	sbc	r15, r25
    3e7e:	0a 0b       	sbc	r16, r26
    3e80:	1b 0b       	sbc	r17, r27
    3e82:	d8 01       	movw	r26, r16
    3e84:	c7 01       	movw	r24, r14
    3e86:	80 93 d0 24 	sts	0x24D0, r24
    3e8a:	90 93 d1 24 	sts	0x24D1, r25
    3e8e:	a0 93 d2 24 	sts	0x24D2, r26
    3e92:	b0 93 d3 24 	sts	0x24D3, r27
      if( i_loading1 < 0)
    3e96:	80 91 d0 24 	lds	r24, 0x24D0
    3e9a:	90 91 d1 24 	lds	r25, 0x24D1
    3e9e:	a0 91 d2 24 	lds	r26, 0x24D2
    3ea2:	b0 91 d3 24 	lds	r27, 0x24D3
    3ea6:	bb 23       	and	r27, r27
    3ea8:	a4 f4       	brge	.+40     	; 0x3ed2 <usr_mathTest+0x222>
         i_loading1 = i_loading1 + 1000000;
    3eaa:	80 91 d0 24 	lds	r24, 0x24D0
    3eae:	90 91 d1 24 	lds	r25, 0x24D1
    3eb2:	a0 91 d2 24 	lds	r26, 0x24D2
    3eb6:	b0 91 d3 24 	lds	r27, 0x24D3
    3eba:	80 5c       	subi	r24, 0xC0	; 192
    3ebc:	9d 4b       	sbci	r25, 0xBD	; 189
    3ebe:	a0 4f       	sbci	r26, 0xF0	; 240
    3ec0:	bf 4f       	sbci	r27, 0xFF	; 255
    3ec2:	80 93 d0 24 	sts	0x24D0, r24
    3ec6:	90 93 d1 24 	sts	0x24D1, r25
    3eca:	a0 93 d2 24 	sts	0x24D2, r26
    3ece:	b0 93 d3 24 	sts	0x24D3, r27

      f_phase = (2.0f*3.14159f*(float)i_phase)/UTL_MATH_FXDPNT_TWO_PI_WRAP;
    3ed2:	69 81       	ldd	r22, Y+1	; 0x01
    3ed4:	7a 81       	ldd	r23, Y+2	; 0x02
    3ed6:	8b 81       	ldd	r24, Y+3	; 0x03
    3ed8:	9c 81       	ldd	r25, Y+4	; 0x04
    3eda:	0e 94 6b ad 	call	0x15ad6	; 0x15ad6 <__floatunsisf>
    3ede:	dc 01       	movw	r26, r24
    3ee0:	cb 01       	movw	r24, r22
    3ee2:	bc 01       	movw	r22, r24
    3ee4:	cd 01       	movw	r24, r26
    3ee6:	20 ed       	ldi	r18, 0xD0	; 208
    3ee8:	3f e0       	ldi	r19, 0x0F	; 15
    3eea:	49 ec       	ldi	r20, 0xC9	; 201
    3eec:	50 e4       	ldi	r21, 0x40	; 64
    3eee:	0e 94 d4 ae 	call	0x15da8	; 0x15da8 <__mulsf3>
    3ef2:	dc 01       	movw	r26, r24
    3ef4:	cb 01       	movw	r24, r22
    3ef6:	bc 01       	movw	r22, r24
    3ef8:	cd 01       	movw	r24, r26
    3efa:	20 e0       	ldi	r18, 0x00	; 0
    3efc:	30 e0       	ldi	r19, 0x00	; 0
    3efe:	40 e8       	ldi	r20, 0x80	; 128
    3f00:	57 e4       	ldi	r21, 0x47	; 71
    3f02:	0e 94 98 ac 	call	0x15930	; 0x15930 <__divsf3>
    3f06:	dc 01       	movw	r26, r24
    3f08:	cb 01       	movw	r24, r22
    3f0a:	80 93 d4 24 	sts	0x24D4, r24
    3f0e:	90 93 d5 24 	sts	0x24D5, r25
    3f12:	a0 93 d6 24 	sts	0x24D6, r26
    3f16:	b0 93 d7 24 	sts	0x24D7, r27
      t_time1 = arb_sysTimeNow( );
    3f1a:	ce 01       	movw	r24, r28
    3f1c:	8b 56       	subi	r24, 0x6B	; 107
    3f1e:	9f 4f       	sbci	r25, 0xFF	; 255
    3f20:	0e 94 4a 82 	call	0x10494	; 0x10494 <arb_sysTimeNow>
    3f24:	9e 01       	movw	r18, r28
    3f26:	2b 56       	subi	r18, 0x6B	; 107
    3f28:	3f 4f       	sbci	r19, 0xFF	; 255
    3f2a:	8c e9       	ldi	r24, 0x9C	; 156
    3f2c:	94 e2       	ldi	r25, 0x24	; 36
    3f2e:	49 e1       	ldi	r20, 0x19	; 25
    3f30:	f9 01       	movw	r30, r18
    3f32:	00 80       	ld	r0, Z
    3f34:	2f 5f       	subi	r18, 0xFF	; 255
    3f36:	3f 4f       	sbci	r19, 0xFF	; 255
    3f38:	fc 01       	movw	r30, r24
    3f3a:	00 82       	st	Z, r0
    3f3c:	01 96       	adiw	r24, 0x01	; 1
    3f3e:	41 50       	subi	r20, 0x01	; 1
    3f40:	44 23       	and	r20, r20
    3f42:	b1 f7       	brne	.-20     	; 0x3f30 <usr_mathTest+0x280>
      f_cos = cosf( f_phase);
    3f44:	80 91 d4 24 	lds	r24, 0x24D4
    3f48:	90 91 d5 24 	lds	r25, 0x24D5
    3f4c:	a0 91 d6 24 	lds	r26, 0x24D6
    3f50:	b0 91 d7 24 	lds	r27, 0x24D7
    3f54:	bc 01       	movw	r22, r24
    3f56:	cd 01       	movw	r24, r26
    3f58:	0e 94 95 ac 	call	0x1592a	; 0x1592a <cos>
    3f5c:	dc 01       	movw	r26, r24
    3f5e:	cb 01       	movw	r24, r22
    3f60:	8f 83       	std	Y+7, r24	; 0x07
    3f62:	98 87       	std	Y+8, r25	; 0x08
    3f64:	a9 87       	std	Y+9, r26	; 0x09
    3f66:	ba 87       	std	Y+10, r27	; 0x0a
      t_time2 = arb_sysTimeNow();
    3f68:	ce 01       	movw	r24, r28
    3f6a:	8b 56       	subi	r24, 0x6B	; 107
    3f6c:	9f 4f       	sbci	r25, 0xFF	; 255
    3f6e:	0e 94 4a 82 	call	0x10494	; 0x10494 <arb_sysTimeNow>
    3f72:	9e 01       	movw	r18, r28
    3f74:	2b 56       	subi	r18, 0x6B	; 107
    3f76:	3f 4f       	sbci	r19, 0xFF	; 255
    3f78:	85 eb       	ldi	r24, 0xB5	; 181
    3f7a:	94 e2       	ldi	r25, 0x24	; 36
    3f7c:	49 e1       	ldi	r20, 0x19	; 25
    3f7e:	f9 01       	movw	r30, r18
    3f80:	00 80       	ld	r0, Z
    3f82:	2f 5f       	subi	r18, 0xFF	; 255
    3f84:	3f 4f       	sbci	r19, 0xFF	; 255
    3f86:	fc 01       	movw	r30, r24
    3f88:	00 82       	st	Z, r0
    3f8a:	01 96       	adiw	r24, 0x01	; 1
    3f8c:	41 50       	subi	r20, 0x01	; 1
    3f8e:	44 23       	and	r20, r20
    3f90:	b1 f7       	brne	.-20     	; 0x3f7e <usr_mathTest+0x2ce>
      
      f_sin = sinf( f_phase);
    3f92:	80 91 d4 24 	lds	r24, 0x24D4
    3f96:	90 91 d5 24 	lds	r25, 0x24D5
    3f9a:	a0 91 d6 24 	lds	r26, 0x24D6
    3f9e:	b0 91 d7 24 	lds	r27, 0x24D7
    3fa2:	bc 01       	movw	r22, r24
    3fa4:	cd 01       	movw	r24, r26
    3fa6:	0e 94 37 af 	call	0x15e6e	; 0x15e6e <sin>
    3faa:	dc 01       	movw	r26, r24
    3fac:	cb 01       	movw	r24, r22
    3fae:	8b 87       	std	Y+11, r24	; 0x0b
    3fb0:	9c 87       	std	Y+12, r25	; 0x0c
    3fb2:	ad 87       	std	Y+13, r26	; 0x0d
    3fb4:	be 87       	std	Y+14, r27	; 0x0e
      i_loading2 = t_time2.i_usec-t_time1.i_usec;
    3fb6:	20 91 ca 24 	lds	r18, 0x24CA
    3fba:	30 91 cb 24 	lds	r19, 0x24CB
    3fbe:	40 91 cc 24 	lds	r20, 0x24CC
    3fc2:	50 91 cd 24 	lds	r21, 0x24CD
    3fc6:	80 91 b1 24 	lds	r24, 0x24B1
    3fca:	90 91 b2 24 	lds	r25, 0x24B2
    3fce:	a0 91 b3 24 	lds	r26, 0x24B3
    3fd2:	b0 91 b4 24 	lds	r27, 0x24B4
    3fd6:	79 01       	movw	r14, r18
    3fd8:	8a 01       	movw	r16, r20
    3fda:	e8 1a       	sub	r14, r24
    3fdc:	f9 0a       	sbc	r15, r25
    3fde:	0a 0b       	sbc	r16, r26
    3fe0:	1b 0b       	sbc	r17, r27
    3fe2:	d8 01       	movw	r26, r16
    3fe4:	c7 01       	movw	r24, r14
    3fe6:	80 93 d8 24 	sts	0x24D8, r24
    3fea:	90 93 d9 24 	sts	0x24D9, r25
    3fee:	a0 93 da 24 	sts	0x24DA, r26
    3ff2:	b0 93 db 24 	sts	0x24DB, r27
      if( i_loading2 < 0)
    3ff6:	80 91 d8 24 	lds	r24, 0x24D8
    3ffa:	90 91 d9 24 	lds	r25, 0x24D9
    3ffe:	a0 91 da 24 	lds	r26, 0x24DA
    4002:	b0 91 db 24 	lds	r27, 0x24DB
    4006:	bb 23       	and	r27, r27
    4008:	a4 f4       	brge	.+40     	; 0x4032 <__stack+0x33>
         i_loading2 = i_loading2 + 1000000;
    400a:	80 91 d8 24 	lds	r24, 0x24D8
    400e:	90 91 d9 24 	lds	r25, 0x24D9
    4012:	a0 91 da 24 	lds	r26, 0x24DA
    4016:	b0 91 db 24 	lds	r27, 0x24DB
    401a:	80 5c       	subi	r24, 0xC0	; 192
    401c:	9d 4b       	sbci	r25, 0xBD	; 189
    401e:	a0 4f       	sbci	r26, 0xF0	; 240
    4020:	bf 4f       	sbci	r27, 0xFF	; 255
    4022:	80 93 d8 24 	sts	0x24D8, r24
    4026:	90 93 d9 24 	sts	0x24D9, r25
    402a:	a0 93 da 24 	sts	0x24DA, r26
    402e:	b0 93 db 24 	sts	0x24DB, r27
      i_loading2 = i_loading2 - s_callLoad;
    4032:	20 91 d8 24 	lds	r18, 0x24D8
    4036:	30 91 d9 24 	lds	r19, 0x24D9
    403a:	40 91 da 24 	lds	r20, 0x24DA
    403e:	50 91 db 24 	lds	r21, 0x24DB
    4042:	80 91 ce 24 	lds	r24, 0x24CE
    4046:	90 91 cf 24 	lds	r25, 0x24CF
    404a:	aa 27       	eor	r26, r26
    404c:	97 fd       	sbrc	r25, 7
    404e:	a0 95       	com	r26
    4050:	ba 2f       	mov	r27, r26
    4052:	79 01       	movw	r14, r18
    4054:	8a 01       	movw	r16, r20
    4056:	e8 1a       	sub	r14, r24
    4058:	f9 0a       	sbc	r15, r25
    405a:	0a 0b       	sbc	r16, r26
    405c:	1b 0b       	sbc	r17, r27
    405e:	d8 01       	movw	r26, r16
    4060:	c7 01       	movw	r24, r14
    4062:	80 93 d8 24 	sts	0x24D8, r24
    4066:	90 93 d9 24 	sts	0x24D9, r25
    406a:	a0 93 da 24 	sts	0x24DA, r26
    406e:	b0 93 db 24 	sts	0x24DB, r27

      f_error = fabs((f_cos - ((float)s_cos/32768.0f))*100.0f/f_cos);
    4072:	8d 81       	ldd	r24, Y+5	; 0x05
    4074:	9e 81       	ldd	r25, Y+6	; 0x06
    4076:	aa 27       	eor	r26, r26
    4078:	97 fd       	sbrc	r25, 7
    407a:	a0 95       	com	r26
    407c:	ba 2f       	mov	r27, r26
    407e:	bc 01       	movw	r22, r24
    4080:	cd 01       	movw	r24, r26
    4082:	0e 94 6d ad 	call	0x15ada	; 0x15ada <__floatsisf>
    4086:	dc 01       	movw	r26, r24
    4088:	cb 01       	movw	r24, r22
    408a:	bc 01       	movw	r22, r24
    408c:	cd 01       	movw	r24, r26
    408e:	20 e0       	ldi	r18, 0x00	; 0
    4090:	30 e0       	ldi	r19, 0x00	; 0
    4092:	40 e0       	ldi	r20, 0x00	; 0
    4094:	57 e4       	ldi	r21, 0x47	; 71
    4096:	0e 94 98 ac 	call	0x15930	; 0x15930 <__divsf3>
    409a:	dc 01       	movw	r26, r24
    409c:	cb 01       	movw	r24, r22
    409e:	9c 01       	movw	r18, r24
    40a0:	ad 01       	movw	r20, r26
    40a2:	6f 81       	ldd	r22, Y+7	; 0x07
    40a4:	78 85       	ldd	r23, Y+8	; 0x08
    40a6:	89 85       	ldd	r24, Y+9	; 0x09
    40a8:	9a 85       	ldd	r25, Y+10	; 0x0a
    40aa:	0e 94 ca ab 	call	0x15794	; 0x15794 <__subsf3>
    40ae:	dc 01       	movw	r26, r24
    40b0:	cb 01       	movw	r24, r22
    40b2:	bc 01       	movw	r22, r24
    40b4:	cd 01       	movw	r24, r26
    40b6:	20 e0       	ldi	r18, 0x00	; 0
    40b8:	30 e0       	ldi	r19, 0x00	; 0
    40ba:	48 ec       	ldi	r20, 0xC8	; 200
    40bc:	52 e4       	ldi	r21, 0x42	; 66
    40be:	0e 94 d4 ae 	call	0x15da8	; 0x15da8 <__mulsf3>
    40c2:	dc 01       	movw	r26, r24
    40c4:	cb 01       	movw	r24, r22
    40c6:	bc 01       	movw	r22, r24
    40c8:	cd 01       	movw	r24, r26
    40ca:	2f 81       	ldd	r18, Y+7	; 0x07
    40cc:	38 85       	ldd	r19, Y+8	; 0x08
    40ce:	49 85       	ldd	r20, Y+9	; 0x09
    40d0:	5a 85       	ldd	r21, Y+10	; 0x0a
    40d2:	0e 94 98 ac 	call	0x15930	; 0x15930 <__divsf3>
    40d6:	dc 01       	movw	r26, r24
    40d8:	cb 01       	movw	r24, r22
    40da:	bf 77       	andi	r27, 0x7F	; 127
    40dc:	8f 87       	std	Y+15, r24	; 0x0f
    40de:	98 8b       	std	Y+16, r25	; 0x10
    40e0:	a9 8b       	std	Y+17, r26	; 0x11
    40e2:	ba 8b       	std	Y+18, r27	; 0x12

      s_size = sprintf( ( char *)ac_buff, "fixed cos=%d ansii cos=%d err=%.2f%% speed=%dx\r",
                        s_cos,
                        (int16_t)(f_cos*32767.0f),
    40e4:	6f 81       	ldd	r22, Y+7	; 0x07
    40e6:	78 85       	ldd	r23, Y+8	; 0x08
    40e8:	89 85       	ldd	r24, Y+9	; 0x09
    40ea:	9a 85       	ldd	r25, Y+10	; 0x0a
    40ec:	20 e0       	ldi	r18, 0x00	; 0
    40ee:	3e ef       	ldi	r19, 0xFE	; 254
    40f0:	4f ef       	ldi	r20, 0xFF	; 255
    40f2:	56 e4       	ldi	r21, 0x46	; 70
    40f4:	0e 94 d4 ae 	call	0x15da8	; 0x15da8 <__mulsf3>
    40f8:	dc 01       	movw	r26, r24
    40fa:	cb 01       	movw	r24, r22
         i_loading2 = i_loading2 + 1000000;
      i_loading2 = i_loading2 - s_callLoad;

      f_error = fabs((f_cos - ((float)s_cos/32768.0f))*100.0f/f_cos);

      s_size = sprintf( ( char *)ac_buff, "fixed cos=%d ansii cos=%d err=%.2f%% speed=%dx\r",
    40fc:	bc 01       	movw	r22, r24
    40fe:	cd 01       	movw	r24, r26
    4100:	0e 94 3a ad 	call	0x15a74	; 0x15a74 <__fixsfsi>
    4104:	dc 01       	movw	r26, r24
    4106:	cb 01       	movw	r24, r22
    4108:	8c 01       	movw	r16, r24
                        s_cos,
                        (int16_t)(f_cos*32767.0f),
                        (double)f_error,
                        (int)i_loading2/i_loading1);
    410a:	80 91 d8 24 	lds	r24, 0x24D8
    410e:	90 91 d9 24 	lds	r25, 0x24D9
    4112:	a0 91 da 24 	lds	r26, 0x24DA
    4116:	b0 91 db 24 	lds	r27, 0x24DB
         i_loading2 = i_loading2 + 1000000;
      i_loading2 = i_loading2 - s_callLoad;

      f_error = fabs((f_cos - ((float)s_cos/32768.0f))*100.0f/f_cos);

      s_size = sprintf( ( char *)ac_buff, "fixed cos=%d ansii cos=%d err=%.2f%% speed=%dx\r",
    411a:	aa 27       	eor	r26, r26
    411c:	97 fd       	sbrc	r25, 7
    411e:	a0 95       	com	r26
    4120:	ba 2f       	mov	r27, r26
    4122:	20 91 d0 24 	lds	r18, 0x24D0
    4126:	30 91 d1 24 	lds	r19, 0x24D1
    412a:	40 91 d2 24 	lds	r20, 0x24D2
    412e:	50 91 d3 24 	lds	r21, 0x24D3
    4132:	bc 01       	movw	r22, r24
    4134:	cd 01       	movw	r24, r26
    4136:	0e 94 0e b5 	call	0x16a1c	; 0x16a1c <__divmodsi4>
    413a:	8d b7       	in	r24, 0x3d	; 61
    413c:	9e b7       	in	r25, 0x3e	; 62
    413e:	40 97       	sbiw	r24, 0x10	; 16
    4140:	8d bf       	out	0x3d, r24	; 61
    4142:	9e bf       	out	0x3e, r25	; 62
    4144:	8d b7       	in	r24, 0x3d	; 61
    4146:	9e b7       	in	r25, 0x3e	; 62
    4148:	01 96       	adiw	r24, 0x01	; 1
    414a:	be 01       	movw	r22, r28
    414c:	67 5e       	subi	r22, 0xE7	; 231
    414e:	7f 4f       	sbci	r23, 0xFF	; 255
    4150:	fc 01       	movw	r30, r24
    4152:	60 83       	st	Z, r22
    4154:	71 83       	std	Z+1, r23	; 0x01
    4156:	66 ea       	ldi	r22, 0xA6	; 166
    4158:	70 e2       	ldi	r23, 0x20	; 32
    415a:	fc 01       	movw	r30, r24
    415c:	62 83       	std	Z+2, r22	; 0x02
    415e:	73 83       	std	Z+3, r23	; 0x03
    4160:	6d 81       	ldd	r22, Y+5	; 0x05
    4162:	7e 81       	ldd	r23, Y+6	; 0x06
    4164:	fc 01       	movw	r30, r24
    4166:	64 83       	std	Z+4, r22	; 0x04
    4168:	75 83       	std	Z+5, r23	; 0x05
    416a:	fc 01       	movw	r30, r24
    416c:	06 83       	std	Z+6, r16	; 0x06
    416e:	17 83       	std	Z+7, r17	; 0x07
    4170:	ef 84       	ldd	r14, Y+15	; 0x0f
    4172:	f8 88       	ldd	r15, Y+16	; 0x10
    4174:	09 89       	ldd	r16, Y+17	; 0x11
    4176:	1a 89       	ldd	r17, Y+18	; 0x12
    4178:	fc 01       	movw	r30, r24
    417a:	e0 86       	std	Z+8, r14	; 0x08
    417c:	f1 86       	std	Z+9, r15	; 0x09
    417e:	02 87       	std	Z+10, r16	; 0x0a
    4180:	13 87       	std	Z+11, r17	; 0x0b
    4182:	fc 01       	movw	r30, r24
    4184:	24 87       	std	Z+12, r18	; 0x0c
    4186:	35 87       	std	Z+13, r19	; 0x0d
    4188:	46 87       	std	Z+14, r20	; 0x0e
    418a:	57 87       	std	Z+15, r21	; 0x0f
    418c:	0e 94 6a b2 	call	0x164d4	; 0x164d4 <sprintf>
    4190:	0d b7       	in	r16, 0x3d	; 61
    4192:	1e b7       	in	r17, 0x3e	; 62
    4194:	00 5f       	subi	r16, 0xF0	; 240
    4196:	1f 4f       	sbci	r17, 0xFF	; 255
    4198:	0d bf       	out	0x3d, r16	; 61
    419a:	1e bf       	out	0x3e, r17	; 62
    419c:	8b 8b       	std	Y+19, r24	; 0x13
    419e:	9c 8b       	std	Y+20, r25	; 0x14
                        s_cos,
                        (int16_t)(f_cos*32767.0f),
                        (double)f_error,
                        (int)i_loading2/i_loading1);
      arb_printf( PRINTF_DBG_MED |PRINTF_DBG_SHOW_TIME,
                  (const char *)ac_buff);
    41a0:	9e 01       	movw	r18, r28
    41a2:	27 5e       	subi	r18, 0xE7	; 231
    41a4:	3f 4f       	sbci	r19, 0xFF	; 255
      s_size = sprintf( ( char *)ac_buff, "fixed cos=%d ansii cos=%d err=%.2f%% speed=%dx\r",
                        s_cos,
                        (int16_t)(f_cos*32767.0f),
                        (double)f_error,
                        (int)i_loading2/i_loading1);
      arb_printf( PRINTF_DBG_MED |PRINTF_DBG_SHOW_TIME,
    41a6:	82 e4       	ldi	r24, 0x42	; 66
    41a8:	b9 01       	movw	r22, r18
    41aa:	0e 94 2d 72 	call	0xe45a	; 0xe45a <arb_printf>
                  (const char *)ac_buff);

      s_sin = (int16_t)(f_sin*32767.0f);
    41ae:	6b 85       	ldd	r22, Y+11	; 0x0b
    41b0:	7c 85       	ldd	r23, Y+12	; 0x0c
    41b2:	8d 85       	ldd	r24, Y+13	; 0x0d
    41b4:	9e 85       	ldd	r25, Y+14	; 0x0e
    41b6:	20 e0       	ldi	r18, 0x00	; 0
    41b8:	3e ef       	ldi	r19, 0xFE	; 254
    41ba:	4f ef       	ldi	r20, 0xFF	; 255
    41bc:	56 e4       	ldi	r21, 0x46	; 70
    41be:	0e 94 d4 ae 	call	0x15da8	; 0x15da8 <__mulsf3>
    41c2:	dc 01       	movw	r26, r24
    41c4:	cb 01       	movw	r24, r22
    41c6:	bc 01       	movw	r22, r24
    41c8:	cd 01       	movw	r24, r26
    41ca:	0e 94 3a ad 	call	0x15a74	; 0x15a74 <__fixsfsi>
    41ce:	dc 01       	movw	r26, r24
    41d0:	cb 01       	movw	r24, r22
    41d2:	8d 8b       	std	Y+21, r24	; 0x15
    41d4:	9e 8b       	std	Y+22, r25	; 0x16
      s_cos = (int16_t)(f_cos*32767.0f);
    41d6:	6f 81       	ldd	r22, Y+7	; 0x07
    41d8:	78 85       	ldd	r23, Y+8	; 0x08
    41da:	89 85       	ldd	r24, Y+9	; 0x09
    41dc:	9a 85       	ldd	r25, Y+10	; 0x0a
    41de:	20 e0       	ldi	r18, 0x00	; 0
    41e0:	3e ef       	ldi	r19, 0xFE	; 254
    41e2:	4f ef       	ldi	r20, 0xFF	; 255
    41e4:	56 e4       	ldi	r21, 0x46	; 70
    41e6:	0e 94 d4 ae 	call	0x15da8	; 0x15da8 <__mulsf3>
    41ea:	dc 01       	movw	r26, r24
    41ec:	cb 01       	movw	r24, r22
    41ee:	bc 01       	movw	r22, r24
    41f0:	cd 01       	movw	r24, r26
    41f2:	0e 94 3a ad 	call	0x15a74	; 0x15a74 <__fixsfsi>
    41f6:	dc 01       	movw	r26, r24
    41f8:	cb 01       	movw	r24, r22
    41fa:	8d 83       	std	Y+5, r24	; 0x05
    41fc:	9e 83       	std	Y+6, r25	; 0x06
      t_time1 = arb_sysTimeNow();
    41fe:	ce 01       	movw	r24, r28
    4200:	8b 56       	subi	r24, 0x6B	; 107
    4202:	9f 4f       	sbci	r25, 0xFF	; 255
    4204:	0e 94 4a 82 	call	0x10494	; 0x10494 <arb_sysTimeNow>
    4208:	9e 01       	movw	r18, r28
    420a:	2b 56       	subi	r18, 0x6B	; 107
    420c:	3f 4f       	sbci	r19, 0xFF	; 255
    420e:	8c e9       	ldi	r24, 0x9C	; 156
    4210:	94 e2       	ldi	r25, 0x24	; 36
    4212:	49 e1       	ldi	r20, 0x19	; 25
    4214:	f9 01       	movw	r30, r18
    4216:	00 80       	ld	r0, Z
    4218:	2f 5f       	subi	r18, 0xFF	; 255
    421a:	3f 4f       	sbci	r19, 0xFF	; 255
    421c:	fc 01       	movw	r30, r24
    421e:	00 82       	st	Z, r0
    4220:	01 96       	adiw	r24, 0x01	; 1
    4222:	41 50       	subi	r20, 0x01	; 1
    4224:	44 23       	and	r20, r20
    4226:	b1 f7       	brne	.-20     	; 0x4214 <__stack+0x215>
      s_angle = utl_atan2_16(s_sin, s_cos);
    4228:	8d 89       	ldd	r24, Y+21	; 0x15
    422a:	9e 89       	ldd	r25, Y+22	; 0x16
    422c:	2d 81       	ldd	r18, Y+5	; 0x05
    422e:	3e 81       	ldd	r19, Y+6	; 0x06
    4230:	b9 01       	movw	r22, r18
    4232:	0e 94 70 8c 	call	0x118e0	; 0x118e0 <utl_atan2_16>
    4236:	8f 8b       	std	Y+23, r24	; 0x17
    4238:	98 8f       	std	Y+24, r25	; 0x18
      t_time2 = arb_sysTimeNow();
    423a:	ce 01       	movw	r24, r28
    423c:	8b 56       	subi	r24, 0x6B	; 107
    423e:	9f 4f       	sbci	r25, 0xFF	; 255
    4240:	0e 94 4a 82 	call	0x10494	; 0x10494 <arb_sysTimeNow>
    4244:	9e 01       	movw	r18, r28
    4246:	2b 56       	subi	r18, 0x6B	; 107
    4248:	3f 4f       	sbci	r19, 0xFF	; 255
    424a:	85 eb       	ldi	r24, 0xB5	; 181
    424c:	94 e2       	ldi	r25, 0x24	; 36
    424e:	49 e1       	ldi	r20, 0x19	; 25
    4250:	f9 01       	movw	r30, r18
    4252:	00 80       	ld	r0, Z
    4254:	2f 5f       	subi	r18, 0xFF	; 255
    4256:	3f 4f       	sbci	r19, 0xFF	; 255
    4258:	fc 01       	movw	r30, r24
    425a:	00 82       	st	Z, r0
    425c:	01 96       	adiw	r24, 0x01	; 1
    425e:	41 50       	subi	r20, 0x01	; 1
    4260:	44 23       	and	r20, r20
    4262:	b1 f7       	brne	.-20     	; 0x4250 <__stack+0x251>
      i_loading1 = t_time2.i_usec-t_time1.i_usec;
    4264:	20 91 ca 24 	lds	r18, 0x24CA
    4268:	30 91 cb 24 	lds	r19, 0x24CB
    426c:	40 91 cc 24 	lds	r20, 0x24CC
    4270:	50 91 cd 24 	lds	r21, 0x24CD
    4274:	80 91 b1 24 	lds	r24, 0x24B1
    4278:	90 91 b2 24 	lds	r25, 0x24B2
    427c:	a0 91 b3 24 	lds	r26, 0x24B3
    4280:	b0 91 b4 24 	lds	r27, 0x24B4
    4284:	79 01       	movw	r14, r18
    4286:	8a 01       	movw	r16, r20
    4288:	e8 1a       	sub	r14, r24
    428a:	f9 0a       	sbc	r15, r25
    428c:	0a 0b       	sbc	r16, r26
    428e:	1b 0b       	sbc	r17, r27
    4290:	d8 01       	movw	r26, r16
    4292:	c7 01       	movw	r24, r14
    4294:	80 93 d0 24 	sts	0x24D0, r24
    4298:	90 93 d1 24 	sts	0x24D1, r25
    429c:	a0 93 d2 24 	sts	0x24D2, r26
    42a0:	b0 93 d3 24 	sts	0x24D3, r27
      i_loading1 = i_loading1 - s_callLoad;
    42a4:	20 91 d0 24 	lds	r18, 0x24D0
    42a8:	30 91 d1 24 	lds	r19, 0x24D1
    42ac:	40 91 d2 24 	lds	r20, 0x24D2
    42b0:	50 91 d3 24 	lds	r21, 0x24D3
    42b4:	80 91 ce 24 	lds	r24, 0x24CE
    42b8:	90 91 cf 24 	lds	r25, 0x24CF
    42bc:	aa 27       	eor	r26, r26
    42be:	97 fd       	sbrc	r25, 7
    42c0:	a0 95       	com	r26
    42c2:	ba 2f       	mov	r27, r26
    42c4:	79 01       	movw	r14, r18
    42c6:	8a 01       	movw	r16, r20
    42c8:	e8 1a       	sub	r14, r24
    42ca:	f9 0a       	sbc	r15, r25
    42cc:	0a 0b       	sbc	r16, r26
    42ce:	1b 0b       	sbc	r17, r27
    42d0:	d8 01       	movw	r26, r16
    42d2:	c7 01       	movw	r24, r14
    42d4:	80 93 d0 24 	sts	0x24D0, r24
    42d8:	90 93 d1 24 	sts	0x24D1, r25
    42dc:	a0 93 d2 24 	sts	0x24D2, r26
    42e0:	b0 93 d3 24 	sts	0x24D3, r27
      if( i_loading1 < 0)
    42e4:	80 91 d0 24 	lds	r24, 0x24D0
    42e8:	90 91 d1 24 	lds	r25, 0x24D1
    42ec:	a0 91 d2 24 	lds	r26, 0x24D2
    42f0:	b0 91 d3 24 	lds	r27, 0x24D3
    42f4:	bb 23       	and	r27, r27
    42f6:	a4 f4       	brge	.+40     	; 0x4320 <__stack+0x321>
         i_loading1 = i_loading1 + 1000000;
    42f8:	80 91 d0 24 	lds	r24, 0x24D0
    42fc:	90 91 d1 24 	lds	r25, 0x24D1
    4300:	a0 91 d2 24 	lds	r26, 0x24D2
    4304:	b0 91 d3 24 	lds	r27, 0x24D3
    4308:	80 5c       	subi	r24, 0xC0	; 192
    430a:	9d 4b       	sbci	r25, 0xBD	; 189
    430c:	a0 4f       	sbci	r26, 0xF0	; 240
    430e:	bf 4f       	sbci	r27, 0xFF	; 255
    4310:	80 93 d0 24 	sts	0x24D0, r24
    4314:	90 93 d1 24 	sts	0x24D1, r25
    4318:	a0 93 d2 24 	sts	0x24D2, r26
    431c:	b0 93 d3 24 	sts	0x24D3, r27

      if( f_phase > 3.14158f)
    4320:	80 91 d4 24 	lds	r24, 0x24D4
    4324:	90 91 d5 24 	lds	r25, 0x24D5
    4328:	a0 91 d6 24 	lds	r26, 0x24D6
    432c:	b0 91 d7 24 	lds	r27, 0x24D7
    4330:	11 e0       	ldi	r17, 0x01	; 1
    4332:	bc 01       	movw	r22, r24
    4334:	cd 01       	movw	r24, r26
    4336:	26 ea       	ldi	r18, 0xA6	; 166
    4338:	3f e0       	ldi	r19, 0x0F	; 15
    433a:	49 e4       	ldi	r20, 0x49	; 73
    433c:	50 e4       	ldi	r21, 0x40	; 64
    433e:	0e 94 c9 ae 	call	0x15d92	; 0x15d92 <__gesf2>
    4342:	18 16       	cp	r1, r24
    4344:	0c f0       	brlt	.+2      	; 0x4348 <__stack+0x349>
    4346:	10 e0       	ldi	r17, 0x00	; 0
    4348:	11 23       	and	r17, r17
    434a:	d1 f0       	breq	.+52     	; 0x4380 <__stack+0x381>
         f_phase = f_phase - 2.0f*3.14159f;
    434c:	80 91 d4 24 	lds	r24, 0x24D4
    4350:	90 91 d5 24 	lds	r25, 0x24D5
    4354:	a0 91 d6 24 	lds	r26, 0x24D6
    4358:	b0 91 d7 24 	lds	r27, 0x24D7
    435c:	bc 01       	movw	r22, r24
    435e:	cd 01       	movw	r24, r26
    4360:	20 ed       	ldi	r18, 0xD0	; 208
    4362:	3f e0       	ldi	r19, 0x0F	; 15
    4364:	49 ec       	ldi	r20, 0xC9	; 201
    4366:	50 e4       	ldi	r21, 0x40	; 64
    4368:	0e 94 ca ab 	call	0x15794	; 0x15794 <__subsf3>
    436c:	dc 01       	movw	r26, r24
    436e:	cb 01       	movw	r24, r22
    4370:	80 93 d4 24 	sts	0x24D4, r24
    4374:	90 93 d5 24 	sts	0x24D5, r25
    4378:	a0 93 d6 24 	sts	0x24D6, r26
    437c:	b0 93 d7 24 	sts	0x24D7, r27

      f_error = fabs((f_phase - ((float)s_angle*3.14159f/32768.0f))*100.0f/f_phase);
    4380:	e0 90 d4 24 	lds	r14, 0x24D4
    4384:	f0 90 d5 24 	lds	r15, 0x24D5
    4388:	00 91 d6 24 	lds	r16, 0x24D6
    438c:	10 91 d7 24 	lds	r17, 0x24D7
    4390:	8f 89       	ldd	r24, Y+23	; 0x17
    4392:	98 8d       	ldd	r25, Y+24	; 0x18
    4394:	aa 27       	eor	r26, r26
    4396:	97 fd       	sbrc	r25, 7
    4398:	a0 95       	com	r26
    439a:	ba 2f       	mov	r27, r26
    439c:	bc 01       	movw	r22, r24
    439e:	cd 01       	movw	r24, r26
    43a0:	0e 94 6d ad 	call	0x15ada	; 0x15ada <__floatsisf>
    43a4:	dc 01       	movw	r26, r24
    43a6:	cb 01       	movw	r24, r22
    43a8:	bc 01       	movw	r22, r24
    43aa:	cd 01       	movw	r24, r26
    43ac:	20 ed       	ldi	r18, 0xD0	; 208
    43ae:	3f e0       	ldi	r19, 0x0F	; 15
    43b0:	49 e4       	ldi	r20, 0x49	; 73
    43b2:	50 e4       	ldi	r21, 0x40	; 64
    43b4:	0e 94 d4 ae 	call	0x15da8	; 0x15da8 <__mulsf3>
    43b8:	dc 01       	movw	r26, r24
    43ba:	cb 01       	movw	r24, r22
    43bc:	bc 01       	movw	r22, r24
    43be:	cd 01       	movw	r24, r26
    43c0:	20 e0       	ldi	r18, 0x00	; 0
    43c2:	30 e0       	ldi	r19, 0x00	; 0
    43c4:	40 e0       	ldi	r20, 0x00	; 0
    43c6:	57 e4       	ldi	r21, 0x47	; 71
    43c8:	0e 94 98 ac 	call	0x15930	; 0x15930 <__divsf3>
    43cc:	dc 01       	movw	r26, r24
    43ce:	cb 01       	movw	r24, r22
    43d0:	9c 01       	movw	r18, r24
    43d2:	ad 01       	movw	r20, r26
    43d4:	c8 01       	movw	r24, r16
    43d6:	b7 01       	movw	r22, r14
    43d8:	0e 94 ca ab 	call	0x15794	; 0x15794 <__subsf3>
    43dc:	dc 01       	movw	r26, r24
    43de:	cb 01       	movw	r24, r22
    43e0:	bc 01       	movw	r22, r24
    43e2:	cd 01       	movw	r24, r26
    43e4:	20 e0       	ldi	r18, 0x00	; 0
    43e6:	30 e0       	ldi	r19, 0x00	; 0
    43e8:	48 ec       	ldi	r20, 0xC8	; 200
    43ea:	52 e4       	ldi	r21, 0x42	; 66
    43ec:	0e 94 d4 ae 	call	0x15da8	; 0x15da8 <__mulsf3>
    43f0:	dc 01       	movw	r26, r24
    43f2:	cb 01       	movw	r24, r22
    43f4:	20 91 d4 24 	lds	r18, 0x24D4
    43f8:	30 91 d5 24 	lds	r19, 0x24D5
    43fc:	40 91 d6 24 	lds	r20, 0x24D6
    4400:	50 91 d7 24 	lds	r21, 0x24D7
    4404:	bc 01       	movw	r22, r24
    4406:	cd 01       	movw	r24, r26
    4408:	0e 94 98 ac 	call	0x15930	; 0x15930 <__divsf3>
    440c:	dc 01       	movw	r26, r24
    440e:	cb 01       	movw	r24, r22
    4410:	bf 77       	andi	r27, 0x7F	; 127
    4412:	8f 87       	std	Y+15, r24	; 0x0f
    4414:	98 8b       	std	Y+16, r25	; 0x10
    4416:	a9 8b       	std	Y+17, r26	; 0x11
    4418:	ba 8b       	std	Y+18, r27	; 0x12

      t_time1 = arb_sysTimeNow( );
    441a:	ce 01       	movw	r24, r28
    441c:	8b 56       	subi	r24, 0x6B	; 107
    441e:	9f 4f       	sbci	r25, 0xFF	; 255
    4420:	0e 94 4a 82 	call	0x10494	; 0x10494 <arb_sysTimeNow>
    4424:	9e 01       	movw	r18, r28
    4426:	2b 56       	subi	r18, 0x6B	; 107
    4428:	3f 4f       	sbci	r19, 0xFF	; 255
    442a:	8c e9       	ldi	r24, 0x9C	; 156
    442c:	94 e2       	ldi	r25, 0x24	; 36
    442e:	49 e1       	ldi	r20, 0x19	; 25
    4430:	f9 01       	movw	r30, r18
    4432:	00 80       	ld	r0, Z
    4434:	2f 5f       	subi	r18, 0xFF	; 255
    4436:	3f 4f       	sbci	r19, 0xFF	; 255
    4438:	fc 01       	movw	r30, r24
    443a:	00 82       	st	Z, r0
    443c:	01 96       	adiw	r24, 0x01	; 1
    443e:	41 50       	subi	r20, 0x01	; 1
    4440:	44 23       	and	r20, r20
    4442:	b1 f7       	brne	.-20     	; 0x4430 <__stack+0x431>
      f_phase = atan2f( f_sin, f_cos);
    4444:	8b 85       	ldd	r24, Y+11	; 0x0b
    4446:	9c 85       	ldd	r25, Y+12	; 0x0c
    4448:	ad 85       	ldd	r26, Y+13	; 0x0d
    444a:	be 85       	ldd	r27, Y+14	; 0x0e
    444c:	2f 81       	ldd	r18, Y+7	; 0x07
    444e:	38 85       	ldd	r19, Y+8	; 0x08
    4450:	49 85       	ldd	r20, Y+9	; 0x09
    4452:	5a 85       	ldd	r21, Y+10	; 0x0a
    4454:	bc 01       	movw	r22, r24
    4456:	cd 01       	movw	r24, r26
    4458:	0e 94 3e ac 	call	0x1587c	; 0x1587c <atan2>
    445c:	dc 01       	movw	r26, r24
    445e:	cb 01       	movw	r24, r22
    4460:	80 93 d4 24 	sts	0x24D4, r24
    4464:	90 93 d5 24 	sts	0x24D5, r25
    4468:	a0 93 d6 24 	sts	0x24D6, r26
    446c:	b0 93 d7 24 	sts	0x24D7, r27
      t_time2 = arb_sysTimeNow( );
    4470:	ce 01       	movw	r24, r28
    4472:	8b 56       	subi	r24, 0x6B	; 107
    4474:	9f 4f       	sbci	r25, 0xFF	; 255
    4476:	0e 94 4a 82 	call	0x10494	; 0x10494 <arb_sysTimeNow>
    447a:	9e 01       	movw	r18, r28
    447c:	2b 56       	subi	r18, 0x6B	; 107
    447e:	3f 4f       	sbci	r19, 0xFF	; 255
    4480:	85 eb       	ldi	r24, 0xB5	; 181
    4482:	94 e2       	ldi	r25, 0x24	; 36
    4484:	49 e1       	ldi	r20, 0x19	; 25
    4486:	f9 01       	movw	r30, r18
    4488:	00 80       	ld	r0, Z
    448a:	2f 5f       	subi	r18, 0xFF	; 255
    448c:	3f 4f       	sbci	r19, 0xFF	; 255
    448e:	fc 01       	movw	r30, r24
    4490:	00 82       	st	Z, r0
    4492:	01 96       	adiw	r24, 0x01	; 1
    4494:	41 50       	subi	r20, 0x01	; 1
    4496:	44 23       	and	r20, r20
    4498:	b1 f7       	brne	.-20     	; 0x4486 <__stack+0x487>
      i_loading2 = t_time2.i_usec-t_time1.i_usec;
    449a:	20 91 ca 24 	lds	r18, 0x24CA
    449e:	30 91 cb 24 	lds	r19, 0x24CB
    44a2:	40 91 cc 24 	lds	r20, 0x24CC
    44a6:	50 91 cd 24 	lds	r21, 0x24CD
    44aa:	80 91 b1 24 	lds	r24, 0x24B1
    44ae:	90 91 b2 24 	lds	r25, 0x24B2
    44b2:	a0 91 b3 24 	lds	r26, 0x24B3
    44b6:	b0 91 b4 24 	lds	r27, 0x24B4
    44ba:	79 01       	movw	r14, r18
    44bc:	8a 01       	movw	r16, r20
    44be:	e8 1a       	sub	r14, r24
    44c0:	f9 0a       	sbc	r15, r25
    44c2:	0a 0b       	sbc	r16, r26
    44c4:	1b 0b       	sbc	r17, r27
    44c6:	d8 01       	movw	r26, r16
    44c8:	c7 01       	movw	r24, r14
    44ca:	80 93 d8 24 	sts	0x24D8, r24
    44ce:	90 93 d9 24 	sts	0x24D9, r25
    44d2:	a0 93 da 24 	sts	0x24DA, r26
    44d6:	b0 93 db 24 	sts	0x24DB, r27
      if( i_loading2 < 0)
    44da:	80 91 d8 24 	lds	r24, 0x24D8
    44de:	90 91 d9 24 	lds	r25, 0x24D9
    44e2:	a0 91 da 24 	lds	r26, 0x24DA
    44e6:	b0 91 db 24 	lds	r27, 0x24DB
    44ea:	bb 23       	and	r27, r27
    44ec:	a4 f4       	brge	.+40     	; 0x4516 <__stack+0x517>
         i_loading2 = i_loading2 + 1000000;
    44ee:	80 91 d8 24 	lds	r24, 0x24D8
    44f2:	90 91 d9 24 	lds	r25, 0x24D9
    44f6:	a0 91 da 24 	lds	r26, 0x24DA
    44fa:	b0 91 db 24 	lds	r27, 0x24DB
    44fe:	80 5c       	subi	r24, 0xC0	; 192
    4500:	9d 4b       	sbci	r25, 0xBD	; 189
    4502:	a0 4f       	sbci	r26, 0xF0	; 240
    4504:	bf 4f       	sbci	r27, 0xFF	; 255
    4506:	80 93 d8 24 	sts	0x24D8, r24
    450a:	90 93 d9 24 	sts	0x24D9, r25
    450e:	a0 93 da 24 	sts	0x24DA, r26
    4512:	b0 93 db 24 	sts	0x24DB, r27
      i_loading2 = i_loading2 - s_callLoad;
    4516:	20 91 d8 24 	lds	r18, 0x24D8
    451a:	30 91 d9 24 	lds	r19, 0x24D9
    451e:	40 91 da 24 	lds	r20, 0x24DA
    4522:	50 91 db 24 	lds	r21, 0x24DB
    4526:	80 91 ce 24 	lds	r24, 0x24CE
    452a:	90 91 cf 24 	lds	r25, 0x24CF
    452e:	aa 27       	eor	r26, r26
    4530:	97 fd       	sbrc	r25, 7
    4532:	a0 95       	com	r26
    4534:	ba 2f       	mov	r27, r26
    4536:	79 01       	movw	r14, r18
    4538:	8a 01       	movw	r16, r20
    453a:	e8 1a       	sub	r14, r24
    453c:	f9 0a       	sbc	r15, r25
    453e:	0a 0b       	sbc	r16, r26
    4540:	1b 0b       	sbc	r17, r27
    4542:	d8 01       	movw	r26, r16
    4544:	c7 01       	movw	r24, r14
    4546:	80 93 d8 24 	sts	0x24D8, r24
    454a:	90 93 d9 24 	sts	0x24D9, r25
    454e:	a0 93 da 24 	sts	0x24DA, r26
    4552:	b0 93 db 24 	sts	0x24DB, r27

      s_size = sprintf( ( char *)ac_buff, "fixed atan2=%d ansii atan2=%d err=%.2f%% speed=%dx\r",
                        s_cos,
                        (int16_t)(f_cos*32767.0f),
    4556:	6f 81       	ldd	r22, Y+7	; 0x07
    4558:	78 85       	ldd	r23, Y+8	; 0x08
    455a:	89 85       	ldd	r24, Y+9	; 0x09
    455c:	9a 85       	ldd	r25, Y+10	; 0x0a
    455e:	20 e0       	ldi	r18, 0x00	; 0
    4560:	3e ef       	ldi	r19, 0xFE	; 254
    4562:	4f ef       	ldi	r20, 0xFF	; 255
    4564:	56 e4       	ldi	r21, 0x46	; 70
    4566:	0e 94 d4 ae 	call	0x15da8	; 0x15da8 <__mulsf3>
    456a:	dc 01       	movw	r26, r24
    456c:	cb 01       	movw	r24, r22
      i_loading2 = t_time2.i_usec-t_time1.i_usec;
      if( i_loading2 < 0)
         i_loading2 = i_loading2 + 1000000;
      i_loading2 = i_loading2 - s_callLoad;

      s_size = sprintf( ( char *)ac_buff, "fixed atan2=%d ansii atan2=%d err=%.2f%% speed=%dx\r",
    456e:	bc 01       	movw	r22, r24
    4570:	cd 01       	movw	r24, r26
    4572:	0e 94 3a ad 	call	0x15a74	; 0x15a74 <__fixsfsi>
    4576:	dc 01       	movw	r26, r24
    4578:	cb 01       	movw	r24, r22
    457a:	8c 01       	movw	r16, r24
                        s_cos,
                        (int16_t)(f_cos*32767.0f),
                        (double)f_error,
                        (int)i_loading2/i_loading1);
    457c:	80 91 d8 24 	lds	r24, 0x24D8
    4580:	90 91 d9 24 	lds	r25, 0x24D9
    4584:	a0 91 da 24 	lds	r26, 0x24DA
    4588:	b0 91 db 24 	lds	r27, 0x24DB
      i_loading2 = t_time2.i_usec-t_time1.i_usec;
      if( i_loading2 < 0)
         i_loading2 = i_loading2 + 1000000;
      i_loading2 = i_loading2 - s_callLoad;

      s_size = sprintf( ( char *)ac_buff, "fixed atan2=%d ansii atan2=%d err=%.2f%% speed=%dx\r",
    458c:	aa 27       	eor	r26, r26
    458e:	97 fd       	sbrc	r25, 7
    4590:	a0 95       	com	r26
    4592:	ba 2f       	mov	r27, r26
    4594:	20 91 d0 24 	lds	r18, 0x24D0
    4598:	30 91 d1 24 	lds	r19, 0x24D1
    459c:	40 91 d2 24 	lds	r20, 0x24D2
    45a0:	50 91 d3 24 	lds	r21, 0x24D3
    45a4:	bc 01       	movw	r22, r24
    45a6:	cd 01       	movw	r24, r26
    45a8:	0e 94 0e b5 	call	0x16a1c	; 0x16a1c <__divmodsi4>
    45ac:	8d b7       	in	r24, 0x3d	; 61
    45ae:	9e b7       	in	r25, 0x3e	; 62
    45b0:	40 97       	sbiw	r24, 0x10	; 16
    45b2:	8d bf       	out	0x3d, r24	; 61
    45b4:	9e bf       	out	0x3e, r25	; 62
    45b6:	8d b7       	in	r24, 0x3d	; 61
    45b8:	9e b7       	in	r25, 0x3e	; 62
    45ba:	01 96       	adiw	r24, 0x01	; 1
    45bc:	be 01       	movw	r22, r28
    45be:	67 5e       	subi	r22, 0xE7	; 231
    45c0:	7f 4f       	sbci	r23, 0xFF	; 255
    45c2:	fc 01       	movw	r30, r24
    45c4:	60 83       	st	Z, r22
    45c6:	71 83       	std	Z+1, r23	; 0x01
    45c8:	66 ed       	ldi	r22, 0xD6	; 214
    45ca:	70 e2       	ldi	r23, 0x20	; 32
    45cc:	fc 01       	movw	r30, r24
    45ce:	62 83       	std	Z+2, r22	; 0x02
    45d0:	73 83       	std	Z+3, r23	; 0x03
    45d2:	6d 81       	ldd	r22, Y+5	; 0x05
    45d4:	7e 81       	ldd	r23, Y+6	; 0x06
    45d6:	fc 01       	movw	r30, r24
    45d8:	64 83       	std	Z+4, r22	; 0x04
    45da:	75 83       	std	Z+5, r23	; 0x05
    45dc:	fc 01       	movw	r30, r24
    45de:	06 83       	std	Z+6, r16	; 0x06
    45e0:	17 83       	std	Z+7, r17	; 0x07
    45e2:	ef 84       	ldd	r14, Y+15	; 0x0f
    45e4:	f8 88       	ldd	r15, Y+16	; 0x10
    45e6:	09 89       	ldd	r16, Y+17	; 0x11
    45e8:	1a 89       	ldd	r17, Y+18	; 0x12
    45ea:	fc 01       	movw	r30, r24
    45ec:	e0 86       	std	Z+8, r14	; 0x08
    45ee:	f1 86       	std	Z+9, r15	; 0x09
    45f0:	02 87       	std	Z+10, r16	; 0x0a
    45f2:	13 87       	std	Z+11, r17	; 0x0b
    45f4:	fc 01       	movw	r30, r24
    45f6:	24 87       	std	Z+12, r18	; 0x0c
    45f8:	35 87       	std	Z+13, r19	; 0x0d
    45fa:	46 87       	std	Z+14, r20	; 0x0e
    45fc:	57 87       	std	Z+15, r21	; 0x0f
    45fe:	0e 94 6a b2 	call	0x164d4	; 0x164d4 <sprintf>
    4602:	0d b7       	in	r16, 0x3d	; 61
    4604:	1e b7       	in	r17, 0x3e	; 62
    4606:	00 5f       	subi	r16, 0xF0	; 240
    4608:	1f 4f       	sbci	r17, 0xFF	; 255
    460a:	0d bf       	out	0x3d, r16	; 61
    460c:	1e bf       	out	0x3e, r17	; 62
    460e:	8b 8b       	std	Y+19, r24	; 0x13
    4610:	9c 8b       	std	Y+20, r25	; 0x14
                        s_cos,
                        (int16_t)(f_cos*32767.0f),
                        (double)f_error,
                        (int)i_loading2/i_loading1);
      arb_printf( PRINTF_DBG_MED |PRINTF_DBG_SHOW_TIME, 
                  (const char *)ac_buff);
    4612:	9e 01       	movw	r18, r28
    4614:	27 5e       	subi	r18, 0xE7	; 231
    4616:	3f 4f       	sbci	r19, 0xFF	; 255
      s_size = sprintf( ( char *)ac_buff, "fixed atan2=%d ansii atan2=%d err=%.2f%% speed=%dx\r",
                        s_cos,
                        (int16_t)(f_cos*32767.0f),
                        (double)f_error,
                        (int)i_loading2/i_loading1);
      arb_printf( PRINTF_DBG_MED |PRINTF_DBG_SHOW_TIME, 
    4618:	82 e4       	ldi	r24, 0x42	; 66
    461a:	b9 01       	movw	r22, r18
    461c:	0e 94 2d 72 	call	0xe45a	; 0xe45a <arb_printf>
                  (const char *)ac_buff);

      /*---------------------------------------------------------------------*
       * Allow other threads to run...
       *---------------------------------------------------------------------*/
      arb_sleep( MATH_SLEEP_TICKS);
    4620:	8a e0       	ldi	r24, 0x0A	; 10
    4622:	90 e0       	ldi	r25, 0x00	; 0
    4624:	0e 94 c6 85 	call	0x10b8c	; 0x10b8c <arb_sleep>

   }/*End while( RUN_FOREVER)*/
    4628:	a2 cb       	rjmp	.-2236   	; 0x3d6e <usr_mathTest+0xbe>

0000462a <usr_mathTestInit>:

}/*End usr_mathTest*/

t_error usr_mathTestInit( void)
{
    462a:	0f 93       	push	r16
    462c:	cf 93       	push	r28
    462e:	df 93       	push	r29
    4630:	cd b7       	in	r28, 0x3d	; 61
    4632:	de b7       	in	r29, 0x3e	; 62

   /*------------------------------------------------------------------------*
    * Initialize the BMS object...
    *------------------------------------------------------------------------*/
   memset( (void *)&gt_mathObjct, 0, sizeof( t_mathObjct));
    4634:	10 92 98 24 	sts	0x2498, r1
    4638:	10 92 99 24 	sts	0x2499, r1
    463c:	10 92 9a 24 	sts	0x249A, r1
    4640:	10 92 9b 24 	sts	0x249B, r1

   /*------------------------------------------------------------------------*
    * Create a new thread.
    *------------------------------------------------------------------------*/
   gt_mathObjct.t_mathThread = arb_threadCreate( usr_mathTest,
    4644:	88 e5       	ldi	r24, 0x58	; 88
    4646:	9e e1       	ldi	r25, 0x1E	; 30
    4648:	61 e0       	ldi	r22, 0x01	; 1
    464a:	70 e0       	ldi	r23, 0x00	; 0
    464c:	40 e0       	ldi	r20, 0x00	; 0
    464e:	50 e0       	ldi	r21, 0x00	; 0
    4650:	20 e0       	ldi	r18, 0x00	; 0
    4652:	32 e0       	ldi	r19, 0x02	; 2
    4654:	00 e0       	ldi	r16, 0x00	; 0
    4656:	0e 94 01 84 	call	0x10802	; 0x10802 <arb_threadCreate>
    465a:	80 93 98 24 	sts	0x2498, r24
    465e:	90 93 99 24 	sts	0x2499, r25
                                                 1,
                                                 0,
                                                 ARB_STACK_512B,
                                                 0);

   if( gt_mathObjct.t_mathThread < 0)
    4662:	80 91 98 24 	lds	r24, 0x2498
    4666:	90 91 99 24 	lds	r25, 0x2499
    466a:	99 23       	and	r25, r25
    466c:	2c f4       	brge	.+10     	; 0x4678 <usr_mathTestInit+0x4e>
   {
      return gt_mathObjct.t_mathThread;
    466e:	80 91 98 24 	lds	r24, 0x2498
    4672:	90 91 99 24 	lds	r25, 0x2499
    4676:	15 c0       	rjmp	.+42     	; 0x46a2 <usr_mathTestInit+0x78>
   }/*End if( gt_mathObjct.t_mathThread < 0)*/

   /*------------------------------------------------------------------------*
    * Open a handle to the signal driver.
    *------------------------------------------------------------------------*/
   gt_mathObjct.t_signalHndl = arb_open( "signalDevice0",
    4678:	8a e0       	ldi	r24, 0x0A	; 10
    467a:	91 e2       	ldi	r25, 0x21	; 33
    467c:	63 e0       	ldi	r22, 0x03	; 3
    467e:	0e 94 c8 6f 	call	0xdf90	; 0xdf90 <arb_open>
    4682:	80 93 9a 24 	sts	0x249A, r24
    4686:	90 93 9b 24 	sts	0x249B, r25
                                         ARB_O_READ |
                                         ARB_O_WRITE);

   if( gt_mathObjct.t_signalHndl < 0)
    468a:	80 91 9a 24 	lds	r24, 0x249A
    468e:	90 91 9b 24 	lds	r25, 0x249B
    4692:	99 23       	and	r25, r25
    4694:	2c f4       	brge	.+10     	; 0x46a0 <usr_mathTestInit+0x76>
   {
      return gt_mathObjct.t_signalHndl;
    4696:	80 91 9a 24 	lds	r24, 0x249A
    469a:	90 91 9b 24 	lds	r25, 0x249B
    469e:	01 c0       	rjmp	.+2      	; 0x46a2 <usr_mathTestInit+0x78>
   }

   return ARB_PASSED;
    46a0:	80 e0       	ldi	r24, 0x00	; 0

}/*End usr_mathTestInit*/
    46a2:	df 91       	pop	r29
    46a4:	cf 91       	pop	r28
    46a6:	0f 91       	pop	r16
    46a8:	08 95       	ret

000046aa <findGpioIntElement>:
    46aa:	cf 93       	push	r28
    46ac:	df 93       	push	r29
    46ae:	0f 92       	push	r0
    46b0:	0f 92       	push	r0
    46b2:	cd b7       	in	r28, 0x3d	; 61
    46b4:	de b7       	in	r29, 0x3e	; 62
    46b6:	e0 91 18 21 	lds	r30, 0x2118
    46ba:	f0 91 19 21 	lds	r31, 0x2119
    46be:	22 81       	ldd	r18, Z+2	; 0x02
    46c0:	33 81       	ldd	r19, Z+3	; 0x03
    46c2:	e0 91 18 21 	lds	r30, 0x2118
    46c6:	f0 91 19 21 	lds	r31, 0x2119
    46ca:	0c c0       	rjmp	.+24     	; 0x46e4 <findGpioIntElement+0x3a>
    46cc:	e9 81       	ldd	r30, Y+1	; 0x01
    46ce:	fa 81       	ldd	r31, Y+2	; 0x02
    46d0:	01 90       	ld	r0, Z+
    46d2:	f0 81       	ld	r31, Z
    46d4:	e0 2d       	mov	r30, r0
    46d6:	90 81       	ld	r25, Z
    46d8:	98 17       	cp	r25, r24
    46da:	69 f0       	breq	.+26     	; 0x46f6 <findGpioIntElement+0x4c>
    46dc:	21 50       	subi	r18, 0x01	; 1
    46de:	30 40       	sbci	r19, 0x00	; 0
    46e0:	e9 81       	ldd	r30, Y+1	; 0x01
    46e2:	fa 81       	ldd	r31, Y+2	; 0x02
    46e4:	40 85       	ldd	r20, Z+8	; 0x08
    46e6:	51 85       	ldd	r21, Z+9	; 0x09
    46e8:	49 83       	std	Y+1, r20	; 0x01
    46ea:	5a 83       	std	Y+2, r21	; 0x02
    46ec:	12 16       	cp	r1, r18
    46ee:	13 06       	cpc	r1, r19
    46f0:	6c f3       	brlt	.-38     	; 0x46cc <findGpioIntElement+0x22>
    46f2:	e0 e0       	ldi	r30, 0x00	; 0
    46f4:	f0 e0       	ldi	r31, 0x00	; 0
    46f6:	cf 01       	movw	r24, r30
    46f8:	0f 90       	pop	r0
    46fa:	0f 90       	pop	r0
    46fc:	df 91       	pop	r29
    46fe:	cf 91       	pop	r28
    4700:	08 95       	ret

00004702 <createIntHandle>:
    4702:	cf 93       	push	r28
    4704:	df 93       	push	r29
    4706:	0f 92       	push	r0
    4708:	0f 92       	push	r0
    470a:	cd b7       	in	r28, 0x3d	; 61
    470c:	de b7       	in	r29, 0x3e	; 62
    470e:	84 e0       	ldi	r24, 0x04	; 4
    4710:	90 e0       	ldi	r25, 0x00	; 0
    4712:	0e 94 5e 8b 	call	0x116bc	; 0x116bc <utl_createLink>
    4716:	89 83       	std	Y+1, r24	; 0x01
    4718:	9a 83       	std	Y+2, r25	; 0x02
    471a:	89 81       	ldd	r24, Y+1	; 0x01
    471c:	9a 81       	ldd	r25, Y+2	; 0x02
    471e:	97 fd       	sbrc	r25, 7
    4720:	0c c0       	rjmp	.+24     	; 0x473a <createIntHandle+0x38>
    4722:	80 91 18 21 	lds	r24, 0x2118
    4726:	90 91 19 21 	lds	r25, 0x2119
    472a:	69 81       	ldd	r22, Y+1	; 0x01
    472c:	7a 81       	ldd	r23, Y+2	; 0x02
    472e:	41 e0       	ldi	r20, 0x01	; 1
    4730:	0e 94 6e 89 	call	0x112dc	; 0x112dc <utl_insertLink>
    4734:	89 81       	ldd	r24, Y+1	; 0x01
    4736:	9a 81       	ldd	r25, Y+2	; 0x02
    4738:	02 c0       	rjmp	.+4      	; 0x473e <createIntHandle+0x3c>
    473a:	8e ef       	ldi	r24, 0xFE	; 254
    473c:	9f ef       	ldi	r25, 0xFF	; 255
    473e:	0f 90       	pop	r0
    4740:	0f 90       	pop	r0
    4742:	df 91       	pop	r29
    4744:	cf 91       	pop	r28
    4746:	08 95       	ret

00004748 <confInt>:
    4748:	cf 92       	push	r12
    474a:	df 92       	push	r13
    474c:	ef 92       	push	r14
    474e:	ff 92       	push	r15
    4750:	0f 93       	push	r16
    4752:	1f 93       	push	r17
    4754:	cf 93       	push	r28
    4756:	df 93       	push	r29
    4758:	0f 92       	push	r0
    475a:	0f 92       	push	r0
    475c:	cd b7       	in	r28, 0x3d	; 61
    475e:	de b7       	in	r29, 0x3e	; 62
    4760:	8c 01       	movw	r16, r24
    4762:	7b 01       	movw	r14, r22
    4764:	c4 2e       	mov	r12, r20
    4766:	d2 2e       	mov	r13, r18
    4768:	db 01       	movw	r26, r22
    476a:	8c 91       	ld	r24, X
    476c:	88 30       	cpi	r24, 0x08	; 8
    476e:	c1 f0       	breq	.+48     	; 0x47a0 <confInt+0x58>
    4770:	89 30       	cpi	r24, 0x09	; 9
    4772:	48 f4       	brcc	.+18     	; 0x4786 <confInt+0x3e>
    4774:	81 30       	cpi	r24, 0x01	; 1
    4776:	08 f4       	brcc	.+2      	; 0x477a <confInt+0x32>
    4778:	26 c1       	rjmp	.+588    	; 0x49c6 <confInt+0x27e>
    477a:	83 30       	cpi	r24, 0x03	; 3
    477c:	88 f0       	brcs	.+34     	; 0x47a0 <confInt+0x58>
    477e:	84 30       	cpi	r24, 0x04	; 4
    4780:	09 f0       	breq	.+2      	; 0x4784 <confInt+0x3c>
    4782:	21 c1       	rjmp	.+578    	; 0x49c6 <confInt+0x27e>
    4784:	0d c0       	rjmp	.+26     	; 0x47a0 <confInt+0x58>
    4786:	80 32       	cpi	r24, 0x20	; 32
    4788:	59 f0       	breq	.+22     	; 0x47a0 <confInt+0x58>
    478a:	81 32       	cpi	r24, 0x21	; 33
    478c:	20 f4       	brcc	.+8      	; 0x4796 <confInt+0x4e>
    478e:	80 31       	cpi	r24, 0x10	; 16
    4790:	09 f0       	breq	.+2      	; 0x4794 <confInt+0x4c>
    4792:	19 c1       	rjmp	.+562    	; 0x49c6 <confInt+0x27e>
    4794:	05 c0       	rjmp	.+10     	; 0x47a0 <confInt+0x58>
    4796:	80 34       	cpi	r24, 0x40	; 64
    4798:	19 f0       	breq	.+6      	; 0x47a0 <confInt+0x58>
    479a:	80 38       	cpi	r24, 0x80	; 128
    479c:	09 f0       	breq	.+2      	; 0x47a0 <confInt+0x58>
    479e:	13 c1       	rjmp	.+550    	; 0x49c6 <confInt+0x27e>
    47a0:	f8 01       	movw	r30, r16
    47a2:	90 81       	ld	r25, Z
    47a4:	98 23       	and	r25, r24
    47a6:	09 f0       	breq	.+2      	; 0x47aa <confInt+0x62>
    47a8:	11 c1       	rjmp	.+546    	; 0x49cc <confInt+0x284>
    47aa:	8c 2d       	mov	r24, r12
    47ac:	0e 94 55 23 	call	0x46aa	; 0x46aa <findGpioIntElement>
    47b0:	00 97       	sbiw	r24, 0x00	; 0
    47b2:	09 f0       	breq	.+2      	; 0x47b6 <confInt+0x6e>
    47b4:	80 c0       	rjmp	.+256    	; 0x48b6 <confInt+0x16e>
    47b6:	0e 94 81 23 	call	0x4702	; 0x4702 <createIntHandle>
    47ba:	89 83       	std	Y+1, r24	; 0x01
    47bc:	9a 83       	std	Y+2, r25	; 0x02
    47be:	89 81       	ldd	r24, Y+1	; 0x01
    47c0:	9a 81       	ldd	r25, Y+2	; 0x02
    47c2:	97 fd       	sbrc	r25, 7
    47c4:	09 c1       	rjmp	.+530    	; 0x49d8 <confInt+0x290>
    47c6:	e9 81       	ldd	r30, Y+1	; 0x01
    47c8:	fa 81       	ldd	r31, Y+2	; 0x02
    47ca:	01 90       	ld	r0, Z+
    47cc:	f0 81       	ld	r31, Z
    47ce:	e0 2d       	mov	r30, r0
    47d0:	c0 82       	st	Z, r12
    47d2:	d7 01       	movw	r26, r14
    47d4:	8c 91       	ld	r24, X
    47d6:	81 83       	std	Z+1, r24	; 0x01
    47d8:	12 96       	adiw	r26, 0x02	; 2
    47da:	8d 91       	ld	r24, X+
    47dc:	9c 91       	ld	r25, X
    47de:	13 97       	sbiw	r26, 0x03	; 3
    47e0:	82 83       	std	Z+2, r24	; 0x02
    47e2:	93 83       	std	Z+3, r25	; 0x03
    47e4:	8c 91       	ld	r24, X
    47e6:	88 30       	cpi	r24, 0x08	; 8
    47e8:	99 f1       	breq	.+102    	; 0x4850 <confInt+0x108>
    47ea:	89 30       	cpi	r24, 0x09	; 9
    47ec:	40 f4       	brcc	.+16     	; 0x47fe <confInt+0xb6>
    47ee:	82 30       	cpi	r24, 0x02	; 2
    47f0:	e9 f0       	breq	.+58     	; 0x482c <confInt+0xe4>
    47f2:	84 30       	cpi	r24, 0x04	; 4
    47f4:	21 f1       	breq	.+72     	; 0x483e <confInt+0xf6>
    47f6:	81 30       	cpi	r24, 0x01	; 1
    47f8:	09 f0       	breq	.+2      	; 0x47fc <confInt+0xb4>
    47fa:	55 c0       	rjmp	.+170    	; 0x48a6 <confInt+0x15e>
    47fc:	0e c0       	rjmp	.+28     	; 0x481a <confInt+0xd2>
    47fe:	80 32       	cpi	r24, 0x20	; 32
    4800:	c9 f1       	breq	.+114    	; 0x4874 <confInt+0x12c>
    4802:	81 32       	cpi	r24, 0x21	; 33
    4804:	20 f4       	brcc	.+8      	; 0x480e <confInt+0xc6>
    4806:	80 31       	cpi	r24, 0x10	; 16
    4808:	09 f0       	breq	.+2      	; 0x480c <confInt+0xc4>
    480a:	4d c0       	rjmp	.+154    	; 0x48a6 <confInt+0x15e>
    480c:	2a c0       	rjmp	.+84     	; 0x4862 <confInt+0x11a>
    480e:	80 34       	cpi	r24, 0x40	; 64
    4810:	d1 f1       	breq	.+116    	; 0x4886 <confInt+0x13e>
    4812:	80 38       	cpi	r24, 0x80	; 128
    4814:	09 f0       	breq	.+2      	; 0x4818 <confInt+0xd0>
    4816:	47 c0       	rjmp	.+142    	; 0x48a6 <confInt+0x15e>
    4818:	3f c0       	rjmp	.+126    	; 0x4898 <confInt+0x150>
    481a:	f8 01       	movw	r30, r16
    481c:	80 89       	ldd	r24, Z+16	; 0x10
    481e:	d7 01       	movw	r26, r14
    4820:	11 96       	adiw	r26, 0x01	; 1
    4822:	9c 91       	ld	r25, X
    4824:	11 97       	sbiw	r26, 0x01	; 1
    4826:	89 2b       	or	r24, r25
    4828:	80 8b       	std	Z+16, r24	; 0x10
    482a:	3d c0       	rjmp	.+122    	; 0x48a6 <confInt+0x15e>
    482c:	f8 01       	movw	r30, r16
    482e:	81 89       	ldd	r24, Z+17	; 0x11
    4830:	d7 01       	movw	r26, r14
    4832:	11 96       	adiw	r26, 0x01	; 1
    4834:	9c 91       	ld	r25, X
    4836:	11 97       	sbiw	r26, 0x01	; 1
    4838:	89 2b       	or	r24, r25
    483a:	81 8b       	std	Z+17, r24	; 0x11
    483c:	34 c0       	rjmp	.+104    	; 0x48a6 <confInt+0x15e>
    483e:	f8 01       	movw	r30, r16
    4840:	82 89       	ldd	r24, Z+18	; 0x12
    4842:	d7 01       	movw	r26, r14
    4844:	11 96       	adiw	r26, 0x01	; 1
    4846:	9c 91       	ld	r25, X
    4848:	11 97       	sbiw	r26, 0x01	; 1
    484a:	89 2b       	or	r24, r25
    484c:	82 8b       	std	Z+18, r24	; 0x12
    484e:	2b c0       	rjmp	.+86     	; 0x48a6 <confInt+0x15e>
    4850:	f8 01       	movw	r30, r16
    4852:	83 89       	ldd	r24, Z+19	; 0x13
    4854:	d7 01       	movw	r26, r14
    4856:	11 96       	adiw	r26, 0x01	; 1
    4858:	9c 91       	ld	r25, X
    485a:	11 97       	sbiw	r26, 0x01	; 1
    485c:	89 2b       	or	r24, r25
    485e:	83 8b       	std	Z+19, r24	; 0x13
    4860:	22 c0       	rjmp	.+68     	; 0x48a6 <confInt+0x15e>
    4862:	f8 01       	movw	r30, r16
    4864:	84 89       	ldd	r24, Z+20	; 0x14
    4866:	d7 01       	movw	r26, r14
    4868:	11 96       	adiw	r26, 0x01	; 1
    486a:	9c 91       	ld	r25, X
    486c:	11 97       	sbiw	r26, 0x01	; 1
    486e:	89 2b       	or	r24, r25
    4870:	84 8b       	std	Z+20, r24	; 0x14
    4872:	19 c0       	rjmp	.+50     	; 0x48a6 <confInt+0x15e>
    4874:	f8 01       	movw	r30, r16
    4876:	85 89       	ldd	r24, Z+21	; 0x15
    4878:	d7 01       	movw	r26, r14
    487a:	11 96       	adiw	r26, 0x01	; 1
    487c:	9c 91       	ld	r25, X
    487e:	11 97       	sbiw	r26, 0x01	; 1
    4880:	89 2b       	or	r24, r25
    4882:	85 8b       	std	Z+21, r24	; 0x15
    4884:	10 c0       	rjmp	.+32     	; 0x48a6 <confInt+0x15e>
    4886:	f8 01       	movw	r30, r16
    4888:	86 89       	ldd	r24, Z+22	; 0x16
    488a:	d7 01       	movw	r26, r14
    488c:	11 96       	adiw	r26, 0x01	; 1
    488e:	9c 91       	ld	r25, X
    4890:	11 97       	sbiw	r26, 0x01	; 1
    4892:	89 2b       	or	r24, r25
    4894:	86 8b       	std	Z+22, r24	; 0x16
    4896:	07 c0       	rjmp	.+14     	; 0x48a6 <confInt+0x15e>
    4898:	f8 01       	movw	r30, r16
    489a:	87 89       	ldd	r24, Z+23	; 0x17
    489c:	d7 01       	movw	r26, r14
    489e:	11 96       	adiw	r26, 0x01	; 1
    48a0:	9c 91       	ld	r25, X
    48a2:	89 2b       	or	r24, r25
    48a4:	87 8b       	std	Z+23, r24	; 0x17
    48a6:	f8 01       	movw	r30, r16
    48a8:	81 85       	ldd	r24, Z+9	; 0x09
    48aa:	83 60       	ori	r24, 0x03	; 3
    48ac:	81 87       	std	Z+9, r24	; 0x09
    48ae:	d7 01       	movw	r26, r14
    48b0:	8c 91       	ld	r24, X
    48b2:	82 87       	std	Z+10, r24	; 0x0a
    48b4:	85 c0       	rjmp	.+266    	; 0x49c0 <confInt+0x278>
    48b6:	8d 2d       	mov	r24, r13
    48b8:	0e 94 55 23 	call	0x46aa	; 0x46aa <findGpioIntElement>
    48bc:	00 97       	sbiw	r24, 0x00	; 0
    48be:	09 f0       	breq	.+2      	; 0x48c2 <confInt+0x17a>
    48c0:	88 c0       	rjmp	.+272    	; 0x49d2 <confInt+0x28a>
    48c2:	0e 94 81 23 	call	0x4702	; 0x4702 <createIntHandle>
    48c6:	89 83       	std	Y+1, r24	; 0x01
    48c8:	9a 83       	std	Y+2, r25	; 0x02
    48ca:	89 81       	ldd	r24, Y+1	; 0x01
    48cc:	9a 81       	ldd	r25, Y+2	; 0x02
    48ce:	97 fd       	sbrc	r25, 7
    48d0:	83 c0       	rjmp	.+262    	; 0x49d8 <confInt+0x290>
    48d2:	e9 81       	ldd	r30, Y+1	; 0x01
    48d4:	fa 81       	ldd	r31, Y+2	; 0x02
    48d6:	01 90       	ld	r0, Z+
    48d8:	f0 81       	ld	r31, Z
    48da:	e0 2d       	mov	r30, r0
    48dc:	d0 82       	st	Z, r13
    48de:	d7 01       	movw	r26, r14
    48e0:	8c 91       	ld	r24, X
    48e2:	81 83       	std	Z+1, r24	; 0x01
    48e4:	12 96       	adiw	r26, 0x02	; 2
    48e6:	8d 91       	ld	r24, X+
    48e8:	9c 91       	ld	r25, X
    48ea:	13 97       	sbiw	r26, 0x03	; 3
    48ec:	82 83       	std	Z+2, r24	; 0x02
    48ee:	93 83       	std	Z+3, r25	; 0x03
    48f0:	8c 91       	ld	r24, X
    48f2:	88 30       	cpi	r24, 0x08	; 8
    48f4:	99 f1       	breq	.+102    	; 0x495c <confInt+0x214>
    48f6:	89 30       	cpi	r24, 0x09	; 9
    48f8:	40 f4       	brcc	.+16     	; 0x490a <confInt+0x1c2>
    48fa:	82 30       	cpi	r24, 0x02	; 2
    48fc:	e9 f0       	breq	.+58     	; 0x4938 <confInt+0x1f0>
    48fe:	84 30       	cpi	r24, 0x04	; 4
    4900:	21 f1       	breq	.+72     	; 0x494a <confInt+0x202>
    4902:	81 30       	cpi	r24, 0x01	; 1
    4904:	09 f0       	breq	.+2      	; 0x4908 <confInt+0x1c0>
    4906:	55 c0       	rjmp	.+170    	; 0x49b2 <confInt+0x26a>
    4908:	0e c0       	rjmp	.+28     	; 0x4926 <confInt+0x1de>
    490a:	80 32       	cpi	r24, 0x20	; 32
    490c:	c9 f1       	breq	.+114    	; 0x4980 <confInt+0x238>
    490e:	81 32       	cpi	r24, 0x21	; 33
    4910:	20 f4       	brcc	.+8      	; 0x491a <confInt+0x1d2>
    4912:	80 31       	cpi	r24, 0x10	; 16
    4914:	09 f0       	breq	.+2      	; 0x4918 <confInt+0x1d0>
    4916:	4d c0       	rjmp	.+154    	; 0x49b2 <confInt+0x26a>
    4918:	2a c0       	rjmp	.+84     	; 0x496e <confInt+0x226>
    491a:	80 34       	cpi	r24, 0x40	; 64
    491c:	d1 f1       	breq	.+116    	; 0x4992 <confInt+0x24a>
    491e:	80 38       	cpi	r24, 0x80	; 128
    4920:	09 f0       	breq	.+2      	; 0x4924 <confInt+0x1dc>
    4922:	47 c0       	rjmp	.+142    	; 0x49b2 <confInt+0x26a>
    4924:	3f c0       	rjmp	.+126    	; 0x49a4 <confInt+0x25c>
    4926:	f8 01       	movw	r30, r16
    4928:	80 89       	ldd	r24, Z+16	; 0x10
    492a:	d7 01       	movw	r26, r14
    492c:	11 96       	adiw	r26, 0x01	; 1
    492e:	9c 91       	ld	r25, X
    4930:	11 97       	sbiw	r26, 0x01	; 1
    4932:	89 2b       	or	r24, r25
    4934:	80 8b       	std	Z+16, r24	; 0x10
    4936:	3d c0       	rjmp	.+122    	; 0x49b2 <confInt+0x26a>
    4938:	f8 01       	movw	r30, r16
    493a:	81 89       	ldd	r24, Z+17	; 0x11
    493c:	d7 01       	movw	r26, r14
    493e:	11 96       	adiw	r26, 0x01	; 1
    4940:	9c 91       	ld	r25, X
    4942:	11 97       	sbiw	r26, 0x01	; 1
    4944:	89 2b       	or	r24, r25
    4946:	81 8b       	std	Z+17, r24	; 0x11
    4948:	34 c0       	rjmp	.+104    	; 0x49b2 <confInt+0x26a>
    494a:	f8 01       	movw	r30, r16
    494c:	82 89       	ldd	r24, Z+18	; 0x12
    494e:	d7 01       	movw	r26, r14
    4950:	11 96       	adiw	r26, 0x01	; 1
    4952:	9c 91       	ld	r25, X
    4954:	11 97       	sbiw	r26, 0x01	; 1
    4956:	89 2b       	or	r24, r25
    4958:	82 8b       	std	Z+18, r24	; 0x12
    495a:	2b c0       	rjmp	.+86     	; 0x49b2 <confInt+0x26a>
    495c:	f8 01       	movw	r30, r16
    495e:	83 89       	ldd	r24, Z+19	; 0x13
    4960:	d7 01       	movw	r26, r14
    4962:	11 96       	adiw	r26, 0x01	; 1
    4964:	9c 91       	ld	r25, X
    4966:	11 97       	sbiw	r26, 0x01	; 1
    4968:	89 2b       	or	r24, r25
    496a:	83 8b       	std	Z+19, r24	; 0x13
    496c:	22 c0       	rjmp	.+68     	; 0x49b2 <confInt+0x26a>
    496e:	f8 01       	movw	r30, r16
    4970:	84 89       	ldd	r24, Z+20	; 0x14
    4972:	d7 01       	movw	r26, r14
    4974:	11 96       	adiw	r26, 0x01	; 1
    4976:	9c 91       	ld	r25, X
    4978:	11 97       	sbiw	r26, 0x01	; 1
    497a:	89 2b       	or	r24, r25
    497c:	84 8b       	std	Z+20, r24	; 0x14
    497e:	19 c0       	rjmp	.+50     	; 0x49b2 <confInt+0x26a>
    4980:	f8 01       	movw	r30, r16
    4982:	85 89       	ldd	r24, Z+21	; 0x15
    4984:	d7 01       	movw	r26, r14
    4986:	11 96       	adiw	r26, 0x01	; 1
    4988:	9c 91       	ld	r25, X
    498a:	11 97       	sbiw	r26, 0x01	; 1
    498c:	89 2b       	or	r24, r25
    498e:	85 8b       	std	Z+21, r24	; 0x15
    4990:	10 c0       	rjmp	.+32     	; 0x49b2 <confInt+0x26a>
    4992:	f8 01       	movw	r30, r16
    4994:	86 89       	ldd	r24, Z+22	; 0x16
    4996:	d7 01       	movw	r26, r14
    4998:	11 96       	adiw	r26, 0x01	; 1
    499a:	9c 91       	ld	r25, X
    499c:	11 97       	sbiw	r26, 0x01	; 1
    499e:	89 2b       	or	r24, r25
    49a0:	86 8b       	std	Z+22, r24	; 0x16
    49a2:	07 c0       	rjmp	.+14     	; 0x49b2 <confInt+0x26a>
    49a4:	f8 01       	movw	r30, r16
    49a6:	87 89       	ldd	r24, Z+23	; 0x17
    49a8:	d7 01       	movw	r26, r14
    49aa:	11 96       	adiw	r26, 0x01	; 1
    49ac:	9c 91       	ld	r25, X
    49ae:	89 2b       	or	r24, r25
    49b0:	87 8b       	std	Z+23, r24	; 0x17
    49b2:	f8 01       	movw	r30, r16
    49b4:	81 85       	ldd	r24, Z+9	; 0x09
    49b6:	8c 60       	ori	r24, 0x0C	; 12
    49b8:	81 87       	std	Z+9, r24	; 0x09
    49ba:	d7 01       	movw	r26, r14
    49bc:	8c 91       	ld	r24, X
    49be:	83 87       	std	Z+11, r24	; 0x0b
    49c0:	89 81       	ldd	r24, Y+1	; 0x01
    49c2:	9a 81       	ldd	r25, Y+2	; 0x02
    49c4:	0b c0       	rjmp	.+22     	; 0x49dc <confInt+0x294>
    49c6:	8f ef       	ldi	r24, 0xFF	; 255
    49c8:	9f ef       	ldi	r25, 0xFF	; 255
    49ca:	08 c0       	rjmp	.+16     	; 0x49dc <confInt+0x294>
    49cc:	8a ef       	ldi	r24, 0xFA	; 250
    49ce:	9f ef       	ldi	r25, 0xFF	; 255
    49d0:	05 c0       	rjmp	.+10     	; 0x49dc <confInt+0x294>
    49d2:	89 ef       	ldi	r24, 0xF9	; 249
    49d4:	9f ef       	ldi	r25, 0xFF	; 255
    49d6:	02 c0       	rjmp	.+4      	; 0x49dc <confInt+0x294>
    49d8:	8e ef       	ldi	r24, 0xFE	; 254
    49da:	9f ef       	ldi	r25, 0xFF	; 255
    49dc:	0f 90       	pop	r0
    49de:	0f 90       	pop	r0
    49e0:	df 91       	pop	r29
    49e2:	cf 91       	pop	r28
    49e4:	1f 91       	pop	r17
    49e6:	0f 91       	pop	r16
    49e8:	ff 90       	pop	r15
    49ea:	ef 90       	pop	r14
    49ec:	df 90       	pop	r13
    49ee:	cf 90       	pop	r12
    49f0:	08 95       	ret

000049f2 <confPort>:
    49f2:	fc 01       	movw	r30, r24
    49f4:	db 01       	movw	r26, r22
    49f6:	11 96       	adiw	r26, 0x01	; 1
    49f8:	8c 91       	ld	r24, X
    49fa:	11 97       	sbiw	r26, 0x01	; 1
    49fc:	88 23       	and	r24, r24
    49fe:	09 f1       	breq	.+66     	; 0x4a42 <confPort+0x50>
    4a00:	12 96       	adiw	r26, 0x02	; 2
    4a02:	9c 91       	ld	r25, X
    4a04:	12 97       	sbiw	r26, 0x02	; 2
    4a06:	99 23       	and	r25, r25
    4a08:	11 f0       	breq	.+4      	; 0x4a0e <confPort+0x1c>
    4a0a:	86 83       	std	Z+6, r24	; 0x06
    4a0c:	01 c0       	rjmp	.+2      	; 0x4a10 <confPort+0x1e>
    4a0e:	85 83       	std	Z+5, r24	; 0x05
    4a10:	11 96       	adiw	r26, 0x01	; 1
    4a12:	8c 91       	ld	r24, X
    4a14:	11 97       	sbiw	r26, 0x01	; 1
    4a16:	81 83       	std	Z+1, r24	; 0x01
    4a18:	11 96       	adiw	r26, 0x01	; 1
    4a1a:	8c 91       	ld	r24, X
    4a1c:	11 97       	sbiw	r26, 0x01	; 1
    4a1e:	80 93 b0 00 	sts	0x00B0, r24
    4a22:	14 96       	adiw	r26, 0x04	; 4
    4a24:	8c 91       	ld	r24, X
    4a26:	14 97       	sbiw	r26, 0x04	; 4
    4a28:	81 30       	cpi	r24, 0x01	; 1
    4a2a:	29 f0       	breq	.+10     	; 0x4a36 <confPort+0x44>
    4a2c:	81 30       	cpi	r24, 0x01	; 1
    4a2e:	40 f0       	brcs	.+16     	; 0x4a40 <confPort+0x4e>
    4a30:	82 30       	cpi	r24, 0x02	; 2
    4a32:	31 f4       	brne	.+12     	; 0x4a40 <confPort+0x4e>
    4a34:	02 c0       	rjmp	.+4      	; 0x4a3a <confPort+0x48>
    4a36:	80 e2       	ldi	r24, 0x20	; 32
    4a38:	01 c0       	rjmp	.+2      	; 0x4a3c <confPort+0x4a>
    4a3a:	88 e2       	ldi	r24, 0x28	; 40
    4a3c:	80 8b       	std	Z+16, r24	; 0x10
    4a3e:	01 c0       	rjmp	.+2      	; 0x4a42 <confPort+0x50>
    4a40:	10 8a       	std	Z+16, r1	; 0x10
    4a42:	8c 91       	ld	r24, X
    4a44:	88 23       	and	r24, r24
    4a46:	c1 f0       	breq	.+48     	; 0x4a78 <confPort+0x86>
    4a48:	11 86       	std	Z+9, r1	; 0x09
    4a4a:	8c 91       	ld	r24, X
    4a4c:	82 83       	std	Z+2, r24	; 0x02
    4a4e:	8c 91       	ld	r24, X
    4a50:	80 93 b0 00 	sts	0x00B0, r24
    4a54:	13 96       	adiw	r26, 0x03	; 3
    4a56:	8c 91       	ld	r24, X
    4a58:	13 97       	sbiw	r26, 0x03	; 3
    4a5a:	84 30       	cpi	r24, 0x04	; 4
    4a5c:	29 f0       	breq	.+10     	; 0x4a68 <confPort+0x76>
    4a5e:	85 30       	cpi	r24, 0x05	; 5
    4a60:	29 f0       	breq	.+10     	; 0x4a6c <confPort+0x7a>
    4a62:	83 30       	cpi	r24, 0x03	; 3
    4a64:	41 f4       	brne	.+16     	; 0x4a76 <confPort+0x84>
    4a66:	04 c0       	rjmp	.+8      	; 0x4a70 <confPort+0x7e>
    4a68:	80 e1       	ldi	r24, 0x10	; 16
    4a6a:	03 c0       	rjmp	.+6      	; 0x4a72 <confPort+0x80>
    4a6c:	88 e1       	ldi	r24, 0x18	; 24
    4a6e:	01 c0       	rjmp	.+2      	; 0x4a72 <confPort+0x80>
    4a70:	88 e0       	ldi	r24, 0x08	; 8
    4a72:	80 8b       	std	Z+16, r24	; 0x10
    4a74:	08 95       	ret
    4a76:	10 8a       	std	Z+16, r1	; 0x10
    4a78:	08 95       	ret

00004a7a <__vector_66>:
    4a7a:	1f 92       	push	r1
    4a7c:	0f 92       	push	r0
    4a7e:	0f b6       	in	r0, 0x3f	; 63
    4a80:	0f 92       	push	r0
    4a82:	08 b6       	in	r0, 0x38	; 56
    4a84:	0f 92       	push	r0
    4a86:	09 b6       	in	r0, 0x39	; 57
    4a88:	0f 92       	push	r0
    4a8a:	0b b6       	in	r0, 0x3b	; 59
    4a8c:	0f 92       	push	r0
    4a8e:	11 24       	eor	r1, r1
    4a90:	2f 93       	push	r18
    4a92:	3f 93       	push	r19
    4a94:	4f 93       	push	r20
    4a96:	5f 93       	push	r21
    4a98:	6f 93       	push	r22
    4a9a:	7f 93       	push	r23
    4a9c:	8f 93       	push	r24
    4a9e:	9f 93       	push	r25
    4aa0:	af 93       	push	r26
    4aa2:	bf 93       	push	r27
    4aa4:	ef 93       	push	r30
    4aa6:	ff 93       	push	r31
    4aa8:	80 e0       	ldi	r24, 0x00	; 0
    4aaa:	0e 94 55 23 	call	0x46aa	; 0x46aa <findGpioIntElement>
    4aae:	dc 01       	movw	r26, r24
    4ab0:	00 97       	sbiw	r24, 0x00	; 0
    4ab2:	51 f0       	breq	.+20     	; 0x4ac8 <__vector_66+0x4e>
    4ab4:	12 96       	adiw	r26, 0x02	; 2
    4ab6:	ed 91       	ld	r30, X+
    4ab8:	fc 91       	ld	r31, X
    4aba:	13 97       	sbiw	r26, 0x03	; 3
    4abc:	30 97       	sbiw	r30, 0x00	; 0
    4abe:	21 f0       	breq	.+8      	; 0x4ac8 <__vector_66+0x4e>
    4ac0:	80 e0       	ldi	r24, 0x00	; 0
    4ac2:	11 96       	adiw	r26, 0x01	; 1
    4ac4:	6c 91       	ld	r22, X
    4ac6:	19 95       	eicall
    4ac8:	ff 91       	pop	r31
    4aca:	ef 91       	pop	r30
    4acc:	bf 91       	pop	r27
    4ace:	af 91       	pop	r26
    4ad0:	9f 91       	pop	r25
    4ad2:	8f 91       	pop	r24
    4ad4:	7f 91       	pop	r23
    4ad6:	6f 91       	pop	r22
    4ad8:	5f 91       	pop	r21
    4ada:	4f 91       	pop	r20
    4adc:	3f 91       	pop	r19
    4ade:	2f 91       	pop	r18
    4ae0:	0f 90       	pop	r0
    4ae2:	0b be       	out	0x3b, r0	; 59
    4ae4:	0f 90       	pop	r0
    4ae6:	09 be       	out	0x39, r0	; 57
    4ae8:	0f 90       	pop	r0
    4aea:	08 be       	out	0x38, r0	; 56
    4aec:	0f 90       	pop	r0
    4aee:	0f be       	out	0x3f, r0	; 63
    4af0:	0f 90       	pop	r0
    4af2:	1f 90       	pop	r1
    4af4:	18 95       	reti

00004af6 <__vector_67>:
    4af6:	1f 92       	push	r1
    4af8:	0f 92       	push	r0
    4afa:	0f b6       	in	r0, 0x3f	; 63
    4afc:	0f 92       	push	r0
    4afe:	08 b6       	in	r0, 0x38	; 56
    4b00:	0f 92       	push	r0
    4b02:	09 b6       	in	r0, 0x39	; 57
    4b04:	0f 92       	push	r0
    4b06:	0b b6       	in	r0, 0x3b	; 59
    4b08:	0f 92       	push	r0
    4b0a:	11 24       	eor	r1, r1
    4b0c:	2f 93       	push	r18
    4b0e:	3f 93       	push	r19
    4b10:	4f 93       	push	r20
    4b12:	5f 93       	push	r21
    4b14:	6f 93       	push	r22
    4b16:	7f 93       	push	r23
    4b18:	8f 93       	push	r24
    4b1a:	9f 93       	push	r25
    4b1c:	af 93       	push	r26
    4b1e:	bf 93       	push	r27
    4b20:	ef 93       	push	r30
    4b22:	ff 93       	push	r31
    4b24:	81 e0       	ldi	r24, 0x01	; 1
    4b26:	0e 94 55 23 	call	0x46aa	; 0x46aa <findGpioIntElement>
    4b2a:	dc 01       	movw	r26, r24
    4b2c:	00 97       	sbiw	r24, 0x00	; 0
    4b2e:	51 f0       	breq	.+20     	; 0x4b44 <__vector_67+0x4e>
    4b30:	12 96       	adiw	r26, 0x02	; 2
    4b32:	ed 91       	ld	r30, X+
    4b34:	fc 91       	ld	r31, X
    4b36:	13 97       	sbiw	r26, 0x03	; 3
    4b38:	30 97       	sbiw	r30, 0x00	; 0
    4b3a:	21 f0       	breq	.+8      	; 0x4b44 <__vector_67+0x4e>
    4b3c:	80 e0       	ldi	r24, 0x00	; 0
    4b3e:	11 96       	adiw	r26, 0x01	; 1
    4b40:	6c 91       	ld	r22, X
    4b42:	19 95       	eicall
    4b44:	ff 91       	pop	r31
    4b46:	ef 91       	pop	r30
    4b48:	bf 91       	pop	r27
    4b4a:	af 91       	pop	r26
    4b4c:	9f 91       	pop	r25
    4b4e:	8f 91       	pop	r24
    4b50:	7f 91       	pop	r23
    4b52:	6f 91       	pop	r22
    4b54:	5f 91       	pop	r21
    4b56:	4f 91       	pop	r20
    4b58:	3f 91       	pop	r19
    4b5a:	2f 91       	pop	r18
    4b5c:	0f 90       	pop	r0
    4b5e:	0b be       	out	0x3b, r0	; 59
    4b60:	0f 90       	pop	r0
    4b62:	09 be       	out	0x39, r0	; 57
    4b64:	0f 90       	pop	r0
    4b66:	08 be       	out	0x38, r0	; 56
    4b68:	0f 90       	pop	r0
    4b6a:	0f be       	out	0x3f, r0	; 63
    4b6c:	0f 90       	pop	r0
    4b6e:	1f 90       	pop	r1
    4b70:	18 95       	reti

00004b72 <__vector_34>:
    4b72:	1f 92       	push	r1
    4b74:	0f 92       	push	r0
    4b76:	0f b6       	in	r0, 0x3f	; 63
    4b78:	0f 92       	push	r0
    4b7a:	08 b6       	in	r0, 0x38	; 56
    4b7c:	0f 92       	push	r0
    4b7e:	09 b6       	in	r0, 0x39	; 57
    4b80:	0f 92       	push	r0
    4b82:	0b b6       	in	r0, 0x3b	; 59
    4b84:	0f 92       	push	r0
    4b86:	11 24       	eor	r1, r1
    4b88:	2f 93       	push	r18
    4b8a:	3f 93       	push	r19
    4b8c:	4f 93       	push	r20
    4b8e:	5f 93       	push	r21
    4b90:	6f 93       	push	r22
    4b92:	7f 93       	push	r23
    4b94:	8f 93       	push	r24
    4b96:	9f 93       	push	r25
    4b98:	af 93       	push	r26
    4b9a:	bf 93       	push	r27
    4b9c:	ef 93       	push	r30
    4b9e:	ff 93       	push	r31
    4ba0:	82 e0       	ldi	r24, 0x02	; 2
    4ba2:	0e 94 55 23 	call	0x46aa	; 0x46aa <findGpioIntElement>
    4ba6:	dc 01       	movw	r26, r24
    4ba8:	00 97       	sbiw	r24, 0x00	; 0
    4baa:	51 f0       	breq	.+20     	; 0x4bc0 <__vector_34+0x4e>
    4bac:	12 96       	adiw	r26, 0x02	; 2
    4bae:	ed 91       	ld	r30, X+
    4bb0:	fc 91       	ld	r31, X
    4bb2:	13 97       	sbiw	r26, 0x03	; 3
    4bb4:	30 97       	sbiw	r30, 0x00	; 0
    4bb6:	21 f0       	breq	.+8      	; 0x4bc0 <__vector_34+0x4e>
    4bb8:	81 e0       	ldi	r24, 0x01	; 1
    4bba:	11 96       	adiw	r26, 0x01	; 1
    4bbc:	6c 91       	ld	r22, X
    4bbe:	19 95       	eicall
    4bc0:	ff 91       	pop	r31
    4bc2:	ef 91       	pop	r30
    4bc4:	bf 91       	pop	r27
    4bc6:	af 91       	pop	r26
    4bc8:	9f 91       	pop	r25
    4bca:	8f 91       	pop	r24
    4bcc:	7f 91       	pop	r23
    4bce:	6f 91       	pop	r22
    4bd0:	5f 91       	pop	r21
    4bd2:	4f 91       	pop	r20
    4bd4:	3f 91       	pop	r19
    4bd6:	2f 91       	pop	r18
    4bd8:	0f 90       	pop	r0
    4bda:	0b be       	out	0x3b, r0	; 59
    4bdc:	0f 90       	pop	r0
    4bde:	09 be       	out	0x39, r0	; 57
    4be0:	0f 90       	pop	r0
    4be2:	08 be       	out	0x38, r0	; 56
    4be4:	0f 90       	pop	r0
    4be6:	0f be       	out	0x3f, r0	; 63
    4be8:	0f 90       	pop	r0
    4bea:	1f 90       	pop	r1
    4bec:	18 95       	reti

00004bee <__vector_35>:
    4bee:	1f 92       	push	r1
    4bf0:	0f 92       	push	r0
    4bf2:	0f b6       	in	r0, 0x3f	; 63
    4bf4:	0f 92       	push	r0
    4bf6:	08 b6       	in	r0, 0x38	; 56
    4bf8:	0f 92       	push	r0
    4bfa:	09 b6       	in	r0, 0x39	; 57
    4bfc:	0f 92       	push	r0
    4bfe:	0b b6       	in	r0, 0x3b	; 59
    4c00:	0f 92       	push	r0
    4c02:	11 24       	eor	r1, r1
    4c04:	2f 93       	push	r18
    4c06:	3f 93       	push	r19
    4c08:	4f 93       	push	r20
    4c0a:	5f 93       	push	r21
    4c0c:	6f 93       	push	r22
    4c0e:	7f 93       	push	r23
    4c10:	8f 93       	push	r24
    4c12:	9f 93       	push	r25
    4c14:	af 93       	push	r26
    4c16:	bf 93       	push	r27
    4c18:	ef 93       	push	r30
    4c1a:	ff 93       	push	r31
    4c1c:	83 e0       	ldi	r24, 0x03	; 3
    4c1e:	0e 94 55 23 	call	0x46aa	; 0x46aa <findGpioIntElement>
    4c22:	dc 01       	movw	r26, r24
    4c24:	00 97       	sbiw	r24, 0x00	; 0
    4c26:	51 f0       	breq	.+20     	; 0x4c3c <__vector_35+0x4e>
    4c28:	12 96       	adiw	r26, 0x02	; 2
    4c2a:	ed 91       	ld	r30, X+
    4c2c:	fc 91       	ld	r31, X
    4c2e:	13 97       	sbiw	r26, 0x03	; 3
    4c30:	30 97       	sbiw	r30, 0x00	; 0
    4c32:	21 f0       	breq	.+8      	; 0x4c3c <__vector_35+0x4e>
    4c34:	81 e0       	ldi	r24, 0x01	; 1
    4c36:	11 96       	adiw	r26, 0x01	; 1
    4c38:	6c 91       	ld	r22, X
    4c3a:	19 95       	eicall
    4c3c:	ff 91       	pop	r31
    4c3e:	ef 91       	pop	r30
    4c40:	bf 91       	pop	r27
    4c42:	af 91       	pop	r26
    4c44:	9f 91       	pop	r25
    4c46:	8f 91       	pop	r24
    4c48:	7f 91       	pop	r23
    4c4a:	6f 91       	pop	r22
    4c4c:	5f 91       	pop	r21
    4c4e:	4f 91       	pop	r20
    4c50:	3f 91       	pop	r19
    4c52:	2f 91       	pop	r18
    4c54:	0f 90       	pop	r0
    4c56:	0b be       	out	0x3b, r0	; 59
    4c58:	0f 90       	pop	r0
    4c5a:	09 be       	out	0x39, r0	; 57
    4c5c:	0f 90       	pop	r0
    4c5e:	08 be       	out	0x38, r0	; 56
    4c60:	0f 90       	pop	r0
    4c62:	0f be       	out	0x3f, r0	; 63
    4c64:	0f 90       	pop	r0
    4c66:	1f 90       	pop	r1
    4c68:	18 95       	reti

00004c6a <__vector_2>:
    4c6a:	1f 92       	push	r1
    4c6c:	0f 92       	push	r0
    4c6e:	0f b6       	in	r0, 0x3f	; 63
    4c70:	0f 92       	push	r0
    4c72:	08 b6       	in	r0, 0x38	; 56
    4c74:	0f 92       	push	r0
    4c76:	09 b6       	in	r0, 0x39	; 57
    4c78:	0f 92       	push	r0
    4c7a:	0b b6       	in	r0, 0x3b	; 59
    4c7c:	0f 92       	push	r0
    4c7e:	11 24       	eor	r1, r1
    4c80:	2f 93       	push	r18
    4c82:	3f 93       	push	r19
    4c84:	4f 93       	push	r20
    4c86:	5f 93       	push	r21
    4c88:	6f 93       	push	r22
    4c8a:	7f 93       	push	r23
    4c8c:	8f 93       	push	r24
    4c8e:	9f 93       	push	r25
    4c90:	af 93       	push	r26
    4c92:	bf 93       	push	r27
    4c94:	ef 93       	push	r30
    4c96:	ff 93       	push	r31
    4c98:	84 e0       	ldi	r24, 0x04	; 4
    4c9a:	0e 94 55 23 	call	0x46aa	; 0x46aa <findGpioIntElement>
    4c9e:	dc 01       	movw	r26, r24
    4ca0:	00 97       	sbiw	r24, 0x00	; 0
    4ca2:	51 f0       	breq	.+20     	; 0x4cb8 <__vector_2+0x4e>
    4ca4:	12 96       	adiw	r26, 0x02	; 2
    4ca6:	ed 91       	ld	r30, X+
    4ca8:	fc 91       	ld	r31, X
    4caa:	13 97       	sbiw	r26, 0x03	; 3
    4cac:	30 97       	sbiw	r30, 0x00	; 0
    4cae:	21 f0       	breq	.+8      	; 0x4cb8 <__vector_2+0x4e>
    4cb0:	82 e0       	ldi	r24, 0x02	; 2
    4cb2:	11 96       	adiw	r26, 0x01	; 1
    4cb4:	6c 91       	ld	r22, X
    4cb6:	19 95       	eicall
    4cb8:	ff 91       	pop	r31
    4cba:	ef 91       	pop	r30
    4cbc:	bf 91       	pop	r27
    4cbe:	af 91       	pop	r26
    4cc0:	9f 91       	pop	r25
    4cc2:	8f 91       	pop	r24
    4cc4:	7f 91       	pop	r23
    4cc6:	6f 91       	pop	r22
    4cc8:	5f 91       	pop	r21
    4cca:	4f 91       	pop	r20
    4ccc:	3f 91       	pop	r19
    4cce:	2f 91       	pop	r18
    4cd0:	0f 90       	pop	r0
    4cd2:	0b be       	out	0x3b, r0	; 59
    4cd4:	0f 90       	pop	r0
    4cd6:	09 be       	out	0x39, r0	; 57
    4cd8:	0f 90       	pop	r0
    4cda:	08 be       	out	0x38, r0	; 56
    4cdc:	0f 90       	pop	r0
    4cde:	0f be       	out	0x3f, r0	; 63
    4ce0:	0f 90       	pop	r0
    4ce2:	1f 90       	pop	r1
    4ce4:	18 95       	reti

00004ce6 <__vector_3>:
    4ce6:	1f 92       	push	r1
    4ce8:	0f 92       	push	r0
    4cea:	0f b6       	in	r0, 0x3f	; 63
    4cec:	0f 92       	push	r0
    4cee:	08 b6       	in	r0, 0x38	; 56
    4cf0:	0f 92       	push	r0
    4cf2:	09 b6       	in	r0, 0x39	; 57
    4cf4:	0f 92       	push	r0
    4cf6:	0b b6       	in	r0, 0x3b	; 59
    4cf8:	0f 92       	push	r0
    4cfa:	11 24       	eor	r1, r1
    4cfc:	2f 93       	push	r18
    4cfe:	3f 93       	push	r19
    4d00:	4f 93       	push	r20
    4d02:	5f 93       	push	r21
    4d04:	6f 93       	push	r22
    4d06:	7f 93       	push	r23
    4d08:	8f 93       	push	r24
    4d0a:	9f 93       	push	r25
    4d0c:	af 93       	push	r26
    4d0e:	bf 93       	push	r27
    4d10:	ef 93       	push	r30
    4d12:	ff 93       	push	r31
    4d14:	85 e0       	ldi	r24, 0x05	; 5
    4d16:	0e 94 55 23 	call	0x46aa	; 0x46aa <findGpioIntElement>
    4d1a:	dc 01       	movw	r26, r24
    4d1c:	00 97       	sbiw	r24, 0x00	; 0
    4d1e:	51 f0       	breq	.+20     	; 0x4d34 <__vector_3+0x4e>
    4d20:	12 96       	adiw	r26, 0x02	; 2
    4d22:	ed 91       	ld	r30, X+
    4d24:	fc 91       	ld	r31, X
    4d26:	13 97       	sbiw	r26, 0x03	; 3
    4d28:	30 97       	sbiw	r30, 0x00	; 0
    4d2a:	21 f0       	breq	.+8      	; 0x4d34 <__vector_3+0x4e>
    4d2c:	82 e0       	ldi	r24, 0x02	; 2
    4d2e:	11 96       	adiw	r26, 0x01	; 1
    4d30:	6c 91       	ld	r22, X
    4d32:	19 95       	eicall
    4d34:	ff 91       	pop	r31
    4d36:	ef 91       	pop	r30
    4d38:	bf 91       	pop	r27
    4d3a:	af 91       	pop	r26
    4d3c:	9f 91       	pop	r25
    4d3e:	8f 91       	pop	r24
    4d40:	7f 91       	pop	r23
    4d42:	6f 91       	pop	r22
    4d44:	5f 91       	pop	r21
    4d46:	4f 91       	pop	r20
    4d48:	3f 91       	pop	r19
    4d4a:	2f 91       	pop	r18
    4d4c:	0f 90       	pop	r0
    4d4e:	0b be       	out	0x3b, r0	; 59
    4d50:	0f 90       	pop	r0
    4d52:	09 be       	out	0x39, r0	; 57
    4d54:	0f 90       	pop	r0
    4d56:	08 be       	out	0x38, r0	; 56
    4d58:	0f 90       	pop	r0
    4d5a:	0f be       	out	0x3f, r0	; 63
    4d5c:	0f 90       	pop	r0
    4d5e:	1f 90       	pop	r1
    4d60:	18 95       	reti

00004d62 <__vector_64>:
    4d62:	1f 92       	push	r1
    4d64:	0f 92       	push	r0
    4d66:	0f b6       	in	r0, 0x3f	; 63
    4d68:	0f 92       	push	r0
    4d6a:	08 b6       	in	r0, 0x38	; 56
    4d6c:	0f 92       	push	r0
    4d6e:	09 b6       	in	r0, 0x39	; 57
    4d70:	0f 92       	push	r0
    4d72:	0b b6       	in	r0, 0x3b	; 59
    4d74:	0f 92       	push	r0
    4d76:	11 24       	eor	r1, r1
    4d78:	2f 93       	push	r18
    4d7a:	3f 93       	push	r19
    4d7c:	4f 93       	push	r20
    4d7e:	5f 93       	push	r21
    4d80:	6f 93       	push	r22
    4d82:	7f 93       	push	r23
    4d84:	8f 93       	push	r24
    4d86:	9f 93       	push	r25
    4d88:	af 93       	push	r26
    4d8a:	bf 93       	push	r27
    4d8c:	ef 93       	push	r30
    4d8e:	ff 93       	push	r31
    4d90:	86 e0       	ldi	r24, 0x06	; 6
    4d92:	0e 94 55 23 	call	0x46aa	; 0x46aa <findGpioIntElement>
    4d96:	dc 01       	movw	r26, r24
    4d98:	00 97       	sbiw	r24, 0x00	; 0
    4d9a:	51 f0       	breq	.+20     	; 0x4db0 <__vector_64+0x4e>
    4d9c:	12 96       	adiw	r26, 0x02	; 2
    4d9e:	ed 91       	ld	r30, X+
    4da0:	fc 91       	ld	r31, X
    4da2:	13 97       	sbiw	r26, 0x03	; 3
    4da4:	30 97       	sbiw	r30, 0x00	; 0
    4da6:	21 f0       	breq	.+8      	; 0x4db0 <__vector_64+0x4e>
    4da8:	83 e0       	ldi	r24, 0x03	; 3
    4daa:	11 96       	adiw	r26, 0x01	; 1
    4dac:	6c 91       	ld	r22, X
    4dae:	19 95       	eicall
    4db0:	ff 91       	pop	r31
    4db2:	ef 91       	pop	r30
    4db4:	bf 91       	pop	r27
    4db6:	af 91       	pop	r26
    4db8:	9f 91       	pop	r25
    4dba:	8f 91       	pop	r24
    4dbc:	7f 91       	pop	r23
    4dbe:	6f 91       	pop	r22
    4dc0:	5f 91       	pop	r21
    4dc2:	4f 91       	pop	r20
    4dc4:	3f 91       	pop	r19
    4dc6:	2f 91       	pop	r18
    4dc8:	0f 90       	pop	r0
    4dca:	0b be       	out	0x3b, r0	; 59
    4dcc:	0f 90       	pop	r0
    4dce:	09 be       	out	0x39, r0	; 57
    4dd0:	0f 90       	pop	r0
    4dd2:	08 be       	out	0x38, r0	; 56
    4dd4:	0f 90       	pop	r0
    4dd6:	0f be       	out	0x3f, r0	; 63
    4dd8:	0f 90       	pop	r0
    4dda:	1f 90       	pop	r1
    4ddc:	18 95       	reti

00004dde <__vector_65>:
    4dde:	1f 92       	push	r1
    4de0:	0f 92       	push	r0
    4de2:	0f b6       	in	r0, 0x3f	; 63
    4de4:	0f 92       	push	r0
    4de6:	08 b6       	in	r0, 0x38	; 56
    4de8:	0f 92       	push	r0
    4dea:	09 b6       	in	r0, 0x39	; 57
    4dec:	0f 92       	push	r0
    4dee:	0b b6       	in	r0, 0x3b	; 59
    4df0:	0f 92       	push	r0
    4df2:	11 24       	eor	r1, r1
    4df4:	2f 93       	push	r18
    4df6:	3f 93       	push	r19
    4df8:	4f 93       	push	r20
    4dfa:	5f 93       	push	r21
    4dfc:	6f 93       	push	r22
    4dfe:	7f 93       	push	r23
    4e00:	8f 93       	push	r24
    4e02:	9f 93       	push	r25
    4e04:	af 93       	push	r26
    4e06:	bf 93       	push	r27
    4e08:	ef 93       	push	r30
    4e0a:	ff 93       	push	r31
    4e0c:	87 e0       	ldi	r24, 0x07	; 7
    4e0e:	0e 94 55 23 	call	0x46aa	; 0x46aa <findGpioIntElement>
    4e12:	dc 01       	movw	r26, r24
    4e14:	00 97       	sbiw	r24, 0x00	; 0
    4e16:	51 f0       	breq	.+20     	; 0x4e2c <__vector_65+0x4e>
    4e18:	12 96       	adiw	r26, 0x02	; 2
    4e1a:	ed 91       	ld	r30, X+
    4e1c:	fc 91       	ld	r31, X
    4e1e:	13 97       	sbiw	r26, 0x03	; 3
    4e20:	30 97       	sbiw	r30, 0x00	; 0
    4e22:	21 f0       	breq	.+8      	; 0x4e2c <__vector_65+0x4e>
    4e24:	83 e0       	ldi	r24, 0x03	; 3
    4e26:	11 96       	adiw	r26, 0x01	; 1
    4e28:	6c 91       	ld	r22, X
    4e2a:	19 95       	eicall
    4e2c:	ff 91       	pop	r31
    4e2e:	ef 91       	pop	r30
    4e30:	bf 91       	pop	r27
    4e32:	af 91       	pop	r26
    4e34:	9f 91       	pop	r25
    4e36:	8f 91       	pop	r24
    4e38:	7f 91       	pop	r23
    4e3a:	6f 91       	pop	r22
    4e3c:	5f 91       	pop	r21
    4e3e:	4f 91       	pop	r20
    4e40:	3f 91       	pop	r19
    4e42:	2f 91       	pop	r18
    4e44:	0f 90       	pop	r0
    4e46:	0b be       	out	0x3b, r0	; 59
    4e48:	0f 90       	pop	r0
    4e4a:	09 be       	out	0x39, r0	; 57
    4e4c:	0f 90       	pop	r0
    4e4e:	08 be       	out	0x38, r0	; 56
    4e50:	0f 90       	pop	r0
    4e52:	0f be       	out	0x3f, r0	; 63
    4e54:	0f 90       	pop	r0
    4e56:	1f 90       	pop	r1
    4e58:	18 95       	reti

00004e5a <__vector_43>:
    4e5a:	1f 92       	push	r1
    4e5c:	0f 92       	push	r0
    4e5e:	0f b6       	in	r0, 0x3f	; 63
    4e60:	0f 92       	push	r0
    4e62:	08 b6       	in	r0, 0x38	; 56
    4e64:	0f 92       	push	r0
    4e66:	09 b6       	in	r0, 0x39	; 57
    4e68:	0f 92       	push	r0
    4e6a:	0b b6       	in	r0, 0x3b	; 59
    4e6c:	0f 92       	push	r0
    4e6e:	11 24       	eor	r1, r1
    4e70:	2f 93       	push	r18
    4e72:	3f 93       	push	r19
    4e74:	4f 93       	push	r20
    4e76:	5f 93       	push	r21
    4e78:	6f 93       	push	r22
    4e7a:	7f 93       	push	r23
    4e7c:	8f 93       	push	r24
    4e7e:	9f 93       	push	r25
    4e80:	af 93       	push	r26
    4e82:	bf 93       	push	r27
    4e84:	ef 93       	push	r30
    4e86:	ff 93       	push	r31
    4e88:	88 e0       	ldi	r24, 0x08	; 8
    4e8a:	0e 94 55 23 	call	0x46aa	; 0x46aa <findGpioIntElement>
    4e8e:	dc 01       	movw	r26, r24
    4e90:	00 97       	sbiw	r24, 0x00	; 0
    4e92:	51 f0       	breq	.+20     	; 0x4ea8 <__vector_43+0x4e>
    4e94:	12 96       	adiw	r26, 0x02	; 2
    4e96:	ed 91       	ld	r30, X+
    4e98:	fc 91       	ld	r31, X
    4e9a:	13 97       	sbiw	r26, 0x03	; 3
    4e9c:	30 97       	sbiw	r30, 0x00	; 0
    4e9e:	21 f0       	breq	.+8      	; 0x4ea8 <__vector_43+0x4e>
    4ea0:	84 e0       	ldi	r24, 0x04	; 4
    4ea2:	11 96       	adiw	r26, 0x01	; 1
    4ea4:	6c 91       	ld	r22, X
    4ea6:	19 95       	eicall
    4ea8:	ff 91       	pop	r31
    4eaa:	ef 91       	pop	r30
    4eac:	bf 91       	pop	r27
    4eae:	af 91       	pop	r26
    4eb0:	9f 91       	pop	r25
    4eb2:	8f 91       	pop	r24
    4eb4:	7f 91       	pop	r23
    4eb6:	6f 91       	pop	r22
    4eb8:	5f 91       	pop	r21
    4eba:	4f 91       	pop	r20
    4ebc:	3f 91       	pop	r19
    4ebe:	2f 91       	pop	r18
    4ec0:	0f 90       	pop	r0
    4ec2:	0b be       	out	0x3b, r0	; 59
    4ec4:	0f 90       	pop	r0
    4ec6:	09 be       	out	0x39, r0	; 57
    4ec8:	0f 90       	pop	r0
    4eca:	08 be       	out	0x38, r0	; 56
    4ecc:	0f 90       	pop	r0
    4ece:	0f be       	out	0x3f, r0	; 63
    4ed0:	0f 90       	pop	r0
    4ed2:	1f 90       	pop	r1
    4ed4:	18 95       	reti

00004ed6 <__vector_44>:
    4ed6:	1f 92       	push	r1
    4ed8:	0f 92       	push	r0
    4eda:	0f b6       	in	r0, 0x3f	; 63
    4edc:	0f 92       	push	r0
    4ede:	08 b6       	in	r0, 0x38	; 56
    4ee0:	0f 92       	push	r0
    4ee2:	09 b6       	in	r0, 0x39	; 57
    4ee4:	0f 92       	push	r0
    4ee6:	0b b6       	in	r0, 0x3b	; 59
    4ee8:	0f 92       	push	r0
    4eea:	11 24       	eor	r1, r1
    4eec:	2f 93       	push	r18
    4eee:	3f 93       	push	r19
    4ef0:	4f 93       	push	r20
    4ef2:	5f 93       	push	r21
    4ef4:	6f 93       	push	r22
    4ef6:	7f 93       	push	r23
    4ef8:	8f 93       	push	r24
    4efa:	9f 93       	push	r25
    4efc:	af 93       	push	r26
    4efe:	bf 93       	push	r27
    4f00:	ef 93       	push	r30
    4f02:	ff 93       	push	r31
    4f04:	89 e0       	ldi	r24, 0x09	; 9
    4f06:	0e 94 55 23 	call	0x46aa	; 0x46aa <findGpioIntElement>
    4f0a:	dc 01       	movw	r26, r24
    4f0c:	00 97       	sbiw	r24, 0x00	; 0
    4f0e:	51 f0       	breq	.+20     	; 0x4f24 <__vector_44+0x4e>
    4f10:	12 96       	adiw	r26, 0x02	; 2
    4f12:	ed 91       	ld	r30, X+
    4f14:	fc 91       	ld	r31, X
    4f16:	13 97       	sbiw	r26, 0x03	; 3
    4f18:	30 97       	sbiw	r30, 0x00	; 0
    4f1a:	21 f0       	breq	.+8      	; 0x4f24 <__vector_44+0x4e>
    4f1c:	84 e0       	ldi	r24, 0x04	; 4
    4f1e:	11 96       	adiw	r26, 0x01	; 1
    4f20:	6c 91       	ld	r22, X
    4f22:	19 95       	eicall
    4f24:	ff 91       	pop	r31
    4f26:	ef 91       	pop	r30
    4f28:	bf 91       	pop	r27
    4f2a:	af 91       	pop	r26
    4f2c:	9f 91       	pop	r25
    4f2e:	8f 91       	pop	r24
    4f30:	7f 91       	pop	r23
    4f32:	6f 91       	pop	r22
    4f34:	5f 91       	pop	r21
    4f36:	4f 91       	pop	r20
    4f38:	3f 91       	pop	r19
    4f3a:	2f 91       	pop	r18
    4f3c:	0f 90       	pop	r0
    4f3e:	0b be       	out	0x3b, r0	; 59
    4f40:	0f 90       	pop	r0
    4f42:	09 be       	out	0x39, r0	; 57
    4f44:	0f 90       	pop	r0
    4f46:	08 be       	out	0x38, r0	; 56
    4f48:	0f 90       	pop	r0
    4f4a:	0f be       	out	0x3f, r0	; 63
    4f4c:	0f 90       	pop	r0
    4f4e:	1f 90       	pop	r1
    4f50:	18 95       	reti

00004f52 <__vector_104>:
    4f52:	1f 92       	push	r1
    4f54:	0f 92       	push	r0
    4f56:	0f b6       	in	r0, 0x3f	; 63
    4f58:	0f 92       	push	r0
    4f5a:	08 b6       	in	r0, 0x38	; 56
    4f5c:	0f 92       	push	r0
    4f5e:	09 b6       	in	r0, 0x39	; 57
    4f60:	0f 92       	push	r0
    4f62:	0b b6       	in	r0, 0x3b	; 59
    4f64:	0f 92       	push	r0
    4f66:	11 24       	eor	r1, r1
    4f68:	2f 93       	push	r18
    4f6a:	3f 93       	push	r19
    4f6c:	4f 93       	push	r20
    4f6e:	5f 93       	push	r21
    4f70:	6f 93       	push	r22
    4f72:	7f 93       	push	r23
    4f74:	8f 93       	push	r24
    4f76:	9f 93       	push	r25
    4f78:	af 93       	push	r26
    4f7a:	bf 93       	push	r27
    4f7c:	ef 93       	push	r30
    4f7e:	ff 93       	push	r31
    4f80:	8a e0       	ldi	r24, 0x0A	; 10
    4f82:	0e 94 55 23 	call	0x46aa	; 0x46aa <findGpioIntElement>
    4f86:	dc 01       	movw	r26, r24
    4f88:	00 97       	sbiw	r24, 0x00	; 0
    4f8a:	51 f0       	breq	.+20     	; 0x4fa0 <__vector_104+0x4e>
    4f8c:	12 96       	adiw	r26, 0x02	; 2
    4f8e:	ed 91       	ld	r30, X+
    4f90:	fc 91       	ld	r31, X
    4f92:	13 97       	sbiw	r26, 0x03	; 3
    4f94:	30 97       	sbiw	r30, 0x00	; 0
    4f96:	21 f0       	breq	.+8      	; 0x4fa0 <__vector_104+0x4e>
    4f98:	85 e0       	ldi	r24, 0x05	; 5
    4f9a:	11 96       	adiw	r26, 0x01	; 1
    4f9c:	6c 91       	ld	r22, X
    4f9e:	19 95       	eicall
    4fa0:	ff 91       	pop	r31
    4fa2:	ef 91       	pop	r30
    4fa4:	bf 91       	pop	r27
    4fa6:	af 91       	pop	r26
    4fa8:	9f 91       	pop	r25
    4faa:	8f 91       	pop	r24
    4fac:	7f 91       	pop	r23
    4fae:	6f 91       	pop	r22
    4fb0:	5f 91       	pop	r21
    4fb2:	4f 91       	pop	r20
    4fb4:	3f 91       	pop	r19
    4fb6:	2f 91       	pop	r18
    4fb8:	0f 90       	pop	r0
    4fba:	0b be       	out	0x3b, r0	; 59
    4fbc:	0f 90       	pop	r0
    4fbe:	09 be       	out	0x39, r0	; 57
    4fc0:	0f 90       	pop	r0
    4fc2:	08 be       	out	0x38, r0	; 56
    4fc4:	0f 90       	pop	r0
    4fc6:	0f be       	out	0x3f, r0	; 63
    4fc8:	0f 90       	pop	r0
    4fca:	1f 90       	pop	r1
    4fcc:	18 95       	reti

00004fce <__vector_105>:
    4fce:	1f 92       	push	r1
    4fd0:	0f 92       	push	r0
    4fd2:	0f b6       	in	r0, 0x3f	; 63
    4fd4:	0f 92       	push	r0
    4fd6:	08 b6       	in	r0, 0x38	; 56
    4fd8:	0f 92       	push	r0
    4fda:	09 b6       	in	r0, 0x39	; 57
    4fdc:	0f 92       	push	r0
    4fde:	0b b6       	in	r0, 0x3b	; 59
    4fe0:	0f 92       	push	r0
    4fe2:	11 24       	eor	r1, r1
    4fe4:	2f 93       	push	r18
    4fe6:	3f 93       	push	r19
    4fe8:	4f 93       	push	r20
    4fea:	5f 93       	push	r21
    4fec:	6f 93       	push	r22
    4fee:	7f 93       	push	r23
    4ff0:	8f 93       	push	r24
    4ff2:	9f 93       	push	r25
    4ff4:	af 93       	push	r26
    4ff6:	bf 93       	push	r27
    4ff8:	ef 93       	push	r30
    4ffa:	ff 93       	push	r31
    4ffc:	8b e0       	ldi	r24, 0x0B	; 11
    4ffe:	0e 94 55 23 	call	0x46aa	; 0x46aa <findGpioIntElement>
    5002:	dc 01       	movw	r26, r24
    5004:	00 97       	sbiw	r24, 0x00	; 0
    5006:	51 f0       	breq	.+20     	; 0x501c <__vector_105+0x4e>
    5008:	12 96       	adiw	r26, 0x02	; 2
    500a:	ed 91       	ld	r30, X+
    500c:	fc 91       	ld	r31, X
    500e:	13 97       	sbiw	r26, 0x03	; 3
    5010:	30 97       	sbiw	r30, 0x00	; 0
    5012:	21 f0       	breq	.+8      	; 0x501c <__vector_105+0x4e>
    5014:	85 e0       	ldi	r24, 0x05	; 5
    5016:	11 96       	adiw	r26, 0x01	; 1
    5018:	6c 91       	ld	r22, X
    501a:	19 95       	eicall
    501c:	ff 91       	pop	r31
    501e:	ef 91       	pop	r30
    5020:	bf 91       	pop	r27
    5022:	af 91       	pop	r26
    5024:	9f 91       	pop	r25
    5026:	8f 91       	pop	r24
    5028:	7f 91       	pop	r23
    502a:	6f 91       	pop	r22
    502c:	5f 91       	pop	r21
    502e:	4f 91       	pop	r20
    5030:	3f 91       	pop	r19
    5032:	2f 91       	pop	r18
    5034:	0f 90       	pop	r0
    5036:	0b be       	out	0x3b, r0	; 59
    5038:	0f 90       	pop	r0
    503a:	09 be       	out	0x39, r0	; 57
    503c:	0f 90       	pop	r0
    503e:	08 be       	out	0x38, r0	; 56
    5040:	0f 90       	pop	r0
    5042:	0f be       	out	0x3f, r0	; 63
    5044:	0f 90       	pop	r0
    5046:	1f 90       	pop	r1
    5048:	18 95       	reti

0000504a <__vector_96>:
    504a:	1f 92       	push	r1
    504c:	0f 92       	push	r0
    504e:	0f b6       	in	r0, 0x3f	; 63
    5050:	0f 92       	push	r0
    5052:	08 b6       	in	r0, 0x38	; 56
    5054:	0f 92       	push	r0
    5056:	09 b6       	in	r0, 0x39	; 57
    5058:	0f 92       	push	r0
    505a:	0b b6       	in	r0, 0x3b	; 59
    505c:	0f 92       	push	r0
    505e:	11 24       	eor	r1, r1
    5060:	2f 93       	push	r18
    5062:	3f 93       	push	r19
    5064:	4f 93       	push	r20
    5066:	5f 93       	push	r21
    5068:	6f 93       	push	r22
    506a:	7f 93       	push	r23
    506c:	8f 93       	push	r24
    506e:	9f 93       	push	r25
    5070:	af 93       	push	r26
    5072:	bf 93       	push	r27
    5074:	ef 93       	push	r30
    5076:	ff 93       	push	r31
    5078:	8c e0       	ldi	r24, 0x0C	; 12
    507a:	0e 94 55 23 	call	0x46aa	; 0x46aa <findGpioIntElement>
    507e:	dc 01       	movw	r26, r24
    5080:	00 97       	sbiw	r24, 0x00	; 0
    5082:	51 f0       	breq	.+20     	; 0x5098 <__vector_96+0x4e>
    5084:	12 96       	adiw	r26, 0x02	; 2
    5086:	ed 91       	ld	r30, X+
    5088:	fc 91       	ld	r31, X
    508a:	13 97       	sbiw	r26, 0x03	; 3
    508c:	30 97       	sbiw	r30, 0x00	; 0
    508e:	21 f0       	breq	.+8      	; 0x5098 <__vector_96+0x4e>
    5090:	86 e0       	ldi	r24, 0x06	; 6
    5092:	11 96       	adiw	r26, 0x01	; 1
    5094:	6c 91       	ld	r22, X
    5096:	19 95       	eicall
    5098:	ff 91       	pop	r31
    509a:	ef 91       	pop	r30
    509c:	bf 91       	pop	r27
    509e:	af 91       	pop	r26
    50a0:	9f 91       	pop	r25
    50a2:	8f 91       	pop	r24
    50a4:	7f 91       	pop	r23
    50a6:	6f 91       	pop	r22
    50a8:	5f 91       	pop	r21
    50aa:	4f 91       	pop	r20
    50ac:	3f 91       	pop	r19
    50ae:	2f 91       	pop	r18
    50b0:	0f 90       	pop	r0
    50b2:	0b be       	out	0x3b, r0	; 59
    50b4:	0f 90       	pop	r0
    50b6:	09 be       	out	0x39, r0	; 57
    50b8:	0f 90       	pop	r0
    50ba:	08 be       	out	0x38, r0	; 56
    50bc:	0f 90       	pop	r0
    50be:	0f be       	out	0x3f, r0	; 63
    50c0:	0f 90       	pop	r0
    50c2:	1f 90       	pop	r1
    50c4:	18 95       	reti

000050c6 <__vector_97>:
    50c6:	1f 92       	push	r1
    50c8:	0f 92       	push	r0
    50ca:	0f b6       	in	r0, 0x3f	; 63
    50cc:	0f 92       	push	r0
    50ce:	08 b6       	in	r0, 0x38	; 56
    50d0:	0f 92       	push	r0
    50d2:	09 b6       	in	r0, 0x39	; 57
    50d4:	0f 92       	push	r0
    50d6:	0b b6       	in	r0, 0x3b	; 59
    50d8:	0f 92       	push	r0
    50da:	11 24       	eor	r1, r1
    50dc:	2f 93       	push	r18
    50de:	3f 93       	push	r19
    50e0:	4f 93       	push	r20
    50e2:	5f 93       	push	r21
    50e4:	6f 93       	push	r22
    50e6:	7f 93       	push	r23
    50e8:	8f 93       	push	r24
    50ea:	9f 93       	push	r25
    50ec:	af 93       	push	r26
    50ee:	bf 93       	push	r27
    50f0:	ef 93       	push	r30
    50f2:	ff 93       	push	r31
    50f4:	8d e0       	ldi	r24, 0x0D	; 13
    50f6:	0e 94 55 23 	call	0x46aa	; 0x46aa <findGpioIntElement>
    50fa:	dc 01       	movw	r26, r24
    50fc:	00 97       	sbiw	r24, 0x00	; 0
    50fe:	51 f0       	breq	.+20     	; 0x5114 <__vector_97+0x4e>
    5100:	12 96       	adiw	r26, 0x02	; 2
    5102:	ed 91       	ld	r30, X+
    5104:	fc 91       	ld	r31, X
    5106:	13 97       	sbiw	r26, 0x03	; 3
    5108:	30 97       	sbiw	r30, 0x00	; 0
    510a:	21 f0       	breq	.+8      	; 0x5114 <__vector_97+0x4e>
    510c:	86 e0       	ldi	r24, 0x06	; 6
    510e:	11 96       	adiw	r26, 0x01	; 1
    5110:	6c 91       	ld	r22, X
    5112:	19 95       	eicall
    5114:	ff 91       	pop	r31
    5116:	ef 91       	pop	r30
    5118:	bf 91       	pop	r27
    511a:	af 91       	pop	r26
    511c:	9f 91       	pop	r25
    511e:	8f 91       	pop	r24
    5120:	7f 91       	pop	r23
    5122:	6f 91       	pop	r22
    5124:	5f 91       	pop	r21
    5126:	4f 91       	pop	r20
    5128:	3f 91       	pop	r19
    512a:	2f 91       	pop	r18
    512c:	0f 90       	pop	r0
    512e:	0b be       	out	0x3b, r0	; 59
    5130:	0f 90       	pop	r0
    5132:	09 be       	out	0x39, r0	; 57
    5134:	0f 90       	pop	r0
    5136:	08 be       	out	0x38, r0	; 56
    5138:	0f 90       	pop	r0
    513a:	0f be       	out	0x3f, r0	; 63
    513c:	0f 90       	pop	r0
    513e:	1f 90       	pop	r1
    5140:	18 95       	reti

00005142 <__vector_98>:
    5142:	1f 92       	push	r1
    5144:	0f 92       	push	r0
    5146:	0f b6       	in	r0, 0x3f	; 63
    5148:	0f 92       	push	r0
    514a:	08 b6       	in	r0, 0x38	; 56
    514c:	0f 92       	push	r0
    514e:	09 b6       	in	r0, 0x39	; 57
    5150:	0f 92       	push	r0
    5152:	0b b6       	in	r0, 0x3b	; 59
    5154:	0f 92       	push	r0
    5156:	11 24       	eor	r1, r1
    5158:	2f 93       	push	r18
    515a:	3f 93       	push	r19
    515c:	4f 93       	push	r20
    515e:	5f 93       	push	r21
    5160:	6f 93       	push	r22
    5162:	7f 93       	push	r23
    5164:	8f 93       	push	r24
    5166:	9f 93       	push	r25
    5168:	af 93       	push	r26
    516a:	bf 93       	push	r27
    516c:	ef 93       	push	r30
    516e:	ff 93       	push	r31
    5170:	8e e0       	ldi	r24, 0x0E	; 14
    5172:	0e 94 55 23 	call	0x46aa	; 0x46aa <findGpioIntElement>
    5176:	dc 01       	movw	r26, r24
    5178:	00 97       	sbiw	r24, 0x00	; 0
    517a:	51 f0       	breq	.+20     	; 0x5190 <__vector_98+0x4e>
    517c:	12 96       	adiw	r26, 0x02	; 2
    517e:	ed 91       	ld	r30, X+
    5180:	fc 91       	ld	r31, X
    5182:	13 97       	sbiw	r26, 0x03	; 3
    5184:	30 97       	sbiw	r30, 0x00	; 0
    5186:	21 f0       	breq	.+8      	; 0x5190 <__vector_98+0x4e>
    5188:	87 e0       	ldi	r24, 0x07	; 7
    518a:	11 96       	adiw	r26, 0x01	; 1
    518c:	6c 91       	ld	r22, X
    518e:	19 95       	eicall
    5190:	ff 91       	pop	r31
    5192:	ef 91       	pop	r30
    5194:	bf 91       	pop	r27
    5196:	af 91       	pop	r26
    5198:	9f 91       	pop	r25
    519a:	8f 91       	pop	r24
    519c:	7f 91       	pop	r23
    519e:	6f 91       	pop	r22
    51a0:	5f 91       	pop	r21
    51a2:	4f 91       	pop	r20
    51a4:	3f 91       	pop	r19
    51a6:	2f 91       	pop	r18
    51a8:	0f 90       	pop	r0
    51aa:	0b be       	out	0x3b, r0	; 59
    51ac:	0f 90       	pop	r0
    51ae:	09 be       	out	0x39, r0	; 57
    51b0:	0f 90       	pop	r0
    51b2:	08 be       	out	0x38, r0	; 56
    51b4:	0f 90       	pop	r0
    51b6:	0f be       	out	0x3f, r0	; 63
    51b8:	0f 90       	pop	r0
    51ba:	1f 90       	pop	r1
    51bc:	18 95       	reti

000051be <__vector_99>:
    51be:	1f 92       	push	r1
    51c0:	0f 92       	push	r0
    51c2:	0f b6       	in	r0, 0x3f	; 63
    51c4:	0f 92       	push	r0
    51c6:	08 b6       	in	r0, 0x38	; 56
    51c8:	0f 92       	push	r0
    51ca:	09 b6       	in	r0, 0x39	; 57
    51cc:	0f 92       	push	r0
    51ce:	0b b6       	in	r0, 0x3b	; 59
    51d0:	0f 92       	push	r0
    51d2:	11 24       	eor	r1, r1
    51d4:	2f 93       	push	r18
    51d6:	3f 93       	push	r19
    51d8:	4f 93       	push	r20
    51da:	5f 93       	push	r21
    51dc:	6f 93       	push	r22
    51de:	7f 93       	push	r23
    51e0:	8f 93       	push	r24
    51e2:	9f 93       	push	r25
    51e4:	af 93       	push	r26
    51e6:	bf 93       	push	r27
    51e8:	ef 93       	push	r30
    51ea:	ff 93       	push	r31
    51ec:	8f e0       	ldi	r24, 0x0F	; 15
    51ee:	0e 94 55 23 	call	0x46aa	; 0x46aa <findGpioIntElement>
    51f2:	dc 01       	movw	r26, r24
    51f4:	00 97       	sbiw	r24, 0x00	; 0
    51f6:	51 f0       	breq	.+20     	; 0x520c <__vector_99+0x4e>
    51f8:	12 96       	adiw	r26, 0x02	; 2
    51fa:	ed 91       	ld	r30, X+
    51fc:	fc 91       	ld	r31, X
    51fe:	13 97       	sbiw	r26, 0x03	; 3
    5200:	30 97       	sbiw	r30, 0x00	; 0
    5202:	21 f0       	breq	.+8      	; 0x520c <__vector_99+0x4e>
    5204:	87 e0       	ldi	r24, 0x07	; 7
    5206:	11 96       	adiw	r26, 0x01	; 1
    5208:	6c 91       	ld	r22, X
    520a:	19 95       	eicall
    520c:	ff 91       	pop	r31
    520e:	ef 91       	pop	r30
    5210:	bf 91       	pop	r27
    5212:	af 91       	pop	r26
    5214:	9f 91       	pop	r25
    5216:	8f 91       	pop	r24
    5218:	7f 91       	pop	r23
    521a:	6f 91       	pop	r22
    521c:	5f 91       	pop	r21
    521e:	4f 91       	pop	r20
    5220:	3f 91       	pop	r19
    5222:	2f 91       	pop	r18
    5224:	0f 90       	pop	r0
    5226:	0b be       	out	0x3b, r0	; 59
    5228:	0f 90       	pop	r0
    522a:	09 be       	out	0x39, r0	; 57
    522c:	0f 90       	pop	r0
    522e:	08 be       	out	0x38, r0	; 56
    5230:	0f 90       	pop	r0
    5232:	0f be       	out	0x3f, r0	; 63
    5234:	0f 90       	pop	r0
    5236:	1f 90       	pop	r1
    5238:	18 95       	reti

0000523a <__vector_100>:
    523a:	1f 92       	push	r1
    523c:	0f 92       	push	r0
    523e:	0f b6       	in	r0, 0x3f	; 63
    5240:	0f 92       	push	r0
    5242:	08 b6       	in	r0, 0x38	; 56
    5244:	0f 92       	push	r0
    5246:	09 b6       	in	r0, 0x39	; 57
    5248:	0f 92       	push	r0
    524a:	0b b6       	in	r0, 0x3b	; 59
    524c:	0f 92       	push	r0
    524e:	11 24       	eor	r1, r1
    5250:	2f 93       	push	r18
    5252:	3f 93       	push	r19
    5254:	4f 93       	push	r20
    5256:	5f 93       	push	r21
    5258:	6f 93       	push	r22
    525a:	7f 93       	push	r23
    525c:	8f 93       	push	r24
    525e:	9f 93       	push	r25
    5260:	af 93       	push	r26
    5262:	bf 93       	push	r27
    5264:	ef 93       	push	r30
    5266:	ff 93       	push	r31
    5268:	80 e1       	ldi	r24, 0x10	; 16
    526a:	0e 94 55 23 	call	0x46aa	; 0x46aa <findGpioIntElement>
    526e:	dc 01       	movw	r26, r24
    5270:	00 97       	sbiw	r24, 0x00	; 0
    5272:	51 f0       	breq	.+20     	; 0x5288 <__vector_100+0x4e>
    5274:	12 96       	adiw	r26, 0x02	; 2
    5276:	ed 91       	ld	r30, X+
    5278:	fc 91       	ld	r31, X
    527a:	13 97       	sbiw	r26, 0x03	; 3
    527c:	30 97       	sbiw	r30, 0x00	; 0
    527e:	21 f0       	breq	.+8      	; 0x5288 <__vector_100+0x4e>
    5280:	88 e0       	ldi	r24, 0x08	; 8
    5282:	11 96       	adiw	r26, 0x01	; 1
    5284:	6c 91       	ld	r22, X
    5286:	19 95       	eicall
    5288:	ff 91       	pop	r31
    528a:	ef 91       	pop	r30
    528c:	bf 91       	pop	r27
    528e:	af 91       	pop	r26
    5290:	9f 91       	pop	r25
    5292:	8f 91       	pop	r24
    5294:	7f 91       	pop	r23
    5296:	6f 91       	pop	r22
    5298:	5f 91       	pop	r21
    529a:	4f 91       	pop	r20
    529c:	3f 91       	pop	r19
    529e:	2f 91       	pop	r18
    52a0:	0f 90       	pop	r0
    52a2:	0b be       	out	0x3b, r0	; 59
    52a4:	0f 90       	pop	r0
    52a6:	09 be       	out	0x39, r0	; 57
    52a8:	0f 90       	pop	r0
    52aa:	08 be       	out	0x38, r0	; 56
    52ac:	0f 90       	pop	r0
    52ae:	0f be       	out	0x3f, r0	; 63
    52b0:	0f 90       	pop	r0
    52b2:	1f 90       	pop	r1
    52b4:	18 95       	reti

000052b6 <__vector_101>:
    52b6:	1f 92       	push	r1
    52b8:	0f 92       	push	r0
    52ba:	0f b6       	in	r0, 0x3f	; 63
    52bc:	0f 92       	push	r0
    52be:	08 b6       	in	r0, 0x38	; 56
    52c0:	0f 92       	push	r0
    52c2:	09 b6       	in	r0, 0x39	; 57
    52c4:	0f 92       	push	r0
    52c6:	0b b6       	in	r0, 0x3b	; 59
    52c8:	0f 92       	push	r0
    52ca:	11 24       	eor	r1, r1
    52cc:	2f 93       	push	r18
    52ce:	3f 93       	push	r19
    52d0:	4f 93       	push	r20
    52d2:	5f 93       	push	r21
    52d4:	6f 93       	push	r22
    52d6:	7f 93       	push	r23
    52d8:	8f 93       	push	r24
    52da:	9f 93       	push	r25
    52dc:	af 93       	push	r26
    52de:	bf 93       	push	r27
    52e0:	ef 93       	push	r30
    52e2:	ff 93       	push	r31
    52e4:	81 e1       	ldi	r24, 0x11	; 17
    52e6:	0e 94 55 23 	call	0x46aa	; 0x46aa <findGpioIntElement>
    52ea:	dc 01       	movw	r26, r24
    52ec:	00 97       	sbiw	r24, 0x00	; 0
    52ee:	51 f0       	breq	.+20     	; 0x5304 <__vector_101+0x4e>
    52f0:	12 96       	adiw	r26, 0x02	; 2
    52f2:	ed 91       	ld	r30, X+
    52f4:	fc 91       	ld	r31, X
    52f6:	13 97       	sbiw	r26, 0x03	; 3
    52f8:	30 97       	sbiw	r30, 0x00	; 0
    52fa:	21 f0       	breq	.+8      	; 0x5304 <__vector_101+0x4e>
    52fc:	88 e0       	ldi	r24, 0x08	; 8
    52fe:	11 96       	adiw	r26, 0x01	; 1
    5300:	6c 91       	ld	r22, X
    5302:	19 95       	eicall
    5304:	ff 91       	pop	r31
    5306:	ef 91       	pop	r30
    5308:	bf 91       	pop	r27
    530a:	af 91       	pop	r26
    530c:	9f 91       	pop	r25
    530e:	8f 91       	pop	r24
    5310:	7f 91       	pop	r23
    5312:	6f 91       	pop	r22
    5314:	5f 91       	pop	r21
    5316:	4f 91       	pop	r20
    5318:	3f 91       	pop	r19
    531a:	2f 91       	pop	r18
    531c:	0f 90       	pop	r0
    531e:	0b be       	out	0x3b, r0	; 59
    5320:	0f 90       	pop	r0
    5322:	09 be       	out	0x39, r0	; 57
    5324:	0f 90       	pop	r0
    5326:	08 be       	out	0x38, r0	; 56
    5328:	0f 90       	pop	r0
    532a:	0f be       	out	0x3f, r0	; 63
    532c:	0f 90       	pop	r0
    532e:	1f 90       	pop	r1
    5330:	18 95       	reti

00005332 <__vector_94>:
    5332:	1f 92       	push	r1
    5334:	0f 92       	push	r0
    5336:	0f b6       	in	r0, 0x3f	; 63
    5338:	0f 92       	push	r0
    533a:	08 b6       	in	r0, 0x38	; 56
    533c:	0f 92       	push	r0
    533e:	09 b6       	in	r0, 0x39	; 57
    5340:	0f 92       	push	r0
    5342:	0b b6       	in	r0, 0x3b	; 59
    5344:	0f 92       	push	r0
    5346:	11 24       	eor	r1, r1
    5348:	2f 93       	push	r18
    534a:	3f 93       	push	r19
    534c:	4f 93       	push	r20
    534e:	5f 93       	push	r21
    5350:	6f 93       	push	r22
    5352:	7f 93       	push	r23
    5354:	8f 93       	push	r24
    5356:	9f 93       	push	r25
    5358:	af 93       	push	r26
    535a:	bf 93       	push	r27
    535c:	ef 93       	push	r30
    535e:	ff 93       	push	r31
    5360:	82 e1       	ldi	r24, 0x12	; 18
    5362:	0e 94 55 23 	call	0x46aa	; 0x46aa <findGpioIntElement>
    5366:	dc 01       	movw	r26, r24
    5368:	00 97       	sbiw	r24, 0x00	; 0
    536a:	51 f0       	breq	.+20     	; 0x5380 <__vector_94+0x4e>
    536c:	12 96       	adiw	r26, 0x02	; 2
    536e:	ed 91       	ld	r30, X+
    5370:	fc 91       	ld	r31, X
    5372:	13 97       	sbiw	r26, 0x03	; 3
    5374:	30 97       	sbiw	r30, 0x00	; 0
    5376:	21 f0       	breq	.+8      	; 0x5380 <__vector_94+0x4e>
    5378:	89 e0       	ldi	r24, 0x09	; 9
    537a:	11 96       	adiw	r26, 0x01	; 1
    537c:	6c 91       	ld	r22, X
    537e:	19 95       	eicall
    5380:	ff 91       	pop	r31
    5382:	ef 91       	pop	r30
    5384:	bf 91       	pop	r27
    5386:	af 91       	pop	r26
    5388:	9f 91       	pop	r25
    538a:	8f 91       	pop	r24
    538c:	7f 91       	pop	r23
    538e:	6f 91       	pop	r22
    5390:	5f 91       	pop	r21
    5392:	4f 91       	pop	r20
    5394:	3f 91       	pop	r19
    5396:	2f 91       	pop	r18
    5398:	0f 90       	pop	r0
    539a:	0b be       	out	0x3b, r0	; 59
    539c:	0f 90       	pop	r0
    539e:	09 be       	out	0x39, r0	; 57
    53a0:	0f 90       	pop	r0
    53a2:	08 be       	out	0x38, r0	; 56
    53a4:	0f 90       	pop	r0
    53a6:	0f be       	out	0x3f, r0	; 63
    53a8:	0f 90       	pop	r0
    53aa:	1f 90       	pop	r1
    53ac:	18 95       	reti

000053ae <__vector_95>:
    53ae:	1f 92       	push	r1
    53b0:	0f 92       	push	r0
    53b2:	0f b6       	in	r0, 0x3f	; 63
    53b4:	0f 92       	push	r0
    53b6:	08 b6       	in	r0, 0x38	; 56
    53b8:	0f 92       	push	r0
    53ba:	09 b6       	in	r0, 0x39	; 57
    53bc:	0f 92       	push	r0
    53be:	0b b6       	in	r0, 0x3b	; 59
    53c0:	0f 92       	push	r0
    53c2:	11 24       	eor	r1, r1
    53c4:	2f 93       	push	r18
    53c6:	3f 93       	push	r19
    53c8:	4f 93       	push	r20
    53ca:	5f 93       	push	r21
    53cc:	6f 93       	push	r22
    53ce:	7f 93       	push	r23
    53d0:	8f 93       	push	r24
    53d2:	9f 93       	push	r25
    53d4:	af 93       	push	r26
    53d6:	bf 93       	push	r27
    53d8:	ef 93       	push	r30
    53da:	ff 93       	push	r31
    53dc:	83 e1       	ldi	r24, 0x13	; 19
    53de:	0e 94 55 23 	call	0x46aa	; 0x46aa <findGpioIntElement>
    53e2:	dc 01       	movw	r26, r24
    53e4:	00 97       	sbiw	r24, 0x00	; 0
    53e6:	51 f0       	breq	.+20     	; 0x53fc <__vector_95+0x4e>
    53e8:	12 96       	adiw	r26, 0x02	; 2
    53ea:	ed 91       	ld	r30, X+
    53ec:	fc 91       	ld	r31, X
    53ee:	13 97       	sbiw	r26, 0x03	; 3
    53f0:	30 97       	sbiw	r30, 0x00	; 0
    53f2:	21 f0       	breq	.+8      	; 0x53fc <__vector_95+0x4e>
    53f4:	89 e0       	ldi	r24, 0x09	; 9
    53f6:	11 96       	adiw	r26, 0x01	; 1
    53f8:	6c 91       	ld	r22, X
    53fa:	19 95       	eicall
    53fc:	ff 91       	pop	r31
    53fe:	ef 91       	pop	r30
    5400:	bf 91       	pop	r27
    5402:	af 91       	pop	r26
    5404:	9f 91       	pop	r25
    5406:	8f 91       	pop	r24
    5408:	7f 91       	pop	r23
    540a:	6f 91       	pop	r22
    540c:	5f 91       	pop	r21
    540e:	4f 91       	pop	r20
    5410:	3f 91       	pop	r19
    5412:	2f 91       	pop	r18
    5414:	0f 90       	pop	r0
    5416:	0b be       	out	0x3b, r0	; 59
    5418:	0f 90       	pop	r0
    541a:	09 be       	out	0x39, r0	; 57
    541c:	0f 90       	pop	r0
    541e:	08 be       	out	0x38, r0	; 56
    5420:	0f 90       	pop	r0
    5422:	0f be       	out	0x3f, r0	; 63
    5424:	0f 90       	pop	r0
    5426:	1f 90       	pop	r1
    5428:	18 95       	reti

0000542a <__vector_4>:
    542a:	1f 92       	push	r1
    542c:	0f 92       	push	r0
    542e:	0f b6       	in	r0, 0x3f	; 63
    5430:	0f 92       	push	r0
    5432:	08 b6       	in	r0, 0x38	; 56
    5434:	0f 92       	push	r0
    5436:	09 b6       	in	r0, 0x39	; 57
    5438:	0f 92       	push	r0
    543a:	0b b6       	in	r0, 0x3b	; 59
    543c:	0f 92       	push	r0
    543e:	11 24       	eor	r1, r1
    5440:	2f 93       	push	r18
    5442:	3f 93       	push	r19
    5444:	4f 93       	push	r20
    5446:	5f 93       	push	r21
    5448:	6f 93       	push	r22
    544a:	7f 93       	push	r23
    544c:	8f 93       	push	r24
    544e:	9f 93       	push	r25
    5450:	af 93       	push	r26
    5452:	bf 93       	push	r27
    5454:	ef 93       	push	r30
    5456:	ff 93       	push	r31
    5458:	84 e1       	ldi	r24, 0x14	; 20
    545a:	0e 94 55 23 	call	0x46aa	; 0x46aa <findGpioIntElement>
    545e:	dc 01       	movw	r26, r24
    5460:	00 97       	sbiw	r24, 0x00	; 0
    5462:	51 f0       	breq	.+20     	; 0x5478 <__vector_4+0x4e>
    5464:	12 96       	adiw	r26, 0x02	; 2
    5466:	ed 91       	ld	r30, X+
    5468:	fc 91       	ld	r31, X
    546a:	13 97       	sbiw	r26, 0x03	; 3
    546c:	30 97       	sbiw	r30, 0x00	; 0
    546e:	21 f0       	breq	.+8      	; 0x5478 <__vector_4+0x4e>
    5470:	8a e0       	ldi	r24, 0x0A	; 10
    5472:	11 96       	adiw	r26, 0x01	; 1
    5474:	6c 91       	ld	r22, X
    5476:	19 95       	eicall
    5478:	ff 91       	pop	r31
    547a:	ef 91       	pop	r30
    547c:	bf 91       	pop	r27
    547e:	af 91       	pop	r26
    5480:	9f 91       	pop	r25
    5482:	8f 91       	pop	r24
    5484:	7f 91       	pop	r23
    5486:	6f 91       	pop	r22
    5488:	5f 91       	pop	r21
    548a:	4f 91       	pop	r20
    548c:	3f 91       	pop	r19
    548e:	2f 91       	pop	r18
    5490:	0f 90       	pop	r0
    5492:	0b be       	out	0x3b, r0	; 59
    5494:	0f 90       	pop	r0
    5496:	09 be       	out	0x39, r0	; 57
    5498:	0f 90       	pop	r0
    549a:	08 be       	out	0x38, r0	; 56
    549c:	0f 90       	pop	r0
    549e:	0f be       	out	0x3f, r0	; 63
    54a0:	0f 90       	pop	r0
    54a2:	1f 90       	pop	r1
    54a4:	18 95       	reti

000054a6 <__vector_5>:
    54a6:	1f 92       	push	r1
    54a8:	0f 92       	push	r0
    54aa:	0f b6       	in	r0, 0x3f	; 63
    54ac:	0f 92       	push	r0
    54ae:	08 b6       	in	r0, 0x38	; 56
    54b0:	0f 92       	push	r0
    54b2:	09 b6       	in	r0, 0x39	; 57
    54b4:	0f 92       	push	r0
    54b6:	0b b6       	in	r0, 0x3b	; 59
    54b8:	0f 92       	push	r0
    54ba:	11 24       	eor	r1, r1
    54bc:	2f 93       	push	r18
    54be:	3f 93       	push	r19
    54c0:	4f 93       	push	r20
    54c2:	5f 93       	push	r21
    54c4:	6f 93       	push	r22
    54c6:	7f 93       	push	r23
    54c8:	8f 93       	push	r24
    54ca:	9f 93       	push	r25
    54cc:	af 93       	push	r26
    54ce:	bf 93       	push	r27
    54d0:	ef 93       	push	r30
    54d2:	ff 93       	push	r31
    54d4:	85 e1       	ldi	r24, 0x15	; 21
    54d6:	0e 94 55 23 	call	0x46aa	; 0x46aa <findGpioIntElement>
    54da:	dc 01       	movw	r26, r24
    54dc:	00 97       	sbiw	r24, 0x00	; 0
    54de:	51 f0       	breq	.+20     	; 0x54f4 <__vector_5+0x4e>
    54e0:	12 96       	adiw	r26, 0x02	; 2
    54e2:	ed 91       	ld	r30, X+
    54e4:	fc 91       	ld	r31, X
    54e6:	13 97       	sbiw	r26, 0x03	; 3
    54e8:	30 97       	sbiw	r30, 0x00	; 0
    54ea:	21 f0       	breq	.+8      	; 0x54f4 <__vector_5+0x4e>
    54ec:	8a e0       	ldi	r24, 0x0A	; 10
    54ee:	11 96       	adiw	r26, 0x01	; 1
    54f0:	6c 91       	ld	r22, X
    54f2:	19 95       	eicall
    54f4:	ff 91       	pop	r31
    54f6:	ef 91       	pop	r30
    54f8:	bf 91       	pop	r27
    54fa:	af 91       	pop	r26
    54fc:	9f 91       	pop	r25
    54fe:	8f 91       	pop	r24
    5500:	7f 91       	pop	r23
    5502:	6f 91       	pop	r22
    5504:	5f 91       	pop	r21
    5506:	4f 91       	pop	r20
    5508:	3f 91       	pop	r19
    550a:	2f 91       	pop	r18
    550c:	0f 90       	pop	r0
    550e:	0b be       	out	0x3b, r0	; 59
    5510:	0f 90       	pop	r0
    5512:	09 be       	out	0x39, r0	; 57
    5514:	0f 90       	pop	r0
    5516:	08 be       	out	0x38, r0	; 56
    5518:	0f 90       	pop	r0
    551a:	0f be       	out	0x3f, r0	; 63
    551c:	0f 90       	pop	r0
    551e:	1f 90       	pop	r1
    5520:	18 95       	reti

00005522 <hal_configureGpioPort>:
    5522:	cf 93       	push	r28
    5524:	df 93       	push	r29
    5526:	00 d0       	rcall	.+0      	; 0x5528 <hal_configureGpioPort+0x6>
    5528:	00 d0       	rcall	.+0      	; 0x552a <hal_configureGpioPort+0x8>
    552a:	cd b7       	in	r28, 0x3d	; 61
    552c:	de b7       	in	r29, 0x3e	; 62
    552e:	2a 83       	std	Y+2, r18	; 0x02
    5530:	3b 83       	std	Y+3, r19	; 0x03
    5532:	4c 83       	std	Y+4, r20	; 0x04
    5534:	5d 83       	std	Y+5, r21	; 0x05
    5536:	6e 83       	std	Y+6, r22	; 0x06
    5538:	9f b7       	in	r25, 0x3f	; 63
    553a:	99 83       	std	Y+1, r25	; 0x01
    553c:	f8 94       	cli
    553e:	85 30       	cpi	r24, 0x05	; 5
    5540:	69 f1       	breq	.+90     	; 0x559c <hal_configureGpioPort+0x7a>
    5542:	86 30       	cpi	r24, 0x06	; 6
    5544:	70 f4       	brcc	.+28     	; 0x5562 <hal_configureGpioPort+0x40>
    5546:	82 30       	cpi	r24, 0x02	; 2
    5548:	01 f1       	breq	.+64     	; 0x558a <hal_configureGpioPort+0x68>
    554a:	83 30       	cpi	r24, 0x03	; 3
    554c:	28 f4       	brcc	.+10     	; 0x5558 <hal_configureGpioPort+0x36>
    554e:	88 23       	and	r24, r24
    5550:	b1 f0       	breq	.+44     	; 0x557e <hal_configureGpioPort+0x5c>
    5552:	81 30       	cpi	r24, 0x01	; 1
    5554:	d9 f5       	brne	.+118    	; 0x55cc <hal_configureGpioPort+0xaa>
    5556:	16 c0       	rjmp	.+44     	; 0x5584 <hal_configureGpioPort+0x62>
    5558:	83 30       	cpi	r24, 0x03	; 3
    555a:	d1 f0       	breq	.+52     	; 0x5590 <hal_configureGpioPort+0x6e>
    555c:	84 30       	cpi	r24, 0x04	; 4
    555e:	b1 f5       	brne	.+108    	; 0x55cc <hal_configureGpioPort+0xaa>
    5560:	1a c0       	rjmp	.+52     	; 0x5596 <hal_configureGpioPort+0x74>
    5562:	88 30       	cpi	r24, 0x08	; 8
    5564:	21 f1       	breq	.+72     	; 0x55ae <hal_configureGpioPort+0x8c>
    5566:	89 30       	cpi	r24, 0x09	; 9
    5568:	28 f4       	brcc	.+10     	; 0x5574 <hal_configureGpioPort+0x52>
    556a:	86 30       	cpi	r24, 0x06	; 6
    556c:	d1 f0       	breq	.+52     	; 0x55a2 <hal_configureGpioPort+0x80>
    556e:	87 30       	cpi	r24, 0x07	; 7
    5570:	69 f5       	brne	.+90     	; 0x55cc <hal_configureGpioPort+0xaa>
    5572:	1a c0       	rjmp	.+52     	; 0x55a8 <hal_configureGpioPort+0x86>
    5574:	89 30       	cpi	r24, 0x09	; 9
    5576:	f1 f0       	breq	.+60     	; 0x55b4 <hal_configureGpioPort+0x92>
    5578:	8a 30       	cpi	r24, 0x0A	; 10
    557a:	41 f5       	brne	.+80     	; 0x55cc <hal_configureGpioPort+0xaa>
    557c:	1e c0       	rjmp	.+60     	; 0x55ba <hal_configureGpioPort+0x98>
    557e:	80 e0       	ldi	r24, 0x00	; 0
    5580:	96 e0       	ldi	r25, 0x06	; 6
    5582:	1d c0       	rjmp	.+58     	; 0x55be <hal_configureGpioPort+0x9c>
    5584:	80 e2       	ldi	r24, 0x20	; 32
    5586:	96 e0       	ldi	r25, 0x06	; 6
    5588:	1a c0       	rjmp	.+52     	; 0x55be <hal_configureGpioPort+0x9c>
    558a:	80 e4       	ldi	r24, 0x40	; 64
    558c:	96 e0       	ldi	r25, 0x06	; 6
    558e:	17 c0       	rjmp	.+46     	; 0x55be <hal_configureGpioPort+0x9c>
    5590:	80 e6       	ldi	r24, 0x60	; 96
    5592:	96 e0       	ldi	r25, 0x06	; 6
    5594:	14 c0       	rjmp	.+40     	; 0x55be <hal_configureGpioPort+0x9c>
    5596:	80 e8       	ldi	r24, 0x80	; 128
    5598:	96 e0       	ldi	r25, 0x06	; 6
    559a:	11 c0       	rjmp	.+34     	; 0x55be <hal_configureGpioPort+0x9c>
    559c:	80 ea       	ldi	r24, 0xA0	; 160
    559e:	96 e0       	ldi	r25, 0x06	; 6
    55a0:	0e c0       	rjmp	.+28     	; 0x55be <hal_configureGpioPort+0x9c>
    55a2:	80 ee       	ldi	r24, 0xE0	; 224
    55a4:	96 e0       	ldi	r25, 0x06	; 6
    55a6:	0b c0       	rjmp	.+22     	; 0x55be <hal_configureGpioPort+0x9c>
    55a8:	80 e0       	ldi	r24, 0x00	; 0
    55aa:	97 e0       	ldi	r25, 0x07	; 7
    55ac:	08 c0       	rjmp	.+16     	; 0x55be <hal_configureGpioPort+0x9c>
    55ae:	80 e2       	ldi	r24, 0x20	; 32
    55b0:	97 e0       	ldi	r25, 0x07	; 7
    55b2:	05 c0       	rjmp	.+10     	; 0x55be <hal_configureGpioPort+0x9c>
    55b4:	80 ec       	ldi	r24, 0xC0	; 192
    55b6:	97 e0       	ldi	r25, 0x07	; 7
    55b8:	02 c0       	rjmp	.+4      	; 0x55be <hal_configureGpioPort+0x9c>
    55ba:	80 ee       	ldi	r24, 0xE0	; 224
    55bc:	97 e0       	ldi	r25, 0x07	; 7
    55be:	be 01       	movw	r22, r28
    55c0:	6e 5f       	subi	r22, 0xFE	; 254
    55c2:	7f 4f       	sbci	r23, 0xFF	; 255
    55c4:	0e 94 f9 24 	call	0x49f2	; 0x49f2 <confPort>
    55c8:	80 e0       	ldi	r24, 0x00	; 0
    55ca:	01 c0       	rjmp	.+2      	; 0x55ce <hal_configureGpioPort+0xac>
    55cc:	8c ef       	ldi	r24, 0xFC	; 252
    55ce:	99 81       	ldd	r25, Y+1	; 0x01
    55d0:	9f bf       	out	0x3f, r25	; 63
    55d2:	26 96       	adiw	r28, 0x06	; 6
    55d4:	cd bf       	out	0x3d, r28	; 61
    55d6:	de bf       	out	0x3e, r29	; 62
    55d8:	df 91       	pop	r29
    55da:	cf 91       	pop	r28
    55dc:	08 95       	ret

000055de <hal_requestGpioInt>:
    55de:	cf 93       	push	r28
    55e0:	df 93       	push	r29
    55e2:	cd b7       	in	r28, 0x3d	; 61
    55e4:	de b7       	in	r29, 0x3e	; 62
    55e6:	27 97       	sbiw	r28, 0x07	; 7
    55e8:	cd bf       	out	0x3d, r28	; 61
    55ea:	de bf       	out	0x3e, r29	; 62
    55ec:	4c 83       	std	Y+4, r20	; 0x04
    55ee:	5d 83       	std	Y+5, r21	; 0x05
    55f0:	6e 83       	std	Y+6, r22	; 0x06
    55f2:	7f 83       	std	Y+7, r23	; 0x07
    55f4:	9f b7       	in	r25, 0x3f	; 63
    55f6:	99 83       	std	Y+1, r25	; 0x01
    55f8:	f8 94       	cli
    55fa:	85 30       	cpi	r24, 0x05	; 5
    55fc:	09 f4       	brne	.+2      	; 0x5600 <hal_requestGpioInt+0x22>
    55fe:	4c c0       	rjmp	.+152    	; 0x5698 <hal_requestGpioInt+0xba>
    5600:	86 30       	cpi	r24, 0x06	; 6
    5602:	80 f4       	brcc	.+32     	; 0x5624 <hal_requestGpioInt+0x46>
    5604:	82 30       	cpi	r24, 0x02	; 2
    5606:	81 f1       	breq	.+96     	; 0x5668 <hal_requestGpioInt+0x8a>
    5608:	83 30       	cpi	r24, 0x03	; 3
    560a:	30 f4       	brcc	.+12     	; 0x5618 <hal_requestGpioInt+0x3a>
    560c:	88 23       	and	r24, r24
    560e:	e1 f0       	breq	.+56     	; 0x5648 <hal_requestGpioInt+0x6a>
    5610:	81 30       	cpi	r24, 0x01	; 1
    5612:	09 f0       	breq	.+2      	; 0x5616 <hal_requestGpioInt+0x38>
    5614:	79 c0       	rjmp	.+242    	; 0x5708 <hal_requestGpioInt+0x12a>
    5616:	20 c0       	rjmp	.+64     	; 0x5658 <hal_requestGpioInt+0x7a>
    5618:	83 30       	cpi	r24, 0x03	; 3
    561a:	71 f1       	breq	.+92     	; 0x5678 <hal_requestGpioInt+0x9a>
    561c:	84 30       	cpi	r24, 0x04	; 4
    561e:	09 f0       	breq	.+2      	; 0x5622 <hal_requestGpioInt+0x44>
    5620:	73 c0       	rjmp	.+230    	; 0x5708 <hal_requestGpioInt+0x12a>
    5622:	32 c0       	rjmp	.+100    	; 0x5688 <hal_requestGpioInt+0xaa>
    5624:	88 30       	cpi	r24, 0x08	; 8
    5626:	09 f4       	brne	.+2      	; 0x562a <hal_requestGpioInt+0x4c>
    5628:	4f c0       	rjmp	.+158    	; 0x56c8 <hal_requestGpioInt+0xea>
    562a:	89 30       	cpi	r24, 0x09	; 9
    562c:	30 f4       	brcc	.+12     	; 0x563a <hal_requestGpioInt+0x5c>
    562e:	86 30       	cpi	r24, 0x06	; 6
    5630:	d9 f1       	breq	.+118    	; 0x56a8 <hal_requestGpioInt+0xca>
    5632:	87 30       	cpi	r24, 0x07	; 7
    5634:	09 f0       	breq	.+2      	; 0x5638 <hal_requestGpioInt+0x5a>
    5636:	68 c0       	rjmp	.+208    	; 0x5708 <hal_requestGpioInt+0x12a>
    5638:	3f c0       	rjmp	.+126    	; 0x56b8 <hal_requestGpioInt+0xda>
    563a:	89 30       	cpi	r24, 0x09	; 9
    563c:	09 f4       	brne	.+2      	; 0x5640 <hal_requestGpioInt+0x62>
    563e:	4c c0       	rjmp	.+152    	; 0x56d8 <hal_requestGpioInt+0xfa>
    5640:	8a 30       	cpi	r24, 0x0A	; 10
    5642:	09 f0       	breq	.+2      	; 0x5646 <hal_requestGpioInt+0x68>
    5644:	61 c0       	rjmp	.+194    	; 0x5708 <hal_requestGpioInt+0x12a>
    5646:	50 c0       	rjmp	.+160    	; 0x56e8 <hal_requestGpioInt+0x10a>
    5648:	80 e0       	ldi	r24, 0x00	; 0
    564a:	96 e0       	ldi	r25, 0x06	; 6
    564c:	be 01       	movw	r22, r28
    564e:	6c 5f       	subi	r22, 0xFC	; 252
    5650:	7f 4f       	sbci	r23, 0xFF	; 255
    5652:	40 e0       	ldi	r20, 0x00	; 0
    5654:	21 e0       	ldi	r18, 0x01	; 1
    5656:	4f c0       	rjmp	.+158    	; 0x56f6 <hal_requestGpioInt+0x118>
    5658:	80 e2       	ldi	r24, 0x20	; 32
    565a:	96 e0       	ldi	r25, 0x06	; 6
    565c:	be 01       	movw	r22, r28
    565e:	6c 5f       	subi	r22, 0xFC	; 252
    5660:	7f 4f       	sbci	r23, 0xFF	; 255
    5662:	42 e0       	ldi	r20, 0x02	; 2
    5664:	23 e0       	ldi	r18, 0x03	; 3
    5666:	47 c0       	rjmp	.+142    	; 0x56f6 <hal_requestGpioInt+0x118>
    5668:	80 e4       	ldi	r24, 0x40	; 64
    566a:	96 e0       	ldi	r25, 0x06	; 6
    566c:	be 01       	movw	r22, r28
    566e:	6c 5f       	subi	r22, 0xFC	; 252
    5670:	7f 4f       	sbci	r23, 0xFF	; 255
    5672:	44 e0       	ldi	r20, 0x04	; 4
    5674:	25 e0       	ldi	r18, 0x05	; 5
    5676:	3f c0       	rjmp	.+126    	; 0x56f6 <hal_requestGpioInt+0x118>
    5678:	80 e6       	ldi	r24, 0x60	; 96
    567a:	96 e0       	ldi	r25, 0x06	; 6
    567c:	be 01       	movw	r22, r28
    567e:	6c 5f       	subi	r22, 0xFC	; 252
    5680:	7f 4f       	sbci	r23, 0xFF	; 255
    5682:	46 e0       	ldi	r20, 0x06	; 6
    5684:	27 e0       	ldi	r18, 0x07	; 7
    5686:	37 c0       	rjmp	.+110    	; 0x56f6 <hal_requestGpioInt+0x118>
    5688:	80 e8       	ldi	r24, 0x80	; 128
    568a:	96 e0       	ldi	r25, 0x06	; 6
    568c:	be 01       	movw	r22, r28
    568e:	6c 5f       	subi	r22, 0xFC	; 252
    5690:	7f 4f       	sbci	r23, 0xFF	; 255
    5692:	48 e0       	ldi	r20, 0x08	; 8
    5694:	29 e0       	ldi	r18, 0x09	; 9
    5696:	2f c0       	rjmp	.+94     	; 0x56f6 <hal_requestGpioInt+0x118>
    5698:	80 ea       	ldi	r24, 0xA0	; 160
    569a:	96 e0       	ldi	r25, 0x06	; 6
    569c:	be 01       	movw	r22, r28
    569e:	6c 5f       	subi	r22, 0xFC	; 252
    56a0:	7f 4f       	sbci	r23, 0xFF	; 255
    56a2:	4a e0       	ldi	r20, 0x0A	; 10
    56a4:	2b e0       	ldi	r18, 0x0B	; 11
    56a6:	27 c0       	rjmp	.+78     	; 0x56f6 <hal_requestGpioInt+0x118>
    56a8:	80 ee       	ldi	r24, 0xE0	; 224
    56aa:	96 e0       	ldi	r25, 0x06	; 6
    56ac:	be 01       	movw	r22, r28
    56ae:	6c 5f       	subi	r22, 0xFC	; 252
    56b0:	7f 4f       	sbci	r23, 0xFF	; 255
    56b2:	4c e0       	ldi	r20, 0x0C	; 12
    56b4:	2d e0       	ldi	r18, 0x0D	; 13
    56b6:	1f c0       	rjmp	.+62     	; 0x56f6 <hal_requestGpioInt+0x118>
    56b8:	80 e0       	ldi	r24, 0x00	; 0
    56ba:	97 e0       	ldi	r25, 0x07	; 7
    56bc:	be 01       	movw	r22, r28
    56be:	6c 5f       	subi	r22, 0xFC	; 252
    56c0:	7f 4f       	sbci	r23, 0xFF	; 255
    56c2:	4e e0       	ldi	r20, 0x0E	; 14
    56c4:	2f e0       	ldi	r18, 0x0F	; 15
    56c6:	17 c0       	rjmp	.+46     	; 0x56f6 <hal_requestGpioInt+0x118>
    56c8:	80 e2       	ldi	r24, 0x20	; 32
    56ca:	97 e0       	ldi	r25, 0x07	; 7
    56cc:	be 01       	movw	r22, r28
    56ce:	6c 5f       	subi	r22, 0xFC	; 252
    56d0:	7f 4f       	sbci	r23, 0xFF	; 255
    56d2:	40 e1       	ldi	r20, 0x10	; 16
    56d4:	21 e1       	ldi	r18, 0x11	; 17
    56d6:	0f c0       	rjmp	.+30     	; 0x56f6 <hal_requestGpioInt+0x118>
    56d8:	80 ec       	ldi	r24, 0xC0	; 192
    56da:	97 e0       	ldi	r25, 0x07	; 7
    56dc:	be 01       	movw	r22, r28
    56de:	6c 5f       	subi	r22, 0xFC	; 252
    56e0:	7f 4f       	sbci	r23, 0xFF	; 255
    56e2:	42 e1       	ldi	r20, 0x12	; 18
    56e4:	23 e1       	ldi	r18, 0x13	; 19
    56e6:	07 c0       	rjmp	.+14     	; 0x56f6 <hal_requestGpioInt+0x118>
    56e8:	80 ee       	ldi	r24, 0xE0	; 224
    56ea:	97 e0       	ldi	r25, 0x07	; 7
    56ec:	be 01       	movw	r22, r28
    56ee:	6c 5f       	subi	r22, 0xFC	; 252
    56f0:	7f 4f       	sbci	r23, 0xFF	; 255
    56f2:	44 e1       	ldi	r20, 0x14	; 20
    56f4:	25 e1       	ldi	r18, 0x15	; 21
    56f6:	0e 94 a4 23 	call	0x4748	; 0x4748 <confInt>
    56fa:	8a 83       	std	Y+2, r24	; 0x02
    56fc:	9b 83       	std	Y+3, r25	; 0x03
    56fe:	89 81       	ldd	r24, Y+1	; 0x01
    5700:	8f bf       	out	0x3f, r24	; 63
    5702:	8a 81       	ldd	r24, Y+2	; 0x02
    5704:	9b 81       	ldd	r25, Y+3	; 0x03
    5706:	04 c0       	rjmp	.+8      	; 0x5710 <hal_requestGpioInt+0x132>
    5708:	89 81       	ldd	r24, Y+1	; 0x01
    570a:	8f bf       	out	0x3f, r24	; 63
    570c:	8c ef       	ldi	r24, 0xFC	; 252
    570e:	9f ef       	ldi	r25, 0xFF	; 255
    5710:	27 96       	adiw	r28, 0x07	; 7
    5712:	cd bf       	out	0x3d, r28	; 61
    5714:	de bf       	out	0x3e, r29	; 62
    5716:	df 91       	pop	r29
    5718:	cf 91       	pop	r28
    571a:	08 95       	ret

0000571c <hal_releaseGpioInt>:
    571c:	cf 93       	push	r28
    571e:	df 93       	push	r29
    5720:	00 d0       	rcall	.+0      	; 0x5722 <hal_releaseGpioInt+0x6>
    5722:	cd b7       	in	r28, 0x3d	; 61
    5724:	de b7       	in	r29, 0x3e	; 62
    5726:	8a 83       	std	Y+2, r24	; 0x02
    5728:	9b 83       	std	Y+3, r25	; 0x03
    572a:	8f b7       	in	r24, 0x3f	; 63
    572c:	89 83       	std	Y+1, r24	; 0x01
    572e:	f8 94       	cli
    5730:	ea 81       	ldd	r30, Y+2	; 0x02
    5732:	fb 81       	ldd	r31, Y+3	; 0x03
    5734:	80 91 18 21 	lds	r24, 0x2118
    5738:	90 91 19 21 	lds	r25, 0x2119
    573c:	24 81       	ldd	r18, Z+4	; 0x04
    573e:	35 81       	ldd	r19, Z+5	; 0x05
    5740:	28 17       	cp	r18, r24
    5742:	39 07       	cpc	r19, r25
    5744:	21 f0       	breq	.+8      	; 0x574e <hal_releaseGpioInt+0x32>
    5746:	89 81       	ldd	r24, Y+1	; 0x01
    5748:	8f bf       	out	0x3f, r24	; 63
    574a:	88 ef       	ldi	r24, 0xF8	; 248
    574c:	91 c0       	rjmp	.+290    	; 0x5870 <hal_releaseGpioInt+0x154>
    574e:	ea 81       	ldd	r30, Y+2	; 0x02
    5750:	fb 81       	ldd	r31, Y+3	; 0x03
    5752:	01 90       	ld	r0, Z+
    5754:	f0 81       	ld	r31, Z
    5756:	e0 2d       	mov	r30, r0
    5758:	e0 81       	ld	r30, Z
    575a:	f0 e0       	ldi	r31, 0x00	; 0
    575c:	e6 31       	cpi	r30, 0x16	; 22
    575e:	f1 05       	cpc	r31, r1
    5760:	08 f0       	brcs	.+2      	; 0x5764 <hal_releaseGpioInt+0x48>
    5762:	7b c0       	rjmp	.+246    	; 0x585a <hal_releaseGpioInt+0x13e>
    5764:	e6 50       	subi	r30, 0x06	; 6
    5766:	ff 4f       	sbci	r31, 0xFF	; 255
    5768:	ee 0f       	add	r30, r30
    576a:	ff 1f       	adc	r31, r31
    576c:	05 90       	lpm	r0, Z+
    576e:	f4 91       	lpm	r31, Z
    5770:	e0 2d       	mov	r30, r0
    5772:	19 94       	eijmp
    5774:	e0 e0       	ldi	r30, 0x00	; 0
    5776:	f6 e0       	ldi	r31, 0x06	; 6
    5778:	80 91 09 06 	lds	r24, 0x0609
    577c:	09 c0       	rjmp	.+18     	; 0x5790 <hal_releaseGpioInt+0x74>
    577e:	e0 e0       	ldi	r30, 0x00	; 0
    5780:	f6 e0       	ldi	r31, 0x06	; 6
    5782:	80 91 09 06 	lds	r24, 0x0609
    5786:	66 c0       	rjmp	.+204    	; 0x5854 <hal_releaseGpioInt+0x138>
    5788:	e0 e2       	ldi	r30, 0x20	; 32
    578a:	f6 e0       	ldi	r31, 0x06	; 6
    578c:	80 91 29 06 	lds	r24, 0x0629
    5790:	8c 7f       	andi	r24, 0xFC	; 252
    5792:	81 87       	std	Z+9, r24	; 0x09
    5794:	12 86       	std	Z+10, r1	; 0x0a
    5796:	61 c0       	rjmp	.+194    	; 0x585a <hal_releaseGpioInt+0x13e>
    5798:	e0 e2       	ldi	r30, 0x20	; 32
    579a:	f6 e0       	ldi	r31, 0x06	; 6
    579c:	80 91 29 06 	lds	r24, 0x0629
    57a0:	59 c0       	rjmp	.+178    	; 0x5854 <hal_releaseGpioInt+0x138>
    57a2:	e0 e4       	ldi	r30, 0x40	; 64
    57a4:	f6 e0       	ldi	r31, 0x06	; 6
    57a6:	80 91 49 06 	lds	r24, 0x0649
    57aa:	f2 cf       	rjmp	.-28     	; 0x5790 <hal_releaseGpioInt+0x74>
    57ac:	e0 e4       	ldi	r30, 0x40	; 64
    57ae:	f6 e0       	ldi	r31, 0x06	; 6
    57b0:	80 91 49 06 	lds	r24, 0x0649
    57b4:	4f c0       	rjmp	.+158    	; 0x5854 <hal_releaseGpioInt+0x138>
    57b6:	e0 e6       	ldi	r30, 0x60	; 96
    57b8:	f6 e0       	ldi	r31, 0x06	; 6
    57ba:	80 91 69 06 	lds	r24, 0x0669
    57be:	e8 cf       	rjmp	.-48     	; 0x5790 <hal_releaseGpioInt+0x74>
    57c0:	e0 e6       	ldi	r30, 0x60	; 96
    57c2:	f6 e0       	ldi	r31, 0x06	; 6
    57c4:	80 91 69 06 	lds	r24, 0x0669
    57c8:	45 c0       	rjmp	.+138    	; 0x5854 <hal_releaseGpioInt+0x138>
    57ca:	e0 e8       	ldi	r30, 0x80	; 128
    57cc:	f6 e0       	ldi	r31, 0x06	; 6
    57ce:	80 91 89 06 	lds	r24, 0x0689
    57d2:	de cf       	rjmp	.-68     	; 0x5790 <hal_releaseGpioInt+0x74>
    57d4:	e0 e8       	ldi	r30, 0x80	; 128
    57d6:	f6 e0       	ldi	r31, 0x06	; 6
    57d8:	80 91 89 06 	lds	r24, 0x0689
    57dc:	3b c0       	rjmp	.+118    	; 0x5854 <hal_releaseGpioInt+0x138>
    57de:	e0 ea       	ldi	r30, 0xA0	; 160
    57e0:	f6 e0       	ldi	r31, 0x06	; 6
    57e2:	80 91 a9 06 	lds	r24, 0x06A9
    57e6:	d4 cf       	rjmp	.-88     	; 0x5790 <hal_releaseGpioInt+0x74>
    57e8:	e0 ea       	ldi	r30, 0xA0	; 160
    57ea:	f6 e0       	ldi	r31, 0x06	; 6
    57ec:	80 91 a9 06 	lds	r24, 0x06A9
    57f0:	31 c0       	rjmp	.+98     	; 0x5854 <hal_releaseGpioInt+0x138>
    57f2:	e0 ee       	ldi	r30, 0xE0	; 224
    57f4:	f6 e0       	ldi	r31, 0x06	; 6
    57f6:	80 91 e9 06 	lds	r24, 0x06E9
    57fa:	ca cf       	rjmp	.-108    	; 0x5790 <hal_releaseGpioInt+0x74>
    57fc:	e0 ee       	ldi	r30, 0xE0	; 224
    57fe:	f6 e0       	ldi	r31, 0x06	; 6
    5800:	80 91 e9 06 	lds	r24, 0x06E9
    5804:	27 c0       	rjmp	.+78     	; 0x5854 <hal_releaseGpioInt+0x138>
    5806:	e0 e0       	ldi	r30, 0x00	; 0
    5808:	f7 e0       	ldi	r31, 0x07	; 7
    580a:	80 91 09 07 	lds	r24, 0x0709
    580e:	c0 cf       	rjmp	.-128    	; 0x5790 <hal_releaseGpioInt+0x74>
    5810:	e0 e0       	ldi	r30, 0x00	; 0
    5812:	f7 e0       	ldi	r31, 0x07	; 7
    5814:	80 91 09 07 	lds	r24, 0x0709
    5818:	1d c0       	rjmp	.+58     	; 0x5854 <hal_releaseGpioInt+0x138>
    581a:	e0 e2       	ldi	r30, 0x20	; 32
    581c:	f7 e0       	ldi	r31, 0x07	; 7
    581e:	80 91 29 07 	lds	r24, 0x0729
    5822:	b6 cf       	rjmp	.-148    	; 0x5790 <hal_releaseGpioInt+0x74>
    5824:	e0 e2       	ldi	r30, 0x20	; 32
    5826:	f7 e0       	ldi	r31, 0x07	; 7
    5828:	80 91 29 07 	lds	r24, 0x0729
    582c:	13 c0       	rjmp	.+38     	; 0x5854 <hal_releaseGpioInt+0x138>
    582e:	e0 ec       	ldi	r30, 0xC0	; 192
    5830:	f7 e0       	ldi	r31, 0x07	; 7
    5832:	80 91 c9 07 	lds	r24, 0x07C9
    5836:	ac cf       	rjmp	.-168    	; 0x5790 <hal_releaseGpioInt+0x74>
    5838:	e0 ec       	ldi	r30, 0xC0	; 192
    583a:	f7 e0       	ldi	r31, 0x07	; 7
    583c:	80 91 c9 07 	lds	r24, 0x07C9
    5840:	09 c0       	rjmp	.+18     	; 0x5854 <hal_releaseGpioInt+0x138>
    5842:	e0 ee       	ldi	r30, 0xE0	; 224
    5844:	f7 e0       	ldi	r31, 0x07	; 7
    5846:	80 91 e9 07 	lds	r24, 0x07E9
    584a:	a2 cf       	rjmp	.-188    	; 0x5790 <hal_releaseGpioInt+0x74>
    584c:	e0 ee       	ldi	r30, 0xE0	; 224
    584e:	f7 e0       	ldi	r31, 0x07	; 7
    5850:	80 91 e9 07 	lds	r24, 0x07E9
    5854:	83 7f       	andi	r24, 0xF3	; 243
    5856:	81 87       	std	Z+9, r24	; 0x09
    5858:	13 86       	std	Z+11, r1	; 0x0b
    585a:	80 91 18 21 	lds	r24, 0x2118
    585e:	90 91 19 21 	lds	r25, 0x2119
    5862:	6a 81       	ldd	r22, Y+2	; 0x02
    5864:	7b 81       	ldd	r23, Y+3	; 0x03
    5866:	0e 94 6a 8a 	call	0x114d4	; 0x114d4 <utl_destroyLink>
    586a:	89 81       	ldd	r24, Y+1	; 0x01
    586c:	8f bf       	out	0x3f, r24	; 63
    586e:	80 e0       	ldi	r24, 0x00	; 0
    5870:	23 96       	adiw	r28, 0x03	; 3
    5872:	cd bf       	out	0x3d, r28	; 61
    5874:	de bf       	out	0x3e, r29	; 62
    5876:	df 91       	pop	r29
    5878:	cf 91       	pop	r28
    587a:	08 95       	ret

0000587c <processSpiInterrupt>:
    587c:	0f 93       	push	r16
    587e:	1f 93       	push	r17
    5880:	cf 93       	push	r28
    5882:	df 93       	push	r29
    5884:	8c 01       	movw	r16, r24
    5886:	db 01       	movw	r26, r22
    5888:	ec 01       	movw	r28, r24
    588a:	8e 81       	ldd	r24, Y+6	; 0x06
    588c:	88 23       	and	r24, r24
    588e:	09 f0       	breq	.+2      	; 0x5892 <processSpiInterrupt+0x16>
    5890:	d4 c0       	rjmp	.+424    	; 0x5a3a <processSpiInterrupt+0x1be>
    5892:	14 96       	adiw	r26, 0x04	; 4
    5894:	8d 91       	ld	r24, X+
    5896:	9c 91       	ld	r25, X
    5898:	15 97       	sbiw	r26, 0x05	; 5
    589a:	12 96       	adiw	r26, 0x02	; 2
    589c:	cd 91       	ld	r28, X+
    589e:	dc 91       	ld	r29, X
    58a0:	13 97       	sbiw	r26, 0x03	; 3
    58a2:	1c 96       	adiw	r26, 0x0c	; 12
    58a4:	ed 91       	ld	r30, X+
    58a6:	fc 91       	ld	r31, X
    58a8:	1d 97       	sbiw	r26, 0x0d	; 13
    58aa:	07 80       	ldd	r0, Z+7	; 0x07
    58ac:	f0 85       	ldd	r31, Z+8	; 0x08
    58ae:	e0 2d       	mov	r30, r0
    58b0:	21 e2       	ldi	r18, 0x21	; 33
    58b2:	82 34       	cpi	r24, 0x42	; 66
    58b4:	92 07       	cpc	r25, r18
    58b6:	49 f0       	breq	.+18     	; 0x58ca <processSpiInterrupt+0x4e>
    58b8:	23 81       	ldd	r18, Z+3	; 0x03
    58ba:	18 96       	adiw	r26, 0x08	; 8
    58bc:	ed 91       	ld	r30, X+
    58be:	fc 91       	ld	r31, X
    58c0:	19 97       	sbiw	r26, 0x09	; 9
    58c2:	e8 0f       	add	r30, r24
    58c4:	f9 1f       	adc	r31, r25
    58c6:	20 83       	st	Z, r18
    58c8:	03 c0       	rjmp	.+6      	; 0x58d0 <processSpiInterrupt+0x54>
    58ca:	83 81       	ldd	r24, Z+3	; 0x03
    58cc:	80 93 42 21 	sts	0x2142, r24
    58d0:	18 96       	adiw	r26, 0x08	; 8
    58d2:	2d 91       	ld	r18, X+
    58d4:	3c 91       	ld	r19, X
    58d6:	19 97       	sbiw	r26, 0x09	; 9
    58d8:	2f 5f       	subi	r18, 0xFF	; 255
    58da:	3f 4f       	sbci	r19, 0xFF	; 255
    58dc:	18 96       	adiw	r26, 0x08	; 8
    58de:	2d 93       	st	X+, r18
    58e0:	3c 93       	st	X, r19
    58e2:	19 97       	sbiw	r26, 0x09	; 9
    58e4:	16 96       	adiw	r26, 0x06	; 6
    58e6:	8d 91       	ld	r24, X+
    58e8:	9c 91       	ld	r25, X
    58ea:	17 97       	sbiw	r26, 0x07	; 7
    58ec:	28 17       	cp	r18, r24
    58ee:	39 07       	cpc	r19, r25
    58f0:	80 f4       	brcc	.+32     	; 0x5912 <processSpiInterrupt+0x96>
    58f2:	1c 96       	adiw	r26, 0x0c	; 12
    58f4:	ed 91       	ld	r30, X+
    58f6:	fc 91       	ld	r31, X
    58f8:	1d 97       	sbiw	r26, 0x0d	; 13
    58fa:	07 80       	ldd	r0, Z+7	; 0x07
    58fc:	f0 85       	ldd	r31, Z+8	; 0x08
    58fe:	e0 2d       	mov	r30, r0
    5900:	41 e2       	ldi	r20, 0x21	; 33
    5902:	c2 34       	cpi	r28, 0x42	; 66
    5904:	d4 07       	cpc	r29, r20
    5906:	11 f0       	breq	.+4      	; 0x590c <processSpiInterrupt+0x90>
    5908:	c2 0f       	add	r28, r18
    590a:	d3 1f       	adc	r29, r19
    590c:	88 81       	ld	r24, Y
    590e:	83 83       	std	Z+3, r24	; 0x03
    5910:	1e c1       	rjmp	.+572    	; 0x5b4e <processSpiInterrupt+0x2d2>
    5912:	50 96       	adiw	r26, 0x10	; 16
    5914:	8c 91       	ld	r24, X
    5916:	50 97       	sbiw	r26, 0x10	; 16
    5918:	88 23       	and	r24, r24
    591a:	09 f4       	brne	.+2      	; 0x591e <processSpiInterrupt+0xa2>
    591c:	7d c0       	rjmp	.+250    	; 0x5a18 <processSpiInterrupt+0x19c>
    591e:	1b 96       	adiw	r26, 0x0b	; 11
    5920:	8c 91       	ld	r24, X
    5922:	1b 97       	sbiw	r26, 0x0b	; 11
    5924:	1a 96       	adiw	r26, 0x0a	; 10
    5926:	9c 91       	ld	r25, X
    5928:	1a 97       	sbiw	r26, 0x0a	; 10
    592a:	95 30       	cpi	r25, 0x05	; 5
    592c:	09 f4       	brne	.+2      	; 0x5930 <processSpiInterrupt+0xb4>
    592e:	4a c0       	rjmp	.+148    	; 0x59c4 <processSpiInterrupt+0x148>
    5930:	96 30       	cpi	r25, 0x06	; 6
    5932:	80 f4       	brcc	.+32     	; 0x5954 <processSpiInterrupt+0xd8>
    5934:	92 30       	cpi	r25, 0x02	; 2
    5936:	81 f1       	breq	.+96     	; 0x5998 <processSpiInterrupt+0x11c>
    5938:	93 30       	cpi	r25, 0x03	; 3
    593a:	30 f4       	brcc	.+12     	; 0x5948 <processSpiInterrupt+0xcc>
    593c:	99 23       	and	r25, r25
    593e:	e1 f0       	breq	.+56     	; 0x5978 <processSpiInterrupt+0xfc>
    5940:	91 30       	cpi	r25, 0x01	; 1
    5942:	09 f0       	breq	.+2      	; 0x5946 <processSpiInterrupt+0xca>
    5944:	69 c0       	rjmp	.+210    	; 0x5a18 <processSpiInterrupt+0x19c>
    5946:	20 c0       	rjmp	.+64     	; 0x5988 <processSpiInterrupt+0x10c>
    5948:	93 30       	cpi	r25, 0x03	; 3
    594a:	71 f1       	breq	.+92     	; 0x59a8 <processSpiInterrupt+0x12c>
    594c:	94 30       	cpi	r25, 0x04	; 4
    594e:	09 f0       	breq	.+2      	; 0x5952 <processSpiInterrupt+0xd6>
    5950:	63 c0       	rjmp	.+198    	; 0x5a18 <processSpiInterrupt+0x19c>
    5952:	31 c0       	rjmp	.+98     	; 0x59b6 <processSpiInterrupt+0x13a>
    5954:	98 30       	cpi	r25, 0x08	; 8
    5956:	09 f4       	brne	.+2      	; 0x595a <processSpiInterrupt+0xde>
    5958:	4a c0       	rjmp	.+148    	; 0x59ee <processSpiInterrupt+0x172>
    595a:	99 30       	cpi	r25, 0x09	; 9
    595c:	30 f4       	brcc	.+12     	; 0x596a <processSpiInterrupt+0xee>
    595e:	96 30       	cpi	r25, 0x06	; 6
    5960:	c1 f1       	breq	.+112    	; 0x59d2 <processSpiInterrupt+0x156>
    5962:	97 30       	cpi	r25, 0x07	; 7
    5964:	09 f0       	breq	.+2      	; 0x5968 <processSpiInterrupt+0xec>
    5966:	58 c0       	rjmp	.+176    	; 0x5a18 <processSpiInterrupt+0x19c>
    5968:	3b c0       	rjmp	.+118    	; 0x59e0 <processSpiInterrupt+0x164>
    596a:	99 30       	cpi	r25, 0x09	; 9
    596c:	09 f4       	brne	.+2      	; 0x5970 <processSpiInterrupt+0xf4>
    596e:	46 c0       	rjmp	.+140    	; 0x59fc <processSpiInterrupt+0x180>
    5970:	9a 30       	cpi	r25, 0x0A	; 10
    5972:	09 f0       	breq	.+2      	; 0x5976 <processSpiInterrupt+0xfa>
    5974:	51 c0       	rjmp	.+162    	; 0x5a18 <processSpiInterrupt+0x19c>
    5976:	49 c0       	rjmp	.+146    	; 0x5a0a <processSpiInterrupt+0x18e>
    5978:	90 91 00 06 	lds	r25, 0x0600
    597c:	98 23       	and	r25, r24
    597e:	09 f4       	brne	.+2      	; 0x5982 <processSpiInterrupt+0x106>
    5980:	4b c0       	rjmp	.+150    	; 0x5a18 <processSpiInterrupt+0x19c>
    5982:	e0 e0       	ldi	r30, 0x00	; 0
    5984:	f6 e0       	ldi	r31, 0x06	; 6
    5986:	47 c0       	rjmp	.+142    	; 0x5a16 <processSpiInterrupt+0x19a>
    5988:	90 91 20 06 	lds	r25, 0x0620
    598c:	98 23       	and	r25, r24
    598e:	09 f4       	brne	.+2      	; 0x5992 <processSpiInterrupt+0x116>
    5990:	43 c0       	rjmp	.+134    	; 0x5a18 <processSpiInterrupt+0x19c>
    5992:	e0 e2       	ldi	r30, 0x20	; 32
    5994:	f6 e0       	ldi	r31, 0x06	; 6
    5996:	3f c0       	rjmp	.+126    	; 0x5a16 <processSpiInterrupt+0x19a>
    5998:	90 91 40 06 	lds	r25, 0x0640
    599c:	98 23       	and	r25, r24
    599e:	09 f4       	brne	.+2      	; 0x59a2 <processSpiInterrupt+0x126>
    59a0:	3b c0       	rjmp	.+118    	; 0x5a18 <processSpiInterrupt+0x19c>
    59a2:	e0 e4       	ldi	r30, 0x40	; 64
    59a4:	f6 e0       	ldi	r31, 0x06	; 6
    59a6:	37 c0       	rjmp	.+110    	; 0x5a16 <processSpiInterrupt+0x19a>
    59a8:	90 91 60 06 	lds	r25, 0x0660
    59ac:	98 23       	and	r25, r24
    59ae:	a1 f1       	breq	.+104    	; 0x5a18 <processSpiInterrupt+0x19c>
    59b0:	e0 e6       	ldi	r30, 0x60	; 96
    59b2:	f6 e0       	ldi	r31, 0x06	; 6
    59b4:	30 c0       	rjmp	.+96     	; 0x5a16 <processSpiInterrupt+0x19a>
    59b6:	90 91 80 06 	lds	r25, 0x0680
    59ba:	98 23       	and	r25, r24
    59bc:	69 f1       	breq	.+90     	; 0x5a18 <processSpiInterrupt+0x19c>
    59be:	e0 e8       	ldi	r30, 0x80	; 128
    59c0:	f6 e0       	ldi	r31, 0x06	; 6
    59c2:	29 c0       	rjmp	.+82     	; 0x5a16 <processSpiInterrupt+0x19a>
    59c4:	90 91 a0 06 	lds	r25, 0x06A0
    59c8:	98 23       	and	r25, r24
    59ca:	31 f1       	breq	.+76     	; 0x5a18 <processSpiInterrupt+0x19c>
    59cc:	e0 ea       	ldi	r30, 0xA0	; 160
    59ce:	f6 e0       	ldi	r31, 0x06	; 6
    59d0:	22 c0       	rjmp	.+68     	; 0x5a16 <processSpiInterrupt+0x19a>
    59d2:	90 91 e0 06 	lds	r25, 0x06E0
    59d6:	98 23       	and	r25, r24
    59d8:	f9 f0       	breq	.+62     	; 0x5a18 <processSpiInterrupt+0x19c>
    59da:	e0 ee       	ldi	r30, 0xE0	; 224
    59dc:	f6 e0       	ldi	r31, 0x06	; 6
    59de:	1b c0       	rjmp	.+54     	; 0x5a16 <processSpiInterrupt+0x19a>
    59e0:	90 91 00 07 	lds	r25, 0x0700
    59e4:	98 23       	and	r25, r24
    59e6:	c1 f0       	breq	.+48     	; 0x5a18 <processSpiInterrupt+0x19c>
    59e8:	e0 e0       	ldi	r30, 0x00	; 0
    59ea:	f7 e0       	ldi	r31, 0x07	; 7
    59ec:	14 c0       	rjmp	.+40     	; 0x5a16 <processSpiInterrupt+0x19a>
    59ee:	90 91 20 07 	lds	r25, 0x0720
    59f2:	98 23       	and	r25, r24
    59f4:	89 f0       	breq	.+34     	; 0x5a18 <processSpiInterrupt+0x19c>
    59f6:	e0 e2       	ldi	r30, 0x20	; 32
    59f8:	f7 e0       	ldi	r31, 0x07	; 7
    59fa:	0d c0       	rjmp	.+26     	; 0x5a16 <processSpiInterrupt+0x19a>
    59fc:	90 91 c0 07 	lds	r25, 0x07C0
    5a00:	98 23       	and	r25, r24
    5a02:	51 f0       	breq	.+20     	; 0x5a18 <processSpiInterrupt+0x19c>
    5a04:	e0 ec       	ldi	r30, 0xC0	; 192
    5a06:	f7 e0       	ldi	r31, 0x07	; 7
    5a08:	06 c0       	rjmp	.+12     	; 0x5a16 <processSpiInterrupt+0x19a>
    5a0a:	90 91 e0 07 	lds	r25, 0x07E0
    5a0e:	98 23       	and	r25, r24
    5a10:	19 f0       	breq	.+6      	; 0x5a18 <processSpiInterrupt+0x19c>
    5a12:	e0 ee       	ldi	r30, 0xE0	; 224
    5a14:	f7 e0       	ldi	r31, 0x07	; 7
    5a16:	85 83       	std	Z+5, r24	; 0x05
    5a18:	ed 91       	ld	r30, X+
    5a1a:	fc 91       	ld	r31, X
    5a1c:	11 97       	sbiw	r26, 0x01	; 1
    5a1e:	30 97       	sbiw	r30, 0x00	; 0
    5a20:	49 f0       	breq	.+18     	; 0x5a34 <processSpiInterrupt+0x1b8>
    5a22:	18 96       	adiw	r26, 0x08	; 8
    5a24:	6d 91       	ld	r22, X+
    5a26:	7c 91       	ld	r23, X
    5a28:	19 97       	sbiw	r26, 0x09	; 9
    5a2a:	14 96       	adiw	r26, 0x04	; 4
    5a2c:	8d 91       	ld	r24, X+
    5a2e:	9c 91       	ld	r25, X
    5a30:	15 97       	sbiw	r26, 0x05	; 5
    5a32:	19 95       	eicall
    5a34:	e8 01       	movw	r28, r16
    5a36:	19 86       	std	Y+9, r1	; 0x09
    5a38:	8a c0       	rjmp	.+276    	; 0x5b4e <processSpiInterrupt+0x2d2>
    5a3a:	1b 96       	adiw	r26, 0x0b	; 11
    5a3c:	9c 91       	ld	r25, X
    5a3e:	1b 97       	sbiw	r26, 0x0b	; 11
    5a40:	1a 96       	adiw	r26, 0x0a	; 10
    5a42:	8c 91       	ld	r24, X
    5a44:	1a 97       	sbiw	r26, 0x0a	; 10
    5a46:	85 30       	cpi	r24, 0x05	; 5
    5a48:	69 f1       	breq	.+90     	; 0x5aa4 <processSpiInterrupt+0x228>
    5a4a:	86 30       	cpi	r24, 0x06	; 6
    5a4c:	70 f4       	brcc	.+28     	; 0x5a6a <processSpiInterrupt+0x1ee>
    5a4e:	82 30       	cpi	r24, 0x02	; 2
    5a50:	01 f1       	breq	.+64     	; 0x5a92 <processSpiInterrupt+0x216>
    5a52:	83 30       	cpi	r24, 0x03	; 3
    5a54:	28 f4       	brcc	.+10     	; 0x5a60 <processSpiInterrupt+0x1e4>
    5a56:	88 23       	and	r24, r24
    5a58:	b1 f0       	breq	.+44     	; 0x5a86 <processSpiInterrupt+0x20a>
    5a5a:	81 30       	cpi	r24, 0x01	; 1
    5a5c:	b9 f5       	brne	.+110    	; 0x5acc <processSpiInterrupt+0x250>
    5a5e:	16 c0       	rjmp	.+44     	; 0x5a8c <processSpiInterrupt+0x210>
    5a60:	83 30       	cpi	r24, 0x03	; 3
    5a62:	d1 f0       	breq	.+52     	; 0x5a98 <processSpiInterrupt+0x21c>
    5a64:	84 30       	cpi	r24, 0x04	; 4
    5a66:	91 f5       	brne	.+100    	; 0x5acc <processSpiInterrupt+0x250>
    5a68:	1a c0       	rjmp	.+52     	; 0x5a9e <processSpiInterrupt+0x222>
    5a6a:	88 30       	cpi	r24, 0x08	; 8
    5a6c:	21 f1       	breq	.+72     	; 0x5ab6 <processSpiInterrupt+0x23a>
    5a6e:	89 30       	cpi	r24, 0x09	; 9
    5a70:	28 f4       	brcc	.+10     	; 0x5a7c <processSpiInterrupt+0x200>
    5a72:	86 30       	cpi	r24, 0x06	; 6
    5a74:	d1 f0       	breq	.+52     	; 0x5aaa <processSpiInterrupt+0x22e>
    5a76:	87 30       	cpi	r24, 0x07	; 7
    5a78:	49 f5       	brne	.+82     	; 0x5acc <processSpiInterrupt+0x250>
    5a7a:	1a c0       	rjmp	.+52     	; 0x5ab0 <processSpiInterrupt+0x234>
    5a7c:	89 30       	cpi	r24, 0x09	; 9
    5a7e:	f1 f0       	breq	.+60     	; 0x5abc <processSpiInterrupt+0x240>
    5a80:	8a 30       	cpi	r24, 0x0A	; 10
    5a82:	21 f5       	brne	.+72     	; 0x5acc <processSpiInterrupt+0x250>
    5a84:	1e c0       	rjmp	.+60     	; 0x5ac2 <processSpiInterrupt+0x246>
    5a86:	80 91 08 06 	lds	r24, 0x0608
    5a8a:	1d c0       	rjmp	.+58     	; 0x5ac6 <processSpiInterrupt+0x24a>
    5a8c:	80 91 28 06 	lds	r24, 0x0628
    5a90:	1a c0       	rjmp	.+52     	; 0x5ac6 <processSpiInterrupt+0x24a>
    5a92:	80 91 48 06 	lds	r24, 0x0648
    5a96:	17 c0       	rjmp	.+46     	; 0x5ac6 <processSpiInterrupt+0x24a>
    5a98:	80 91 68 06 	lds	r24, 0x0668
    5a9c:	14 c0       	rjmp	.+40     	; 0x5ac6 <processSpiInterrupt+0x24a>
    5a9e:	80 91 88 06 	lds	r24, 0x0688
    5aa2:	11 c0       	rjmp	.+34     	; 0x5ac6 <processSpiInterrupt+0x24a>
    5aa4:	80 91 a8 06 	lds	r24, 0x06A8
    5aa8:	0e c0       	rjmp	.+28     	; 0x5ac6 <processSpiInterrupt+0x24a>
    5aaa:	80 91 e8 06 	lds	r24, 0x06E8
    5aae:	0b c0       	rjmp	.+22     	; 0x5ac6 <processSpiInterrupt+0x24a>
    5ab0:	80 91 08 07 	lds	r24, 0x0708
    5ab4:	08 c0       	rjmp	.+16     	; 0x5ac6 <processSpiInterrupt+0x24a>
    5ab6:	80 91 28 07 	lds	r24, 0x0728
    5aba:	05 c0       	rjmp	.+10     	; 0x5ac6 <processSpiInterrupt+0x24a>
    5abc:	80 91 c8 07 	lds	r24, 0x07C8
    5ac0:	02 c0       	rjmp	.+4      	; 0x5ac6 <processSpiInterrupt+0x24a>
    5ac2:	80 91 e8 07 	lds	r24, 0x07E8
    5ac6:	89 23       	and	r24, r25
    5ac8:	09 f0       	breq	.+2      	; 0x5acc <processSpiInterrupt+0x250>
    5aca:	41 c0       	rjmp	.+130    	; 0x5b4e <processSpiInterrupt+0x2d2>
    5acc:	14 96       	adiw	r26, 0x04	; 4
    5ace:	8d 91       	ld	r24, X+
    5ad0:	9c 91       	ld	r25, X
    5ad2:	15 97       	sbiw	r26, 0x05	; 5
    5ad4:	12 96       	adiw	r26, 0x02	; 2
    5ad6:	2d 91       	ld	r18, X+
    5ad8:	3c 91       	ld	r19, X
    5ada:	13 97       	sbiw	r26, 0x03	; 3
    5adc:	1c 96       	adiw	r26, 0x0c	; 12
    5ade:	ed 91       	ld	r30, X+
    5ae0:	fc 91       	ld	r31, X
    5ae2:	1d 97       	sbiw	r26, 0x0d	; 13
    5ae4:	07 80       	ldd	r0, Z+7	; 0x07
    5ae6:	f0 85       	ldd	r31, Z+8	; 0x08
    5ae8:	e0 2d       	mov	r30, r0
    5aea:	d1 e2       	ldi	r29, 0x21	; 33
    5aec:	82 34       	cpi	r24, 0x42	; 66
    5aee:	9d 07       	cpc	r25, r29
    5af0:	49 f0       	breq	.+18     	; 0x5b04 <processSpiInterrupt+0x288>
    5af2:	43 81       	ldd	r20, Z+3	; 0x03
    5af4:	18 96       	adiw	r26, 0x08	; 8
    5af6:	ed 91       	ld	r30, X+
    5af8:	fc 91       	ld	r31, X
    5afa:	19 97       	sbiw	r26, 0x09	; 9
    5afc:	e8 0f       	add	r30, r24
    5afe:	f9 1f       	adc	r31, r25
    5b00:	40 83       	st	Z, r20
    5b02:	03 c0       	rjmp	.+6      	; 0x5b0a <processSpiInterrupt+0x28e>
    5b04:	83 81       	ldd	r24, Z+3	; 0x03
    5b06:	80 93 42 21 	sts	0x2142, r24
    5b0a:	1c 96       	adiw	r26, 0x0c	; 12
    5b0c:	ed 91       	ld	r30, X+
    5b0e:	fc 91       	ld	r31, X
    5b10:	1d 97       	sbiw	r26, 0x0d	; 13
    5b12:	41 e2       	ldi	r20, 0x21	; 33
    5b14:	22 34       	cpi	r18, 0x42	; 66
    5b16:	34 07       	cpc	r19, r20
    5b18:	59 f0       	breq	.+22     	; 0x5b30 <processSpiInterrupt+0x2b4>
    5b1a:	c7 81       	ldd	r28, Z+7	; 0x07
    5b1c:	d0 85       	ldd	r29, Z+8	; 0x08
    5b1e:	18 96       	adiw	r26, 0x08	; 8
    5b20:	ed 91       	ld	r30, X+
    5b22:	fc 91       	ld	r31, X
    5b24:	19 97       	sbiw	r26, 0x09	; 9
    5b26:	e2 0f       	add	r30, r18
    5b28:	f3 1f       	adc	r31, r19
    5b2a:	80 81       	ld	r24, Z
    5b2c:	8b 83       	std	Y+3, r24	; 0x03
    5b2e:	06 c0       	rjmp	.+12     	; 0x5b3c <processSpiInterrupt+0x2c0>
    5b30:	07 80       	ldd	r0, Z+7	; 0x07
    5b32:	f0 85       	ldd	r31, Z+8	; 0x08
    5b34:	e0 2d       	mov	r30, r0
    5b36:	e9 01       	movw	r28, r18
    5b38:	88 81       	ld	r24, Y
    5b3a:	83 83       	std	Z+3, r24	; 0x03
    5b3c:	18 96       	adiw	r26, 0x08	; 8
    5b3e:	8d 91       	ld	r24, X+
    5b40:	9c 91       	ld	r25, X
    5b42:	19 97       	sbiw	r26, 0x09	; 9
    5b44:	01 96       	adiw	r24, 0x01	; 1
    5b46:	18 96       	adiw	r26, 0x08	; 8
    5b48:	8d 93       	st	X+, r24
    5b4a:	9c 93       	st	X, r25
    5b4c:	19 97       	sbiw	r26, 0x09	; 9
    5b4e:	df 91       	pop	r29
    5b50:	cf 91       	pop	r28
    5b52:	1f 91       	pop	r17
    5b54:	0f 91       	pop	r16
    5b56:	08 95       	ret

00005b58 <findSpiElement>:
    5b58:	cf 93       	push	r28
    5b5a:	df 93       	push	r29
    5b5c:	0f 92       	push	r0
    5b5e:	0f 92       	push	r0
    5b60:	cd b7       	in	r28, 0x3d	; 61
    5b62:	de b7       	in	r29, 0x3e	; 62
    5b64:	e0 91 34 21 	lds	r30, 0x2134
    5b68:	f0 91 35 21 	lds	r31, 0x2135
    5b6c:	22 81       	ldd	r18, Z+2	; 0x02
    5b6e:	33 81       	ldd	r19, Z+3	; 0x03
    5b70:	e0 91 34 21 	lds	r30, 0x2134
    5b74:	f0 91 35 21 	lds	r31, 0x2135
    5b78:	0c c0       	rjmp	.+24     	; 0x5b92 <findSpiElement+0x3a>
    5b7a:	e9 81       	ldd	r30, Y+1	; 0x01
    5b7c:	fa 81       	ldd	r31, Y+2	; 0x02
    5b7e:	01 90       	ld	r0, Z+
    5b80:	f0 81       	ld	r31, Z
    5b82:	e0 2d       	mov	r30, r0
    5b84:	90 81       	ld	r25, Z
    5b86:	98 17       	cp	r25, r24
    5b88:	69 f0       	breq	.+26     	; 0x5ba4 <findSpiElement+0x4c>
    5b8a:	21 50       	subi	r18, 0x01	; 1
    5b8c:	30 40       	sbci	r19, 0x00	; 0
    5b8e:	e9 81       	ldd	r30, Y+1	; 0x01
    5b90:	fa 81       	ldd	r31, Y+2	; 0x02
    5b92:	40 85       	ldd	r20, Z+8	; 0x08
    5b94:	51 85       	ldd	r21, Z+9	; 0x09
    5b96:	49 83       	std	Y+1, r20	; 0x01
    5b98:	5a 83       	std	Y+2, r21	; 0x02
    5b9a:	12 16       	cp	r1, r18
    5b9c:	13 06       	cpc	r1, r19
    5b9e:	6c f3       	brlt	.-38     	; 0x5b7a <findSpiElement+0x22>
    5ba0:	e0 e0       	ldi	r30, 0x00	; 0
    5ba2:	f0 e0       	ldi	r31, 0x00	; 0
    5ba4:	cf 01       	movw	r24, r30
    5ba6:	0f 90       	pop	r0
    5ba8:	0f 90       	pop	r0
    5baa:	df 91       	pop	r29
    5bac:	cf 91       	pop	r28
    5bae:	08 95       	ret

00005bb0 <processMasterSpiRxDmaInt>:
    5bb0:	0f 93       	push	r16
    5bb2:	1f 93       	push	r17
    5bb4:	cf 93       	push	r28
    5bb6:	df 93       	push	r29
    5bb8:	8c 01       	movw	r16, r24
    5bba:	eb 01       	movw	r28, r22
    5bbc:	8c 81       	ldd	r24, Y+4	; 0x04
    5bbe:	9d 81       	ldd	r25, Y+5	; 0x05
    5bc0:	21 e2       	ldi	r18, 0x21	; 33
    5bc2:	82 34       	cpi	r24, 0x42	; 66
    5bc4:	92 07       	cpc	r25, r18
    5bc6:	19 f4       	brne	.+6      	; 0x5bce <processMasterSpiRxDmaInt+0x1e>
    5bc8:	81 e0       	ldi	r24, 0x01	; 1
    5bca:	90 e0       	ldi	r25, 0x00	; 0
    5bcc:	05 c0       	rjmp	.+10     	; 0x5bd8 <processMasterSpiRxDmaInt+0x28>
    5bce:	f8 01       	movw	r30, r16
    5bd0:	80 89       	ldd	r24, Z+16	; 0x10
    5bd2:	91 89       	ldd	r25, Z+17	; 0x11
    5bd4:	0e 94 85 4e 	call	0x9d0a	; 0x9d0a <hal_getDmaTransferCount>
    5bd8:	88 87       	std	Y+8, r24	; 0x08
    5bda:	99 87       	std	Y+9, r25	; 0x09
    5bdc:	88 89       	ldd	r24, Y+16	; 0x10
    5bde:	88 23       	and	r24, r24
    5be0:	09 f4       	brne	.+2      	; 0x5be4 <processMasterSpiRxDmaInt+0x34>
    5be2:	79 c0       	rjmp	.+242    	; 0x5cd6 <processMasterSpiRxDmaInt+0x126>
    5be4:	8b 85       	ldd	r24, Y+11	; 0x0b
    5be6:	9a 85       	ldd	r25, Y+10	; 0x0a
    5be8:	95 30       	cpi	r25, 0x05	; 5
    5bea:	09 f4       	brne	.+2      	; 0x5bee <processMasterSpiRxDmaInt+0x3e>
    5bec:	4a c0       	rjmp	.+148    	; 0x5c82 <processMasterSpiRxDmaInt+0xd2>
    5bee:	96 30       	cpi	r25, 0x06	; 6
    5bf0:	80 f4       	brcc	.+32     	; 0x5c12 <processMasterSpiRxDmaInt+0x62>
    5bf2:	92 30       	cpi	r25, 0x02	; 2
    5bf4:	81 f1       	breq	.+96     	; 0x5c56 <processMasterSpiRxDmaInt+0xa6>
    5bf6:	93 30       	cpi	r25, 0x03	; 3
    5bf8:	30 f4       	brcc	.+12     	; 0x5c06 <processMasterSpiRxDmaInt+0x56>
    5bfa:	99 23       	and	r25, r25
    5bfc:	e1 f0       	breq	.+56     	; 0x5c36 <processMasterSpiRxDmaInt+0x86>
    5bfe:	91 30       	cpi	r25, 0x01	; 1
    5c00:	09 f0       	breq	.+2      	; 0x5c04 <processMasterSpiRxDmaInt+0x54>
    5c02:	69 c0       	rjmp	.+210    	; 0x5cd6 <processMasterSpiRxDmaInt+0x126>
    5c04:	20 c0       	rjmp	.+64     	; 0x5c46 <processMasterSpiRxDmaInt+0x96>
    5c06:	93 30       	cpi	r25, 0x03	; 3
    5c08:	71 f1       	breq	.+92     	; 0x5c66 <processMasterSpiRxDmaInt+0xb6>
    5c0a:	94 30       	cpi	r25, 0x04	; 4
    5c0c:	09 f0       	breq	.+2      	; 0x5c10 <processMasterSpiRxDmaInt+0x60>
    5c0e:	63 c0       	rjmp	.+198    	; 0x5cd6 <processMasterSpiRxDmaInt+0x126>
    5c10:	31 c0       	rjmp	.+98     	; 0x5c74 <processMasterSpiRxDmaInt+0xc4>
    5c12:	98 30       	cpi	r25, 0x08	; 8
    5c14:	09 f4       	brne	.+2      	; 0x5c18 <processMasterSpiRxDmaInt+0x68>
    5c16:	4a c0       	rjmp	.+148    	; 0x5cac <processMasterSpiRxDmaInt+0xfc>
    5c18:	99 30       	cpi	r25, 0x09	; 9
    5c1a:	30 f4       	brcc	.+12     	; 0x5c28 <processMasterSpiRxDmaInt+0x78>
    5c1c:	96 30       	cpi	r25, 0x06	; 6
    5c1e:	c1 f1       	breq	.+112    	; 0x5c90 <processMasterSpiRxDmaInt+0xe0>
    5c20:	97 30       	cpi	r25, 0x07	; 7
    5c22:	09 f0       	breq	.+2      	; 0x5c26 <processMasterSpiRxDmaInt+0x76>
    5c24:	58 c0       	rjmp	.+176    	; 0x5cd6 <processMasterSpiRxDmaInt+0x126>
    5c26:	3b c0       	rjmp	.+118    	; 0x5c9e <processMasterSpiRxDmaInt+0xee>
    5c28:	99 30       	cpi	r25, 0x09	; 9
    5c2a:	09 f4       	brne	.+2      	; 0x5c2e <processMasterSpiRxDmaInt+0x7e>
    5c2c:	46 c0       	rjmp	.+140    	; 0x5cba <processMasterSpiRxDmaInt+0x10a>
    5c2e:	9a 30       	cpi	r25, 0x0A	; 10
    5c30:	09 f0       	breq	.+2      	; 0x5c34 <processMasterSpiRxDmaInt+0x84>
    5c32:	51 c0       	rjmp	.+162    	; 0x5cd6 <processMasterSpiRxDmaInt+0x126>
    5c34:	49 c0       	rjmp	.+146    	; 0x5cc8 <processMasterSpiRxDmaInt+0x118>
    5c36:	90 91 00 06 	lds	r25, 0x0600
    5c3a:	98 23       	and	r25, r24
    5c3c:	09 f4       	brne	.+2      	; 0x5c40 <processMasterSpiRxDmaInt+0x90>
    5c3e:	4b c0       	rjmp	.+150    	; 0x5cd6 <processMasterSpiRxDmaInt+0x126>
    5c40:	e0 e0       	ldi	r30, 0x00	; 0
    5c42:	f6 e0       	ldi	r31, 0x06	; 6
    5c44:	47 c0       	rjmp	.+142    	; 0x5cd4 <processMasterSpiRxDmaInt+0x124>
    5c46:	90 91 20 06 	lds	r25, 0x0620
    5c4a:	98 23       	and	r25, r24
    5c4c:	09 f4       	brne	.+2      	; 0x5c50 <processMasterSpiRxDmaInt+0xa0>
    5c4e:	43 c0       	rjmp	.+134    	; 0x5cd6 <processMasterSpiRxDmaInt+0x126>
    5c50:	e0 e2       	ldi	r30, 0x20	; 32
    5c52:	f6 e0       	ldi	r31, 0x06	; 6
    5c54:	3f c0       	rjmp	.+126    	; 0x5cd4 <processMasterSpiRxDmaInt+0x124>
    5c56:	90 91 40 06 	lds	r25, 0x0640
    5c5a:	98 23       	and	r25, r24
    5c5c:	09 f4       	brne	.+2      	; 0x5c60 <processMasterSpiRxDmaInt+0xb0>
    5c5e:	3b c0       	rjmp	.+118    	; 0x5cd6 <processMasterSpiRxDmaInt+0x126>
    5c60:	e0 e4       	ldi	r30, 0x40	; 64
    5c62:	f6 e0       	ldi	r31, 0x06	; 6
    5c64:	37 c0       	rjmp	.+110    	; 0x5cd4 <processMasterSpiRxDmaInt+0x124>
    5c66:	90 91 60 06 	lds	r25, 0x0660
    5c6a:	98 23       	and	r25, r24
    5c6c:	a1 f1       	breq	.+104    	; 0x5cd6 <processMasterSpiRxDmaInt+0x126>
    5c6e:	e0 e6       	ldi	r30, 0x60	; 96
    5c70:	f6 e0       	ldi	r31, 0x06	; 6
    5c72:	30 c0       	rjmp	.+96     	; 0x5cd4 <processMasterSpiRxDmaInt+0x124>
    5c74:	90 91 80 06 	lds	r25, 0x0680
    5c78:	98 23       	and	r25, r24
    5c7a:	69 f1       	breq	.+90     	; 0x5cd6 <processMasterSpiRxDmaInt+0x126>
    5c7c:	e0 e8       	ldi	r30, 0x80	; 128
    5c7e:	f6 e0       	ldi	r31, 0x06	; 6
    5c80:	29 c0       	rjmp	.+82     	; 0x5cd4 <processMasterSpiRxDmaInt+0x124>
    5c82:	90 91 a0 06 	lds	r25, 0x06A0
    5c86:	98 23       	and	r25, r24
    5c88:	31 f1       	breq	.+76     	; 0x5cd6 <processMasterSpiRxDmaInt+0x126>
    5c8a:	e0 ea       	ldi	r30, 0xA0	; 160
    5c8c:	f6 e0       	ldi	r31, 0x06	; 6
    5c8e:	22 c0       	rjmp	.+68     	; 0x5cd4 <processMasterSpiRxDmaInt+0x124>
    5c90:	90 91 e0 06 	lds	r25, 0x06E0
    5c94:	98 23       	and	r25, r24
    5c96:	f9 f0       	breq	.+62     	; 0x5cd6 <processMasterSpiRxDmaInt+0x126>
    5c98:	e0 ee       	ldi	r30, 0xE0	; 224
    5c9a:	f6 e0       	ldi	r31, 0x06	; 6
    5c9c:	1b c0       	rjmp	.+54     	; 0x5cd4 <processMasterSpiRxDmaInt+0x124>
    5c9e:	90 91 00 07 	lds	r25, 0x0700
    5ca2:	98 23       	and	r25, r24
    5ca4:	c1 f0       	breq	.+48     	; 0x5cd6 <processMasterSpiRxDmaInt+0x126>
    5ca6:	e0 e0       	ldi	r30, 0x00	; 0
    5ca8:	f7 e0       	ldi	r31, 0x07	; 7
    5caa:	14 c0       	rjmp	.+40     	; 0x5cd4 <processMasterSpiRxDmaInt+0x124>
    5cac:	90 91 20 07 	lds	r25, 0x0720
    5cb0:	98 23       	and	r25, r24
    5cb2:	89 f0       	breq	.+34     	; 0x5cd6 <processMasterSpiRxDmaInt+0x126>
    5cb4:	e0 e2       	ldi	r30, 0x20	; 32
    5cb6:	f7 e0       	ldi	r31, 0x07	; 7
    5cb8:	0d c0       	rjmp	.+26     	; 0x5cd4 <processMasterSpiRxDmaInt+0x124>
    5cba:	90 91 c0 07 	lds	r25, 0x07C0
    5cbe:	98 23       	and	r25, r24
    5cc0:	51 f0       	breq	.+20     	; 0x5cd6 <processMasterSpiRxDmaInt+0x126>
    5cc2:	e0 ec       	ldi	r30, 0xC0	; 192
    5cc4:	f7 e0       	ldi	r31, 0x07	; 7
    5cc6:	06 c0       	rjmp	.+12     	; 0x5cd4 <processMasterSpiRxDmaInt+0x124>
    5cc8:	90 91 e0 07 	lds	r25, 0x07E0
    5ccc:	98 23       	and	r25, r24
    5cce:	19 f0       	breq	.+6      	; 0x5cd6 <processMasterSpiRxDmaInt+0x126>
    5cd0:	e0 ee       	ldi	r30, 0xE0	; 224
    5cd2:	f7 e0       	ldi	r31, 0x07	; 7
    5cd4:	85 83       	std	Z+5, r24	; 0x05
    5cd6:	f8 01       	movw	r30, r16
    5cd8:	80 89       	ldd	r24, Z+16	; 0x10
    5cda:	91 89       	ldd	r25, Z+17	; 0x11
    5cdc:	0e 94 e9 50 	call	0xa1d2	; 0xa1d2 <hal_dmaDisableChannel>
    5ce0:	e8 81       	ld	r30, Y
    5ce2:	f9 81       	ldd	r31, Y+1	; 0x01
    5ce4:	30 97       	sbiw	r30, 0x00	; 0
    5ce6:	29 f0       	breq	.+10     	; 0x5cf2 <processMasterSpiRxDmaInt+0x142>
    5ce8:	68 85       	ldd	r22, Y+8	; 0x08
    5cea:	79 85       	ldd	r23, Y+9	; 0x09
    5cec:	8c 81       	ldd	r24, Y+4	; 0x04
    5cee:	9d 81       	ldd	r25, Y+5	; 0x05
    5cf0:	19 95       	eicall
    5cf2:	f8 01       	movw	r30, r16
    5cf4:	11 86       	std	Z+9, r1	; 0x09
    5cf6:	18 86       	std	Y+8, r1	; 0x08
    5cf8:	19 86       	std	Y+9, r1	; 0x09
    5cfa:	df 91       	pop	r29
    5cfc:	cf 91       	pop	r28
    5cfe:	1f 91       	pop	r17
    5d00:	0f 91       	pop	r16
    5d02:	08 95       	ret

00005d04 <masterSpiFRxDmaInt>:
    5d04:	83 e0       	ldi	r24, 0x03	; 3
    5d06:	0e 94 ac 2d 	call	0x5b58	; 0x5b58 <findSpiElement>
    5d0a:	00 97       	sbiw	r24, 0x00	; 0
    5d0c:	29 f0       	breq	.+10     	; 0x5d18 <masterSpiFRxDmaInt+0x14>
    5d0e:	fc 01       	movw	r30, r24
    5d10:	62 85       	ldd	r22, Z+10	; 0x0a
    5d12:	73 85       	ldd	r23, Z+11	; 0x0b
    5d14:	0e 94 d8 2d 	call	0x5bb0	; 0x5bb0 <processMasterSpiRxDmaInt>
    5d18:	08 95       	ret

00005d1a <masterSpiERxDmaInt>:
    5d1a:	82 e0       	ldi	r24, 0x02	; 2
    5d1c:	0e 94 ac 2d 	call	0x5b58	; 0x5b58 <findSpiElement>
    5d20:	00 97       	sbiw	r24, 0x00	; 0
    5d22:	29 f0       	breq	.+10     	; 0x5d2e <masterSpiERxDmaInt+0x14>
    5d24:	fc 01       	movw	r30, r24
    5d26:	62 85       	ldd	r22, Z+10	; 0x0a
    5d28:	73 85       	ldd	r23, Z+11	; 0x0b
    5d2a:	0e 94 d8 2d 	call	0x5bb0	; 0x5bb0 <processMasterSpiRxDmaInt>
    5d2e:	08 95       	ret

00005d30 <masterSpiDRxDmaInt>:
    5d30:	81 e0       	ldi	r24, 0x01	; 1
    5d32:	0e 94 ac 2d 	call	0x5b58	; 0x5b58 <findSpiElement>
    5d36:	00 97       	sbiw	r24, 0x00	; 0
    5d38:	29 f0       	breq	.+10     	; 0x5d44 <masterSpiDRxDmaInt+0x14>
    5d3a:	fc 01       	movw	r30, r24
    5d3c:	62 85       	ldd	r22, Z+10	; 0x0a
    5d3e:	73 85       	ldd	r23, Z+11	; 0x0b
    5d40:	0e 94 d8 2d 	call	0x5bb0	; 0x5bb0 <processMasterSpiRxDmaInt>
    5d44:	08 95       	ret

00005d46 <masterSpiCRxDmaInt>:
    5d46:	80 e0       	ldi	r24, 0x00	; 0
    5d48:	0e 94 ac 2d 	call	0x5b58	; 0x5b58 <findSpiElement>
    5d4c:	00 97       	sbiw	r24, 0x00	; 0
    5d4e:	29 f0       	breq	.+10     	; 0x5d5a <masterSpiCRxDmaInt+0x14>
    5d50:	fc 01       	movw	r30, r24
    5d52:	62 85       	ldd	r22, Z+10	; 0x0a
    5d54:	73 85       	ldd	r23, Z+11	; 0x0b
    5d56:	0e 94 d8 2d 	call	0x5bb0	; 0x5bb0 <processMasterSpiRxDmaInt>
    5d5a:	08 95       	ret

00005d5c <processSlaveSpiChipSelectInt.isra.0>:
    5d5c:	0f 93       	push	r16
    5d5e:	1f 93       	push	r17
    5d60:	cf 93       	push	r28
    5d62:	df 93       	push	r29
    5d64:	8c 01       	movw	r16, r24
    5d66:	fc 01       	movw	r30, r24
    5d68:	c2 85       	ldd	r28, Z+10	; 0x0a
    5d6a:	d3 85       	ldd	r29, Z+11	; 0x0b
    5d6c:	80 89       	ldd	r24, Z+16	; 0x10
    5d6e:	91 89       	ldd	r25, Z+17	; 0x11
    5d70:	18 16       	cp	r1, r24
    5d72:	19 06       	cpc	r1, r25
    5d74:	ac f4       	brge	.+42     	; 0x5da0 <processSlaveSpiChipSelectInt.isra.0+0x44>
    5d76:	8c 81       	ldd	r24, Y+4	; 0x04
    5d78:	9d 81       	ldd	r25, Y+5	; 0x05
    5d7a:	f1 e2       	ldi	r31, 0x21	; 33
    5d7c:	82 34       	cpi	r24, 0x42	; 66
    5d7e:	9f 07       	cpc	r25, r31
    5d80:	31 f4       	brne	.+12     	; 0x5d8e <processSlaveSpiChipSelectInt.isra.0+0x32>
    5d82:	f8 01       	movw	r30, r16
    5d84:	80 89       	ldd	r24, Z+16	; 0x10
    5d86:	91 89       	ldd	r25, Z+17	; 0x11
    5d88:	0e 94 85 4e 	call	0x9d0a	; 0x9d0a <hal_getDmaTransferCount>
    5d8c:	02 c0       	rjmp	.+4      	; 0x5d92 <processSlaveSpiChipSelectInt.isra.0+0x36>
    5d8e:	81 e0       	ldi	r24, 0x01	; 1
    5d90:	90 e0       	ldi	r25, 0x00	; 0
    5d92:	88 87       	std	Y+8, r24	; 0x08
    5d94:	99 87       	std	Y+9, r25	; 0x09
    5d96:	f8 01       	movw	r30, r16
    5d98:	80 89       	ldd	r24, Z+16	; 0x10
    5d9a:	91 89       	ldd	r25, Z+17	; 0x11
    5d9c:	0e 94 e9 50 	call	0xa1d2	; 0xa1d2 <hal_dmaDisableChannel>
    5da0:	68 85       	ldd	r22, Y+8	; 0x08
    5da2:	79 85       	ldd	r23, Y+9	; 0x09
    5da4:	61 15       	cp	r22, r1
    5da6:	71 05       	cpc	r23, r1
    5da8:	59 f0       	breq	.+22     	; 0x5dc0 <processSlaveSpiChipSelectInt.isra.0+0x64>
    5daa:	e8 81       	ld	r30, Y
    5dac:	f9 81       	ldd	r31, Y+1	; 0x01
    5dae:	30 97       	sbiw	r30, 0x00	; 0
    5db0:	19 f0       	breq	.+6      	; 0x5db8 <processSlaveSpiChipSelectInt.isra.0+0x5c>
    5db2:	8c 81       	ldd	r24, Y+4	; 0x04
    5db4:	9d 81       	ldd	r25, Y+5	; 0x05
    5db6:	19 95       	eicall
    5db8:	f8 01       	movw	r30, r16
    5dba:	11 86       	std	Z+9, r1	; 0x09
    5dbc:	18 86       	std	Y+8, r1	; 0x08
    5dbe:	19 86       	std	Y+9, r1	; 0x09
    5dc0:	df 91       	pop	r29
    5dc2:	cf 91       	pop	r28
    5dc4:	1f 91       	pop	r17
    5dc6:	0f 91       	pop	r16
    5dc8:	08 95       	ret

00005dca <slaveSpiFChipSelectInt>:
    5dca:	83 e0       	ldi	r24, 0x03	; 3
    5dcc:	0e 94 ac 2d 	call	0x5b58	; 0x5b58 <findSpiElement>
    5dd0:	00 97       	sbiw	r24, 0x00	; 0
    5dd2:	31 f0       	breq	.+12     	; 0x5de0 <slaveSpiFChipSelectInt+0x16>
    5dd4:	fc 01       	movw	r30, r24
    5dd6:	26 81       	ldd	r18, Z+6	; 0x06
    5dd8:	21 30       	cpi	r18, 0x01	; 1
    5dda:	11 f4       	brne	.+4      	; 0x5de0 <slaveSpiFChipSelectInt+0x16>
    5ddc:	0e 94 ae 2e 	call	0x5d5c	; 0x5d5c <processSlaveSpiChipSelectInt.isra.0>
    5de0:	08 95       	ret

00005de2 <slaveSpiEChipSelectInt>:
    5de2:	82 e0       	ldi	r24, 0x02	; 2
    5de4:	0e 94 ac 2d 	call	0x5b58	; 0x5b58 <findSpiElement>
    5de8:	00 97       	sbiw	r24, 0x00	; 0
    5dea:	31 f0       	breq	.+12     	; 0x5df8 <slaveSpiEChipSelectInt+0x16>
    5dec:	fc 01       	movw	r30, r24
    5dee:	26 81       	ldd	r18, Z+6	; 0x06
    5df0:	21 30       	cpi	r18, 0x01	; 1
    5df2:	11 f4       	brne	.+4      	; 0x5df8 <slaveSpiEChipSelectInt+0x16>
    5df4:	0e 94 ae 2e 	call	0x5d5c	; 0x5d5c <processSlaveSpiChipSelectInt.isra.0>
    5df8:	08 95       	ret

00005dfa <slaveSpiDChipSelectInt>:
    5dfa:	81 e0       	ldi	r24, 0x01	; 1
    5dfc:	0e 94 ac 2d 	call	0x5b58	; 0x5b58 <findSpiElement>
    5e00:	00 97       	sbiw	r24, 0x00	; 0
    5e02:	31 f0       	breq	.+12     	; 0x5e10 <slaveSpiDChipSelectInt+0x16>
    5e04:	fc 01       	movw	r30, r24
    5e06:	26 81       	ldd	r18, Z+6	; 0x06
    5e08:	21 30       	cpi	r18, 0x01	; 1
    5e0a:	11 f4       	brne	.+4      	; 0x5e10 <slaveSpiDChipSelectInt+0x16>
    5e0c:	0e 94 ae 2e 	call	0x5d5c	; 0x5d5c <processSlaveSpiChipSelectInt.isra.0>
    5e10:	08 95       	ret

00005e12 <slaveSpiCChipSelectInt>:
    5e12:	80 e0       	ldi	r24, 0x00	; 0
    5e14:	0e 94 ac 2d 	call	0x5b58	; 0x5b58 <findSpiElement>
    5e18:	00 97       	sbiw	r24, 0x00	; 0
    5e1a:	31 f0       	breq	.+12     	; 0x5e28 <slaveSpiCChipSelectInt+0x16>
    5e1c:	fc 01       	movw	r30, r24
    5e1e:	26 81       	ldd	r18, Z+6	; 0x06
    5e20:	21 30       	cpi	r18, 0x01	; 1
    5e22:	11 f4       	brne	.+4      	; 0x5e28 <slaveSpiCChipSelectInt+0x16>
    5e24:	0e 94 ae 2e 	call	0x5d5c	; 0x5d5c <processSlaveSpiChipSelectInt.isra.0>
    5e28:	08 95       	ret

00005e2a <__vector_24>:
    5e2a:	1f 92       	push	r1
    5e2c:	0f 92       	push	r0
    5e2e:	0f b6       	in	r0, 0x3f	; 63
    5e30:	0f 92       	push	r0
    5e32:	08 b6       	in	r0, 0x38	; 56
    5e34:	0f 92       	push	r0
    5e36:	09 b6       	in	r0, 0x39	; 57
    5e38:	0f 92       	push	r0
    5e3a:	0b b6       	in	r0, 0x3b	; 59
    5e3c:	0f 92       	push	r0
    5e3e:	11 24       	eor	r1, r1
    5e40:	2f 93       	push	r18
    5e42:	3f 93       	push	r19
    5e44:	4f 93       	push	r20
    5e46:	5f 93       	push	r21
    5e48:	6f 93       	push	r22
    5e4a:	7f 93       	push	r23
    5e4c:	8f 93       	push	r24
    5e4e:	9f 93       	push	r25
    5e50:	af 93       	push	r26
    5e52:	bf 93       	push	r27
    5e54:	ef 93       	push	r30
    5e56:	ff 93       	push	r31
    5e58:	80 e0       	ldi	r24, 0x00	; 0
    5e5a:	0e 94 ac 2d 	call	0x5b58	; 0x5b58 <findSpiElement>
    5e5e:	00 97       	sbiw	r24, 0x00	; 0
    5e60:	29 f0       	breq	.+10     	; 0x5e6c <__vector_24+0x42>
    5e62:	fc 01       	movw	r30, r24
    5e64:	62 85       	ldd	r22, Z+10	; 0x0a
    5e66:	73 85       	ldd	r23, Z+11	; 0x0b
    5e68:	0e 94 3e 2c 	call	0x587c	; 0x587c <processSpiInterrupt>
    5e6c:	ff 91       	pop	r31
    5e6e:	ef 91       	pop	r30
    5e70:	bf 91       	pop	r27
    5e72:	af 91       	pop	r26
    5e74:	9f 91       	pop	r25
    5e76:	8f 91       	pop	r24
    5e78:	7f 91       	pop	r23
    5e7a:	6f 91       	pop	r22
    5e7c:	5f 91       	pop	r21
    5e7e:	4f 91       	pop	r20
    5e80:	3f 91       	pop	r19
    5e82:	2f 91       	pop	r18
    5e84:	0f 90       	pop	r0
    5e86:	0b be       	out	0x3b, r0	; 59
    5e88:	0f 90       	pop	r0
    5e8a:	09 be       	out	0x39, r0	; 57
    5e8c:	0f 90       	pop	r0
    5e8e:	08 be       	out	0x38, r0	; 56
    5e90:	0f 90       	pop	r0
    5e92:	0f be       	out	0x3f, r0	; 63
    5e94:	0f 90       	pop	r0
    5e96:	1f 90       	pop	r1
    5e98:	18 95       	reti

00005e9a <__vector_87>:
    5e9a:	1f 92       	push	r1
    5e9c:	0f 92       	push	r0
    5e9e:	0f b6       	in	r0, 0x3f	; 63
    5ea0:	0f 92       	push	r0
    5ea2:	08 b6       	in	r0, 0x38	; 56
    5ea4:	0f 92       	push	r0
    5ea6:	09 b6       	in	r0, 0x39	; 57
    5ea8:	0f 92       	push	r0
    5eaa:	0b b6       	in	r0, 0x3b	; 59
    5eac:	0f 92       	push	r0
    5eae:	11 24       	eor	r1, r1
    5eb0:	2f 93       	push	r18
    5eb2:	3f 93       	push	r19
    5eb4:	4f 93       	push	r20
    5eb6:	5f 93       	push	r21
    5eb8:	6f 93       	push	r22
    5eba:	7f 93       	push	r23
    5ebc:	8f 93       	push	r24
    5ebe:	9f 93       	push	r25
    5ec0:	af 93       	push	r26
    5ec2:	bf 93       	push	r27
    5ec4:	ef 93       	push	r30
    5ec6:	ff 93       	push	r31
    5ec8:	81 e0       	ldi	r24, 0x01	; 1
    5eca:	0e 94 ac 2d 	call	0x5b58	; 0x5b58 <findSpiElement>
    5ece:	00 97       	sbiw	r24, 0x00	; 0
    5ed0:	29 f0       	breq	.+10     	; 0x5edc <__vector_87+0x42>
    5ed2:	fc 01       	movw	r30, r24
    5ed4:	62 85       	ldd	r22, Z+10	; 0x0a
    5ed6:	73 85       	ldd	r23, Z+11	; 0x0b
    5ed8:	0e 94 3e 2c 	call	0x587c	; 0x587c <processSpiInterrupt>
    5edc:	ff 91       	pop	r31
    5ede:	ef 91       	pop	r30
    5ee0:	bf 91       	pop	r27
    5ee2:	af 91       	pop	r26
    5ee4:	9f 91       	pop	r25
    5ee6:	8f 91       	pop	r24
    5ee8:	7f 91       	pop	r23
    5eea:	6f 91       	pop	r22
    5eec:	5f 91       	pop	r21
    5eee:	4f 91       	pop	r20
    5ef0:	3f 91       	pop	r19
    5ef2:	2f 91       	pop	r18
    5ef4:	0f 90       	pop	r0
    5ef6:	0b be       	out	0x3b, r0	; 59
    5ef8:	0f 90       	pop	r0
    5efa:	09 be       	out	0x39, r0	; 57
    5efc:	0f 90       	pop	r0
    5efe:	08 be       	out	0x38, r0	; 56
    5f00:	0f 90       	pop	r0
    5f02:	0f be       	out	0x3f, r0	; 63
    5f04:	0f 90       	pop	r0
    5f06:	1f 90       	pop	r1
    5f08:	18 95       	reti

00005f0a <__vector_57>:
    5f0a:	1f 92       	push	r1
    5f0c:	0f 92       	push	r0
    5f0e:	0f b6       	in	r0, 0x3f	; 63
    5f10:	0f 92       	push	r0
    5f12:	08 b6       	in	r0, 0x38	; 56
    5f14:	0f 92       	push	r0
    5f16:	09 b6       	in	r0, 0x39	; 57
    5f18:	0f 92       	push	r0
    5f1a:	0b b6       	in	r0, 0x3b	; 59
    5f1c:	0f 92       	push	r0
    5f1e:	11 24       	eor	r1, r1
    5f20:	2f 93       	push	r18
    5f22:	3f 93       	push	r19
    5f24:	4f 93       	push	r20
    5f26:	5f 93       	push	r21
    5f28:	6f 93       	push	r22
    5f2a:	7f 93       	push	r23
    5f2c:	8f 93       	push	r24
    5f2e:	9f 93       	push	r25
    5f30:	af 93       	push	r26
    5f32:	bf 93       	push	r27
    5f34:	ef 93       	push	r30
    5f36:	ff 93       	push	r31
    5f38:	82 e0       	ldi	r24, 0x02	; 2
    5f3a:	0e 94 ac 2d 	call	0x5b58	; 0x5b58 <findSpiElement>
    5f3e:	00 97       	sbiw	r24, 0x00	; 0
    5f40:	29 f0       	breq	.+10     	; 0x5f4c <__vector_57+0x42>
    5f42:	fc 01       	movw	r30, r24
    5f44:	62 85       	ldd	r22, Z+10	; 0x0a
    5f46:	73 85       	ldd	r23, Z+11	; 0x0b
    5f48:	0e 94 3e 2c 	call	0x587c	; 0x587c <processSpiInterrupt>
    5f4c:	ff 91       	pop	r31
    5f4e:	ef 91       	pop	r30
    5f50:	bf 91       	pop	r27
    5f52:	af 91       	pop	r26
    5f54:	9f 91       	pop	r25
    5f56:	8f 91       	pop	r24
    5f58:	7f 91       	pop	r23
    5f5a:	6f 91       	pop	r22
    5f5c:	5f 91       	pop	r21
    5f5e:	4f 91       	pop	r20
    5f60:	3f 91       	pop	r19
    5f62:	2f 91       	pop	r18
    5f64:	0f 90       	pop	r0
    5f66:	0b be       	out	0x3b, r0	; 59
    5f68:	0f 90       	pop	r0
    5f6a:	09 be       	out	0x39, r0	; 57
    5f6c:	0f 90       	pop	r0
    5f6e:	08 be       	out	0x38, r0	; 56
    5f70:	0f 90       	pop	r0
    5f72:	0f be       	out	0x3f, r0	; 63
    5f74:	0f 90       	pop	r0
    5f76:	1f 90       	pop	r1
    5f78:	18 95       	reti

00005f7a <__vector_118>:
    5f7a:	1f 92       	push	r1
    5f7c:	0f 92       	push	r0
    5f7e:	0f b6       	in	r0, 0x3f	; 63
    5f80:	0f 92       	push	r0
    5f82:	08 b6       	in	r0, 0x38	; 56
    5f84:	0f 92       	push	r0
    5f86:	09 b6       	in	r0, 0x39	; 57
    5f88:	0f 92       	push	r0
    5f8a:	0b b6       	in	r0, 0x3b	; 59
    5f8c:	0f 92       	push	r0
    5f8e:	11 24       	eor	r1, r1
    5f90:	2f 93       	push	r18
    5f92:	3f 93       	push	r19
    5f94:	4f 93       	push	r20
    5f96:	5f 93       	push	r21
    5f98:	6f 93       	push	r22
    5f9a:	7f 93       	push	r23
    5f9c:	8f 93       	push	r24
    5f9e:	9f 93       	push	r25
    5fa0:	af 93       	push	r26
    5fa2:	bf 93       	push	r27
    5fa4:	ef 93       	push	r30
    5fa6:	ff 93       	push	r31
    5fa8:	83 e0       	ldi	r24, 0x03	; 3
    5faa:	0e 94 ac 2d 	call	0x5b58	; 0x5b58 <findSpiElement>
    5fae:	00 97       	sbiw	r24, 0x00	; 0
    5fb0:	29 f0       	breq	.+10     	; 0x5fbc <__vector_118+0x42>
    5fb2:	fc 01       	movw	r30, r24
    5fb4:	62 85       	ldd	r22, Z+10	; 0x0a
    5fb6:	73 85       	ldd	r23, Z+11	; 0x0b
    5fb8:	0e 94 3e 2c 	call	0x587c	; 0x587c <processSpiInterrupt>
    5fbc:	ff 91       	pop	r31
    5fbe:	ef 91       	pop	r30
    5fc0:	bf 91       	pop	r27
    5fc2:	af 91       	pop	r26
    5fc4:	9f 91       	pop	r25
    5fc6:	8f 91       	pop	r24
    5fc8:	7f 91       	pop	r23
    5fca:	6f 91       	pop	r22
    5fcc:	5f 91       	pop	r21
    5fce:	4f 91       	pop	r20
    5fd0:	3f 91       	pop	r19
    5fd2:	2f 91       	pop	r18
    5fd4:	0f 90       	pop	r0
    5fd6:	0b be       	out	0x3b, r0	; 59
    5fd8:	0f 90       	pop	r0
    5fda:	09 be       	out	0x39, r0	; 57
    5fdc:	0f 90       	pop	r0
    5fde:	08 be       	out	0x38, r0	; 56
    5fe0:	0f 90       	pop	r0
    5fe2:	0f be       	out	0x3f, r0	; 63
    5fe4:	0f 90       	pop	r0
    5fe6:	1f 90       	pop	r1
    5fe8:	18 95       	reti

00005fea <hal_spiConfCallBack>:
    5fea:	cf 93       	push	r28
    5fec:	df 93       	push	r29
    5fee:	00 d0       	rcall	.+0      	; 0x5ff0 <hal_spiConfCallBack+0x6>
    5ff0:	cd b7       	in	r28, 0x3d	; 61
    5ff2:	de b7       	in	r29, 0x3e	; 62
    5ff4:	8a 83       	std	Y+2, r24	; 0x02
    5ff6:	9b 83       	std	Y+3, r25	; 0x03
    5ff8:	8f b7       	in	r24, 0x3f	; 63
    5ffa:	89 83       	std	Y+1, r24	; 0x01
    5ffc:	f8 94       	cli
    5ffe:	ea 81       	ldd	r30, Y+2	; 0x02
    6000:	fb 81       	ldd	r31, Y+3	; 0x03
    6002:	80 91 26 21 	lds	r24, 0x2126
    6006:	90 91 27 21 	lds	r25, 0x2127
    600a:	24 81       	ldd	r18, Z+4	; 0x04
    600c:	35 81       	ldd	r19, Z+5	; 0x05
    600e:	28 17       	cp	r18, r24
    6010:	39 07       	cpc	r19, r25
    6012:	21 f0       	breq	.+8      	; 0x601c <hal_spiConfCallBack+0x32>
    6014:	89 81       	ldd	r24, Y+1	; 0x01
    6016:	8f bf       	out	0x3f, r24	; 63
    6018:	8e ef       	ldi	r24, 0xFE	; 254
    601a:	15 c0       	rjmp	.+42     	; 0x6046 <hal_spiConfCallBack+0x5c>
    601c:	ea 81       	ldd	r30, Y+2	; 0x02
    601e:	fb 81       	ldd	r31, Y+3	; 0x03
    6020:	01 90       	ld	r0, Z+
    6022:	f0 81       	ld	r31, Z
    6024:	e0 2d       	mov	r30, r0
    6026:	a4 85       	ldd	r26, Z+12	; 0x0c
    6028:	b5 85       	ldd	r27, Z+13	; 0x0d
    602a:	19 96       	adiw	r26, 0x09	; 9
    602c:	8c 91       	ld	r24, X
    602e:	19 97       	sbiw	r26, 0x09	; 9
    6030:	88 23       	and	r24, r24
    6032:	21 f0       	breq	.+8      	; 0x603c <hal_spiConfCallBack+0x52>
    6034:	89 81       	ldd	r24, Y+1	; 0x01
    6036:	8f bf       	out	0x3f, r24	; 63
    6038:	84 ef       	ldi	r24, 0xF4	; 244
    603a:	05 c0       	rjmp	.+10     	; 0x6046 <hal_spiConfCallBack+0x5c>
    603c:	60 83       	st	Z, r22
    603e:	71 83       	std	Z+1, r23	; 0x01
    6040:	89 81       	ldd	r24, Y+1	; 0x01
    6042:	8f bf       	out	0x3f, r24	; 63
    6044:	80 e0       	ldi	r24, 0x00	; 0
    6046:	23 96       	adiw	r28, 0x03	; 3
    6048:	cd bf       	out	0x3d, r28	; 61
    604a:	de bf       	out	0x3e, r29	; 62
    604c:	df 91       	pop	r29
    604e:	cf 91       	pop	r28
    6050:	08 95       	ret

00006052 <hal_spiSetChipSelect>:
    6052:	cf 93       	push	r28
    6054:	df 93       	push	r29
    6056:	00 d0       	rcall	.+0      	; 0x6058 <hal_spiSetChipSelect+0x6>
    6058:	cd b7       	in	r28, 0x3d	; 61
    605a:	de b7       	in	r29, 0x3e	; 62
    605c:	8a 83       	std	Y+2, r24	; 0x02
    605e:	9b 83       	std	Y+3, r25	; 0x03
    6060:	8f b7       	in	r24, 0x3f	; 63
    6062:	89 83       	std	Y+1, r24	; 0x01
    6064:	f8 94       	cli
    6066:	ea 81       	ldd	r30, Y+2	; 0x02
    6068:	fb 81       	ldd	r31, Y+3	; 0x03
    606a:	80 91 26 21 	lds	r24, 0x2126
    606e:	90 91 27 21 	lds	r25, 0x2127
    6072:	24 81       	ldd	r18, Z+4	; 0x04
    6074:	35 81       	ldd	r19, Z+5	; 0x05
    6076:	28 17       	cp	r18, r24
    6078:	39 07       	cpc	r19, r25
    607a:	21 f0       	breq	.+8      	; 0x6084 <hal_spiSetChipSelect+0x32>
    607c:	89 81       	ldd	r24, Y+1	; 0x01
    607e:	8f bf       	out	0x3f, r24	; 63
    6080:	8e ef       	ldi	r24, 0xFE	; 254
    6082:	2e c1       	rjmp	.+604    	; 0x62e0 <hal_spiSetChipSelect+0x28e>
    6084:	ea 81       	ldd	r30, Y+2	; 0x02
    6086:	fb 81       	ldd	r31, Y+3	; 0x03
    6088:	01 90       	ld	r0, Z+
    608a:	f0 81       	ld	r31, Z
    608c:	e0 2d       	mov	r30, r0
    608e:	24 85       	ldd	r18, Z+12	; 0x0c
    6090:	35 85       	ldd	r19, Z+13	; 0x0d
    6092:	d9 01       	movw	r26, r18
    6094:	19 96       	adiw	r26, 0x09	; 9
    6096:	8c 91       	ld	r24, X
    6098:	19 97       	sbiw	r26, 0x09	; 9
    609a:	88 23       	and	r24, r24
    609c:	59 f0       	breq	.+22     	; 0x60b4 <hal_spiSetChipSelect+0x62>
    609e:	1a 96       	adiw	r26, 0x0a	; 10
    60a0:	8d 91       	ld	r24, X+
    60a2:	9c 91       	ld	r25, X
    60a4:	1b 97       	sbiw	r26, 0x0b	; 11
    60a6:	8e 17       	cp	r24, r30
    60a8:	9f 07       	cpc	r25, r31
    60aa:	21 f0       	breq	.+8      	; 0x60b4 <hal_spiSetChipSelect+0x62>
    60ac:	89 81       	ldd	r24, Y+1	; 0x01
    60ae:	8f bf       	out	0x3f, r24	; 63
    60b0:	84 ef       	ldi	r24, 0xF4	; 244
    60b2:	16 c1       	rjmp	.+556    	; 0x62e0 <hal_spiSetChipSelect+0x28e>
    60b4:	d9 01       	movw	r26, r18
    60b6:	17 96       	adiw	r26, 0x07	; 7
    60b8:	8d 91       	ld	r24, X+
    60ba:	9c 91       	ld	r25, X
    60bc:	18 97       	sbiw	r26, 0x08	; 8
    60be:	dc 01       	movw	r26, r24
    60c0:	11 96       	adiw	r26, 0x01	; 1
    60c2:	1c 92       	st	X, r1
    60c4:	11 97       	sbiw	r26, 0x01	; 1
    60c6:	66 23       	and	r22, r22
    60c8:	09 f0       	breq	.+2      	; 0x60cc <hal_spiSetChipSelect+0x7a>
    60ca:	8c c0       	rjmp	.+280    	; 0x61e4 <hal_spiSetChipSelect+0x192>
    60cc:	81 e0       	ldi	r24, 0x01	; 1
    60ce:	d9 01       	movw	r26, r18
    60d0:	19 96       	adiw	r26, 0x09	; 9
    60d2:	8c 93       	st	X, r24
    60d4:	19 97       	sbiw	r26, 0x09	; 9
    60d6:	1a 96       	adiw	r26, 0x0a	; 10
    60d8:	ed 93       	st	X+, r30
    60da:	fc 93       	st	X, r31
    60dc:	1b 97       	sbiw	r26, 0x0b	; 11
    60de:	83 85       	ldd	r24, Z+11	; 0x0b
    60e0:	92 85       	ldd	r25, Z+10	; 0x0a
    60e2:	95 30       	cpi	r25, 0x05	; 5
    60e4:	09 f4       	brne	.+2      	; 0x60e8 <hal_spiSetChipSelect+0x96>
    60e6:	4d c0       	rjmp	.+154    	; 0x6182 <hal_spiSetChipSelect+0x130>
    60e8:	96 30       	cpi	r25, 0x06	; 6
    60ea:	80 f4       	brcc	.+32     	; 0x610c <hal_spiSetChipSelect+0xba>
    60ec:	92 30       	cpi	r25, 0x02	; 2
    60ee:	89 f1       	breq	.+98     	; 0x6152 <hal_spiSetChipSelect+0x100>
    60f0:	93 30       	cpi	r25, 0x03	; 3
    60f2:	30 f4       	brcc	.+12     	; 0x6100 <hal_spiSetChipSelect+0xae>
    60f4:	99 23       	and	r25, r25
    60f6:	e9 f0       	breq	.+58     	; 0x6132 <hal_spiSetChipSelect+0xe0>
    60f8:	91 30       	cpi	r25, 0x01	; 1
    60fa:	09 f0       	breq	.+2      	; 0x60fe <hal_spiSetChipSelect+0xac>
    60fc:	ee c0       	rjmp	.+476    	; 0x62da <hal_spiSetChipSelect+0x288>
    60fe:	21 c0       	rjmp	.+66     	; 0x6142 <hal_spiSetChipSelect+0xf0>
    6100:	93 30       	cpi	r25, 0x03	; 3
    6102:	79 f1       	breq	.+94     	; 0x6162 <hal_spiSetChipSelect+0x110>
    6104:	94 30       	cpi	r25, 0x04	; 4
    6106:	09 f0       	breq	.+2      	; 0x610a <hal_spiSetChipSelect+0xb8>
    6108:	e8 c0       	rjmp	.+464    	; 0x62da <hal_spiSetChipSelect+0x288>
    610a:	33 c0       	rjmp	.+102    	; 0x6172 <hal_spiSetChipSelect+0x120>
    610c:	98 30       	cpi	r25, 0x08	; 8
    610e:	09 f4       	brne	.+2      	; 0x6112 <hal_spiSetChipSelect+0xc0>
    6110:	50 c0       	rjmp	.+160    	; 0x61b2 <hal_spiSetChipSelect+0x160>
    6112:	99 30       	cpi	r25, 0x09	; 9
    6114:	38 f4       	brcc	.+14     	; 0x6124 <hal_spiSetChipSelect+0xd2>
    6116:	96 30       	cpi	r25, 0x06	; 6
    6118:	09 f4       	brne	.+2      	; 0x611c <hal_spiSetChipSelect+0xca>
    611a:	3b c0       	rjmp	.+118    	; 0x6192 <hal_spiSetChipSelect+0x140>
    611c:	97 30       	cpi	r25, 0x07	; 7
    611e:	09 f0       	breq	.+2      	; 0x6122 <hal_spiSetChipSelect+0xd0>
    6120:	dc c0       	rjmp	.+440    	; 0x62da <hal_spiSetChipSelect+0x288>
    6122:	3f c0       	rjmp	.+126    	; 0x61a2 <hal_spiSetChipSelect+0x150>
    6124:	99 30       	cpi	r25, 0x09	; 9
    6126:	09 f4       	brne	.+2      	; 0x612a <hal_spiSetChipSelect+0xd8>
    6128:	4c c0       	rjmp	.+152    	; 0x61c2 <hal_spiSetChipSelect+0x170>
    612a:	9a 30       	cpi	r25, 0x0A	; 10
    612c:	09 f0       	breq	.+2      	; 0x6130 <hal_spiSetChipSelect+0xde>
    612e:	d5 c0       	rjmp	.+426    	; 0x62da <hal_spiSetChipSelect+0x288>
    6130:	50 c0       	rjmp	.+160    	; 0x61d2 <hal_spiSetChipSelect+0x180>
    6132:	90 91 00 06 	lds	r25, 0x0600
    6136:	98 23       	and	r25, r24
    6138:	09 f4       	brne	.+2      	; 0x613c <hal_spiSetChipSelect+0xea>
    613a:	cf c0       	rjmp	.+414    	; 0x62da <hal_spiSetChipSelect+0x288>
    613c:	e0 e0       	ldi	r30, 0x00	; 0
    613e:	f6 e0       	ldi	r31, 0x06	; 6
    6140:	4f c0       	rjmp	.+158    	; 0x61e0 <hal_spiSetChipSelect+0x18e>
    6142:	90 91 20 06 	lds	r25, 0x0620
    6146:	98 23       	and	r25, r24
    6148:	09 f4       	brne	.+2      	; 0x614c <hal_spiSetChipSelect+0xfa>
    614a:	c7 c0       	rjmp	.+398    	; 0x62da <hal_spiSetChipSelect+0x288>
    614c:	e0 e2       	ldi	r30, 0x20	; 32
    614e:	f6 e0       	ldi	r31, 0x06	; 6
    6150:	47 c0       	rjmp	.+142    	; 0x61e0 <hal_spiSetChipSelect+0x18e>
    6152:	90 91 40 06 	lds	r25, 0x0640
    6156:	98 23       	and	r25, r24
    6158:	09 f4       	brne	.+2      	; 0x615c <hal_spiSetChipSelect+0x10a>
    615a:	bf c0       	rjmp	.+382    	; 0x62da <hal_spiSetChipSelect+0x288>
    615c:	e0 e4       	ldi	r30, 0x40	; 64
    615e:	f6 e0       	ldi	r31, 0x06	; 6
    6160:	3f c0       	rjmp	.+126    	; 0x61e0 <hal_spiSetChipSelect+0x18e>
    6162:	90 91 60 06 	lds	r25, 0x0660
    6166:	98 23       	and	r25, r24
    6168:	09 f4       	brne	.+2      	; 0x616c <hal_spiSetChipSelect+0x11a>
    616a:	b7 c0       	rjmp	.+366    	; 0x62da <hal_spiSetChipSelect+0x288>
    616c:	e0 e6       	ldi	r30, 0x60	; 96
    616e:	f6 e0       	ldi	r31, 0x06	; 6
    6170:	37 c0       	rjmp	.+110    	; 0x61e0 <hal_spiSetChipSelect+0x18e>
    6172:	90 91 80 06 	lds	r25, 0x0680
    6176:	98 23       	and	r25, r24
    6178:	09 f4       	brne	.+2      	; 0x617c <hal_spiSetChipSelect+0x12a>
    617a:	af c0       	rjmp	.+350    	; 0x62da <hal_spiSetChipSelect+0x288>
    617c:	e0 e8       	ldi	r30, 0x80	; 128
    617e:	f6 e0       	ldi	r31, 0x06	; 6
    6180:	2f c0       	rjmp	.+94     	; 0x61e0 <hal_spiSetChipSelect+0x18e>
    6182:	90 91 a0 06 	lds	r25, 0x06A0
    6186:	98 23       	and	r25, r24
    6188:	09 f4       	brne	.+2      	; 0x618c <hal_spiSetChipSelect+0x13a>
    618a:	a7 c0       	rjmp	.+334    	; 0x62da <hal_spiSetChipSelect+0x288>
    618c:	e0 ea       	ldi	r30, 0xA0	; 160
    618e:	f6 e0       	ldi	r31, 0x06	; 6
    6190:	27 c0       	rjmp	.+78     	; 0x61e0 <hal_spiSetChipSelect+0x18e>
    6192:	90 91 e0 06 	lds	r25, 0x06E0
    6196:	98 23       	and	r25, r24
    6198:	09 f4       	brne	.+2      	; 0x619c <hal_spiSetChipSelect+0x14a>
    619a:	9f c0       	rjmp	.+318    	; 0x62da <hal_spiSetChipSelect+0x288>
    619c:	e0 ee       	ldi	r30, 0xE0	; 224
    619e:	f6 e0       	ldi	r31, 0x06	; 6
    61a0:	1f c0       	rjmp	.+62     	; 0x61e0 <hal_spiSetChipSelect+0x18e>
    61a2:	90 91 00 07 	lds	r25, 0x0700
    61a6:	98 23       	and	r25, r24
    61a8:	09 f4       	brne	.+2      	; 0x61ac <hal_spiSetChipSelect+0x15a>
    61aa:	97 c0       	rjmp	.+302    	; 0x62da <hal_spiSetChipSelect+0x288>
    61ac:	e0 e0       	ldi	r30, 0x00	; 0
    61ae:	f7 e0       	ldi	r31, 0x07	; 7
    61b0:	17 c0       	rjmp	.+46     	; 0x61e0 <hal_spiSetChipSelect+0x18e>
    61b2:	90 91 20 07 	lds	r25, 0x0720
    61b6:	98 23       	and	r25, r24
    61b8:	09 f4       	brne	.+2      	; 0x61bc <hal_spiSetChipSelect+0x16a>
    61ba:	8f c0       	rjmp	.+286    	; 0x62da <hal_spiSetChipSelect+0x288>
    61bc:	e0 e2       	ldi	r30, 0x20	; 32
    61be:	f7 e0       	ldi	r31, 0x07	; 7
    61c0:	0f c0       	rjmp	.+30     	; 0x61e0 <hal_spiSetChipSelect+0x18e>
    61c2:	90 91 c0 07 	lds	r25, 0x07C0
    61c6:	98 23       	and	r25, r24
    61c8:	09 f4       	brne	.+2      	; 0x61cc <hal_spiSetChipSelect+0x17a>
    61ca:	87 c0       	rjmp	.+270    	; 0x62da <hal_spiSetChipSelect+0x288>
    61cc:	e0 ec       	ldi	r30, 0xC0	; 192
    61ce:	f7 e0       	ldi	r31, 0x07	; 7
    61d0:	07 c0       	rjmp	.+14     	; 0x61e0 <hal_spiSetChipSelect+0x18e>
    61d2:	90 91 e0 07 	lds	r25, 0x07E0
    61d6:	98 23       	and	r25, r24
    61d8:	09 f4       	brne	.+2      	; 0x61dc <hal_spiSetChipSelect+0x18a>
    61da:	7f c0       	rjmp	.+254    	; 0x62da <hal_spiSetChipSelect+0x288>
    61dc:	e0 ee       	ldi	r30, 0xE0	; 224
    61de:	f7 e0       	ldi	r31, 0x07	; 7
    61e0:	86 83       	std	Z+6, r24	; 0x06
    61e2:	7b c0       	rjmp	.+246    	; 0x62da <hal_spiSetChipSelect+0x288>
    61e4:	83 85       	ldd	r24, Z+11	; 0x0b
    61e6:	92 85       	ldd	r25, Z+10	; 0x0a
    61e8:	95 30       	cpi	r25, 0x05	; 5
    61ea:	09 f4       	brne	.+2      	; 0x61ee <hal_spiSetChipSelect+0x19c>
    61ec:	4a c0       	rjmp	.+148    	; 0x6282 <hal_spiSetChipSelect+0x230>
    61ee:	96 30       	cpi	r25, 0x06	; 6
    61f0:	80 f4       	brcc	.+32     	; 0x6212 <hal_spiSetChipSelect+0x1c0>
    61f2:	92 30       	cpi	r25, 0x02	; 2
    61f4:	81 f1       	breq	.+96     	; 0x6256 <hal_spiSetChipSelect+0x204>
    61f6:	93 30       	cpi	r25, 0x03	; 3
    61f8:	30 f4       	brcc	.+12     	; 0x6206 <hal_spiSetChipSelect+0x1b4>
    61fa:	99 23       	and	r25, r25
    61fc:	e1 f0       	breq	.+56     	; 0x6236 <hal_spiSetChipSelect+0x1e4>
    61fe:	91 30       	cpi	r25, 0x01	; 1
    6200:	09 f0       	breq	.+2      	; 0x6204 <hal_spiSetChipSelect+0x1b2>
    6202:	69 c0       	rjmp	.+210    	; 0x62d6 <hal_spiSetChipSelect+0x284>
    6204:	20 c0       	rjmp	.+64     	; 0x6246 <hal_spiSetChipSelect+0x1f4>
    6206:	93 30       	cpi	r25, 0x03	; 3
    6208:	71 f1       	breq	.+92     	; 0x6266 <hal_spiSetChipSelect+0x214>
    620a:	94 30       	cpi	r25, 0x04	; 4
    620c:	09 f0       	breq	.+2      	; 0x6210 <hal_spiSetChipSelect+0x1be>
    620e:	63 c0       	rjmp	.+198    	; 0x62d6 <hal_spiSetChipSelect+0x284>
    6210:	31 c0       	rjmp	.+98     	; 0x6274 <hal_spiSetChipSelect+0x222>
    6212:	98 30       	cpi	r25, 0x08	; 8
    6214:	09 f4       	brne	.+2      	; 0x6218 <hal_spiSetChipSelect+0x1c6>
    6216:	4a c0       	rjmp	.+148    	; 0x62ac <hal_spiSetChipSelect+0x25a>
    6218:	99 30       	cpi	r25, 0x09	; 9
    621a:	30 f4       	brcc	.+12     	; 0x6228 <hal_spiSetChipSelect+0x1d6>
    621c:	96 30       	cpi	r25, 0x06	; 6
    621e:	c1 f1       	breq	.+112    	; 0x6290 <hal_spiSetChipSelect+0x23e>
    6220:	97 30       	cpi	r25, 0x07	; 7
    6222:	09 f0       	breq	.+2      	; 0x6226 <hal_spiSetChipSelect+0x1d4>
    6224:	58 c0       	rjmp	.+176    	; 0x62d6 <hal_spiSetChipSelect+0x284>
    6226:	3b c0       	rjmp	.+118    	; 0x629e <hal_spiSetChipSelect+0x24c>
    6228:	99 30       	cpi	r25, 0x09	; 9
    622a:	09 f4       	brne	.+2      	; 0x622e <hal_spiSetChipSelect+0x1dc>
    622c:	46 c0       	rjmp	.+140    	; 0x62ba <hal_spiSetChipSelect+0x268>
    622e:	9a 30       	cpi	r25, 0x0A	; 10
    6230:	09 f0       	breq	.+2      	; 0x6234 <hal_spiSetChipSelect+0x1e2>
    6232:	51 c0       	rjmp	.+162    	; 0x62d6 <hal_spiSetChipSelect+0x284>
    6234:	49 c0       	rjmp	.+146    	; 0x62c8 <hal_spiSetChipSelect+0x276>
    6236:	90 91 00 06 	lds	r25, 0x0600
    623a:	98 23       	and	r25, r24
    623c:	09 f4       	brne	.+2      	; 0x6240 <hal_spiSetChipSelect+0x1ee>
    623e:	4b c0       	rjmp	.+150    	; 0x62d6 <hal_spiSetChipSelect+0x284>
    6240:	e0 e0       	ldi	r30, 0x00	; 0
    6242:	f6 e0       	ldi	r31, 0x06	; 6
    6244:	47 c0       	rjmp	.+142    	; 0x62d4 <hal_spiSetChipSelect+0x282>
    6246:	90 91 20 06 	lds	r25, 0x0620
    624a:	98 23       	and	r25, r24
    624c:	09 f4       	brne	.+2      	; 0x6250 <hal_spiSetChipSelect+0x1fe>
    624e:	43 c0       	rjmp	.+134    	; 0x62d6 <hal_spiSetChipSelect+0x284>
    6250:	e0 e2       	ldi	r30, 0x20	; 32
    6252:	f6 e0       	ldi	r31, 0x06	; 6
    6254:	3f c0       	rjmp	.+126    	; 0x62d4 <hal_spiSetChipSelect+0x282>
    6256:	90 91 40 06 	lds	r25, 0x0640
    625a:	98 23       	and	r25, r24
    625c:	09 f4       	brne	.+2      	; 0x6260 <hal_spiSetChipSelect+0x20e>
    625e:	3b c0       	rjmp	.+118    	; 0x62d6 <hal_spiSetChipSelect+0x284>
    6260:	e0 e4       	ldi	r30, 0x40	; 64
    6262:	f6 e0       	ldi	r31, 0x06	; 6
    6264:	37 c0       	rjmp	.+110    	; 0x62d4 <hal_spiSetChipSelect+0x282>
    6266:	90 91 60 06 	lds	r25, 0x0660
    626a:	98 23       	and	r25, r24
    626c:	a1 f1       	breq	.+104    	; 0x62d6 <hal_spiSetChipSelect+0x284>
    626e:	e0 e6       	ldi	r30, 0x60	; 96
    6270:	f6 e0       	ldi	r31, 0x06	; 6
    6272:	30 c0       	rjmp	.+96     	; 0x62d4 <hal_spiSetChipSelect+0x282>
    6274:	90 91 80 06 	lds	r25, 0x0680
    6278:	98 23       	and	r25, r24
    627a:	69 f1       	breq	.+90     	; 0x62d6 <hal_spiSetChipSelect+0x284>
    627c:	e0 e8       	ldi	r30, 0x80	; 128
    627e:	f6 e0       	ldi	r31, 0x06	; 6
    6280:	29 c0       	rjmp	.+82     	; 0x62d4 <hal_spiSetChipSelect+0x282>
    6282:	90 91 a0 06 	lds	r25, 0x06A0
    6286:	98 23       	and	r25, r24
    6288:	31 f1       	breq	.+76     	; 0x62d6 <hal_spiSetChipSelect+0x284>
    628a:	e0 ea       	ldi	r30, 0xA0	; 160
    628c:	f6 e0       	ldi	r31, 0x06	; 6
    628e:	22 c0       	rjmp	.+68     	; 0x62d4 <hal_spiSetChipSelect+0x282>
    6290:	90 91 e0 06 	lds	r25, 0x06E0
    6294:	98 23       	and	r25, r24
    6296:	f9 f0       	breq	.+62     	; 0x62d6 <hal_spiSetChipSelect+0x284>
    6298:	e0 ee       	ldi	r30, 0xE0	; 224
    629a:	f6 e0       	ldi	r31, 0x06	; 6
    629c:	1b c0       	rjmp	.+54     	; 0x62d4 <hal_spiSetChipSelect+0x282>
    629e:	90 91 00 07 	lds	r25, 0x0700
    62a2:	98 23       	and	r25, r24
    62a4:	c1 f0       	breq	.+48     	; 0x62d6 <hal_spiSetChipSelect+0x284>
    62a6:	e0 e0       	ldi	r30, 0x00	; 0
    62a8:	f7 e0       	ldi	r31, 0x07	; 7
    62aa:	14 c0       	rjmp	.+40     	; 0x62d4 <hal_spiSetChipSelect+0x282>
    62ac:	90 91 20 07 	lds	r25, 0x0720
    62b0:	98 23       	and	r25, r24
    62b2:	89 f0       	breq	.+34     	; 0x62d6 <hal_spiSetChipSelect+0x284>
    62b4:	e0 e2       	ldi	r30, 0x20	; 32
    62b6:	f7 e0       	ldi	r31, 0x07	; 7
    62b8:	0d c0       	rjmp	.+26     	; 0x62d4 <hal_spiSetChipSelect+0x282>
    62ba:	90 91 c0 07 	lds	r25, 0x07C0
    62be:	98 23       	and	r25, r24
    62c0:	51 f0       	breq	.+20     	; 0x62d6 <hal_spiSetChipSelect+0x284>
    62c2:	e0 ec       	ldi	r30, 0xC0	; 192
    62c4:	f7 e0       	ldi	r31, 0x07	; 7
    62c6:	06 c0       	rjmp	.+12     	; 0x62d4 <hal_spiSetChipSelect+0x282>
    62c8:	90 91 e0 07 	lds	r25, 0x07E0
    62cc:	98 23       	and	r25, r24
    62ce:	19 f0       	breq	.+6      	; 0x62d6 <hal_spiSetChipSelect+0x284>
    62d0:	e0 ee       	ldi	r30, 0xE0	; 224
    62d2:	f7 e0       	ldi	r31, 0x07	; 7
    62d4:	85 83       	std	Z+5, r24	; 0x05
    62d6:	f9 01       	movw	r30, r18
    62d8:	11 86       	std	Z+9, r1	; 0x09
    62da:	89 81       	ldd	r24, Y+1	; 0x01
    62dc:	8f bf       	out	0x3f, r24	; 63
    62de:	80 e0       	ldi	r24, 0x00	; 0
    62e0:	23 96       	adiw	r28, 0x03	; 3
    62e2:	cd bf       	out	0x3d, r28	; 61
    62e4:	de bf       	out	0x3e, r29	; 62
    62e6:	df 91       	pop	r29
    62e8:	cf 91       	pop	r28
    62ea:	08 95       	ret

000062ec <hal_spiReadByte>:
    62ec:	cf 93       	push	r28
    62ee:	df 93       	push	r29
    62f0:	00 d0       	rcall	.+0      	; 0x62f2 <hal_spiReadByte+0x6>
    62f2:	cd b7       	in	r28, 0x3d	; 61
    62f4:	de b7       	in	r29, 0x3e	; 62
    62f6:	8a 83       	std	Y+2, r24	; 0x02
    62f8:	9b 83       	std	Y+3, r25	; 0x03
    62fa:	8f b7       	in	r24, 0x3f	; 63
    62fc:	89 83       	std	Y+1, r24	; 0x01
    62fe:	f8 94       	cli
    6300:	ea 81       	ldd	r30, Y+2	; 0x02
    6302:	fb 81       	ldd	r31, Y+3	; 0x03
    6304:	80 91 26 21 	lds	r24, 0x2126
    6308:	90 91 27 21 	lds	r25, 0x2127
    630c:	24 81       	ldd	r18, Z+4	; 0x04
    630e:	35 81       	ldd	r19, Z+5	; 0x05
    6310:	28 17       	cp	r18, r24
    6312:	39 07       	cpc	r19, r25
    6314:	21 f0       	breq	.+8      	; 0x631e <hal_spiReadByte+0x32>
    6316:	89 81       	ldd	r24, Y+1	; 0x01
    6318:	8f bf       	out	0x3f, r24	; 63
    631a:	8e ef       	ldi	r24, 0xFE	; 254
    631c:	32 c0       	rjmp	.+100    	; 0x6382 <hal_spiReadByte+0x96>
    631e:	ea 81       	ldd	r30, Y+2	; 0x02
    6320:	fb 81       	ldd	r31, Y+3	; 0x03
    6322:	20 81       	ld	r18, Z
    6324:	31 81       	ldd	r19, Z+1	; 0x01
    6326:	d9 01       	movw	r26, r18
    6328:	1c 96       	adiw	r26, 0x0c	; 12
    632a:	ed 91       	ld	r30, X+
    632c:	fc 91       	ld	r31, X
    632e:	1d 97       	sbiw	r26, 0x0d	; 13
    6330:	81 85       	ldd	r24, Z+9	; 0x09
    6332:	88 23       	and	r24, r24
    6334:	49 f0       	breq	.+18     	; 0x6348 <hal_spiReadByte+0x5c>
    6336:	82 85       	ldd	r24, Z+10	; 0x0a
    6338:	93 85       	ldd	r25, Z+11	; 0x0b
    633a:	82 17       	cp	r24, r18
    633c:	93 07       	cpc	r25, r19
    633e:	21 f0       	breq	.+8      	; 0x6348 <hal_spiReadByte+0x5c>
    6340:	89 81       	ldd	r24, Y+1	; 0x01
    6342:	8f bf       	out	0x3f, r24	; 63
    6344:	84 ef       	ldi	r24, 0xF4	; 244
    6346:	1d c0       	rjmp	.+58     	; 0x6382 <hal_spiReadByte+0x96>
    6348:	a7 81       	ldd	r26, Z+7	; 0x07
    634a:	b0 85       	ldd	r27, Z+8	; 0x08
    634c:	11 96       	adiw	r26, 0x01	; 1
    634e:	1c 92       	st	X, r1
    6350:	81 e0       	ldi	r24, 0x01	; 1
    6352:	81 87       	std	Z+9, r24	; 0x09
    6354:	22 87       	std	Z+10, r18	; 0x0a
    6356:	33 87       	std	Z+11, r19	; 0x0b
    6358:	89 81       	ldd	r24, Y+1	; 0x01
    635a:	8f bf       	out	0x3f, r24	; 63
    635c:	a7 81       	ldd	r26, Z+7	; 0x07
    635e:	b0 85       	ldd	r27, Z+8	; 0x08
    6360:	12 96       	adiw	r26, 0x02	; 2
    6362:	8c 91       	ld	r24, X
    6364:	12 97       	sbiw	r26, 0x02	; 2
    6366:	8f ef       	ldi	r24, 0xFF	; 255
    6368:	13 96       	adiw	r26, 0x03	; 3
    636a:	8c 93       	st	X, r24
    636c:	13 97       	sbiw	r26, 0x03	; 3
    636e:	07 80       	ldd	r0, Z+7	; 0x07
    6370:	f0 85       	ldd	r31, Z+8	; 0x08
    6372:	e0 2d       	mov	r30, r0
    6374:	82 81       	ldd	r24, Z+2	; 0x02
    6376:	87 ff       	sbrs	r24, 7
    6378:	fd cf       	rjmp	.-6      	; 0x6374 <hal_spiReadByte+0x88>
    637a:	83 81       	ldd	r24, Z+3	; 0x03
    637c:	fb 01       	movw	r30, r22
    637e:	80 83       	st	Z, r24
    6380:	80 e0       	ldi	r24, 0x00	; 0
    6382:	23 96       	adiw	r28, 0x03	; 3
    6384:	cd bf       	out	0x3d, r28	; 61
    6386:	de bf       	out	0x3e, r29	; 62
    6388:	df 91       	pop	r29
    638a:	cf 91       	pop	r28
    638c:	08 95       	ret

0000638e <hal_spiWriteByte>:
    638e:	cf 93       	push	r28
    6390:	df 93       	push	r29
    6392:	00 d0       	rcall	.+0      	; 0x6394 <hal_spiWriteByte+0x6>
    6394:	cd b7       	in	r28, 0x3d	; 61
    6396:	de b7       	in	r29, 0x3e	; 62
    6398:	8a 83       	std	Y+2, r24	; 0x02
    639a:	9b 83       	std	Y+3, r25	; 0x03
    639c:	8f b7       	in	r24, 0x3f	; 63
    639e:	89 83       	std	Y+1, r24	; 0x01
    63a0:	f8 94       	cli
    63a2:	ea 81       	ldd	r30, Y+2	; 0x02
    63a4:	fb 81       	ldd	r31, Y+3	; 0x03
    63a6:	80 91 26 21 	lds	r24, 0x2126
    63aa:	90 91 27 21 	lds	r25, 0x2127
    63ae:	24 81       	ldd	r18, Z+4	; 0x04
    63b0:	35 81       	ldd	r19, Z+5	; 0x05
    63b2:	28 17       	cp	r18, r24
    63b4:	39 07       	cpc	r19, r25
    63b6:	21 f0       	breq	.+8      	; 0x63c0 <hal_spiWriteByte+0x32>
    63b8:	89 81       	ldd	r24, Y+1	; 0x01
    63ba:	8f bf       	out	0x3f, r24	; 63
    63bc:	8e ef       	ldi	r24, 0xFE	; 254
    63be:	30 c0       	rjmp	.+96     	; 0x6420 <hal_spiWriteByte+0x92>
    63c0:	ea 81       	ldd	r30, Y+2	; 0x02
    63c2:	fb 81       	ldd	r31, Y+3	; 0x03
    63c4:	20 81       	ld	r18, Z
    63c6:	31 81       	ldd	r19, Z+1	; 0x01
    63c8:	d9 01       	movw	r26, r18
    63ca:	1c 96       	adiw	r26, 0x0c	; 12
    63cc:	ed 91       	ld	r30, X+
    63ce:	fc 91       	ld	r31, X
    63d0:	1d 97       	sbiw	r26, 0x0d	; 13
    63d2:	81 85       	ldd	r24, Z+9	; 0x09
    63d4:	88 23       	and	r24, r24
    63d6:	49 f0       	breq	.+18     	; 0x63ea <hal_spiWriteByte+0x5c>
    63d8:	82 85       	ldd	r24, Z+10	; 0x0a
    63da:	93 85       	ldd	r25, Z+11	; 0x0b
    63dc:	82 17       	cp	r24, r18
    63de:	93 07       	cpc	r25, r19
    63e0:	21 f0       	breq	.+8      	; 0x63ea <hal_spiWriteByte+0x5c>
    63e2:	89 81       	ldd	r24, Y+1	; 0x01
    63e4:	8f bf       	out	0x3f, r24	; 63
    63e6:	84 ef       	ldi	r24, 0xF4	; 244
    63e8:	1b c0       	rjmp	.+54     	; 0x6420 <hal_spiWriteByte+0x92>
    63ea:	87 81       	ldd	r24, Z+7	; 0x07
    63ec:	90 85       	ldd	r25, Z+8	; 0x08
    63ee:	dc 01       	movw	r26, r24
    63f0:	11 96       	adiw	r26, 0x01	; 1
    63f2:	1c 92       	st	X, r1
    63f4:	81 e0       	ldi	r24, 0x01	; 1
    63f6:	81 87       	std	Z+9, r24	; 0x09
    63f8:	22 87       	std	Z+10, r18	; 0x0a
    63fa:	33 87       	std	Z+11, r19	; 0x0b
    63fc:	89 81       	ldd	r24, Y+1	; 0x01
    63fe:	8f bf       	out	0x3f, r24	; 63
    6400:	a7 81       	ldd	r26, Z+7	; 0x07
    6402:	b0 85       	ldd	r27, Z+8	; 0x08
    6404:	12 96       	adiw	r26, 0x02	; 2
    6406:	8c 91       	ld	r24, X
    6408:	12 97       	sbiw	r26, 0x02	; 2
    640a:	13 96       	adiw	r26, 0x03	; 3
    640c:	6c 93       	st	X, r22
    640e:	13 97       	sbiw	r26, 0x03	; 3
    6410:	07 80       	ldd	r0, Z+7	; 0x07
    6412:	f0 85       	ldd	r31, Z+8	; 0x08
    6414:	e0 2d       	mov	r30, r0
    6416:	82 81       	ldd	r24, Z+2	; 0x02
    6418:	87 ff       	sbrs	r24, 7
    641a:	fd cf       	rjmp	.-6      	; 0x6416 <hal_spiWriteByte+0x88>
    641c:	83 81       	ldd	r24, Z+3	; 0x03
    641e:	80 e0       	ldi	r24, 0x00	; 0
    6420:	23 96       	adiw	r28, 0x03	; 3
    6422:	cd bf       	out	0x3d, r28	; 61
    6424:	de bf       	out	0x3e, r29	; 62
    6426:	df 91       	pop	r29
    6428:	cf 91       	pop	r28
    642a:	08 95       	ret

0000642c <hal_spiSetBaudRate>:
    642c:	8f 92       	push	r8
    642e:	9f 92       	push	r9
    6430:	af 92       	push	r10
    6432:	bf 92       	push	r11
    6434:	cf 92       	push	r12
    6436:	df 92       	push	r13
    6438:	ef 92       	push	r14
    643a:	ff 92       	push	r15
    643c:	0f 93       	push	r16
    643e:	1f 93       	push	r17
    6440:	cf 93       	push	r28
    6442:	df 93       	push	r29
    6444:	00 d0       	rcall	.+0      	; 0x6446 <hal_spiSetBaudRate+0x1a>
    6446:	cd b7       	in	r28, 0x3d	; 61
    6448:	de b7       	in	r29, 0x3e	; 62
    644a:	8a 83       	std	Y+2, r24	; 0x02
    644c:	9b 83       	std	Y+3, r25	; 0x03
    644e:	4a 01       	movw	r8, r20
    6450:	5b 01       	movw	r10, r22
    6452:	8f b7       	in	r24, 0x3f	; 63
    6454:	89 83       	std	Y+1, r24	; 0x01
    6456:	f8 94       	cli
    6458:	ea 81       	ldd	r30, Y+2	; 0x02
    645a:	fb 81       	ldd	r31, Y+3	; 0x03
    645c:	20 91 26 21 	lds	r18, 0x2126
    6460:	30 91 27 21 	lds	r19, 0x2127
    6464:	84 81       	ldd	r24, Z+4	; 0x04
    6466:	95 81       	ldd	r25, Z+5	; 0x05
    6468:	82 17       	cp	r24, r18
    646a:	93 07       	cpc	r25, r19
    646c:	21 f0       	breq	.+8      	; 0x6476 <hal_spiSetBaudRate+0x4a>
    646e:	89 81       	ldd	r24, Y+1	; 0x01
    6470:	8f bf       	out	0x3f, r24	; 63
    6472:	8e ef       	ldi	r24, 0xFE	; 254
    6474:	4e c1       	rjmp	.+668    	; 0x6712 <hal_spiSetBaudRate+0x2e6>
    6476:	ea 81       	ldd	r30, Y+2	; 0x02
    6478:	fb 81       	ldd	r31, Y+3	; 0x03
    647a:	01 90       	ld	r0, Z+
    647c:	f0 81       	ld	r31, Z
    647e:	e0 2d       	mov	r30, r0
    6480:	04 85       	ldd	r16, Z+12	; 0x0c
    6482:	15 85       	ldd	r17, Z+13	; 0x0d
    6484:	d8 01       	movw	r26, r16
    6486:	16 96       	adiw	r26, 0x06	; 6
    6488:	8c 91       	ld	r24, X
    648a:	16 97       	sbiw	r26, 0x06	; 6
    648c:	88 23       	and	r24, r24
    648e:	49 f4       	brne	.+18     	; 0x64a2 <hal_spiSetBaudRate+0x76>
    6490:	0e 94 c0 49 	call	0x9380	; 0x9380 <hal_getCpuFreq>
    6494:	6b 01       	movw	r12, r22
    6496:	7c 01       	movw	r14, r24
    6498:	f6 94       	lsr	r15
    649a:	e7 94       	ror	r14
    649c:	d7 94       	ror	r13
    649e:	c7 94       	ror	r12
    64a0:	0b c0       	rjmp	.+22     	; 0x64b8 <hal_spiSetBaudRate+0x8c>
    64a2:	0e 94 c0 49 	call	0x9380	; 0x9380 <hal_getCpuFreq>
    64a6:	6b 01       	movw	r12, r22
    64a8:	7c 01       	movw	r14, r24
    64aa:	52 e0       	ldi	r21, 0x02	; 2
    64ac:	f6 94       	lsr	r15
    64ae:	e7 94       	ror	r14
    64b0:	d7 94       	ror	r13
    64b2:	c7 94       	ror	r12
    64b4:	5a 95       	dec	r21
    64b6:	d1 f7       	brne	.-12     	; 0x64ac <hal_spiSetBaudRate+0x80>
    64b8:	0e 94 c0 49 	call	0x9380	; 0x9380 <hal_getCpuFreq>
    64bc:	dc 01       	movw	r26, r24
    64be:	cb 01       	movw	r24, r22
    64c0:	47 e0       	ldi	r20, 0x07	; 7
    64c2:	b6 95       	lsr	r27
    64c4:	a7 95       	ror	r26
    64c6:	97 95       	ror	r25
    64c8:	87 95       	ror	r24
    64ca:	4a 95       	dec	r20
    64cc:	d1 f7       	brne	.-12     	; 0x64c2 <hal_spiSetBaudRate+0x96>
    64ce:	88 16       	cp	r8, r24
    64d0:	99 06       	cpc	r9, r25
    64d2:	aa 06       	cpc	r10, r26
    64d4:	bb 06       	cpc	r11, r27
    64d6:	28 f0       	brcs	.+10     	; 0x64e2 <hal_spiSetBaudRate+0xb6>
    64d8:	c8 14       	cp	r12, r8
    64da:	d9 04       	cpc	r13, r9
    64dc:	ea 04       	cpc	r14, r10
    64de:	fb 04       	cpc	r15, r11
    64e0:	20 f4       	brcc	.+8      	; 0x64ea <hal_spiSetBaudRate+0xbe>
    64e2:	89 81       	ldd	r24, Y+1	; 0x01
    64e4:	8f bf       	out	0x3f, r24	; 63
    64e6:	8c ef       	ldi	r24, 0xFC	; 252
    64e8:	14 c1       	rjmp	.+552    	; 0x6712 <hal_spiSetBaudRate+0x2e6>
    64ea:	0e 94 c0 49 	call	0x9380	; 0x9380 <hal_getCpuFreq>
    64ee:	dc 01       	movw	r26, r24
    64f0:	cb 01       	movw	r24, r22
    64f2:	37 e0       	ldi	r19, 0x07	; 7
    64f4:	b6 95       	lsr	r27
    64f6:	a7 95       	ror	r26
    64f8:	97 95       	ror	r25
    64fa:	87 95       	ror	r24
    64fc:	3a 95       	dec	r19
    64fe:	d1 f7       	brne	.-12     	; 0x64f4 <hal_spiSetBaudRate+0xc8>
    6500:	88 16       	cp	r8, r24
    6502:	99 06       	cpc	r9, r25
    6504:	aa 06       	cpc	r10, r26
    6506:	bb 06       	cpc	r11, r27
    6508:	18 f1       	brcs	.+70     	; 0x6550 <hal_spiSetBaudRate+0x124>
    650a:	0e 94 c0 49 	call	0x9380	; 0x9380 <hal_getCpuFreq>
    650e:	dc 01       	movw	r26, r24
    6510:	cb 01       	movw	r24, r22
    6512:	26 e0       	ldi	r18, 0x06	; 6
    6514:	b6 95       	lsr	r27
    6516:	a7 95       	ror	r26
    6518:	97 95       	ror	r25
    651a:	87 95       	ror	r24
    651c:	2a 95       	dec	r18
    651e:	d1 f7       	brne	.-12     	; 0x6514 <hal_spiSetBaudRate+0xe8>
    6520:	88 16       	cp	r8, r24
    6522:	99 06       	cpc	r9, r25
    6524:	aa 06       	cpc	r10, r26
    6526:	bb 06       	cpc	r11, r27
    6528:	98 f4       	brcc	.+38     	; 0x6550 <hal_spiSetBaudRate+0x124>
    652a:	0e 94 c0 49 	call	0x9380	; 0x9380 <hal_getCpuFreq>
    652e:	dc 01       	movw	r26, r24
    6530:	cb 01       	movw	r24, r22
    6532:	f7 e0       	ldi	r31, 0x07	; 7
    6534:	b6 95       	lsr	r27
    6536:	a7 95       	ror	r26
    6538:	97 95       	ror	r25
    653a:	87 95       	ror	r24
    653c:	fa 95       	dec	r31
    653e:	d1 f7       	brne	.-12     	; 0x6534 <hal_spiSetBaudRate+0x108>
    6540:	f8 01       	movw	r30, r16
    6542:	81 83       	std	Z+1, r24	; 0x01
    6544:	92 83       	std	Z+2, r25	; 0x02
    6546:	a3 83       	std	Z+3, r26	; 0x03
    6548:	b4 83       	std	Z+4, r27	; 0x04
    654a:	80 e0       	ldi	r24, 0x00	; 0
    654c:	93 e0       	ldi	r25, 0x03	; 3
    654e:	b3 c0       	rjmp	.+358    	; 0x66b6 <hal_spiSetBaudRate+0x28a>
    6550:	0e 94 c0 49 	call	0x9380	; 0x9380 <hal_getCpuFreq>
    6554:	dc 01       	movw	r26, r24
    6556:	cb 01       	movw	r24, r22
    6558:	e6 e0       	ldi	r30, 0x06	; 6
    655a:	b6 95       	lsr	r27
    655c:	a7 95       	ror	r26
    655e:	97 95       	ror	r25
    6560:	87 95       	ror	r24
    6562:	ea 95       	dec	r30
    6564:	d1 f7       	brne	.-12     	; 0x655a <hal_spiSetBaudRate+0x12e>
    6566:	88 16       	cp	r8, r24
    6568:	99 06       	cpc	r9, r25
    656a:	aa 06       	cpc	r10, r26
    656c:	bb 06       	cpc	r11, r27
    656e:	18 f1       	brcs	.+70     	; 0x65b6 <hal_spiSetBaudRate+0x18a>
    6570:	0e 94 c0 49 	call	0x9380	; 0x9380 <hal_getCpuFreq>
    6574:	dc 01       	movw	r26, r24
    6576:	cb 01       	movw	r24, r22
    6578:	54 e0       	ldi	r21, 0x04	; 4
    657a:	b6 95       	lsr	r27
    657c:	a7 95       	ror	r26
    657e:	97 95       	ror	r25
    6580:	87 95       	ror	r24
    6582:	5a 95       	dec	r21
    6584:	d1 f7       	brne	.-12     	; 0x657a <hal_spiSetBaudRate+0x14e>
    6586:	88 16       	cp	r8, r24
    6588:	99 06       	cpc	r9, r25
    658a:	aa 06       	cpc	r10, r26
    658c:	bb 06       	cpc	r11, r27
    658e:	98 f4       	brcc	.+38     	; 0x65b6 <hal_spiSetBaudRate+0x18a>
    6590:	0e 94 c0 49 	call	0x9380	; 0x9380 <hal_getCpuFreq>
    6594:	dc 01       	movw	r26, r24
    6596:	cb 01       	movw	r24, r22
    6598:	46 e0       	ldi	r20, 0x06	; 6
    659a:	b6 95       	lsr	r27
    659c:	a7 95       	ror	r26
    659e:	97 95       	ror	r25
    65a0:	87 95       	ror	r24
    65a2:	4a 95       	dec	r20
    65a4:	d1 f7       	brne	.-12     	; 0x659a <hal_spiSetBaudRate+0x16e>
    65a6:	f8 01       	movw	r30, r16
    65a8:	81 83       	std	Z+1, r24	; 0x01
    65aa:	92 83       	std	Z+2, r25	; 0x02
    65ac:	a3 83       	std	Z+3, r26	; 0x03
    65ae:	b4 83       	std	Z+4, r27	; 0x04
    65b0:	80 e0       	ldi	r24, 0x00	; 0
    65b2:	92 e0       	ldi	r25, 0x02	; 2
    65b4:	80 c0       	rjmp	.+256    	; 0x66b6 <hal_spiSetBaudRate+0x28a>
    65b6:	0e 94 c0 49 	call	0x9380	; 0x9380 <hal_getCpuFreq>
    65ba:	dc 01       	movw	r26, r24
    65bc:	cb 01       	movw	r24, r22
    65be:	34 e0       	ldi	r19, 0x04	; 4
    65c0:	b6 95       	lsr	r27
    65c2:	a7 95       	ror	r26
    65c4:	97 95       	ror	r25
    65c6:	87 95       	ror	r24
    65c8:	3a 95       	dec	r19
    65ca:	d1 f7       	brne	.-12     	; 0x65c0 <hal_spiSetBaudRate+0x194>
    65cc:	88 16       	cp	r8, r24
    65ce:	99 06       	cpc	r9, r25
    65d0:	aa 06       	cpc	r10, r26
    65d2:	bb 06       	cpc	r11, r27
    65d4:	18 f1       	brcs	.+70     	; 0x661c <hal_spiSetBaudRate+0x1f0>
    65d6:	0e 94 c0 49 	call	0x9380	; 0x9380 <hal_getCpuFreq>
    65da:	dc 01       	movw	r26, r24
    65dc:	cb 01       	movw	r24, r22
    65de:	22 e0       	ldi	r18, 0x02	; 2
    65e0:	b6 95       	lsr	r27
    65e2:	a7 95       	ror	r26
    65e4:	97 95       	ror	r25
    65e6:	87 95       	ror	r24
    65e8:	2a 95       	dec	r18
    65ea:	d1 f7       	brne	.-12     	; 0x65e0 <hal_spiSetBaudRate+0x1b4>
    65ec:	88 16       	cp	r8, r24
    65ee:	99 06       	cpc	r9, r25
    65f0:	aa 06       	cpc	r10, r26
    65f2:	bb 06       	cpc	r11, r27
    65f4:	98 f4       	brcc	.+38     	; 0x661c <hal_spiSetBaudRate+0x1f0>
    65f6:	0e 94 c0 49 	call	0x9380	; 0x9380 <hal_getCpuFreq>
    65fa:	dc 01       	movw	r26, r24
    65fc:	cb 01       	movw	r24, r22
    65fe:	f4 e0       	ldi	r31, 0x04	; 4
    6600:	b6 95       	lsr	r27
    6602:	a7 95       	ror	r26
    6604:	97 95       	ror	r25
    6606:	87 95       	ror	r24
    6608:	fa 95       	dec	r31
    660a:	d1 f7       	brne	.-12     	; 0x6600 <hal_spiSetBaudRate+0x1d4>
    660c:	f8 01       	movw	r30, r16
    660e:	81 83       	std	Z+1, r24	; 0x01
    6610:	92 83       	std	Z+2, r25	; 0x02
    6612:	a3 83       	std	Z+3, r26	; 0x03
    6614:	b4 83       	std	Z+4, r27	; 0x04
    6616:	80 e0       	ldi	r24, 0x00	; 0
    6618:	91 e0       	ldi	r25, 0x01	; 1
    661a:	4d c0       	rjmp	.+154    	; 0x66b6 <hal_spiSetBaudRate+0x28a>
    661c:	0e 94 c0 49 	call	0x9380	; 0x9380 <hal_getCpuFreq>
    6620:	dc 01       	movw	r26, r24
    6622:	cb 01       	movw	r24, r22
    6624:	e2 e0       	ldi	r30, 0x02	; 2
    6626:	b6 95       	lsr	r27
    6628:	a7 95       	ror	r26
    662a:	97 95       	ror	r25
    662c:	87 95       	ror	r24
    662e:	ea 95       	dec	r30
    6630:	d1 f7       	brne	.-12     	; 0x6626 <hal_spiSetBaudRate+0x1fa>
    6632:	88 16       	cp	r8, r24
    6634:	99 06       	cpc	r9, r25
    6636:	aa 06       	cpc	r10, r26
    6638:	bb 06       	cpc	r11, r27
    663a:	f0 f0       	brcs	.+60     	; 0x6678 <hal_spiSetBaudRate+0x24c>
    663c:	0e 94 c0 49 	call	0x9380	; 0x9380 <hal_getCpuFreq>
    6640:	dc 01       	movw	r26, r24
    6642:	cb 01       	movw	r24, r22
    6644:	b6 95       	lsr	r27
    6646:	a7 95       	ror	r26
    6648:	97 95       	ror	r25
    664a:	87 95       	ror	r24
    664c:	88 16       	cp	r8, r24
    664e:	99 06       	cpc	r9, r25
    6650:	aa 06       	cpc	r10, r26
    6652:	bb 06       	cpc	r11, r27
    6654:	88 f4       	brcc	.+34     	; 0x6678 <hal_spiSetBaudRate+0x24c>
    6656:	0e 94 c0 49 	call	0x9380	; 0x9380 <hal_getCpuFreq>
    665a:	dc 01       	movw	r26, r24
    665c:	cb 01       	movw	r24, r22
    665e:	42 e0       	ldi	r20, 0x02	; 2
    6660:	b6 95       	lsr	r27
    6662:	a7 95       	ror	r26
    6664:	97 95       	ror	r25
    6666:	87 95       	ror	r24
    6668:	4a 95       	dec	r20
    666a:	d1 f7       	brne	.-12     	; 0x6660 <hal_spiSetBaudRate+0x234>
    666c:	f8 01       	movw	r30, r16
    666e:	81 83       	std	Z+1, r24	; 0x01
    6670:	92 83       	std	Z+2, r25	; 0x02
    6672:	a3 83       	std	Z+3, r26	; 0x03
    6674:	b4 83       	std	Z+4, r27	; 0x04
    6676:	1d c0       	rjmp	.+58     	; 0x66b2 <hal_spiSetBaudRate+0x286>
    6678:	0e 94 c0 49 	call	0x9380	; 0x9380 <hal_getCpuFreq>
    667c:	dc 01       	movw	r26, r24
    667e:	cb 01       	movw	r24, r22
    6680:	32 e0       	ldi	r19, 0x02	; 2
    6682:	b6 95       	lsr	r27
    6684:	a7 95       	ror	r26
    6686:	97 95       	ror	r25
    6688:	87 95       	ror	r24
    668a:	3a 95       	dec	r19
    668c:	d1 f7       	brne	.-12     	; 0x6682 <hal_spiSetBaudRate+0x256>
    668e:	f8 01       	movw	r30, r16
    6690:	81 83       	std	Z+1, r24	; 0x01
    6692:	92 83       	std	Z+2, r25	; 0x02
    6694:	a3 83       	std	Z+3, r26	; 0x03
    6696:	b4 83       	std	Z+4, r27	; 0x04
    6698:	26 81       	ldd	r18, Z+6	; 0x06
    669a:	22 23       	and	r18, r18
    669c:	51 f4       	brne	.+20     	; 0x66b2 <hal_spiSetBaudRate+0x286>
    669e:	88 0f       	add	r24, r24
    66a0:	99 1f       	adc	r25, r25
    66a2:	aa 1f       	adc	r26, r26
    66a4:	bb 1f       	adc	r27, r27
    66a6:	81 83       	std	Z+1, r24	; 0x01
    66a8:	92 83       	std	Z+2, r25	; 0x02
    66aa:	a3 83       	std	Z+3, r26	; 0x03
    66ac:	b4 83       	std	Z+4, r27	; 0x04
    66ae:	80 e8       	ldi	r24, 0x80	; 128
    66b0:	01 c0       	rjmp	.+2      	; 0x66b4 <hal_spiSetBaudRate+0x288>
    66b2:	80 e0       	ldi	r24, 0x00	; 0
    66b4:	90 e0       	ldi	r25, 0x00	; 0
    66b6:	d8 01       	movw	r26, r16
    66b8:	17 96       	adiw	r26, 0x07	; 7
    66ba:	ed 91       	ld	r30, X+
    66bc:	fc 91       	ld	r31, X
    66be:	18 97       	sbiw	r26, 0x08	; 8
    66c0:	20 81       	ld	r18, Z
    66c2:	2f 7b       	andi	r18, 0xBF	; 191
    66c4:	20 83       	st	Z, r18
    66c6:	17 96       	adiw	r26, 0x07	; 7
    66c8:	ed 91       	ld	r30, X+
    66ca:	fc 91       	ld	r31, X
    66cc:	18 97       	sbiw	r26, 0x08	; 8
    66ce:	20 81       	ld	r18, Z
    66d0:	2c 7f       	andi	r18, 0xFC	; 252
    66d2:	20 83       	st	Z, r18
    66d4:	17 96       	adiw	r26, 0x07	; 7
    66d6:	ed 91       	ld	r30, X+
    66d8:	fc 91       	ld	r31, X
    66da:	18 97       	sbiw	r26, 0x08	; 8
    66dc:	20 81       	ld	r18, Z
    66de:	29 2b       	or	r18, r25
    66e0:	20 83       	st	Z, r18
    66e2:	17 96       	adiw	r26, 0x07	; 7
    66e4:	ed 91       	ld	r30, X+
    66e6:	fc 91       	ld	r31, X
    66e8:	18 97       	sbiw	r26, 0x08	; 8
    66ea:	90 81       	ld	r25, Z
    66ec:	9f 77       	andi	r25, 0x7F	; 127
    66ee:	90 83       	st	Z, r25
    66f0:	17 96       	adiw	r26, 0x07	; 7
    66f2:	ed 91       	ld	r30, X+
    66f4:	fc 91       	ld	r31, X
    66f6:	18 97       	sbiw	r26, 0x08	; 8
    66f8:	90 81       	ld	r25, Z
    66fa:	98 2b       	or	r25, r24
    66fc:	90 83       	st	Z, r25
    66fe:	17 96       	adiw	r26, 0x07	; 7
    6700:	ed 91       	ld	r30, X+
    6702:	fc 91       	ld	r31, X
    6704:	18 97       	sbiw	r26, 0x08	; 8
    6706:	80 81       	ld	r24, Z
    6708:	80 64       	ori	r24, 0x40	; 64
    670a:	80 83       	st	Z, r24
    670c:	89 81       	ldd	r24, Y+1	; 0x01
    670e:	8f bf       	out	0x3f, r24	; 63
    6710:	80 e0       	ldi	r24, 0x00	; 0
    6712:	23 96       	adiw	r28, 0x03	; 3
    6714:	cd bf       	out	0x3d, r28	; 61
    6716:	de bf       	out	0x3e, r29	; 62
    6718:	df 91       	pop	r29
    671a:	cf 91       	pop	r28
    671c:	1f 91       	pop	r17
    671e:	0f 91       	pop	r16
    6720:	ff 90       	pop	r15
    6722:	ef 90       	pop	r14
    6724:	df 90       	pop	r13
    6726:	cf 90       	pop	r12
    6728:	bf 90       	pop	r11
    672a:	af 90       	pop	r10
    672c:	9f 90       	pop	r9
    672e:	8f 90       	pop	r8
    6730:	08 95       	ret

00006732 <hal_spiReadBlock>:
    6732:	2f 92       	push	r2
    6734:	3f 92       	push	r3
    6736:	4f 92       	push	r4
    6738:	5f 92       	push	r5
    673a:	6f 92       	push	r6
    673c:	7f 92       	push	r7
    673e:	8f 92       	push	r8
    6740:	9f 92       	push	r9
    6742:	af 92       	push	r10
    6744:	bf 92       	push	r11
    6746:	cf 92       	push	r12
    6748:	df 92       	push	r13
    674a:	ef 92       	push	r14
    674c:	ff 92       	push	r15
    674e:	0f 93       	push	r16
    6750:	1f 93       	push	r17
    6752:	cf 93       	push	r28
    6754:	df 93       	push	r29
    6756:	cd b7       	in	r28, 0x3d	; 61
    6758:	de b7       	in	r29, 0x3e	; 62
    675a:	63 97       	sbiw	r28, 0x13	; 19
    675c:	cd bf       	out	0x3d, r28	; 61
    675e:	de bf       	out	0x3e, r29	; 62
    6760:	88 8b       	std	Y+16, r24	; 0x10
    6762:	99 8b       	std	Y+17, r25	; 0x11
    6764:	66 2e       	mov	r6, r22
    6766:	4a 8b       	std	Y+18, r20	; 0x12
    6768:	5b 8b       	std	Y+19, r21	; 0x13
    676a:	19 01       	movw	r2, r18
    676c:	e8 89       	ldd	r30, Y+16	; 0x10
    676e:	f9 89       	ldd	r31, Y+17	; 0x11
    6770:	80 91 26 21 	lds	r24, 0x2126
    6774:	90 91 27 21 	lds	r25, 0x2127
    6778:	24 81       	ldd	r18, Z+4	; 0x04
    677a:	35 81       	ldd	r19, Z+5	; 0x05
    677c:	28 17       	cp	r18, r24
    677e:	39 07       	cpc	r19, r25
    6780:	09 f0       	breq	.+2      	; 0x6784 <hal_spiReadBlock+0x52>
    6782:	53 c1       	rjmp	.+678    	; 0x6a2a <hal_spiReadBlock+0x2f8>
    6784:	e8 89       	ldd	r30, Y+16	; 0x10
    6786:	f9 89       	ldd	r31, Y+17	; 0x11
    6788:	40 80       	ld	r4, Z
    678a:	51 80       	ldd	r5, Z+1	; 0x01
    678c:	d2 01       	movw	r26, r4
    678e:	1c 96       	adiw	r26, 0x0c	; 12
    6790:	8d 90       	ld	r8, X+
    6792:	9c 90       	ld	r9, X
    6794:	1d 97       	sbiw	r26, 0x0d	; 13
    6796:	8f b7       	in	r24, 0x3f	; 63
    6798:	89 83       	std	Y+1, r24	; 0x01
    679a:	f8 94       	cli
    679c:	f4 01       	movw	r30, r8
    679e:	81 85       	ldd	r24, Z+9	; 0x09
    67a0:	88 23       	and	r24, r24
    67a2:	49 f0       	breq	.+18     	; 0x67b6 <hal_spiReadBlock+0x84>
    67a4:	82 85       	ldd	r24, Z+10	; 0x0a
    67a6:	93 85       	ldd	r25, Z+11	; 0x0b
    67a8:	84 15       	cp	r24, r4
    67aa:	95 05       	cpc	r25, r5
    67ac:	21 f0       	breq	.+8      	; 0x67b6 <hal_spiReadBlock+0x84>
    67ae:	89 81       	ldd	r24, Y+1	; 0x01
    67b0:	8f bf       	out	0x3f, r24	; 63
    67b2:	84 ef       	ldi	r24, 0xF4	; 244
    67b4:	3d c1       	rjmp	.+634    	; 0x6a30 <hal_spiReadBlock+0x2fe>
    67b6:	81 e0       	ldi	r24, 0x01	; 1
    67b8:	d4 01       	movw	r26, r8
    67ba:	19 96       	adiw	r26, 0x09	; 9
    67bc:	8c 93       	st	X, r24
    67be:	19 97       	sbiw	r26, 0x09	; 9
    67c0:	1a 96       	adiw	r26, 0x0a	; 10
    67c2:	4d 92       	st	X+, r4
    67c4:	5c 92       	st	X, r5
    67c6:	1b 97       	sbiw	r26, 0x0b	; 11
    67c8:	89 81       	ldd	r24, Y+1	; 0x01
    67ca:	8f bf       	out	0x3f, r24	; 63
    67cc:	8f ef       	ldi	r24, 0xFF	; 255
    67ce:	80 93 42 21 	sts	0x2142, r24
    67d2:	82 e4       	ldi	r24, 0x42	; 66
    67d4:	91 e2       	ldi	r25, 0x21	; 33
    67d6:	f2 01       	movw	r30, r4
    67d8:	82 83       	std	Z+2, r24	; 0x02
    67da:	93 83       	std	Z+3, r25	; 0x03
    67dc:	8a 89       	ldd	r24, Y+18	; 0x12
    67de:	9b 89       	ldd	r25, Y+19	; 0x13
    67e0:	84 83       	std	Z+4, r24	; 0x04
    67e2:	95 83       	std	Z+5, r25	; 0x05
    67e4:	26 82       	std	Z+6, r2	; 0x06
    67e6:	37 82       	std	Z+7, r3	; 0x07
    67e8:	50 96       	adiw	r26, 0x10	; 16
    67ea:	8d 91       	ld	r24, X+
    67ec:	9c 91       	ld	r25, X
    67ee:	51 97       	sbiw	r26, 0x11	; 17
    67f0:	17 96       	adiw	r26, 0x07	; 7
    67f2:	ed 91       	ld	r30, X+
    67f4:	fc 91       	ld	r31, X
    67f6:	18 97       	sbiw	r26, 0x08	; 8
    67f8:	18 16       	cp	r1, r24
    67fa:	19 06       	cpc	r1, r25
    67fc:	0c f0       	brlt	.+2      	; 0x6800 <hal_spiReadBlock+0xce>
    67fe:	7a c0       	rjmp	.+244    	; 0x68f4 <hal_spiReadBlock+0x1c2>
    6800:	11 82       	std	Z+1, r1	; 0x01
    6802:	ec 91       	ld	r30, X
    6804:	e1 50       	subi	r30, 0x01	; 1
    6806:	e3 30       	cpi	r30, 0x03	; 3
    6808:	28 f4       	brcc	.+10     	; 0x6814 <hal_spiReadBlock+0xe2>
    680a:	f0 e0       	ldi	r31, 0x00	; 0
    680c:	ed 5b       	subi	r30, 0xBD	; 189
    680e:	fe 4d       	sbci	r31, 0xDE	; 222
    6810:	60 81       	ld	r22, Z
    6812:	01 c0       	rjmp	.+2      	; 0x6816 <hal_spiReadBlock+0xe4>
    6814:	6a e4       	ldi	r22, 0x4A	; 74
    6816:	d4 01       	movw	r26, r8
    6818:	16 96       	adiw	r26, 0x06	; 6
    681a:	2c 91       	ld	r18, X
    681c:	16 97       	sbiw	r26, 0x06	; 6
    681e:	f2 01       	movw	r30, r4
    6820:	82 81       	ldd	r24, Z+2	; 0x02
    6822:	93 81       	ldd	r25, Z+3	; 0x03
    6824:	22 23       	and	r18, r18
    6826:	29 f4       	brne	.+10     	; 0x6832 <hal_spiReadBlock+0x100>
    6828:	f1 e2       	ldi	r31, 0x21	; 33
    682a:	82 34       	cpi	r24, 0x42	; 66
    682c:	9f 07       	cpc	r25, r31
    682e:	09 f0       	breq	.+2      	; 0x6832 <hal_spiReadBlock+0x100>
    6830:	01 96       	adiw	r24, 0x01	; 1
    6832:	8a 83       	std	Y+2, r24	; 0x02
    6834:	9b 83       	std	Y+3, r25	; 0x03
    6836:	d4 01       	movw	r26, r8
    6838:	17 96       	adiw	r26, 0x07	; 7
    683a:	8d 91       	ld	r24, X+
    683c:	9c 91       	ld	r25, X
    683e:	18 97       	sbiw	r26, 0x08	; 8
    6840:	03 96       	adiw	r24, 0x03	; 3
    6842:	8c 83       	std	Y+4, r24	; 0x04
    6844:	9d 83       	std	Y+5, r25	; 0x05
    6846:	1e 82       	std	Y+6, r1	; 0x06
    6848:	1f 82       	std	Y+7, r1	; 0x07
    684a:	81 e0       	ldi	r24, 0x01	; 1
    684c:	88 87       	std	Y+8, r24	; 0x08
    684e:	19 86       	std	Y+9, r1	; 0x09
    6850:	22 23       	and	r18, r18
    6852:	29 f4       	brne	.+10     	; 0x685e <hal_spiReadBlock+0x12c>
    6854:	c1 01       	movw	r24, r2
    6856:	01 97       	sbiw	r24, 0x01	; 1
    6858:	8a 87       	std	Y+10, r24	; 0x0a
    685a:	9b 87       	std	Y+11, r25	; 0x0b
    685c:	02 c0       	rjmp	.+4      	; 0x6862 <hal_spiReadBlock+0x130>
    685e:	2a 86       	std	Y+10, r2	; 0x0a
    6860:	3b 86       	std	Y+11, r3	; 0x0b
    6862:	1c 86       	std	Y+12, r1	; 0x0c
    6864:	77 24       	eor	r7, r7
    6866:	73 94       	inc	r7
    6868:	7d 86       	std	Y+13, r7	; 0x0d
    686a:	6e 87       	std	Y+14, r22	; 0x0e
    686c:	1f 86       	std	Y+15, r1	; 0x0f
    686e:	f4 01       	movw	r30, r8
    6870:	86 85       	ldd	r24, Z+14	; 0x0e
    6872:	97 85       	ldd	r25, Z+15	; 0x0f
    6874:	aa 80       	ldd	r10, Y+2	; 0x02
    6876:	bb 80       	ldd	r11, Y+3	; 0x03
    6878:	cc 80       	ldd	r12, Y+4	; 0x04
    687a:	dd 80       	ldd	r13, Y+5	; 0x05
    687c:	ee 80       	ldd	r14, Y+6	; 0x06
    687e:	ff 80       	ldd	r15, Y+7	; 0x07
    6880:	08 85       	ldd	r16, Y+8	; 0x08
    6882:	19 85       	ldd	r17, Y+9	; 0x09
    6884:	2a 85       	ldd	r18, Y+10	; 0x0a
    6886:	3b 85       	ldd	r19, Y+11	; 0x0b
    6888:	40 e0       	ldi	r20, 0x00	; 0
    688a:	51 e0       	ldi	r21, 0x01	; 1
    688c:	70 e0       	ldi	r23, 0x00	; 0
    688e:	0e 94 aa 4e 	call	0x9d54	; 0x9d54 <hal_configureDmaChannel>
    6892:	d4 01       	movw	r26, r8
    6894:	1e 96       	adiw	r26, 0x0e	; 14
    6896:	8d 91       	ld	r24, X+
    6898:	9c 91       	ld	r25, X
    689a:	1f 97       	sbiw	r26, 0x0f	; 15
    689c:	0e 94 bc 50 	call	0xa178	; 0xa178 <hal_dmaEnableChannel>
    68a0:	f4 01       	movw	r30, r8
    68a2:	87 81       	ldd	r24, Z+7	; 0x07
    68a4:	90 85       	ldd	r25, Z+8	; 0x08
    68a6:	03 96       	adiw	r24, 0x03	; 3
    68a8:	8a 83       	std	Y+2, r24	; 0x02
    68aa:	9b 83       	std	Y+3, r25	; 0x03
    68ac:	8a 89       	ldd	r24, Y+18	; 0x12
    68ae:	9b 89       	ldd	r25, Y+19	; 0x13
    68b0:	8c 83       	std	Y+4, r24	; 0x04
    68b2:	9d 83       	std	Y+5, r25	; 0x05
    68b4:	7f 82       	std	Y+7, r7	; 0x07
    68b6:	18 86       	std	Y+8, r1	; 0x08
    68b8:	79 86       	std	Y+9, r7	; 0x09
    68ba:	2a 86       	std	Y+10, r2	; 0x0a
    68bc:	3b 86       	std	Y+11, r3	; 0x0b
    68be:	80 89       	ldd	r24, Z+16	; 0x10
    68c0:	91 89       	ldd	r25, Z+17	; 0x11
    68c2:	aa 80       	ldd	r10, Y+2	; 0x02
    68c4:	bb 80       	ldd	r11, Y+3	; 0x03
    68c6:	cc 80       	ldd	r12, Y+4	; 0x04
    68c8:	dd 80       	ldd	r13, Y+5	; 0x05
    68ca:	ee 80       	ldd	r14, Y+6	; 0x06
    68cc:	ff 24       	eor	r15, r15
    68ce:	f3 94       	inc	r15
    68d0:	00 e0       	ldi	r16, 0x00	; 0
    68d2:	11 e0       	ldi	r17, 0x01	; 1
    68d4:	2a 85       	ldd	r18, Y+10	; 0x0a
    68d6:	3b 85       	ldd	r19, Y+11	; 0x0b
    68d8:	4c 85       	ldd	r20, Y+12	; 0x0c
    68da:	5d 85       	ldd	r21, Y+13	; 0x0d
    68dc:	6e 85       	ldd	r22, Y+14	; 0x0e
    68de:	7f 85       	ldd	r23, Y+15	; 0x0f
    68e0:	0e 94 aa 4e 	call	0x9d54	; 0x9d54 <hal_configureDmaChannel>
    68e4:	d4 01       	movw	r26, r8
    68e6:	50 96       	adiw	r26, 0x10	; 16
    68e8:	8d 91       	ld	r24, X+
    68ea:	9c 91       	ld	r25, X
    68ec:	51 97       	sbiw	r26, 0x11	; 17
    68ee:	0e 94 bc 50 	call	0xa178	; 0xa178 <hal_dmaEnableChannel>
    68f2:	02 c0       	rjmp	.+4      	; 0x68f8 <hal_spiReadBlock+0x1c6>
    68f4:	83 e0       	ldi	r24, 0x03	; 3
    68f6:	81 83       	std	Z+1, r24	; 0x01
    68f8:	f4 01       	movw	r30, r8
    68fa:	86 81       	ldd	r24, Z+6	; 0x06
    68fc:	88 23       	and	r24, r24
    68fe:	09 f0       	breq	.+2      	; 0x6902 <hal_spiReadBlock+0x1d0>
    6900:	96 c0       	rjmp	.+300    	; 0x6a2e <hal_spiReadBlock+0x2fc>
    6902:	d2 01       	movw	r26, r4
    6904:	18 96       	adiw	r26, 0x08	; 8
    6906:	1d 92       	st	X+, r1
    6908:	1c 92       	st	X, r1
    690a:	19 97       	sbiw	r26, 0x09	; 9
    690c:	50 96       	adiw	r26, 0x10	; 16
    690e:	6c 92       	st	X, r6
    6910:	50 97       	sbiw	r26, 0x10	; 16
    6912:	66 20       	and	r6, r6
    6914:	09 f4       	brne	.+2      	; 0x6918 <hal_spiReadBlock+0x1e6>
    6916:	7d c0       	rjmp	.+250    	; 0x6a12 <hal_spiReadBlock+0x2e0>
    6918:	1b 96       	adiw	r26, 0x0b	; 11
    691a:	8c 91       	ld	r24, X
    691c:	1b 97       	sbiw	r26, 0x0b	; 11
    691e:	1a 96       	adiw	r26, 0x0a	; 10
    6920:	9c 91       	ld	r25, X
    6922:	1a 97       	sbiw	r26, 0x0a	; 10
    6924:	95 30       	cpi	r25, 0x05	; 5
    6926:	09 f4       	brne	.+2      	; 0x692a <hal_spiReadBlock+0x1f8>
    6928:	4a c0       	rjmp	.+148    	; 0x69be <hal_spiReadBlock+0x28c>
    692a:	96 30       	cpi	r25, 0x06	; 6
    692c:	80 f4       	brcc	.+32     	; 0x694e <hal_spiReadBlock+0x21c>
    692e:	92 30       	cpi	r25, 0x02	; 2
    6930:	81 f1       	breq	.+96     	; 0x6992 <hal_spiReadBlock+0x260>
    6932:	93 30       	cpi	r25, 0x03	; 3
    6934:	30 f4       	brcc	.+12     	; 0x6942 <hal_spiReadBlock+0x210>
    6936:	99 23       	and	r25, r25
    6938:	e1 f0       	breq	.+56     	; 0x6972 <hal_spiReadBlock+0x240>
    693a:	91 30       	cpi	r25, 0x01	; 1
    693c:	09 f0       	breq	.+2      	; 0x6940 <hal_spiReadBlock+0x20e>
    693e:	69 c0       	rjmp	.+210    	; 0x6a12 <hal_spiReadBlock+0x2e0>
    6940:	20 c0       	rjmp	.+64     	; 0x6982 <hal_spiReadBlock+0x250>
    6942:	93 30       	cpi	r25, 0x03	; 3
    6944:	71 f1       	breq	.+92     	; 0x69a2 <hal_spiReadBlock+0x270>
    6946:	94 30       	cpi	r25, 0x04	; 4
    6948:	09 f0       	breq	.+2      	; 0x694c <hal_spiReadBlock+0x21a>
    694a:	63 c0       	rjmp	.+198    	; 0x6a12 <hal_spiReadBlock+0x2e0>
    694c:	31 c0       	rjmp	.+98     	; 0x69b0 <hal_spiReadBlock+0x27e>
    694e:	98 30       	cpi	r25, 0x08	; 8
    6950:	09 f4       	brne	.+2      	; 0x6954 <hal_spiReadBlock+0x222>
    6952:	4a c0       	rjmp	.+148    	; 0x69e8 <hal_spiReadBlock+0x2b6>
    6954:	99 30       	cpi	r25, 0x09	; 9
    6956:	30 f4       	brcc	.+12     	; 0x6964 <hal_spiReadBlock+0x232>
    6958:	96 30       	cpi	r25, 0x06	; 6
    695a:	c1 f1       	breq	.+112    	; 0x69cc <hal_spiReadBlock+0x29a>
    695c:	97 30       	cpi	r25, 0x07	; 7
    695e:	09 f0       	breq	.+2      	; 0x6962 <hal_spiReadBlock+0x230>
    6960:	58 c0       	rjmp	.+176    	; 0x6a12 <hal_spiReadBlock+0x2e0>
    6962:	3b c0       	rjmp	.+118    	; 0x69da <hal_spiReadBlock+0x2a8>
    6964:	99 30       	cpi	r25, 0x09	; 9
    6966:	09 f4       	brne	.+2      	; 0x696a <hal_spiReadBlock+0x238>
    6968:	46 c0       	rjmp	.+140    	; 0x69f6 <hal_spiReadBlock+0x2c4>
    696a:	9a 30       	cpi	r25, 0x0A	; 10
    696c:	09 f0       	breq	.+2      	; 0x6970 <hal_spiReadBlock+0x23e>
    696e:	51 c0       	rjmp	.+162    	; 0x6a12 <hal_spiReadBlock+0x2e0>
    6970:	49 c0       	rjmp	.+146    	; 0x6a04 <hal_spiReadBlock+0x2d2>
    6972:	90 91 00 06 	lds	r25, 0x0600
    6976:	98 23       	and	r25, r24
    6978:	09 f4       	brne	.+2      	; 0x697c <hal_spiReadBlock+0x24a>
    697a:	4b c0       	rjmp	.+150    	; 0x6a12 <hal_spiReadBlock+0x2e0>
    697c:	e0 e0       	ldi	r30, 0x00	; 0
    697e:	f6 e0       	ldi	r31, 0x06	; 6
    6980:	47 c0       	rjmp	.+142    	; 0x6a10 <hal_spiReadBlock+0x2de>
    6982:	90 91 20 06 	lds	r25, 0x0620
    6986:	98 23       	and	r25, r24
    6988:	09 f4       	brne	.+2      	; 0x698c <hal_spiReadBlock+0x25a>
    698a:	43 c0       	rjmp	.+134    	; 0x6a12 <hal_spiReadBlock+0x2e0>
    698c:	e0 e2       	ldi	r30, 0x20	; 32
    698e:	f6 e0       	ldi	r31, 0x06	; 6
    6990:	3f c0       	rjmp	.+126    	; 0x6a10 <hal_spiReadBlock+0x2de>
    6992:	90 91 40 06 	lds	r25, 0x0640
    6996:	98 23       	and	r25, r24
    6998:	09 f4       	brne	.+2      	; 0x699c <hal_spiReadBlock+0x26a>
    699a:	3b c0       	rjmp	.+118    	; 0x6a12 <hal_spiReadBlock+0x2e0>
    699c:	e0 e4       	ldi	r30, 0x40	; 64
    699e:	f6 e0       	ldi	r31, 0x06	; 6
    69a0:	37 c0       	rjmp	.+110    	; 0x6a10 <hal_spiReadBlock+0x2de>
    69a2:	90 91 60 06 	lds	r25, 0x0660
    69a6:	98 23       	and	r25, r24
    69a8:	a1 f1       	breq	.+104    	; 0x6a12 <hal_spiReadBlock+0x2e0>
    69aa:	e0 e6       	ldi	r30, 0x60	; 96
    69ac:	f6 e0       	ldi	r31, 0x06	; 6
    69ae:	30 c0       	rjmp	.+96     	; 0x6a10 <hal_spiReadBlock+0x2de>
    69b0:	90 91 80 06 	lds	r25, 0x0680
    69b4:	98 23       	and	r25, r24
    69b6:	69 f1       	breq	.+90     	; 0x6a12 <hal_spiReadBlock+0x2e0>
    69b8:	e0 e8       	ldi	r30, 0x80	; 128
    69ba:	f6 e0       	ldi	r31, 0x06	; 6
    69bc:	29 c0       	rjmp	.+82     	; 0x6a10 <hal_spiReadBlock+0x2de>
    69be:	90 91 a0 06 	lds	r25, 0x06A0
    69c2:	98 23       	and	r25, r24
    69c4:	31 f1       	breq	.+76     	; 0x6a12 <hal_spiReadBlock+0x2e0>
    69c6:	e0 ea       	ldi	r30, 0xA0	; 160
    69c8:	f6 e0       	ldi	r31, 0x06	; 6
    69ca:	22 c0       	rjmp	.+68     	; 0x6a10 <hal_spiReadBlock+0x2de>
    69cc:	90 91 e0 06 	lds	r25, 0x06E0
    69d0:	98 23       	and	r25, r24
    69d2:	f9 f0       	breq	.+62     	; 0x6a12 <hal_spiReadBlock+0x2e0>
    69d4:	e0 ee       	ldi	r30, 0xE0	; 224
    69d6:	f6 e0       	ldi	r31, 0x06	; 6
    69d8:	1b c0       	rjmp	.+54     	; 0x6a10 <hal_spiReadBlock+0x2de>
    69da:	90 91 00 07 	lds	r25, 0x0700
    69de:	98 23       	and	r25, r24
    69e0:	c1 f0       	breq	.+48     	; 0x6a12 <hal_spiReadBlock+0x2e0>
    69e2:	e0 e0       	ldi	r30, 0x00	; 0
    69e4:	f7 e0       	ldi	r31, 0x07	; 7
    69e6:	14 c0       	rjmp	.+40     	; 0x6a10 <hal_spiReadBlock+0x2de>
    69e8:	90 91 20 07 	lds	r25, 0x0720
    69ec:	98 23       	and	r25, r24
    69ee:	89 f0       	breq	.+34     	; 0x6a12 <hal_spiReadBlock+0x2e0>
    69f0:	e0 e2       	ldi	r30, 0x20	; 32
    69f2:	f7 e0       	ldi	r31, 0x07	; 7
    69f4:	0d c0       	rjmp	.+26     	; 0x6a10 <hal_spiReadBlock+0x2de>
    69f6:	90 91 c0 07 	lds	r25, 0x07C0
    69fa:	98 23       	and	r25, r24
    69fc:	51 f0       	breq	.+20     	; 0x6a12 <hal_spiReadBlock+0x2e0>
    69fe:	e0 ec       	ldi	r30, 0xC0	; 192
    6a00:	f7 e0       	ldi	r31, 0x07	; 7
    6a02:	06 c0       	rjmp	.+12     	; 0x6a10 <hal_spiReadBlock+0x2de>
    6a04:	90 91 e0 07 	lds	r25, 0x07E0
    6a08:	98 23       	and	r25, r24
    6a0a:	19 f0       	breq	.+6      	; 0x6a12 <hal_spiReadBlock+0x2e0>
    6a0c:	e0 ee       	ldi	r30, 0xE0	; 224
    6a0e:	f7 e0       	ldi	r31, 0x07	; 7
    6a10:	86 83       	std	Z+6, r24	; 0x06
    6a12:	f4 01       	movw	r30, r8
    6a14:	27 81       	ldd	r18, Z+7	; 0x07
    6a16:	30 85       	ldd	r19, Z+8	; 0x08
    6a18:	f2 01       	movw	r30, r4
    6a1a:	a2 81       	ldd	r26, Z+2	; 0x02
    6a1c:	b3 81       	ldd	r27, Z+3	; 0x03
    6a1e:	8c 91       	ld	r24, X
    6a20:	d9 01       	movw	r26, r18
    6a22:	13 96       	adiw	r26, 0x03	; 3
    6a24:	8c 93       	st	X, r24
    6a26:	13 97       	sbiw	r26, 0x03	; 3
    6a28:	02 c0       	rjmp	.+4      	; 0x6a2e <hal_spiReadBlock+0x2fc>
    6a2a:	8e ef       	ldi	r24, 0xFE	; 254
    6a2c:	01 c0       	rjmp	.+2      	; 0x6a30 <hal_spiReadBlock+0x2fe>
    6a2e:	80 e0       	ldi	r24, 0x00	; 0
    6a30:	63 96       	adiw	r28, 0x13	; 19
    6a32:	cd bf       	out	0x3d, r28	; 61
    6a34:	de bf       	out	0x3e, r29	; 62
    6a36:	df 91       	pop	r29
    6a38:	cf 91       	pop	r28
    6a3a:	1f 91       	pop	r17
    6a3c:	0f 91       	pop	r16
    6a3e:	ff 90       	pop	r15
    6a40:	ef 90       	pop	r14
    6a42:	df 90       	pop	r13
    6a44:	cf 90       	pop	r12
    6a46:	bf 90       	pop	r11
    6a48:	af 90       	pop	r10
    6a4a:	9f 90       	pop	r9
    6a4c:	8f 90       	pop	r8
    6a4e:	7f 90       	pop	r7
    6a50:	6f 90       	pop	r6
    6a52:	5f 90       	pop	r5
    6a54:	4f 90       	pop	r4
    6a56:	3f 90       	pop	r3
    6a58:	2f 90       	pop	r2
    6a5a:	08 95       	ret

00006a5c <hal_spiWriteBlock>:
    6a5c:	2f 92       	push	r2
    6a5e:	3f 92       	push	r3
    6a60:	4f 92       	push	r4
    6a62:	5f 92       	push	r5
    6a64:	6f 92       	push	r6
    6a66:	7f 92       	push	r7
    6a68:	8f 92       	push	r8
    6a6a:	9f 92       	push	r9
    6a6c:	af 92       	push	r10
    6a6e:	bf 92       	push	r11
    6a70:	cf 92       	push	r12
    6a72:	df 92       	push	r13
    6a74:	ef 92       	push	r14
    6a76:	ff 92       	push	r15
    6a78:	0f 93       	push	r16
    6a7a:	1f 93       	push	r17
    6a7c:	cf 93       	push	r28
    6a7e:	df 93       	push	r29
    6a80:	cd b7       	in	r28, 0x3d	; 61
    6a82:	de b7       	in	r29, 0x3e	; 62
    6a84:	63 97       	sbiw	r28, 0x13	; 19
    6a86:	cd bf       	out	0x3d, r28	; 61
    6a88:	de bf       	out	0x3e, r29	; 62
    6a8a:	88 8b       	std	Y+16, r24	; 0x10
    6a8c:	99 8b       	std	Y+17, r25	; 0x11
    6a8e:	46 2e       	mov	r4, r22
    6a90:	4a 8b       	std	Y+18, r20	; 0x12
    6a92:	5b 8b       	std	Y+19, r21	; 0x13
    6a94:	19 01       	movw	r2, r18
    6a96:	e8 89       	ldd	r30, Y+16	; 0x10
    6a98:	f9 89       	ldd	r31, Y+17	; 0x11
    6a9a:	80 91 26 21 	lds	r24, 0x2126
    6a9e:	90 91 27 21 	lds	r25, 0x2127
    6aa2:	24 81       	ldd	r18, Z+4	; 0x04
    6aa4:	35 81       	ldd	r19, Z+5	; 0x05
    6aa6:	28 17       	cp	r18, r24
    6aa8:	39 07       	cpc	r19, r25
    6aaa:	09 f0       	breq	.+2      	; 0x6aae <hal_spiWriteBlock+0x52>
    6aac:	4b c1       	rjmp	.+662    	; 0x6d44 <hal_spiWriteBlock+0x2e8>
    6aae:	e8 89       	ldd	r30, Y+16	; 0x10
    6ab0:	f9 89       	ldd	r31, Y+17	; 0x11
    6ab2:	60 80       	ld	r6, Z
    6ab4:	71 80       	ldd	r7, Z+1	; 0x01
    6ab6:	d3 01       	movw	r26, r6
    6ab8:	1c 96       	adiw	r26, 0x0c	; 12
    6aba:	8d 90       	ld	r8, X+
    6abc:	9c 90       	ld	r9, X
    6abe:	1d 97       	sbiw	r26, 0x0d	; 13
    6ac0:	8f b7       	in	r24, 0x3f	; 63
    6ac2:	89 83       	std	Y+1, r24	; 0x01
    6ac4:	f8 94       	cli
    6ac6:	f4 01       	movw	r30, r8
    6ac8:	81 85       	ldd	r24, Z+9	; 0x09
    6aca:	88 23       	and	r24, r24
    6acc:	49 f0       	breq	.+18     	; 0x6ae0 <hal_spiWriteBlock+0x84>
    6ace:	82 85       	ldd	r24, Z+10	; 0x0a
    6ad0:	93 85       	ldd	r25, Z+11	; 0x0b
    6ad2:	86 15       	cp	r24, r6
    6ad4:	97 05       	cpc	r25, r7
    6ad6:	21 f0       	breq	.+8      	; 0x6ae0 <hal_spiWriteBlock+0x84>
    6ad8:	89 81       	ldd	r24, Y+1	; 0x01
    6ada:	8f bf       	out	0x3f, r24	; 63
    6adc:	84 ef       	ldi	r24, 0xF4	; 244
    6ade:	35 c1       	rjmp	.+618    	; 0x6d4a <hal_spiWriteBlock+0x2ee>
    6ae0:	81 e0       	ldi	r24, 0x01	; 1
    6ae2:	d4 01       	movw	r26, r8
    6ae4:	19 96       	adiw	r26, 0x09	; 9
    6ae6:	8c 93       	st	X, r24
    6ae8:	19 97       	sbiw	r26, 0x09	; 9
    6aea:	1a 96       	adiw	r26, 0x0a	; 10
    6aec:	6d 92       	st	X+, r6
    6aee:	7c 92       	st	X, r7
    6af0:	1b 97       	sbiw	r26, 0x0b	; 11
    6af2:	89 81       	ldd	r24, Y+1	; 0x01
    6af4:	8f bf       	out	0x3f, r24	; 63
    6af6:	8f ef       	ldi	r24, 0xFF	; 255
    6af8:	80 93 42 21 	sts	0x2142, r24
    6afc:	8a 89       	ldd	r24, Y+18	; 0x12
    6afe:	9b 89       	ldd	r25, Y+19	; 0x13
    6b00:	f3 01       	movw	r30, r6
    6b02:	82 83       	std	Z+2, r24	; 0x02
    6b04:	93 83       	std	Z+3, r25	; 0x03
    6b06:	82 e4       	ldi	r24, 0x42	; 66
    6b08:	91 e2       	ldi	r25, 0x21	; 33
    6b0a:	84 83       	std	Z+4, r24	; 0x04
    6b0c:	95 83       	std	Z+5, r25	; 0x05
    6b0e:	26 82       	std	Z+6, r2	; 0x06
    6b10:	37 82       	std	Z+7, r3	; 0x07
    6b12:	1e 96       	adiw	r26, 0x0e	; 14
    6b14:	8d 91       	ld	r24, X+
    6b16:	9c 91       	ld	r25, X
    6b18:	1f 97       	sbiw	r26, 0x0f	; 15
    6b1a:	17 96       	adiw	r26, 0x07	; 7
    6b1c:	ed 91       	ld	r30, X+
    6b1e:	fc 91       	ld	r31, X
    6b20:	18 97       	sbiw	r26, 0x08	; 8
    6b22:	18 16       	cp	r1, r24
    6b24:	19 06       	cpc	r1, r25
    6b26:	0c f0       	brlt	.+2      	; 0x6b2a <hal_spiWriteBlock+0xce>
    6b28:	7a c0       	rjmp	.+244    	; 0x6c1e <hal_spiWriteBlock+0x1c2>
    6b2a:	11 82       	std	Z+1, r1	; 0x01
    6b2c:	ec 91       	ld	r30, X
    6b2e:	e1 50       	subi	r30, 0x01	; 1
    6b30:	e3 30       	cpi	r30, 0x03	; 3
    6b32:	28 f4       	brcc	.+10     	; 0x6b3e <hal_spiWriteBlock+0xe2>
    6b34:	f0 e0       	ldi	r31, 0x00	; 0
    6b36:	ea 5b       	subi	r30, 0xBA	; 186
    6b38:	fe 4d       	sbci	r31, 0xDE	; 222
    6b3a:	60 81       	ld	r22, Z
    6b3c:	01 c0       	rjmp	.+2      	; 0x6b40 <hal_spiWriteBlock+0xe4>
    6b3e:	6a e4       	ldi	r22, 0x4A	; 74
    6b40:	d4 01       	movw	r26, r8
    6b42:	16 96       	adiw	r26, 0x06	; 6
    6b44:	2c 91       	ld	r18, X
    6b46:	16 97       	sbiw	r26, 0x06	; 6
    6b48:	22 23       	and	r18, r18
    6b4a:	31 f4       	brne	.+12     	; 0x6b58 <hal_spiWriteBlock+0xfc>
    6b4c:	8a 89       	ldd	r24, Y+18	; 0x12
    6b4e:	9b 89       	ldd	r25, Y+19	; 0x13
    6b50:	01 96       	adiw	r24, 0x01	; 1
    6b52:	8a 83       	std	Y+2, r24	; 0x02
    6b54:	9b 83       	std	Y+3, r25	; 0x03
    6b56:	04 c0       	rjmp	.+8      	; 0x6b60 <hal_spiWriteBlock+0x104>
    6b58:	ea 89       	ldd	r30, Y+18	; 0x12
    6b5a:	fb 89       	ldd	r31, Y+19	; 0x13
    6b5c:	ea 83       	std	Y+2, r30	; 0x02
    6b5e:	fb 83       	std	Y+3, r31	; 0x03
    6b60:	d4 01       	movw	r26, r8
    6b62:	17 96       	adiw	r26, 0x07	; 7
    6b64:	8d 91       	ld	r24, X+
    6b66:	9c 91       	ld	r25, X
    6b68:	18 97       	sbiw	r26, 0x08	; 8
    6b6a:	03 96       	adiw	r24, 0x03	; 3
    6b6c:	8c 83       	std	Y+4, r24	; 0x04
    6b6e:	9d 83       	std	Y+5, r25	; 0x05
    6b70:	81 e0       	ldi	r24, 0x01	; 1
    6b72:	8e 83       	std	Y+6, r24	; 0x06
    6b74:	1f 82       	std	Y+7, r1	; 0x07
    6b76:	88 87       	std	Y+8, r24	; 0x08
    6b78:	19 86       	std	Y+9, r1	; 0x09
    6b7a:	22 23       	and	r18, r18
    6b7c:	29 f4       	brne	.+10     	; 0x6b88 <hal_spiWriteBlock+0x12c>
    6b7e:	c1 01       	movw	r24, r2
    6b80:	01 97       	sbiw	r24, 0x01	; 1
    6b82:	8a 87       	std	Y+10, r24	; 0x0a
    6b84:	9b 87       	std	Y+11, r25	; 0x0b
    6b86:	02 c0       	rjmp	.+4      	; 0x6b8c <hal_spiWriteBlock+0x130>
    6b88:	2a 86       	std	Y+10, r2	; 0x0a
    6b8a:	3b 86       	std	Y+11, r3	; 0x0b
    6b8c:	1c 86       	std	Y+12, r1	; 0x0c
    6b8e:	55 24       	eor	r5, r5
    6b90:	53 94       	inc	r5
    6b92:	5d 86       	std	Y+13, r5	; 0x0d
    6b94:	6e 87       	std	Y+14, r22	; 0x0e
    6b96:	1f 86       	std	Y+15, r1	; 0x0f
    6b98:	f4 01       	movw	r30, r8
    6b9a:	86 85       	ldd	r24, Z+14	; 0x0e
    6b9c:	97 85       	ldd	r25, Z+15	; 0x0f
    6b9e:	aa 80       	ldd	r10, Y+2	; 0x02
    6ba0:	bb 80       	ldd	r11, Y+3	; 0x03
    6ba2:	cc 80       	ldd	r12, Y+4	; 0x04
    6ba4:	dd 80       	ldd	r13, Y+5	; 0x05
    6ba6:	ee 80       	ldd	r14, Y+6	; 0x06
    6ba8:	ff 80       	ldd	r15, Y+7	; 0x07
    6baa:	08 85       	ldd	r16, Y+8	; 0x08
    6bac:	19 85       	ldd	r17, Y+9	; 0x09
    6bae:	2a 85       	ldd	r18, Y+10	; 0x0a
    6bb0:	3b 85       	ldd	r19, Y+11	; 0x0b
    6bb2:	40 e0       	ldi	r20, 0x00	; 0
    6bb4:	51 e0       	ldi	r21, 0x01	; 1
    6bb6:	70 e0       	ldi	r23, 0x00	; 0
    6bb8:	0e 94 aa 4e 	call	0x9d54	; 0x9d54 <hal_configureDmaChannel>
    6bbc:	d4 01       	movw	r26, r8
    6bbe:	1e 96       	adiw	r26, 0x0e	; 14
    6bc0:	8d 91       	ld	r24, X+
    6bc2:	9c 91       	ld	r25, X
    6bc4:	1f 97       	sbiw	r26, 0x0f	; 15
    6bc6:	0e 94 bc 50 	call	0xa178	; 0xa178 <hal_dmaEnableChannel>
    6bca:	f4 01       	movw	r30, r8
    6bcc:	87 81       	ldd	r24, Z+7	; 0x07
    6bce:	90 85       	ldd	r25, Z+8	; 0x08
    6bd0:	03 96       	adiw	r24, 0x03	; 3
    6bd2:	8a 83       	std	Y+2, r24	; 0x02
    6bd4:	9b 83       	std	Y+3, r25	; 0x03
    6bd6:	d3 01       	movw	r26, r6
    6bd8:	14 96       	adiw	r26, 0x04	; 4
    6bda:	8d 91       	ld	r24, X+
    6bdc:	9c 91       	ld	r25, X
    6bde:	15 97       	sbiw	r26, 0x05	; 5
    6be0:	8c 83       	std	Y+4, r24	; 0x04
    6be2:	9d 83       	std	Y+5, r25	; 0x05
    6be4:	1e 82       	std	Y+6, r1	; 0x06
    6be6:	18 86       	std	Y+8, r1	; 0x08
    6be8:	59 86       	std	Y+9, r5	; 0x09
    6bea:	2a 86       	std	Y+10, r2	; 0x0a
    6bec:	3b 86       	std	Y+11, r3	; 0x0b
    6bee:	80 89       	ldd	r24, Z+16	; 0x10
    6bf0:	91 89       	ldd	r25, Z+17	; 0x11
    6bf2:	aa 80       	ldd	r10, Y+2	; 0x02
    6bf4:	bb 80       	ldd	r11, Y+3	; 0x03
    6bf6:	cc 80       	ldd	r12, Y+4	; 0x04
    6bf8:	dd 80       	ldd	r13, Y+5	; 0x05
    6bfa:	ee 24       	eor	r14, r14
    6bfc:	ff 80       	ldd	r15, Y+7	; 0x07
    6bfe:	00 e0       	ldi	r16, 0x00	; 0
    6c00:	11 e0       	ldi	r17, 0x01	; 1
    6c02:	2a 85       	ldd	r18, Y+10	; 0x0a
    6c04:	3b 85       	ldd	r19, Y+11	; 0x0b
    6c06:	4c 85       	ldd	r20, Y+12	; 0x0c
    6c08:	5d 85       	ldd	r21, Y+13	; 0x0d
    6c0a:	6e 85       	ldd	r22, Y+14	; 0x0e
    6c0c:	7f 85       	ldd	r23, Y+15	; 0x0f
    6c0e:	0e 94 aa 4e 	call	0x9d54	; 0x9d54 <hal_configureDmaChannel>
    6c12:	f4 01       	movw	r30, r8
    6c14:	80 89       	ldd	r24, Z+16	; 0x10
    6c16:	91 89       	ldd	r25, Z+17	; 0x11
    6c18:	0e 94 bc 50 	call	0xa178	; 0xa178 <hal_dmaEnableChannel>
    6c1c:	02 c0       	rjmp	.+4      	; 0x6c22 <hal_spiWriteBlock+0x1c6>
    6c1e:	83 e0       	ldi	r24, 0x03	; 3
    6c20:	81 83       	std	Z+1, r24	; 0x01
    6c22:	d4 01       	movw	r26, r8
    6c24:	16 96       	adiw	r26, 0x06	; 6
    6c26:	8c 91       	ld	r24, X
    6c28:	16 97       	sbiw	r26, 0x06	; 6
    6c2a:	88 23       	and	r24, r24
    6c2c:	09 f0       	breq	.+2      	; 0x6c30 <hal_spiWriteBlock+0x1d4>
    6c2e:	8c c0       	rjmp	.+280    	; 0x6d48 <hal_spiWriteBlock+0x2ec>
    6c30:	f3 01       	movw	r30, r6
    6c32:	10 86       	std	Z+8, r1	; 0x08
    6c34:	11 86       	std	Z+9, r1	; 0x09
    6c36:	40 8a       	std	Z+16, r4	; 0x10
    6c38:	44 20       	and	r4, r4
    6c3a:	09 f4       	brne	.+2      	; 0x6c3e <hal_spiWriteBlock+0x1e2>
    6c3c:	79 c0       	rjmp	.+242    	; 0x6d30 <hal_spiWriteBlock+0x2d4>
    6c3e:	83 85       	ldd	r24, Z+11	; 0x0b
    6c40:	92 85       	ldd	r25, Z+10	; 0x0a
    6c42:	95 30       	cpi	r25, 0x05	; 5
    6c44:	09 f4       	brne	.+2      	; 0x6c48 <hal_spiWriteBlock+0x1ec>
    6c46:	4a c0       	rjmp	.+148    	; 0x6cdc <hal_spiWriteBlock+0x280>
    6c48:	96 30       	cpi	r25, 0x06	; 6
    6c4a:	80 f4       	brcc	.+32     	; 0x6c6c <hal_spiWriteBlock+0x210>
    6c4c:	92 30       	cpi	r25, 0x02	; 2
    6c4e:	81 f1       	breq	.+96     	; 0x6cb0 <hal_spiWriteBlock+0x254>
    6c50:	93 30       	cpi	r25, 0x03	; 3
    6c52:	30 f4       	brcc	.+12     	; 0x6c60 <hal_spiWriteBlock+0x204>
    6c54:	99 23       	and	r25, r25
    6c56:	e1 f0       	breq	.+56     	; 0x6c90 <hal_spiWriteBlock+0x234>
    6c58:	91 30       	cpi	r25, 0x01	; 1
    6c5a:	09 f0       	breq	.+2      	; 0x6c5e <hal_spiWriteBlock+0x202>
    6c5c:	69 c0       	rjmp	.+210    	; 0x6d30 <hal_spiWriteBlock+0x2d4>
    6c5e:	20 c0       	rjmp	.+64     	; 0x6ca0 <hal_spiWriteBlock+0x244>
    6c60:	93 30       	cpi	r25, 0x03	; 3
    6c62:	71 f1       	breq	.+92     	; 0x6cc0 <hal_spiWriteBlock+0x264>
    6c64:	94 30       	cpi	r25, 0x04	; 4
    6c66:	09 f0       	breq	.+2      	; 0x6c6a <hal_spiWriteBlock+0x20e>
    6c68:	63 c0       	rjmp	.+198    	; 0x6d30 <hal_spiWriteBlock+0x2d4>
    6c6a:	31 c0       	rjmp	.+98     	; 0x6cce <hal_spiWriteBlock+0x272>
    6c6c:	98 30       	cpi	r25, 0x08	; 8
    6c6e:	09 f4       	brne	.+2      	; 0x6c72 <hal_spiWriteBlock+0x216>
    6c70:	4a c0       	rjmp	.+148    	; 0x6d06 <hal_spiWriteBlock+0x2aa>
    6c72:	99 30       	cpi	r25, 0x09	; 9
    6c74:	30 f4       	brcc	.+12     	; 0x6c82 <hal_spiWriteBlock+0x226>
    6c76:	96 30       	cpi	r25, 0x06	; 6
    6c78:	c1 f1       	breq	.+112    	; 0x6cea <hal_spiWriteBlock+0x28e>
    6c7a:	97 30       	cpi	r25, 0x07	; 7
    6c7c:	09 f0       	breq	.+2      	; 0x6c80 <hal_spiWriteBlock+0x224>
    6c7e:	58 c0       	rjmp	.+176    	; 0x6d30 <hal_spiWriteBlock+0x2d4>
    6c80:	3b c0       	rjmp	.+118    	; 0x6cf8 <hal_spiWriteBlock+0x29c>
    6c82:	99 30       	cpi	r25, 0x09	; 9
    6c84:	09 f4       	brne	.+2      	; 0x6c88 <hal_spiWriteBlock+0x22c>
    6c86:	46 c0       	rjmp	.+140    	; 0x6d14 <hal_spiWriteBlock+0x2b8>
    6c88:	9a 30       	cpi	r25, 0x0A	; 10
    6c8a:	09 f0       	breq	.+2      	; 0x6c8e <hal_spiWriteBlock+0x232>
    6c8c:	51 c0       	rjmp	.+162    	; 0x6d30 <hal_spiWriteBlock+0x2d4>
    6c8e:	49 c0       	rjmp	.+146    	; 0x6d22 <hal_spiWriteBlock+0x2c6>
    6c90:	90 91 00 06 	lds	r25, 0x0600
    6c94:	98 23       	and	r25, r24
    6c96:	09 f4       	brne	.+2      	; 0x6c9a <hal_spiWriteBlock+0x23e>
    6c98:	4b c0       	rjmp	.+150    	; 0x6d30 <hal_spiWriteBlock+0x2d4>
    6c9a:	e0 e0       	ldi	r30, 0x00	; 0
    6c9c:	f6 e0       	ldi	r31, 0x06	; 6
    6c9e:	47 c0       	rjmp	.+142    	; 0x6d2e <hal_spiWriteBlock+0x2d2>
    6ca0:	90 91 20 06 	lds	r25, 0x0620
    6ca4:	98 23       	and	r25, r24
    6ca6:	09 f4       	brne	.+2      	; 0x6caa <hal_spiWriteBlock+0x24e>
    6ca8:	43 c0       	rjmp	.+134    	; 0x6d30 <hal_spiWriteBlock+0x2d4>
    6caa:	e0 e2       	ldi	r30, 0x20	; 32
    6cac:	f6 e0       	ldi	r31, 0x06	; 6
    6cae:	3f c0       	rjmp	.+126    	; 0x6d2e <hal_spiWriteBlock+0x2d2>
    6cb0:	90 91 40 06 	lds	r25, 0x0640
    6cb4:	98 23       	and	r25, r24
    6cb6:	09 f4       	brne	.+2      	; 0x6cba <hal_spiWriteBlock+0x25e>
    6cb8:	3b c0       	rjmp	.+118    	; 0x6d30 <hal_spiWriteBlock+0x2d4>
    6cba:	e0 e4       	ldi	r30, 0x40	; 64
    6cbc:	f6 e0       	ldi	r31, 0x06	; 6
    6cbe:	37 c0       	rjmp	.+110    	; 0x6d2e <hal_spiWriteBlock+0x2d2>
    6cc0:	90 91 60 06 	lds	r25, 0x0660
    6cc4:	98 23       	and	r25, r24
    6cc6:	a1 f1       	breq	.+104    	; 0x6d30 <hal_spiWriteBlock+0x2d4>
    6cc8:	e0 e6       	ldi	r30, 0x60	; 96
    6cca:	f6 e0       	ldi	r31, 0x06	; 6
    6ccc:	30 c0       	rjmp	.+96     	; 0x6d2e <hal_spiWriteBlock+0x2d2>
    6cce:	90 91 80 06 	lds	r25, 0x0680
    6cd2:	98 23       	and	r25, r24
    6cd4:	69 f1       	breq	.+90     	; 0x6d30 <hal_spiWriteBlock+0x2d4>
    6cd6:	e0 e8       	ldi	r30, 0x80	; 128
    6cd8:	f6 e0       	ldi	r31, 0x06	; 6
    6cda:	29 c0       	rjmp	.+82     	; 0x6d2e <hal_spiWriteBlock+0x2d2>
    6cdc:	90 91 a0 06 	lds	r25, 0x06A0
    6ce0:	98 23       	and	r25, r24
    6ce2:	31 f1       	breq	.+76     	; 0x6d30 <hal_spiWriteBlock+0x2d4>
    6ce4:	e0 ea       	ldi	r30, 0xA0	; 160
    6ce6:	f6 e0       	ldi	r31, 0x06	; 6
    6ce8:	22 c0       	rjmp	.+68     	; 0x6d2e <hal_spiWriteBlock+0x2d2>
    6cea:	90 91 e0 06 	lds	r25, 0x06E0
    6cee:	98 23       	and	r25, r24
    6cf0:	f9 f0       	breq	.+62     	; 0x6d30 <hal_spiWriteBlock+0x2d4>
    6cf2:	e0 ee       	ldi	r30, 0xE0	; 224
    6cf4:	f6 e0       	ldi	r31, 0x06	; 6
    6cf6:	1b c0       	rjmp	.+54     	; 0x6d2e <hal_spiWriteBlock+0x2d2>
    6cf8:	90 91 00 07 	lds	r25, 0x0700
    6cfc:	98 23       	and	r25, r24
    6cfe:	c1 f0       	breq	.+48     	; 0x6d30 <hal_spiWriteBlock+0x2d4>
    6d00:	e0 e0       	ldi	r30, 0x00	; 0
    6d02:	f7 e0       	ldi	r31, 0x07	; 7
    6d04:	14 c0       	rjmp	.+40     	; 0x6d2e <hal_spiWriteBlock+0x2d2>
    6d06:	90 91 20 07 	lds	r25, 0x0720
    6d0a:	98 23       	and	r25, r24
    6d0c:	89 f0       	breq	.+34     	; 0x6d30 <hal_spiWriteBlock+0x2d4>
    6d0e:	e0 e2       	ldi	r30, 0x20	; 32
    6d10:	f7 e0       	ldi	r31, 0x07	; 7
    6d12:	0d c0       	rjmp	.+26     	; 0x6d2e <hal_spiWriteBlock+0x2d2>
    6d14:	90 91 c0 07 	lds	r25, 0x07C0
    6d18:	98 23       	and	r25, r24
    6d1a:	51 f0       	breq	.+20     	; 0x6d30 <hal_spiWriteBlock+0x2d4>
    6d1c:	e0 ec       	ldi	r30, 0xC0	; 192
    6d1e:	f7 e0       	ldi	r31, 0x07	; 7
    6d20:	06 c0       	rjmp	.+12     	; 0x6d2e <hal_spiWriteBlock+0x2d2>
    6d22:	90 91 e0 07 	lds	r25, 0x07E0
    6d26:	98 23       	and	r25, r24
    6d28:	19 f0       	breq	.+6      	; 0x6d30 <hal_spiWriteBlock+0x2d4>
    6d2a:	e0 ee       	ldi	r30, 0xE0	; 224
    6d2c:	f7 e0       	ldi	r31, 0x07	; 7
    6d2e:	86 83       	std	Z+6, r24	; 0x06
    6d30:	d4 01       	movw	r26, r8
    6d32:	17 96       	adiw	r26, 0x07	; 7
    6d34:	ed 91       	ld	r30, X+
    6d36:	fc 91       	ld	r31, X
    6d38:	18 97       	sbiw	r26, 0x08	; 8
    6d3a:	aa 89       	ldd	r26, Y+18	; 0x12
    6d3c:	bb 89       	ldd	r27, Y+19	; 0x13
    6d3e:	8c 91       	ld	r24, X
    6d40:	83 83       	std	Z+3, r24	; 0x03
    6d42:	02 c0       	rjmp	.+4      	; 0x6d48 <hal_spiWriteBlock+0x2ec>
    6d44:	8e ef       	ldi	r24, 0xFE	; 254
    6d46:	01 c0       	rjmp	.+2      	; 0x6d4a <hal_spiWriteBlock+0x2ee>
    6d48:	80 e0       	ldi	r24, 0x00	; 0
    6d4a:	63 96       	adiw	r28, 0x13	; 19
    6d4c:	cd bf       	out	0x3d, r28	; 61
    6d4e:	de bf       	out	0x3e, r29	; 62
    6d50:	df 91       	pop	r29
    6d52:	cf 91       	pop	r28
    6d54:	1f 91       	pop	r17
    6d56:	0f 91       	pop	r16
    6d58:	ff 90       	pop	r15
    6d5a:	ef 90       	pop	r14
    6d5c:	df 90       	pop	r13
    6d5e:	cf 90       	pop	r12
    6d60:	bf 90       	pop	r11
    6d62:	af 90       	pop	r10
    6d64:	9f 90       	pop	r9
    6d66:	8f 90       	pop	r8
    6d68:	7f 90       	pop	r7
    6d6a:	6f 90       	pop	r6
    6d6c:	5f 90       	pop	r5
    6d6e:	4f 90       	pop	r4
    6d70:	3f 90       	pop	r3
    6d72:	2f 90       	pop	r2
    6d74:	08 95       	ret

00006d76 <hal_spiReadWrite>:
    6d76:	2f 92       	push	r2
    6d78:	3f 92       	push	r3
    6d7a:	4f 92       	push	r4
    6d7c:	5f 92       	push	r5
    6d7e:	6f 92       	push	r6
    6d80:	7f 92       	push	r7
    6d82:	8f 92       	push	r8
    6d84:	9f 92       	push	r9
    6d86:	af 92       	push	r10
    6d88:	bf 92       	push	r11
    6d8a:	cf 92       	push	r12
    6d8c:	df 92       	push	r13
    6d8e:	ef 92       	push	r14
    6d90:	ff 92       	push	r15
    6d92:	0f 93       	push	r16
    6d94:	1f 93       	push	r17
    6d96:	cf 93       	push	r28
    6d98:	df 93       	push	r29
    6d9a:	cd b7       	in	r28, 0x3d	; 61
    6d9c:	de b7       	in	r29, 0x3e	; 62
    6d9e:	65 97       	sbiw	r28, 0x15	; 21
    6da0:	cd bf       	out	0x3d, r28	; 61
    6da2:	de bf       	out	0x3e, r29	; 62
    6da4:	88 8b       	std	Y+16, r24	; 0x10
    6da6:	99 8b       	std	Y+17, r25	; 0x11
    6da8:	46 2e       	mov	r4, r22
    6daa:	4a 8b       	std	Y+18, r20	; 0x12
    6dac:	5b 8b       	std	Y+19, r21	; 0x13
    6dae:	2c 8b       	std	Y+20, r18	; 0x14
    6db0:	3d 8b       	std	Y+21, r19	; 0x15
    6db2:	18 01       	movw	r2, r16
    6db4:	e8 89       	ldd	r30, Y+16	; 0x10
    6db6:	f9 89       	ldd	r31, Y+17	; 0x11
    6db8:	20 91 26 21 	lds	r18, 0x2126
    6dbc:	30 91 27 21 	lds	r19, 0x2127
    6dc0:	84 81       	ldd	r24, Z+4	; 0x04
    6dc2:	95 81       	ldd	r25, Z+5	; 0x05
    6dc4:	82 17       	cp	r24, r18
    6dc6:	93 07       	cpc	r25, r19
    6dc8:	09 f0       	breq	.+2      	; 0x6dcc <hal_spiReadWrite+0x56>
    6dca:	47 c1       	rjmp	.+654    	; 0x705a <hal_spiReadWrite+0x2e4>
    6dcc:	e8 89       	ldd	r30, Y+16	; 0x10
    6dce:	f9 89       	ldd	r31, Y+17	; 0x11
    6dd0:	60 80       	ld	r6, Z
    6dd2:	71 80       	ldd	r7, Z+1	; 0x01
    6dd4:	d3 01       	movw	r26, r6
    6dd6:	1c 96       	adiw	r26, 0x0c	; 12
    6dd8:	8d 90       	ld	r8, X+
    6dda:	9c 90       	ld	r9, X
    6ddc:	1d 97       	sbiw	r26, 0x0d	; 13
    6dde:	8f b7       	in	r24, 0x3f	; 63
    6de0:	89 83       	std	Y+1, r24	; 0x01
    6de2:	f8 94       	cli
    6de4:	f4 01       	movw	r30, r8
    6de6:	81 85       	ldd	r24, Z+9	; 0x09
    6de8:	88 23       	and	r24, r24
    6dea:	49 f0       	breq	.+18     	; 0x6dfe <hal_spiReadWrite+0x88>
    6dec:	82 85       	ldd	r24, Z+10	; 0x0a
    6dee:	93 85       	ldd	r25, Z+11	; 0x0b
    6df0:	86 15       	cp	r24, r6
    6df2:	97 05       	cpc	r25, r7
    6df4:	21 f0       	breq	.+8      	; 0x6dfe <hal_spiReadWrite+0x88>
    6df6:	89 81       	ldd	r24, Y+1	; 0x01
    6df8:	8f bf       	out	0x3f, r24	; 63
    6dfa:	84 ef       	ldi	r24, 0xF4	; 244
    6dfc:	31 c1       	rjmp	.+610    	; 0x7060 <hal_spiReadWrite+0x2ea>
    6dfe:	81 e0       	ldi	r24, 0x01	; 1
    6e00:	d4 01       	movw	r26, r8
    6e02:	19 96       	adiw	r26, 0x09	; 9
    6e04:	8c 93       	st	X, r24
    6e06:	19 97       	sbiw	r26, 0x09	; 9
    6e08:	1a 96       	adiw	r26, 0x0a	; 10
    6e0a:	6d 92       	st	X+, r6
    6e0c:	7c 92       	st	X, r7
    6e0e:	1b 97       	sbiw	r26, 0x0b	; 11
    6e10:	89 81       	ldd	r24, Y+1	; 0x01
    6e12:	8f bf       	out	0x3f, r24	; 63
    6e14:	8a 89       	ldd	r24, Y+18	; 0x12
    6e16:	9b 89       	ldd	r25, Y+19	; 0x13
    6e18:	f3 01       	movw	r30, r6
    6e1a:	82 83       	std	Z+2, r24	; 0x02
    6e1c:	93 83       	std	Z+3, r25	; 0x03
    6e1e:	ac 89       	ldd	r26, Y+20	; 0x14
    6e20:	bd 89       	ldd	r27, Y+21	; 0x15
    6e22:	a4 83       	std	Z+4, r26	; 0x04
    6e24:	b5 83       	std	Z+5, r27	; 0x05
    6e26:	26 82       	std	Z+6, r2	; 0x06
    6e28:	37 82       	std	Z+7, r3	; 0x07
    6e2a:	f4 01       	movw	r30, r8
    6e2c:	86 85       	ldd	r24, Z+14	; 0x0e
    6e2e:	97 85       	ldd	r25, Z+15	; 0x0f
    6e30:	07 80       	ldd	r0, Z+7	; 0x07
    6e32:	f0 85       	ldd	r31, Z+8	; 0x08
    6e34:	e0 2d       	mov	r30, r0
    6e36:	18 16       	cp	r1, r24
    6e38:	19 06       	cpc	r1, r25
    6e3a:	0c f0       	brlt	.+2      	; 0x6e3e <hal_spiReadWrite+0xc8>
    6e3c:	75 c0       	rjmp	.+234    	; 0x6f28 <hal_spiReadWrite+0x1b2>
    6e3e:	11 82       	std	Z+1, r1	; 0x01
    6e40:	d4 01       	movw	r26, r8
    6e42:	ec 91       	ld	r30, X
    6e44:	e1 50       	subi	r30, 0x01	; 1
    6e46:	e3 30       	cpi	r30, 0x03	; 3
    6e48:	28 f4       	brcc	.+10     	; 0x6e54 <hal_spiReadWrite+0xde>
    6e4a:	f0 e0       	ldi	r31, 0x00	; 0
    6e4c:	e7 5b       	subi	r30, 0xB7	; 183
    6e4e:	fe 4d       	sbci	r31, 0xDE	; 222
    6e50:	60 81       	ld	r22, Z
    6e52:	01 c0       	rjmp	.+2      	; 0x6e56 <hal_spiReadWrite+0xe0>
    6e54:	6a e4       	ldi	r22, 0x4A	; 74
    6e56:	f4 01       	movw	r30, r8
    6e58:	26 81       	ldd	r18, Z+6	; 0x06
    6e5a:	8a 89       	ldd	r24, Y+18	; 0x12
    6e5c:	9b 89       	ldd	r25, Y+19	; 0x13
    6e5e:	22 23       	and	r18, r18
    6e60:	09 f4       	brne	.+2      	; 0x6e64 <hal_spiReadWrite+0xee>
    6e62:	01 96       	adiw	r24, 0x01	; 1
    6e64:	8a 83       	std	Y+2, r24	; 0x02
    6e66:	9b 83       	std	Y+3, r25	; 0x03
    6e68:	d4 01       	movw	r26, r8
    6e6a:	17 96       	adiw	r26, 0x07	; 7
    6e6c:	8d 91       	ld	r24, X+
    6e6e:	9c 91       	ld	r25, X
    6e70:	18 97       	sbiw	r26, 0x08	; 8
    6e72:	03 96       	adiw	r24, 0x03	; 3
    6e74:	8c 83       	std	Y+4, r24	; 0x04
    6e76:	9d 83       	std	Y+5, r25	; 0x05
    6e78:	81 e0       	ldi	r24, 0x01	; 1
    6e7a:	8e 83       	std	Y+6, r24	; 0x06
    6e7c:	1f 82       	std	Y+7, r1	; 0x07
    6e7e:	88 87       	std	Y+8, r24	; 0x08
    6e80:	19 86       	std	Y+9, r1	; 0x09
    6e82:	22 23       	and	r18, r18
    6e84:	29 f4       	brne	.+10     	; 0x6e90 <hal_spiReadWrite+0x11a>
    6e86:	c1 01       	movw	r24, r2
    6e88:	01 97       	sbiw	r24, 0x01	; 1
    6e8a:	8a 87       	std	Y+10, r24	; 0x0a
    6e8c:	9b 87       	std	Y+11, r25	; 0x0b
    6e8e:	02 c0       	rjmp	.+4      	; 0x6e94 <hal_spiReadWrite+0x11e>
    6e90:	2a 86       	std	Y+10, r2	; 0x0a
    6e92:	3b 86       	std	Y+11, r3	; 0x0b
    6e94:	1c 86       	std	Y+12, r1	; 0x0c
    6e96:	55 24       	eor	r5, r5
    6e98:	53 94       	inc	r5
    6e9a:	5d 86       	std	Y+13, r5	; 0x0d
    6e9c:	6e 87       	std	Y+14, r22	; 0x0e
    6e9e:	1f 86       	std	Y+15, r1	; 0x0f
    6ea0:	f4 01       	movw	r30, r8
    6ea2:	86 85       	ldd	r24, Z+14	; 0x0e
    6ea4:	97 85       	ldd	r25, Z+15	; 0x0f
    6ea6:	aa 80       	ldd	r10, Y+2	; 0x02
    6ea8:	bb 80       	ldd	r11, Y+3	; 0x03
    6eaa:	cc 80       	ldd	r12, Y+4	; 0x04
    6eac:	dd 80       	ldd	r13, Y+5	; 0x05
    6eae:	ee 80       	ldd	r14, Y+6	; 0x06
    6eb0:	ff 80       	ldd	r15, Y+7	; 0x07
    6eb2:	08 85       	ldd	r16, Y+8	; 0x08
    6eb4:	19 85       	ldd	r17, Y+9	; 0x09
    6eb6:	2a 85       	ldd	r18, Y+10	; 0x0a
    6eb8:	3b 85       	ldd	r19, Y+11	; 0x0b
    6eba:	40 e0       	ldi	r20, 0x00	; 0
    6ebc:	51 e0       	ldi	r21, 0x01	; 1
    6ebe:	70 e0       	ldi	r23, 0x00	; 0
    6ec0:	0e 94 aa 4e 	call	0x9d54	; 0x9d54 <hal_configureDmaChannel>
    6ec4:	d4 01       	movw	r26, r8
    6ec6:	1e 96       	adiw	r26, 0x0e	; 14
    6ec8:	8d 91       	ld	r24, X+
    6eca:	9c 91       	ld	r25, X
    6ecc:	1f 97       	sbiw	r26, 0x0f	; 15
    6ece:	0e 94 bc 50 	call	0xa178	; 0xa178 <hal_dmaEnableChannel>
    6ed2:	f4 01       	movw	r30, r8
    6ed4:	87 81       	ldd	r24, Z+7	; 0x07
    6ed6:	90 85       	ldd	r25, Z+8	; 0x08
    6ed8:	03 96       	adiw	r24, 0x03	; 3
    6eda:	8a 83       	std	Y+2, r24	; 0x02
    6edc:	9b 83       	std	Y+3, r25	; 0x03
    6ede:	8c 89       	ldd	r24, Y+20	; 0x14
    6ee0:	9d 89       	ldd	r25, Y+21	; 0x15
    6ee2:	8c 83       	std	Y+4, r24	; 0x04
    6ee4:	9d 83       	std	Y+5, r25	; 0x05
    6ee6:	1e 82       	std	Y+6, r1	; 0x06
    6ee8:	5f 82       	std	Y+7, r5	; 0x07
    6eea:	18 86       	std	Y+8, r1	; 0x08
    6eec:	59 86       	std	Y+9, r5	; 0x09
    6eee:	2a 86       	std	Y+10, r2	; 0x0a
    6ef0:	3b 86       	std	Y+11, r3	; 0x0b
    6ef2:	80 89       	ldd	r24, Z+16	; 0x10
    6ef4:	91 89       	ldd	r25, Z+17	; 0x11
    6ef6:	aa 80       	ldd	r10, Y+2	; 0x02
    6ef8:	bb 80       	ldd	r11, Y+3	; 0x03
    6efa:	cc 80       	ldd	r12, Y+4	; 0x04
    6efc:	dd 80       	ldd	r13, Y+5	; 0x05
    6efe:	ee 24       	eor	r14, r14
    6f00:	ff 24       	eor	r15, r15
    6f02:	f3 94       	inc	r15
    6f04:	00 e0       	ldi	r16, 0x00	; 0
    6f06:	11 e0       	ldi	r17, 0x01	; 1
    6f08:	2a 85       	ldd	r18, Y+10	; 0x0a
    6f0a:	3b 85       	ldd	r19, Y+11	; 0x0b
    6f0c:	4c 85       	ldd	r20, Y+12	; 0x0c
    6f0e:	5d 85       	ldd	r21, Y+13	; 0x0d
    6f10:	6e 85       	ldd	r22, Y+14	; 0x0e
    6f12:	7f 85       	ldd	r23, Y+15	; 0x0f
    6f14:	0e 94 aa 4e 	call	0x9d54	; 0x9d54 <hal_configureDmaChannel>
    6f18:	d4 01       	movw	r26, r8
    6f1a:	50 96       	adiw	r26, 0x10	; 16
    6f1c:	8d 91       	ld	r24, X+
    6f1e:	9c 91       	ld	r25, X
    6f20:	51 97       	sbiw	r26, 0x11	; 17
    6f22:	0e 94 bc 50 	call	0xa178	; 0xa178 <hal_dmaEnableChannel>
    6f26:	02 c0       	rjmp	.+4      	; 0x6f2c <hal_spiReadWrite+0x1b6>
    6f28:	83 e0       	ldi	r24, 0x03	; 3
    6f2a:	81 83       	std	Z+1, r24	; 0x01
    6f2c:	f4 01       	movw	r30, r8
    6f2e:	86 81       	ldd	r24, Z+6	; 0x06
    6f30:	88 23       	and	r24, r24
    6f32:	09 f0       	breq	.+2      	; 0x6f36 <hal_spiReadWrite+0x1c0>
    6f34:	94 c0       	rjmp	.+296    	; 0x705e <hal_spiReadWrite+0x2e8>
    6f36:	d3 01       	movw	r26, r6
    6f38:	18 96       	adiw	r26, 0x08	; 8
    6f3a:	1d 92       	st	X+, r1
    6f3c:	1c 92       	st	X, r1
    6f3e:	19 97       	sbiw	r26, 0x09	; 9
    6f40:	50 96       	adiw	r26, 0x10	; 16
    6f42:	4c 92       	st	X, r4
    6f44:	50 97       	sbiw	r26, 0x10	; 16
    6f46:	44 20       	and	r4, r4
    6f48:	09 f4       	brne	.+2      	; 0x6f4c <hal_spiReadWrite+0x1d6>
    6f4a:	7d c0       	rjmp	.+250    	; 0x7046 <hal_spiReadWrite+0x2d0>
    6f4c:	1b 96       	adiw	r26, 0x0b	; 11
    6f4e:	8c 91       	ld	r24, X
    6f50:	1b 97       	sbiw	r26, 0x0b	; 11
    6f52:	1a 96       	adiw	r26, 0x0a	; 10
    6f54:	9c 91       	ld	r25, X
    6f56:	1a 97       	sbiw	r26, 0x0a	; 10
    6f58:	95 30       	cpi	r25, 0x05	; 5
    6f5a:	09 f4       	brne	.+2      	; 0x6f5e <hal_spiReadWrite+0x1e8>
    6f5c:	4a c0       	rjmp	.+148    	; 0x6ff2 <hal_spiReadWrite+0x27c>
    6f5e:	96 30       	cpi	r25, 0x06	; 6
    6f60:	80 f4       	brcc	.+32     	; 0x6f82 <hal_spiReadWrite+0x20c>
    6f62:	92 30       	cpi	r25, 0x02	; 2
    6f64:	81 f1       	breq	.+96     	; 0x6fc6 <hal_spiReadWrite+0x250>
    6f66:	93 30       	cpi	r25, 0x03	; 3
    6f68:	30 f4       	brcc	.+12     	; 0x6f76 <hal_spiReadWrite+0x200>
    6f6a:	99 23       	and	r25, r25
    6f6c:	e1 f0       	breq	.+56     	; 0x6fa6 <hal_spiReadWrite+0x230>
    6f6e:	91 30       	cpi	r25, 0x01	; 1
    6f70:	09 f0       	breq	.+2      	; 0x6f74 <hal_spiReadWrite+0x1fe>
    6f72:	69 c0       	rjmp	.+210    	; 0x7046 <hal_spiReadWrite+0x2d0>
    6f74:	20 c0       	rjmp	.+64     	; 0x6fb6 <hal_spiReadWrite+0x240>
    6f76:	93 30       	cpi	r25, 0x03	; 3
    6f78:	71 f1       	breq	.+92     	; 0x6fd6 <hal_spiReadWrite+0x260>
    6f7a:	94 30       	cpi	r25, 0x04	; 4
    6f7c:	09 f0       	breq	.+2      	; 0x6f80 <hal_spiReadWrite+0x20a>
    6f7e:	63 c0       	rjmp	.+198    	; 0x7046 <hal_spiReadWrite+0x2d0>
    6f80:	31 c0       	rjmp	.+98     	; 0x6fe4 <hal_spiReadWrite+0x26e>
    6f82:	98 30       	cpi	r25, 0x08	; 8
    6f84:	09 f4       	brne	.+2      	; 0x6f88 <hal_spiReadWrite+0x212>
    6f86:	4a c0       	rjmp	.+148    	; 0x701c <hal_spiReadWrite+0x2a6>
    6f88:	99 30       	cpi	r25, 0x09	; 9
    6f8a:	30 f4       	brcc	.+12     	; 0x6f98 <hal_spiReadWrite+0x222>
    6f8c:	96 30       	cpi	r25, 0x06	; 6
    6f8e:	c1 f1       	breq	.+112    	; 0x7000 <hal_spiReadWrite+0x28a>
    6f90:	97 30       	cpi	r25, 0x07	; 7
    6f92:	09 f0       	breq	.+2      	; 0x6f96 <hal_spiReadWrite+0x220>
    6f94:	58 c0       	rjmp	.+176    	; 0x7046 <hal_spiReadWrite+0x2d0>
    6f96:	3b c0       	rjmp	.+118    	; 0x700e <hal_spiReadWrite+0x298>
    6f98:	99 30       	cpi	r25, 0x09	; 9
    6f9a:	09 f4       	brne	.+2      	; 0x6f9e <hal_spiReadWrite+0x228>
    6f9c:	46 c0       	rjmp	.+140    	; 0x702a <hal_spiReadWrite+0x2b4>
    6f9e:	9a 30       	cpi	r25, 0x0A	; 10
    6fa0:	09 f0       	breq	.+2      	; 0x6fa4 <hal_spiReadWrite+0x22e>
    6fa2:	51 c0       	rjmp	.+162    	; 0x7046 <hal_spiReadWrite+0x2d0>
    6fa4:	49 c0       	rjmp	.+146    	; 0x7038 <hal_spiReadWrite+0x2c2>
    6fa6:	90 91 00 06 	lds	r25, 0x0600
    6faa:	98 23       	and	r25, r24
    6fac:	09 f4       	brne	.+2      	; 0x6fb0 <hal_spiReadWrite+0x23a>
    6fae:	4b c0       	rjmp	.+150    	; 0x7046 <hal_spiReadWrite+0x2d0>
    6fb0:	e0 e0       	ldi	r30, 0x00	; 0
    6fb2:	f6 e0       	ldi	r31, 0x06	; 6
    6fb4:	47 c0       	rjmp	.+142    	; 0x7044 <hal_spiReadWrite+0x2ce>
    6fb6:	90 91 20 06 	lds	r25, 0x0620
    6fba:	98 23       	and	r25, r24
    6fbc:	09 f4       	brne	.+2      	; 0x6fc0 <hal_spiReadWrite+0x24a>
    6fbe:	43 c0       	rjmp	.+134    	; 0x7046 <hal_spiReadWrite+0x2d0>
    6fc0:	e0 e2       	ldi	r30, 0x20	; 32
    6fc2:	f6 e0       	ldi	r31, 0x06	; 6
    6fc4:	3f c0       	rjmp	.+126    	; 0x7044 <hal_spiReadWrite+0x2ce>
    6fc6:	90 91 40 06 	lds	r25, 0x0640
    6fca:	98 23       	and	r25, r24
    6fcc:	09 f4       	brne	.+2      	; 0x6fd0 <hal_spiReadWrite+0x25a>
    6fce:	3b c0       	rjmp	.+118    	; 0x7046 <hal_spiReadWrite+0x2d0>
    6fd0:	e0 e4       	ldi	r30, 0x40	; 64
    6fd2:	f6 e0       	ldi	r31, 0x06	; 6
    6fd4:	37 c0       	rjmp	.+110    	; 0x7044 <hal_spiReadWrite+0x2ce>
    6fd6:	90 91 60 06 	lds	r25, 0x0660
    6fda:	98 23       	and	r25, r24
    6fdc:	a1 f1       	breq	.+104    	; 0x7046 <hal_spiReadWrite+0x2d0>
    6fde:	e0 e6       	ldi	r30, 0x60	; 96
    6fe0:	f6 e0       	ldi	r31, 0x06	; 6
    6fe2:	30 c0       	rjmp	.+96     	; 0x7044 <hal_spiReadWrite+0x2ce>
    6fe4:	90 91 80 06 	lds	r25, 0x0680
    6fe8:	98 23       	and	r25, r24
    6fea:	69 f1       	breq	.+90     	; 0x7046 <hal_spiReadWrite+0x2d0>
    6fec:	e0 e8       	ldi	r30, 0x80	; 128
    6fee:	f6 e0       	ldi	r31, 0x06	; 6
    6ff0:	29 c0       	rjmp	.+82     	; 0x7044 <hal_spiReadWrite+0x2ce>
    6ff2:	90 91 a0 06 	lds	r25, 0x06A0
    6ff6:	98 23       	and	r25, r24
    6ff8:	31 f1       	breq	.+76     	; 0x7046 <hal_spiReadWrite+0x2d0>
    6ffa:	e0 ea       	ldi	r30, 0xA0	; 160
    6ffc:	f6 e0       	ldi	r31, 0x06	; 6
    6ffe:	22 c0       	rjmp	.+68     	; 0x7044 <hal_spiReadWrite+0x2ce>
    7000:	90 91 e0 06 	lds	r25, 0x06E0
    7004:	98 23       	and	r25, r24
    7006:	f9 f0       	breq	.+62     	; 0x7046 <hal_spiReadWrite+0x2d0>
    7008:	e0 ee       	ldi	r30, 0xE0	; 224
    700a:	f6 e0       	ldi	r31, 0x06	; 6
    700c:	1b c0       	rjmp	.+54     	; 0x7044 <hal_spiReadWrite+0x2ce>
    700e:	90 91 00 07 	lds	r25, 0x0700
    7012:	98 23       	and	r25, r24
    7014:	c1 f0       	breq	.+48     	; 0x7046 <hal_spiReadWrite+0x2d0>
    7016:	e0 e0       	ldi	r30, 0x00	; 0
    7018:	f7 e0       	ldi	r31, 0x07	; 7
    701a:	14 c0       	rjmp	.+40     	; 0x7044 <hal_spiReadWrite+0x2ce>
    701c:	90 91 20 07 	lds	r25, 0x0720
    7020:	98 23       	and	r25, r24
    7022:	89 f0       	breq	.+34     	; 0x7046 <hal_spiReadWrite+0x2d0>
    7024:	e0 e2       	ldi	r30, 0x20	; 32
    7026:	f7 e0       	ldi	r31, 0x07	; 7
    7028:	0d c0       	rjmp	.+26     	; 0x7044 <hal_spiReadWrite+0x2ce>
    702a:	90 91 c0 07 	lds	r25, 0x07C0
    702e:	98 23       	and	r25, r24
    7030:	51 f0       	breq	.+20     	; 0x7046 <hal_spiReadWrite+0x2d0>
    7032:	e0 ec       	ldi	r30, 0xC0	; 192
    7034:	f7 e0       	ldi	r31, 0x07	; 7
    7036:	06 c0       	rjmp	.+12     	; 0x7044 <hal_spiReadWrite+0x2ce>
    7038:	90 91 e0 07 	lds	r25, 0x07E0
    703c:	98 23       	and	r25, r24
    703e:	19 f0       	breq	.+6      	; 0x7046 <hal_spiReadWrite+0x2d0>
    7040:	e0 ee       	ldi	r30, 0xE0	; 224
    7042:	f7 e0       	ldi	r31, 0x07	; 7
    7044:	86 83       	std	Z+6, r24	; 0x06
    7046:	d4 01       	movw	r26, r8
    7048:	17 96       	adiw	r26, 0x07	; 7
    704a:	ed 91       	ld	r30, X+
    704c:	fc 91       	ld	r31, X
    704e:	18 97       	sbiw	r26, 0x08	; 8
    7050:	aa 89       	ldd	r26, Y+18	; 0x12
    7052:	bb 89       	ldd	r27, Y+19	; 0x13
    7054:	8c 91       	ld	r24, X
    7056:	83 83       	std	Z+3, r24	; 0x03
    7058:	02 c0       	rjmp	.+4      	; 0x705e <hal_spiReadWrite+0x2e8>
    705a:	8e ef       	ldi	r24, 0xFE	; 254
    705c:	01 c0       	rjmp	.+2      	; 0x7060 <hal_spiReadWrite+0x2ea>
    705e:	80 e0       	ldi	r24, 0x00	; 0
    7060:	65 96       	adiw	r28, 0x15	; 21
    7062:	cd bf       	out	0x3d, r28	; 61
    7064:	de bf       	out	0x3e, r29	; 62
    7066:	df 91       	pop	r29
    7068:	cf 91       	pop	r28
    706a:	1f 91       	pop	r17
    706c:	0f 91       	pop	r16
    706e:	ff 90       	pop	r15
    7070:	ef 90       	pop	r14
    7072:	df 90       	pop	r13
    7074:	cf 90       	pop	r12
    7076:	bf 90       	pop	r11
    7078:	af 90       	pop	r10
    707a:	9f 90       	pop	r9
    707c:	8f 90       	pop	r8
    707e:	7f 90       	pop	r7
    7080:	6f 90       	pop	r6
    7082:	5f 90       	pop	r5
    7084:	4f 90       	pop	r4
    7086:	3f 90       	pop	r3
    7088:	2f 90       	pop	r2
    708a:	08 95       	ret

0000708c <hal_requestSpiChannel>:
    708c:	4f 92       	push	r4
    708e:	5f 92       	push	r5
    7090:	6f 92       	push	r6
    7092:	7f 92       	push	r7
    7094:	8f 92       	push	r8
    7096:	9f 92       	push	r9
    7098:	bf 92       	push	r11
    709a:	cf 92       	push	r12
    709c:	df 92       	push	r13
    709e:	ef 92       	push	r14
    70a0:	ff 92       	push	r15
    70a2:	0f 93       	push	r16
    70a4:	1f 93       	push	r17
    70a6:	cf 93       	push	r28
    70a8:	df 93       	push	r29
    70aa:	cd b7       	in	r28, 0x3d	; 61
    70ac:	de b7       	in	r29, 0x3e	; 62
    70ae:	28 97       	sbiw	r28, 0x08	; 8
    70b0:	cd bf       	out	0x3d, r28	; 61
    70b2:	de bf       	out	0x3e, r29	; 62
    70b4:	b8 2e       	mov	r11, r24
    70b6:	4b 01       	movw	r8, r22
    70b8:	e4 2e       	mov	r14, r20
    70ba:	f2 2e       	mov	r15, r18
    70bc:	44 24       	eor	r4, r4
    70be:	55 24       	eor	r5, r5
    70c0:	32 01       	movw	r6, r4
    70c2:	8f b7       	in	r24, 0x3f	; 63
    70c4:	89 83       	std	Y+1, r24	; 0x01
    70c6:	f8 94       	cli
    70c8:	83 e0       	ldi	r24, 0x03	; 3
    70ca:	8b 15       	cp	r24, r11
    70cc:	28 f4       	brcc	.+10     	; 0x70d8 <hal_requestSpiChannel+0x4c>
    70ce:	89 81       	ldd	r24, Y+1	; 0x01
    70d0:	8f bf       	out	0x3f, r24	; 63
    70d2:	8b ef       	ldi	r24, 0xFB	; 251
    70d4:	9f ef       	ldi	r25, 0xFF	; 255
    70d6:	3c c1       	rjmp	.+632    	; 0x7350 <hal_requestSpiChannel+0x2c4>
    70d8:	82 2f       	mov	r24, r18
    70da:	81 50       	subi	r24, 0x01	; 1
    70dc:	87 ff       	sbrs	r24, 7
    70de:	05 c0       	rjmp	.+10     	; 0x70ea <hal_requestSpiChannel+0x5e>
    70e0:	89 81       	ldd	r24, Y+1	; 0x01
    70e2:	8f bf       	out	0x3f, r24	; 63
    70e4:	87 ef       	ldi	r24, 0xF7	; 247
    70e6:	9f ef       	ldi	r25, 0xFF	; 255
    70e8:	33 c1       	rjmp	.+614    	; 0x7350 <hal_requestSpiChannel+0x2c4>
    70ea:	ea e0       	ldi	r30, 0x0A	; 10
    70ec:	e4 17       	cp	r30, r20
    70ee:	28 f4       	brcc	.+10     	; 0x70fa <hal_requestSpiChannel+0x6e>
    70f0:	89 81       	ldd	r24, Y+1	; 0x01
    70f2:	8f bf       	out	0x3f, r24	; 63
    70f4:	86 ef       	ldi	r24, 0xF6	; 246
    70f6:	9f ef       	ldi	r25, 0xFF	; 255
    70f8:	2b c1       	rjmp	.+598    	; 0x7350 <hal_requestSpiChannel+0x2c4>
    70fa:	8b 2d       	mov	r24, r11
    70fc:	0e 94 ac 2d 	call	0x5b58	; 0x5b58 <findSpiElement>
    7100:	6c 01       	movw	r12, r24
    7102:	00 97       	sbiw	r24, 0x00	; 0
    7104:	09 f4       	brne	.+2      	; 0x7108 <hal_requestSpiChannel+0x7c>
    7106:	19 c1       	rjmp	.+562    	; 0x733a <hal_requestSpiChannel+0x2ae>
    7108:	fc 01       	movw	r30, r24
    710a:	86 81       	ldd	r24, Z+6	; 0x06
    710c:	81 30       	cpi	r24, 0x01	; 1
    710e:	41 f4       	brne	.+16     	; 0x7120 <hal_requestSpiChannel+0x94>
    7110:	85 81       	ldd	r24, Z+5	; 0x05
    7112:	88 23       	and	r24, r24
    7114:	29 f0       	breq	.+10     	; 0x7120 <hal_requestSpiChannel+0x94>
    7116:	89 81       	ldd	r24, Y+1	; 0x01
    7118:	8f bf       	out	0x3f, r24	; 63
    711a:	83 ef       	ldi	r24, 0xF3	; 243
    711c:	9f ef       	ldi	r25, 0xFF	; 255
    711e:	18 c1       	rjmp	.+560    	; 0x7350 <hal_requestSpiChannel+0x2c4>
    7120:	81 e1       	ldi	r24, 0x11	; 17
    7122:	90 e0       	ldi	r25, 0x00	; 0
    7124:	0e 94 5e 8b 	call	0x116bc	; 0x116bc <utl_createLink>
    7128:	8a 83       	std	Y+2, r24	; 0x02
    712a:	9b 83       	std	Y+3, r25	; 0x03
    712c:	8a 81       	ldd	r24, Y+2	; 0x02
    712e:	9b 81       	ldd	r25, Y+3	; 0x03
    7130:	97 fd       	sbrc	r25, 7
    7132:	0c c0       	rjmp	.+24     	; 0x714c <hal_requestSpiChannel+0xc0>
    7134:	80 91 26 21 	lds	r24, 0x2126
    7138:	90 91 27 21 	lds	r25, 0x2127
    713c:	6a 81       	ldd	r22, Y+2	; 0x02
    713e:	7b 81       	ldd	r23, Y+3	; 0x03
    7140:	41 e0       	ldi	r20, 0x01	; 1
    7142:	0e 94 6e 89 	call	0x112dc	; 0x112dc <utl_insertLink>
    7146:	8a 81       	ldd	r24, Y+2	; 0x02
    7148:	9b 81       	ldd	r25, Y+3	; 0x03
    714a:	02 c0       	rjmp	.+4      	; 0x7150 <hal_requestSpiChannel+0xc4>
    714c:	8f ef       	ldi	r24, 0xFF	; 255
    714e:	9f ef       	ldi	r25, 0xFF	; 255
    7150:	80 93 dc 24 	sts	0x24DC, r24
    7154:	90 93 dd 24 	sts	0x24DD, r25
    7158:	80 91 dc 24 	lds	r24, 0x24DC
    715c:	90 91 dd 24 	lds	r25, 0x24DD
    7160:	97 ff       	sbrs	r25, 7
    7162:	05 c0       	rjmp	.+10     	; 0x716e <hal_requestSpiChannel+0xe2>
    7164:	89 81       	ldd	r24, Y+1	; 0x01
    7166:	8f bf       	out	0x3f, r24	; 63
    7168:	8f ef       	ldi	r24, 0xFF	; 255
    716a:	9f ef       	ldi	r25, 0xFF	; 255
    716c:	f1 c0       	rjmp	.+482    	; 0x7350 <hal_requestSpiChannel+0x2c4>
    716e:	e0 91 dc 24 	lds	r30, 0x24DC
    7172:	f0 91 dd 24 	lds	r31, 0x24DD
    7176:	00 81       	ld	r16, Z
    7178:	11 81       	ldd	r17, Z+1	; 0x01
    717a:	81 e1       	ldi	r24, 0x11	; 17
    717c:	f8 01       	movw	r30, r16
    717e:	11 92       	st	Z+, r1
    7180:	8a 95       	dec	r24
    7182:	e9 f7       	brne	.-6      	; 0x717e <hal_requestSpiChannel+0xf2>
    7184:	f6 01       	movw	r30, r12
    7186:	85 81       	ldd	r24, Z+5	; 0x05
    7188:	8f 5f       	subi	r24, 0xFF	; 255
    718a:	85 83       	std	Z+5, r24	; 0x05
    718c:	f8 01       	movw	r30, r16
    718e:	c4 86       	std	Z+12, r12	; 0x0c
    7190:	d5 86       	std	Z+13, r13	; 0x0d
    7192:	e2 86       	std	Z+10, r14	; 0x0a
    7194:	f3 86       	std	Z+11, r15	; 0x0b
    7196:	10 86       	std	Z+8, r1	; 0x08
    7198:	11 86       	std	Z+9, r1	; 0x09
    719a:	16 82       	std	Z+6, r1	; 0x06
    719c:	17 82       	std	Z+7, r1	; 0x07
    719e:	12 82       	std	Z+2, r1	; 0x02
    71a0:	13 82       	std	Z+3, r1	; 0x03
    71a2:	14 82       	std	Z+4, r1	; 0x04
    71a4:	15 82       	std	Z+5, r1	; 0x05
    71a6:	80 82       	st	Z, r8
    71a8:	91 82       	std	Z+1, r9	; 0x01
    71aa:	f6 01       	movw	r30, r12
    71ac:	86 81       	ldd	r24, Z+6	; 0x06
    71ae:	81 30       	cpi	r24, 0x01	; 1
    71b0:	21 f5       	brne	.+72     	; 0x71fa <hal_requestSpiChannel+0x16e>
    71b2:	02 87       	std	Z+10, r16	; 0x0a
    71b4:	13 87       	std	Z+11, r17	; 0x0b
    71b6:	fc 82       	std	Y+4, r15	; 0x04
    71b8:	1d 82       	std	Y+5, r1	; 0x05
    71ba:	4f 2c       	mov	r4, r15
    71bc:	55 24       	eor	r5, r5
    71be:	53 94       	inc	r5
    71c0:	f2 e0       	ldi	r31, 0x02	; 2
    71c2:	bf 16       	cp	r11, r31
    71c4:	81 f0       	breq	.+32     	; 0x71e6 <hal_requestSpiChannel+0x15a>
    71c6:	83 e0       	ldi	r24, 0x03	; 3
    71c8:	b8 16       	cp	r11, r24
    71ca:	91 f0       	breq	.+36     	; 0x71f0 <hal_requestSpiChannel+0x164>
    71cc:	e1 e0       	ldi	r30, 0x01	; 1
    71ce:	be 16       	cp	r11, r30
    71d0:	29 f0       	breq	.+10     	; 0x71dc <hal_requestSpiChannel+0x150>
    71d2:	89 e0       	ldi	r24, 0x09	; 9
    71d4:	68 2e       	mov	r6, r24
    71d6:	8f e2       	ldi	r24, 0x2F	; 47
    71d8:	78 2e       	mov	r7, r24
    71da:	11 c0       	rjmp	.+34     	; 0x71fe <hal_requestSpiChannel+0x172>
    71dc:	bd ef       	ldi	r27, 0xFD	; 253
    71de:	6b 2e       	mov	r6, r27
    71e0:	be e2       	ldi	r27, 0x2E	; 46
    71e2:	7b 2e       	mov	r7, r27
    71e4:	0c c0       	rjmp	.+24     	; 0x71fe <hal_requestSpiChannel+0x172>
    71e6:	a1 ef       	ldi	r26, 0xF1	; 241
    71e8:	6a 2e       	mov	r6, r26
    71ea:	ae e2       	ldi	r26, 0x2E	; 46
    71ec:	7a 2e       	mov	r7, r26
    71ee:	07 c0       	rjmp	.+14     	; 0x71fe <hal_requestSpiChannel+0x172>
    71f0:	f5 ee       	ldi	r31, 0xE5	; 229
    71f2:	6f 2e       	mov	r6, r31
    71f4:	fe e2       	ldi	r31, 0x2E	; 46
    71f6:	7f 2e       	mov	r7, r31
    71f8:	02 c0       	rjmp	.+4      	; 0x71fe <hal_requestSpiChannel+0x172>
    71fa:	1c 82       	std	Y+4, r1	; 0x04
    71fc:	fd 82       	std	Y+5, r15	; 0x05
    71fe:	1f 82       	std	Y+7, r1	; 0x07
    7200:	18 86       	std	Y+8, r1	; 0x08
    7202:	8e 2d       	mov	r24, r14
    7204:	2c 81       	ldd	r18, Y+4	; 0x04
    7206:	3d 81       	ldd	r19, Y+5	; 0x05
    7208:	4e 81       	ldd	r20, Y+6	; 0x06
    720a:	50 e0       	ldi	r21, 0x00	; 0
    720c:	60 e0       	ldi	r22, 0x00	; 0
    720e:	0e 94 91 2a 	call	0x5522	; 0x5522 <hal_configureGpioPort>
    7212:	f6 01       	movw	r30, r12
    7214:	86 81       	ldd	r24, Z+6	; 0x06
    7216:	81 30       	cpi	r24, 0x01	; 1
    7218:	41 f4       	brne	.+16     	; 0x722a <hal_requestSpiChannel+0x19e>
    721a:	8e 2d       	mov	r24, r14
    721c:	b3 01       	movw	r22, r6
    721e:	a2 01       	movw	r20, r4
    7220:	0e 94 ef 2a 	call	0x55de	; 0x55de <hal_requestGpioInt>
    7224:	f8 01       	movw	r30, r16
    7226:	86 87       	std	Z+14, r24	; 0x0e
    7228:	97 87       	std	Z+15, r25	; 0x0f
    722a:	f8 01       	movw	r30, r16
    722c:	86 85       	ldd	r24, Z+14	; 0x0e
    722e:	97 85       	ldd	r25, Z+15	; 0x0f
    7230:	97 fd       	sbrc	r25, 7
    7232:	83 c0       	rjmp	.+262    	; 0x733a <hal_requestSpiChannel+0x2ae>
    7234:	f6 01       	movw	r30, r12
    7236:	86 81       	ldd	r24, Z+6	; 0x06
    7238:	88 23       	and	r24, r24
    723a:	09 f0       	breq	.+2      	; 0x723e <hal_requestSpiChannel+0x1b2>
    723c:	83 c0       	rjmp	.+262    	; 0x7344 <hal_requestSpiChannel+0x2b8>
    723e:	f5 e0       	ldi	r31, 0x05	; 5
    7240:	ef 16       	cp	r14, r31
    7242:	09 f4       	brne	.+2      	; 0x7246 <hal_requestSpiChannel+0x1ba>
    7244:	4f c0       	rjmp	.+158    	; 0x72e4 <hal_requestSpiChannel+0x258>
    7246:	fe 15       	cp	r31, r14
    7248:	80 f0       	brcs	.+32     	; 0x726a <hal_requestSpiChannel+0x1de>
    724a:	82 e0       	ldi	r24, 0x02	; 2
    724c:	e8 16       	cp	r14, r24
    724e:	99 f1       	breq	.+102    	; 0x72b6 <hal_requestSpiChannel+0x22a>
    7250:	8e 15       	cp	r24, r14
    7252:	20 f0       	brcs	.+8      	; 0x725c <hal_requestSpiChannel+0x1d0>
    7254:	e1 e0       	ldi	r30, 0x01	; 1
    7256:	ee 16       	cp	r14, r30
    7258:	f1 f4       	brne	.+60     	; 0x7296 <hal_requestSpiChannel+0x20a>
    725a:	25 c0       	rjmp	.+74     	; 0x72a6 <hal_requestSpiChannel+0x21a>
    725c:	f3 e0       	ldi	r31, 0x03	; 3
    725e:	ef 16       	cp	r14, r31
    7260:	91 f1       	breq	.+100    	; 0x72c6 <hal_requestSpiChannel+0x23a>
    7262:	84 e0       	ldi	r24, 0x04	; 4
    7264:	e8 16       	cp	r14, r24
    7266:	b9 f4       	brne	.+46     	; 0x7296 <hal_requestSpiChannel+0x20a>
    7268:	36 c0       	rjmp	.+108    	; 0x72d6 <hal_requestSpiChannel+0x24a>
    726a:	e8 e0       	ldi	r30, 0x08	; 8
    726c:	ee 16       	cp	r14, r30
    726e:	09 f4       	brne	.+2      	; 0x7272 <hal_requestSpiChannel+0x1e6>
    7270:	4e c0       	rjmp	.+156    	; 0x730e <hal_requestSpiChannel+0x282>
    7272:	ee 15       	cp	r30, r14
    7274:	40 f0       	brcs	.+16     	; 0x7286 <hal_requestSpiChannel+0x1fa>
    7276:	f6 e0       	ldi	r31, 0x06	; 6
    7278:	ef 16       	cp	r14, r31
    727a:	09 f4       	brne	.+2      	; 0x727e <hal_requestSpiChannel+0x1f2>
    727c:	3a c0       	rjmp	.+116    	; 0x72f2 <hal_requestSpiChannel+0x266>
    727e:	87 e0       	ldi	r24, 0x07	; 7
    7280:	e8 16       	cp	r14, r24
    7282:	49 f4       	brne	.+18     	; 0x7296 <hal_requestSpiChannel+0x20a>
    7284:	3d c0       	rjmp	.+122    	; 0x7300 <hal_requestSpiChannel+0x274>
    7286:	e9 e0       	ldi	r30, 0x09	; 9
    7288:	ee 16       	cp	r14, r30
    728a:	09 f4       	brne	.+2      	; 0x728e <hal_requestSpiChannel+0x202>
    728c:	47 c0       	rjmp	.+142    	; 0x731c <hal_requestSpiChannel+0x290>
    728e:	fa e0       	ldi	r31, 0x0A	; 10
    7290:	ef 16       	cp	r14, r31
    7292:	09 f4       	brne	.+2      	; 0x7296 <hal_requestSpiChannel+0x20a>
    7294:	4a c0       	rjmp	.+148    	; 0x732a <hal_requestSpiChannel+0x29e>
    7296:	80 91 00 06 	lds	r24, 0x0600
    729a:	8f 21       	and	r24, r15
    729c:	09 f4       	brne	.+2      	; 0x72a0 <hal_requestSpiChannel+0x214>
    729e:	52 c0       	rjmp	.+164    	; 0x7344 <hal_requestSpiChannel+0x2b8>
    72a0:	e0 e0       	ldi	r30, 0x00	; 0
    72a2:	f6 e0       	ldi	r31, 0x06	; 6
    72a4:	48 c0       	rjmp	.+144    	; 0x7336 <hal_requestSpiChannel+0x2aa>
    72a6:	80 91 20 06 	lds	r24, 0x0620
    72aa:	8f 21       	and	r24, r15
    72ac:	09 f4       	brne	.+2      	; 0x72b0 <hal_requestSpiChannel+0x224>
    72ae:	4a c0       	rjmp	.+148    	; 0x7344 <hal_requestSpiChannel+0x2b8>
    72b0:	e0 e2       	ldi	r30, 0x20	; 32
    72b2:	f6 e0       	ldi	r31, 0x06	; 6
    72b4:	40 c0       	rjmp	.+128    	; 0x7336 <hal_requestSpiChannel+0x2aa>
    72b6:	80 91 40 06 	lds	r24, 0x0640
    72ba:	8f 21       	and	r24, r15
    72bc:	09 f4       	brne	.+2      	; 0x72c0 <hal_requestSpiChannel+0x234>
    72be:	42 c0       	rjmp	.+132    	; 0x7344 <hal_requestSpiChannel+0x2b8>
    72c0:	e0 e4       	ldi	r30, 0x40	; 64
    72c2:	f6 e0       	ldi	r31, 0x06	; 6
    72c4:	38 c0       	rjmp	.+112    	; 0x7336 <hal_requestSpiChannel+0x2aa>
    72c6:	80 91 60 06 	lds	r24, 0x0660
    72ca:	8f 21       	and	r24, r15
    72cc:	09 f4       	brne	.+2      	; 0x72d0 <hal_requestSpiChannel+0x244>
    72ce:	3a c0       	rjmp	.+116    	; 0x7344 <hal_requestSpiChannel+0x2b8>
    72d0:	e0 e6       	ldi	r30, 0x60	; 96
    72d2:	f6 e0       	ldi	r31, 0x06	; 6
    72d4:	30 c0       	rjmp	.+96     	; 0x7336 <hal_requestSpiChannel+0x2aa>
    72d6:	80 91 80 06 	lds	r24, 0x0680
    72da:	8f 21       	and	r24, r15
    72dc:	99 f1       	breq	.+102    	; 0x7344 <hal_requestSpiChannel+0x2b8>
    72de:	e0 e8       	ldi	r30, 0x80	; 128
    72e0:	f6 e0       	ldi	r31, 0x06	; 6
    72e2:	29 c0       	rjmp	.+82     	; 0x7336 <hal_requestSpiChannel+0x2aa>
    72e4:	80 91 a0 06 	lds	r24, 0x06A0
    72e8:	8f 21       	and	r24, r15
    72ea:	61 f1       	breq	.+88     	; 0x7344 <hal_requestSpiChannel+0x2b8>
    72ec:	e0 ea       	ldi	r30, 0xA0	; 160
    72ee:	f6 e0       	ldi	r31, 0x06	; 6
    72f0:	22 c0       	rjmp	.+68     	; 0x7336 <hal_requestSpiChannel+0x2aa>
    72f2:	80 91 e0 06 	lds	r24, 0x06E0
    72f6:	8f 21       	and	r24, r15
    72f8:	29 f1       	breq	.+74     	; 0x7344 <hal_requestSpiChannel+0x2b8>
    72fa:	e0 ee       	ldi	r30, 0xE0	; 224
    72fc:	f6 e0       	ldi	r31, 0x06	; 6
    72fe:	1b c0       	rjmp	.+54     	; 0x7336 <hal_requestSpiChannel+0x2aa>
    7300:	80 91 00 07 	lds	r24, 0x0700
    7304:	8f 21       	and	r24, r15
    7306:	f1 f0       	breq	.+60     	; 0x7344 <hal_requestSpiChannel+0x2b8>
    7308:	e0 e0       	ldi	r30, 0x00	; 0
    730a:	f7 e0       	ldi	r31, 0x07	; 7
    730c:	14 c0       	rjmp	.+40     	; 0x7336 <hal_requestSpiChannel+0x2aa>
    730e:	80 91 20 07 	lds	r24, 0x0720
    7312:	8f 21       	and	r24, r15
    7314:	b9 f0       	breq	.+46     	; 0x7344 <hal_requestSpiChannel+0x2b8>
    7316:	e0 e2       	ldi	r30, 0x20	; 32
    7318:	f7 e0       	ldi	r31, 0x07	; 7
    731a:	0d c0       	rjmp	.+26     	; 0x7336 <hal_requestSpiChannel+0x2aa>
    731c:	80 91 c0 07 	lds	r24, 0x07C0
    7320:	8f 21       	and	r24, r15
    7322:	81 f0       	breq	.+32     	; 0x7344 <hal_requestSpiChannel+0x2b8>
    7324:	e0 ec       	ldi	r30, 0xC0	; 192
    7326:	f7 e0       	ldi	r31, 0x07	; 7
    7328:	06 c0       	rjmp	.+12     	; 0x7336 <hal_requestSpiChannel+0x2aa>
    732a:	80 91 e0 07 	lds	r24, 0x07E0
    732e:	8f 21       	and	r24, r15
    7330:	49 f0       	breq	.+18     	; 0x7344 <hal_requestSpiChannel+0x2b8>
    7332:	e0 ee       	ldi	r30, 0xE0	; 224
    7334:	f7 e0       	ldi	r31, 0x07	; 7
    7336:	f5 82       	std	Z+5, r15	; 0x05
    7338:	05 c0       	rjmp	.+10     	; 0x7344 <hal_requestSpiChannel+0x2b8>
    733a:	89 81       	ldd	r24, Y+1	; 0x01
    733c:	8f bf       	out	0x3f, r24	; 63
    733e:	8d ef       	ldi	r24, 0xFD	; 253
    7340:	9f ef       	ldi	r25, 0xFF	; 255
    7342:	06 c0       	rjmp	.+12     	; 0x7350 <hal_requestSpiChannel+0x2c4>
    7344:	89 81       	ldd	r24, Y+1	; 0x01
    7346:	8f bf       	out	0x3f, r24	; 63
    7348:	80 91 dc 24 	lds	r24, 0x24DC
    734c:	90 91 dd 24 	lds	r25, 0x24DD
    7350:	28 96       	adiw	r28, 0x08	; 8
    7352:	cd bf       	out	0x3d, r28	; 61
    7354:	de bf       	out	0x3e, r29	; 62
    7356:	df 91       	pop	r29
    7358:	cf 91       	pop	r28
    735a:	1f 91       	pop	r17
    735c:	0f 91       	pop	r16
    735e:	ff 90       	pop	r15
    7360:	ef 90       	pop	r14
    7362:	df 90       	pop	r13
    7364:	cf 90       	pop	r12
    7366:	bf 90       	pop	r11
    7368:	9f 90       	pop	r9
    736a:	8f 90       	pop	r8
    736c:	7f 90       	pop	r7
    736e:	6f 90       	pop	r6
    7370:	5f 90       	pop	r5
    7372:	4f 90       	pop	r4
    7374:	08 95       	ret

00007376 <hal_releaseSpiChannel>:
    7376:	0f 93       	push	r16
    7378:	1f 93       	push	r17
    737a:	cf 93       	push	r28
    737c:	df 93       	push	r29
    737e:	00 d0       	rcall	.+0      	; 0x7380 <hal_releaseSpiChannel+0xa>
    7380:	cd b7       	in	r28, 0x3d	; 61
    7382:	de b7       	in	r29, 0x3e	; 62
    7384:	8a 83       	std	Y+2, r24	; 0x02
    7386:	9b 83       	std	Y+3, r25	; 0x03
    7388:	8f b7       	in	r24, 0x3f	; 63
    738a:	89 83       	std	Y+1, r24	; 0x01
    738c:	f8 94       	cli
    738e:	ea 81       	ldd	r30, Y+2	; 0x02
    7390:	fb 81       	ldd	r31, Y+3	; 0x03
    7392:	80 91 26 21 	lds	r24, 0x2126
    7396:	90 91 27 21 	lds	r25, 0x2127
    739a:	24 81       	ldd	r18, Z+4	; 0x04
    739c:	35 81       	ldd	r19, Z+5	; 0x05
    739e:	28 17       	cp	r18, r24
    73a0:	39 07       	cpc	r19, r25
    73a2:	21 f0       	breq	.+8      	; 0x73ac <hal_releaseSpiChannel+0x36>
    73a4:	89 81       	ldd	r24, Y+1	; 0x01
    73a6:	8f bf       	out	0x3f, r24	; 63
    73a8:	8e ef       	ldi	r24, 0xFE	; 254
    73aa:	39 c0       	rjmp	.+114    	; 0x741e <hal_releaseSpiChannel+0xa8>
    73ac:	ea 81       	ldd	r30, Y+2	; 0x02
    73ae:	fb 81       	ldd	r31, Y+3	; 0x03
    73b0:	00 81       	ld	r16, Z
    73b2:	11 81       	ldd	r17, Z+1	; 0x01
    73b4:	d8 01       	movw	r26, r16
    73b6:	1e 96       	adiw	r26, 0x0e	; 14
    73b8:	8d 91       	ld	r24, X+
    73ba:	9c 91       	ld	r25, X
    73bc:	1f 97       	sbiw	r26, 0x0f	; 15
    73be:	18 16       	cp	r1, r24
    73c0:	19 06       	cpc	r1, r25
    73c2:	34 f4       	brge	.+12     	; 0x73d0 <hal_releaseSpiChannel+0x5a>
    73c4:	1e 96       	adiw	r26, 0x0e	; 14
    73c6:	8d 91       	ld	r24, X+
    73c8:	9c 91       	ld	r25, X
    73ca:	1f 97       	sbiw	r26, 0x0f	; 15
    73cc:	0e 94 8e 2b 	call	0x571c	; 0x571c <hal_releaseGpioInt>
    73d0:	f8 01       	movw	r30, r16
    73d2:	04 85       	ldd	r16, Z+12	; 0x0c
    73d4:	15 85       	ldd	r17, Z+13	; 0x0d
    73d6:	80 91 26 21 	lds	r24, 0x2126
    73da:	90 91 27 21 	lds	r25, 0x2127
    73de:	6a 81       	ldd	r22, Y+2	; 0x02
    73e0:	7b 81       	ldd	r23, Y+3	; 0x03
    73e2:	0e 94 6a 8a 	call	0x114d4	; 0x114d4 <utl_destroyLink>
    73e6:	d8 01       	movw	r26, r16
    73e8:	15 96       	adiw	r26, 0x05	; 5
    73ea:	8c 91       	ld	r24, X
    73ec:	15 97       	sbiw	r26, 0x05	; 5
    73ee:	81 50       	subi	r24, 0x01	; 1
    73f0:	15 96       	adiw	r26, 0x05	; 5
    73f2:	8c 93       	st	X, r24
    73f4:	15 97       	sbiw	r26, 0x05	; 5
    73f6:	88 23       	and	r24, r24
    73f8:	79 f4       	brne	.+30     	; 0x7418 <hal_releaseSpiChannel+0xa2>
    73fa:	17 96       	adiw	r26, 0x07	; 7
    73fc:	ed 91       	ld	r30, X+
    73fe:	fc 91       	ld	r31, X
    7400:	18 97       	sbiw	r26, 0x08	; 8
    7402:	10 82       	st	Z, r1
    7404:	80 91 34 21 	lds	r24, 0x2134
    7408:	90 91 35 21 	lds	r25, 0x2135
    740c:	1c 96       	adiw	r26, 0x0c	; 12
    740e:	6d 91       	ld	r22, X+
    7410:	7c 91       	ld	r23, X
    7412:	1d 97       	sbiw	r26, 0x0d	; 13
    7414:	0e 94 6a 8a 	call	0x114d4	; 0x114d4 <utl_destroyLink>
    7418:	89 81       	ldd	r24, Y+1	; 0x01
    741a:	8f bf       	out	0x3f, r24	; 63
    741c:	80 e0       	ldi	r24, 0x00	; 0
    741e:	23 96       	adiw	r28, 0x03	; 3
    7420:	cd bf       	out	0x3d, r28	; 61
    7422:	de bf       	out	0x3e, r29	; 62
    7424:	df 91       	pop	r29
    7426:	cf 91       	pop	r28
    7428:	1f 91       	pop	r17
    742a:	0f 91       	pop	r16
    742c:	08 95       	ret

0000742e <hal_configureSpiChannel>:
    742e:	3f 92       	push	r3
    7430:	4f 92       	push	r4
    7432:	5f 92       	push	r5
    7434:	6f 92       	push	r6
    7436:	7f 92       	push	r7
    7438:	8f 92       	push	r8
    743a:	9f 92       	push	r9
    743c:	af 92       	push	r10
    743e:	bf 92       	push	r11
    7440:	cf 92       	push	r12
    7442:	df 92       	push	r13
    7444:	ef 92       	push	r14
    7446:	ff 92       	push	r15
    7448:	0f 93       	push	r16
    744a:	1f 93       	push	r17
    744c:	cf 93       	push	r28
    744e:	df 93       	push	r29
    7450:	cd b7       	in	r28, 0x3d	; 61
    7452:	de b7       	in	r29, 0x3e	; 62
    7454:	60 97       	sbiw	r28, 0x10	; 16
    7456:	cd bf       	out	0x3d, r28	; 61
    7458:	de bf       	out	0x3e, r29	; 62
    745a:	68 2e       	mov	r6, r24
    745c:	40 2e       	mov	r4, r16
    745e:	09 87       	std	Y+9, r16	; 0x09
    7460:	71 2e       	mov	r7, r17
    7462:	1a 87       	std	Y+10, r17	; 0x0a
    7464:	52 2e       	mov	r5, r18
    7466:	2b 87       	std	Y+11, r18	; 0x0b
    7468:	3c 87       	std	Y+12, r19	; 0x0c
    746a:	4d 87       	std	Y+13, r20	; 0x0d
    746c:	5e 87       	std	Y+14, r21	; 0x0e
    746e:	6f 87       	std	Y+15, r22	; 0x0f
    7470:	37 2e       	mov	r3, r23
    7472:	78 8b       	std	Y+16, r23	; 0x10
    7474:	8c 84       	ldd	r8, Y+12	; 0x0c
    7476:	9d 84       	ldd	r9, Y+13	; 0x0d
    7478:	ae 84       	ldd	r10, Y+14	; 0x0e
    747a:	bf 84       	ldd	r11, Y+15	; 0x0f
    747c:	8f b7       	in	r24, 0x3f	; 63
    747e:	89 83       	std	Y+1, r24	; 0x01
    7480:	f8 94       	cli
    7482:	86 2d       	mov	r24, r6
    7484:	0e 94 ac 2d 	call	0x5b58	; 0x5b58 <findSpiElement>
    7488:	00 97       	sbiw	r24, 0x00	; 0
    748a:	21 f0       	breq	.+8      	; 0x7494 <hal_configureSpiChannel+0x66>
    748c:	89 81       	ldd	r24, Y+1	; 0x01
    748e:	8f bf       	out	0x3f, r24	; 63
    7490:	85 ef       	ldi	r24, 0xF5	; 245
    7492:	ad c2       	rjmp	.+1370   	; 0x79ee <hal_configureSpiChannel+0x5c0>
    7494:	23 e0       	ldi	r18, 0x03	; 3
    7496:	26 15       	cp	r18, r6
    7498:	20 f4       	brcc	.+8      	; 0x74a2 <hal_configureSpiChannel+0x74>
    749a:	89 81       	ldd	r24, Y+1	; 0x01
    749c:	8f bf       	out	0x3f, r24	; 63
    749e:	8b ef       	ldi	r24, 0xFB	; 251
    74a0:	a6 c2       	rjmp	.+1356   	; 0x79ee <hal_configureSpiChannel+0x5c0>
    74a2:	83 e0       	ldi	r24, 0x03	; 3
    74a4:	80 17       	cp	r24, r16
    74a6:	20 f4       	brcc	.+8      	; 0x74b0 <hal_configureSpiChannel+0x82>
    74a8:	89 81       	ldd	r24, Y+1	; 0x01
    74aa:	8f bf       	out	0x3f, r24	; 63
    74ac:	8a ef       	ldi	r24, 0xFA	; 250
    74ae:	9f c2       	rjmp	.+1342   	; 0x79ee <hal_configureSpiChannel+0x5c0>
    74b0:	a1 e0       	ldi	r26, 0x01	; 1
    74b2:	a1 17       	cp	r26, r17
    74b4:	20 f4       	brcc	.+8      	; 0x74be <hal_configureSpiChannel+0x90>
    74b6:	89 81       	ldd	r24, Y+1	; 0x01
    74b8:	8f bf       	out	0x3f, r24	; 63
    74ba:	89 ef       	ldi	r24, 0xF9	; 249
    74bc:	98 c2       	rjmp	.+1328   	; 0x79ee <hal_configureSpiChannel+0x5c0>
    74be:	b1 e0       	ldi	r27, 0x01	; 1
    74c0:	b5 15       	cp	r27, r5
    74c2:	20 f4       	brcc	.+8      	; 0x74cc <hal_configureSpiChannel+0x9e>
    74c4:	89 81       	ldd	r24, Y+1	; 0x01
    74c6:	8f bf       	out	0x3f, r24	; 63
    74c8:	88 ef       	ldi	r24, 0xF8	; 248
    74ca:	91 c2       	rjmp	.+1314   	; 0x79ee <hal_configureSpiChannel+0x5c0>
    74cc:	11 23       	and	r17, r17
    74ce:	49 f4       	brne	.+18     	; 0x74e2 <hal_configureSpiChannel+0xb4>
    74d0:	0e 94 c0 49 	call	0x9380	; 0x9380 <hal_getCpuFreq>
    74d4:	6b 01       	movw	r12, r22
    74d6:	7c 01       	movw	r14, r24
    74d8:	f6 94       	lsr	r15
    74da:	e7 94       	ror	r14
    74dc:	d7 94       	ror	r13
    74de:	c7 94       	ror	r12
    74e0:	0b c0       	rjmp	.+22     	; 0x74f8 <hal_configureSpiChannel+0xca>
    74e2:	0e 94 c0 49 	call	0x9380	; 0x9380 <hal_getCpuFreq>
    74e6:	6b 01       	movw	r12, r22
    74e8:	7c 01       	movw	r14, r24
    74ea:	e2 e0       	ldi	r30, 0x02	; 2
    74ec:	f6 94       	lsr	r15
    74ee:	e7 94       	ror	r14
    74f0:	d7 94       	ror	r13
    74f2:	c7 94       	ror	r12
    74f4:	ea 95       	dec	r30
    74f6:	d1 f7       	brne	.-12     	; 0x74ec <hal_configureSpiChannel+0xbe>
    74f8:	0e 94 c0 49 	call	0x9380	; 0x9380 <hal_getCpuFreq>
    74fc:	dc 01       	movw	r26, r24
    74fe:	cb 01       	movw	r24, r22
    7500:	57 e0       	ldi	r21, 0x07	; 7
    7502:	b6 95       	lsr	r27
    7504:	a7 95       	ror	r26
    7506:	97 95       	ror	r25
    7508:	87 95       	ror	r24
    750a:	5a 95       	dec	r21
    750c:	d1 f7       	brne	.-12     	; 0x7502 <hal_configureSpiChannel+0xd4>
    750e:	88 16       	cp	r8, r24
    7510:	99 06       	cpc	r9, r25
    7512:	aa 06       	cpc	r10, r26
    7514:	bb 06       	cpc	r11, r27
    7516:	28 f0       	brcs	.+10     	; 0x7522 <hal_configureSpiChannel+0xf4>
    7518:	c8 14       	cp	r12, r8
    751a:	d9 04       	cpc	r13, r9
    751c:	ea 04       	cpc	r14, r10
    751e:	fb 04       	cpc	r15, r11
    7520:	20 f4       	brcc	.+8      	; 0x752a <hal_configureSpiChannel+0xfc>
    7522:	89 81       	ldd	r24, Y+1	; 0x01
    7524:	8f bf       	out	0x3f, r24	; 63
    7526:	8c ef       	ldi	r24, 0xFC	; 252
    7528:	62 c2       	rjmp	.+1220   	; 0x79ee <hal_configureSpiChannel+0x5c0>
    752a:	82 e1       	ldi	r24, 0x12	; 18
    752c:	90 e0       	ldi	r25, 0x00	; 0
    752e:	0e 94 5e 8b 	call	0x116bc	; 0x116bc <utl_createLink>
    7532:	8a 83       	std	Y+2, r24	; 0x02
    7534:	9b 83       	std	Y+3, r25	; 0x03
    7536:	8a 81       	ldd	r24, Y+2	; 0x02
    7538:	9b 81       	ldd	r25, Y+3	; 0x03
    753a:	97 fd       	sbrc	r25, 7
    753c:	0c c0       	rjmp	.+24     	; 0x7556 <hal_configureSpiChannel+0x128>
    753e:	80 91 34 21 	lds	r24, 0x2134
    7542:	90 91 35 21 	lds	r25, 0x2135
    7546:	6a 81       	ldd	r22, Y+2	; 0x02
    7548:	7b 81       	ldd	r23, Y+3	; 0x03
    754a:	41 e0       	ldi	r20, 0x01	; 1
    754c:	0e 94 6e 89 	call	0x112dc	; 0x112dc <utl_insertLink>
    7550:	8a 81       	ldd	r24, Y+2	; 0x02
    7552:	9b 81       	ldd	r25, Y+3	; 0x03
    7554:	02 c0       	rjmp	.+4      	; 0x755a <hal_configureSpiChannel+0x12c>
    7556:	8f ef       	ldi	r24, 0xFF	; 255
    7558:	9f ef       	ldi	r25, 0xFF	; 255
    755a:	80 93 de 24 	sts	0x24DE, r24
    755e:	90 93 df 24 	sts	0x24DF, r25
    7562:	80 91 de 24 	lds	r24, 0x24DE
    7566:	90 91 df 24 	lds	r25, 0x24DF
    756a:	97 ff       	sbrs	r25, 7
    756c:	03 c0       	rjmp	.+6      	; 0x7574 <hal_configureSpiChannel+0x146>
    756e:	89 81       	ldd	r24, Y+1	; 0x01
    7570:	8f bf       	out	0x3f, r24	; 63
    7572:	3c c2       	rjmp	.+1144   	; 0x79ec <hal_configureSpiChannel+0x5be>
    7574:	e0 91 de 24 	lds	r30, 0x24DE
    7578:	f0 91 df 24 	lds	r31, 0x24DF
    757c:	c0 80       	ld	r12, Z
    757e:	d1 80       	ldd	r13, Z+1	; 0x01
    7580:	82 e1       	ldi	r24, 0x12	; 18
    7582:	f6 01       	movw	r30, r12
    7584:	11 92       	st	Z+, r1
    7586:	8a 95       	dec	r24
    7588:	e9 f7       	brne	.-6      	; 0x7584 <hal_configureSpiChannel+0x156>
    758a:	80 91 de 24 	lds	r24, 0x24DE
    758e:	90 91 df 24 	lds	r25, 0x24DF
    7592:	d6 01       	movw	r26, r12
    7594:	1c 96       	adiw	r26, 0x0c	; 12
    7596:	8d 93       	st	X+, r24
    7598:	9c 93       	st	X, r25
    759a:	1d 97       	sbiw	r26, 0x0d	; 13
    759c:	b2 e0       	ldi	r27, 0x02	; 2
    759e:	6b 16       	cp	r6, r27
    75a0:	e1 f0       	breq	.+56     	; 0x75da <hal_configureSpiChannel+0x1ac>
    75a2:	e3 e0       	ldi	r30, 0x03	; 3
    75a4:	6e 16       	cp	r6, r30
    75a6:	29 f1       	breq	.+74     	; 0x75f2 <hal_configureSpiChannel+0x1c4>
    75a8:	f1 e0       	ldi	r31, 0x01	; 1
    75aa:	6f 16       	cp	r6, r31
    75ac:	61 f0       	breq	.+24     	; 0x75c6 <hal_configureSpiChannel+0x198>
    75ae:	80 ec       	ldi	r24, 0xC0	; 192
    75b0:	98 e0       	ldi	r25, 0x08	; 8
    75b2:	d6 01       	movw	r26, r12
    75b4:	17 96       	adiw	r26, 0x07	; 7
    75b6:	8d 93       	st	X+, r24
    75b8:	9c 93       	st	X, r25
    75ba:	18 97       	sbiw	r26, 0x08	; 8
    75bc:	03 ea       	ldi	r16, 0xA3	; 163
    75be:	1e e2       	ldi	r17, 0x2E	; 46
    75c0:	42 e0       	ldi	r20, 0x02	; 2
    75c2:	f4 2e       	mov	r15, r20
    75c4:	1f c0       	rjmp	.+62     	; 0x7604 <hal_configureSpiChannel+0x1d6>
    75c6:	80 ec       	ldi	r24, 0xC0	; 192
    75c8:	99 e0       	ldi	r25, 0x09	; 9
    75ca:	f6 01       	movw	r30, r12
    75cc:	87 83       	std	Z+7, r24	; 0x07
    75ce:	90 87       	std	Z+8, r25	; 0x08
    75d0:	08 e9       	ldi	r16, 0x98	; 152
    75d2:	1e e2       	ldi	r17, 0x2E	; 46
    75d4:	33 e0       	ldi	r19, 0x03	; 3
    75d6:	f3 2e       	mov	r15, r19
    75d8:	15 c0       	rjmp	.+42     	; 0x7604 <hal_configureSpiChannel+0x1d6>
    75da:	80 ec       	ldi	r24, 0xC0	; 192
    75dc:	9a e0       	ldi	r25, 0x0A	; 10
    75de:	d6 01       	movw	r26, r12
    75e0:	17 96       	adiw	r26, 0x07	; 7
    75e2:	8d 93       	st	X+, r24
    75e4:	9c 93       	st	X, r25
    75e6:	18 97       	sbiw	r26, 0x08	; 8
    75e8:	0d e8       	ldi	r16, 0x8D	; 141
    75ea:	1e e2       	ldi	r17, 0x2E	; 46
    75ec:	24 e0       	ldi	r18, 0x04	; 4
    75ee:	f2 2e       	mov	r15, r18
    75f0:	09 c0       	rjmp	.+18     	; 0x7604 <hal_configureSpiChannel+0x1d6>
    75f2:	80 ec       	ldi	r24, 0xC0	; 192
    75f4:	9b e0       	ldi	r25, 0x0B	; 11
    75f6:	f6 01       	movw	r30, r12
    75f8:	87 83       	std	Z+7, r24	; 0x07
    75fa:	90 87       	std	Z+8, r25	; 0x08
    75fc:	02 e8       	ldi	r16, 0x82	; 130
    75fe:	1e e2       	ldi	r17, 0x2E	; 46
    7600:	a5 e0       	ldi	r26, 0x05	; 5
    7602:	fa 2e       	mov	r15, r26
    7604:	33 20       	and	r3, r3
    7606:	09 f4       	brne	.+2      	; 0x760a <hal_configureSpiChannel+0x1dc>
    7608:	7a c0       	rjmp	.+244    	; 0x76fe <hal_configureSpiChannel+0x2d0>
    760a:	0e 94 32 4c 	call	0x9864	; 0x9864 <hal_requestDmaChannel>
    760e:	d6 01       	movw	r26, r12
    7610:	50 96       	adiw	r26, 0x10	; 16
    7612:	8d 93       	st	X+, r24
    7614:	9c 93       	st	X, r25
    7616:	51 97       	sbiw	r26, 0x11	; 17
    7618:	50 96       	adiw	r26, 0x10	; 16
    761a:	8d 91       	ld	r24, X+
    761c:	9c 91       	ld	r25, X
    761e:	51 97       	sbiw	r26, 0x11	; 17
    7620:	97 ff       	sbrs	r25, 7
    7622:	15 c0       	rjmp	.+42     	; 0x764e <hal_configureSpiChannel+0x220>
    7624:	80 91 34 21 	lds	r24, 0x2134
    7628:	90 91 35 21 	lds	r25, 0x2135
    762c:	60 91 de 24 	lds	r22, 0x24DE
    7630:	70 91 df 24 	lds	r23, 0x24DF
    7634:	0e 94 6a 8a 	call	0x114d4	; 0x114d4 <utl_destroyLink>
    7638:	89 81       	ldd	r24, Y+1	; 0x01
    763a:	8f bf       	out	0x3f, r24	; 63
    763c:	f6 01       	movw	r30, r12
    763e:	80 89       	ldd	r24, Z+16	; 0x10
    7640:	91 89       	ldd	r25, Z+17	; 0x11
    7642:	ff ef       	ldi	r31, 0xFF	; 255
    7644:	89 3f       	cpi	r24, 0xF9	; 249
    7646:	9f 07       	cpc	r25, r31
    7648:	09 f0       	breq	.+2      	; 0x764c <hal_configureSpiChannel+0x21e>
    764a:	d0 c1       	rjmp	.+928    	; 0x79ec <hal_configureSpiChannel+0x5be>
    764c:	28 c0       	rjmp	.+80     	; 0x769e <hal_configureSpiChannel+0x270>
    764e:	0e 94 32 4c 	call	0x9864	; 0x9864 <hal_requestDmaChannel>
    7652:	d6 01       	movw	r26, r12
    7654:	1e 96       	adiw	r26, 0x0e	; 14
    7656:	8d 93       	st	X+, r24
    7658:	9c 93       	st	X, r25
    765a:	1f 97       	sbiw	r26, 0x0f	; 15
    765c:	1e 96       	adiw	r26, 0x0e	; 14
    765e:	8d 91       	ld	r24, X+
    7660:	9c 91       	ld	r25, X
    7662:	1f 97       	sbiw	r26, 0x0f	; 15
    7664:	97 ff       	sbrs	r25, 7
    7666:	1d c0       	rjmp	.+58     	; 0x76a2 <hal_configureSpiChannel+0x274>
    7668:	80 91 34 21 	lds	r24, 0x2134
    766c:	90 91 35 21 	lds	r25, 0x2135
    7670:	60 91 de 24 	lds	r22, 0x24DE
    7674:	70 91 df 24 	lds	r23, 0x24DF
    7678:	0e 94 6a 8a 	call	0x114d4	; 0x114d4 <utl_destroyLink>
    767c:	f6 01       	movw	r30, r12
    767e:	80 89       	ldd	r24, Z+16	; 0x10
    7680:	91 89       	ldd	r25, Z+17	; 0x11
    7682:	0e 94 d8 4c 	call	0x99b0	; 0x99b0 <hal_releaseDmaChannel>
    7686:	89 81       	ldd	r24, Y+1	; 0x01
    7688:	8f bf       	out	0x3f, r24	; 63
    768a:	d6 01       	movw	r26, r12
    768c:	1e 96       	adiw	r26, 0x0e	; 14
    768e:	8d 91       	ld	r24, X+
    7690:	9c 91       	ld	r25, X
    7692:	1f 97       	sbiw	r26, 0x0f	; 15
    7694:	bf ef       	ldi	r27, 0xFF	; 255
    7696:	89 3f       	cpi	r24, 0xF9	; 249
    7698:	9b 07       	cpc	r25, r27
    769a:	09 f0       	breq	.+2      	; 0x769e <hal_configureSpiChannel+0x270>
    769c:	a7 c1       	rjmp	.+846    	; 0x79ec <hal_configureSpiChannel+0x5be>
    769e:	81 ef       	ldi	r24, 0xF1	; 241
    76a0:	a6 c1       	rjmp	.+844    	; 0x79ee <hal_configureSpiChannel+0x5c0>
    76a2:	77 20       	and	r7, r7
    76a4:	39 f4       	brne	.+14     	; 0x76b4 <hal_configureSpiChannel+0x286>
    76a6:	f6 01       	movw	r30, r12
    76a8:	80 89       	ldd	r24, Z+16	; 0x10
    76aa:	91 89       	ldd	r25, Z+17	; 0x11
    76ac:	60 e0       	ldi	r22, 0x00	; 0
    76ae:	a8 01       	movw	r20, r16
    76b0:	0e 94 46 4b 	call	0x968c	; 0x968c <hal_requestDmaInterrupt>
    76b4:	d6 01       	movw	r26, r12
    76b6:	50 96       	adiw	r26, 0x10	; 16
    76b8:	8d 91       	ld	r24, X+
    76ba:	9c 91       	ld	r25, X
    76bc:	51 97       	sbiw	r26, 0x11	; 17
    76be:	0e 94 53 50 	call	0xa0a6	; 0xa0a6 <hal_getDmaChannelId>
    76c2:	18 2f       	mov	r17, r24
    76c4:	f6 01       	movw	r30, r12
    76c6:	26 85       	ldd	r18, Z+14	; 0x0e
    76c8:	37 85       	ldd	r19, Z+15	; 0x0f
    76ca:	c9 01       	movw	r24, r18
    76cc:	0e 94 53 50 	call	0xa0a6	; 0xa0a6 <hal_getDmaChannelId>
    76d0:	81 17       	cp	r24, r17
    76d2:	a8 f4       	brcc	.+42     	; 0x76fe <hal_configureSpiChannel+0x2d0>
    76d4:	d6 01       	movw	r26, r12
    76d6:	50 96       	adiw	r26, 0x10	; 16
    76d8:	8d 91       	ld	r24, X+
    76da:	9c 91       	ld	r25, X
    76dc:	51 97       	sbiw	r26, 0x11	; 17
    76de:	8a 83       	std	Y+2, r24	; 0x02
    76e0:	9b 83       	std	Y+3, r25	; 0x03
    76e2:	1e 96       	adiw	r26, 0x0e	; 14
    76e4:	8d 91       	ld	r24, X+
    76e6:	9c 91       	ld	r25, X
    76e8:	1f 97       	sbiw	r26, 0x0f	; 15
    76ea:	50 96       	adiw	r26, 0x10	; 16
    76ec:	8d 93       	st	X+, r24
    76ee:	9c 93       	st	X, r25
    76f0:	51 97       	sbiw	r26, 0x11	; 17
    76f2:	8a 81       	ldd	r24, Y+2	; 0x02
    76f4:	9b 81       	ldd	r25, Y+3	; 0x03
    76f6:	1e 96       	adiw	r26, 0x0e	; 14
    76f8:	8d 93       	st	X+, r24
    76fa:	9c 93       	st	X, r25
    76fc:	1f 97       	sbiw	r26, 0x0f	; 15
    76fe:	0e 94 c0 49 	call	0x9380	; 0x9380 <hal_getCpuFreq>
    7702:	dc 01       	movw	r26, r24
    7704:	cb 01       	movw	r24, r22
    7706:	f7 e0       	ldi	r31, 0x07	; 7
    7708:	b6 95       	lsr	r27
    770a:	a7 95       	ror	r26
    770c:	97 95       	ror	r25
    770e:	87 95       	ror	r24
    7710:	fa 95       	dec	r31
    7712:	d1 f7       	brne	.-12     	; 0x7708 <hal_configureSpiChannel+0x2da>
    7714:	88 16       	cp	r8, r24
    7716:	99 06       	cpc	r9, r25
    7718:	aa 06       	cpc	r10, r26
    771a:	bb 06       	cpc	r11, r27
    771c:	10 f1       	brcs	.+68     	; 0x7762 <hal_configureSpiChannel+0x334>
    771e:	0e 94 c0 49 	call	0x9380	; 0x9380 <hal_getCpuFreq>
    7722:	dc 01       	movw	r26, r24
    7724:	cb 01       	movw	r24, r22
    7726:	e6 e0       	ldi	r30, 0x06	; 6
    7728:	b6 95       	lsr	r27
    772a:	a7 95       	ror	r26
    772c:	97 95       	ror	r25
    772e:	87 95       	ror	r24
    7730:	ea 95       	dec	r30
    7732:	d1 f7       	brne	.-12     	; 0x7728 <hal_configureSpiChannel+0x2fa>
    7734:	88 16       	cp	r8, r24
    7736:	99 06       	cpc	r9, r25
    7738:	aa 06       	cpc	r10, r26
    773a:	bb 06       	cpc	r11, r27
    773c:	90 f4       	brcc	.+36     	; 0x7762 <hal_configureSpiChannel+0x334>
    773e:	0e 94 c0 49 	call	0x9380	; 0x9380 <hal_getCpuFreq>
    7742:	dc 01       	movw	r26, r24
    7744:	cb 01       	movw	r24, r22
    7746:	57 e0       	ldi	r21, 0x07	; 7
    7748:	b6 95       	lsr	r27
    774a:	a7 95       	ror	r26
    774c:	97 95       	ror	r25
    774e:	87 95       	ror	r24
    7750:	5a 95       	dec	r21
    7752:	d1 f7       	brne	.-12     	; 0x7748 <hal_configureSpiChannel+0x31a>
    7754:	f6 01       	movw	r30, r12
    7756:	81 83       	std	Z+1, r24	; 0x01
    7758:	92 83       	std	Z+2, r25	; 0x02
    775a:	a3 83       	std	Z+3, r26	; 0x03
    775c:	b4 83       	std	Z+4, r27	; 0x04
    775e:	13 e0       	ldi	r17, 0x03	; 3
    7760:	b0 c0       	rjmp	.+352    	; 0x78c2 <hal_configureSpiChannel+0x494>
    7762:	0e 94 c0 49 	call	0x9380	; 0x9380 <hal_getCpuFreq>
    7766:	dc 01       	movw	r26, r24
    7768:	cb 01       	movw	r24, r22
    776a:	46 e0       	ldi	r20, 0x06	; 6
    776c:	b6 95       	lsr	r27
    776e:	a7 95       	ror	r26
    7770:	97 95       	ror	r25
    7772:	87 95       	ror	r24
    7774:	4a 95       	dec	r20
    7776:	d1 f7       	brne	.-12     	; 0x776c <hal_configureSpiChannel+0x33e>
    7778:	88 16       	cp	r8, r24
    777a:	99 06       	cpc	r9, r25
    777c:	aa 06       	cpc	r10, r26
    777e:	bb 06       	cpc	r11, r27
    7780:	10 f1       	brcs	.+68     	; 0x77c6 <hal_configureSpiChannel+0x398>
    7782:	0e 94 c0 49 	call	0x9380	; 0x9380 <hal_getCpuFreq>
    7786:	dc 01       	movw	r26, r24
    7788:	cb 01       	movw	r24, r22
    778a:	34 e0       	ldi	r19, 0x04	; 4
    778c:	b6 95       	lsr	r27
    778e:	a7 95       	ror	r26
    7790:	97 95       	ror	r25
    7792:	87 95       	ror	r24
    7794:	3a 95       	dec	r19
    7796:	d1 f7       	brne	.-12     	; 0x778c <hal_configureSpiChannel+0x35e>
    7798:	88 16       	cp	r8, r24
    779a:	99 06       	cpc	r9, r25
    779c:	aa 06       	cpc	r10, r26
    779e:	bb 06       	cpc	r11, r27
    77a0:	90 f4       	brcc	.+36     	; 0x77c6 <hal_configureSpiChannel+0x398>
    77a2:	0e 94 c0 49 	call	0x9380	; 0x9380 <hal_getCpuFreq>
    77a6:	dc 01       	movw	r26, r24
    77a8:	cb 01       	movw	r24, r22
    77aa:	26 e0       	ldi	r18, 0x06	; 6
    77ac:	b6 95       	lsr	r27
    77ae:	a7 95       	ror	r26
    77b0:	97 95       	ror	r25
    77b2:	87 95       	ror	r24
    77b4:	2a 95       	dec	r18
    77b6:	d1 f7       	brne	.-12     	; 0x77ac <hal_configureSpiChannel+0x37e>
    77b8:	f6 01       	movw	r30, r12
    77ba:	81 83       	std	Z+1, r24	; 0x01
    77bc:	92 83       	std	Z+2, r25	; 0x02
    77be:	a3 83       	std	Z+3, r26	; 0x03
    77c0:	b4 83       	std	Z+4, r27	; 0x04
    77c2:	12 e0       	ldi	r17, 0x02	; 2
    77c4:	7e c0       	rjmp	.+252    	; 0x78c2 <hal_configureSpiChannel+0x494>
    77c6:	0e 94 c0 49 	call	0x9380	; 0x9380 <hal_getCpuFreq>
    77ca:	dc 01       	movw	r26, r24
    77cc:	cb 01       	movw	r24, r22
    77ce:	04 e0       	ldi	r16, 0x04	; 4
    77d0:	b6 95       	lsr	r27
    77d2:	a7 95       	ror	r26
    77d4:	97 95       	ror	r25
    77d6:	87 95       	ror	r24
    77d8:	0a 95       	dec	r16
    77da:	d1 f7       	brne	.-12     	; 0x77d0 <hal_configureSpiChannel+0x3a2>
    77dc:	88 16       	cp	r8, r24
    77de:	99 06       	cpc	r9, r25
    77e0:	aa 06       	cpc	r10, r26
    77e2:	bb 06       	cpc	r11, r27
    77e4:	10 f1       	brcs	.+68     	; 0x782a <hal_configureSpiChannel+0x3fc>
    77e6:	0e 94 c0 49 	call	0x9380	; 0x9380 <hal_getCpuFreq>
    77ea:	dc 01       	movw	r26, r24
    77ec:	cb 01       	movw	r24, r22
    77ee:	12 e0       	ldi	r17, 0x02	; 2
    77f0:	b6 95       	lsr	r27
    77f2:	a7 95       	ror	r26
    77f4:	97 95       	ror	r25
    77f6:	87 95       	ror	r24
    77f8:	1a 95       	dec	r17
    77fa:	d1 f7       	brne	.-12     	; 0x77f0 <hal_configureSpiChannel+0x3c2>
    77fc:	88 16       	cp	r8, r24
    77fe:	99 06       	cpc	r9, r25
    7800:	aa 06       	cpc	r10, r26
    7802:	bb 06       	cpc	r11, r27
    7804:	90 f4       	brcc	.+36     	; 0x782a <hal_configureSpiChannel+0x3fc>
    7806:	0e 94 c0 49 	call	0x9380	; 0x9380 <hal_getCpuFreq>
    780a:	dc 01       	movw	r26, r24
    780c:	cb 01       	movw	r24, r22
    780e:	f4 e0       	ldi	r31, 0x04	; 4
    7810:	b6 95       	lsr	r27
    7812:	a7 95       	ror	r26
    7814:	97 95       	ror	r25
    7816:	87 95       	ror	r24
    7818:	fa 95       	dec	r31
    781a:	d1 f7       	brne	.-12     	; 0x7810 <hal_configureSpiChannel+0x3e2>
    781c:	f6 01       	movw	r30, r12
    781e:	81 83       	std	Z+1, r24	; 0x01
    7820:	92 83       	std	Z+2, r25	; 0x02
    7822:	a3 83       	std	Z+3, r26	; 0x03
    7824:	b4 83       	std	Z+4, r27	; 0x04
    7826:	11 e0       	ldi	r17, 0x01	; 1
    7828:	4c c0       	rjmp	.+152    	; 0x78c2 <hal_configureSpiChannel+0x494>
    782a:	0e 94 c0 49 	call	0x9380	; 0x9380 <hal_getCpuFreq>
    782e:	dc 01       	movw	r26, r24
    7830:	cb 01       	movw	r24, r22
    7832:	e2 e0       	ldi	r30, 0x02	; 2
    7834:	b6 95       	lsr	r27
    7836:	a7 95       	ror	r26
    7838:	97 95       	ror	r25
    783a:	87 95       	ror	r24
    783c:	ea 95       	dec	r30
    783e:	d1 f7       	brne	.-12     	; 0x7834 <hal_configureSpiChannel+0x406>
    7840:	88 16       	cp	r8, r24
    7842:	99 06       	cpc	r9, r25
    7844:	aa 06       	cpc	r10, r26
    7846:	bb 06       	cpc	r11, r27
    7848:	f8 f0       	brcs	.+62     	; 0x7888 <hal_configureSpiChannel+0x45a>
    784a:	0e 94 c0 49 	call	0x9380	; 0x9380 <hal_getCpuFreq>
    784e:	dc 01       	movw	r26, r24
    7850:	cb 01       	movw	r24, r22
    7852:	b6 95       	lsr	r27
    7854:	a7 95       	ror	r26
    7856:	97 95       	ror	r25
    7858:	87 95       	ror	r24
    785a:	88 16       	cp	r8, r24
    785c:	99 06       	cpc	r9, r25
    785e:	aa 06       	cpc	r10, r26
    7860:	bb 06       	cpc	r11, r27
    7862:	90 f4       	brcc	.+36     	; 0x7888 <hal_configureSpiChannel+0x45a>
    7864:	0e 94 c0 49 	call	0x9380	; 0x9380 <hal_getCpuFreq>
    7868:	dc 01       	movw	r26, r24
    786a:	cb 01       	movw	r24, r22
    786c:	42 e0       	ldi	r20, 0x02	; 2
    786e:	b6 95       	lsr	r27
    7870:	a7 95       	ror	r26
    7872:	97 95       	ror	r25
    7874:	87 95       	ror	r24
    7876:	4a 95       	dec	r20
    7878:	d1 f7       	brne	.-12     	; 0x786e <hal_configureSpiChannel+0x440>
    787a:	f6 01       	movw	r30, r12
    787c:	81 83       	std	Z+1, r24	; 0x01
    787e:	92 83       	std	Z+2, r25	; 0x02
    7880:	a3 83       	std	Z+3, r26	; 0x03
    7882:	b4 83       	std	Z+4, r27	; 0x04
    7884:	10 e0       	ldi	r17, 0x00	; 0
    7886:	1d c0       	rjmp	.+58     	; 0x78c2 <hal_configureSpiChannel+0x494>
    7888:	0e 94 c0 49 	call	0x9380	; 0x9380 <hal_getCpuFreq>
    788c:	dc 01       	movw	r26, r24
    788e:	cb 01       	movw	r24, r22
    7890:	32 e0       	ldi	r19, 0x02	; 2
    7892:	b6 95       	lsr	r27
    7894:	a7 95       	ror	r26
    7896:	97 95       	ror	r25
    7898:	87 95       	ror	r24
    789a:	3a 95       	dec	r19
    789c:	d1 f7       	brne	.-12     	; 0x7892 <hal_configureSpiChannel+0x464>
    789e:	f6 01       	movw	r30, r12
    78a0:	81 83       	std	Z+1, r24	; 0x01
    78a2:	92 83       	std	Z+2, r25	; 0x02
    78a4:	a3 83       	std	Z+3, r26	; 0x03
    78a6:	b4 83       	std	Z+4, r27	; 0x04
    78a8:	77 20       	and	r7, r7
    78aa:	a1 f4       	brne	.+40     	; 0x78d4 <hal_configureSpiChannel+0x4a6>
    78ac:	88 0f       	add	r24, r24
    78ae:	99 1f       	adc	r25, r25
    78b0:	aa 1f       	adc	r26, r26
    78b2:	bb 1f       	adc	r27, r27
    78b4:	81 83       	std	Z+1, r24	; 0x01
    78b6:	92 83       	std	Z+2, r25	; 0x02
    78b8:	a3 83       	std	Z+3, r26	; 0x03
    78ba:	b4 83       	std	Z+4, r27	; 0x04
    78bc:	00 e8       	ldi	r16, 0x80	; 128
    78be:	10 e0       	ldi	r17, 0x00	; 0
    78c0:	03 c0       	rjmp	.+6      	; 0x78c8 <hal_configureSpiChannel+0x49a>
    78c2:	77 20       	and	r7, r7
    78c4:	41 f4       	brne	.+16     	; 0x78d6 <hal_configureSpiChannel+0x4a8>
    78c6:	00 e0       	ldi	r16, 0x00	; 0
    78c8:	80 e4       	ldi	r24, 0x40	; 64
    78ca:	8c 83       	std	Y+4, r24	; 0x04
    78cc:	80 eb       	ldi	r24, 0xB0	; 176
    78ce:	8d 83       	std	Y+5, r24	; 0x05
    78d0:	1e 82       	std	Y+6, r1	; 0x06
    78d2:	07 c0       	rjmp	.+14     	; 0x78e2 <hal_configureSpiChannel+0x4b4>
    78d4:	10 e0       	ldi	r17, 0x00	; 0
    78d6:	80 eb       	ldi	r24, 0xB0	; 176
    78d8:	8c 83       	std	Y+4, r24	; 0x04
    78da:	80 e4       	ldi	r24, 0x40	; 64
    78dc:	8d 83       	std	Y+5, r24	; 0x05
    78de:	1e 82       	std	Y+6, r1	; 0x06
    78e0:	00 e0       	ldi	r16, 0x00	; 0
    78e2:	85 e0       	ldi	r24, 0x05	; 5
    78e4:	8f 83       	std	Y+7, r24	; 0x07
    78e6:	18 86       	std	Y+8, r1	; 0x08
    78e8:	8f 2d       	mov	r24, r15
    78ea:	2c 81       	ldd	r18, Y+4	; 0x04
    78ec:	3d 81       	ldd	r19, Y+5	; 0x05
    78ee:	4e 81       	ldd	r20, Y+6	; 0x06
    78f0:	55 e0       	ldi	r21, 0x05	; 5
    78f2:	60 e0       	ldi	r22, 0x00	; 0
    78f4:	0e 94 91 2a 	call	0x5522	; 0x5522 <hal_configureGpioPort>
    78f8:	d6 01       	movw	r26, r12
    78fa:	17 96       	adiw	r26, 0x07	; 7
    78fc:	ed 91       	ld	r30, X+
    78fe:	fc 91       	ld	r31, X
    7900:	18 97       	sbiw	r26, 0x08	; 8
    7902:	10 82       	st	Z, r1
    7904:	17 96       	adiw	r26, 0x07	; 7
    7906:	ed 91       	ld	r30, X+
    7908:	fc 91       	ld	r31, X
    790a:	18 97       	sbiw	r26, 0x08	; 8
    790c:	80 81       	ld	r24, Z
    790e:	81 2b       	or	r24, r17
    7910:	80 83       	st	Z, r24
    7912:	17 96       	adiw	r26, 0x07	; 7
    7914:	ed 91       	ld	r30, X+
    7916:	fc 91       	ld	r31, X
    7918:	18 97       	sbiw	r26, 0x08	; 8
    791a:	80 81       	ld	r24, Z
    791c:	80 2b       	or	r24, r16
    791e:	80 83       	st	Z, r24
    7920:	77 20       	and	r7, r7
    7922:	39 f4       	brne	.+14     	; 0x7932 <hal_configureSpiChannel+0x504>
    7924:	17 96       	adiw	r26, 0x07	; 7
    7926:	ed 91       	ld	r30, X+
    7928:	fc 91       	ld	r31, X
    792a:	18 97       	sbiw	r26, 0x08	; 8
    792c:	80 81       	ld	r24, Z
    792e:	80 61       	ori	r24, 0x10	; 16
    7930:	80 83       	st	Z, r24
    7932:	55 20       	and	r5, r5
    7934:	41 f4       	brne	.+16     	; 0x7946 <hal_configureSpiChannel+0x518>
    7936:	d6 01       	movw	r26, r12
    7938:	17 96       	adiw	r26, 0x07	; 7
    793a:	ed 91       	ld	r30, X+
    793c:	fc 91       	ld	r31, X
    793e:	18 97       	sbiw	r26, 0x08	; 8
    7940:	80 81       	ld	r24, Z
    7942:	80 62       	ori	r24, 0x20	; 32
    7944:	80 83       	st	Z, r24
    7946:	d6 01       	movw	r26, r12
    7948:	17 96       	adiw	r26, 0x07	; 7
    794a:	ed 91       	ld	r30, X+
    794c:	fc 91       	ld	r31, X
    794e:	18 97       	sbiw	r26, 0x08	; 8
    7950:	80 81       	ld	r24, Z
    7952:	44 0c       	add	r4, r4
    7954:	44 0c       	add	r4, r4
    7956:	48 2a       	or	r4, r24
    7958:	40 82       	st	Z, r4
    795a:	6c 92       	st	X, r6
    795c:	15 96       	adiw	r26, 0x05	; 5
    795e:	1c 92       	st	X, r1
    7960:	15 97       	sbiw	r26, 0x05	; 5
    7962:	16 96       	adiw	r26, 0x06	; 6
    7964:	7c 92       	st	X, r7
    7966:	16 97       	sbiw	r26, 0x06	; 6
    7968:	19 96       	adiw	r26, 0x09	; 9
    796a:	1c 92       	st	X, r1
    796c:	19 97       	sbiw	r26, 0x09	; 9
    796e:	17 96       	adiw	r26, 0x07	; 7
    7970:	ed 91       	ld	r30, X+
    7972:	fc 91       	ld	r31, X
    7974:	18 97       	sbiw	r26, 0x08	; 8
    7976:	33 20       	and	r3, r3
    7978:	11 f0       	breq	.+4      	; 0x797e <hal_configureSpiChannel+0x550>
    797a:	11 82       	std	Z+1, r1	; 0x01
    797c:	02 c0       	rjmp	.+4      	; 0x7982 <hal_configureSpiChannel+0x554>
    797e:	83 e0       	ldi	r24, 0x03	; 3
    7980:	81 83       	std	Z+1, r24	; 0x01
    7982:	b4 e0       	ldi	r27, 0x04	; 4
    7984:	fb 16       	cp	r15, r27
    7986:	b1 f0       	breq	.+44     	; 0x79b4 <hal_configureSpiChannel+0x586>
    7988:	e5 e0       	ldi	r30, 0x05	; 5
    798a:	fe 16       	cp	r15, r30
    798c:	d9 f0       	breq	.+54     	; 0x79c4 <hal_configureSpiChannel+0x596>
    798e:	f3 e0       	ldi	r31, 0x03	; 3
    7990:	ff 16       	cp	r15, r31
    7992:	41 f0       	breq	.+16     	; 0x79a4 <hal_configureSpiChannel+0x576>
    7994:	80 91 40 06 	lds	r24, 0x0640
    7998:	84 ff       	sbrs	r24, 4
    799a:	1c c0       	rjmp	.+56     	; 0x79d4 <hal_configureSpiChannel+0x5a6>
    799c:	80 e1       	ldi	r24, 0x10	; 16
    799e:	e0 e4       	ldi	r30, 0x40	; 64
    79a0:	f6 e0       	ldi	r31, 0x06	; 6
    79a2:	17 c0       	rjmp	.+46     	; 0x79d2 <hal_configureSpiChannel+0x5a4>
    79a4:	80 91 60 06 	lds	r24, 0x0660
    79a8:	84 ff       	sbrs	r24, 4
    79aa:	14 c0       	rjmp	.+40     	; 0x79d4 <hal_configureSpiChannel+0x5a6>
    79ac:	80 e1       	ldi	r24, 0x10	; 16
    79ae:	e0 e6       	ldi	r30, 0x60	; 96
    79b0:	f6 e0       	ldi	r31, 0x06	; 6
    79b2:	0f c0       	rjmp	.+30     	; 0x79d2 <hal_configureSpiChannel+0x5a4>
    79b4:	80 91 80 06 	lds	r24, 0x0680
    79b8:	84 ff       	sbrs	r24, 4
    79ba:	0c c0       	rjmp	.+24     	; 0x79d4 <hal_configureSpiChannel+0x5a6>
    79bc:	80 e1       	ldi	r24, 0x10	; 16
    79be:	e0 e8       	ldi	r30, 0x80	; 128
    79c0:	f6 e0       	ldi	r31, 0x06	; 6
    79c2:	07 c0       	rjmp	.+14     	; 0x79d2 <hal_configureSpiChannel+0x5a4>
    79c4:	80 91 a0 06 	lds	r24, 0x06A0
    79c8:	84 ff       	sbrs	r24, 4
    79ca:	04 c0       	rjmp	.+8      	; 0x79d4 <hal_configureSpiChannel+0x5a6>
    79cc:	80 e1       	ldi	r24, 0x10	; 16
    79ce:	e0 ea       	ldi	r30, 0xA0	; 160
    79d0:	f6 e0       	ldi	r31, 0x06	; 6
    79d2:	85 83       	std	Z+5, r24	; 0x05
    79d4:	d6 01       	movw	r26, r12
    79d6:	17 96       	adiw	r26, 0x07	; 7
    79d8:	ed 91       	ld	r30, X+
    79da:	fc 91       	ld	r31, X
    79dc:	18 97       	sbiw	r26, 0x08	; 8
    79de:	80 81       	ld	r24, Z
    79e0:	80 64       	ori	r24, 0x40	; 64
    79e2:	80 83       	st	Z, r24
    79e4:	89 81       	ldd	r24, Y+1	; 0x01
    79e6:	8f bf       	out	0x3f, r24	; 63
    79e8:	80 e0       	ldi	r24, 0x00	; 0
    79ea:	01 c0       	rjmp	.+2      	; 0x79ee <hal_configureSpiChannel+0x5c0>
    79ec:	8f ef       	ldi	r24, 0xFF	; 255
    79ee:	60 96       	adiw	r28, 0x10	; 16
    79f0:	cd bf       	out	0x3d, r28	; 61
    79f2:	de bf       	out	0x3e, r29	; 62
    79f4:	df 91       	pop	r29
    79f6:	cf 91       	pop	r28
    79f8:	1f 91       	pop	r17
    79fa:	0f 91       	pop	r16
    79fc:	ff 90       	pop	r15
    79fe:	ef 90       	pop	r14
    7a00:	df 90       	pop	r13
    7a02:	cf 90       	pop	r12
    7a04:	bf 90       	pop	r11
    7a06:	af 90       	pop	r10
    7a08:	9f 90       	pop	r9
    7a0a:	8f 90       	pop	r8
    7a0c:	7f 90       	pop	r7
    7a0e:	6f 90       	pop	r6
    7a10:	5f 90       	pop	r5
    7a12:	4f 90       	pop	r4
    7a14:	3f 90       	pop	r3
    7a16:	08 95       	ret

00007a18 <uart1TxDmaInt>:
    7a18:	cf 93       	push	r28
    7a1a:	df 93       	push	r29
    7a1c:	c0 91 e0 24 	lds	r28, 0x24E0
    7a20:	d0 91 e1 24 	lds	r29, 0x24E1
    7a24:	20 97       	sbiw	r28, 0x00	; 0
    7a26:	71 f0       	breq	.+28     	; 0x7a44 <uart1TxDmaInt+0x2c>
    7a28:	ef 8d       	ldd	r30, Y+31	; 0x1f
    7a2a:	f8 a1       	lds	r31, 0x48
    7a2c:	30 97       	sbiw	r30, 0x00	; 0
    7a2e:	19 f0       	breq	.+6      	; 0x7a36 <uart1TxDmaInt+0x1e>
    7a30:	89 89       	ldd	r24, Y+17	; 0x11
    7a32:	9a 89       	ldd	r25, Y+18	; 0x12
    7a34:	19 95       	eicall
    7a36:	1d 86       	std	Y+13, r1	; 0x0d
    7a38:	1e 86       	std	Y+14, r1	; 0x0e
    7a3a:	1d 8a       	std	Y+21, r1	; 0x15
    7a3c:	1e 8a       	std	Y+22, r1	; 0x16
    7a3e:	19 8a       	std	Y+17, r1	; 0x11
    7a40:	1a 8a       	std	Y+18, r1	; 0x12
    7a42:	1b 86       	std	Y+11, r1	; 0x0b
    7a44:	df 91       	pop	r29
    7a46:	cf 91       	pop	r28
    7a48:	08 95       	ret

00007a4a <uart2TxDmaInt>:
    7a4a:	cf 93       	push	r28
    7a4c:	df 93       	push	r29
    7a4e:	c0 91 e2 24 	lds	r28, 0x24E2
    7a52:	d0 91 e3 24 	lds	r29, 0x24E3
    7a56:	20 97       	sbiw	r28, 0x00	; 0
    7a58:	71 f0       	breq	.+28     	; 0x7a76 <uart2TxDmaInt+0x2c>
    7a5a:	ef 8d       	ldd	r30, Y+31	; 0x1f
    7a5c:	f8 a1       	lds	r31, 0x48
    7a5e:	30 97       	sbiw	r30, 0x00	; 0
    7a60:	19 f0       	breq	.+6      	; 0x7a68 <uart2TxDmaInt+0x1e>
    7a62:	89 89       	ldd	r24, Y+17	; 0x11
    7a64:	9a 89       	ldd	r25, Y+18	; 0x12
    7a66:	19 95       	eicall
    7a68:	1d 86       	std	Y+13, r1	; 0x0d
    7a6a:	1e 86       	std	Y+14, r1	; 0x0e
    7a6c:	1d 8a       	std	Y+21, r1	; 0x15
    7a6e:	1e 8a       	std	Y+22, r1	; 0x16
    7a70:	19 8a       	std	Y+17, r1	; 0x11
    7a72:	1a 8a       	std	Y+18, r1	; 0x12
    7a74:	1b 86       	std	Y+11, r1	; 0x0b
    7a76:	df 91       	pop	r29
    7a78:	cf 91       	pop	r28
    7a7a:	08 95       	ret

00007a7c <uart3TxDmaInt>:
    7a7c:	cf 93       	push	r28
    7a7e:	df 93       	push	r29
    7a80:	c0 91 e4 24 	lds	r28, 0x24E4
    7a84:	d0 91 e5 24 	lds	r29, 0x24E5
    7a88:	20 97       	sbiw	r28, 0x00	; 0
    7a8a:	71 f0       	breq	.+28     	; 0x7aa8 <uart3TxDmaInt+0x2c>
    7a8c:	ef 8d       	ldd	r30, Y+31	; 0x1f
    7a8e:	f8 a1       	lds	r31, 0x48
    7a90:	30 97       	sbiw	r30, 0x00	; 0
    7a92:	19 f0       	breq	.+6      	; 0x7a9a <uart3TxDmaInt+0x1e>
    7a94:	89 89       	ldd	r24, Y+17	; 0x11
    7a96:	9a 89       	ldd	r25, Y+18	; 0x12
    7a98:	19 95       	eicall
    7a9a:	1d 86       	std	Y+13, r1	; 0x0d
    7a9c:	1e 86       	std	Y+14, r1	; 0x0e
    7a9e:	1d 8a       	std	Y+21, r1	; 0x15
    7aa0:	1e 8a       	std	Y+22, r1	; 0x16
    7aa2:	19 8a       	std	Y+17, r1	; 0x11
    7aa4:	1a 8a       	std	Y+18, r1	; 0x12
    7aa6:	1b 86       	std	Y+11, r1	; 0x0b
    7aa8:	df 91       	pop	r29
    7aaa:	cf 91       	pop	r28
    7aac:	08 95       	ret

00007aae <uart4TxDmaInt>:
    7aae:	cf 93       	push	r28
    7ab0:	df 93       	push	r29
    7ab2:	c0 91 e6 24 	lds	r28, 0x24E6
    7ab6:	d0 91 e7 24 	lds	r29, 0x24E7
    7aba:	20 97       	sbiw	r28, 0x00	; 0
    7abc:	71 f0       	breq	.+28     	; 0x7ada <uart4TxDmaInt+0x2c>
    7abe:	ef 8d       	ldd	r30, Y+31	; 0x1f
    7ac0:	f8 a1       	lds	r31, 0x48
    7ac2:	30 97       	sbiw	r30, 0x00	; 0
    7ac4:	19 f0       	breq	.+6      	; 0x7acc <uart4TxDmaInt+0x1e>
    7ac6:	89 89       	ldd	r24, Y+17	; 0x11
    7ac8:	9a 89       	ldd	r25, Y+18	; 0x12
    7aca:	19 95       	eicall
    7acc:	1d 86       	std	Y+13, r1	; 0x0d
    7ace:	1e 86       	std	Y+14, r1	; 0x0e
    7ad0:	1d 8a       	std	Y+21, r1	; 0x15
    7ad2:	1e 8a       	std	Y+22, r1	; 0x16
    7ad4:	19 8a       	std	Y+17, r1	; 0x11
    7ad6:	1a 8a       	std	Y+18, r1	; 0x12
    7ad8:	1b 86       	std	Y+11, r1	; 0x0b
    7ada:	df 91       	pop	r29
    7adc:	cf 91       	pop	r28
    7ade:	08 95       	ret

00007ae0 <uart5TxDmaInt>:
    7ae0:	cf 93       	push	r28
    7ae2:	df 93       	push	r29
    7ae4:	c0 91 e8 24 	lds	r28, 0x24E8
    7ae8:	d0 91 e9 24 	lds	r29, 0x24E9
    7aec:	20 97       	sbiw	r28, 0x00	; 0
    7aee:	71 f0       	breq	.+28     	; 0x7b0c <uart5TxDmaInt+0x2c>
    7af0:	ef 8d       	ldd	r30, Y+31	; 0x1f
    7af2:	f8 a1       	lds	r31, 0x48
    7af4:	30 97       	sbiw	r30, 0x00	; 0
    7af6:	19 f0       	breq	.+6      	; 0x7afe <uart5TxDmaInt+0x1e>
    7af8:	89 89       	ldd	r24, Y+17	; 0x11
    7afa:	9a 89       	ldd	r25, Y+18	; 0x12
    7afc:	19 95       	eicall
    7afe:	1d 86       	std	Y+13, r1	; 0x0d
    7b00:	1e 86       	std	Y+14, r1	; 0x0e
    7b02:	1d 8a       	std	Y+21, r1	; 0x15
    7b04:	1e 8a       	std	Y+22, r1	; 0x16
    7b06:	19 8a       	std	Y+17, r1	; 0x11
    7b08:	1a 8a       	std	Y+18, r1	; 0x12
    7b0a:	1b 86       	std	Y+11, r1	; 0x0b
    7b0c:	df 91       	pop	r29
    7b0e:	cf 91       	pop	r28
    7b10:	08 95       	ret

00007b12 <uart6TxDmaInt>:
    7b12:	cf 93       	push	r28
    7b14:	df 93       	push	r29
    7b16:	c0 91 ea 24 	lds	r28, 0x24EA
    7b1a:	d0 91 eb 24 	lds	r29, 0x24EB
    7b1e:	20 97       	sbiw	r28, 0x00	; 0
    7b20:	71 f0       	breq	.+28     	; 0x7b3e <uart6TxDmaInt+0x2c>
    7b22:	ef 8d       	ldd	r30, Y+31	; 0x1f
    7b24:	f8 a1       	lds	r31, 0x48
    7b26:	30 97       	sbiw	r30, 0x00	; 0
    7b28:	19 f0       	breq	.+6      	; 0x7b30 <uart6TxDmaInt+0x1e>
    7b2a:	89 89       	ldd	r24, Y+17	; 0x11
    7b2c:	9a 89       	ldd	r25, Y+18	; 0x12
    7b2e:	19 95       	eicall
    7b30:	1d 86       	std	Y+13, r1	; 0x0d
    7b32:	1e 86       	std	Y+14, r1	; 0x0e
    7b34:	1d 8a       	std	Y+21, r1	; 0x15
    7b36:	1e 8a       	std	Y+22, r1	; 0x16
    7b38:	19 8a       	std	Y+17, r1	; 0x11
    7b3a:	1a 8a       	std	Y+18, r1	; 0x12
    7b3c:	1b 86       	std	Y+11, r1	; 0x0b
    7b3e:	df 91       	pop	r29
    7b40:	cf 91       	pop	r28
    7b42:	08 95       	ret

00007b44 <uart7TxDmaInt>:
    7b44:	cf 93       	push	r28
    7b46:	df 93       	push	r29
    7b48:	c0 91 ec 24 	lds	r28, 0x24EC
    7b4c:	d0 91 ed 24 	lds	r29, 0x24ED
    7b50:	20 97       	sbiw	r28, 0x00	; 0
    7b52:	71 f0       	breq	.+28     	; 0x7b70 <uart7TxDmaInt+0x2c>
    7b54:	ef 8d       	ldd	r30, Y+31	; 0x1f
    7b56:	f8 a1       	lds	r31, 0x48
    7b58:	30 97       	sbiw	r30, 0x00	; 0
    7b5a:	19 f0       	breq	.+6      	; 0x7b62 <uart7TxDmaInt+0x1e>
    7b5c:	89 89       	ldd	r24, Y+17	; 0x11
    7b5e:	9a 89       	ldd	r25, Y+18	; 0x12
    7b60:	19 95       	eicall
    7b62:	1d 86       	std	Y+13, r1	; 0x0d
    7b64:	1e 86       	std	Y+14, r1	; 0x0e
    7b66:	1d 8a       	std	Y+21, r1	; 0x15
    7b68:	1e 8a       	std	Y+22, r1	; 0x16
    7b6a:	19 8a       	std	Y+17, r1	; 0x11
    7b6c:	1a 8a       	std	Y+18, r1	; 0x12
    7b6e:	1b 86       	std	Y+11, r1	; 0x0b
    7b70:	df 91       	pop	r29
    7b72:	cf 91       	pop	r28
    7b74:	08 95       	ret

00007b76 <uart8TxDmaInt>:
    7b76:	cf 93       	push	r28
    7b78:	df 93       	push	r29
    7b7a:	c0 91 ee 24 	lds	r28, 0x24EE
    7b7e:	d0 91 ef 24 	lds	r29, 0x24EF
    7b82:	20 97       	sbiw	r28, 0x00	; 0
    7b84:	71 f0       	breq	.+28     	; 0x7ba2 <uart8TxDmaInt+0x2c>
    7b86:	ef 8d       	ldd	r30, Y+31	; 0x1f
    7b88:	f8 a1       	lds	r31, 0x48
    7b8a:	30 97       	sbiw	r30, 0x00	; 0
    7b8c:	19 f0       	breq	.+6      	; 0x7b94 <uart8TxDmaInt+0x1e>
    7b8e:	89 89       	ldd	r24, Y+17	; 0x11
    7b90:	9a 89       	ldd	r25, Y+18	; 0x12
    7b92:	19 95       	eicall
    7b94:	1d 86       	std	Y+13, r1	; 0x0d
    7b96:	1e 86       	std	Y+14, r1	; 0x0e
    7b98:	1d 8a       	std	Y+21, r1	; 0x15
    7b9a:	1e 8a       	std	Y+22, r1	; 0x16
    7b9c:	19 8a       	std	Y+17, r1	; 0x11
    7b9e:	1a 8a       	std	Y+18, r1	; 0x12
    7ba0:	1b 86       	std	Y+11, r1	; 0x0b
    7ba2:	df 91       	pop	r29
    7ba4:	cf 91       	pop	r28
    7ba6:	08 95       	ret

00007ba8 <updateRxDmaInt>:
    7ba8:	cf 93       	push	r28
    7baa:	df 93       	push	r29
    7bac:	ec 01       	movw	r28, r24
    7bae:	8b 8d       	ldd	r24, Y+27	; 0x1b
    7bb0:	9c 8d       	ldd	r25, Y+28	; 0x1c
    7bb2:	0e 94 e9 50 	call	0xa1d2	; 0xa1d2 <hal_dmaDisableChannel>
    7bb6:	8b 8d       	ldd	r24, Y+27	; 0x1b
    7bb8:	9c 8d       	ldd	r25, Y+28	; 0x1c
    7bba:	0e 94 85 4e 	call	0x9d0a	; 0x9d0a <hal_getDmaTransferCount>
    7bbe:	8f 8b       	std	Y+23, r24	; 0x17
    7bc0:	98 8f       	std	Y+24, r25	; 0x18
    7bc2:	ed 8d       	ldd	r30, Y+29	; 0x1d
    7bc4:	fe 8d       	ldd	r31, Y+30	; 0x1e
    7bc6:	30 97       	sbiw	r30, 0x00	; 0
    7bc8:	09 f0       	breq	.+2      	; 0x7bcc <updateRxDmaInt+0x24>
    7bca:	19 95       	eicall
    7bcc:	1c 86       	std	Y+12, r1	; 0x0c
    7bce:	1f 86       	std	Y+15, r1	; 0x0f
    7bd0:	18 8a       	std	Y+16, r1	; 0x10
    7bd2:	1f 8a       	std	Y+23, r1	; 0x17
    7bd4:	18 8e       	std	Y+24, r1	; 0x18
    7bd6:	1b 8a       	std	Y+19, r1	; 0x13
    7bd8:	1c 8a       	std	Y+20, r1	; 0x14
    7bda:	e9 85       	ldd	r30, Y+9	; 0x09
    7bdc:	fa 85       	ldd	r31, Y+10	; 0x0a
    7bde:	83 81       	ldd	r24, Z+3	; 0x03
    7be0:	80 63       	ori	r24, 0x30	; 48
    7be2:	83 83       	std	Z+3, r24	; 0x03
    7be4:	df 91       	pop	r29
    7be6:	cf 91       	pop	r28
    7be8:	08 95       	ret

00007bea <uart8RxDmaInt>:
    7bea:	80 91 ee 24 	lds	r24, 0x24EE
    7bee:	90 91 ef 24 	lds	r25, 0x24EF
    7bf2:	00 97       	sbiw	r24, 0x00	; 0
    7bf4:	11 f0       	breq	.+4      	; 0x7bfa <uart8RxDmaInt+0x10>
    7bf6:	0e 94 d4 3d 	call	0x7ba8	; 0x7ba8 <updateRxDmaInt>
    7bfa:	08 95       	ret

00007bfc <uart7RxDmaInt>:
    7bfc:	80 91 ec 24 	lds	r24, 0x24EC
    7c00:	90 91 ed 24 	lds	r25, 0x24ED
    7c04:	00 97       	sbiw	r24, 0x00	; 0
    7c06:	11 f0       	breq	.+4      	; 0x7c0c <uart7RxDmaInt+0x10>
    7c08:	0e 94 d4 3d 	call	0x7ba8	; 0x7ba8 <updateRxDmaInt>
    7c0c:	08 95       	ret

00007c0e <uart6RxDmaInt>:
    7c0e:	80 91 ea 24 	lds	r24, 0x24EA
    7c12:	90 91 eb 24 	lds	r25, 0x24EB
    7c16:	00 97       	sbiw	r24, 0x00	; 0
    7c18:	11 f0       	breq	.+4      	; 0x7c1e <uart6RxDmaInt+0x10>
    7c1a:	0e 94 d4 3d 	call	0x7ba8	; 0x7ba8 <updateRxDmaInt>
    7c1e:	08 95       	ret

00007c20 <uart5RxDmaInt>:
    7c20:	80 91 e8 24 	lds	r24, 0x24E8
    7c24:	90 91 e9 24 	lds	r25, 0x24E9
    7c28:	00 97       	sbiw	r24, 0x00	; 0
    7c2a:	11 f0       	breq	.+4      	; 0x7c30 <uart5RxDmaInt+0x10>
    7c2c:	0e 94 d4 3d 	call	0x7ba8	; 0x7ba8 <updateRxDmaInt>
    7c30:	08 95       	ret

00007c32 <uart4RxDmaInt>:
    7c32:	80 91 e6 24 	lds	r24, 0x24E6
    7c36:	90 91 e7 24 	lds	r25, 0x24E7
    7c3a:	00 97       	sbiw	r24, 0x00	; 0
    7c3c:	11 f0       	breq	.+4      	; 0x7c42 <uart4RxDmaInt+0x10>
    7c3e:	0e 94 d4 3d 	call	0x7ba8	; 0x7ba8 <updateRxDmaInt>
    7c42:	08 95       	ret

00007c44 <uart3RxDmaInt>:
    7c44:	80 91 e4 24 	lds	r24, 0x24E4
    7c48:	90 91 e5 24 	lds	r25, 0x24E5
    7c4c:	00 97       	sbiw	r24, 0x00	; 0
    7c4e:	11 f0       	breq	.+4      	; 0x7c54 <uart3RxDmaInt+0x10>
    7c50:	0e 94 d4 3d 	call	0x7ba8	; 0x7ba8 <updateRxDmaInt>
    7c54:	08 95       	ret

00007c56 <uart2RxDmaInt>:
    7c56:	80 91 e2 24 	lds	r24, 0x24E2
    7c5a:	90 91 e3 24 	lds	r25, 0x24E3
    7c5e:	00 97       	sbiw	r24, 0x00	; 0
    7c60:	11 f0       	breq	.+4      	; 0x7c66 <uart2RxDmaInt+0x10>
    7c62:	0e 94 d4 3d 	call	0x7ba8	; 0x7ba8 <updateRxDmaInt>
    7c66:	08 95       	ret

00007c68 <uart1RxDmaInt>:
    7c68:	80 91 e0 24 	lds	r24, 0x24E0
    7c6c:	90 91 e1 24 	lds	r25, 0x24E1
    7c70:	00 97       	sbiw	r24, 0x00	; 0
    7c72:	11 f0       	breq	.+4      	; 0x7c78 <uart1RxDmaInt+0x10>
    7c74:	0e 94 d4 3d 	call	0x7ba8	; 0x7ba8 <updateRxDmaInt>
    7c78:	08 95       	ret

00007c7a <updateRxBuffer>:
    7c7a:	cf 93       	push	r28
    7c7c:	df 93       	push	r29
    7c7e:	ec 01       	movw	r28, r24
    7c80:	8f 85       	ldd	r24, Y+15	; 0x0f
    7c82:	98 89       	ldd	r25, Y+16	; 0x10
    7c84:	00 97       	sbiw	r24, 0x00	; 0
    7c86:	51 f4       	brne	.+20     	; 0x7c9c <updateRxBuffer+0x22>
    7c88:	ed 8d       	ldd	r30, Y+29	; 0x1d
    7c8a:	fe 8d       	ldd	r31, Y+30	; 0x1e
    7c8c:	30 97       	sbiw	r30, 0x00	; 0
    7c8e:	11 f1       	breq	.+68     	; 0x7cd4 <updateRxBuffer+0x5a>
    7c90:	a9 85       	ldd	r26, Y+9	; 0x09
    7c92:	ba 85       	ldd	r27, Y+10	; 0x0a
    7c94:	8c 91       	ld	r24, X
    7c96:	90 e0       	ldi	r25, 0x00	; 0
    7c98:	19 95       	eicall
    7c9a:	1c c0       	rjmp	.+56     	; 0x7cd4 <updateRxBuffer+0x5a>
    7c9c:	e9 85       	ldd	r30, Y+9	; 0x09
    7c9e:	fa 85       	ldd	r31, Y+10	; 0x0a
    7ca0:	20 81       	ld	r18, Z
    7ca2:	ef 89       	ldd	r30, Y+23	; 0x17
    7ca4:	f8 8d       	ldd	r31, Y+24	; 0x18
    7ca6:	e8 0f       	add	r30, r24
    7ca8:	f9 1f       	adc	r31, r25
    7caa:	20 83       	st	Z, r18
    7cac:	8f 89       	ldd	r24, Y+23	; 0x17
    7cae:	98 8d       	ldd	r25, Y+24	; 0x18
    7cb0:	01 96       	adiw	r24, 0x01	; 1
    7cb2:	8f 8b       	std	Y+23, r24	; 0x17
    7cb4:	98 8f       	std	Y+24, r25	; 0x18
    7cb6:	2b 89       	ldd	r18, Y+19	; 0x13
    7cb8:	3c 89       	ldd	r19, Y+20	; 0x14
    7cba:	82 17       	cp	r24, r18
    7cbc:	93 07       	cpc	r25, r19
    7cbe:	51 f4       	brne	.+20     	; 0x7cd4 <updateRxBuffer+0x5a>
    7cc0:	ed 8d       	ldd	r30, Y+29	; 0x1d
    7cc2:	fe 8d       	ldd	r31, Y+30	; 0x1e
    7cc4:	30 97       	sbiw	r30, 0x00	; 0
    7cc6:	09 f0       	breq	.+2      	; 0x7cca <updateRxBuffer+0x50>
    7cc8:	19 95       	eicall
    7cca:	1f 8a       	std	Y+23, r1	; 0x17
    7ccc:	18 8e       	std	Y+24, r1	; 0x18
    7cce:	1b 8a       	std	Y+19, r1	; 0x13
    7cd0:	1c 8a       	std	Y+20, r1	; 0x14
    7cd2:	1c 86       	std	Y+12, r1	; 0x0c
    7cd4:	df 91       	pop	r29
    7cd6:	cf 91       	pop	r28
    7cd8:	08 95       	ret

00007cda <updateTxBuffer>:
    7cda:	cf 93       	push	r28
    7cdc:	df 93       	push	r29
    7cde:	ec 01       	movw	r28, r24
    7ce0:	8d 85       	ldd	r24, Y+13	; 0x0d
    7ce2:	9e 85       	ldd	r25, Y+14	; 0x0e
    7ce4:	00 97       	sbiw	r24, 0x00	; 0
    7ce6:	29 f1       	breq	.+74     	; 0x7d32 <updateTxBuffer+0x58>
    7ce8:	a9 85       	ldd	r26, Y+9	; 0x09
    7cea:	ba 85       	ldd	r27, Y+10	; 0x0a
    7cec:	ed 89       	ldd	r30, Y+21	; 0x15
    7cee:	fe 89       	ldd	r31, Y+22	; 0x16
    7cf0:	e8 0f       	add	r30, r24
    7cf2:	f9 1f       	adc	r31, r25
    7cf4:	80 81       	ld	r24, Z
    7cf6:	8c 93       	st	X, r24
    7cf8:	8d 89       	ldd	r24, Y+21	; 0x15
    7cfa:	9e 89       	ldd	r25, Y+22	; 0x16
    7cfc:	01 96       	adiw	r24, 0x01	; 1
    7cfe:	8d 8b       	std	Y+21, r24	; 0x15
    7d00:	9e 8b       	std	Y+22, r25	; 0x16
    7d02:	29 89       	ldd	r18, Y+17	; 0x11
    7d04:	3a 89       	ldd	r19, Y+18	; 0x12
    7d06:	82 17       	cp	r24, r18
    7d08:	93 07       	cpc	r25, r19
    7d0a:	99 f4       	brne	.+38     	; 0x7d32 <updateTxBuffer+0x58>
    7d0c:	e9 85       	ldd	r30, Y+9	; 0x09
    7d0e:	fa 85       	ldd	r31, Y+10	; 0x0a
    7d10:	83 81       	ldd	r24, Z+3	; 0x03
    7d12:	8c 7f       	andi	r24, 0xFC	; 252
    7d14:	83 83       	std	Z+3, r24	; 0x03
    7d16:	ef 8d       	ldd	r30, Y+31	; 0x1f
    7d18:	f8 a1       	lds	r31, 0x48
    7d1a:	30 97       	sbiw	r30, 0x00	; 0
    7d1c:	19 f0       	breq	.+6      	; 0x7d24 <updateTxBuffer+0x4a>
    7d1e:	8d 89       	ldd	r24, Y+21	; 0x15
    7d20:	9e 89       	ldd	r25, Y+22	; 0x16
    7d22:	19 95       	eicall
    7d24:	1d 86       	std	Y+13, r1	; 0x0d
    7d26:	1e 86       	std	Y+14, r1	; 0x0e
    7d28:	1d 8a       	std	Y+21, r1	; 0x15
    7d2a:	1e 8a       	std	Y+22, r1	; 0x16
    7d2c:	19 8a       	std	Y+17, r1	; 0x11
    7d2e:	1a 8a       	std	Y+18, r1	; 0x12
    7d30:	1b 86       	std	Y+11, r1	; 0x0b
    7d32:	df 91       	pop	r29
    7d34:	cf 91       	pop	r28
    7d36:	08 95       	ret

00007d38 <__vector_25>:
    7d38:	1f 92       	push	r1
    7d3a:	0f 92       	push	r0
    7d3c:	0f b6       	in	r0, 0x3f	; 63
    7d3e:	0f 92       	push	r0
    7d40:	08 b6       	in	r0, 0x38	; 56
    7d42:	0f 92       	push	r0
    7d44:	09 b6       	in	r0, 0x39	; 57
    7d46:	0f 92       	push	r0
    7d48:	0b b6       	in	r0, 0x3b	; 59
    7d4a:	0f 92       	push	r0
    7d4c:	11 24       	eor	r1, r1
    7d4e:	2f 93       	push	r18
    7d50:	3f 93       	push	r19
    7d52:	4f 93       	push	r20
    7d54:	5f 93       	push	r21
    7d56:	6f 93       	push	r22
    7d58:	7f 93       	push	r23
    7d5a:	8f 93       	push	r24
    7d5c:	9f 93       	push	r25
    7d5e:	af 93       	push	r26
    7d60:	bf 93       	push	r27
    7d62:	ef 93       	push	r30
    7d64:	ff 93       	push	r31
    7d66:	80 91 e0 24 	lds	r24, 0x24E0
    7d6a:	90 91 e1 24 	lds	r25, 0x24E1
    7d6e:	00 97       	sbiw	r24, 0x00	; 0
    7d70:	11 f0       	breq	.+4      	; 0x7d76 <__vector_25+0x3e>
    7d72:	0e 94 3d 3e 	call	0x7c7a	; 0x7c7a <updateRxBuffer>
    7d76:	ff 91       	pop	r31
    7d78:	ef 91       	pop	r30
    7d7a:	bf 91       	pop	r27
    7d7c:	af 91       	pop	r26
    7d7e:	9f 91       	pop	r25
    7d80:	8f 91       	pop	r24
    7d82:	7f 91       	pop	r23
    7d84:	6f 91       	pop	r22
    7d86:	5f 91       	pop	r21
    7d88:	4f 91       	pop	r20
    7d8a:	3f 91       	pop	r19
    7d8c:	2f 91       	pop	r18
    7d8e:	0f 90       	pop	r0
    7d90:	0b be       	out	0x3b, r0	; 59
    7d92:	0f 90       	pop	r0
    7d94:	09 be       	out	0x39, r0	; 57
    7d96:	0f 90       	pop	r0
    7d98:	08 be       	out	0x38, r0	; 56
    7d9a:	0f 90       	pop	r0
    7d9c:	0f be       	out	0x3f, r0	; 63
    7d9e:	0f 90       	pop	r0
    7da0:	1f 90       	pop	r1
    7da2:	18 95       	reti

00007da4 <__vector_26>:
    7da4:	1f 92       	push	r1
    7da6:	0f 92       	push	r0
    7da8:	0f b6       	in	r0, 0x3f	; 63
    7daa:	0f 92       	push	r0
    7dac:	08 b6       	in	r0, 0x38	; 56
    7dae:	0f 92       	push	r0
    7db0:	09 b6       	in	r0, 0x39	; 57
    7db2:	0f 92       	push	r0
    7db4:	0b b6       	in	r0, 0x3b	; 59
    7db6:	0f 92       	push	r0
    7db8:	11 24       	eor	r1, r1
    7dba:	2f 93       	push	r18
    7dbc:	3f 93       	push	r19
    7dbe:	4f 93       	push	r20
    7dc0:	5f 93       	push	r21
    7dc2:	6f 93       	push	r22
    7dc4:	7f 93       	push	r23
    7dc6:	8f 93       	push	r24
    7dc8:	9f 93       	push	r25
    7dca:	af 93       	push	r26
    7dcc:	bf 93       	push	r27
    7dce:	ef 93       	push	r30
    7dd0:	ff 93       	push	r31
    7dd2:	80 91 e0 24 	lds	r24, 0x24E0
    7dd6:	90 91 e1 24 	lds	r25, 0x24E1
    7dda:	00 97       	sbiw	r24, 0x00	; 0
    7ddc:	11 f0       	breq	.+4      	; 0x7de2 <__vector_26+0x3e>
    7dde:	0e 94 6d 3e 	call	0x7cda	; 0x7cda <updateTxBuffer>
    7de2:	ff 91       	pop	r31
    7de4:	ef 91       	pop	r30
    7de6:	bf 91       	pop	r27
    7de8:	af 91       	pop	r26
    7dea:	9f 91       	pop	r25
    7dec:	8f 91       	pop	r24
    7dee:	7f 91       	pop	r23
    7df0:	6f 91       	pop	r22
    7df2:	5f 91       	pop	r21
    7df4:	4f 91       	pop	r20
    7df6:	3f 91       	pop	r19
    7df8:	2f 91       	pop	r18
    7dfa:	0f 90       	pop	r0
    7dfc:	0b be       	out	0x3b, r0	; 59
    7dfe:	0f 90       	pop	r0
    7e00:	09 be       	out	0x39, r0	; 57
    7e02:	0f 90       	pop	r0
    7e04:	08 be       	out	0x38, r0	; 56
    7e06:	0f 90       	pop	r0
    7e08:	0f be       	out	0x3f, r0	; 63
    7e0a:	0f 90       	pop	r0
    7e0c:	1f 90       	pop	r1
    7e0e:	18 95       	reti

00007e10 <__vector_28>:
    7e10:	1f 92       	push	r1
    7e12:	0f 92       	push	r0
    7e14:	0f b6       	in	r0, 0x3f	; 63
    7e16:	0f 92       	push	r0
    7e18:	08 b6       	in	r0, 0x38	; 56
    7e1a:	0f 92       	push	r0
    7e1c:	09 b6       	in	r0, 0x39	; 57
    7e1e:	0f 92       	push	r0
    7e20:	0b b6       	in	r0, 0x3b	; 59
    7e22:	0f 92       	push	r0
    7e24:	11 24       	eor	r1, r1
    7e26:	2f 93       	push	r18
    7e28:	3f 93       	push	r19
    7e2a:	4f 93       	push	r20
    7e2c:	5f 93       	push	r21
    7e2e:	6f 93       	push	r22
    7e30:	7f 93       	push	r23
    7e32:	8f 93       	push	r24
    7e34:	9f 93       	push	r25
    7e36:	af 93       	push	r26
    7e38:	bf 93       	push	r27
    7e3a:	ef 93       	push	r30
    7e3c:	ff 93       	push	r31
    7e3e:	80 91 e2 24 	lds	r24, 0x24E2
    7e42:	90 91 e3 24 	lds	r25, 0x24E3
    7e46:	00 97       	sbiw	r24, 0x00	; 0
    7e48:	11 f0       	breq	.+4      	; 0x7e4e <__vector_28+0x3e>
    7e4a:	0e 94 3d 3e 	call	0x7c7a	; 0x7c7a <updateRxBuffer>
    7e4e:	ff 91       	pop	r31
    7e50:	ef 91       	pop	r30
    7e52:	bf 91       	pop	r27
    7e54:	af 91       	pop	r26
    7e56:	9f 91       	pop	r25
    7e58:	8f 91       	pop	r24
    7e5a:	7f 91       	pop	r23
    7e5c:	6f 91       	pop	r22
    7e5e:	5f 91       	pop	r21
    7e60:	4f 91       	pop	r20
    7e62:	3f 91       	pop	r19
    7e64:	2f 91       	pop	r18
    7e66:	0f 90       	pop	r0
    7e68:	0b be       	out	0x3b, r0	; 59
    7e6a:	0f 90       	pop	r0
    7e6c:	09 be       	out	0x39, r0	; 57
    7e6e:	0f 90       	pop	r0
    7e70:	08 be       	out	0x38, r0	; 56
    7e72:	0f 90       	pop	r0
    7e74:	0f be       	out	0x3f, r0	; 63
    7e76:	0f 90       	pop	r0
    7e78:	1f 90       	pop	r1
    7e7a:	18 95       	reti

00007e7c <__vector_29>:
    7e7c:	1f 92       	push	r1
    7e7e:	0f 92       	push	r0
    7e80:	0f b6       	in	r0, 0x3f	; 63
    7e82:	0f 92       	push	r0
    7e84:	08 b6       	in	r0, 0x38	; 56
    7e86:	0f 92       	push	r0
    7e88:	09 b6       	in	r0, 0x39	; 57
    7e8a:	0f 92       	push	r0
    7e8c:	0b b6       	in	r0, 0x3b	; 59
    7e8e:	0f 92       	push	r0
    7e90:	11 24       	eor	r1, r1
    7e92:	2f 93       	push	r18
    7e94:	3f 93       	push	r19
    7e96:	4f 93       	push	r20
    7e98:	5f 93       	push	r21
    7e9a:	6f 93       	push	r22
    7e9c:	7f 93       	push	r23
    7e9e:	8f 93       	push	r24
    7ea0:	9f 93       	push	r25
    7ea2:	af 93       	push	r26
    7ea4:	bf 93       	push	r27
    7ea6:	ef 93       	push	r30
    7ea8:	ff 93       	push	r31
    7eaa:	80 91 e2 24 	lds	r24, 0x24E2
    7eae:	90 91 e3 24 	lds	r25, 0x24E3
    7eb2:	00 97       	sbiw	r24, 0x00	; 0
    7eb4:	11 f0       	breq	.+4      	; 0x7eba <__vector_29+0x3e>
    7eb6:	0e 94 6d 3e 	call	0x7cda	; 0x7cda <updateTxBuffer>
    7eba:	ff 91       	pop	r31
    7ebc:	ef 91       	pop	r30
    7ebe:	bf 91       	pop	r27
    7ec0:	af 91       	pop	r26
    7ec2:	9f 91       	pop	r25
    7ec4:	8f 91       	pop	r24
    7ec6:	7f 91       	pop	r23
    7ec8:	6f 91       	pop	r22
    7eca:	5f 91       	pop	r21
    7ecc:	4f 91       	pop	r20
    7ece:	3f 91       	pop	r19
    7ed0:	2f 91       	pop	r18
    7ed2:	0f 90       	pop	r0
    7ed4:	0b be       	out	0x3b, r0	; 59
    7ed6:	0f 90       	pop	r0
    7ed8:	09 be       	out	0x39, r0	; 57
    7eda:	0f 90       	pop	r0
    7edc:	08 be       	out	0x38, r0	; 56
    7ede:	0f 90       	pop	r0
    7ee0:	0f be       	out	0x3f, r0	; 63
    7ee2:	0f 90       	pop	r0
    7ee4:	1f 90       	pop	r1
    7ee6:	18 95       	reti

00007ee8 <__vector_88>:
    7ee8:	1f 92       	push	r1
    7eea:	0f 92       	push	r0
    7eec:	0f b6       	in	r0, 0x3f	; 63
    7eee:	0f 92       	push	r0
    7ef0:	08 b6       	in	r0, 0x38	; 56
    7ef2:	0f 92       	push	r0
    7ef4:	09 b6       	in	r0, 0x39	; 57
    7ef6:	0f 92       	push	r0
    7ef8:	0b b6       	in	r0, 0x3b	; 59
    7efa:	0f 92       	push	r0
    7efc:	11 24       	eor	r1, r1
    7efe:	2f 93       	push	r18
    7f00:	3f 93       	push	r19
    7f02:	4f 93       	push	r20
    7f04:	5f 93       	push	r21
    7f06:	6f 93       	push	r22
    7f08:	7f 93       	push	r23
    7f0a:	8f 93       	push	r24
    7f0c:	9f 93       	push	r25
    7f0e:	af 93       	push	r26
    7f10:	bf 93       	push	r27
    7f12:	ef 93       	push	r30
    7f14:	ff 93       	push	r31
    7f16:	80 91 e4 24 	lds	r24, 0x24E4
    7f1a:	90 91 e5 24 	lds	r25, 0x24E5
    7f1e:	00 97       	sbiw	r24, 0x00	; 0
    7f20:	11 f0       	breq	.+4      	; 0x7f26 <__vector_88+0x3e>
    7f22:	0e 94 3d 3e 	call	0x7c7a	; 0x7c7a <updateRxBuffer>
    7f26:	ff 91       	pop	r31
    7f28:	ef 91       	pop	r30
    7f2a:	bf 91       	pop	r27
    7f2c:	af 91       	pop	r26
    7f2e:	9f 91       	pop	r25
    7f30:	8f 91       	pop	r24
    7f32:	7f 91       	pop	r23
    7f34:	6f 91       	pop	r22
    7f36:	5f 91       	pop	r21
    7f38:	4f 91       	pop	r20
    7f3a:	3f 91       	pop	r19
    7f3c:	2f 91       	pop	r18
    7f3e:	0f 90       	pop	r0
    7f40:	0b be       	out	0x3b, r0	; 59
    7f42:	0f 90       	pop	r0
    7f44:	09 be       	out	0x39, r0	; 57
    7f46:	0f 90       	pop	r0
    7f48:	08 be       	out	0x38, r0	; 56
    7f4a:	0f 90       	pop	r0
    7f4c:	0f be       	out	0x3f, r0	; 63
    7f4e:	0f 90       	pop	r0
    7f50:	1f 90       	pop	r1
    7f52:	18 95       	reti

00007f54 <__vector_89>:
    7f54:	1f 92       	push	r1
    7f56:	0f 92       	push	r0
    7f58:	0f b6       	in	r0, 0x3f	; 63
    7f5a:	0f 92       	push	r0
    7f5c:	08 b6       	in	r0, 0x38	; 56
    7f5e:	0f 92       	push	r0
    7f60:	09 b6       	in	r0, 0x39	; 57
    7f62:	0f 92       	push	r0
    7f64:	0b b6       	in	r0, 0x3b	; 59
    7f66:	0f 92       	push	r0
    7f68:	11 24       	eor	r1, r1
    7f6a:	2f 93       	push	r18
    7f6c:	3f 93       	push	r19
    7f6e:	4f 93       	push	r20
    7f70:	5f 93       	push	r21
    7f72:	6f 93       	push	r22
    7f74:	7f 93       	push	r23
    7f76:	8f 93       	push	r24
    7f78:	9f 93       	push	r25
    7f7a:	af 93       	push	r26
    7f7c:	bf 93       	push	r27
    7f7e:	ef 93       	push	r30
    7f80:	ff 93       	push	r31
    7f82:	80 91 e4 24 	lds	r24, 0x24E4
    7f86:	90 91 e5 24 	lds	r25, 0x24E5
    7f8a:	00 97       	sbiw	r24, 0x00	; 0
    7f8c:	11 f0       	breq	.+4      	; 0x7f92 <__vector_89+0x3e>
    7f8e:	0e 94 6d 3e 	call	0x7cda	; 0x7cda <updateTxBuffer>
    7f92:	ff 91       	pop	r31
    7f94:	ef 91       	pop	r30
    7f96:	bf 91       	pop	r27
    7f98:	af 91       	pop	r26
    7f9a:	9f 91       	pop	r25
    7f9c:	8f 91       	pop	r24
    7f9e:	7f 91       	pop	r23
    7fa0:	6f 91       	pop	r22
    7fa2:	5f 91       	pop	r21
    7fa4:	4f 91       	pop	r20
    7fa6:	3f 91       	pop	r19
    7fa8:	2f 91       	pop	r18
    7faa:	0f 90       	pop	r0
    7fac:	0b be       	out	0x3b, r0	; 59
    7fae:	0f 90       	pop	r0
    7fb0:	09 be       	out	0x39, r0	; 57
    7fb2:	0f 90       	pop	r0
    7fb4:	08 be       	out	0x38, r0	; 56
    7fb6:	0f 90       	pop	r0
    7fb8:	0f be       	out	0x3f, r0	; 63
    7fba:	0f 90       	pop	r0
    7fbc:	1f 90       	pop	r1
    7fbe:	18 95       	reti

00007fc0 <__vector_91>:
    7fc0:	1f 92       	push	r1
    7fc2:	0f 92       	push	r0
    7fc4:	0f b6       	in	r0, 0x3f	; 63
    7fc6:	0f 92       	push	r0
    7fc8:	08 b6       	in	r0, 0x38	; 56
    7fca:	0f 92       	push	r0
    7fcc:	09 b6       	in	r0, 0x39	; 57
    7fce:	0f 92       	push	r0
    7fd0:	0b b6       	in	r0, 0x3b	; 59
    7fd2:	0f 92       	push	r0
    7fd4:	11 24       	eor	r1, r1
    7fd6:	2f 93       	push	r18
    7fd8:	3f 93       	push	r19
    7fda:	4f 93       	push	r20
    7fdc:	5f 93       	push	r21
    7fde:	6f 93       	push	r22
    7fe0:	7f 93       	push	r23
    7fe2:	8f 93       	push	r24
    7fe4:	9f 93       	push	r25
    7fe6:	af 93       	push	r26
    7fe8:	bf 93       	push	r27
    7fea:	ef 93       	push	r30
    7fec:	ff 93       	push	r31
    7fee:	80 91 e6 24 	lds	r24, 0x24E6
    7ff2:	90 91 e7 24 	lds	r25, 0x24E7
    7ff6:	00 97       	sbiw	r24, 0x00	; 0
    7ff8:	11 f0       	breq	.+4      	; 0x7ffe <__vector_91+0x3e>
    7ffa:	0e 94 3d 3e 	call	0x7c7a	; 0x7c7a <updateRxBuffer>
    7ffe:	ff 91       	pop	r31
    8000:	ef 91       	pop	r30
    8002:	bf 91       	pop	r27
    8004:	af 91       	pop	r26
    8006:	9f 91       	pop	r25
    8008:	8f 91       	pop	r24
    800a:	7f 91       	pop	r23
    800c:	6f 91       	pop	r22
    800e:	5f 91       	pop	r21
    8010:	4f 91       	pop	r20
    8012:	3f 91       	pop	r19
    8014:	2f 91       	pop	r18
    8016:	0f 90       	pop	r0
    8018:	0b be       	out	0x3b, r0	; 59
    801a:	0f 90       	pop	r0
    801c:	09 be       	out	0x39, r0	; 57
    801e:	0f 90       	pop	r0
    8020:	08 be       	out	0x38, r0	; 56
    8022:	0f 90       	pop	r0
    8024:	0f be       	out	0x3f, r0	; 63
    8026:	0f 90       	pop	r0
    8028:	1f 90       	pop	r1
    802a:	18 95       	reti

0000802c <__vector_92>:
    802c:	1f 92       	push	r1
    802e:	0f 92       	push	r0
    8030:	0f b6       	in	r0, 0x3f	; 63
    8032:	0f 92       	push	r0
    8034:	08 b6       	in	r0, 0x38	; 56
    8036:	0f 92       	push	r0
    8038:	09 b6       	in	r0, 0x39	; 57
    803a:	0f 92       	push	r0
    803c:	0b b6       	in	r0, 0x3b	; 59
    803e:	0f 92       	push	r0
    8040:	11 24       	eor	r1, r1
    8042:	2f 93       	push	r18
    8044:	3f 93       	push	r19
    8046:	4f 93       	push	r20
    8048:	5f 93       	push	r21
    804a:	6f 93       	push	r22
    804c:	7f 93       	push	r23
    804e:	8f 93       	push	r24
    8050:	9f 93       	push	r25
    8052:	af 93       	push	r26
    8054:	bf 93       	push	r27
    8056:	ef 93       	push	r30
    8058:	ff 93       	push	r31
    805a:	80 91 e6 24 	lds	r24, 0x24E6
    805e:	90 91 e7 24 	lds	r25, 0x24E7
    8062:	00 97       	sbiw	r24, 0x00	; 0
    8064:	11 f0       	breq	.+4      	; 0x806a <__vector_92+0x3e>
    8066:	0e 94 6d 3e 	call	0x7cda	; 0x7cda <updateTxBuffer>
    806a:	ff 91       	pop	r31
    806c:	ef 91       	pop	r30
    806e:	bf 91       	pop	r27
    8070:	af 91       	pop	r26
    8072:	9f 91       	pop	r25
    8074:	8f 91       	pop	r24
    8076:	7f 91       	pop	r23
    8078:	6f 91       	pop	r22
    807a:	5f 91       	pop	r21
    807c:	4f 91       	pop	r20
    807e:	3f 91       	pop	r19
    8080:	2f 91       	pop	r18
    8082:	0f 90       	pop	r0
    8084:	0b be       	out	0x3b, r0	; 59
    8086:	0f 90       	pop	r0
    8088:	09 be       	out	0x39, r0	; 57
    808a:	0f 90       	pop	r0
    808c:	08 be       	out	0x38, r0	; 56
    808e:	0f 90       	pop	r0
    8090:	0f be       	out	0x3f, r0	; 63
    8092:	0f 90       	pop	r0
    8094:	1f 90       	pop	r1
    8096:	18 95       	reti

00008098 <__vector_58>:
    8098:	1f 92       	push	r1
    809a:	0f 92       	push	r0
    809c:	0f b6       	in	r0, 0x3f	; 63
    809e:	0f 92       	push	r0
    80a0:	08 b6       	in	r0, 0x38	; 56
    80a2:	0f 92       	push	r0
    80a4:	09 b6       	in	r0, 0x39	; 57
    80a6:	0f 92       	push	r0
    80a8:	0b b6       	in	r0, 0x3b	; 59
    80aa:	0f 92       	push	r0
    80ac:	11 24       	eor	r1, r1
    80ae:	2f 93       	push	r18
    80b0:	3f 93       	push	r19
    80b2:	4f 93       	push	r20
    80b4:	5f 93       	push	r21
    80b6:	6f 93       	push	r22
    80b8:	7f 93       	push	r23
    80ba:	8f 93       	push	r24
    80bc:	9f 93       	push	r25
    80be:	af 93       	push	r26
    80c0:	bf 93       	push	r27
    80c2:	ef 93       	push	r30
    80c4:	ff 93       	push	r31
    80c6:	80 91 e8 24 	lds	r24, 0x24E8
    80ca:	90 91 e9 24 	lds	r25, 0x24E9
    80ce:	00 97       	sbiw	r24, 0x00	; 0
    80d0:	11 f0       	breq	.+4      	; 0x80d6 <__vector_58+0x3e>
    80d2:	0e 94 3d 3e 	call	0x7c7a	; 0x7c7a <updateRxBuffer>
    80d6:	ff 91       	pop	r31
    80d8:	ef 91       	pop	r30
    80da:	bf 91       	pop	r27
    80dc:	af 91       	pop	r26
    80de:	9f 91       	pop	r25
    80e0:	8f 91       	pop	r24
    80e2:	7f 91       	pop	r23
    80e4:	6f 91       	pop	r22
    80e6:	5f 91       	pop	r21
    80e8:	4f 91       	pop	r20
    80ea:	3f 91       	pop	r19
    80ec:	2f 91       	pop	r18
    80ee:	0f 90       	pop	r0
    80f0:	0b be       	out	0x3b, r0	; 59
    80f2:	0f 90       	pop	r0
    80f4:	09 be       	out	0x39, r0	; 57
    80f6:	0f 90       	pop	r0
    80f8:	08 be       	out	0x38, r0	; 56
    80fa:	0f 90       	pop	r0
    80fc:	0f be       	out	0x3f, r0	; 63
    80fe:	0f 90       	pop	r0
    8100:	1f 90       	pop	r1
    8102:	18 95       	reti

00008104 <__vector_59>:
    8104:	1f 92       	push	r1
    8106:	0f 92       	push	r0
    8108:	0f b6       	in	r0, 0x3f	; 63
    810a:	0f 92       	push	r0
    810c:	08 b6       	in	r0, 0x38	; 56
    810e:	0f 92       	push	r0
    8110:	09 b6       	in	r0, 0x39	; 57
    8112:	0f 92       	push	r0
    8114:	0b b6       	in	r0, 0x3b	; 59
    8116:	0f 92       	push	r0
    8118:	11 24       	eor	r1, r1
    811a:	2f 93       	push	r18
    811c:	3f 93       	push	r19
    811e:	4f 93       	push	r20
    8120:	5f 93       	push	r21
    8122:	6f 93       	push	r22
    8124:	7f 93       	push	r23
    8126:	8f 93       	push	r24
    8128:	9f 93       	push	r25
    812a:	af 93       	push	r26
    812c:	bf 93       	push	r27
    812e:	ef 93       	push	r30
    8130:	ff 93       	push	r31
    8132:	80 91 e8 24 	lds	r24, 0x24E8
    8136:	90 91 e9 24 	lds	r25, 0x24E9
    813a:	00 97       	sbiw	r24, 0x00	; 0
    813c:	11 f0       	breq	.+4      	; 0x8142 <__vector_59+0x3e>
    813e:	0e 94 6d 3e 	call	0x7cda	; 0x7cda <updateTxBuffer>
    8142:	ff 91       	pop	r31
    8144:	ef 91       	pop	r30
    8146:	bf 91       	pop	r27
    8148:	af 91       	pop	r26
    814a:	9f 91       	pop	r25
    814c:	8f 91       	pop	r24
    814e:	7f 91       	pop	r23
    8150:	6f 91       	pop	r22
    8152:	5f 91       	pop	r21
    8154:	4f 91       	pop	r20
    8156:	3f 91       	pop	r19
    8158:	2f 91       	pop	r18
    815a:	0f 90       	pop	r0
    815c:	0b be       	out	0x3b, r0	; 59
    815e:	0f 90       	pop	r0
    8160:	09 be       	out	0x39, r0	; 57
    8162:	0f 90       	pop	r0
    8164:	08 be       	out	0x38, r0	; 56
    8166:	0f 90       	pop	r0
    8168:	0f be       	out	0x3f, r0	; 63
    816a:	0f 90       	pop	r0
    816c:	1f 90       	pop	r1
    816e:	18 95       	reti

00008170 <__vector_61>:
    8170:	1f 92       	push	r1
    8172:	0f 92       	push	r0
    8174:	0f b6       	in	r0, 0x3f	; 63
    8176:	0f 92       	push	r0
    8178:	08 b6       	in	r0, 0x38	; 56
    817a:	0f 92       	push	r0
    817c:	09 b6       	in	r0, 0x39	; 57
    817e:	0f 92       	push	r0
    8180:	0b b6       	in	r0, 0x3b	; 59
    8182:	0f 92       	push	r0
    8184:	11 24       	eor	r1, r1
    8186:	2f 93       	push	r18
    8188:	3f 93       	push	r19
    818a:	4f 93       	push	r20
    818c:	5f 93       	push	r21
    818e:	6f 93       	push	r22
    8190:	7f 93       	push	r23
    8192:	8f 93       	push	r24
    8194:	9f 93       	push	r25
    8196:	af 93       	push	r26
    8198:	bf 93       	push	r27
    819a:	ef 93       	push	r30
    819c:	ff 93       	push	r31
    819e:	80 91 ea 24 	lds	r24, 0x24EA
    81a2:	90 91 eb 24 	lds	r25, 0x24EB
    81a6:	00 97       	sbiw	r24, 0x00	; 0
    81a8:	11 f0       	breq	.+4      	; 0x81ae <__vector_61+0x3e>
    81aa:	0e 94 3d 3e 	call	0x7c7a	; 0x7c7a <updateRxBuffer>
    81ae:	ff 91       	pop	r31
    81b0:	ef 91       	pop	r30
    81b2:	bf 91       	pop	r27
    81b4:	af 91       	pop	r26
    81b6:	9f 91       	pop	r25
    81b8:	8f 91       	pop	r24
    81ba:	7f 91       	pop	r23
    81bc:	6f 91       	pop	r22
    81be:	5f 91       	pop	r21
    81c0:	4f 91       	pop	r20
    81c2:	3f 91       	pop	r19
    81c4:	2f 91       	pop	r18
    81c6:	0f 90       	pop	r0
    81c8:	0b be       	out	0x3b, r0	; 59
    81ca:	0f 90       	pop	r0
    81cc:	09 be       	out	0x39, r0	; 57
    81ce:	0f 90       	pop	r0
    81d0:	08 be       	out	0x38, r0	; 56
    81d2:	0f 90       	pop	r0
    81d4:	0f be       	out	0x3f, r0	; 63
    81d6:	0f 90       	pop	r0
    81d8:	1f 90       	pop	r1
    81da:	18 95       	reti

000081dc <__vector_62>:
    81dc:	1f 92       	push	r1
    81de:	0f 92       	push	r0
    81e0:	0f b6       	in	r0, 0x3f	; 63
    81e2:	0f 92       	push	r0
    81e4:	08 b6       	in	r0, 0x38	; 56
    81e6:	0f 92       	push	r0
    81e8:	09 b6       	in	r0, 0x39	; 57
    81ea:	0f 92       	push	r0
    81ec:	0b b6       	in	r0, 0x3b	; 59
    81ee:	0f 92       	push	r0
    81f0:	11 24       	eor	r1, r1
    81f2:	2f 93       	push	r18
    81f4:	3f 93       	push	r19
    81f6:	4f 93       	push	r20
    81f8:	5f 93       	push	r21
    81fa:	6f 93       	push	r22
    81fc:	7f 93       	push	r23
    81fe:	8f 93       	push	r24
    8200:	9f 93       	push	r25
    8202:	af 93       	push	r26
    8204:	bf 93       	push	r27
    8206:	ef 93       	push	r30
    8208:	ff 93       	push	r31
    820a:	80 91 ea 24 	lds	r24, 0x24EA
    820e:	90 91 eb 24 	lds	r25, 0x24EB
    8212:	00 97       	sbiw	r24, 0x00	; 0
    8214:	11 f0       	breq	.+4      	; 0x821a <__vector_62+0x3e>
    8216:	0e 94 6d 3e 	call	0x7cda	; 0x7cda <updateTxBuffer>
    821a:	ff 91       	pop	r31
    821c:	ef 91       	pop	r30
    821e:	bf 91       	pop	r27
    8220:	af 91       	pop	r26
    8222:	9f 91       	pop	r25
    8224:	8f 91       	pop	r24
    8226:	7f 91       	pop	r23
    8228:	6f 91       	pop	r22
    822a:	5f 91       	pop	r21
    822c:	4f 91       	pop	r20
    822e:	3f 91       	pop	r19
    8230:	2f 91       	pop	r18
    8232:	0f 90       	pop	r0
    8234:	0b be       	out	0x3b, r0	; 59
    8236:	0f 90       	pop	r0
    8238:	09 be       	out	0x39, r0	; 57
    823a:	0f 90       	pop	r0
    823c:	08 be       	out	0x38, r0	; 56
    823e:	0f 90       	pop	r0
    8240:	0f be       	out	0x3f, r0	; 63
    8242:	0f 90       	pop	r0
    8244:	1f 90       	pop	r1
    8246:	18 95       	reti

00008248 <__vector_119>:
    8248:	1f 92       	push	r1
    824a:	0f 92       	push	r0
    824c:	0f b6       	in	r0, 0x3f	; 63
    824e:	0f 92       	push	r0
    8250:	08 b6       	in	r0, 0x38	; 56
    8252:	0f 92       	push	r0
    8254:	09 b6       	in	r0, 0x39	; 57
    8256:	0f 92       	push	r0
    8258:	0b b6       	in	r0, 0x3b	; 59
    825a:	0f 92       	push	r0
    825c:	11 24       	eor	r1, r1
    825e:	2f 93       	push	r18
    8260:	3f 93       	push	r19
    8262:	4f 93       	push	r20
    8264:	5f 93       	push	r21
    8266:	6f 93       	push	r22
    8268:	7f 93       	push	r23
    826a:	8f 93       	push	r24
    826c:	9f 93       	push	r25
    826e:	af 93       	push	r26
    8270:	bf 93       	push	r27
    8272:	ef 93       	push	r30
    8274:	ff 93       	push	r31
    8276:	80 91 ec 24 	lds	r24, 0x24EC
    827a:	90 91 ed 24 	lds	r25, 0x24ED
    827e:	00 97       	sbiw	r24, 0x00	; 0
    8280:	11 f0       	breq	.+4      	; 0x8286 <__vector_119+0x3e>
    8282:	0e 94 3d 3e 	call	0x7c7a	; 0x7c7a <updateRxBuffer>
    8286:	ff 91       	pop	r31
    8288:	ef 91       	pop	r30
    828a:	bf 91       	pop	r27
    828c:	af 91       	pop	r26
    828e:	9f 91       	pop	r25
    8290:	8f 91       	pop	r24
    8292:	7f 91       	pop	r23
    8294:	6f 91       	pop	r22
    8296:	5f 91       	pop	r21
    8298:	4f 91       	pop	r20
    829a:	3f 91       	pop	r19
    829c:	2f 91       	pop	r18
    829e:	0f 90       	pop	r0
    82a0:	0b be       	out	0x3b, r0	; 59
    82a2:	0f 90       	pop	r0
    82a4:	09 be       	out	0x39, r0	; 57
    82a6:	0f 90       	pop	r0
    82a8:	08 be       	out	0x38, r0	; 56
    82aa:	0f 90       	pop	r0
    82ac:	0f be       	out	0x3f, r0	; 63
    82ae:	0f 90       	pop	r0
    82b0:	1f 90       	pop	r1
    82b2:	18 95       	reti

000082b4 <__vector_120>:
    82b4:	1f 92       	push	r1
    82b6:	0f 92       	push	r0
    82b8:	0f b6       	in	r0, 0x3f	; 63
    82ba:	0f 92       	push	r0
    82bc:	08 b6       	in	r0, 0x38	; 56
    82be:	0f 92       	push	r0
    82c0:	09 b6       	in	r0, 0x39	; 57
    82c2:	0f 92       	push	r0
    82c4:	0b b6       	in	r0, 0x3b	; 59
    82c6:	0f 92       	push	r0
    82c8:	11 24       	eor	r1, r1
    82ca:	2f 93       	push	r18
    82cc:	3f 93       	push	r19
    82ce:	4f 93       	push	r20
    82d0:	5f 93       	push	r21
    82d2:	6f 93       	push	r22
    82d4:	7f 93       	push	r23
    82d6:	8f 93       	push	r24
    82d8:	9f 93       	push	r25
    82da:	af 93       	push	r26
    82dc:	bf 93       	push	r27
    82de:	ef 93       	push	r30
    82e0:	ff 93       	push	r31
    82e2:	80 91 ec 24 	lds	r24, 0x24EC
    82e6:	90 91 ed 24 	lds	r25, 0x24ED
    82ea:	00 97       	sbiw	r24, 0x00	; 0
    82ec:	11 f0       	breq	.+4      	; 0x82f2 <__vector_120+0x3e>
    82ee:	0e 94 6d 3e 	call	0x7cda	; 0x7cda <updateTxBuffer>
    82f2:	ff 91       	pop	r31
    82f4:	ef 91       	pop	r30
    82f6:	bf 91       	pop	r27
    82f8:	af 91       	pop	r26
    82fa:	9f 91       	pop	r25
    82fc:	8f 91       	pop	r24
    82fe:	7f 91       	pop	r23
    8300:	6f 91       	pop	r22
    8302:	5f 91       	pop	r21
    8304:	4f 91       	pop	r20
    8306:	3f 91       	pop	r19
    8308:	2f 91       	pop	r18
    830a:	0f 90       	pop	r0
    830c:	0b be       	out	0x3b, r0	; 59
    830e:	0f 90       	pop	r0
    8310:	09 be       	out	0x39, r0	; 57
    8312:	0f 90       	pop	r0
    8314:	08 be       	out	0x38, r0	; 56
    8316:	0f 90       	pop	r0
    8318:	0f be       	out	0x3f, r0	; 63
    831a:	0f 90       	pop	r0
    831c:	1f 90       	pop	r1
    831e:	18 95       	reti

00008320 <__vector_122>:
    8320:	1f 92       	push	r1
    8322:	0f 92       	push	r0
    8324:	0f b6       	in	r0, 0x3f	; 63
    8326:	0f 92       	push	r0
    8328:	08 b6       	in	r0, 0x38	; 56
    832a:	0f 92       	push	r0
    832c:	09 b6       	in	r0, 0x39	; 57
    832e:	0f 92       	push	r0
    8330:	0b b6       	in	r0, 0x3b	; 59
    8332:	0f 92       	push	r0
    8334:	11 24       	eor	r1, r1
    8336:	2f 93       	push	r18
    8338:	3f 93       	push	r19
    833a:	4f 93       	push	r20
    833c:	5f 93       	push	r21
    833e:	6f 93       	push	r22
    8340:	7f 93       	push	r23
    8342:	8f 93       	push	r24
    8344:	9f 93       	push	r25
    8346:	af 93       	push	r26
    8348:	bf 93       	push	r27
    834a:	ef 93       	push	r30
    834c:	ff 93       	push	r31
    834e:	80 91 ee 24 	lds	r24, 0x24EE
    8352:	90 91 ef 24 	lds	r25, 0x24EF
    8356:	00 97       	sbiw	r24, 0x00	; 0
    8358:	11 f0       	breq	.+4      	; 0x835e <__vector_122+0x3e>
    835a:	0e 94 3d 3e 	call	0x7c7a	; 0x7c7a <updateRxBuffer>
    835e:	ff 91       	pop	r31
    8360:	ef 91       	pop	r30
    8362:	bf 91       	pop	r27
    8364:	af 91       	pop	r26
    8366:	9f 91       	pop	r25
    8368:	8f 91       	pop	r24
    836a:	7f 91       	pop	r23
    836c:	6f 91       	pop	r22
    836e:	5f 91       	pop	r21
    8370:	4f 91       	pop	r20
    8372:	3f 91       	pop	r19
    8374:	2f 91       	pop	r18
    8376:	0f 90       	pop	r0
    8378:	0b be       	out	0x3b, r0	; 59
    837a:	0f 90       	pop	r0
    837c:	09 be       	out	0x39, r0	; 57
    837e:	0f 90       	pop	r0
    8380:	08 be       	out	0x38, r0	; 56
    8382:	0f 90       	pop	r0
    8384:	0f be       	out	0x3f, r0	; 63
    8386:	0f 90       	pop	r0
    8388:	1f 90       	pop	r1
    838a:	18 95       	reti

0000838c <__vector_123>:
    838c:	1f 92       	push	r1
    838e:	0f 92       	push	r0
    8390:	0f b6       	in	r0, 0x3f	; 63
    8392:	0f 92       	push	r0
    8394:	08 b6       	in	r0, 0x38	; 56
    8396:	0f 92       	push	r0
    8398:	09 b6       	in	r0, 0x39	; 57
    839a:	0f 92       	push	r0
    839c:	0b b6       	in	r0, 0x3b	; 59
    839e:	0f 92       	push	r0
    83a0:	11 24       	eor	r1, r1
    83a2:	2f 93       	push	r18
    83a4:	3f 93       	push	r19
    83a6:	4f 93       	push	r20
    83a8:	5f 93       	push	r21
    83aa:	6f 93       	push	r22
    83ac:	7f 93       	push	r23
    83ae:	8f 93       	push	r24
    83b0:	9f 93       	push	r25
    83b2:	af 93       	push	r26
    83b4:	bf 93       	push	r27
    83b6:	ef 93       	push	r30
    83b8:	ff 93       	push	r31
    83ba:	80 91 ee 24 	lds	r24, 0x24EE
    83be:	90 91 ef 24 	lds	r25, 0x24EF
    83c2:	00 97       	sbiw	r24, 0x00	; 0
    83c4:	11 f0       	breq	.+4      	; 0x83ca <__vector_123+0x3e>
    83c6:	0e 94 6d 3e 	call	0x7cda	; 0x7cda <updateTxBuffer>
    83ca:	ff 91       	pop	r31
    83cc:	ef 91       	pop	r30
    83ce:	bf 91       	pop	r27
    83d0:	af 91       	pop	r26
    83d2:	9f 91       	pop	r25
    83d4:	8f 91       	pop	r24
    83d6:	7f 91       	pop	r23
    83d8:	6f 91       	pop	r22
    83da:	5f 91       	pop	r21
    83dc:	4f 91       	pop	r20
    83de:	3f 91       	pop	r19
    83e0:	2f 91       	pop	r18
    83e2:	0f 90       	pop	r0
    83e4:	0b be       	out	0x3b, r0	; 59
    83e6:	0f 90       	pop	r0
    83e8:	09 be       	out	0x39, r0	; 57
    83ea:	0f 90       	pop	r0
    83ec:	08 be       	out	0x38, r0	; 56
    83ee:	0f 90       	pop	r0
    83f0:	0f be       	out	0x3f, r0	; 63
    83f2:	0f 90       	pop	r0
    83f4:	1f 90       	pop	r1
    83f6:	18 95       	reti

000083f8 <hal_enableUartRxInt>:
    83f8:	cf 93       	push	r28
    83fa:	df 93       	push	r29
    83fc:	00 d0       	rcall	.+0      	; 0x83fe <hal_enableUartRxInt+0x6>
    83fe:	cd b7       	in	r28, 0x3d	; 61
    8400:	de b7       	in	r29, 0x3e	; 62
    8402:	8a 83       	std	Y+2, r24	; 0x02
    8404:	9b 83       	std	Y+3, r25	; 0x03
    8406:	8f b7       	in	r24, 0x3f	; 63
    8408:	89 83       	std	Y+1, r24	; 0x01
    840a:	f8 94       	cli
    840c:	ea 81       	ldd	r30, Y+2	; 0x02
    840e:	fb 81       	ldd	r31, Y+3	; 0x03
    8410:	80 91 4c 21 	lds	r24, 0x214C
    8414:	90 91 4d 21 	lds	r25, 0x214D
    8418:	24 81       	ldd	r18, Z+4	; 0x04
    841a:	35 81       	ldd	r19, Z+5	; 0x05
    841c:	28 17       	cp	r18, r24
    841e:	39 07       	cpc	r19, r25
    8420:	21 f0       	breq	.+8      	; 0x842a <hal_enableUartRxInt+0x32>
    8422:	89 81       	ldd	r24, Y+1	; 0x01
    8424:	8f bf       	out	0x3f, r24	; 63
    8426:	8e ef       	ldi	r24, 0xFE	; 254
    8428:	17 c0       	rjmp	.+46     	; 0x8458 <hal_enableUartRxInt+0x60>
    842a:	ea 81       	ldd	r30, Y+2	; 0x02
    842c:	fb 81       	ldd	r31, Y+3	; 0x03
    842e:	01 90       	ld	r0, Z+
    8430:	f0 81       	ld	r31, Z
    8432:	e0 2d       	mov	r30, r0
    8434:	a1 85       	ldd	r26, Z+9	; 0x09
    8436:	b2 85       	ldd	r27, Z+10	; 0x0a
    8438:	13 96       	adiw	r26, 0x03	; 3
    843a:	8c 91       	ld	r24, X
    843c:	13 97       	sbiw	r26, 0x03	; 3
    843e:	8f 7c       	andi	r24, 0xCF	; 207
    8440:	13 96       	adiw	r26, 0x03	; 3
    8442:	8c 93       	st	X, r24
    8444:	13 97       	sbiw	r26, 0x03	; 3
    8446:	01 84       	ldd	r0, Z+9	; 0x09
    8448:	f2 85       	ldd	r31, Z+10	; 0x0a
    844a:	e0 2d       	mov	r30, r0
    844c:	83 81       	ldd	r24, Z+3	; 0x03
    844e:	80 63       	ori	r24, 0x30	; 48
    8450:	83 83       	std	Z+3, r24	; 0x03
    8452:	89 81       	ldd	r24, Y+1	; 0x01
    8454:	8f bf       	out	0x3f, r24	; 63
    8456:	80 e0       	ldi	r24, 0x00	; 0
    8458:	23 96       	adiw	r28, 0x03	; 3
    845a:	cd bf       	out	0x3d, r28	; 61
    845c:	de bf       	out	0x3e, r29	; 62
    845e:	df 91       	pop	r29
    8460:	cf 91       	pop	r28
    8462:	08 95       	ret

00008464 <hal_disableUartRxInt>:
    8464:	cf 93       	push	r28
    8466:	df 93       	push	r29
    8468:	00 d0       	rcall	.+0      	; 0x846a <hal_disableUartRxInt+0x6>
    846a:	cd b7       	in	r28, 0x3d	; 61
    846c:	de b7       	in	r29, 0x3e	; 62
    846e:	8a 83       	std	Y+2, r24	; 0x02
    8470:	9b 83       	std	Y+3, r25	; 0x03
    8472:	8f b7       	in	r24, 0x3f	; 63
    8474:	89 83       	std	Y+1, r24	; 0x01
    8476:	f8 94       	cli
    8478:	ea 81       	ldd	r30, Y+2	; 0x02
    847a:	fb 81       	ldd	r31, Y+3	; 0x03
    847c:	80 91 4c 21 	lds	r24, 0x214C
    8480:	90 91 4d 21 	lds	r25, 0x214D
    8484:	24 81       	ldd	r18, Z+4	; 0x04
    8486:	35 81       	ldd	r19, Z+5	; 0x05
    8488:	28 17       	cp	r18, r24
    848a:	39 07       	cpc	r19, r25
    848c:	21 f0       	breq	.+8      	; 0x8496 <hal_disableUartRxInt+0x32>
    848e:	89 81       	ldd	r24, Y+1	; 0x01
    8490:	8f bf       	out	0x3f, r24	; 63
    8492:	8e ef       	ldi	r24, 0xFE	; 254
    8494:	0e c0       	rjmp	.+28     	; 0x84b2 <hal_disableUartRxInt+0x4e>
    8496:	ea 81       	ldd	r30, Y+2	; 0x02
    8498:	fb 81       	ldd	r31, Y+3	; 0x03
    849a:	01 90       	ld	r0, Z+
    849c:	f0 81       	ld	r31, Z
    849e:	e0 2d       	mov	r30, r0
    84a0:	01 84       	ldd	r0, Z+9	; 0x09
    84a2:	f2 85       	ldd	r31, Z+10	; 0x0a
    84a4:	e0 2d       	mov	r30, r0
    84a6:	83 81       	ldd	r24, Z+3	; 0x03
    84a8:	8f 7c       	andi	r24, 0xCF	; 207
    84aa:	83 83       	std	Z+3, r24	; 0x03
    84ac:	89 81       	ldd	r24, Y+1	; 0x01
    84ae:	8f bf       	out	0x3f, r24	; 63
    84b0:	80 e0       	ldi	r24, 0x00	; 0
    84b2:	23 96       	adiw	r28, 0x03	; 3
    84b4:	cd bf       	out	0x3d, r28	; 61
    84b6:	de bf       	out	0x3e, r29	; 62
    84b8:	df 91       	pop	r29
    84ba:	cf 91       	pop	r28
    84bc:	08 95       	ret

000084be <hal_uartWriteByte>:
    84be:	cf 93       	push	r28
    84c0:	df 93       	push	r29
    84c2:	00 d0       	rcall	.+0      	; 0x84c4 <hal_uartWriteByte+0x6>
    84c4:	cd b7       	in	r28, 0x3d	; 61
    84c6:	de b7       	in	r29, 0x3e	; 62
    84c8:	8a 83       	std	Y+2, r24	; 0x02
    84ca:	9b 83       	std	Y+3, r25	; 0x03
    84cc:	8f b7       	in	r24, 0x3f	; 63
    84ce:	89 83       	std	Y+1, r24	; 0x01
    84d0:	f8 94       	cli
    84d2:	ea 81       	ldd	r30, Y+2	; 0x02
    84d4:	fb 81       	ldd	r31, Y+3	; 0x03
    84d6:	80 91 4c 21 	lds	r24, 0x214C
    84da:	90 91 4d 21 	lds	r25, 0x214D
    84de:	24 81       	ldd	r18, Z+4	; 0x04
    84e0:	35 81       	ldd	r19, Z+5	; 0x05
    84e2:	28 17       	cp	r18, r24
    84e4:	39 07       	cpc	r19, r25
    84e6:	21 f0       	breq	.+8      	; 0x84f0 <hal_uartWriteByte+0x32>
    84e8:	89 81       	ldd	r24, Y+1	; 0x01
    84ea:	8f bf       	out	0x3f, r24	; 63
    84ec:	8e ef       	ldi	r24, 0xFE	; 254
    84ee:	1a c0       	rjmp	.+52     	; 0x8524 <hal_uartWriteByte+0x66>
    84f0:	ea 81       	ldd	r30, Y+2	; 0x02
    84f2:	fb 81       	ldd	r31, Y+3	; 0x03
    84f4:	01 90       	ld	r0, Z+
    84f6:	f0 81       	ld	r31, Z
    84f8:	e0 2d       	mov	r30, r0
    84fa:	83 85       	ldd	r24, Z+11	; 0x0b
    84fc:	88 23       	and	r24, r24
    84fe:	21 f0       	breq	.+8      	; 0x8508 <hal_uartWriteByte+0x4a>
    8500:	89 81       	ldd	r24, Y+1	; 0x01
    8502:	8f bf       	out	0x3f, r24	; 63
    8504:	81 ef       	ldi	r24, 0xF1	; 241
    8506:	0e c0       	rjmp	.+28     	; 0x8524 <hal_uartWriteByte+0x66>
    8508:	81 e0       	ldi	r24, 0x01	; 1
    850a:	83 87       	std	Z+11, r24	; 0x0b
    850c:	89 81       	ldd	r24, Y+1	; 0x01
    850e:	8f bf       	out	0x3f, r24	; 63
    8510:	a1 85       	ldd	r26, Z+9	; 0x09
    8512:	b2 85       	ldd	r27, Z+10	; 0x0a
    8514:	11 96       	adiw	r26, 0x01	; 1
    8516:	8c 91       	ld	r24, X
    8518:	11 97       	sbiw	r26, 0x01	; 1
    851a:	85 ff       	sbrs	r24, 5
    851c:	fb cf       	rjmp	.-10     	; 0x8514 <hal_uartWriteByte+0x56>
    851e:	6c 93       	st	X, r22
    8520:	13 86       	std	Z+11, r1	; 0x0b
    8522:	80 e0       	ldi	r24, 0x00	; 0
    8524:	23 96       	adiw	r28, 0x03	; 3
    8526:	cd bf       	out	0x3d, r28	; 61
    8528:	de bf       	out	0x3e, r29	; 62
    852a:	df 91       	pop	r29
    852c:	cf 91       	pop	r28
    852e:	08 95       	ret

00008530 <hal_uartReadBlock>:
    8530:	8f 92       	push	r8
    8532:	9f 92       	push	r9
    8534:	af 92       	push	r10
    8536:	bf 92       	push	r11
    8538:	cf 92       	push	r12
    853a:	df 92       	push	r13
    853c:	ef 92       	push	r14
    853e:	ff 92       	push	r15
    8540:	0f 93       	push	r16
    8542:	1f 93       	push	r17
    8544:	cf 93       	push	r28
    8546:	df 93       	push	r29
    8548:	cd b7       	in	r28, 0x3d	; 61
    854a:	de b7       	in	r29, 0x3e	; 62
    854c:	61 97       	sbiw	r28, 0x11	; 17
    854e:	cd bf       	out	0x3d, r28	; 61
    8550:	de bf       	out	0x3e, r29	; 62
    8552:	88 8b       	std	Y+16, r24	; 0x10
    8554:	99 8b       	std	Y+17, r25	; 0x11
    8556:	db 01       	movw	r26, r22
    8558:	8f b7       	in	r24, 0x3f	; 63
    855a:	89 83       	std	Y+1, r24	; 0x01
    855c:	f8 94       	cli
    855e:	e8 89       	ldd	r30, Y+16	; 0x10
    8560:	f9 89       	ldd	r31, Y+17	; 0x11
    8562:	80 91 4c 21 	lds	r24, 0x214C
    8566:	90 91 4d 21 	lds	r25, 0x214D
    856a:	24 81       	ldd	r18, Z+4	; 0x04
    856c:	35 81       	ldd	r19, Z+5	; 0x05
    856e:	28 17       	cp	r18, r24
    8570:	39 07       	cpc	r19, r25
    8572:	21 f0       	breq	.+8      	; 0x857c <hal_uartReadBlock+0x4c>
    8574:	89 81       	ldd	r24, Y+1	; 0x01
    8576:	8f bf       	out	0x3f, r24	; 63
    8578:	8e ef       	ldi	r24, 0xFE	; 254
    857a:	5f c0       	rjmp	.+190    	; 0x863a <hal_uartReadBlock+0x10a>
    857c:	e8 89       	ldd	r30, Y+16	; 0x10
    857e:	f9 89       	ldd	r31, Y+17	; 0x11
    8580:	80 80       	ld	r8, Z
    8582:	91 80       	ldd	r9, Z+1	; 0x01
    8584:	f4 01       	movw	r30, r8
    8586:	84 85       	ldd	r24, Z+12	; 0x0c
    8588:	88 23       	and	r24, r24
    858a:	21 f0       	breq	.+8      	; 0x8594 <hal_uartReadBlock+0x64>
    858c:	89 81       	ldd	r24, Y+1	; 0x01
    858e:	8f bf       	out	0x3f, r24	; 63
    8590:	81 ef       	ldi	r24, 0xF1	; 241
    8592:	53 c0       	rjmp	.+166    	; 0x863a <hal_uartReadBlock+0x10a>
    8594:	81 e0       	ldi	r24, 0x01	; 1
    8596:	f4 01       	movw	r30, r8
    8598:	84 87       	std	Z+12, r24	; 0x0c
    859a:	21 85       	ldd	r18, Z+9	; 0x09
    859c:	32 85       	ldd	r19, Z+10	; 0x0a
    859e:	f9 01       	movw	r30, r18
    85a0:	83 81       	ldd	r24, Z+3	; 0x03
    85a2:	8f 7c       	andi	r24, 0xCF	; 207
    85a4:	83 83       	std	Z+3, r24	; 0x03
    85a6:	89 81       	ldd	r24, Y+1	; 0x01
    85a8:	8f bf       	out	0x3f, r24	; 63
    85aa:	f4 01       	movw	r30, r8
    85ac:	67 87       	std	Z+15, r22	; 0x0f
    85ae:	70 8b       	std	Z+16, r23	; 0x10
    85b0:	43 8b       	std	Z+19, r20	; 0x13
    85b2:	54 8b       	std	Z+20, r21	; 0x14
    85b4:	17 8a       	std	Z+23, r1	; 0x17
    85b6:	10 8e       	std	Z+24, r1	; 0x18
    85b8:	83 8d       	ldd	r24, Z+27	; 0x1b
    85ba:	94 8d       	ldd	r25, Z+28	; 0x1c
    85bc:	18 16       	cp	r1, r24
    85be:	19 06       	cpc	r1, r25
    85c0:	ac f5       	brge	.+106    	; 0x862c <hal_uartReadBlock+0xfc>
    85c2:	80 81       	ld	r24, Z
    85c4:	83 50       	subi	r24, 0x03	; 3
    85c6:	83 31       	cpi	r24, 0x13	; 19
    85c8:	30 f4       	brcc	.+12     	; 0x85d6 <hal_uartReadBlock+0xa6>
    85ca:	e8 2f       	mov	r30, r24
    85cc:	f0 e0       	ldi	r31, 0x00	; 0
    85ce:	e6 5a       	subi	r30, 0xA6	; 166
    85d0:	fe 4d       	sbci	r31, 0xDE	; 222
    85d2:	60 81       	ld	r22, Z
    85d4:	01 c0       	rjmp	.+2      	; 0x85d8 <hal_uartReadBlock+0xa8>
    85d6:	6b e4       	ldi	r22, 0x4B	; 75
    85d8:	f4 01       	movw	r30, r8
    85da:	a1 84       	ldd	r10, Z+9	; 0x09
    85dc:	b2 84       	ldd	r11, Z+10	; 0x0a
    85de:	aa 82       	std	Y+2, r10	; 0x02
    85e0:	bb 82       	std	Y+3, r11	; 0x03
    85e2:	ac 83       	std	Y+4, r26	; 0x04
    85e4:	bd 83       	std	Y+5, r27	; 0x05
    85e6:	1e 82       	std	Y+6, r1	; 0x06
    85e8:	81 e0       	ldi	r24, 0x01	; 1
    85ea:	8f 83       	std	Y+7, r24	; 0x07
    85ec:	18 86       	std	Y+8, r1	; 0x08
    85ee:	89 87       	std	Y+9, r24	; 0x09
    85f0:	4a 87       	std	Y+10, r20	; 0x0a
    85f2:	5b 87       	std	Y+11, r21	; 0x0b
    85f4:	1c 86       	std	Y+12, r1	; 0x0c
    85f6:	8d 87       	std	Y+13, r24	; 0x0d
    85f8:	6e 87       	std	Y+14, r22	; 0x0e
    85fa:	1f 86       	std	Y+15, r1	; 0x0f
    85fc:	83 8d       	ldd	r24, Z+27	; 0x1b
    85fe:	94 8d       	ldd	r25, Z+28	; 0x1c
    8600:	cc 80       	ldd	r12, Y+4	; 0x04
    8602:	dd 80       	ldd	r13, Y+5	; 0x05
    8604:	ee 24       	eor	r14, r14
    8606:	ff 24       	eor	r15, r15
    8608:	f3 94       	inc	r15
    860a:	00 e0       	ldi	r16, 0x00	; 0
    860c:	11 e0       	ldi	r17, 0x01	; 1
    860e:	2a 85       	ldd	r18, Y+10	; 0x0a
    8610:	3b 85       	ldd	r19, Y+11	; 0x0b
    8612:	40 e0       	ldi	r20, 0x00	; 0
    8614:	51 e0       	ldi	r21, 0x01	; 1
    8616:	70 e0       	ldi	r23, 0x00	; 0
    8618:	0e 94 aa 4e 	call	0x9d54	; 0x9d54 <hal_configureDmaChannel>
    861c:	d4 01       	movw	r26, r8
    861e:	5b 96       	adiw	r26, 0x1b	; 27
    8620:	8d 91       	ld	r24, X+
    8622:	9c 91       	ld	r25, X
    8624:	5c 97       	sbiw	r26, 0x1c	; 28
    8626:	0e 94 bc 50 	call	0xa178	; 0xa178 <hal_dmaEnableChannel>
    862a:	06 c0       	rjmp	.+12     	; 0x8638 <hal_uartReadBlock+0x108>
    862c:	01 84       	ldd	r0, Z+9	; 0x09
    862e:	f2 85       	ldd	r31, Z+10	; 0x0a
    8630:	e0 2d       	mov	r30, r0
    8632:	83 81       	ldd	r24, Z+3	; 0x03
    8634:	80 63       	ori	r24, 0x30	; 48
    8636:	83 83       	std	Z+3, r24	; 0x03
    8638:	80 e0       	ldi	r24, 0x00	; 0
    863a:	61 96       	adiw	r28, 0x11	; 17
    863c:	cd bf       	out	0x3d, r28	; 61
    863e:	de bf       	out	0x3e, r29	; 62
    8640:	df 91       	pop	r29
    8642:	cf 91       	pop	r28
    8644:	1f 91       	pop	r17
    8646:	0f 91       	pop	r16
    8648:	ff 90       	pop	r15
    864a:	ef 90       	pop	r14
    864c:	df 90       	pop	r13
    864e:	cf 90       	pop	r12
    8650:	bf 90       	pop	r11
    8652:	af 90       	pop	r10
    8654:	9f 90       	pop	r9
    8656:	8f 90       	pop	r8
    8658:	08 95       	ret

0000865a <hal_uartWriteBlock>:
    865a:	8f 92       	push	r8
    865c:	9f 92       	push	r9
    865e:	af 92       	push	r10
    8660:	bf 92       	push	r11
    8662:	cf 92       	push	r12
    8664:	df 92       	push	r13
    8666:	ef 92       	push	r14
    8668:	ff 92       	push	r15
    866a:	0f 93       	push	r16
    866c:	1f 93       	push	r17
    866e:	cf 93       	push	r28
    8670:	df 93       	push	r29
    8672:	cd b7       	in	r28, 0x3d	; 61
    8674:	de b7       	in	r29, 0x3e	; 62
    8676:	61 97       	sbiw	r28, 0x11	; 17
    8678:	cd bf       	out	0x3d, r28	; 61
    867a:	de bf       	out	0x3e, r29	; 62
    867c:	88 8b       	std	Y+16, r24	; 0x10
    867e:	99 8b       	std	Y+17, r25	; 0x11
    8680:	db 01       	movw	r26, r22
    8682:	8f b7       	in	r24, 0x3f	; 63
    8684:	89 83       	std	Y+1, r24	; 0x01
    8686:	f8 94       	cli
    8688:	e8 89       	ldd	r30, Y+16	; 0x10
    868a:	f9 89       	ldd	r31, Y+17	; 0x11
    868c:	80 91 4c 21 	lds	r24, 0x214C
    8690:	90 91 4d 21 	lds	r25, 0x214D
    8694:	24 81       	ldd	r18, Z+4	; 0x04
    8696:	35 81       	ldd	r19, Z+5	; 0x05
    8698:	28 17       	cp	r18, r24
    869a:	39 07       	cpc	r19, r25
    869c:	21 f0       	breq	.+8      	; 0x86a6 <hal_uartWriteBlock+0x4c>
    869e:	89 81       	ldd	r24, Y+1	; 0x01
    86a0:	8f bf       	out	0x3f, r24	; 63
    86a2:	8e ef       	ldi	r24, 0xFE	; 254
    86a4:	a1 c0       	rjmp	.+322    	; 0x87e8 <hal_uartWriteBlock+0x18e>
    86a6:	e8 89       	ldd	r30, Y+16	; 0x10
    86a8:	f9 89       	ldd	r31, Y+17	; 0x11
    86aa:	80 80       	ld	r8, Z
    86ac:	91 80       	ldd	r9, Z+1	; 0x01
    86ae:	f4 01       	movw	r30, r8
    86b0:	83 85       	ldd	r24, Z+11	; 0x0b
    86b2:	88 23       	and	r24, r24
    86b4:	21 f0       	breq	.+8      	; 0x86be <hal_uartWriteBlock+0x64>
    86b6:	89 81       	ldd	r24, Y+1	; 0x01
    86b8:	8f bf       	out	0x3f, r24	; 63
    86ba:	81 ef       	ldi	r24, 0xF1	; 241
    86bc:	95 c0       	rjmp	.+298    	; 0x87e8 <hal_uartWriteBlock+0x18e>
    86be:	81 e0       	ldi	r24, 0x01	; 1
    86c0:	f4 01       	movw	r30, r8
    86c2:	83 87       	std	Z+11, r24	; 0x0b
    86c4:	21 85       	ldd	r18, Z+9	; 0x09
    86c6:	32 85       	ldd	r19, Z+10	; 0x0a
    86c8:	f9 01       	movw	r30, r18
    86ca:	83 81       	ldd	r24, Z+3	; 0x03
    86cc:	8c 7f       	andi	r24, 0xFC	; 252
    86ce:	83 83       	std	Z+3, r24	; 0x03
    86d0:	89 81       	ldd	r24, Y+1	; 0x01
    86d2:	8f bf       	out	0x3f, r24	; 63
    86d4:	f4 01       	movw	r30, r8
    86d6:	65 87       	std	Z+13, r22	; 0x0d
    86d8:	76 87       	std	Z+14, r23	; 0x0e
    86da:	41 8b       	std	Z+17, r20	; 0x11
    86dc:	52 8b       	std	Z+18, r21	; 0x12
    86de:	15 8a       	std	Z+21, r1	; 0x15
    86e0:	16 8a       	std	Z+22, r1	; 0x16
    86e2:	0f b6       	in	r0, 0x3f	; 63
    86e4:	07 fe       	sbrs	r0, 7
    86e6:	1b c0       	rjmp	.+54     	; 0x871e <hal_uartWriteBlock+0xc4>
    86e8:	80 91 a0 00 	lds	r24, 0x00A0
    86ec:	81 30       	cpi	r24, 0x01	; 1
    86ee:	b9 f0       	breq	.+46     	; 0x871e <hal_uartWriteBlock+0xc4>
    86f0:	87 8d       	ldd	r24, Z+31	; 0x1f
    86f2:	90 a1       	lds	r25, 0x40
    86f4:	00 97       	sbiw	r24, 0x00	; 0
    86f6:	91 f5       	brne	.+100    	; 0x875c <hal_uartWriteBlock+0x102>
    86f8:	12 c0       	rjmp	.+36     	; 0x871e <hal_uartWriteBlock+0xc4>
    86fa:	da 01       	movw	r26, r20
    86fc:	11 96       	adiw	r26, 0x01	; 1
    86fe:	2c 91       	ld	r18, X
    8700:	11 97       	sbiw	r26, 0x01	; 1
    8702:	25 ff       	sbrs	r18, 5
    8704:	fa cf       	rjmp	.-12     	; 0x86fa <hal_uartWriteBlock+0xa0>
    8706:	d4 01       	movw	r26, r8
    8708:	1d 96       	adiw	r26, 0x0d	; 13
    870a:	ed 91       	ld	r30, X+
    870c:	fc 91       	ld	r31, X
    870e:	1e 97       	sbiw	r26, 0x0e	; 14
    8710:	e8 0f       	add	r30, r24
    8712:	f9 1f       	adc	r31, r25
    8714:	20 81       	ld	r18, Z
    8716:	fa 01       	movw	r30, r20
    8718:	20 83       	st	Z, r18
    871a:	01 96       	adiw	r24, 0x01	; 1
    871c:	02 c0       	rjmp	.+4      	; 0x8722 <hal_uartWriteBlock+0xc8>
    871e:	80 e0       	ldi	r24, 0x00	; 0
    8720:	90 e0       	ldi	r25, 0x00	; 0
    8722:	d4 01       	movw	r26, r8
    8724:	51 96       	adiw	r26, 0x11	; 17
    8726:	2d 91       	ld	r18, X+
    8728:	3c 91       	ld	r19, X
    872a:	52 97       	sbiw	r26, 0x12	; 18
    872c:	82 17       	cp	r24, r18
    872e:	93 07       	cpc	r25, r19
    8730:	28 f4       	brcc	.+10     	; 0x873c <hal_uartWriteBlock+0xe2>
    8732:	19 96       	adiw	r26, 0x09	; 9
    8734:	4d 91       	ld	r20, X+
    8736:	5c 91       	ld	r21, X
    8738:	1a 97       	sbiw	r26, 0x0a	; 10
    873a:	df cf       	rjmp	.-66     	; 0x86fa <hal_uartWriteBlock+0xa0>
    873c:	d4 01       	movw	r26, r8
    873e:	5f 96       	adiw	r26, 0x1f	; 31
    8740:	ed 91       	ld	r30, X+
    8742:	fc 91       	ld	r31, X
    8744:	90 97       	sbiw	r26, 0x20	; 32
    8746:	30 97       	sbiw	r30, 0x00	; 0
    8748:	11 f0       	breq	.+4      	; 0x874e <hal_uartWriteBlock+0xf4>
    874a:	c9 01       	movw	r24, r18
    874c:	19 95       	eicall
    874e:	f4 01       	movw	r30, r8
    8750:	11 8a       	std	Z+17, r1	; 0x11
    8752:	12 8a       	std	Z+18, r1	; 0x12
    8754:	15 86       	std	Z+13, r1	; 0x0d
    8756:	16 86       	std	Z+14, r1	; 0x0e
    8758:	13 86       	std	Z+11, r1	; 0x0b
    875a:	45 c0       	rjmp	.+138    	; 0x87e6 <hal_uartWriteBlock+0x18c>
    875c:	f4 01       	movw	r30, r8
    875e:	81 8d       	ldd	r24, Z+25	; 0x19
    8760:	92 8d       	ldd	r25, Z+26	; 0x1a
    8762:	18 16       	cp	r1, r24
    8764:	19 06       	cpc	r1, r25
    8766:	cc f5       	brge	.+114    	; 0x87da <hal_uartWriteBlock+0x180>
    8768:	80 81       	ld	r24, Z
    876a:	83 50       	subi	r24, 0x03	; 3
    876c:	83 31       	cpi	r24, 0x13	; 19
    876e:	30 f4       	brcc	.+12     	; 0x877c <hal_uartWriteBlock+0x122>
    8770:	e8 2f       	mov	r30, r24
    8772:	f0 e0       	ldi	r31, 0x00	; 0
    8774:	e3 59       	subi	r30, 0x93	; 147
    8776:	fe 4d       	sbci	r31, 0xDE	; 222
    8778:	60 81       	ld	r22, Z
    877a:	01 c0       	rjmp	.+2      	; 0x877e <hal_uartWriteBlock+0x124>
    877c:	6c e4       	ldi	r22, 0x4C	; 76
    877e:	aa 83       	std	Y+2, r26	; 0x02
    8780:	bb 83       	std	Y+3, r27	; 0x03
    8782:	d4 01       	movw	r26, r8
    8784:	19 96       	adiw	r26, 0x09	; 9
    8786:	cc 90       	ld	r12, X
    8788:	19 97       	sbiw	r26, 0x09	; 9
    878a:	1a 96       	adiw	r26, 0x0a	; 10
    878c:	dc 90       	ld	r13, X
    878e:	1a 97       	sbiw	r26, 0x0a	; 10
    8790:	cc 82       	std	Y+4, r12	; 0x04
    8792:	dd 82       	std	Y+5, r13	; 0x05
    8794:	81 e0       	ldi	r24, 0x01	; 1
    8796:	8e 83       	std	Y+6, r24	; 0x06
    8798:	1f 82       	std	Y+7, r1	; 0x07
    879a:	88 87       	std	Y+8, r24	; 0x08
    879c:	19 86       	std	Y+9, r1	; 0x09
    879e:	4a 87       	std	Y+10, r20	; 0x0a
    87a0:	5b 87       	std	Y+11, r21	; 0x0b
    87a2:	1c 86       	std	Y+12, r1	; 0x0c
    87a4:	8d 87       	std	Y+13, r24	; 0x0d
    87a6:	6e 87       	std	Y+14, r22	; 0x0e
    87a8:	1f 86       	std	Y+15, r1	; 0x0f
    87aa:	59 96       	adiw	r26, 0x19	; 25
    87ac:	8d 91       	ld	r24, X+
    87ae:	9c 91       	ld	r25, X
    87b0:	5a 97       	sbiw	r26, 0x1a	; 26
    87b2:	aa 80       	ldd	r10, Y+2	; 0x02
    87b4:	bb 80       	ldd	r11, Y+3	; 0x03
    87b6:	ee 24       	eor	r14, r14
    87b8:	e3 94       	inc	r14
    87ba:	ff 24       	eor	r15, r15
    87bc:	01 e0       	ldi	r16, 0x01	; 1
    87be:	10 e0       	ldi	r17, 0x00	; 0
    87c0:	2a 85       	ldd	r18, Y+10	; 0x0a
    87c2:	3b 85       	ldd	r19, Y+11	; 0x0b
    87c4:	40 e0       	ldi	r20, 0x00	; 0
    87c6:	51 e0       	ldi	r21, 0x01	; 1
    87c8:	70 e0       	ldi	r23, 0x00	; 0
    87ca:	0e 94 aa 4e 	call	0x9d54	; 0x9d54 <hal_configureDmaChannel>
    87ce:	f4 01       	movw	r30, r8
    87d0:	81 8d       	ldd	r24, Z+25	; 0x19
    87d2:	92 8d       	ldd	r25, Z+26	; 0x1a
    87d4:	0e 94 bc 50 	call	0xa178	; 0xa178 <hal_dmaEnableChannel>
    87d8:	06 c0       	rjmp	.+12     	; 0x87e6 <hal_uartWriteBlock+0x18c>
    87da:	01 84       	ldd	r0, Z+9	; 0x09
    87dc:	f2 85       	ldd	r31, Z+10	; 0x0a
    87de:	e0 2d       	mov	r30, r0
    87e0:	83 81       	ldd	r24, Z+3	; 0x03
    87e2:	83 60       	ori	r24, 0x03	; 3
    87e4:	83 83       	std	Z+3, r24	; 0x03
    87e6:	80 e0       	ldi	r24, 0x00	; 0
    87e8:	61 96       	adiw	r28, 0x11	; 17
    87ea:	cd bf       	out	0x3d, r28	; 61
    87ec:	de bf       	out	0x3e, r29	; 62
    87ee:	df 91       	pop	r29
    87f0:	cf 91       	pop	r28
    87f2:	1f 91       	pop	r17
    87f4:	0f 91       	pop	r16
    87f6:	ff 90       	pop	r15
    87f8:	ef 90       	pop	r14
    87fa:	df 90       	pop	r13
    87fc:	cf 90       	pop	r12
    87fe:	bf 90       	pop	r11
    8800:	af 90       	pop	r10
    8802:	9f 90       	pop	r9
    8804:	8f 90       	pop	r8
    8806:	08 95       	ret

00008808 <hal_uartGetBaudRate>:
    8808:	0f 93       	push	r16
    880a:	1f 93       	push	r17
    880c:	cf 93       	push	r28
    880e:	df 93       	push	r29
    8810:	00 d0       	rcall	.+0      	; 0x8812 <hal_uartGetBaudRate+0xa>
    8812:	cd b7       	in	r28, 0x3d	; 61
    8814:	de b7       	in	r29, 0x3e	; 62
    8816:	8a 83       	std	Y+2, r24	; 0x02
    8818:	9b 83       	std	Y+3, r25	; 0x03
    881a:	8f b7       	in	r24, 0x3f	; 63
    881c:	89 83       	std	Y+1, r24	; 0x01
    881e:	f8 94       	cli
    8820:	ea 81       	ldd	r30, Y+2	; 0x02
    8822:	fb 81       	ldd	r31, Y+3	; 0x03
    8824:	80 91 4c 21 	lds	r24, 0x214C
    8828:	90 91 4d 21 	lds	r25, 0x214D
    882c:	24 81       	ldd	r18, Z+4	; 0x04
    882e:	35 81       	ldd	r19, Z+5	; 0x05
    8830:	28 17       	cp	r18, r24
    8832:	39 07       	cpc	r19, r25
    8834:	39 f0       	breq	.+14     	; 0x8844 <hal_uartGetBaudRate+0x3c>
    8836:	89 81       	ldd	r24, Y+1	; 0x01
    8838:	8f bf       	out	0x3f, r24	; 63
    883a:	0e ef       	ldi	r16, 0xFE	; 254
    883c:	1f ef       	ldi	r17, 0xFF	; 255
    883e:	2f ef       	ldi	r18, 0xFF	; 255
    8840:	3f ef       	ldi	r19, 0xFF	; 255
    8842:	0b c0       	rjmp	.+22     	; 0x885a <hal_uartGetBaudRate+0x52>
    8844:	ea 81       	ldd	r30, Y+2	; 0x02
    8846:	fb 81       	ldd	r31, Y+3	; 0x03
    8848:	01 90       	ld	r0, Z+
    884a:	f0 81       	ld	r31, Z
    884c:	e0 2d       	mov	r30, r0
    884e:	89 81       	ldd	r24, Y+1	; 0x01
    8850:	8f bf       	out	0x3f, r24	; 63
    8852:	01 81       	ldd	r16, Z+1	; 0x01
    8854:	12 81       	ldd	r17, Z+2	; 0x02
    8856:	23 81       	ldd	r18, Z+3	; 0x03
    8858:	34 81       	ldd	r19, Z+4	; 0x04
    885a:	b8 01       	movw	r22, r16
    885c:	c9 01       	movw	r24, r18
    885e:	23 96       	adiw	r28, 0x03	; 3
    8860:	cd bf       	out	0x3d, r28	; 61
    8862:	de bf       	out	0x3e, r29	; 62
    8864:	df 91       	pop	r29
    8866:	cf 91       	pop	r28
    8868:	1f 91       	pop	r17
    886a:	0f 91       	pop	r16
    886c:	08 95       	ret

0000886e <hal_uartGetDataAddress>:
    886e:	0f 93       	push	r16
    8870:	1f 93       	push	r17
    8872:	cf 93       	push	r28
    8874:	df 93       	push	r29
    8876:	00 d0       	rcall	.+0      	; 0x8878 <hal_uartGetDataAddress+0xa>
    8878:	cd b7       	in	r28, 0x3d	; 61
    887a:	de b7       	in	r29, 0x3e	; 62
    887c:	8a 83       	std	Y+2, r24	; 0x02
    887e:	9b 83       	std	Y+3, r25	; 0x03
    8880:	8f b7       	in	r24, 0x3f	; 63
    8882:	89 83       	std	Y+1, r24	; 0x01
    8884:	f8 94       	cli
    8886:	ea 81       	ldd	r30, Y+2	; 0x02
    8888:	fb 81       	ldd	r31, Y+3	; 0x03
    888a:	80 91 4c 21 	lds	r24, 0x214C
    888e:	90 91 4d 21 	lds	r25, 0x214D
    8892:	24 81       	ldd	r18, Z+4	; 0x04
    8894:	35 81       	ldd	r19, Z+5	; 0x05
    8896:	28 17       	cp	r18, r24
    8898:	39 07       	cpc	r19, r25
    889a:	39 f0       	breq	.+14     	; 0x88aa <hal_uartGetDataAddress+0x3c>
    889c:	89 81       	ldd	r24, Y+1	; 0x01
    889e:	8f bf       	out	0x3f, r24	; 63
    88a0:	0e ef       	ldi	r16, 0xFE	; 254
    88a2:	1f ef       	ldi	r17, 0xFF	; 255
    88a4:	2f ef       	ldi	r18, 0xFF	; 255
    88a6:	3f ef       	ldi	r19, 0xFF	; 255
    88a8:	0d c0       	rjmp	.+26     	; 0x88c4 <hal_uartGetDataAddress+0x56>
    88aa:	ea 81       	ldd	r30, Y+2	; 0x02
    88ac:	fb 81       	ldd	r31, Y+3	; 0x03
    88ae:	01 90       	ld	r0, Z+
    88b0:	f0 81       	ld	r31, Z
    88b2:	e0 2d       	mov	r30, r0
    88b4:	89 81       	ldd	r24, Y+1	; 0x01
    88b6:	8f bf       	out	0x3f, r24	; 63
    88b8:	01 85       	ldd	r16, Z+9	; 0x09
    88ba:	12 85       	ldd	r17, Z+10	; 0x0a
    88bc:	22 27       	eor	r18, r18
    88be:	17 fd       	sbrc	r17, 7
    88c0:	20 95       	com	r18
    88c2:	32 2f       	mov	r19, r18
    88c4:	b8 01       	movw	r22, r16
    88c6:	c9 01       	movw	r24, r18
    88c8:	23 96       	adiw	r28, 0x03	; 3
    88ca:	cd bf       	out	0x3d, r28	; 61
    88cc:	de bf       	out	0x3e, r29	; 62
    88ce:	df 91       	pop	r29
    88d0:	cf 91       	pop	r28
    88d2:	1f 91       	pop	r17
    88d4:	0f 91       	pop	r16
    88d6:	08 95       	ret

000088d8 <hal_requestUartChannel>:
    88d8:	0f 93       	push	r16
    88da:	1f 93       	push	r17
    88dc:	cf 93       	push	r28
    88de:	df 93       	push	r29
    88e0:	cd b7       	in	r28, 0x3d	; 61
    88e2:	de b7       	in	r29, 0x3e	; 62
    88e4:	2b 97       	sbiw	r28, 0x0b	; 11
    88e6:	cd bf       	out	0x3d, r28	; 61
    88e8:	de bf       	out	0x3e, r29	; 62
    88ea:	28 2f       	mov	r18, r24
    88ec:	8f b7       	in	r24, 0x3f	; 63
    88ee:	89 83       	std	Y+1, r24	; 0x01
    88f0:	f8 94       	cli
    88f2:	26 31       	cpi	r18, 0x16	; 22
    88f4:	28 f0       	brcs	.+10     	; 0x8900 <hal_requestUartChannel+0x28>
    88f6:	89 81       	ldd	r24, Y+1	; 0x01
    88f8:	8f bf       	out	0x3f, r24	; 63
    88fa:	82 ef       	ldi	r24, 0xF2	; 242
    88fc:	9f ef       	ldi	r25, 0xFF	; 255
    88fe:	49 c1       	rjmp	.+658    	; 0x8b92 <hal_requestUartChannel+0x2ba>
    8900:	e0 91 4c 21 	lds	r30, 0x214C
    8904:	f0 91 4d 21 	lds	r31, 0x214D
    8908:	82 81       	ldd	r24, Z+2	; 0x02
    890a:	93 81       	ldd	r25, Z+3	; 0x03
    890c:	e0 91 4c 21 	lds	r30, 0x214C
    8910:	f0 91 4d 21 	lds	r31, 0x214D
    8914:	0b c0       	rjmp	.+22     	; 0x892c <hal_requestUartChannel+0x54>
    8916:	ea 81       	ldd	r30, Y+2	; 0x02
    8918:	fb 81       	ldd	r31, Y+3	; 0x03
    891a:	01 90       	ld	r0, Z+
    891c:	f0 81       	ld	r31, Z
    891e:	e0 2d       	mov	r30, r0
    8920:	30 81       	ld	r19, Z
    8922:	32 17       	cp	r19, r18
    8924:	59 f0       	breq	.+22     	; 0x893c <hal_requestUartChannel+0x64>
    8926:	01 97       	sbiw	r24, 0x01	; 1
    8928:	ea 81       	ldd	r30, Y+2	; 0x02
    892a:	fb 81       	ldd	r31, Y+3	; 0x03
    892c:	40 85       	ldd	r20, Z+8	; 0x08
    892e:	51 85       	ldd	r21, Z+9	; 0x09
    8930:	4a 83       	std	Y+2, r20	; 0x02
    8932:	5b 83       	std	Y+3, r21	; 0x03
    8934:	18 16       	cp	r1, r24
    8936:	19 06       	cpc	r1, r25
    8938:	74 f3       	brlt	.-36     	; 0x8916 <hal_requestUartChannel+0x3e>
    893a:	03 c0       	rjmp	.+6      	; 0x8942 <hal_requestUartChannel+0x6a>
    893c:	30 97       	sbiw	r30, 0x00	; 0
    893e:	09 f0       	breq	.+2      	; 0x8942 <hal_requestUartChannel+0x6a>
    8940:	1f c1       	rjmp	.+574    	; 0x8b80 <hal_requestUartChannel+0x2a8>
    8942:	81 e2       	ldi	r24, 0x21	; 33
    8944:	90 e0       	ldi	r25, 0x00	; 0
    8946:	2b 87       	std	Y+11, r18	; 0x0b
    8948:	0e 94 5e 8b 	call	0x116bc	; 0x116bc <utl_createLink>
    894c:	8a 83       	std	Y+2, r24	; 0x02
    894e:	9b 83       	std	Y+3, r25	; 0x03
    8950:	8a 81       	ldd	r24, Y+2	; 0x02
    8952:	9b 81       	ldd	r25, Y+3	; 0x03
    8954:	2b 85       	ldd	r18, Y+11	; 0x0b
    8956:	97 fd       	sbrc	r25, 7
    8958:	0d c0       	rjmp	.+26     	; 0x8974 <hal_requestUartChannel+0x9c>
    895a:	80 91 4c 21 	lds	r24, 0x214C
    895e:	90 91 4d 21 	lds	r25, 0x214D
    8962:	6a 81       	ldd	r22, Y+2	; 0x02
    8964:	7b 81       	ldd	r23, Y+3	; 0x03
    8966:	41 e0       	ldi	r20, 0x01	; 1
    8968:	0e 94 6e 89 	call	0x112dc	; 0x112dc <utl_insertLink>
    896c:	8a 81       	ldd	r24, Y+2	; 0x02
    896e:	9b 81       	ldd	r25, Y+3	; 0x03
    8970:	2b 85       	ldd	r18, Y+11	; 0x0b
    8972:	02 c0       	rjmp	.+4      	; 0x8978 <hal_requestUartChannel+0xa0>
    8974:	8f ef       	ldi	r24, 0xFF	; 255
    8976:	9f ef       	ldi	r25, 0xFF	; 255
    8978:	8c 83       	std	Y+4, r24	; 0x04
    897a:	9d 83       	std	Y+5, r25	; 0x05
    897c:	8c 81       	ldd	r24, Y+4	; 0x04
    897e:	9d 81       	ldd	r25, Y+5	; 0x05
    8980:	97 ff       	sbrs	r25, 7
    8982:	05 c0       	rjmp	.+10     	; 0x898e <hal_requestUartChannel+0xb6>
    8984:	89 81       	ldd	r24, Y+1	; 0x01
    8986:	8f bf       	out	0x3f, r24	; 63
    8988:	8f ef       	ldi	r24, 0xFF	; 255
    898a:	9f ef       	ldi	r25, 0xFF	; 255
    898c:	02 c1       	rjmp	.+516    	; 0x8b92 <hal_requestUartChannel+0x2ba>
    898e:	ec 81       	ldd	r30, Y+4	; 0x04
    8990:	fd 81       	ldd	r31, Y+5	; 0x05
    8992:	00 81       	ld	r16, Z
    8994:	11 81       	ldd	r17, Z+1	; 0x01
    8996:	f8 01       	movw	r30, r16
    8998:	20 83       	st	Z, r18
    899a:	11 82       	std	Z+1, r1	; 0x01
    899c:	12 82       	std	Z+2, r1	; 0x02
    899e:	13 82       	std	Z+3, r1	; 0x03
    89a0:	14 82       	std	Z+4, r1	; 0x04
    89a2:	29 30       	cpi	r18, 0x09	; 9
    89a4:	09 f4       	brne	.+2      	; 0x89a8 <hal_requestUartChannel+0xd0>
    89a6:	68 c0       	rjmp	.+208    	; 0x8a78 <hal_requestUartChannel+0x1a0>
    89a8:	2a 30       	cpi	r18, 0x0A	; 10
    89aa:	40 f4       	brcc	.+16     	; 0x89bc <hal_requestUartChannel+0xe4>
    89ac:	23 30       	cpi	r18, 0x03	; 3
    89ae:	81 f1       	breq	.+96     	; 0x8a10 <hal_requestUartChannel+0x138>
    89b0:	26 30       	cpi	r18, 0x06	; 6
    89b2:	09 f4       	brne	.+2      	; 0x89b6 <hal_requestUartChannel+0xde>
    89b4:	47 c0       	rjmp	.+142    	; 0x8a44 <hal_requestUartChannel+0x16c>
    89b6:	22 23       	and	r18, r18
    89b8:	89 f0       	breq	.+34     	; 0x89dc <hal_requestUartChannel+0x104>
    89ba:	e7 c0       	rjmp	.+462    	; 0x8b8a <hal_requestUartChannel+0x2b2>
    89bc:	2f 30       	cpi	r18, 0x0F	; 15
    89be:	09 f4       	brne	.+2      	; 0x89c2 <hal_requestUartChannel+0xea>
    89c0:	90 c0       	rjmp	.+288    	; 0x8ae2 <hal_requestUartChannel+0x20a>
    89c2:	20 31       	cpi	r18, 0x10	; 16
    89c4:	20 f4       	brcc	.+8      	; 0x89ce <hal_requestUartChannel+0xf6>
    89c6:	2c 30       	cpi	r18, 0x0C	; 12
    89c8:	09 f0       	breq	.+2      	; 0x89cc <hal_requestUartChannel+0xf4>
    89ca:	df c0       	rjmp	.+446    	; 0x8b8a <hal_requestUartChannel+0x2b2>
    89cc:	6f c0       	rjmp	.+222    	; 0x8aac <hal_requestUartChannel+0x1d4>
    89ce:	22 31       	cpi	r18, 0x12	; 18
    89d0:	09 f4       	brne	.+2      	; 0x89d4 <hal_requestUartChannel+0xfc>
    89d2:	a2 c0       	rjmp	.+324    	; 0x8b18 <hal_requestUartChannel+0x240>
    89d4:	25 31       	cpi	r18, 0x15	; 21
    89d6:	09 f0       	breq	.+2      	; 0x89da <hal_requestUartChannel+0x102>
    89d8:	d8 c0       	rjmp	.+432    	; 0x8b8a <hal_requestUartChannel+0x2b2>
    89da:	b8 c0       	rjmp	.+368    	; 0x8b4c <hal_requestUartChannel+0x274>
    89dc:	80 ea       	ldi	r24, 0xA0	; 160
    89de:	98 e0       	ldi	r25, 0x08	; 8
    89e0:	f8 01       	movw	r30, r16
    89e2:	81 87       	std	Z+9, r24	; 0x09
    89e4:	92 87       	std	Z+10, r25	; 0x0a
    89e6:	84 e0       	ldi	r24, 0x04	; 4
    89e8:	8e 83       	std	Y+6, r24	; 0x06
    89ea:	88 e0       	ldi	r24, 0x08	; 8
    89ec:	8f 83       	std	Y+7, r24	; 0x07
    89ee:	81 e0       	ldi	r24, 0x01	; 1
    89f0:	88 87       	std	Y+8, r24	; 0x08
    89f2:	19 86       	std	Y+9, r1	; 0x09
    89f4:	1a 86       	std	Y+10, r1	; 0x0a
    89f6:	82 e0       	ldi	r24, 0x02	; 2
    89f8:	24 e0       	ldi	r18, 0x04	; 4
    89fa:	38 e0       	ldi	r19, 0x08	; 8
    89fc:	41 e0       	ldi	r20, 0x01	; 1
    89fe:	50 e0       	ldi	r21, 0x00	; 0
    8a00:	60 e0       	ldi	r22, 0x00	; 0
    8a02:	0e 94 91 2a 	call	0x5522	; 0x5522 <hal_configureGpioPort>
    8a06:	00 93 e0 24 	sts	0x24E0, r16
    8a0a:	10 93 e1 24 	sts	0x24E1, r17
    8a0e:	bd c0       	rjmp	.+378    	; 0x8b8a <hal_requestUartChannel+0x2b2>
    8a10:	80 eb       	ldi	r24, 0xB0	; 176
    8a12:	98 e0       	ldi	r25, 0x08	; 8
    8a14:	f8 01       	movw	r30, r16
    8a16:	81 87       	std	Z+9, r24	; 0x09
    8a18:	92 87       	std	Z+10, r25	; 0x0a
    8a1a:	80 e4       	ldi	r24, 0x40	; 64
    8a1c:	8e 83       	std	Y+6, r24	; 0x06
    8a1e:	80 e8       	ldi	r24, 0x80	; 128
    8a20:	8f 83       	std	Y+7, r24	; 0x07
    8a22:	81 e0       	ldi	r24, 0x01	; 1
    8a24:	88 87       	std	Y+8, r24	; 0x08
    8a26:	19 86       	std	Y+9, r1	; 0x09
    8a28:	1a 86       	std	Y+10, r1	; 0x0a
    8a2a:	82 e0       	ldi	r24, 0x02	; 2
    8a2c:	20 e4       	ldi	r18, 0x40	; 64
    8a2e:	30 e8       	ldi	r19, 0x80	; 128
    8a30:	41 e0       	ldi	r20, 0x01	; 1
    8a32:	50 e0       	ldi	r21, 0x00	; 0
    8a34:	60 e0       	ldi	r22, 0x00	; 0
    8a36:	0e 94 91 2a 	call	0x5522	; 0x5522 <hal_configureGpioPort>
    8a3a:	00 93 e2 24 	sts	0x24E2, r16
    8a3e:	10 93 e3 24 	sts	0x24E3, r17
    8a42:	a3 c0       	rjmp	.+326    	; 0x8b8a <hal_requestUartChannel+0x2b2>
    8a44:	80 ea       	ldi	r24, 0xA0	; 160
    8a46:	99 e0       	ldi	r25, 0x09	; 9
    8a48:	f8 01       	movw	r30, r16
    8a4a:	81 87       	std	Z+9, r24	; 0x09
    8a4c:	92 87       	std	Z+10, r25	; 0x0a
    8a4e:	84 e0       	ldi	r24, 0x04	; 4
    8a50:	8e 83       	std	Y+6, r24	; 0x06
    8a52:	88 e0       	ldi	r24, 0x08	; 8
    8a54:	8f 83       	std	Y+7, r24	; 0x07
    8a56:	81 e0       	ldi	r24, 0x01	; 1
    8a58:	88 87       	std	Y+8, r24	; 0x08
    8a5a:	19 86       	std	Y+9, r1	; 0x09
    8a5c:	1a 86       	std	Y+10, r1	; 0x0a
    8a5e:	83 e0       	ldi	r24, 0x03	; 3
    8a60:	24 e0       	ldi	r18, 0x04	; 4
    8a62:	38 e0       	ldi	r19, 0x08	; 8
    8a64:	41 e0       	ldi	r20, 0x01	; 1
    8a66:	50 e0       	ldi	r21, 0x00	; 0
    8a68:	60 e0       	ldi	r22, 0x00	; 0
    8a6a:	0e 94 91 2a 	call	0x5522	; 0x5522 <hal_configureGpioPort>
    8a6e:	00 93 e4 24 	sts	0x24E4, r16
    8a72:	10 93 e5 24 	sts	0x24E5, r17
    8a76:	89 c0       	rjmp	.+274    	; 0x8b8a <hal_requestUartChannel+0x2b2>
    8a78:	80 eb       	ldi	r24, 0xB0	; 176
    8a7a:	99 e0       	ldi	r25, 0x09	; 9
    8a7c:	f8 01       	movw	r30, r16
    8a7e:	81 87       	std	Z+9, r24	; 0x09
    8a80:	92 87       	std	Z+10, r25	; 0x0a
    8a82:	80 e4       	ldi	r24, 0x40	; 64
    8a84:	8e 83       	std	Y+6, r24	; 0x06
    8a86:	80 e8       	ldi	r24, 0x80	; 128
    8a88:	8f 83       	std	Y+7, r24	; 0x07
    8a8a:	81 e0       	ldi	r24, 0x01	; 1
    8a8c:	88 87       	std	Y+8, r24	; 0x08
    8a8e:	19 86       	std	Y+9, r1	; 0x09
    8a90:	1a 86       	std	Y+10, r1	; 0x0a
    8a92:	83 e0       	ldi	r24, 0x03	; 3
    8a94:	20 e4       	ldi	r18, 0x40	; 64
    8a96:	30 e8       	ldi	r19, 0x80	; 128
    8a98:	41 e0       	ldi	r20, 0x01	; 1
    8a9a:	50 e0       	ldi	r21, 0x00	; 0
    8a9c:	60 e0       	ldi	r22, 0x00	; 0
    8a9e:	0e 94 91 2a 	call	0x5522	; 0x5522 <hal_configureGpioPort>
    8aa2:	00 93 e6 24 	sts	0x24E6, r16
    8aa6:	10 93 e7 24 	sts	0x24E7, r17
    8aaa:	6f c0       	rjmp	.+222    	; 0x8b8a <hal_requestUartChannel+0x2b2>
    8aac:	80 ea       	ldi	r24, 0xA0	; 160
    8aae:	9a e0       	ldi	r25, 0x0A	; 10
    8ab0:	f8 01       	movw	r30, r16
    8ab2:	81 87       	std	Z+9, r24	; 0x09
    8ab4:	92 87       	std	Z+10, r25	; 0x0a
    8ab6:	84 e0       	ldi	r24, 0x04	; 4
    8ab8:	8e 83       	std	Y+6, r24	; 0x06
    8aba:	88 e0       	ldi	r24, 0x08	; 8
    8abc:	8f 83       	std	Y+7, r24	; 0x07
    8abe:	81 e0       	ldi	r24, 0x01	; 1
    8ac0:	88 87       	std	Y+8, r24	; 0x08
    8ac2:	85 e0       	ldi	r24, 0x05	; 5
    8ac4:	89 87       	std	Y+9, r24	; 0x09
    8ac6:	1a 86       	std	Y+10, r1	; 0x0a
    8ac8:	84 e0       	ldi	r24, 0x04	; 4
    8aca:	24 e0       	ldi	r18, 0x04	; 4
    8acc:	38 e0       	ldi	r19, 0x08	; 8
    8ace:	41 e0       	ldi	r20, 0x01	; 1
    8ad0:	55 e0       	ldi	r21, 0x05	; 5
    8ad2:	60 e0       	ldi	r22, 0x00	; 0
    8ad4:	0e 94 91 2a 	call	0x5522	; 0x5522 <hal_configureGpioPort>
    8ad8:	00 93 e8 24 	sts	0x24E8, r16
    8adc:	10 93 e9 24 	sts	0x24E9, r17
    8ae0:	54 c0       	rjmp	.+168    	; 0x8b8a <hal_requestUartChannel+0x2b2>
    8ae2:	80 eb       	ldi	r24, 0xB0	; 176
    8ae4:	9a e0       	ldi	r25, 0x0A	; 10
    8ae6:	f8 01       	movw	r30, r16
    8ae8:	81 87       	std	Z+9, r24	; 0x09
    8aea:	92 87       	std	Z+10, r25	; 0x0a
    8aec:	80 e4       	ldi	r24, 0x40	; 64
    8aee:	8e 83       	std	Y+6, r24	; 0x06
    8af0:	80 e8       	ldi	r24, 0x80	; 128
    8af2:	8f 83       	std	Y+7, r24	; 0x07
    8af4:	81 e0       	ldi	r24, 0x01	; 1
    8af6:	88 87       	std	Y+8, r24	; 0x08
    8af8:	85 e0       	ldi	r24, 0x05	; 5
    8afa:	89 87       	std	Y+9, r24	; 0x09
    8afc:	1a 86       	std	Y+10, r1	; 0x0a
    8afe:	84 e0       	ldi	r24, 0x04	; 4
    8b00:	20 e4       	ldi	r18, 0x40	; 64
    8b02:	30 e8       	ldi	r19, 0x80	; 128
    8b04:	41 e0       	ldi	r20, 0x01	; 1
    8b06:	55 e0       	ldi	r21, 0x05	; 5
    8b08:	60 e0       	ldi	r22, 0x00	; 0
    8b0a:	0e 94 91 2a 	call	0x5522	; 0x5522 <hal_configureGpioPort>
    8b0e:	00 93 ea 24 	sts	0x24EA, r16
    8b12:	10 93 eb 24 	sts	0x24EB, r17
    8b16:	39 c0       	rjmp	.+114    	; 0x8b8a <hal_requestUartChannel+0x2b2>
    8b18:	80 ea       	ldi	r24, 0xA0	; 160
    8b1a:	9b e0       	ldi	r25, 0x0B	; 11
    8b1c:	f8 01       	movw	r30, r16
    8b1e:	81 87       	std	Z+9, r24	; 0x09
    8b20:	92 87       	std	Z+10, r25	; 0x0a
    8b22:	84 e0       	ldi	r24, 0x04	; 4
    8b24:	8e 83       	std	Y+6, r24	; 0x06
    8b26:	88 e0       	ldi	r24, 0x08	; 8
    8b28:	8f 83       	std	Y+7, r24	; 0x07
    8b2a:	81 e0       	ldi	r24, 0x01	; 1
    8b2c:	88 87       	std	Y+8, r24	; 0x08
    8b2e:	85 e0       	ldi	r24, 0x05	; 5
    8b30:	89 87       	std	Y+9, r24	; 0x09
    8b32:	1a 86       	std	Y+10, r1	; 0x0a
    8b34:	24 e0       	ldi	r18, 0x04	; 4
    8b36:	38 e0       	ldi	r19, 0x08	; 8
    8b38:	41 e0       	ldi	r20, 0x01	; 1
    8b3a:	55 e0       	ldi	r21, 0x05	; 5
    8b3c:	60 e0       	ldi	r22, 0x00	; 0
    8b3e:	0e 94 91 2a 	call	0x5522	; 0x5522 <hal_configureGpioPort>
    8b42:	00 93 ec 24 	sts	0x24EC, r16
    8b46:	10 93 ed 24 	sts	0x24ED, r17
    8b4a:	1f c0       	rjmp	.+62     	; 0x8b8a <hal_requestUartChannel+0x2b2>
    8b4c:	80 eb       	ldi	r24, 0xB0	; 176
    8b4e:	9b e0       	ldi	r25, 0x0B	; 11
    8b50:	f8 01       	movw	r30, r16
    8b52:	81 87       	std	Z+9, r24	; 0x09
    8b54:	92 87       	std	Z+10, r25	; 0x0a
    8b56:	80 e4       	ldi	r24, 0x40	; 64
    8b58:	8e 83       	std	Y+6, r24	; 0x06
    8b5a:	80 e8       	ldi	r24, 0x80	; 128
    8b5c:	8f 83       	std	Y+7, r24	; 0x07
    8b5e:	81 e0       	ldi	r24, 0x01	; 1
    8b60:	88 87       	std	Y+8, r24	; 0x08
    8b62:	85 e0       	ldi	r24, 0x05	; 5
    8b64:	89 87       	std	Y+9, r24	; 0x09
    8b66:	1a 86       	std	Y+10, r1	; 0x0a
    8b68:	20 e4       	ldi	r18, 0x40	; 64
    8b6a:	30 e8       	ldi	r19, 0x80	; 128
    8b6c:	41 e0       	ldi	r20, 0x01	; 1
    8b6e:	55 e0       	ldi	r21, 0x05	; 5
    8b70:	60 e0       	ldi	r22, 0x00	; 0
    8b72:	0e 94 91 2a 	call	0x5522	; 0x5522 <hal_configureGpioPort>
    8b76:	00 93 ee 24 	sts	0x24EE, r16
    8b7a:	10 93 ef 24 	sts	0x24EF, r17
    8b7e:	05 c0       	rjmp	.+10     	; 0x8b8a <hal_requestUartChannel+0x2b2>
    8b80:	89 81       	ldd	r24, Y+1	; 0x01
    8b82:	8f bf       	out	0x3f, r24	; 63
    8b84:	89 ef       	ldi	r24, 0xF9	; 249
    8b86:	9f ef       	ldi	r25, 0xFF	; 255
    8b88:	04 c0       	rjmp	.+8      	; 0x8b92 <hal_requestUartChannel+0x2ba>
    8b8a:	89 81       	ldd	r24, Y+1	; 0x01
    8b8c:	8f bf       	out	0x3f, r24	; 63
    8b8e:	8c 81       	ldd	r24, Y+4	; 0x04
    8b90:	9d 81       	ldd	r25, Y+5	; 0x05
    8b92:	2b 96       	adiw	r28, 0x0b	; 11
    8b94:	cd bf       	out	0x3d, r28	; 61
    8b96:	de bf       	out	0x3e, r29	; 62
    8b98:	df 91       	pop	r29
    8b9a:	cf 91       	pop	r28
    8b9c:	1f 91       	pop	r17
    8b9e:	0f 91       	pop	r16
    8ba0:	08 95       	ret

00008ba2 <hal_releaseUartChannel>:
    8ba2:	cf 93       	push	r28
    8ba4:	df 93       	push	r29
    8ba6:	00 d0       	rcall	.+0      	; 0x8ba8 <hal_releaseUartChannel+0x6>
    8ba8:	cd b7       	in	r28, 0x3d	; 61
    8baa:	de b7       	in	r29, 0x3e	; 62
    8bac:	8a 83       	std	Y+2, r24	; 0x02
    8bae:	9b 83       	std	Y+3, r25	; 0x03
    8bb0:	8f b7       	in	r24, 0x3f	; 63
    8bb2:	89 83       	std	Y+1, r24	; 0x01
    8bb4:	f8 94       	cli
    8bb6:	ea 81       	ldd	r30, Y+2	; 0x02
    8bb8:	fb 81       	ldd	r31, Y+3	; 0x03
    8bba:	80 91 4c 21 	lds	r24, 0x214C
    8bbe:	90 91 4d 21 	lds	r25, 0x214D
    8bc2:	24 81       	ldd	r18, Z+4	; 0x04
    8bc4:	35 81       	ldd	r19, Z+5	; 0x05
    8bc6:	28 17       	cp	r18, r24
    8bc8:	39 07       	cpc	r19, r25
    8bca:	21 f0       	breq	.+8      	; 0x8bd4 <hal_releaseUartChannel+0x32>
    8bcc:	89 81       	ldd	r24, Y+1	; 0x01
    8bce:	8f bf       	out	0x3f, r24	; 63
    8bd0:	8e ef       	ldi	r24, 0xFE	; 254
    8bd2:	c7 c0       	rjmp	.+398    	; 0x8d62 <hal_releaseUartChannel+0x1c0>
    8bd4:	ea 81       	ldd	r30, Y+2	; 0x02
    8bd6:	fb 81       	ldd	r31, Y+3	; 0x03
    8bd8:	01 90       	ld	r0, Z+
    8bda:	f0 81       	ld	r31, Z
    8bdc:	e0 2d       	mov	r30, r0
    8bde:	a1 85       	ldd	r26, Z+9	; 0x09
    8be0:	b2 85       	ldd	r27, Z+10	; 0x0a
    8be2:	13 96       	adiw	r26, 0x03	; 3
    8be4:	8c 91       	ld	r24, X
    8be6:	13 97       	sbiw	r26, 0x03	; 3
    8be8:	8f 7c       	andi	r24, 0xCF	; 207
    8bea:	13 96       	adiw	r26, 0x03	; 3
    8bec:	8c 93       	st	X, r24
    8bee:	a1 85       	ldd	r26, Z+9	; 0x09
    8bf0:	b2 85       	ldd	r27, Z+10	; 0x0a
    8bf2:	13 96       	adiw	r26, 0x03	; 3
    8bf4:	8c 91       	ld	r24, X
    8bf6:	13 97       	sbiw	r26, 0x03	; 3
    8bf8:	8c 7f       	andi	r24, 0xFC	; 252
    8bfa:	13 96       	adiw	r26, 0x03	; 3
    8bfc:	8c 93       	st	X, r24
    8bfe:	a1 85       	ldd	r26, Z+9	; 0x09
    8c00:	b2 85       	ldd	r27, Z+10	; 0x0a
    8c02:	13 96       	adiw	r26, 0x03	; 3
    8c04:	8c 91       	ld	r24, X
    8c06:	13 97       	sbiw	r26, 0x03	; 3
    8c08:	83 7f       	andi	r24, 0xF3	; 243
    8c0a:	13 96       	adiw	r26, 0x03	; 3
    8c0c:	8c 93       	st	X, r24
    8c0e:	a1 85       	ldd	r26, Z+9	; 0x09
    8c10:	b2 85       	ldd	r27, Z+10	; 0x0a
    8c12:	13 96       	adiw	r26, 0x03	; 3
    8c14:	8c 91       	ld	r24, X
    8c16:	13 97       	sbiw	r26, 0x03	; 3
    8c18:	8f 7c       	andi	r24, 0xCF	; 207
    8c1a:	13 96       	adiw	r26, 0x03	; 3
    8c1c:	8c 93       	st	X, r24
    8c1e:	a1 85       	ldd	r26, Z+9	; 0x09
    8c20:	b2 85       	ldd	r27, Z+10	; 0x0a
    8c22:	13 96       	adiw	r26, 0x03	; 3
    8c24:	8c 91       	ld	r24, X
    8c26:	13 97       	sbiw	r26, 0x03	; 3
    8c28:	8c 7f       	andi	r24, 0xFC	; 252
    8c2a:	13 96       	adiw	r26, 0x03	; 3
    8c2c:	8c 93       	st	X, r24
    8c2e:	a1 85       	ldd	r26, Z+9	; 0x09
    8c30:	b2 85       	ldd	r27, Z+10	; 0x0a
    8c32:	13 96       	adiw	r26, 0x03	; 3
    8c34:	8c 91       	ld	r24, X
    8c36:	13 97       	sbiw	r26, 0x03	; 3
    8c38:	83 7f       	andi	r24, 0xF3	; 243
    8c3a:	13 96       	adiw	r26, 0x03	; 3
    8c3c:	8c 93       	st	X, r24
    8c3e:	a1 85       	ldd	r26, Z+9	; 0x09
    8c40:	b2 85       	ldd	r27, Z+10	; 0x0a
    8c42:	14 96       	adiw	r26, 0x04	; 4
    8c44:	8c 91       	ld	r24, X
    8c46:	14 97       	sbiw	r26, 0x04	; 4
    8c48:	8f 7e       	andi	r24, 0xEF	; 239
    8c4a:	14 96       	adiw	r26, 0x04	; 4
    8c4c:	8c 93       	st	X, r24
    8c4e:	a1 85       	ldd	r26, Z+9	; 0x09
    8c50:	b2 85       	ldd	r27, Z+10	; 0x0a
    8c52:	14 96       	adiw	r26, 0x04	; 4
    8c54:	8c 91       	ld	r24, X
    8c56:	14 97       	sbiw	r26, 0x04	; 4
    8c58:	87 7f       	andi	r24, 0xF7	; 247
    8c5a:	14 96       	adiw	r26, 0x04	; 4
    8c5c:	8c 93       	st	X, r24
    8c5e:	a1 85       	ldd	r26, Z+9	; 0x09
    8c60:	b2 85       	ldd	r27, Z+10	; 0x0a
    8c62:	15 96       	adiw	r26, 0x05	; 5
    8c64:	8c 91       	ld	r24, X
    8c66:	15 97       	sbiw	r26, 0x05	; 5
    8c68:	8f 73       	andi	r24, 0x3F	; 63
    8c6a:	15 96       	adiw	r26, 0x05	; 5
    8c6c:	8c 93       	st	X, r24
    8c6e:	a1 85       	ldd	r26, Z+9	; 0x09
    8c70:	b2 85       	ldd	r27, Z+10	; 0x0a
    8c72:	15 96       	adiw	r26, 0x05	; 5
    8c74:	8c 91       	ld	r24, X
    8c76:	15 97       	sbiw	r26, 0x05	; 5
    8c78:	8f 7c       	andi	r24, 0xCF	; 207
    8c7a:	15 96       	adiw	r26, 0x05	; 5
    8c7c:	8c 93       	st	X, r24
    8c7e:	a1 85       	ldd	r26, Z+9	; 0x09
    8c80:	b2 85       	ldd	r27, Z+10	; 0x0a
    8c82:	15 96       	adiw	r26, 0x05	; 5
    8c84:	8c 91       	ld	r24, X
    8c86:	15 97       	sbiw	r26, 0x05	; 5
    8c88:	88 7f       	andi	r24, 0xF8	; 248
    8c8a:	15 96       	adiw	r26, 0x05	; 5
    8c8c:	8c 93       	st	X, r24
    8c8e:	a1 85       	ldd	r26, Z+9	; 0x09
    8c90:	b2 85       	ldd	r27, Z+10	; 0x0a
    8c92:	15 96       	adiw	r26, 0x05	; 5
    8c94:	8c 91       	ld	r24, X
    8c96:	15 97       	sbiw	r26, 0x05	; 5
    8c98:	87 7f       	andi	r24, 0xF7	; 247
    8c9a:	15 96       	adiw	r26, 0x05	; 5
    8c9c:	8c 93       	st	X, r24
    8c9e:	a1 85       	ldd	r26, Z+9	; 0x09
    8ca0:	b2 85       	ldd	r27, Z+10	; 0x0a
    8ca2:	16 96       	adiw	r26, 0x06	; 6
    8ca4:	8c 91       	ld	r24, X
    8ca6:	16 97       	sbiw	r26, 0x06	; 6
    8ca8:	16 96       	adiw	r26, 0x06	; 6
    8caa:	1c 92       	st	X, r1
    8cac:	a1 85       	ldd	r26, Z+9	; 0x09
    8cae:	b2 85       	ldd	r27, Z+10	; 0x0a
    8cb0:	17 96       	adiw	r26, 0x07	; 7
    8cb2:	8c 91       	ld	r24, X
    8cb4:	17 97       	sbiw	r26, 0x07	; 7
    8cb6:	80 7f       	andi	r24, 0xF0	; 240
    8cb8:	17 96       	adiw	r26, 0x07	; 7
    8cba:	8c 93       	st	X, r24
    8cbc:	a1 85       	ldd	r26, Z+9	; 0x09
    8cbe:	b2 85       	ldd	r27, Z+10	; 0x0a
    8cc0:	17 96       	adiw	r26, 0x07	; 7
    8cc2:	8c 91       	ld	r24, X
    8cc4:	17 97       	sbiw	r26, 0x07	; 7
    8cc6:	8f 70       	andi	r24, 0x0F	; 15
    8cc8:	17 96       	adiw	r26, 0x07	; 7
    8cca:	8c 93       	st	X, r24
    8ccc:	17 97       	sbiw	r26, 0x07	; 7
    8cce:	80 81       	ld	r24, Z
    8cd0:	89 30       	cpi	r24, 0x09	; 9
    8cd2:	21 f1       	breq	.+72     	; 0x8d1c <hal_releaseUartChannel+0x17a>
    8cd4:	8a 30       	cpi	r24, 0x0A	; 10
    8cd6:	38 f4       	brcc	.+14     	; 0x8ce6 <hal_releaseUartChannel+0x144>
    8cd8:	83 30       	cpi	r24, 0x03	; 3
    8cda:	b1 f0       	breq	.+44     	; 0x8d08 <hal_releaseUartChannel+0x166>
    8cdc:	86 30       	cpi	r24, 0x06	; 6
    8cde:	c9 f0       	breq	.+50     	; 0x8d12 <hal_releaseUartChannel+0x170>
    8ce0:	88 23       	and	r24, r24
    8ce2:	69 f0       	breq	.+26     	; 0x8cfe <hal_releaseUartChannel+0x15c>
    8ce4:	33 c0       	rjmp	.+102    	; 0x8d4c <hal_releaseUartChannel+0x1aa>
    8ce6:	8f 30       	cpi	r24, 0x0F	; 15
    8ce8:	19 f1       	breq	.+70     	; 0x8d30 <hal_releaseUartChannel+0x18e>
    8cea:	80 31       	cpi	r24, 0x10	; 16
    8cec:	18 f4       	brcc	.+6      	; 0x8cf4 <hal_releaseUartChannel+0x152>
    8cee:	8c 30       	cpi	r24, 0x0C	; 12
    8cf0:	69 f5       	brne	.+90     	; 0x8d4c <hal_releaseUartChannel+0x1aa>
    8cf2:	19 c0       	rjmp	.+50     	; 0x8d26 <hal_releaseUartChannel+0x184>
    8cf4:	82 31       	cpi	r24, 0x12	; 18
    8cf6:	09 f1       	breq	.+66     	; 0x8d3a <hal_releaseUartChannel+0x198>
    8cf8:	85 31       	cpi	r24, 0x15	; 21
    8cfa:	41 f5       	brne	.+80     	; 0x8d4c <hal_releaseUartChannel+0x1aa>
    8cfc:	23 c0       	rjmp	.+70     	; 0x8d44 <hal_releaseUartChannel+0x1a2>
    8cfe:	10 92 e0 24 	sts	0x24E0, r1
    8d02:	10 92 e1 24 	sts	0x24E1, r1
    8d06:	22 c0       	rjmp	.+68     	; 0x8d4c <hal_releaseUartChannel+0x1aa>
    8d08:	10 92 e2 24 	sts	0x24E2, r1
    8d0c:	10 92 e3 24 	sts	0x24E3, r1
    8d10:	1d c0       	rjmp	.+58     	; 0x8d4c <hal_releaseUartChannel+0x1aa>
    8d12:	10 92 e4 24 	sts	0x24E4, r1
    8d16:	10 92 e5 24 	sts	0x24E5, r1
    8d1a:	18 c0       	rjmp	.+48     	; 0x8d4c <hal_releaseUartChannel+0x1aa>
    8d1c:	10 92 e6 24 	sts	0x24E6, r1
    8d20:	10 92 e7 24 	sts	0x24E7, r1
    8d24:	13 c0       	rjmp	.+38     	; 0x8d4c <hal_releaseUartChannel+0x1aa>
    8d26:	10 92 e8 24 	sts	0x24E8, r1
    8d2a:	10 92 e9 24 	sts	0x24E9, r1
    8d2e:	0e c0       	rjmp	.+28     	; 0x8d4c <hal_releaseUartChannel+0x1aa>
    8d30:	10 92 ea 24 	sts	0x24EA, r1
    8d34:	10 92 eb 24 	sts	0x24EB, r1
    8d38:	09 c0       	rjmp	.+18     	; 0x8d4c <hal_releaseUartChannel+0x1aa>
    8d3a:	10 92 ec 24 	sts	0x24EC, r1
    8d3e:	10 92 ed 24 	sts	0x24ED, r1
    8d42:	04 c0       	rjmp	.+8      	; 0x8d4c <hal_releaseUartChannel+0x1aa>
    8d44:	10 92 ee 24 	sts	0x24EE, r1
    8d48:	10 92 ef 24 	sts	0x24EF, r1
    8d4c:	80 91 4c 21 	lds	r24, 0x214C
    8d50:	90 91 4d 21 	lds	r25, 0x214D
    8d54:	6a 81       	ldd	r22, Y+2	; 0x02
    8d56:	7b 81       	ldd	r23, Y+3	; 0x03
    8d58:	0e 94 6a 8a 	call	0x114d4	; 0x114d4 <utl_destroyLink>
    8d5c:	89 81       	ldd	r24, Y+1	; 0x01
    8d5e:	8f bf       	out	0x3f, r24	; 63
    8d60:	80 e0       	ldi	r24, 0x00	; 0
    8d62:	23 96       	adiw	r28, 0x03	; 3
    8d64:	cd bf       	out	0x3d, r28	; 61
    8d66:	de bf       	out	0x3e, r29	; 62
    8d68:	df 91       	pop	r29
    8d6a:	cf 91       	pop	r28
    8d6c:	08 95       	ret

00008d6e <hal_configureUartChannel>:
    8d6e:	4f 92       	push	r4
    8d70:	5f 92       	push	r5
    8d72:	6f 92       	push	r6
    8d74:	7f 92       	push	r7
    8d76:	8f 92       	push	r8
    8d78:	9f 92       	push	r9
    8d7a:	af 92       	push	r10
    8d7c:	bf 92       	push	r11
    8d7e:	cf 92       	push	r12
    8d80:	df 92       	push	r13
    8d82:	ef 92       	push	r14
    8d84:	ff 92       	push	r15
    8d86:	0f 93       	push	r16
    8d88:	1f 93       	push	r17
    8d8a:	cf 93       	push	r28
    8d8c:	df 93       	push	r29
    8d8e:	cd b7       	in	r28, 0x3d	; 61
    8d90:	de b7       	in	r29, 0x3e	; 62
    8d92:	69 97       	sbiw	r28, 0x19	; 25
    8d94:	cd bf       	out	0x3d, r28	; 61
    8d96:	de bf       	out	0x3e, r29	; 62
    8d98:	8a 83       	std	Y+2, r24	; 0x02
    8d9a:	9b 83       	std	Y+3, r25	; 0x03
    8d9c:	ac 82       	std	Y+4, r10	; 0x04
    8d9e:	bd 82       	std	Y+5, r11	; 0x05
    8da0:	ec 2d       	mov	r30, r12
    8da2:	ce 82       	std	Y+6, r12	; 0x06
    8da4:	df 82       	std	Y+7, r13	; 0x07
    8da6:	e8 86       	std	Y+8, r14	; 0x08
    8da8:	f9 86       	std	Y+9, r15	; 0x09
    8daa:	0a 87       	std	Y+10, r16	; 0x0a
    8dac:	1b 87       	std	Y+11, r17	; 0x0b
    8dae:	2c 87       	std	Y+12, r18	; 0x0c
    8db0:	3d 87       	std	Y+13, r19	; 0x0d
    8db2:	4e 87       	std	Y+14, r20	; 0x0e
    8db4:	5f 87       	std	Y+15, r21	; 0x0f
    8db6:	68 8b       	std	Y+16, r22	; 0x10
    8db8:	79 8b       	std	Y+17, r23	; 0x11
    8dba:	0b 2d       	mov	r16, r11
    8dbc:	1c 2d       	mov	r17, r12
    8dbe:	28 85       	ldd	r18, Y+8	; 0x08
    8dc0:	39 85       	ldd	r19, Y+9	; 0x09
    8dc2:	4a 85       	ldd	r20, Y+10	; 0x0a
    8dc4:	5b 85       	ldd	r21, Y+11	; 0x0b
    8dc6:	2e 8b       	std	Y+22, r18	; 0x16
    8dc8:	3f 8b       	std	Y+23, r19	; 0x17
    8dca:	48 8f       	std	Y+24, r20	; 0x18
    8dcc:	59 8f       	std	Y+25, r21	; 0x19
    8dce:	9f b7       	in	r25, 0x3f	; 63
    8dd0:	99 83       	std	Y+1, r25	; 0x01
    8dd2:	f8 94       	cli
    8dd4:	aa 20       	and	r10, r10
    8dd6:	21 f0       	breq	.+8      	; 0x8de0 <hal_configureUartChannel+0x72>
    8dd8:	89 81       	ldd	r24, Y+1	; 0x01
    8dda:	8f bf       	out	0x3f, r24	; 63
    8ddc:	88 ef       	ldi	r24, 0xF8	; 248
    8dde:	bc c2       	rjmp	.+1400   	; 0x9358 <hal_configureUartChannel+0x5ea>
    8de0:	e3 30       	cpi	r30, 0x03	; 3
    8de2:	20 f0       	brcs	.+8      	; 0x8dec <hal_configureUartChannel+0x7e>
    8de4:	89 81       	ldd	r24, Y+1	; 0x01
    8de6:	8f bf       	out	0x3f, r24	; 63
    8de8:	86 ef       	ldi	r24, 0xF6	; 246
    8dea:	b6 c2       	rjmp	.+1388   	; 0x9358 <hal_configureUartChannel+0x5ea>
    8dec:	04 30       	cpi	r16, 0x04	; 4
    8dee:	20 f0       	brcs	.+8      	; 0x8df8 <hal_configureUartChannel+0x8a>
    8df0:	89 81       	ldd	r24, Y+1	; 0x01
    8df2:	8f bf       	out	0x3f, r24	; 63
    8df4:	87 ef       	ldi	r24, 0xF7	; 247
    8df6:	b0 c2       	rjmp	.+1376   	; 0x9358 <hal_configureUartChannel+0x5ea>
    8df8:	31 e0       	ldi	r19, 0x01	; 1
    8dfa:	3d 15       	cp	r19, r13
    8dfc:	20 f4       	brcc	.+8      	; 0x8e06 <hal_configureUartChannel+0x98>
    8dfe:	89 81       	ldd	r24, Y+1	; 0x01
    8e00:	8f bf       	out	0x3f, r24	; 63
    8e02:	85 ef       	ldi	r24, 0xF5	; 245
    8e04:	a9 c2       	rjmp	.+1362   	; 0x9358 <hal_configureUartChannel+0x5ea>
    8e06:	6e 89       	ldd	r22, Y+22	; 0x16
    8e08:	7f 89       	ldd	r23, Y+23	; 0x17
    8e0a:	88 8d       	ldd	r24, Y+24	; 0x18
    8e0c:	99 8d       	ldd	r25, Y+25	; 0x19
    8e0e:	0e 94 6b ad 	call	0x15ad6	; 0x15ad6 <__floatunsisf>
    8e12:	6a 8b       	std	Y+18, r22	; 0x12
    8e14:	7b 8b       	std	Y+19, r23	; 0x13
    8e16:	8c 8b       	std	Y+20, r24	; 0x14
    8e18:	9d 8b       	std	Y+21, r25	; 0x15
    8e1a:	0e 94 c0 49 	call	0x9380	; 0x9380 <hal_getCpuFreq>
    8e1e:	0e 94 6b ad 	call	0x15ad6	; 0x15ad6 <__floatunsisf>
    8e22:	20 e0       	ldi	r18, 0x00	; 0
    8e24:	30 e0       	ldi	r19, 0x00	; 0
    8e26:	40 e0       	ldi	r20, 0x00	; 0
    8e28:	54 e3       	ldi	r21, 0x34	; 52
    8e2a:	0e 94 d4 ae 	call	0x15da8	; 0x15da8 <__mulsf3>
    8e2e:	9b 01       	movw	r18, r22
    8e30:	ac 01       	movw	r20, r24
    8e32:	6a 89       	ldd	r22, Y+18	; 0x12
    8e34:	7b 89       	ldd	r23, Y+19	; 0x13
    8e36:	8c 89       	ldd	r24, Y+20	; 0x14
    8e38:	9d 89       	ldd	r25, Y+21	; 0x15
    8e3a:	0e 94 91 ac 	call	0x15922	; 0x15922 <__cmpsf2>
    8e3e:	87 fd       	sbrc	r24, 7
    8e40:	14 c0       	rjmp	.+40     	; 0x8e6a <hal_configureUartChannel+0xfc>
    8e42:	0e 94 c0 49 	call	0x9380	; 0x9380 <hal_getCpuFreq>
    8e46:	0e 94 6b ad 	call	0x15ad6	; 0x15ad6 <__floatunsisf>
    8e4a:	20 e0       	ldi	r18, 0x00	; 0
    8e4c:	30 e0       	ldi	r19, 0x00	; 0
    8e4e:	40 e8       	ldi	r20, 0x80	; 128
    8e50:	5d e3       	ldi	r21, 0x3D	; 61
    8e52:	0e 94 d4 ae 	call	0x15da8	; 0x15da8 <__mulsf3>
    8e56:	9b 01       	movw	r18, r22
    8e58:	ac 01       	movw	r20, r24
    8e5a:	6a 89       	ldd	r22, Y+18	; 0x12
    8e5c:	7b 89       	ldd	r23, Y+19	; 0x13
    8e5e:	8c 89       	ldd	r24, Y+20	; 0x14
    8e60:	9d 89       	ldd	r25, Y+21	; 0x15
    8e62:	0e 94 c9 ae 	call	0x15d92	; 0x15d92 <__gesf2>
    8e66:	18 16       	cp	r1, r24
    8e68:	24 f4       	brge	.+8      	; 0x8e72 <hal_configureUartChannel+0x104>
    8e6a:	89 81       	ldd	r24, Y+1	; 0x01
    8e6c:	8f bf       	out	0x3f, r24	; 63
    8e6e:	84 ef       	ldi	r24, 0xF4	; 244
    8e70:	73 c2       	rjmp	.+1254   	; 0x9358 <hal_configureUartChannel+0x5ea>
    8e72:	ea 81       	ldd	r30, Y+2	; 0x02
    8e74:	fb 81       	ldd	r31, Y+3	; 0x03
    8e76:	80 91 4c 21 	lds	r24, 0x214C
    8e7a:	90 91 4d 21 	lds	r25, 0x214D
    8e7e:	24 81       	ldd	r18, Z+4	; 0x04
    8e80:	35 81       	ldd	r19, Z+5	; 0x05
    8e82:	28 17       	cp	r18, r24
    8e84:	39 07       	cpc	r19, r25
    8e86:	21 f0       	breq	.+8      	; 0x8e90 <hal_configureUartChannel+0x122>
    8e88:	89 81       	ldd	r24, Y+1	; 0x01
    8e8a:	8f bf       	out	0x3f, r24	; 63
    8e8c:	8e ef       	ldi	r24, 0xFE	; 254
    8e8e:	64 c2       	rjmp	.+1224   	; 0x9358 <hal_configureUartChannel+0x5ea>
    8e90:	ea 81       	ldd	r30, Y+2	; 0x02
    8e92:	fb 81       	ldd	r31, Y+3	; 0x03
    8e94:	80 80       	ld	r8, Z
    8e96:	91 80       	ldd	r9, Z+1	; 0x01
    8e98:	d4 01       	movw	r26, r8
    8e9a:	19 96       	adiw	r26, 0x09	; 9
    8e9c:	ed 91       	ld	r30, X+
    8e9e:	fc 91       	ld	r31, X
    8ea0:	1a 97       	sbiw	r26, 0x0a	; 10
    8ea2:	83 81       	ldd	r24, Z+3	; 0x03
    8ea4:	8f 7c       	andi	r24, 0xCF	; 207
    8ea6:	83 83       	std	Z+3, r24	; 0x03
    8ea8:	19 96       	adiw	r26, 0x09	; 9
    8eaa:	ed 91       	ld	r30, X+
    8eac:	fc 91       	ld	r31, X
    8eae:	1a 97       	sbiw	r26, 0x0a	; 10
    8eb0:	83 81       	ldd	r24, Z+3	; 0x03
    8eb2:	8c 7f       	andi	r24, 0xFC	; 252
    8eb4:	83 83       	std	Z+3, r24	; 0x03
    8eb6:	19 96       	adiw	r26, 0x09	; 9
    8eb8:	ed 91       	ld	r30, X+
    8eba:	fc 91       	ld	r31, X
    8ebc:	1a 97       	sbiw	r26, 0x0a	; 10
    8ebe:	83 81       	ldd	r24, Z+3	; 0x03
    8ec0:	83 7f       	andi	r24, 0xF3	; 243
    8ec2:	83 83       	std	Z+3, r24	; 0x03
    8ec4:	19 96       	adiw	r26, 0x09	; 9
    8ec6:	ed 91       	ld	r30, X+
    8ec8:	fc 91       	ld	r31, X
    8eca:	1a 97       	sbiw	r26, 0x0a	; 10
    8ecc:	84 81       	ldd	r24, Z+4	; 0x04
    8ece:	8f 7e       	andi	r24, 0xEF	; 239
    8ed0:	84 83       	std	Z+4, r24	; 0x04
    8ed2:	19 96       	adiw	r26, 0x09	; 9
    8ed4:	ed 91       	ld	r30, X+
    8ed6:	fc 91       	ld	r31, X
    8ed8:	1a 97       	sbiw	r26, 0x0a	; 10
    8eda:	84 81       	ldd	r24, Z+4	; 0x04
    8edc:	87 7f       	andi	r24, 0xF7	; 247
    8ede:	84 83       	std	Z+4, r24	; 0x04
    8ee0:	19 96       	adiw	r26, 0x09	; 9
    8ee2:	ed 91       	ld	r30, X+
    8ee4:	fc 91       	ld	r31, X
    8ee6:	1a 97       	sbiw	r26, 0x0a	; 10
    8ee8:	85 81       	ldd	r24, Z+5	; 0x05
    8eea:	8f 73       	andi	r24, 0x3F	; 63
    8eec:	85 83       	std	Z+5, r24	; 0x05
    8eee:	19 96       	adiw	r26, 0x09	; 9
    8ef0:	ed 91       	ld	r30, X+
    8ef2:	fc 91       	ld	r31, X
    8ef4:	1a 97       	sbiw	r26, 0x0a	; 10
    8ef6:	85 81       	ldd	r24, Z+5	; 0x05
    8ef8:	85 83       	std	Z+5, r24	; 0x05
    8efa:	19 96       	adiw	r26, 0x09	; 9
    8efc:	ed 91       	ld	r30, X+
    8efe:	fc 91       	ld	r31, X
    8f00:	1a 97       	sbiw	r26, 0x0a	; 10
    8f02:	85 81       	ldd	r24, Z+5	; 0x05
    8f04:	8f 7c       	andi	r24, 0xCF	; 207
    8f06:	85 83       	std	Z+5, r24	; 0x05
    8f08:	19 96       	adiw	r26, 0x09	; 9
    8f0a:	ed 91       	ld	r30, X+
    8f0c:	fc 91       	ld	r31, X
    8f0e:	1a 97       	sbiw	r26, 0x0a	; 10
    8f10:	85 81       	ldd	r24, Z+5	; 0x05
    8f12:	11 30       	cpi	r17, 0x01	; 1
    8f14:	19 f0       	breq	.+6      	; 0x8f1c <hal_configureUartChannel+0x1ae>
    8f16:	12 30       	cpi	r17, 0x02	; 2
    8f18:	21 f4       	brne	.+8      	; 0x8f22 <hal_configureUartChannel+0x1b4>
    8f1a:	02 c0       	rjmp	.+4      	; 0x8f20 <hal_configureUartChannel+0x1b2>
    8f1c:	80 62       	ori	r24, 0x20	; 32
    8f1e:	01 c0       	rjmp	.+2      	; 0x8f22 <hal_configureUartChannel+0x1b4>
    8f20:	80 63       	ori	r24, 0x30	; 48
    8f22:	85 83       	std	Z+5, r24	; 0x05
    8f24:	d4 01       	movw	r26, r8
    8f26:	19 96       	adiw	r26, 0x09	; 9
    8f28:	ed 91       	ld	r30, X+
    8f2a:	fc 91       	ld	r31, X
    8f2c:	1a 97       	sbiw	r26, 0x0a	; 10
    8f2e:	85 81       	ldd	r24, Z+5	; 0x05
    8f30:	88 7f       	andi	r24, 0xF8	; 248
    8f32:	85 83       	std	Z+5, r24	; 0x05
    8f34:	19 96       	adiw	r26, 0x09	; 9
    8f36:	ed 91       	ld	r30, X+
    8f38:	fc 91       	ld	r31, X
    8f3a:	1a 97       	sbiw	r26, 0x0a	; 10
    8f3c:	85 81       	ldd	r24, Z+5	; 0x05
    8f3e:	80 2b       	or	r24, r16
    8f40:	85 83       	std	Z+5, r24	; 0x05
    8f42:	19 96       	adiw	r26, 0x09	; 9
    8f44:	ed 91       	ld	r30, X+
    8f46:	fc 91       	ld	r31, X
    8f48:	1a 97       	sbiw	r26, 0x0a	; 10
    8f4a:	85 81       	ldd	r24, Z+5	; 0x05
    8f4c:	87 7f       	andi	r24, 0xF7	; 247
    8f4e:	85 83       	std	Z+5, r24	; 0x05
    8f50:	19 96       	adiw	r26, 0x09	; 9
    8f52:	ed 91       	ld	r30, X+
    8f54:	fc 91       	ld	r31, X
    8f56:	1a 97       	sbiw	r26, 0x0a	; 10
    8f58:	85 81       	ldd	r24, Z+5	; 0x05
    8f5a:	dd 0c       	add	r13, r13
    8f5c:	dd 0c       	add	r13, r13
    8f5e:	dd 0c       	add	r13, r13
    8f60:	d8 2a       	or	r13, r24
    8f62:	d5 82       	std	Z+5, r13	; 0x05
    8f64:	19 96       	adiw	r26, 0x09	; 9
    8f66:	ed 91       	ld	r30, X+
    8f68:	fc 91       	ld	r31, X
    8f6a:	1a 97       	sbiw	r26, 0x0a	; 10
    8f6c:	86 81       	ldd	r24, Z+6	; 0x06
    8f6e:	16 82       	std	Z+6, r1	; 0x06
    8f70:	19 96       	adiw	r26, 0x09	; 9
    8f72:	ed 91       	ld	r30, X+
    8f74:	fc 91       	ld	r31, X
    8f76:	1a 97       	sbiw	r26, 0x0a	; 10
    8f78:	87 81       	ldd	r24, Z+7	; 0x07
    8f7a:	80 7f       	andi	r24, 0xF0	; 240
    8f7c:	87 83       	std	Z+7, r24	; 0x07
    8f7e:	19 96       	adiw	r26, 0x09	; 9
    8f80:	ed 91       	ld	r30, X+
    8f82:	fc 91       	ld	r31, X
    8f84:	1a 97       	sbiw	r26, 0x0a	; 10
    8f86:	87 81       	ldd	r24, Z+7	; 0x07
    8f88:	8f 70       	andi	r24, 0x0F	; 15
    8f8a:	87 83       	std	Z+7, r24	; 0x07
    8f8c:	0e 94 c0 49 	call	0x9380	; 0x9380 <hal_getCpuFreq>
    8f90:	0e 94 6b ad 	call	0x15ad6	; 0x15ad6 <__floatunsisf>
    8f94:	6b 01       	movw	r12, r22
    8f96:	7c 01       	movw	r14, r24
    8f98:	6a 89       	ldd	r22, Y+18	; 0x12
    8f9a:	7b 89       	ldd	r23, Y+19	; 0x13
    8f9c:	8c 89       	ldd	r24, Y+20	; 0x14
    8f9e:	9d 89       	ldd	r25, Y+21	; 0x15
    8fa0:	20 e0       	ldi	r18, 0x00	; 0
    8fa2:	30 e0       	ldi	r19, 0x00	; 0
    8fa4:	40 e8       	ldi	r20, 0x80	; 128
    8fa6:	51 e4       	ldi	r21, 0x41	; 65
    8fa8:	0e 94 d4 ae 	call	0x15da8	; 0x15da8 <__mulsf3>
    8fac:	9b 01       	movw	r18, r22
    8fae:	ac 01       	movw	r20, r24
    8fb0:	c7 01       	movw	r24, r14
    8fb2:	b6 01       	movw	r22, r12
    8fb4:	0e 94 98 ac 	call	0x15930	; 0x15930 <__divsf3>
    8fb8:	d6 2e       	mov	r13, r22
    8fba:	c7 2e       	mov	r12, r23
    8fbc:	b8 2e       	mov	r11, r24
    8fbe:	a9 2e       	mov	r10, r25
    8fc0:	a6 01       	movw	r20, r12
    8fc2:	95 01       	movw	r18, r10
    8fc4:	85 2f       	mov	r24, r21
    8fc6:	94 2f       	mov	r25, r20
    8fc8:	a3 2f       	mov	r26, r19
    8fca:	b2 2f       	mov	r27, r18
    8fcc:	bc 01       	movw	r22, r24
    8fce:	cd 01       	movw	r24, r26
    8fd0:	20 e0       	ldi	r18, 0x00	; 0
    8fd2:	30 e0       	ldi	r19, 0x00	; 0
    8fd4:	40 e8       	ldi	r20, 0x80	; 128
    8fd6:	5f e3       	ldi	r21, 0x3F	; 63
    8fd8:	0e 94 ca ab 	call	0x15794	; 0x15794 <__subsf3>
    8fdc:	76 2e       	mov	r7, r22
    8fde:	67 2e       	mov	r6, r23
    8fe0:	58 2e       	mov	r5, r24
    8fe2:	49 2e       	mov	r4, r25
    8fe4:	06 2f       	mov	r16, r22
    8fe6:	17 2f       	mov	r17, r23
    8fe8:	72 01       	movw	r14, r4
    8fea:	a3 01       	movw	r20, r6
    8fec:	92 01       	movw	r18, r4
    8fee:	85 2f       	mov	r24, r21
    8ff0:	94 2f       	mov	r25, r20
    8ff2:	a3 2f       	mov	r26, r19
    8ff4:	b2 2f       	mov	r27, r18
    8ff6:	bc 01       	movw	r22, r24
    8ff8:	cd 01       	movw	r24, r26
    8ffa:	20 e0       	ldi	r18, 0x00	; 0
    8ffc:	30 ef       	ldi	r19, 0xF0	; 240
    8ffe:	4f e7       	ldi	r20, 0x7F	; 127
    9000:	55 e4       	ldi	r21, 0x45	; 69
    9002:	0e 94 c9 ae 	call	0x15d92	; 0x15d92 <__gesf2>
    9006:	87 ff       	sbrs	r24, 7
    9008:	18 c0       	rjmp	.+48     	; 0x903a <hal_configureUartChannel+0x2cc>
    900a:	37 c0       	rjmp	.+110    	; 0x907a <hal_configureUartChannel+0x30c>
    900c:	a6 01       	movw	r20, r12
    900e:	95 01       	movw	r18, r10
    9010:	85 2f       	mov	r24, r21
    9012:	9c 2d       	mov	r25, r12
    9014:	a3 2f       	mov	r26, r19
    9016:	ba 2d       	mov	r27, r10
    9018:	bc 01       	movw	r22, r24
    901a:	cd 01       	movw	r24, r26
    901c:	20 e0       	ldi	r18, 0x00	; 0
    901e:	30 e0       	ldi	r19, 0x00	; 0
    9020:	40 e0       	ldi	r20, 0x00	; 0
    9022:	5f e3       	ldi	r21, 0x3F	; 63
    9024:	0e 94 d4 ae 	call	0x15da8	; 0x15da8 <__mulsf3>
    9028:	d6 2e       	mov	r13, r22
    902a:	c7 2e       	mov	r12, r23
    902c:	b8 2e       	mov	r11, r24
    902e:	a9 2e       	mov	r10, r25
    9030:	73 94       	inc	r7
    9032:	b7 e0       	ldi	r27, 0x07	; 7
    9034:	7b 16       	cp	r7, r27
    9036:	11 f4       	brne	.+4      	; 0x903c <hal_configureUartChannel+0x2ce>
    9038:	11 c0       	rjmp	.+34     	; 0x905c <hal_configureUartChannel+0x2ee>
    903a:	77 24       	eor	r7, r7
    903c:	a6 01       	movw	r20, r12
    903e:	95 01       	movw	r18, r10
    9040:	85 2f       	mov	r24, r21
    9042:	9c 2d       	mov	r25, r12
    9044:	a3 2f       	mov	r26, r19
    9046:	ba 2d       	mov	r27, r10
    9048:	bc 01       	movw	r22, r24
    904a:	cd 01       	movw	r24, r26
    904c:	20 e0       	ldi	r18, 0x00	; 0
    904e:	30 ef       	ldi	r19, 0xF0	; 240
    9050:	4f e7       	ldi	r20, 0x7F	; 127
    9052:	55 e4       	ldi	r21, 0x45	; 69
    9054:	0e 94 c9 ae 	call	0x15d92	; 0x15d92 <__gesf2>
    9058:	18 16       	cp	r1, r24
    905a:	c4 f2       	brlt	.-80     	; 0x900c <hal_configureUartChannel+0x29e>
    905c:	a6 01       	movw	r20, r12
    905e:	95 01       	movw	r18, r10
    9060:	85 2f       	mov	r24, r21
    9062:	9c 2d       	mov	r25, r12
    9064:	a3 2f       	mov	r26, r19
    9066:	ba 2d       	mov	r27, r10
    9068:	bc 01       	movw	r22, r24
    906a:	cd 01       	movw	r24, r26
    906c:	20 e0       	ldi	r18, 0x00	; 0
    906e:	30 e0       	ldi	r19, 0x00	; 0
    9070:	40 e8       	ldi	r20, 0x80	; 128
    9072:	5f e3       	ldi	r21, 0x3F	; 63
    9074:	0e 94 ca ab 	call	0x15794	; 0x15794 <__subsf3>
    9078:	5f c0       	rjmp	.+190    	; 0x9138 <hal_configureUartChannel+0x3ca>
    907a:	a3 01       	movw	r20, r6
    907c:	92 01       	movw	r18, r4
    907e:	85 2f       	mov	r24, r21
    9080:	94 2f       	mov	r25, r20
    9082:	a3 2f       	mov	r26, r19
    9084:	b2 2f       	mov	r27, r18
    9086:	bc 01       	movw	r22, r24
    9088:	cd 01       	movw	r24, r26
    908a:	20 e0       	ldi	r18, 0x00	; 0
    908c:	30 ef       	ldi	r19, 0xF0	; 240
    908e:	4f e7       	ldi	r20, 0x7F	; 127
    9090:	55 e4       	ldi	r21, 0x45	; 69
    9092:	0e 94 91 ac 	call	0x15922	; 0x15922 <__cmpsf2>
    9096:	77 24       	eor	r7, r7
    9098:	87 fd       	sbrc	r24, 7
    909a:	18 c0       	rjmp	.+48     	; 0x90cc <hal_configureUartChannel+0x35e>
    909c:	aa 24       	eor	r10, r10
    909e:	bb 24       	eor	r11, r11
    90a0:	71 c0       	rjmp	.+226    	; 0x9184 <hal_configureUartChannel+0x416>
    90a2:	97 01       	movw	r18, r14
    90a4:	80 2f       	mov	r24, r16
    90a6:	91 2f       	mov	r25, r17
    90a8:	a3 2f       	mov	r26, r19
    90aa:	be 2d       	mov	r27, r14
    90ac:	bc 01       	movw	r22, r24
    90ae:	cd 01       	movw	r24, r26
    90b0:	a7 01       	movw	r20, r14
    90b2:	25 2f       	mov	r18, r21
    90b4:	3b 2f       	mov	r19, r27
    90b6:	a9 01       	movw	r20, r18
    90b8:	98 01       	movw	r18, r16
    90ba:	0e 94 cb ab 	call	0x15796	; 0x15796 <__addsf3>
    90be:	8b 01       	movw	r16, r22
    90c0:	f8 2e       	mov	r15, r24
    90c2:	e9 2e       	mov	r14, r25
    90c4:	7a 94       	dec	r7
    90c6:	e9 ef       	ldi	r30, 0xF9	; 249
    90c8:	7e 16       	cp	r7, r30
    90ca:	79 f0       	breq	.+30     	; 0x90ea <hal_configureUartChannel+0x37c>
    90cc:	97 01       	movw	r18, r14
    90ce:	80 2f       	mov	r24, r16
    90d0:	91 2f       	mov	r25, r17
    90d2:	a3 2f       	mov	r26, r19
    90d4:	be 2d       	mov	r27, r14
    90d6:	bc 01       	movw	r22, r24
    90d8:	cd 01       	movw	r24, r26
    90da:	20 e0       	ldi	r18, 0x00	; 0
    90dc:	30 ef       	ldi	r19, 0xF0	; 240
    90de:	4f e7       	ldi	r20, 0x7F	; 127
    90e0:	55 e4       	ldi	r21, 0x45	; 69
    90e2:	0e 94 91 ac 	call	0x15922	; 0x15922 <__cmpsf2>
    90e6:	87 fd       	sbrc	r24, 7
    90e8:	dc cf       	rjmp	.-72     	; 0x90a2 <hal_configureUartChannel+0x334>
    90ea:	97 01       	movw	r18, r14
    90ec:	80 2f       	mov	r24, r16
    90ee:	91 2f       	mov	r25, r17
    90f0:	a3 2f       	mov	r26, r19
    90f2:	be 2d       	mov	r27, r14
    90f4:	bc 01       	movw	r22, r24
    90f6:	cd 01       	movw	r24, r26
    90f8:	20 e0       	ldi	r18, 0x00	; 0
    90fa:	30 ef       	ldi	r19, 0xF0	; 240
    90fc:	4f e7       	ldi	r20, 0x7F	; 127
    90fe:	55 e4       	ldi	r21, 0x45	; 69
    9100:	0e 94 c9 ae 	call	0x15d92	; 0x15d92 <__gesf2>
    9104:	18 16       	cp	r1, r24
    9106:	8c f4       	brge	.+34     	; 0x912a <hal_configureUartChannel+0x3bc>
    9108:	97 01       	movw	r18, r14
    910a:	80 2f       	mov	r24, r16
    910c:	91 2f       	mov	r25, r17
    910e:	a3 2f       	mov	r26, r19
    9110:	be 2d       	mov	r27, r14
    9112:	bc 01       	movw	r22, r24
    9114:	cd 01       	movw	r24, r26
    9116:	20 e0       	ldi	r18, 0x00	; 0
    9118:	30 e0       	ldi	r19, 0x00	; 0
    911a:	40 e0       	ldi	r20, 0x00	; 0
    911c:	5f e3       	ldi	r21, 0x3F	; 63
    911e:	0e 94 d4 ae 	call	0x15da8	; 0x15da8 <__mulsf3>
    9122:	8b 01       	movw	r16, r22
    9124:	f8 2e       	mov	r15, r24
    9126:	e9 2e       	mov	r14, r25
    9128:	73 94       	inc	r7
    912a:	97 01       	movw	r18, r14
    912c:	80 2f       	mov	r24, r16
    912e:	91 2f       	mov	r25, r17
    9130:	a3 2f       	mov	r26, r19
    9132:	be 2d       	mov	r27, r14
    9134:	bc 01       	movw	r22, r24
    9136:	cd 01       	movw	r24, r26
    9138:	0e 94 3f ad 	call	0x15a7e	; 0x15a7e <__fixunssfsi>
    913c:	dc 01       	movw	r26, r24
    913e:	cb 01       	movw	r24, r22
    9140:	5c 01       	movw	r10, r24
    9142:	17 14       	cp	r1, r7
    9144:	fc f4       	brge	.+62     	; 0x9184 <hal_configureUartChannel+0x416>
    9146:	0e 94 c0 49 	call	0x9380	; 0x9380 <hal_getCpuFreq>
    914a:	6b 01       	movw	r12, r22
    914c:	7c 01       	movw	r14, r24
    914e:	c5 01       	movw	r24, r10
    9150:	a0 e0       	ldi	r26, 0x00	; 0
    9152:	b0 e0       	ldi	r27, 0x00	; 0
    9154:	01 96       	adiw	r24, 0x01	; 1
    9156:	a1 1d       	adc	r26, r1
    9158:	b1 1d       	adc	r27, r1
    915a:	20 e1       	ldi	r18, 0x10	; 16
    915c:	30 e0       	ldi	r19, 0x00	; 0
    915e:	40 e0       	ldi	r20, 0x00	; 0
    9160:	50 e0       	ldi	r21, 0x00	; 0
    9162:	07 2c       	mov	r0, r7
    9164:	04 c0       	rjmp	.+8      	; 0x916e <hal_configureUartChannel+0x400>
    9166:	22 0f       	add	r18, r18
    9168:	33 1f       	adc	r19, r19
    916a:	44 1f       	adc	r20, r20
    916c:	55 1f       	adc	r21, r21
    916e:	0a 94       	dec	r0
    9170:	d2 f7       	brpl	.-12     	; 0x9166 <hal_configureUartChannel+0x3f8>
    9172:	bc 01       	movw	r22, r24
    9174:	cd 01       	movw	r24, r26
    9176:	0e 94 cd b4 	call	0x1699a	; 0x1699a <__mulsi3>
    917a:	9b 01       	movw	r18, r22
    917c:	ac 01       	movw	r20, r24
    917e:	c7 01       	movw	r24, r14
    9180:	b6 01       	movw	r22, r12
    9182:	24 c0       	rjmp	.+72     	; 0x91cc <hal_configureUartChannel+0x45e>
    9184:	0e 94 c0 49 	call	0x9380	; 0x9380 <hal_getCpuFreq>
    9188:	ab 01       	movw	r20, r22
    918a:	bc 01       	movw	r22, r24
    918c:	85 01       	movw	r16, r10
    918e:	20 e0       	ldi	r18, 0x00	; 0
    9190:	30 e0       	ldi	r19, 0x00	; 0
    9192:	e4 e0       	ldi	r30, 0x04	; 4
    9194:	00 0f       	add	r16, r16
    9196:	11 1f       	adc	r17, r17
    9198:	22 1f       	adc	r18, r18
    919a:	33 1f       	adc	r19, r19
    919c:	ea 95       	dec	r30
    919e:	d1 f7       	brne	.-12     	; 0x9194 <hal_configureUartChannel+0x426>
    91a0:	87 2d       	mov	r24, r7
    91a2:	99 27       	eor	r25, r25
    91a4:	87 fd       	sbrc	r24, 7
    91a6:	90 95       	com	r25
    91a8:	90 95       	com	r25
    91aa:	81 95       	neg	r24
    91ac:	9f 4f       	sbci	r25, 0xFF	; 255
    91ae:	04 c0       	rjmp	.+8      	; 0x91b8 <hal_configureUartChannel+0x44a>
    91b0:	36 95       	lsr	r19
    91b2:	27 95       	ror	r18
    91b4:	17 95       	ror	r17
    91b6:	07 95       	ror	r16
    91b8:	8a 95       	dec	r24
    91ba:	d2 f7       	brpl	.-12     	; 0x91b0 <hal_configureUartChannel+0x442>
    91bc:	00 5f       	subi	r16, 0xF0	; 240
    91be:	1f 4f       	sbci	r17, 0xFF	; 255
    91c0:	2f 4f       	sbci	r18, 0xFF	; 255
    91c2:	3f 4f       	sbci	r19, 0xFF	; 255
    91c4:	cb 01       	movw	r24, r22
    91c6:	ba 01       	movw	r22, r20
    91c8:	a9 01       	movw	r20, r18
    91ca:	98 01       	movw	r18, r16
    91cc:	0e 94 ec b4 	call	0x169d8	; 0x169d8 <__udivmodsi4>
    91d0:	b9 01       	movw	r22, r18
    91d2:	ca 01       	movw	r24, r20
    91d4:	0e 94 6b ad 	call	0x15ad6	; 0x15ad6 <__floatunsisf>
    91d8:	2a 89       	ldd	r18, Y+18	; 0x12
    91da:	3b 89       	ldd	r19, Y+19	; 0x13
    91dc:	4c 89       	ldd	r20, Y+20	; 0x14
    91de:	5d 89       	ldd	r21, Y+21	; 0x15
    91e0:	0e 94 ca ab 	call	0x15794	; 0x15794 <__subsf3>
    91e4:	2a 89       	ldd	r18, Y+18	; 0x12
    91e6:	3b 89       	ldd	r19, Y+19	; 0x13
    91e8:	4c 89       	ldd	r20, Y+20	; 0x14
    91ea:	5d 89       	ldd	r21, Y+21	; 0x15
    91ec:	0e 94 98 ac 	call	0x15930	; 0x15930 <__divsf3>
    91f0:	20 e0       	ldi	r18, 0x00	; 0
    91f2:	30 e0       	ldi	r19, 0x00	; 0
    91f4:	48 ec       	ldi	r20, 0xC8	; 200
    91f6:	52 e4       	ldi	r21, 0x42	; 66
    91f8:	0e 94 d4 ae 	call	0x15da8	; 0x15da8 <__mulsf3>
    91fc:	dc 01       	movw	r26, r24
    91fe:	cb 01       	movw	r24, r22
    9200:	f4 01       	movw	r30, r8
    9202:	85 83       	std	Z+5, r24	; 0x05
    9204:	96 83       	std	Z+6, r25	; 0x06
    9206:	a7 83       	std	Z+7, r26	; 0x07
    9208:	b0 87       	std	Z+8, r27	; 0x08
    920a:	80 81       	ld	r24, Z
    920c:	86 31       	cpi	r24, 0x16	; 22
    920e:	78 f4       	brcc	.+30     	; 0x922e <hal_configureUartChannel+0x4c0>
    9210:	90 e0       	ldi	r25, 0x00	; 0
    9212:	88 0f       	add	r24, r24
    9214:	99 1f       	adc	r25, r25
    9216:	fc 01       	movw	r30, r24
    9218:	e0 58       	subi	r30, 0x80	; 128
    921a:	fe 4d       	sbci	r31, 0xDE	; 222
    921c:	00 81       	ld	r16, Z
    921e:	11 81       	ldd	r17, Z+1	; 0x01
    9220:	84 55       	subi	r24, 0x54	; 84
    9222:	9e 4d       	sbci	r25, 0xDE	; 222
    9224:	dc 01       	movw	r26, r24
    9226:	ed 90       	ld	r14, X+
    9228:	fc 90       	ld	r15, X
    922a:	11 97       	sbiw	r26, 0x01	; 1
    922c:	04 c0       	rjmp	.+8      	; 0x9236 <hal_configureUartChannel+0x4c8>
    922e:	ee 24       	eor	r14, r14
    9230:	ff 24       	eor	r15, r15
    9232:	00 e0       	ldi	r16, 0x00	; 0
    9234:	10 e0       	ldi	r17, 0x00	; 0
    9236:	8d 85       	ldd	r24, Y+13	; 0x0d
    9238:	88 23       	and	r24, r24
    923a:	a1 f0       	breq	.+40     	; 0x9264 <hal_configureUartChannel+0x4f6>
    923c:	0e 94 32 4c 	call	0x9864	; 0x9864 <hal_requestDmaChannel>
    9240:	f4 01       	movw	r30, r8
    9242:	83 8f       	std	Z+27, r24	; 0x1b
    9244:	94 8f       	std	Z+28, r25	; 0x1c
    9246:	83 8d       	ldd	r24, Z+27	; 0x1b
    9248:	94 8d       	ldd	r25, Z+28	; 0x1c
    924a:	97 ff       	sbrs	r25, 7
    924c:	05 c0       	rjmp	.+10     	; 0x9258 <hal_configureUartChannel+0x4ea>
    924e:	89 81       	ldd	r24, Y+1	; 0x01
    9250:	8f bf       	out	0x3f, r24	; 63
    9252:	83 8d       	ldd	r24, Z+27	; 0x1b
    9254:	94 8d       	ldd	r25, Z+28	; 0x1c
    9256:	16 c0       	rjmp	.+44     	; 0x9284 <hal_configureUartChannel+0x516>
    9258:	83 8d       	ldd	r24, Z+27	; 0x1b
    925a:	94 8d       	ldd	r25, Z+28	; 0x1c
    925c:	60 e0       	ldi	r22, 0x00	; 0
    925e:	a8 01       	movw	r20, r16
    9260:	0e 94 46 4b 	call	0x968c	; 0x968c <hal_requestDmaInterrupt>
    9264:	8c 85       	ldd	r24, Y+12	; 0x0c
    9266:	88 23       	and	r24, r24
    9268:	d1 f0       	breq	.+52     	; 0x929e <hal_configureUartChannel+0x530>
    926a:	0e 94 32 4c 	call	0x9864	; 0x9864 <hal_requestDmaChannel>
    926e:	f4 01       	movw	r30, r8
    9270:	81 8f       	std	Z+25, r24	; 0x19
    9272:	92 8f       	std	Z+26, r25	; 0x1a
    9274:	81 8d       	ldd	r24, Z+25	; 0x19
    9276:	92 8d       	ldd	r25, Z+26	; 0x1a
    9278:	97 ff       	sbrs	r25, 7
    927a:	0b c0       	rjmp	.+22     	; 0x9292 <hal_configureUartChannel+0x524>
    927c:	89 81       	ldd	r24, Y+1	; 0x01
    927e:	8f bf       	out	0x3f, r24	; 63
    9280:	81 8d       	ldd	r24, Z+25	; 0x19
    9282:	92 8d       	ldd	r25, Z+26	; 0x1a
    9284:	ff ef       	ldi	r31, 0xFF	; 255
    9286:	89 3f       	cpi	r24, 0xF9	; 249
    9288:	9f 07       	cpc	r25, r31
    928a:	09 f0       	breq	.+2      	; 0x928e <hal_configureUartChannel+0x520>
    928c:	64 c0       	rjmp	.+200    	; 0x9356 <hal_configureUartChannel+0x5e8>
    928e:	8a ef       	ldi	r24, 0xFA	; 250
    9290:	63 c0       	rjmp	.+198    	; 0x9358 <hal_configureUartChannel+0x5ea>
    9292:	81 8d       	ldd	r24, Z+25	; 0x19
    9294:	92 8d       	ldd	r25, Z+26	; 0x1a
    9296:	60 e0       	ldi	r22, 0x00	; 0
    9298:	a7 01       	movw	r20, r14
    929a:	0e 94 46 4b 	call	0x968c	; 0x968c <hal_requestDmaInterrupt>
    929e:	2e 89       	ldd	r18, Y+22	; 0x16
    92a0:	3f 89       	ldd	r19, Y+23	; 0x17
    92a2:	48 8d       	ldd	r20, Y+24	; 0x18
    92a4:	59 8d       	ldd	r21, Y+25	; 0x19
    92a6:	d4 01       	movw	r26, r8
    92a8:	11 96       	adiw	r26, 0x01	; 1
    92aa:	2d 93       	st	X+, r18
    92ac:	3d 93       	st	X+, r19
    92ae:	4d 93       	st	X+, r20
    92b0:	5c 93       	st	X, r21
    92b2:	14 97       	sbiw	r26, 0x04	; 4
    92b4:	19 96       	adiw	r26, 0x09	; 9
    92b6:	ed 91       	ld	r30, X+
    92b8:	fc 91       	ld	r31, X
    92ba:	1a 97       	sbiw	r26, 0x0a	; 10
    92bc:	a6 82       	std	Z+6, r10	; 0x06
    92be:	19 96       	adiw	r26, 0x09	; 9
    92c0:	ed 91       	ld	r30, X+
    92c2:	fc 91       	ld	r31, X
    92c4:	1a 97       	sbiw	r26, 0x0a	; 10
    92c6:	72 94       	swap	r7
    92c8:	80 ef       	ldi	r24, 0xF0	; 240
    92ca:	78 22       	and	r7, r24
    92cc:	7b 28       	or	r7, r11
    92ce:	77 82       	std	Z+7, r7	; 0x07
    92d0:	19 96       	adiw	r26, 0x09	; 9
    92d2:	ed 91       	ld	r30, X+
    92d4:	fc 91       	ld	r31, X
    92d6:	1a 97       	sbiw	r26, 0x0a	; 10
    92d8:	84 81       	ldd	r24, Z+4	; 0x04
    92da:	80 61       	ori	r24, 0x10	; 16
    92dc:	84 83       	std	Z+4, r24	; 0x04
    92de:	19 96       	adiw	r26, 0x09	; 9
    92e0:	ed 91       	ld	r30, X+
    92e2:	fc 91       	ld	r31, X
    92e4:	1a 97       	sbiw	r26, 0x0a	; 10
    92e6:	84 81       	ldd	r24, Z+4	; 0x04
    92e8:	88 60       	ori	r24, 0x08	; 8
    92ea:	84 83       	std	Z+4, r24	; 0x04
    92ec:	1b 96       	adiw	r26, 0x0b	; 11
    92ee:	1c 92       	st	X, r1
    92f0:	1b 97       	sbiw	r26, 0x0b	; 11
    92f2:	1c 96       	adiw	r26, 0x0c	; 12
    92f4:	1c 92       	st	X, r1
    92f6:	1c 97       	sbiw	r26, 0x0c	; 12
    92f8:	1f 96       	adiw	r26, 0x0f	; 15
    92fa:	1d 92       	st	X+, r1
    92fc:	1c 92       	st	X, r1
    92fe:	50 97       	sbiw	r26, 0x10	; 16
    9300:	1d 96       	adiw	r26, 0x0d	; 13
    9302:	1d 92       	st	X+, r1
    9304:	1c 92       	st	X, r1
    9306:	1e 97       	sbiw	r26, 0x0e	; 14
    9308:	57 96       	adiw	r26, 0x17	; 23
    930a:	1d 92       	st	X+, r1
    930c:	1c 92       	st	X, r1
    930e:	58 97       	sbiw	r26, 0x18	; 24
    9310:	53 96       	adiw	r26, 0x13	; 19
    9312:	1d 92       	st	X+, r1
    9314:	1c 92       	st	X, r1
    9316:	54 97       	sbiw	r26, 0x14	; 20
    9318:	55 96       	adiw	r26, 0x15	; 21
    931a:	1d 92       	st	X+, r1
    931c:	1c 92       	st	X, r1
    931e:	56 97       	sbiw	r26, 0x16	; 22
    9320:	51 96       	adiw	r26, 0x11	; 17
    9322:	1d 92       	st	X+, r1
    9324:	1c 92       	st	X, r1
    9326:	52 97       	sbiw	r26, 0x12	; 18
    9328:	8e 85       	ldd	r24, Y+14	; 0x0e
    932a:	9f 85       	ldd	r25, Y+15	; 0x0f
    932c:	5d 96       	adiw	r26, 0x1d	; 29
    932e:	8d 93       	st	X+, r24
    9330:	9c 93       	st	X, r25
    9332:	5e 97       	sbiw	r26, 0x1e	; 30
    9334:	88 89       	ldd	r24, Y+16	; 0x10
    9336:	99 89       	ldd	r25, Y+17	; 0x11
    9338:	5f 96       	adiw	r26, 0x1f	; 31
    933a:	8d 93       	st	X+, r24
    933c:	9c 93       	st	X, r25
    933e:	90 97       	sbiw	r26, 0x20	; 32
    9340:	19 96       	adiw	r26, 0x09	; 9
    9342:	ed 91       	ld	r30, X+
    9344:	fc 91       	ld	r31, X
    9346:	1a 97       	sbiw	r26, 0x0a	; 10
    9348:	83 81       	ldd	r24, Z+3	; 0x03
    934a:	80 63       	ori	r24, 0x30	; 48
    934c:	83 83       	std	Z+3, r24	; 0x03
    934e:	89 81       	ldd	r24, Y+1	; 0x01
    9350:	8f bf       	out	0x3f, r24	; 63
    9352:	80 e0       	ldi	r24, 0x00	; 0
    9354:	01 c0       	rjmp	.+2      	; 0x9358 <hal_configureUartChannel+0x5ea>
    9356:	8f ef       	ldi	r24, 0xFF	; 255
    9358:	69 96       	adiw	r28, 0x19	; 25
    935a:	cd bf       	out	0x3d, r28	; 61
    935c:	de bf       	out	0x3e, r29	; 62
    935e:	df 91       	pop	r29
    9360:	cf 91       	pop	r28
    9362:	1f 91       	pop	r17
    9364:	0f 91       	pop	r16
    9366:	ff 90       	pop	r15
    9368:	ef 90       	pop	r14
    936a:	df 90       	pop	r13
    936c:	cf 90       	pop	r12
    936e:	bf 90       	pop	r11
    9370:	af 90       	pop	r10
    9372:	9f 90       	pop	r9
    9374:	8f 90       	pop	r8
    9376:	7f 90       	pop	r7
    9378:	6f 90       	pop	r6
    937a:	5f 90       	pop	r5
    937c:	4f 90       	pop	r4
    937e:	08 95       	ret

00009380 <hal_getCpuFreq>:
    9380:	60 91 e2 27 	lds	r22, 0x27E2
    9384:	70 91 e3 27 	lds	r23, 0x27E3
    9388:	80 91 e4 27 	lds	r24, 0x27E4
    938c:	90 91 e5 27 	lds	r25, 0x27E5
    9390:	08 95       	ret

00009392 <hal_setCpuFreq>:
    9392:	dc 01       	movw	r26, r24
    9394:	cb 01       	movw	r24, r22
    9396:	22 e0       	ldi	r18, 0x02	; 2
    9398:	20 93 50 00 	sts	0x0050, r18
    939c:	28 ed       	ldi	r18, 0xD8	; 216
    939e:	24 bf       	out	0x34, r18	; 52
    93a0:	e0 e4       	ldi	r30, 0x40	; 64
    93a2:	f0 e0       	ldi	r31, 0x00	; 0
    93a4:	11 82       	std	Z+1, r1	; 0x01
    93a6:	20 91 41 00 	lds	r18, 0x0041
    93aa:	21 83       	std	Z+1, r18	; 0x01
    93ac:	20 91 51 00 	lds	r18, 0x0051
    93b0:	21 ff       	sbrs	r18, 1
    93b2:	fc cf       	rjmp	.-8      	; 0x93ac <hal_setCpuFreq+0x1a>
    93b4:	28 ed       	ldi	r18, 0xD8	; 216
    93b6:	24 bf       	out	0x34, r18	; 52
    93b8:	21 e0       	ldi	r18, 0x01	; 1
    93ba:	20 93 40 00 	sts	0x0040, r18
    93be:	20 91 50 00 	lds	r18, 0x0050
    93c2:	2e 7f       	andi	r18, 0xFE	; 254
    93c4:	20 93 50 00 	sts	0x0050, r18
    93c8:	80 93 e2 27 	sts	0x27E2, r24
    93cc:	90 93 e3 27 	sts	0x27E3, r25
    93d0:	a0 93 e4 27 	sts	0x27E4, r26
    93d4:	b0 93 e5 27 	sts	0x27E5, r27
    93d8:	80 e0       	ldi	r24, 0x00	; 0
    93da:	08 95       	ret

000093dc <findDmaIntElement>:
    93dc:	cf 93       	push	r28
    93de:	df 93       	push	r29
    93e0:	0f 92       	push	r0
    93e2:	0f 92       	push	r0
    93e4:	cd b7       	in	r28, 0x3d	; 61
    93e6:	de b7       	in	r29, 0x3e	; 62
    93e8:	e0 91 d8 21 	lds	r30, 0x21D8
    93ec:	f0 91 d9 21 	lds	r31, 0x21D9
    93f0:	22 81       	ldd	r18, Z+2	; 0x02
    93f2:	33 81       	ldd	r19, Z+3	; 0x03
    93f4:	e0 91 d8 21 	lds	r30, 0x21D8
    93f8:	f0 91 d9 21 	lds	r31, 0x21D9
    93fc:	0c c0       	rjmp	.+24     	; 0x9416 <findDmaIntElement+0x3a>
    93fe:	e9 81       	ldd	r30, Y+1	; 0x01
    9400:	fa 81       	ldd	r31, Y+2	; 0x02
    9402:	01 90       	ld	r0, Z+
    9404:	f0 81       	ld	r31, Z
    9406:	e0 2d       	mov	r30, r0
    9408:	90 81       	ld	r25, Z
    940a:	98 17       	cp	r25, r24
    940c:	69 f0       	breq	.+26     	; 0x9428 <findDmaIntElement+0x4c>
    940e:	21 50       	subi	r18, 0x01	; 1
    9410:	30 40       	sbci	r19, 0x00	; 0
    9412:	e9 81       	ldd	r30, Y+1	; 0x01
    9414:	fa 81       	ldd	r31, Y+2	; 0x02
    9416:	40 85       	ldd	r20, Z+8	; 0x08
    9418:	51 85       	ldd	r21, Z+9	; 0x09
    941a:	49 83       	std	Y+1, r20	; 0x01
    941c:	5a 83       	std	Y+2, r21	; 0x02
    941e:	12 16       	cp	r1, r18
    9420:	13 06       	cpc	r1, r19
    9422:	6c f3       	brlt	.-38     	; 0x93fe <findDmaIntElement+0x22>
    9424:	e0 e0       	ldi	r30, 0x00	; 0
    9426:	f0 e0       	ldi	r31, 0x00	; 0
    9428:	cf 01       	movw	r24, r30
    942a:	0f 90       	pop	r0
    942c:	0f 90       	pop	r0
    942e:	df 91       	pop	r29
    9430:	cf 91       	pop	r28
    9432:	08 95       	ret

00009434 <__vector_6>:
    9434:	1f 92       	push	r1
    9436:	0f 92       	push	r0
    9438:	0f b6       	in	r0, 0x3f	; 63
    943a:	0f 92       	push	r0
    943c:	08 b6       	in	r0, 0x38	; 56
    943e:	0f 92       	push	r0
    9440:	09 b6       	in	r0, 0x39	; 57
    9442:	0f 92       	push	r0
    9444:	0b b6       	in	r0, 0x3b	; 59
    9446:	0f 92       	push	r0
    9448:	11 24       	eor	r1, r1
    944a:	2f 93       	push	r18
    944c:	3f 93       	push	r19
    944e:	4f 93       	push	r20
    9450:	5f 93       	push	r21
    9452:	6f 93       	push	r22
    9454:	7f 93       	push	r23
    9456:	8f 93       	push	r24
    9458:	9f 93       	push	r25
    945a:	af 93       	push	r26
    945c:	bf 93       	push	r27
    945e:	ef 93       	push	r30
    9460:	ff 93       	push	r31
    9462:	e0 e0       	ldi	r30, 0x00	; 0
    9464:	f1 e0       	ldi	r31, 0x01	; 1
    9466:	80 91 11 01 	lds	r24, 0x0111
    946a:	85 ff       	sbrs	r24, 5
    946c:	06 c0       	rjmp	.+12     	; 0x947a <__vector_6+0x46>
    946e:	80 91 11 01 	lds	r24, 0x0111
    9472:	80 62       	ori	r24, 0x20	; 32
    9474:	81 8b       	std	Z+17, r24	; 0x11
    9476:	81 e0       	ldi	r24, 0x01	; 1
    9478:	05 c0       	rjmp	.+10     	; 0x9484 <__vector_6+0x50>
    947a:	80 91 11 01 	lds	r24, 0x0111
    947e:	80 61       	ori	r24, 0x10	; 16
    9480:	81 8b       	std	Z+17, r24	; 0x11
    9482:	80 e0       	ldi	r24, 0x00	; 0
    9484:	0e 94 ee 49 	call	0x93dc	; 0x93dc <findDmaIntElement>
    9488:	00 97       	sbiw	r24, 0x00	; 0
    948a:	41 f0       	breq	.+16     	; 0x949c <__vector_6+0x68>
    948c:	dc 01       	movw	r26, r24
    948e:	11 96       	adiw	r26, 0x01	; 1
    9490:	ed 91       	ld	r30, X+
    9492:	fc 91       	ld	r31, X
    9494:	12 97       	sbiw	r26, 0x02	; 2
    9496:	30 97       	sbiw	r30, 0x00	; 0
    9498:	09 f0       	breq	.+2      	; 0x949c <__vector_6+0x68>
    949a:	19 95       	eicall
    949c:	ff 91       	pop	r31
    949e:	ef 91       	pop	r30
    94a0:	bf 91       	pop	r27
    94a2:	af 91       	pop	r26
    94a4:	9f 91       	pop	r25
    94a6:	8f 91       	pop	r24
    94a8:	7f 91       	pop	r23
    94aa:	6f 91       	pop	r22
    94ac:	5f 91       	pop	r21
    94ae:	4f 91       	pop	r20
    94b0:	3f 91       	pop	r19
    94b2:	2f 91       	pop	r18
    94b4:	0f 90       	pop	r0
    94b6:	0b be       	out	0x3b, r0	; 59
    94b8:	0f 90       	pop	r0
    94ba:	09 be       	out	0x39, r0	; 57
    94bc:	0f 90       	pop	r0
    94be:	08 be       	out	0x38, r0	; 56
    94c0:	0f 90       	pop	r0
    94c2:	0f be       	out	0x3f, r0	; 63
    94c4:	0f 90       	pop	r0
    94c6:	1f 90       	pop	r1
    94c8:	18 95       	reti

000094ca <__vector_7>:
    94ca:	1f 92       	push	r1
    94cc:	0f 92       	push	r0
    94ce:	0f b6       	in	r0, 0x3f	; 63
    94d0:	0f 92       	push	r0
    94d2:	08 b6       	in	r0, 0x38	; 56
    94d4:	0f 92       	push	r0
    94d6:	09 b6       	in	r0, 0x39	; 57
    94d8:	0f 92       	push	r0
    94da:	0b b6       	in	r0, 0x3b	; 59
    94dc:	0f 92       	push	r0
    94de:	11 24       	eor	r1, r1
    94e0:	2f 93       	push	r18
    94e2:	3f 93       	push	r19
    94e4:	4f 93       	push	r20
    94e6:	5f 93       	push	r21
    94e8:	6f 93       	push	r22
    94ea:	7f 93       	push	r23
    94ec:	8f 93       	push	r24
    94ee:	9f 93       	push	r25
    94f0:	af 93       	push	r26
    94f2:	bf 93       	push	r27
    94f4:	ef 93       	push	r30
    94f6:	ff 93       	push	r31
    94f8:	e0 e0       	ldi	r30, 0x00	; 0
    94fa:	f1 e0       	ldi	r31, 0x01	; 1
    94fc:	80 91 21 01 	lds	r24, 0x0121
    9500:	85 ff       	sbrs	r24, 5
    9502:	06 c0       	rjmp	.+12     	; 0x9510 <__vector_7+0x46>
    9504:	80 91 21 01 	lds	r24, 0x0121
    9508:	80 62       	ori	r24, 0x20	; 32
    950a:	81 a3       	lds	r24, 0x51
    950c:	83 e0       	ldi	r24, 0x03	; 3
    950e:	05 c0       	rjmp	.+10     	; 0x951a <__vector_7+0x50>
    9510:	80 91 21 01 	lds	r24, 0x0121
    9514:	80 61       	ori	r24, 0x10	; 16
    9516:	81 a3       	lds	r24, 0x51
    9518:	82 e0       	ldi	r24, 0x02	; 2
    951a:	0e 94 ee 49 	call	0x93dc	; 0x93dc <findDmaIntElement>
    951e:	00 97       	sbiw	r24, 0x00	; 0
    9520:	41 f0       	breq	.+16     	; 0x9532 <__vector_7+0x68>
    9522:	dc 01       	movw	r26, r24
    9524:	11 96       	adiw	r26, 0x01	; 1
    9526:	ed 91       	ld	r30, X+
    9528:	fc 91       	ld	r31, X
    952a:	12 97       	sbiw	r26, 0x02	; 2
    952c:	30 97       	sbiw	r30, 0x00	; 0
    952e:	09 f0       	breq	.+2      	; 0x9532 <__vector_7+0x68>
    9530:	19 95       	eicall
    9532:	ff 91       	pop	r31
    9534:	ef 91       	pop	r30
    9536:	bf 91       	pop	r27
    9538:	af 91       	pop	r26
    953a:	9f 91       	pop	r25
    953c:	8f 91       	pop	r24
    953e:	7f 91       	pop	r23
    9540:	6f 91       	pop	r22
    9542:	5f 91       	pop	r21
    9544:	4f 91       	pop	r20
    9546:	3f 91       	pop	r19
    9548:	2f 91       	pop	r18
    954a:	0f 90       	pop	r0
    954c:	0b be       	out	0x3b, r0	; 59
    954e:	0f 90       	pop	r0
    9550:	09 be       	out	0x39, r0	; 57
    9552:	0f 90       	pop	r0
    9554:	08 be       	out	0x38, r0	; 56
    9556:	0f 90       	pop	r0
    9558:	0f be       	out	0x3f, r0	; 63
    955a:	0f 90       	pop	r0
    955c:	1f 90       	pop	r1
    955e:	18 95       	reti

00009560 <__vector_8>:
    9560:	1f 92       	push	r1
    9562:	0f 92       	push	r0
    9564:	0f b6       	in	r0, 0x3f	; 63
    9566:	0f 92       	push	r0
    9568:	08 b6       	in	r0, 0x38	; 56
    956a:	0f 92       	push	r0
    956c:	09 b6       	in	r0, 0x39	; 57
    956e:	0f 92       	push	r0
    9570:	0b b6       	in	r0, 0x3b	; 59
    9572:	0f 92       	push	r0
    9574:	11 24       	eor	r1, r1
    9576:	2f 93       	push	r18
    9578:	3f 93       	push	r19
    957a:	4f 93       	push	r20
    957c:	5f 93       	push	r21
    957e:	6f 93       	push	r22
    9580:	7f 93       	push	r23
    9582:	8f 93       	push	r24
    9584:	9f 93       	push	r25
    9586:	af 93       	push	r26
    9588:	bf 93       	push	r27
    958a:	ef 93       	push	r30
    958c:	ff 93       	push	r31
    958e:	e0 e0       	ldi	r30, 0x00	; 0
    9590:	f1 e0       	ldi	r31, 0x01	; 1
    9592:	80 91 31 01 	lds	r24, 0x0131
    9596:	85 ff       	sbrs	r24, 5
    9598:	06 c0       	rjmp	.+12     	; 0x95a6 <__vector_8+0x46>
    959a:	80 91 31 01 	lds	r24, 0x0131
    959e:	80 62       	ori	r24, 0x20	; 32
    95a0:	81 ab       	sts	0x51, r24
    95a2:	85 e0       	ldi	r24, 0x05	; 5
    95a4:	05 c0       	rjmp	.+10     	; 0x95b0 <__vector_8+0x50>
    95a6:	80 91 31 01 	lds	r24, 0x0131
    95aa:	80 61       	ori	r24, 0x10	; 16
    95ac:	81 ab       	sts	0x51, r24
    95ae:	84 e0       	ldi	r24, 0x04	; 4
    95b0:	0e 94 ee 49 	call	0x93dc	; 0x93dc <findDmaIntElement>
    95b4:	00 97       	sbiw	r24, 0x00	; 0
    95b6:	41 f0       	breq	.+16     	; 0x95c8 <__vector_8+0x68>
    95b8:	dc 01       	movw	r26, r24
    95ba:	11 96       	adiw	r26, 0x01	; 1
    95bc:	ed 91       	ld	r30, X+
    95be:	fc 91       	ld	r31, X
    95c0:	12 97       	sbiw	r26, 0x02	; 2
    95c2:	30 97       	sbiw	r30, 0x00	; 0
    95c4:	09 f0       	breq	.+2      	; 0x95c8 <__vector_8+0x68>
    95c6:	19 95       	eicall
    95c8:	ff 91       	pop	r31
    95ca:	ef 91       	pop	r30
    95cc:	bf 91       	pop	r27
    95ce:	af 91       	pop	r26
    95d0:	9f 91       	pop	r25
    95d2:	8f 91       	pop	r24
    95d4:	7f 91       	pop	r23
    95d6:	6f 91       	pop	r22
    95d8:	5f 91       	pop	r21
    95da:	4f 91       	pop	r20
    95dc:	3f 91       	pop	r19
    95de:	2f 91       	pop	r18
    95e0:	0f 90       	pop	r0
    95e2:	0b be       	out	0x3b, r0	; 59
    95e4:	0f 90       	pop	r0
    95e6:	09 be       	out	0x39, r0	; 57
    95e8:	0f 90       	pop	r0
    95ea:	08 be       	out	0x38, r0	; 56
    95ec:	0f 90       	pop	r0
    95ee:	0f be       	out	0x3f, r0	; 63
    95f0:	0f 90       	pop	r0
    95f2:	1f 90       	pop	r1
    95f4:	18 95       	reti

000095f6 <__vector_9>:
    95f6:	1f 92       	push	r1
    95f8:	0f 92       	push	r0
    95fa:	0f b6       	in	r0, 0x3f	; 63
    95fc:	0f 92       	push	r0
    95fe:	08 b6       	in	r0, 0x38	; 56
    9600:	0f 92       	push	r0
    9602:	09 b6       	in	r0, 0x39	; 57
    9604:	0f 92       	push	r0
    9606:	0b b6       	in	r0, 0x3b	; 59
    9608:	0f 92       	push	r0
    960a:	11 24       	eor	r1, r1
    960c:	2f 93       	push	r18
    960e:	3f 93       	push	r19
    9610:	4f 93       	push	r20
    9612:	5f 93       	push	r21
    9614:	6f 93       	push	r22
    9616:	7f 93       	push	r23
    9618:	8f 93       	push	r24
    961a:	9f 93       	push	r25
    961c:	af 93       	push	r26
    961e:	bf 93       	push	r27
    9620:	ef 93       	push	r30
    9622:	ff 93       	push	r31
    9624:	80 91 41 01 	lds	r24, 0x0141
    9628:	85 ff       	sbrs	r24, 5
    962a:	07 c0       	rjmp	.+14     	; 0x963a <__vector_9+0x44>
    962c:	80 91 41 01 	lds	r24, 0x0141
    9630:	80 62       	ori	r24, 0x20	; 32
    9632:	80 93 41 01 	sts	0x0141, r24
    9636:	87 e0       	ldi	r24, 0x07	; 7
    9638:	06 c0       	rjmp	.+12     	; 0x9646 <__vector_9+0x50>
    963a:	80 91 41 01 	lds	r24, 0x0141
    963e:	80 61       	ori	r24, 0x10	; 16
    9640:	80 93 41 01 	sts	0x0141, r24
    9644:	86 e0       	ldi	r24, 0x06	; 6
    9646:	0e 94 ee 49 	call	0x93dc	; 0x93dc <findDmaIntElement>
    964a:	00 97       	sbiw	r24, 0x00	; 0
    964c:	41 f0       	breq	.+16     	; 0x965e <__vector_9+0x68>
    964e:	dc 01       	movw	r26, r24
    9650:	11 96       	adiw	r26, 0x01	; 1
    9652:	ed 91       	ld	r30, X+
    9654:	fc 91       	ld	r31, X
    9656:	12 97       	sbiw	r26, 0x02	; 2
    9658:	30 97       	sbiw	r30, 0x00	; 0
    965a:	09 f0       	breq	.+2      	; 0x965e <__vector_9+0x68>
    965c:	19 95       	eicall
    965e:	ff 91       	pop	r31
    9660:	ef 91       	pop	r30
    9662:	bf 91       	pop	r27
    9664:	af 91       	pop	r26
    9666:	9f 91       	pop	r25
    9668:	8f 91       	pop	r24
    966a:	7f 91       	pop	r23
    966c:	6f 91       	pop	r22
    966e:	5f 91       	pop	r21
    9670:	4f 91       	pop	r20
    9672:	3f 91       	pop	r19
    9674:	2f 91       	pop	r18
    9676:	0f 90       	pop	r0
    9678:	0b be       	out	0x3b, r0	; 59
    967a:	0f 90       	pop	r0
    967c:	09 be       	out	0x39, r0	; 57
    967e:	0f 90       	pop	r0
    9680:	08 be       	out	0x38, r0	; 56
    9682:	0f 90       	pop	r0
    9684:	0f be       	out	0x3f, r0	; 63
    9686:	0f 90       	pop	r0
    9688:	1f 90       	pop	r1
    968a:	18 95       	reti

0000968c <hal_requestDmaInterrupt>:
    968c:	cf 92       	push	r12
    968e:	df 92       	push	r13
    9690:	ef 92       	push	r14
    9692:	ff 92       	push	r15
    9694:	0f 93       	push	r16
    9696:	1f 93       	push	r17
    9698:	cf 93       	push	r28
    969a:	df 93       	push	r29
    969c:	cd b7       	in	r28, 0x3d	; 61
    969e:	de b7       	in	r29, 0x3e	; 62
    96a0:	27 97       	sbiw	r28, 0x07	; 7
    96a2:	cd bf       	out	0x3d, r28	; 61
    96a4:	de bf       	out	0x3e, r29	; 62
    96a6:	8e 83       	std	Y+6, r24	; 0x06
    96a8:	9f 83       	std	Y+7, r25	; 0x07
    96aa:	06 2f       	mov	r16, r22
    96ac:	6a 01       	movw	r12, r20
    96ae:	8f b7       	in	r24, 0x3f	; 63
    96b0:	89 83       	std	Y+1, r24	; 0x01
    96b2:	f8 94       	cli
    96b4:	ee 81       	ldd	r30, Y+6	; 0x06
    96b6:	ff 81       	ldd	r31, Y+7	; 0x07
    96b8:	80 91 e6 21 	lds	r24, 0x21E6
    96bc:	90 91 e7 21 	lds	r25, 0x21E7
    96c0:	24 81       	ldd	r18, Z+4	; 0x04
    96c2:	35 81       	ldd	r19, Z+5	; 0x05
    96c4:	28 17       	cp	r18, r24
    96c6:	39 07       	cpc	r19, r25
    96c8:	21 f0       	breq	.+8      	; 0x96d2 <hal_requestDmaInterrupt+0x46>
    96ca:	89 81       	ldd	r24, Y+1	; 0x01
    96cc:	8f bf       	out	0x3f, r24	; 63
    96ce:	8e ef       	ldi	r24, 0xFE	; 254
    96d0:	51 c0       	rjmp	.+162    	; 0x9774 <hal_requestDmaInterrupt+0xe8>
    96d2:	ee 81       	ldd	r30, Y+6	; 0x06
    96d4:	ff 81       	ldd	r31, Y+7	; 0x07
    96d6:	e0 80       	ld	r14, Z
    96d8:	f1 80       	ldd	r15, Z+1	; 0x01
    96da:	d7 01       	movw	r26, r14
    96dc:	1c 91       	ld	r17, X
    96de:	16 0f       	add	r17, r22
    96e0:	18 30       	cpi	r17, 0x08	; 8
    96e2:	20 f0       	brcs	.+8      	; 0x96ec <hal_requestDmaInterrupt+0x60>
    96e4:	89 81       	ldd	r24, Y+1	; 0x01
    96e6:	8f bf       	out	0x3f, r24	; 63
    96e8:	8b ef       	ldi	r24, 0xFB	; 251
    96ea:	44 c0       	rjmp	.+136    	; 0x9774 <hal_requestDmaInterrupt+0xe8>
    96ec:	81 2f       	mov	r24, r17
    96ee:	0e 94 ee 49 	call	0x93dc	; 0x93dc <findDmaIntElement>
    96f2:	00 97       	sbiw	r24, 0x00	; 0
    96f4:	e1 f5       	brne	.+120    	; 0x976e <hal_requestDmaInterrupt+0xe2>
    96f6:	83 e0       	ldi	r24, 0x03	; 3
    96f8:	90 e0       	ldi	r25, 0x00	; 0
    96fa:	0e 94 5e 8b 	call	0x116bc	; 0x116bc <utl_createLink>
    96fe:	8a 83       	std	Y+2, r24	; 0x02
    9700:	9b 83       	std	Y+3, r25	; 0x03
    9702:	8a 81       	ldd	r24, Y+2	; 0x02
    9704:	9b 81       	ldd	r25, Y+3	; 0x03
    9706:	97 fd       	sbrc	r25, 7
    9708:	0c c0       	rjmp	.+24     	; 0x9722 <hal_requestDmaInterrupt+0x96>
    970a:	80 91 d8 21 	lds	r24, 0x21D8
    970e:	90 91 d9 21 	lds	r25, 0x21D9
    9712:	6a 81       	ldd	r22, Y+2	; 0x02
    9714:	7b 81       	ldd	r23, Y+3	; 0x03
    9716:	41 e0       	ldi	r20, 0x01	; 1
    9718:	0e 94 6e 89 	call	0x112dc	; 0x112dc <utl_insertLink>
    971c:	8a 81       	ldd	r24, Y+2	; 0x02
    971e:	9b 81       	ldd	r25, Y+3	; 0x03
    9720:	02 c0       	rjmp	.+4      	; 0x9726 <hal_requestDmaInterrupt+0x9a>
    9722:	8f ef       	ldi	r24, 0xFF	; 255
    9724:	9f ef       	ldi	r25, 0xFF	; 255
    9726:	8c 83       	std	Y+4, r24	; 0x04
    9728:	9d 83       	std	Y+5, r25	; 0x05
    972a:	8c 81       	ldd	r24, Y+4	; 0x04
    972c:	9d 81       	ldd	r25, Y+5	; 0x05
    972e:	97 ff       	sbrs	r25, 7
    9730:	04 c0       	rjmp	.+8      	; 0x973a <hal_requestDmaInterrupt+0xae>
    9732:	89 81       	ldd	r24, Y+1	; 0x01
    9734:	8f bf       	out	0x3f, r24	; 63
    9736:	8f ef       	ldi	r24, 0xFF	; 255
    9738:	1d c0       	rjmp	.+58     	; 0x9774 <hal_requestDmaInterrupt+0xe8>
    973a:	ec 81       	ldd	r30, Y+4	; 0x04
    973c:	fd 81       	ldd	r31, Y+5	; 0x05
    973e:	01 90       	ld	r0, Z+
    9740:	f0 81       	ld	r31, Z
    9742:	e0 2d       	mov	r30, r0
    9744:	10 83       	st	Z, r17
    9746:	c1 82       	std	Z+1, r12	; 0x01
    9748:	d2 82       	std	Z+2, r13	; 0x02
    974a:	f7 01       	movw	r30, r14
    974c:	82 81       	ldd	r24, Z+2	; 0x02
    974e:	8f 5f       	subi	r24, 0xFF	; 255
    9750:	82 83       	std	Z+2, r24	; 0x02
    9752:	03 80       	ldd	r0, Z+3	; 0x03
    9754:	f4 81       	ldd	r31, Z+4	; 0x04
    9756:	e0 2d       	mov	r30, r0
    9758:	81 81       	ldd	r24, Z+1	; 0x01
    975a:	00 23       	and	r16, r16
    975c:	11 f4       	brne	.+4      	; 0x9762 <hal_requestDmaInterrupt+0xd6>
    975e:	83 60       	ori	r24, 0x03	; 3
    9760:	01 c0       	rjmp	.+2      	; 0x9764 <hal_requestDmaInterrupt+0xd8>
    9762:	8c 60       	ori	r24, 0x0C	; 12
    9764:	81 83       	std	Z+1, r24	; 0x01
    9766:	89 81       	ldd	r24, Y+1	; 0x01
    9768:	8f bf       	out	0x3f, r24	; 63
    976a:	80 e0       	ldi	r24, 0x00	; 0
    976c:	03 c0       	rjmp	.+6      	; 0x9774 <hal_requestDmaInterrupt+0xe8>
    976e:	89 81       	ldd	r24, Y+1	; 0x01
    9770:	8f bf       	out	0x3f, r24	; 63
    9772:	8a ef       	ldi	r24, 0xFA	; 250
    9774:	27 96       	adiw	r28, 0x07	; 7
    9776:	cd bf       	out	0x3d, r28	; 61
    9778:	de bf       	out	0x3e, r29	; 62
    977a:	df 91       	pop	r29
    977c:	cf 91       	pop	r28
    977e:	1f 91       	pop	r17
    9780:	0f 91       	pop	r16
    9782:	ff 90       	pop	r15
    9784:	ef 90       	pop	r14
    9786:	df 90       	pop	r13
    9788:	cf 90       	pop	r12
    978a:	08 95       	ret

0000978c <hal_releaseDmaInterrupt>:
    978c:	cf 93       	push	r28
    978e:	df 93       	push	r29
    9790:	00 d0       	rcall	.+0      	; 0x9792 <hal_releaseDmaInterrupt+0x6>
    9792:	cd b7       	in	r28, 0x3d	; 61
    9794:	de b7       	in	r29, 0x3e	; 62
    9796:	8a 83       	std	Y+2, r24	; 0x02
    9798:	9b 83       	std	Y+3, r25	; 0x03
    979a:	8f b7       	in	r24, 0x3f	; 63
    979c:	89 83       	std	Y+1, r24	; 0x01
    979e:	f8 94       	cli
    97a0:	ea 81       	ldd	r30, Y+2	; 0x02
    97a2:	fb 81       	ldd	r31, Y+3	; 0x03
    97a4:	80 91 e6 21 	lds	r24, 0x21E6
    97a8:	90 91 e7 21 	lds	r25, 0x21E7
    97ac:	24 81       	ldd	r18, Z+4	; 0x04
    97ae:	35 81       	ldd	r19, Z+5	; 0x05
    97b0:	28 17       	cp	r18, r24
    97b2:	39 07       	cpc	r19, r25
    97b4:	21 f0       	breq	.+8      	; 0x97be <hal_releaseDmaInterrupt+0x32>
    97b6:	89 81       	ldd	r24, Y+1	; 0x01
    97b8:	8f bf       	out	0x3f, r24	; 63
    97ba:	8e ef       	ldi	r24, 0xFE	; 254
    97bc:	4d c0       	rjmp	.+154    	; 0x9858 <hal_releaseDmaInterrupt+0xcc>
    97be:	ea 81       	ldd	r30, Y+2	; 0x02
    97c0:	fb 81       	ldd	r31, Y+3	; 0x03
    97c2:	a0 81       	ld	r26, Z
    97c4:	b1 81       	ldd	r27, Z+1	; 0x01
    97c6:	2c 91       	ld	r18, X
    97c8:	26 0f       	add	r18, r22
    97ca:	e0 91 d8 21 	lds	r30, 0x21D8
    97ce:	f0 91 d9 21 	lds	r31, 0x21D9
    97d2:	42 81       	ldd	r20, Z+2	; 0x02
    97d4:	53 81       	ldd	r21, Z+3	; 0x03
    97d6:	e0 91 d8 21 	lds	r30, 0x21D8
    97da:	f0 91 d9 21 	lds	r31, 0x21D9
    97de:	30 c0       	rjmp	.+96     	; 0x9840 <hal_releaseDmaInterrupt+0xb4>
    97e0:	e0 91 f0 24 	lds	r30, 0x24F0
    97e4:	f0 91 f1 24 	lds	r31, 0x24F1
    97e8:	01 90       	ld	r0, Z+
    97ea:	f0 81       	ld	r31, Z
    97ec:	e0 2d       	mov	r30, r0
    97ee:	80 81       	ld	r24, Z
    97f0:	82 17       	cp	r24, r18
    97f2:	01 f5       	brne	.+64     	; 0x9834 <hal_releaseDmaInterrupt+0xa8>
    97f4:	12 96       	adiw	r26, 0x02	; 2
    97f6:	8c 91       	ld	r24, X
    97f8:	12 97       	sbiw	r26, 0x02	; 2
    97fa:	81 50       	subi	r24, 0x01	; 1
    97fc:	12 96       	adiw	r26, 0x02	; 2
    97fe:	8c 93       	st	X, r24
    9800:	12 97       	sbiw	r26, 0x02	; 2
    9802:	13 96       	adiw	r26, 0x03	; 3
    9804:	ed 91       	ld	r30, X+
    9806:	fc 91       	ld	r31, X
    9808:	14 97       	sbiw	r26, 0x04	; 4
    980a:	81 81       	ldd	r24, Z+1	; 0x01
    980c:	66 23       	and	r22, r22
    980e:	11 f4       	brne	.+4      	; 0x9814 <hal_releaseDmaInterrupt+0x88>
    9810:	8c 7f       	andi	r24, 0xFC	; 252
    9812:	01 c0       	rjmp	.+2      	; 0x9816 <hal_releaseDmaInterrupt+0x8a>
    9814:	83 7f       	andi	r24, 0xF3	; 243
    9816:	81 83       	std	Z+1, r24	; 0x01
    9818:	80 91 d8 21 	lds	r24, 0x21D8
    981c:	90 91 d9 21 	lds	r25, 0x21D9
    9820:	60 91 f0 24 	lds	r22, 0x24F0
    9824:	70 91 f1 24 	lds	r23, 0x24F1
    9828:	0e 94 6a 8a 	call	0x114d4	; 0x114d4 <utl_destroyLink>
    982c:	89 81       	ldd	r24, Y+1	; 0x01
    982e:	8f bf       	out	0x3f, r24	; 63
    9830:	80 e0       	ldi	r24, 0x00	; 0
    9832:	12 c0       	rjmp	.+36     	; 0x9858 <hal_releaseDmaInterrupt+0xcc>
    9834:	41 50       	subi	r20, 0x01	; 1
    9836:	50 40       	sbci	r21, 0x00	; 0
    9838:	e0 91 f0 24 	lds	r30, 0x24F0
    983c:	f0 91 f1 24 	lds	r31, 0x24F1
    9840:	80 85       	ldd	r24, Z+8	; 0x08
    9842:	91 85       	ldd	r25, Z+9	; 0x09
    9844:	80 93 f0 24 	sts	0x24F0, r24
    9848:	90 93 f1 24 	sts	0x24F1, r25
    984c:	14 16       	cp	r1, r20
    984e:	15 06       	cpc	r1, r21
    9850:	3c f2       	brlt	.-114    	; 0x97e0 <hal_releaseDmaInterrupt+0x54>
    9852:	89 81       	ldd	r24, Y+1	; 0x01
    9854:	8f bf       	out	0x3f, r24	; 63
    9856:	8b ef       	ldi	r24, 0xFB	; 251
    9858:	23 96       	adiw	r28, 0x03	; 3
    985a:	cd bf       	out	0x3d, r28	; 61
    985c:	de bf       	out	0x3e, r29	; 62
    985e:	df 91       	pop	r29
    9860:	cf 91       	pop	r28
    9862:	08 95       	ret

00009864 <hal_requestDmaChannel>:
    9864:	1f 93       	push	r17
    9866:	cf 93       	push	r28
    9868:	df 93       	push	r29
    986a:	cd b7       	in	r28, 0x3d	; 61
    986c:	de b7       	in	r29, 0x3e	; 62
    986e:	25 97       	sbiw	r28, 0x05	; 5
    9870:	cd bf       	out	0x3d, r28	; 61
    9872:	de bf       	out	0x3e, r29	; 62
    9874:	8f b7       	in	r24, 0x3f	; 63
    9876:	89 83       	std	Y+1, r24	; 0x01
    9878:	f8 94       	cli
    987a:	80 91 f4 21 	lds	r24, 0x21F4
    987e:	88 23       	and	r24, r24
    9880:	d9 f0       	breq	.+54     	; 0x98b8 <hal_requestDmaChannel+0x54>
    9882:	8f b7       	in	r24, 0x3f	; 63
    9884:	8a 83       	std	Y+2, r24	; 0x02
    9886:	f8 94       	cli
    9888:	80 91 00 01 	lds	r24, 0x0100
    988c:	8f 77       	andi	r24, 0x7F	; 127
    988e:	80 93 00 01 	sts	0x0100, r24
    9892:	80 91 00 01 	lds	r24, 0x0100
    9896:	83 7f       	andi	r24, 0xF3	; 243
    9898:	80 93 00 01 	sts	0x0100, r24
    989c:	80 91 00 01 	lds	r24, 0x0100
    98a0:	83 60       	ori	r24, 0x03	; 3
    98a2:	80 93 00 01 	sts	0x0100, r24
    98a6:	80 91 00 01 	lds	r24, 0x0100
    98aa:	80 68       	ori	r24, 0x80	; 128
    98ac:	80 93 00 01 	sts	0x0100, r24
    98b0:	8a 81       	ldd	r24, Y+2	; 0x02
    98b2:	8f bf       	out	0x3f, r24	; 63
    98b4:	10 92 f4 21 	sts	0x21F4, r1
    98b8:	44 e0       	ldi	r20, 0x04	; 4
    98ba:	50 e0       	ldi	r21, 0x00	; 0
    98bc:	10 e0       	ldi	r17, 0x00	; 0
    98be:	e0 91 e6 21 	lds	r30, 0x21E6
    98c2:	f0 91 e7 21 	lds	r31, 0x21E7
    98c6:	82 81       	ldd	r24, Z+2	; 0x02
    98c8:	93 81       	ldd	r25, Z+3	; 0x03
    98ca:	e0 91 e6 21 	lds	r30, 0x21E6
    98ce:	f0 91 e7 21 	lds	r31, 0x21E7
    98d2:	0b c0       	rjmp	.+22     	; 0x98ea <hal_requestDmaChannel+0x86>
    98d4:	ea 81       	ldd	r30, Y+2	; 0x02
    98d6:	fb 81       	ldd	r31, Y+3	; 0x03
    98d8:	01 90       	ld	r0, Z+
    98da:	f0 81       	ld	r31, Z
    98dc:	e0 2d       	mov	r30, r0
    98de:	20 81       	ld	r18, Z
    98e0:	21 17       	cp	r18, r17
    98e2:	59 f0       	breq	.+22     	; 0x98fa <hal_requestDmaChannel+0x96>
    98e4:	01 97       	sbiw	r24, 0x01	; 1
    98e6:	ea 81       	ldd	r30, Y+2	; 0x02
    98e8:	fb 81       	ldd	r31, Y+3	; 0x03
    98ea:	20 85       	ldd	r18, Z+8	; 0x08
    98ec:	31 85       	ldd	r19, Z+9	; 0x09
    98ee:	2a 83       	std	Y+2, r18	; 0x02
    98f0:	3b 83       	std	Y+3, r19	; 0x03
    98f2:	18 16       	cp	r1, r24
    98f4:	19 06       	cpc	r1, r25
    98f6:	74 f3       	brlt	.-36     	; 0x98d4 <hal_requestDmaChannel+0x70>
    98f8:	07 c0       	rjmp	.+14     	; 0x9908 <hal_requestDmaChannel+0xa4>
    98fa:	30 97       	sbiw	r30, 0x00	; 0
    98fc:	29 f0       	breq	.+10     	; 0x9908 <hal_requestDmaChannel+0xa4>
    98fe:	1e 5f       	subi	r17, 0xFE	; 254
    9900:	41 50       	subi	r20, 0x01	; 1
    9902:	50 40       	sbci	r21, 0x00	; 0
    9904:	e1 f6       	brne	.-72     	; 0x98be <hal_requestDmaChannel+0x5a>
    9906:	4f c0       	rjmp	.+158    	; 0x99a6 <hal_requestDmaChannel+0x142>
    9908:	85 e0       	ldi	r24, 0x05	; 5
    990a:	90 e0       	ldi	r25, 0x00	; 0
    990c:	0e 94 5e 8b 	call	0x116bc	; 0x116bc <utl_createLink>
    9910:	8a 83       	std	Y+2, r24	; 0x02
    9912:	9b 83       	std	Y+3, r25	; 0x03
    9914:	8a 81       	ldd	r24, Y+2	; 0x02
    9916:	9b 81       	ldd	r25, Y+3	; 0x03
    9918:	97 fd       	sbrc	r25, 7
    991a:	2d c0       	rjmp	.+90     	; 0x9976 <hal_requestDmaChannel+0x112>
    991c:	ea 81       	ldd	r30, Y+2	; 0x02
    991e:	fb 81       	ldd	r31, Y+3	; 0x03
    9920:	01 90       	ld	r0, Z+
    9922:	f0 81       	ld	r31, Z
    9924:	e0 2d       	mov	r30, r0
    9926:	11 82       	std	Z+1, r1	; 0x01
    9928:	10 83       	st	Z, r17
    992a:	12 82       	std	Z+2, r1	; 0x02
    992c:	12 30       	cpi	r17, 0x02	; 2
    992e:	69 f0       	breq	.+26     	; 0x994a <hal_requestDmaChannel+0xe6>
    9930:	13 30       	cpi	r17, 0x03	; 3
    9932:	18 f4       	brcc	.+6      	; 0x993a <hal_requestDmaChannel+0xd6>
    9934:	11 23       	and	r17, r17
    9936:	31 f0       	breq	.+12     	; 0x9944 <hal_requestDmaChannel+0xe0>
    9938:	12 c0       	rjmp	.+36     	; 0x995e <hal_requestDmaChannel+0xfa>
    993a:	14 30       	cpi	r17, 0x04	; 4
    993c:	49 f0       	breq	.+18     	; 0x9950 <hal_requestDmaChannel+0xec>
    993e:	16 30       	cpi	r17, 0x06	; 6
    9940:	71 f4       	brne	.+28     	; 0x995e <hal_requestDmaChannel+0xfa>
    9942:	09 c0       	rjmp	.+18     	; 0x9956 <hal_requestDmaChannel+0xf2>
    9944:	80 e1       	ldi	r24, 0x10	; 16
    9946:	91 e0       	ldi	r25, 0x01	; 1
    9948:	08 c0       	rjmp	.+16     	; 0x995a <hal_requestDmaChannel+0xf6>
    994a:	80 e2       	ldi	r24, 0x20	; 32
    994c:	91 e0       	ldi	r25, 0x01	; 1
    994e:	05 c0       	rjmp	.+10     	; 0x995a <hal_requestDmaChannel+0xf6>
    9950:	80 e3       	ldi	r24, 0x30	; 48
    9952:	91 e0       	ldi	r25, 0x01	; 1
    9954:	02 c0       	rjmp	.+4      	; 0x995a <hal_requestDmaChannel+0xf6>
    9956:	80 e4       	ldi	r24, 0x40	; 64
    9958:	91 e0       	ldi	r25, 0x01	; 1
    995a:	83 83       	std	Z+3, r24	; 0x03
    995c:	94 83       	std	Z+4, r25	; 0x04
    995e:	80 91 e6 21 	lds	r24, 0x21E6
    9962:	90 91 e7 21 	lds	r25, 0x21E7
    9966:	6a 81       	ldd	r22, Y+2	; 0x02
    9968:	7b 81       	ldd	r23, Y+3	; 0x03
    996a:	41 e0       	ldi	r20, 0x01	; 1
    996c:	0e 94 6e 89 	call	0x112dc	; 0x112dc <utl_insertLink>
    9970:	8a 81       	ldd	r24, Y+2	; 0x02
    9972:	9b 81       	ldd	r25, Y+3	; 0x03
    9974:	02 c0       	rjmp	.+4      	; 0x997a <hal_requestDmaChannel+0x116>
    9976:	8f ef       	ldi	r24, 0xFF	; 255
    9978:	9f ef       	ldi	r25, 0xFF	; 255
    997a:	8c 83       	std	Y+4, r24	; 0x04
    997c:	9d 83       	std	Y+5, r25	; 0x05
    997e:	8c 81       	ldd	r24, Y+4	; 0x04
    9980:	9d 81       	ldd	r25, Y+5	; 0x05
    9982:	97 ff       	sbrs	r25, 7
    9984:	05 c0       	rjmp	.+10     	; 0x9990 <hal_requestDmaChannel+0x12c>
    9986:	89 81       	ldd	r24, Y+1	; 0x01
    9988:	8f bf       	out	0x3f, r24	; 63
    998a:	8f ef       	ldi	r24, 0xFF	; 255
    998c:	9f ef       	ldi	r25, 0xFF	; 255
    998e:	04 c0       	rjmp	.+8      	; 0x9998 <hal_requestDmaChannel+0x134>
    9990:	89 81       	ldd	r24, Y+1	; 0x01
    9992:	8f bf       	out	0x3f, r24	; 63
    9994:	8c 81       	ldd	r24, Y+4	; 0x04
    9996:	9d 81       	ldd	r25, Y+5	; 0x05
    9998:	25 96       	adiw	r28, 0x05	; 5
    999a:	cd bf       	out	0x3d, r28	; 61
    999c:	de bf       	out	0x3e, r29	; 62
    999e:	df 91       	pop	r29
    99a0:	cf 91       	pop	r28
    99a2:	1f 91       	pop	r17
    99a4:	08 95       	ret
    99a6:	89 81       	ldd	r24, Y+1	; 0x01
    99a8:	8f bf       	out	0x3f, r24	; 63
    99aa:	89 ef       	ldi	r24, 0xF9	; 249
    99ac:	9f ef       	ldi	r25, 0xFF	; 255
    99ae:	f4 cf       	rjmp	.-24     	; 0x9998 <hal_requestDmaChannel+0x134>

000099b0 <hal_releaseDmaChannel>:
    99b0:	af 92       	push	r10
    99b2:	bf 92       	push	r11
    99b4:	cf 92       	push	r12
    99b6:	df 92       	push	r13
    99b8:	ef 92       	push	r14
    99ba:	ff 92       	push	r15
    99bc:	0f 93       	push	r16
    99be:	1f 93       	push	r17
    99c0:	cf 93       	push	r28
    99c2:	df 93       	push	r29
    99c4:	00 d0       	rcall	.+0      	; 0x99c6 <hal_releaseDmaChannel+0x16>
    99c6:	cd b7       	in	r28, 0x3d	; 61
    99c8:	de b7       	in	r29, 0x3e	; 62
    99ca:	8a 83       	std	Y+2, r24	; 0x02
    99cc:	9b 83       	std	Y+3, r25	; 0x03
    99ce:	8f b7       	in	r24, 0x3f	; 63
    99d0:	89 83       	std	Y+1, r24	; 0x01
    99d2:	f8 94       	cli
    99d4:	ea 81       	ldd	r30, Y+2	; 0x02
    99d6:	fb 81       	ldd	r31, Y+3	; 0x03
    99d8:	80 91 e6 21 	lds	r24, 0x21E6
    99dc:	90 91 e7 21 	lds	r25, 0x21E7
    99e0:	24 81       	ldd	r18, Z+4	; 0x04
    99e2:	35 81       	ldd	r19, Z+5	; 0x05
    99e4:	28 17       	cp	r18, r24
    99e6:	39 07       	cpc	r19, r25
    99e8:	21 f0       	breq	.+8      	; 0x99f2 <hal_releaseDmaChannel+0x42>
    99ea:	89 81       	ldd	r24, Y+1	; 0x01
    99ec:	8f bf       	out	0x3f, r24	; 63
    99ee:	8e ef       	ldi	r24, 0xFE	; 254
    99f0:	8a c0       	rjmp	.+276    	; 0x9b06 <hal_releaseDmaChannel+0x156>
    99f2:	ea 81       	ldd	r30, Y+2	; 0x02
    99f4:	fb 81       	ldd	r31, Y+3	; 0x03
    99f6:	00 81       	ld	r16, Z
    99f8:	11 81       	ldd	r17, Z+1	; 0x01
    99fa:	82 e0       	ldi	r24, 0x02	; 2
    99fc:	a8 2e       	mov	r10, r24
    99fe:	b1 2c       	mov	r11, r1
    9a00:	ff 24       	eor	r15, r15
    9a02:	d8 01       	movw	r26, r16
    9a04:	ec 90       	ld	r14, X
    9a06:	ef 0c       	add	r14, r15
    9a08:	e0 91 d8 21 	lds	r30, 0x21D8
    9a0c:	f0 91 d9 21 	lds	r31, 0x21D9
    9a10:	c2 80       	ldd	r12, Z+2	; 0x02
    9a12:	d3 80       	ldd	r13, Z+3	; 0x03
    9a14:	e0 91 d8 21 	lds	r30, 0x21D8
    9a18:	f0 91 d9 21 	lds	r31, 0x21D9
    9a1c:	3a c0       	rjmp	.+116    	; 0x9a92 <hal_releaseDmaChannel+0xe2>
    9a1e:	e0 91 f4 24 	lds	r30, 0x24F4
    9a22:	f0 91 f5 24 	lds	r31, 0x24F5
    9a26:	a0 81       	ld	r26, Z
    9a28:	b1 81       	ldd	r27, Z+1	; 0x01
    9a2a:	e0 91 f4 24 	lds	r30, 0x24F4
    9a2e:	f0 91 f5 24 	lds	r31, 0x24F5
    9a32:	82 85       	ldd	r24, Z+10	; 0x0a
    9a34:	93 85       	ldd	r25, Z+11	; 0x0b
    9a36:	80 93 f2 24 	sts	0x24F2, r24
    9a3a:	90 93 f3 24 	sts	0x24F3, r25
    9a3e:	8c 91       	ld	r24, X
    9a40:	8e 15       	cp	r24, r14
    9a42:	01 f5       	brne	.+64     	; 0x9a84 <hal_releaseDmaChannel+0xd4>
    9a44:	f8 01       	movw	r30, r16
    9a46:	82 81       	ldd	r24, Z+2	; 0x02
    9a48:	81 50       	subi	r24, 0x01	; 1
    9a4a:	82 83       	std	Z+2, r24	; 0x02
    9a4c:	03 80       	ldd	r0, Z+3	; 0x03
    9a4e:	f4 81       	ldd	r31, Z+4	; 0x04
    9a50:	e0 2d       	mov	r30, r0
    9a52:	81 81       	ldd	r24, Z+1	; 0x01
    9a54:	ff 20       	and	r15, r15
    9a56:	11 f4       	brne	.+4      	; 0x9a5c <hal_releaseDmaChannel+0xac>
    9a58:	8c 7f       	andi	r24, 0xFC	; 252
    9a5a:	01 c0       	rjmp	.+2      	; 0x9a5e <hal_releaseDmaChannel+0xae>
    9a5c:	83 7f       	andi	r24, 0xF3	; 243
    9a5e:	81 83       	std	Z+1, r24	; 0x01
    9a60:	80 91 d8 21 	lds	r24, 0x21D8
    9a64:	90 91 d9 21 	lds	r25, 0x21D9
    9a68:	60 91 f4 24 	lds	r22, 0x24F4
    9a6c:	70 91 f5 24 	lds	r23, 0x24F5
    9a70:	0e 94 6a 8a 	call	0x114d4	; 0x114d4 <utl_destroyLink>
    9a74:	80 91 f2 24 	lds	r24, 0x24F2
    9a78:	90 91 f3 24 	lds	r25, 0x24F3
    9a7c:	80 93 f4 24 	sts	0x24F4, r24
    9a80:	90 93 f5 24 	sts	0x24F5, r25
    9a84:	08 94       	sec
    9a86:	c1 08       	sbc	r12, r1
    9a88:	d1 08       	sbc	r13, r1
    9a8a:	e0 91 f4 24 	lds	r30, 0x24F4
    9a8e:	f0 91 f5 24 	lds	r31, 0x24F5
    9a92:	80 85       	ldd	r24, Z+8	; 0x08
    9a94:	91 85       	ldd	r25, Z+9	; 0x09
    9a96:	80 93 f4 24 	sts	0x24F4, r24
    9a9a:	90 93 f5 24 	sts	0x24F5, r25
    9a9e:	1c 14       	cp	r1, r12
    9aa0:	1d 04       	cpc	r1, r13
    9aa2:	0c f4       	brge	.+2      	; 0x9aa6 <hal_releaseDmaChannel+0xf6>
    9aa4:	bc cf       	rjmp	.-136    	; 0x9a1e <hal_releaseDmaChannel+0x6e>
    9aa6:	f3 94       	inc	r15
    9aa8:	08 94       	sec
    9aaa:	a1 08       	sbc	r10, r1
    9aac:	b1 08       	sbc	r11, r1
    9aae:	a1 14       	cp	r10, r1
    9ab0:	b1 04       	cpc	r11, r1
    9ab2:	09 f0       	breq	.+2      	; 0x9ab6 <hal_releaseDmaChannel+0x106>
    9ab4:	a6 cf       	rjmp	.-180    	; 0x9a02 <hal_releaseDmaChannel+0x52>
    9ab6:	d8 01       	movw	r26, r16
    9ab8:	13 96       	adiw	r26, 0x03	; 3
    9aba:	ed 91       	ld	r30, X+
    9abc:	fc 91       	ld	r31, X
    9abe:	14 97       	sbiw	r26, 0x04	; 4
    9ac0:	80 81       	ld	r24, Z
    9ac2:	8f 77       	andi	r24, 0x7F	; 127
    9ac4:	80 83       	st	Z, r24
    9ac6:	13 96       	adiw	r26, 0x03	; 3
    9ac8:	ed 91       	ld	r30, X+
    9aca:	fc 91       	ld	r31, X
    9acc:	14 97       	sbiw	r26, 0x04	; 4
    9ace:	80 81       	ld	r24, Z
    9ad0:	8f 77       	andi	r24, 0x7F	; 127
    9ad2:	80 83       	st	Z, r24
    9ad4:	13 96       	adiw	r26, 0x03	; 3
    9ad6:	ed 91       	ld	r30, X+
    9ad8:	fc 91       	ld	r31, X
    9ada:	14 97       	sbiw	r26, 0x04	; 4
    9adc:	80 81       	ld	r24, Z
    9ade:	80 64       	ori	r24, 0x40	; 64
    9ae0:	80 83       	st	Z, r24
    9ae2:	13 96       	adiw	r26, 0x03	; 3
    9ae4:	ed 91       	ld	r30, X+
    9ae6:	fc 91       	ld	r31, X
    9ae8:	14 97       	sbiw	r26, 0x04	; 4
    9aea:	80 81       	ld	r24, Z
    9aec:	8f 7b       	andi	r24, 0xBF	; 191
    9aee:	80 83       	st	Z, r24
    9af0:	80 91 e6 21 	lds	r24, 0x21E6
    9af4:	90 91 e7 21 	lds	r25, 0x21E7
    9af8:	6a 81       	ldd	r22, Y+2	; 0x02
    9afa:	7b 81       	ldd	r23, Y+3	; 0x03
    9afc:	0e 94 6a 8a 	call	0x114d4	; 0x114d4 <utl_destroyLink>
    9b00:	89 81       	ldd	r24, Y+1	; 0x01
    9b02:	8f bf       	out	0x3f, r24	; 63
    9b04:	80 e0       	ldi	r24, 0x00	; 0
    9b06:	23 96       	adiw	r28, 0x03	; 3
    9b08:	cd bf       	out	0x3d, r28	; 61
    9b0a:	de bf       	out	0x3e, r29	; 62
    9b0c:	df 91       	pop	r29
    9b0e:	cf 91       	pop	r28
    9b10:	1f 91       	pop	r17
    9b12:	0f 91       	pop	r16
    9b14:	ff 90       	pop	r15
    9b16:	ef 90       	pop	r14
    9b18:	df 90       	pop	r13
    9b1a:	cf 90       	pop	r12
    9b1c:	bf 90       	pop	r11
    9b1e:	af 90       	pop	r10
    9b20:	08 95       	ret

00009b22 <hal_setDmaBlockSize>:
    9b22:	cf 93       	push	r28
    9b24:	df 93       	push	r29
    9b26:	00 d0       	rcall	.+0      	; 0x9b28 <hal_setDmaBlockSize+0x6>
    9b28:	cd b7       	in	r28, 0x3d	; 61
    9b2a:	de b7       	in	r29, 0x3e	; 62
    9b2c:	8a 83       	std	Y+2, r24	; 0x02
    9b2e:	9b 83       	std	Y+3, r25	; 0x03
    9b30:	8f b7       	in	r24, 0x3f	; 63
    9b32:	89 83       	std	Y+1, r24	; 0x01
    9b34:	f8 94       	cli
    9b36:	61 15       	cp	r22, r1
    9b38:	71 05       	cpc	r23, r1
    9b3a:	21 f4       	brne	.+8      	; 0x9b44 <hal_setDmaBlockSize+0x22>
    9b3c:	89 81       	ldd	r24, Y+1	; 0x01
    9b3e:	8f bf       	out	0x3f, r24	; 63
    9b40:	84 ef       	ldi	r24, 0xF4	; 244
    9b42:	21 c0       	rjmp	.+66     	; 0x9b86 <hal_setDmaBlockSize+0x64>
    9b44:	ea 81       	ldd	r30, Y+2	; 0x02
    9b46:	fb 81       	ldd	r31, Y+3	; 0x03
    9b48:	80 91 e6 21 	lds	r24, 0x21E6
    9b4c:	90 91 e7 21 	lds	r25, 0x21E7
    9b50:	24 81       	ldd	r18, Z+4	; 0x04
    9b52:	35 81       	ldd	r19, Z+5	; 0x05
    9b54:	28 17       	cp	r18, r24
    9b56:	39 07       	cpc	r19, r25
    9b58:	21 f0       	breq	.+8      	; 0x9b62 <hal_setDmaBlockSize+0x40>
    9b5a:	89 81       	ldd	r24, Y+1	; 0x01
    9b5c:	8f bf       	out	0x3f, r24	; 63
    9b5e:	8e ef       	ldi	r24, 0xFE	; 254
    9b60:	12 c0       	rjmp	.+36     	; 0x9b86 <hal_setDmaBlockSize+0x64>
    9b62:	ea 81       	ldd	r30, Y+2	; 0x02
    9b64:	fb 81       	ldd	r31, Y+3	; 0x03
    9b66:	01 90       	ld	r0, Z+
    9b68:	f0 81       	ld	r31, Z
    9b6a:	e0 2d       	mov	r30, r0
    9b6c:	a3 81       	ldd	r26, Z+3	; 0x03
    9b6e:	b4 81       	ldd	r27, Z+4	; 0x04
    9b70:	8c 91       	ld	r24, X
    9b72:	8f 77       	andi	r24, 0x7F	; 127
    9b74:	8c 93       	st	X, r24
    9b76:	03 80       	ldd	r0, Z+3	; 0x03
    9b78:	f4 81       	ldd	r31, Z+4	; 0x04
    9b7a:	e0 2d       	mov	r30, r0
    9b7c:	64 83       	std	Z+4, r22	; 0x04
    9b7e:	75 83       	std	Z+5, r23	; 0x05
    9b80:	89 81       	ldd	r24, Y+1	; 0x01
    9b82:	8f bf       	out	0x3f, r24	; 63
    9b84:	80 e0       	ldi	r24, 0x00	; 0
    9b86:	23 96       	adiw	r28, 0x03	; 3
    9b88:	cd bf       	out	0x3d, r28	; 61
    9b8a:	de bf       	out	0x3e, r29	; 62
    9b8c:	df 91       	pop	r29
    9b8e:	cf 91       	pop	r28
    9b90:	08 95       	ret

00009b92 <hal_setDmaSourceAddress>:
    9b92:	cf 92       	push	r12
    9b94:	df 92       	push	r13
    9b96:	ef 92       	push	r14
    9b98:	ff 92       	push	r15
    9b9a:	cf 93       	push	r28
    9b9c:	df 93       	push	r29
    9b9e:	00 d0       	rcall	.+0      	; 0x9ba0 <hal_setDmaSourceAddress+0xe>
    9ba0:	cd b7       	in	r28, 0x3d	; 61
    9ba2:	de b7       	in	r29, 0x3e	; 62
    9ba4:	8a 83       	std	Y+2, r24	; 0x02
    9ba6:	9b 83       	std	Y+3, r25	; 0x03
    9ba8:	6a 01       	movw	r12, r20
    9baa:	7b 01       	movw	r14, r22
    9bac:	8f b7       	in	r24, 0x3f	; 63
    9bae:	89 83       	std	Y+1, r24	; 0x01
    9bb0:	f8 94       	cli
    9bb2:	ea 81       	ldd	r30, Y+2	; 0x02
    9bb4:	fb 81       	ldd	r31, Y+3	; 0x03
    9bb6:	80 91 e6 21 	lds	r24, 0x21E6
    9bba:	90 91 e7 21 	lds	r25, 0x21E7
    9bbe:	24 81       	ldd	r18, Z+4	; 0x04
    9bc0:	35 81       	ldd	r19, Z+5	; 0x05
    9bc2:	28 17       	cp	r18, r24
    9bc4:	39 07       	cpc	r19, r25
    9bc6:	21 f0       	breq	.+8      	; 0x9bd0 <hal_setDmaSourceAddress+0x3e>
    9bc8:	89 81       	ldd	r24, Y+1	; 0x01
    9bca:	8f bf       	out	0x3f, r24	; 63
    9bcc:	8e ef       	ldi	r24, 0xFE	; 254
    9bce:	21 c0       	rjmp	.+66     	; 0x9c12 <hal_setDmaSourceAddress+0x80>
    9bd0:	ea 81       	ldd	r30, Y+2	; 0x02
    9bd2:	fb 81       	ldd	r31, Y+3	; 0x03
    9bd4:	01 90       	ld	r0, Z+
    9bd6:	f0 81       	ld	r31, Z
    9bd8:	e0 2d       	mov	r30, r0
    9bda:	a3 81       	ldd	r26, Z+3	; 0x03
    9bdc:	b4 81       	ldd	r27, Z+4	; 0x04
    9bde:	8c 91       	ld	r24, X
    9be0:	8f 77       	andi	r24, 0x7F	; 127
    9be2:	8c 93       	st	X, r24
    9be4:	a3 81       	ldd	r26, Z+3	; 0x03
    9be6:	b4 81       	ldd	r27, Z+4	; 0x04
    9be8:	18 96       	adiw	r26, 0x08	; 8
    9bea:	4c 93       	st	X, r20
    9bec:	a3 81       	ldd	r26, Z+3	; 0x03
    9bee:	b4 81       	ldd	r27, Z+4	; 0x04
    9bf0:	45 2f       	mov	r20, r21
    9bf2:	56 2f       	mov	r21, r22
    9bf4:	67 2f       	mov	r22, r23
    9bf6:	77 27       	eor	r23, r23
    9bf8:	19 96       	adiw	r26, 0x09	; 9
    9bfa:	4c 93       	st	X, r20
    9bfc:	19 97       	sbiw	r26, 0x09	; 9
    9bfe:	03 80       	ldd	r0, Z+3	; 0x03
    9c00:	f4 81       	ldd	r31, Z+4	; 0x04
    9c02:	e0 2d       	mov	r30, r0
    9c04:	67 01       	movw	r12, r14
    9c06:	ee 24       	eor	r14, r14
    9c08:	ff 24       	eor	r15, r15
    9c0a:	c2 86       	std	Z+10, r12	; 0x0a
    9c0c:	89 81       	ldd	r24, Y+1	; 0x01
    9c0e:	8f bf       	out	0x3f, r24	; 63
    9c10:	80 e0       	ldi	r24, 0x00	; 0
    9c12:	23 96       	adiw	r28, 0x03	; 3
    9c14:	cd bf       	out	0x3d, r28	; 61
    9c16:	de bf       	out	0x3e, r29	; 62
    9c18:	df 91       	pop	r29
    9c1a:	cf 91       	pop	r28
    9c1c:	ff 90       	pop	r15
    9c1e:	ef 90       	pop	r14
    9c20:	df 90       	pop	r13
    9c22:	cf 90       	pop	r12
    9c24:	08 95       	ret

00009c26 <hal_setDmaDestAddress>:
    9c26:	cf 92       	push	r12
    9c28:	df 92       	push	r13
    9c2a:	ef 92       	push	r14
    9c2c:	ff 92       	push	r15
    9c2e:	cf 93       	push	r28
    9c30:	df 93       	push	r29
    9c32:	00 d0       	rcall	.+0      	; 0x9c34 <hal_setDmaDestAddress+0xe>
    9c34:	cd b7       	in	r28, 0x3d	; 61
    9c36:	de b7       	in	r29, 0x3e	; 62
    9c38:	8a 83       	std	Y+2, r24	; 0x02
    9c3a:	9b 83       	std	Y+3, r25	; 0x03
    9c3c:	6a 01       	movw	r12, r20
    9c3e:	7b 01       	movw	r14, r22
    9c40:	8f b7       	in	r24, 0x3f	; 63
    9c42:	89 83       	std	Y+1, r24	; 0x01
    9c44:	f8 94       	cli
    9c46:	ea 81       	ldd	r30, Y+2	; 0x02
    9c48:	fb 81       	ldd	r31, Y+3	; 0x03
    9c4a:	80 91 e6 21 	lds	r24, 0x21E6
    9c4e:	90 91 e7 21 	lds	r25, 0x21E7
    9c52:	24 81       	ldd	r18, Z+4	; 0x04
    9c54:	35 81       	ldd	r19, Z+5	; 0x05
    9c56:	28 17       	cp	r18, r24
    9c58:	39 07       	cpc	r19, r25
    9c5a:	21 f0       	breq	.+8      	; 0x9c64 <hal_setDmaDestAddress+0x3e>
    9c5c:	89 81       	ldd	r24, Y+1	; 0x01
    9c5e:	8f bf       	out	0x3f, r24	; 63
    9c60:	8e ef       	ldi	r24, 0xFE	; 254
    9c62:	21 c0       	rjmp	.+66     	; 0x9ca6 <hal_setDmaDestAddress+0x80>
    9c64:	ea 81       	ldd	r30, Y+2	; 0x02
    9c66:	fb 81       	ldd	r31, Y+3	; 0x03
    9c68:	01 90       	ld	r0, Z+
    9c6a:	f0 81       	ld	r31, Z
    9c6c:	e0 2d       	mov	r30, r0
    9c6e:	a3 81       	ldd	r26, Z+3	; 0x03
    9c70:	b4 81       	ldd	r27, Z+4	; 0x04
    9c72:	8c 91       	ld	r24, X
    9c74:	8f 77       	andi	r24, 0x7F	; 127
    9c76:	8c 93       	st	X, r24
    9c78:	a3 81       	ldd	r26, Z+3	; 0x03
    9c7a:	b4 81       	ldd	r27, Z+4	; 0x04
    9c7c:	1c 96       	adiw	r26, 0x0c	; 12
    9c7e:	4c 93       	st	X, r20
    9c80:	a3 81       	ldd	r26, Z+3	; 0x03
    9c82:	b4 81       	ldd	r27, Z+4	; 0x04
    9c84:	45 2f       	mov	r20, r21
    9c86:	56 2f       	mov	r21, r22
    9c88:	67 2f       	mov	r22, r23
    9c8a:	77 27       	eor	r23, r23
    9c8c:	1d 96       	adiw	r26, 0x0d	; 13
    9c8e:	4c 93       	st	X, r20
    9c90:	1d 97       	sbiw	r26, 0x0d	; 13
    9c92:	03 80       	ldd	r0, Z+3	; 0x03
    9c94:	f4 81       	ldd	r31, Z+4	; 0x04
    9c96:	e0 2d       	mov	r30, r0
    9c98:	67 01       	movw	r12, r14
    9c9a:	ee 24       	eor	r14, r14
    9c9c:	ff 24       	eor	r15, r15
    9c9e:	c6 86       	std	Z+14, r12	; 0x0e
    9ca0:	89 81       	ldd	r24, Y+1	; 0x01
    9ca2:	8f bf       	out	0x3f, r24	; 63
    9ca4:	80 e0       	ldi	r24, 0x00	; 0
    9ca6:	23 96       	adiw	r28, 0x03	; 3
    9ca8:	cd bf       	out	0x3d, r28	; 61
    9caa:	de bf       	out	0x3e, r29	; 62
    9cac:	df 91       	pop	r29
    9cae:	cf 91       	pop	r28
    9cb0:	ff 90       	pop	r15
    9cb2:	ef 90       	pop	r14
    9cb4:	df 90       	pop	r13
    9cb6:	cf 90       	pop	r12
    9cb8:	08 95       	ret

00009cba <hal_getDmaStatus>:
    9cba:	cf 93       	push	r28
    9cbc:	df 93       	push	r29
    9cbe:	0f 92       	push	r0
    9cc0:	0f 92       	push	r0
    9cc2:	cd b7       	in	r28, 0x3d	; 61
    9cc4:	de b7       	in	r29, 0x3e	; 62
    9cc6:	89 83       	std	Y+1, r24	; 0x01
    9cc8:	9a 83       	std	Y+2, r25	; 0x02
    9cca:	e9 81       	ldd	r30, Y+1	; 0x01
    9ccc:	fa 81       	ldd	r31, Y+2	; 0x02
    9cce:	80 91 e6 21 	lds	r24, 0x21E6
    9cd2:	90 91 e7 21 	lds	r25, 0x21E7
    9cd6:	24 81       	ldd	r18, Z+4	; 0x04
    9cd8:	35 81       	ldd	r19, Z+5	; 0x05
    9cda:	28 17       	cp	r18, r24
    9cdc:	39 07       	cpc	r19, r25
    9cde:	71 f4       	brne	.+28     	; 0x9cfc <hal_getDmaStatus+0x42>
    9ce0:	e9 81       	ldd	r30, Y+1	; 0x01
    9ce2:	fa 81       	ldd	r31, Y+2	; 0x02
    9ce4:	01 90       	ld	r0, Z+
    9ce6:	f0 81       	ld	r31, Z
    9ce8:	e0 2d       	mov	r30, r0
    9cea:	03 80       	ldd	r0, Z+3	; 0x03
    9cec:	f4 81       	ldd	r31, Z+4	; 0x04
    9cee:	e0 2d       	mov	r30, r0
    9cf0:	81 81       	ldd	r24, Z+1	; 0x01
    9cf2:	88 1f       	adc	r24, r24
    9cf4:	88 27       	eor	r24, r24
    9cf6:	88 1f       	adc	r24, r24
    9cf8:	90 e0       	ldi	r25, 0x00	; 0
    9cfa:	02 c0       	rjmp	.+4      	; 0x9d00 <hal_getDmaStatus+0x46>
    9cfc:	8e ef       	ldi	r24, 0xFE	; 254
    9cfe:	9f ef       	ldi	r25, 0xFF	; 255
    9d00:	0f 90       	pop	r0
    9d02:	0f 90       	pop	r0
    9d04:	df 91       	pop	r29
    9d06:	cf 91       	pop	r28
    9d08:	08 95       	ret

00009d0a <hal_getDmaTransferCount>:
    9d0a:	cf 93       	push	r28
    9d0c:	df 93       	push	r29
    9d0e:	0f 92       	push	r0
    9d10:	0f 92       	push	r0
    9d12:	cd b7       	in	r28, 0x3d	; 61
    9d14:	de b7       	in	r29, 0x3e	; 62
    9d16:	89 83       	std	Y+1, r24	; 0x01
    9d18:	9a 83       	std	Y+2, r25	; 0x02
    9d1a:	e9 81       	ldd	r30, Y+1	; 0x01
    9d1c:	fa 81       	ldd	r31, Y+2	; 0x02
    9d1e:	80 91 e6 21 	lds	r24, 0x21E6
    9d22:	90 91 e7 21 	lds	r25, 0x21E7
    9d26:	24 81       	ldd	r18, Z+4	; 0x04
    9d28:	35 81       	ldd	r19, Z+5	; 0x05
    9d2a:	28 17       	cp	r18, r24
    9d2c:	39 07       	cpc	r19, r25
    9d2e:	59 f4       	brne	.+22     	; 0x9d46 <hal_getDmaTransferCount+0x3c>
    9d30:	e9 81       	ldd	r30, Y+1	; 0x01
    9d32:	fa 81       	ldd	r31, Y+2	; 0x02
    9d34:	01 90       	ld	r0, Z+
    9d36:	f0 81       	ld	r31, Z
    9d38:	e0 2d       	mov	r30, r0
    9d3a:	03 80       	ldd	r0, Z+3	; 0x03
    9d3c:	f4 81       	ldd	r31, Z+4	; 0x04
    9d3e:	e0 2d       	mov	r30, r0
    9d40:	84 81       	ldd	r24, Z+4	; 0x04
    9d42:	95 81       	ldd	r25, Z+5	; 0x05
    9d44:	02 c0       	rjmp	.+4      	; 0x9d4a <hal_getDmaTransferCount+0x40>
    9d46:	8e ef       	ldi	r24, 0xFE	; 254
    9d48:	9f ef       	ldi	r25, 0xFF	; 255
    9d4a:	0f 90       	pop	r0
    9d4c:	0f 90       	pop	r0
    9d4e:	df 91       	pop	r29
    9d50:	cf 91       	pop	r28
    9d52:	08 95       	ret

00009d54 <hal_configureDmaChannel>:
    9d54:	af 92       	push	r10
    9d56:	bf 92       	push	r11
    9d58:	cf 92       	push	r12
    9d5a:	df 92       	push	r13
    9d5c:	ef 92       	push	r14
    9d5e:	ff 92       	push	r15
    9d60:	0f 93       	push	r16
    9d62:	1f 93       	push	r17
    9d64:	cf 93       	push	r28
    9d66:	df 93       	push	r29
    9d68:	cd b7       	in	r28, 0x3d	; 61
    9d6a:	de b7       	in	r29, 0x3e	; 62
    9d6c:	61 97       	sbiw	r28, 0x11	; 17
    9d6e:	cd bf       	out	0x3d, r28	; 61
    9d70:	de bf       	out	0x3e, r29	; 62
    9d72:	8a 83       	std	Y+2, r24	; 0x02
    9d74:	9b 83       	std	Y+3, r25	; 0x03
    9d76:	ac 82       	std	Y+4, r10	; 0x04
    9d78:	bd 82       	std	Y+5, r11	; 0x05
    9d7a:	ce 82       	std	Y+6, r12	; 0x06
    9d7c:	df 82       	std	Y+7, r13	; 0x07
    9d7e:	8e 2d       	mov	r24, r14
    9d80:	e8 86       	std	Y+8, r14	; 0x08
    9d82:	9f 2d       	mov	r25, r15
    9d84:	f9 86       	std	Y+9, r15	; 0x09
    9d86:	e0 2f       	mov	r30, r16
    9d88:	0a 87       	std	Y+10, r16	; 0x0a
    9d8a:	f1 2f       	mov	r31, r17
    9d8c:	1b 87       	std	Y+11, r17	; 0x0b
    9d8e:	2c 87       	std	Y+12, r18	; 0x0c
    9d90:	3d 87       	std	Y+13, r19	; 0x0d
    9d92:	24 2f       	mov	r18, r20
    9d94:	4e 87       	std	Y+14, r20	; 0x0e
    9d96:	f5 2e       	mov	r15, r21
    9d98:	5f 87       	std	Y+15, r21	; 0x0f
    9d9a:	e6 2e       	mov	r14, r22
    9d9c:	68 8b       	std	Y+16, r22	; 0x10
    9d9e:	37 2f       	mov	r19, r23
    9da0:	79 8b       	std	Y+17, r23	; 0x11
    9da2:	8f 01       	movw	r16, r30
    9da4:	cc 84       	ldd	r12, Y+12	; 0x0c
    9da6:	dd 84       	ldd	r13, Y+13	; 0x0d
    9da8:	b9 01       	movw	r22, r18
    9daa:	2f b7       	in	r18, 0x3f	; 63
    9dac:	29 83       	std	Y+1, r18	; 0x01
    9dae:	f8 94       	cli
    9db0:	83 30       	cpi	r24, 0x03	; 3
    9db2:	10 f4       	brcc	.+4      	; 0x9db8 <hal_configureDmaChannel+0x64>
    9db4:	93 30       	cpi	r25, 0x03	; 3
    9db6:	20 f0       	brcs	.+8      	; 0x9dc0 <hal_configureDmaChannel+0x6c>
    9db8:	89 81       	ldd	r24, Y+1	; 0x01
    9dba:	8f bf       	out	0x3f, r24	; 63
    9dbc:	86 ef       	ldi	r24, 0xF6	; 246
    9dbe:	ec c0       	rjmp	.+472    	; 0x9f98 <hal_configureDmaChannel+0x244>
    9dc0:	04 30       	cpi	r16, 0x04	; 4
    9dc2:	10 f4       	brcc	.+4      	; 0x9dc8 <hal_configureDmaChannel+0x74>
    9dc4:	14 30       	cpi	r17, 0x04	; 4
    9dc6:	20 f0       	brcs	.+8      	; 0x9dd0 <hal_configureDmaChannel+0x7c>
    9dc8:	89 81       	ldd	r24, Y+1	; 0x01
    9dca:	8f bf       	out	0x3f, r24	; 63
    9dcc:	85 ef       	ldi	r24, 0xF5	; 245
    9dce:	e4 c0       	rjmp	.+456    	; 0x9f98 <hal_configureDmaChannel+0x244>
    9dd0:	c1 14       	cp	r12, r1
    9dd2:	d1 04       	cpc	r13, r1
    9dd4:	21 f4       	brne	.+8      	; 0x9dde <hal_configureDmaChannel+0x8a>
    9dd6:	89 81       	ldd	r24, Y+1	; 0x01
    9dd8:	8f bf       	out	0x3f, r24	; 63
    9dda:	84 ef       	ldi	r24, 0xF4	; 244
    9ddc:	dd c0       	rjmp	.+442    	; 0x9f98 <hal_configureDmaChannel+0x244>
    9dde:	64 30       	cpi	r22, 0x04	; 4
    9de0:	20 f0       	brcs	.+8      	; 0x9dea <hal_configureDmaChannel+0x96>
    9de2:	89 81       	ldd	r24, Y+1	; 0x01
    9de4:	8f bf       	out	0x3f, r24	; 63
    9de6:	83 ef       	ldi	r24, 0xF3	; 243
    9de8:	d7 c0       	rjmp	.+430    	; 0x9f98 <hal_configureDmaChannel+0x244>
    9dea:	21 e0       	ldi	r18, 0x01	; 1
    9dec:	25 17       	cp	r18, r21
    9dee:	20 f4       	brcc	.+8      	; 0x9df8 <hal_configureDmaChannel+0xa4>
    9df0:	89 81       	ldd	r24, Y+1	; 0x01
    9df2:	8f bf       	out	0x3f, r24	; 63
    9df4:	82 ef       	ldi	r24, 0xF2	; 242
    9df6:	d0 c0       	rjmp	.+416    	; 0x9f98 <hal_configureDmaChannel+0x244>
    9df8:	2f ea       	ldi	r18, 0xAF	; 175
    9dfa:	2e 15       	cp	r18, r14
    9dfc:	20 f4       	brcc	.+8      	; 0x9e06 <hal_configureDmaChannel+0xb2>
    9dfe:	89 81       	ldd	r24, Y+1	; 0x01
    9e00:	8f bf       	out	0x3f, r24	; 63
    9e02:	81 ef       	ldi	r24, 0xF1	; 241
    9e04:	c9 c0       	rjmp	.+402    	; 0x9f98 <hal_configureDmaChannel+0x244>
    9e06:	ea 81       	ldd	r30, Y+2	; 0x02
    9e08:	fb 81       	ldd	r31, Y+3	; 0x03
    9e0a:	20 91 e6 21 	lds	r18, 0x21E6
    9e0e:	30 91 e7 21 	lds	r19, 0x21E7
    9e12:	44 81       	ldd	r20, Z+4	; 0x04
    9e14:	55 81       	ldd	r21, Z+5	; 0x05
    9e16:	42 17       	cp	r20, r18
    9e18:	53 07       	cpc	r21, r19
    9e1a:	21 f0       	breq	.+8      	; 0x9e24 <hal_configureDmaChannel+0xd0>
    9e1c:	89 81       	ldd	r24, Y+1	; 0x01
    9e1e:	8f bf       	out	0x3f, r24	; 63
    9e20:	8e ef       	ldi	r24, 0xFE	; 254
    9e22:	ba c0       	rjmp	.+372    	; 0x9f98 <hal_configureDmaChannel+0x244>
    9e24:	ea 81       	ldd	r30, Y+2	; 0x02
    9e26:	fb 81       	ldd	r31, Y+3	; 0x03
    9e28:	01 90       	ld	r0, Z+
    9e2a:	f0 81       	ld	r31, Z
    9e2c:	e0 2d       	mov	r30, r0
    9e2e:	a3 81       	ldd	r26, Z+3	; 0x03
    9e30:	b4 81       	ldd	r27, Z+4	; 0x04
    9e32:	2c 91       	ld	r18, X
    9e34:	2f 77       	andi	r18, 0x7F	; 127
    9e36:	2c 93       	st	X, r18
    9e38:	a3 81       	ldd	r26, Z+3	; 0x03
    9e3a:	b4 81       	ldd	r27, Z+4	; 0x04
    9e3c:	2c 81       	ldd	r18, Y+4	; 0x04
    9e3e:	18 96       	adiw	r26, 0x08	; 8
    9e40:	2c 93       	st	X, r18
    9e42:	a3 81       	ldd	r26, Z+3	; 0x03
    9e44:	b4 81       	ldd	r27, Z+4	; 0x04
    9e46:	2d 81       	ldd	r18, Y+5	; 0x05
    9e48:	19 96       	adiw	r26, 0x09	; 9
    9e4a:	2c 93       	st	X, r18
    9e4c:	a3 81       	ldd	r26, Z+3	; 0x03
    9e4e:	b4 81       	ldd	r27, Z+4	; 0x04
    9e50:	1a 96       	adiw	r26, 0x0a	; 10
    9e52:	1c 92       	st	X, r1
    9e54:	a3 81       	ldd	r26, Z+3	; 0x03
    9e56:	b4 81       	ldd	r27, Z+4	; 0x04
    9e58:	2e 81       	ldd	r18, Y+6	; 0x06
    9e5a:	1c 96       	adiw	r26, 0x0c	; 12
    9e5c:	2c 93       	st	X, r18
    9e5e:	a3 81       	ldd	r26, Z+3	; 0x03
    9e60:	b4 81       	ldd	r27, Z+4	; 0x04
    9e62:	2f 81       	ldd	r18, Y+7	; 0x07
    9e64:	1d 96       	adiw	r26, 0x0d	; 13
    9e66:	2c 93       	st	X, r18
    9e68:	a3 81       	ldd	r26, Z+3	; 0x03
    9e6a:	b4 81       	ldd	r27, Z+4	; 0x04
    9e6c:	1e 96       	adiw	r26, 0x0e	; 14
    9e6e:	1c 92       	st	X, r1
    9e70:	a3 81       	ldd	r26, Z+3	; 0x03
    9e72:	b4 81       	ldd	r27, Z+4	; 0x04
    9e74:	12 96       	adiw	r26, 0x02	; 2
    9e76:	2c 91       	ld	r18, X
    9e78:	12 97       	sbiw	r26, 0x02	; 2
    9e7a:	2f 7c       	andi	r18, 0xCF	; 207
    9e7c:	12 96       	adiw	r26, 0x02	; 2
    9e7e:	2c 93       	st	X, r18
    9e80:	a3 81       	ldd	r26, Z+3	; 0x03
    9e82:	b4 81       	ldd	r27, Z+4	; 0x04
    9e84:	12 96       	adiw	r26, 0x02	; 2
    9e86:	2c 91       	ld	r18, X
    9e88:	12 97       	sbiw	r26, 0x02	; 2
    9e8a:	82 95       	swap	r24
    9e8c:	80 7f       	andi	r24, 0xF0	; 240
    9e8e:	82 2b       	or	r24, r18
    9e90:	12 96       	adiw	r26, 0x02	; 2
    9e92:	8c 93       	st	X, r24
    9e94:	a3 81       	ldd	r26, Z+3	; 0x03
    9e96:	b4 81       	ldd	r27, Z+4	; 0x04
    9e98:	12 96       	adiw	r26, 0x02	; 2
    9e9a:	8c 91       	ld	r24, X
    9e9c:	12 97       	sbiw	r26, 0x02	; 2
    9e9e:	8c 7f       	andi	r24, 0xFC	; 252
    9ea0:	12 96       	adiw	r26, 0x02	; 2
    9ea2:	8c 93       	st	X, r24
    9ea4:	a3 81       	ldd	r26, Z+3	; 0x03
    9ea6:	b4 81       	ldd	r27, Z+4	; 0x04
    9ea8:	12 96       	adiw	r26, 0x02	; 2
    9eaa:	8c 91       	ld	r24, X
    9eac:	12 97       	sbiw	r26, 0x02	; 2
    9eae:	89 2b       	or	r24, r25
    9eb0:	12 96       	adiw	r26, 0x02	; 2
    9eb2:	8c 93       	st	X, r24
    9eb4:	a3 81       	ldd	r26, Z+3	; 0x03
    9eb6:	b4 81       	ldd	r27, Z+4	; 0x04
    9eb8:	12 96       	adiw	r26, 0x02	; 2
    9eba:	8c 91       	ld	r24, X
    9ebc:	12 97       	sbiw	r26, 0x02	; 2
    9ebe:	8f 73       	andi	r24, 0x3F	; 63
    9ec0:	12 96       	adiw	r26, 0x02	; 2
    9ec2:	8c 93       	st	X, r24
    9ec4:	a3 81       	ldd	r26, Z+3	; 0x03
    9ec6:	b4 81       	ldd	r27, Z+4	; 0x04
    9ec8:	12 96       	adiw	r26, 0x02	; 2
    9eca:	8c 91       	ld	r24, X
    9ecc:	12 97       	sbiw	r26, 0x02	; 2
    9ece:	02 95       	swap	r16
    9ed0:	00 0f       	add	r16, r16
    9ed2:	00 0f       	add	r16, r16
    9ed4:	00 7c       	andi	r16, 0xC0	; 192
    9ed6:	08 2b       	or	r16, r24
    9ed8:	12 96       	adiw	r26, 0x02	; 2
    9eda:	0c 93       	st	X, r16
    9edc:	a3 81       	ldd	r26, Z+3	; 0x03
    9ede:	b4 81       	ldd	r27, Z+4	; 0x04
    9ee0:	12 96       	adiw	r26, 0x02	; 2
    9ee2:	8c 91       	ld	r24, X
    9ee4:	12 97       	sbiw	r26, 0x02	; 2
    9ee6:	83 7f       	andi	r24, 0xF3	; 243
    9ee8:	12 96       	adiw	r26, 0x02	; 2
    9eea:	8c 93       	st	X, r24
    9eec:	a3 81       	ldd	r26, Z+3	; 0x03
    9eee:	b4 81       	ldd	r27, Z+4	; 0x04
    9ef0:	12 96       	adiw	r26, 0x02	; 2
    9ef2:	8c 91       	ld	r24, X
    9ef4:	12 97       	sbiw	r26, 0x02	; 2
    9ef6:	11 0f       	add	r17, r17
    9ef8:	11 0f       	add	r17, r17
    9efa:	18 2b       	or	r17, r24
    9efc:	12 96       	adiw	r26, 0x02	; 2
    9efe:	1c 93       	st	X, r17
    9f00:	a3 81       	ldd	r26, Z+3	; 0x03
    9f02:	b4 81       	ldd	r27, Z+4	; 0x04
    9f04:	14 96       	adiw	r26, 0x04	; 4
    9f06:	cd 92       	st	X+, r12
    9f08:	dc 92       	st	X, r13
    9f0a:	15 97       	sbiw	r26, 0x05	; 5
    9f0c:	a3 81       	ldd	r26, Z+3	; 0x03
    9f0e:	b4 81       	ldd	r27, Z+4	; 0x04
    9f10:	8c 91       	ld	r24, X
    9f12:	8c 7f       	andi	r24, 0xFC	; 252
    9f14:	8c 93       	st	X, r24
    9f16:	a3 81       	ldd	r26, Z+3	; 0x03
    9f18:	b4 81       	ldd	r27, Z+4	; 0x04
    9f1a:	8c 91       	ld	r24, X
    9f1c:	86 2b       	or	r24, r22
    9f1e:	8c 93       	st	X, r24
    9f20:	a3 81       	ldd	r26, Z+3	; 0x03
    9f22:	b4 81       	ldd	r27, Z+4	; 0x04
    9f24:	8c 91       	ld	r24, X
    9f26:	8f 7d       	andi	r24, 0xDF	; 223
    9f28:	8c 93       	st	X, r24
    9f2a:	a3 81       	ldd	r26, Z+3	; 0x03
    9f2c:	b4 81       	ldd	r27, Z+4	; 0x04
    9f2e:	16 96       	adiw	r26, 0x06	; 6
    9f30:	1c 92       	st	X, r1
    9f32:	a3 81       	ldd	r26, Z+3	; 0x03
    9f34:	b4 81       	ldd	r27, Z+4	; 0x04
    9f36:	17 16       	cp	r1, r23
    9f38:	4c f4       	brge	.+18     	; 0x9f4c <hal_configureDmaChannel+0x1f8>
    9f3a:	8c 91       	ld	r24, X
    9f3c:	80 62       	ori	r24, 0x20	; 32
    9f3e:	8c 93       	st	X, r24
    9f40:	a3 81       	ldd	r26, Z+3	; 0x03
    9f42:	b4 81       	ldd	r27, Z+4	; 0x04
    9f44:	16 96       	adiw	r26, 0x06	; 6
    9f46:	7c 93       	st	X, r23
    9f48:	16 97       	sbiw	r26, 0x06	; 6
    9f4a:	05 c0       	rjmp	.+10     	; 0x9f56 <hal_configureDmaChannel+0x202>
    9f4c:	77 23       	and	r23, r23
    9f4e:	19 f0       	breq	.+6      	; 0x9f56 <hal_configureDmaChannel+0x202>
    9f50:	8c 91       	ld	r24, X
    9f52:	80 62       	ori	r24, 0x20	; 32
    9f54:	8c 93       	st	X, r24
    9f56:	a3 81       	ldd	r26, Z+3	; 0x03
    9f58:	b4 81       	ldd	r27, Z+4	; 0x04
    9f5a:	8c 91       	ld	r24, X
    9f5c:	8b 7f       	andi	r24, 0xFB	; 251
    9f5e:	8c 93       	st	X, r24
    9f60:	a3 81       	ldd	r26, Z+3	; 0x03
    9f62:	b4 81       	ldd	r27, Z+4	; 0x04
    9f64:	8c 91       	ld	r24, X
    9f66:	ff 0c       	add	r15, r15
    9f68:	ff 0c       	add	r15, r15
    9f6a:	f8 2a       	or	r15, r24
    9f6c:	fc 92       	st	X, r15
    9f6e:	a3 81       	ldd	r26, Z+3	; 0x03
    9f70:	b4 81       	ldd	r27, Z+4	; 0x04
    9f72:	13 96       	adiw	r26, 0x03	; 3
    9f74:	8c 91       	ld	r24, X
    9f76:	13 97       	sbiw	r26, 0x03	; 3
    9f78:	13 96       	adiw	r26, 0x03	; 3
    9f7a:	1c 92       	st	X, r1
    9f7c:	a3 81       	ldd	r26, Z+3	; 0x03
    9f7e:	b4 81       	ldd	r27, Z+4	; 0x04
    9f80:	13 96       	adiw	r26, 0x03	; 3
    9f82:	8c 91       	ld	r24, X
    9f84:	13 97       	sbiw	r26, 0x03	; 3
    9f86:	8e 29       	or	r24, r14
    9f88:	13 96       	adiw	r26, 0x03	; 3
    9f8a:	8c 93       	st	X, r24
    9f8c:	13 97       	sbiw	r26, 0x03	; 3
    9f8e:	81 e0       	ldi	r24, 0x01	; 1
    9f90:	81 83       	std	Z+1, r24	; 0x01
    9f92:	89 81       	ldd	r24, Y+1	; 0x01
    9f94:	8f bf       	out	0x3f, r24	; 63
    9f96:	80 e0       	ldi	r24, 0x00	; 0
    9f98:	61 96       	adiw	r28, 0x11	; 17
    9f9a:	cd bf       	out	0x3d, r28	; 61
    9f9c:	de bf       	out	0x3e, r29	; 62
    9f9e:	df 91       	pop	r29
    9fa0:	cf 91       	pop	r28
    9fa2:	1f 91       	pop	r17
    9fa4:	0f 91       	pop	r16
    9fa6:	ff 90       	pop	r15
    9fa8:	ef 90       	pop	r14
    9faa:	df 90       	pop	r13
    9fac:	cf 90       	pop	r12
    9fae:	bf 90       	pop	r11
    9fb0:	af 90       	pop	r10
    9fb2:	08 95       	ret

00009fb4 <hal_resetDmaController>:
    9fb4:	80 91 00 01 	lds	r24, 0x0100
    9fb8:	80 64       	ori	r24, 0x40	; 64
    9fba:	80 93 00 01 	sts	0x0100, r24
    9fbe:	80 91 00 01 	lds	r24, 0x0100
    9fc2:	86 fd       	sbrc	r24, 6
    9fc4:	fc cf       	rjmp	.-8      	; 0x9fbe <hal_resetDmaController+0xa>
    9fc6:	08 95       	ret

00009fc8 <hal_dmaStartTransfer>:
    9fc8:	cf 93       	push	r28
    9fca:	df 93       	push	r29
    9fcc:	00 d0       	rcall	.+0      	; 0x9fce <hal_dmaStartTransfer+0x6>
    9fce:	cd b7       	in	r28, 0x3d	; 61
    9fd0:	de b7       	in	r29, 0x3e	; 62
    9fd2:	8a 83       	std	Y+2, r24	; 0x02
    9fd4:	9b 83       	std	Y+3, r25	; 0x03
    9fd6:	8f b7       	in	r24, 0x3f	; 63
    9fd8:	89 83       	std	Y+1, r24	; 0x01
    9fda:	f8 94       	cli
    9fdc:	ea 81       	ldd	r30, Y+2	; 0x02
    9fde:	fb 81       	ldd	r31, Y+3	; 0x03
    9fe0:	80 91 e6 21 	lds	r24, 0x21E6
    9fe4:	90 91 e7 21 	lds	r25, 0x21E7
    9fe8:	24 81       	ldd	r18, Z+4	; 0x04
    9fea:	35 81       	ldd	r19, Z+5	; 0x05
    9fec:	28 17       	cp	r18, r24
    9fee:	39 07       	cpc	r19, r25
    9ff0:	21 f0       	breq	.+8      	; 0x9ffa <hal_dmaStartTransfer+0x32>
    9ff2:	89 81       	ldd	r24, Y+1	; 0x01
    9ff4:	8f bf       	out	0x3f, r24	; 63
    9ff6:	8e ef       	ldi	r24, 0xFE	; 254
    9ff8:	1a c0       	rjmp	.+52     	; 0xa02e <hal_dmaStartTransfer+0x66>
    9ffa:	ea 81       	ldd	r30, Y+2	; 0x02
    9ffc:	fb 81       	ldd	r31, Y+3	; 0x03
    9ffe:	01 90       	ld	r0, Z+
    a000:	f0 81       	ld	r31, Z
    a002:	e0 2d       	mov	r30, r0
    a004:	81 81       	ldd	r24, Z+1	; 0x01
    a006:	88 23       	and	r24, r24
    a008:	79 f0       	breq	.+30     	; 0xa028 <hal_dmaStartTransfer+0x60>
    a00a:	a3 81       	ldd	r26, Z+3	; 0x03
    a00c:	b4 81       	ldd	r27, Z+4	; 0x04
    a00e:	8c 91       	ld	r24, X
    a010:	80 68       	ori	r24, 0x80	; 128
    a012:	8c 93       	st	X, r24
    a014:	03 80       	ldd	r0, Z+3	; 0x03
    a016:	f4 81       	ldd	r31, Z+4	; 0x04
    a018:	e0 2d       	mov	r30, r0
    a01a:	80 81       	ld	r24, Z
    a01c:	80 61       	ori	r24, 0x10	; 16
    a01e:	80 83       	st	Z, r24
    a020:	89 81       	ldd	r24, Y+1	; 0x01
    a022:	8f bf       	out	0x3f, r24	; 63
    a024:	80 e0       	ldi	r24, 0x00	; 0
    a026:	03 c0       	rjmp	.+6      	; 0xa02e <hal_dmaStartTransfer+0x66>
    a028:	89 81       	ldd	r24, Y+1	; 0x01
    a02a:	8f bf       	out	0x3f, r24	; 63
    a02c:	8d ef       	ldi	r24, 0xFD	; 253
    a02e:	23 96       	adiw	r28, 0x03	; 3
    a030:	cd bf       	out	0x3d, r28	; 61
    a032:	de bf       	out	0x3e, r29	; 62
    a034:	df 91       	pop	r29
    a036:	cf 91       	pop	r28
    a038:	08 95       	ret

0000a03a <hal_getDmaIntStatus>:
    a03a:	cf 93       	push	r28
    a03c:	df 93       	push	r29
    a03e:	0f 92       	push	r0
    a040:	0f 92       	push	r0
    a042:	cd b7       	in	r28, 0x3d	; 61
    a044:	de b7       	in	r29, 0x3e	; 62
    a046:	89 83       	std	Y+1, r24	; 0x01
    a048:	9a 83       	std	Y+2, r25	; 0x02
    a04a:	e9 81       	ldd	r30, Y+1	; 0x01
    a04c:	fa 81       	ldd	r31, Y+2	; 0x02
    a04e:	80 91 e6 21 	lds	r24, 0x21E6
    a052:	90 91 e7 21 	lds	r25, 0x21E7
    a056:	24 81       	ldd	r18, Z+4	; 0x04
    a058:	35 81       	ldd	r19, Z+5	; 0x05
    a05a:	28 17       	cp	r18, r24
    a05c:	39 07       	cpc	r19, r25
    a05e:	e1 f4       	brne	.+56     	; 0xa098 <hal_getDmaIntStatus+0x5e>
    a060:	e9 81       	ldd	r30, Y+1	; 0x01
    a062:	fa 81       	ldd	r31, Y+2	; 0x02
    a064:	01 90       	ld	r0, Z+
    a066:	f0 81       	ld	r31, Z
    a068:	e0 2d       	mov	r30, r0
    a06a:	03 80       	ldd	r0, Z+3	; 0x03
    a06c:	f4 81       	ldd	r31, Z+4	; 0x04
    a06e:	e0 2d       	mov	r30, r0
    a070:	81 81       	ldd	r24, Z+1	; 0x01
    a072:	90 e0       	ldi	r25, 0x00	; 0
    a074:	66 23       	and	r22, r22
    a076:	41 f4       	brne	.+16     	; 0xa088 <hal_getDmaIntStatus+0x4e>
    a078:	80 71       	andi	r24, 0x10	; 16
    a07a:	90 70       	andi	r25, 0x00	; 0
    a07c:	64 e0       	ldi	r22, 0x04	; 4
    a07e:	95 95       	asr	r25
    a080:	87 95       	ror	r24
    a082:	6a 95       	dec	r22
    a084:	e1 f7       	brne	.-8      	; 0xa07e <hal_getDmaIntStatus+0x44>
    a086:	0a c0       	rjmp	.+20     	; 0xa09c <hal_getDmaIntStatus+0x62>
    a088:	80 72       	andi	r24, 0x20	; 32
    a08a:	90 70       	andi	r25, 0x00	; 0
    a08c:	55 e0       	ldi	r21, 0x05	; 5
    a08e:	95 95       	asr	r25
    a090:	87 95       	ror	r24
    a092:	5a 95       	dec	r21
    a094:	e1 f7       	brne	.-8      	; 0xa08e <hal_getDmaIntStatus+0x54>
    a096:	02 c0       	rjmp	.+4      	; 0xa09c <hal_getDmaIntStatus+0x62>
    a098:	8e ef       	ldi	r24, 0xFE	; 254
    a09a:	9f ef       	ldi	r25, 0xFF	; 255
    a09c:	0f 90       	pop	r0
    a09e:	0f 90       	pop	r0
    a0a0:	df 91       	pop	r29
    a0a2:	cf 91       	pop	r28
    a0a4:	08 95       	ret

0000a0a6 <hal_getDmaChannelId>:
    a0a6:	cf 93       	push	r28
    a0a8:	df 93       	push	r29
    a0aa:	0f 92       	push	r0
    a0ac:	0f 92       	push	r0
    a0ae:	cd b7       	in	r28, 0x3d	; 61
    a0b0:	de b7       	in	r29, 0x3e	; 62
    a0b2:	89 83       	std	Y+1, r24	; 0x01
    a0b4:	9a 83       	std	Y+2, r25	; 0x02
    a0b6:	e9 81       	ldd	r30, Y+1	; 0x01
    a0b8:	fa 81       	ldd	r31, Y+2	; 0x02
    a0ba:	80 91 e6 21 	lds	r24, 0x21E6
    a0be:	90 91 e7 21 	lds	r25, 0x21E7
    a0c2:	24 81       	ldd	r18, Z+4	; 0x04
    a0c4:	35 81       	ldd	r19, Z+5	; 0x05
    a0c6:	28 17       	cp	r18, r24
    a0c8:	39 07       	cpc	r19, r25
    a0ca:	39 f4       	brne	.+14     	; 0xa0da <hal_getDmaChannelId+0x34>
    a0cc:	e9 81       	ldd	r30, Y+1	; 0x01
    a0ce:	fa 81       	ldd	r31, Y+2	; 0x02
    a0d0:	01 90       	ld	r0, Z+
    a0d2:	f0 81       	ld	r31, Z
    a0d4:	e0 2d       	mov	r30, r0
    a0d6:	80 81       	ld	r24, Z
    a0d8:	01 c0       	rjmp	.+2      	; 0xa0dc <hal_getDmaChannelId+0x36>
    a0da:	8e ef       	ldi	r24, 0xFE	; 254
    a0dc:	0f 90       	pop	r0
    a0de:	0f 90       	pop	r0
    a0e0:	df 91       	pop	r29
    a0e2:	cf 91       	pop	r28
    a0e4:	08 95       	ret

0000a0e6 <hal_clearDmaIntStatus>:
    a0e6:	cf 93       	push	r28
    a0e8:	df 93       	push	r29
    a0ea:	0f 92       	push	r0
    a0ec:	0f 92       	push	r0
    a0ee:	cd b7       	in	r28, 0x3d	; 61
    a0f0:	de b7       	in	r29, 0x3e	; 62
    a0f2:	89 83       	std	Y+1, r24	; 0x01
    a0f4:	9a 83       	std	Y+2, r25	; 0x02
    a0f6:	e9 81       	ldd	r30, Y+1	; 0x01
    a0f8:	fa 81       	ldd	r31, Y+2	; 0x02
    a0fa:	80 91 e6 21 	lds	r24, 0x21E6
    a0fe:	90 91 e7 21 	lds	r25, 0x21E7
    a102:	24 81       	ldd	r18, Z+4	; 0x04
    a104:	35 81       	ldd	r19, Z+5	; 0x05
    a106:	28 17       	cp	r18, r24
    a108:	39 07       	cpc	r19, r25
    a10a:	81 f5       	brne	.+96     	; 0xa16c <hal_clearDmaIntStatus+0x86>
    a10c:	e9 81       	ldd	r30, Y+1	; 0x01
    a10e:	fa 81       	ldd	r31, Y+2	; 0x02
    a110:	01 90       	ld	r0, Z+
    a112:	f0 81       	ld	r31, Z
    a114:	e0 2d       	mov	r30, r0
    a116:	80 81       	ld	r24, Z
    a118:	88 23       	and	r24, r24
    a11a:	41 f4       	brne	.+16     	; 0xa12c <hal_clearDmaIntStatus+0x46>
    a11c:	80 91 03 01 	lds	r24, 0x0103
    a120:	66 23       	and	r22, r22
    a122:	11 f4       	brne	.+4      	; 0xa128 <hal_clearDmaIntStatus+0x42>
    a124:	81 60       	ori	r24, 0x01	; 1
    a126:	0b c0       	rjmp	.+22     	; 0xa13e <hal_clearDmaIntStatus+0x58>
    a128:	80 61       	ori	r24, 0x10	; 16
    a12a:	09 c0       	rjmp	.+18     	; 0xa13e <hal_clearDmaIntStatus+0x58>
    a12c:	82 30       	cpi	r24, 0x02	; 2
    a12e:	61 f4       	brne	.+24     	; 0xa148 <hal_clearDmaIntStatus+0x62>
    a130:	80 91 03 01 	lds	r24, 0x0103
    a134:	66 23       	and	r22, r22
    a136:	11 f4       	brne	.+4      	; 0xa13c <hal_clearDmaIntStatus+0x56>
    a138:	82 60       	ori	r24, 0x02	; 2
    a13a:	01 c0       	rjmp	.+2      	; 0xa13e <hal_clearDmaIntStatus+0x58>
    a13c:	80 62       	ori	r24, 0x20	; 32
    a13e:	e0 e0       	ldi	r30, 0x00	; 0
    a140:	f1 e0       	ldi	r31, 0x01	; 1
    a142:	83 83       	std	Z+3, r24	; 0x03
    a144:	80 e0       	ldi	r24, 0x00	; 0
    a146:	13 c0       	rjmp	.+38     	; 0xa16e <hal_clearDmaIntStatus+0x88>
    a148:	84 30       	cpi	r24, 0x04	; 4
    a14a:	41 f4       	brne	.+16     	; 0xa15c <hal_clearDmaIntStatus+0x76>
    a14c:	80 91 03 01 	lds	r24, 0x0103
    a150:	66 23       	and	r22, r22
    a152:	11 f4       	brne	.+4      	; 0xa158 <hal_clearDmaIntStatus+0x72>
    a154:	84 60       	ori	r24, 0x04	; 4
    a156:	f3 cf       	rjmp	.-26     	; 0xa13e <hal_clearDmaIntStatus+0x58>
    a158:	80 64       	ori	r24, 0x40	; 64
    a15a:	f1 cf       	rjmp	.-30     	; 0xa13e <hal_clearDmaIntStatus+0x58>
    a15c:	80 91 03 01 	lds	r24, 0x0103
    a160:	66 23       	and	r22, r22
    a162:	11 f4       	brne	.+4      	; 0xa168 <hal_clearDmaIntStatus+0x82>
    a164:	88 60       	ori	r24, 0x08	; 8
    a166:	eb cf       	rjmp	.-42     	; 0xa13e <hal_clearDmaIntStatus+0x58>
    a168:	80 68       	ori	r24, 0x80	; 128
    a16a:	e9 cf       	rjmp	.-46     	; 0xa13e <hal_clearDmaIntStatus+0x58>
    a16c:	8e ef       	ldi	r24, 0xFE	; 254
    a16e:	0f 90       	pop	r0
    a170:	0f 90       	pop	r0
    a172:	df 91       	pop	r29
    a174:	cf 91       	pop	r28
    a176:	08 95       	ret

0000a178 <hal_dmaEnableChannel>:
    a178:	cf 93       	push	r28
    a17a:	df 93       	push	r29
    a17c:	00 d0       	rcall	.+0      	; 0xa17e <hal_dmaEnableChannel+0x6>
    a17e:	cd b7       	in	r28, 0x3d	; 61
    a180:	de b7       	in	r29, 0x3e	; 62
    a182:	8a 83       	std	Y+2, r24	; 0x02
    a184:	9b 83       	std	Y+3, r25	; 0x03
    a186:	8f b7       	in	r24, 0x3f	; 63
    a188:	89 83       	std	Y+1, r24	; 0x01
    a18a:	f8 94       	cli
    a18c:	ea 81       	ldd	r30, Y+2	; 0x02
    a18e:	fb 81       	ldd	r31, Y+3	; 0x03
    a190:	80 91 e6 21 	lds	r24, 0x21E6
    a194:	90 91 e7 21 	lds	r25, 0x21E7
    a198:	24 81       	ldd	r18, Z+4	; 0x04
    a19a:	35 81       	ldd	r19, Z+5	; 0x05
    a19c:	28 17       	cp	r18, r24
    a19e:	39 07       	cpc	r19, r25
    a1a0:	21 f0       	breq	.+8      	; 0xa1aa <hal_dmaEnableChannel+0x32>
    a1a2:	89 81       	ldd	r24, Y+1	; 0x01
    a1a4:	8f bf       	out	0x3f, r24	; 63
    a1a6:	8e ef       	ldi	r24, 0xFE	; 254
    a1a8:	0e c0       	rjmp	.+28     	; 0xa1c6 <hal_dmaEnableChannel+0x4e>
    a1aa:	ea 81       	ldd	r30, Y+2	; 0x02
    a1ac:	fb 81       	ldd	r31, Y+3	; 0x03
    a1ae:	01 90       	ld	r0, Z+
    a1b0:	f0 81       	ld	r31, Z
    a1b2:	e0 2d       	mov	r30, r0
    a1b4:	03 80       	ldd	r0, Z+3	; 0x03
    a1b6:	f4 81       	ldd	r31, Z+4	; 0x04
    a1b8:	e0 2d       	mov	r30, r0
    a1ba:	80 81       	ld	r24, Z
    a1bc:	80 68       	ori	r24, 0x80	; 128
    a1be:	80 83       	st	Z, r24
    a1c0:	89 81       	ldd	r24, Y+1	; 0x01
    a1c2:	8f bf       	out	0x3f, r24	; 63
    a1c4:	80 e0       	ldi	r24, 0x00	; 0
    a1c6:	23 96       	adiw	r28, 0x03	; 3
    a1c8:	cd bf       	out	0x3d, r28	; 61
    a1ca:	de bf       	out	0x3e, r29	; 62
    a1cc:	df 91       	pop	r29
    a1ce:	cf 91       	pop	r28
    a1d0:	08 95       	ret

0000a1d2 <hal_dmaDisableChannel>:
    a1d2:	cf 93       	push	r28
    a1d4:	df 93       	push	r29
    a1d6:	00 d0       	rcall	.+0      	; 0xa1d8 <hal_dmaDisableChannel+0x6>
    a1d8:	cd b7       	in	r28, 0x3d	; 61
    a1da:	de b7       	in	r29, 0x3e	; 62
    a1dc:	8a 83       	std	Y+2, r24	; 0x02
    a1de:	9b 83       	std	Y+3, r25	; 0x03
    a1e0:	8f b7       	in	r24, 0x3f	; 63
    a1e2:	89 83       	std	Y+1, r24	; 0x01
    a1e4:	f8 94       	cli
    a1e6:	ea 81       	ldd	r30, Y+2	; 0x02
    a1e8:	fb 81       	ldd	r31, Y+3	; 0x03
    a1ea:	80 91 e6 21 	lds	r24, 0x21E6
    a1ee:	90 91 e7 21 	lds	r25, 0x21E7
    a1f2:	24 81       	ldd	r18, Z+4	; 0x04
    a1f4:	35 81       	ldd	r19, Z+5	; 0x05
    a1f6:	28 17       	cp	r18, r24
    a1f8:	39 07       	cpc	r19, r25
    a1fa:	21 f0       	breq	.+8      	; 0xa204 <hal_dmaDisableChannel+0x32>
    a1fc:	89 81       	ldd	r24, Y+1	; 0x01
    a1fe:	8f bf       	out	0x3f, r24	; 63
    a200:	8e ef       	ldi	r24, 0xFE	; 254
    a202:	0e c0       	rjmp	.+28     	; 0xa220 <hal_dmaDisableChannel+0x4e>
    a204:	ea 81       	ldd	r30, Y+2	; 0x02
    a206:	fb 81       	ldd	r31, Y+3	; 0x03
    a208:	01 90       	ld	r0, Z+
    a20a:	f0 81       	ld	r31, Z
    a20c:	e0 2d       	mov	r30, r0
    a20e:	03 80       	ldd	r0, Z+3	; 0x03
    a210:	f4 81       	ldd	r31, Z+4	; 0x04
    a212:	e0 2d       	mov	r30, r0
    a214:	80 81       	ld	r24, Z
    a216:	8f 77       	andi	r24, 0x7F	; 127
    a218:	80 83       	st	Z, r24
    a21a:	89 81       	ldd	r24, Y+1	; 0x01
    a21c:	8f bf       	out	0x3f, r24	; 63
    a21e:	80 e0       	ldi	r24, 0x00	; 0
    a220:	23 96       	adiw	r28, 0x03	; 3
    a222:	cd bf       	out	0x3d, r28	; 61
    a224:	de bf       	out	0x3e, r29	; 62
    a226:	df 91       	pop	r29
    a228:	cf 91       	pop	r28
    a22a:	08 95       	ret

0000a22c <hal_configureIntLevel>:
    a22c:	e0 ea       	ldi	r30, 0xA0	; 160
    a22e:	f0 e0       	ldi	r31, 0x00	; 0
    a230:	92 81       	ldd	r25, Z+2	; 0x02
    a232:	98 2b       	or	r25, r24
    a234:	92 83       	std	Z+2, r25	; 0x02
    a236:	08 95       	ret

0000a238 <findTimerIntElement>:
    a238:	cf 93       	push	r28
    a23a:	df 93       	push	r29
    a23c:	0f 92       	push	r0
    a23e:	0f 92       	push	r0
    a240:	cd b7       	in	r28, 0x3d	; 61
    a242:	de b7       	in	r29, 0x3e	; 62
    a244:	e0 91 09 24 	lds	r30, 0x2409
    a248:	f0 91 0a 24 	lds	r31, 0x240A
    a24c:	22 81       	ldd	r18, Z+2	; 0x02
    a24e:	33 81       	ldd	r19, Z+3	; 0x03
    a250:	e0 91 09 24 	lds	r30, 0x2409
    a254:	f0 91 0a 24 	lds	r31, 0x240A
    a258:	0c c0       	rjmp	.+24     	; 0xa272 <findTimerIntElement+0x3a>
    a25a:	e9 81       	ldd	r30, Y+1	; 0x01
    a25c:	fa 81       	ldd	r31, Y+2	; 0x02
    a25e:	01 90       	ld	r0, Z+
    a260:	f0 81       	ld	r31, Z
    a262:	e0 2d       	mov	r30, r0
    a264:	90 81       	ld	r25, Z
    a266:	98 17       	cp	r25, r24
    a268:	69 f0       	breq	.+26     	; 0xa284 <findTimerIntElement+0x4c>
    a26a:	21 50       	subi	r18, 0x01	; 1
    a26c:	30 40       	sbci	r19, 0x00	; 0
    a26e:	e9 81       	ldd	r30, Y+1	; 0x01
    a270:	fa 81       	ldd	r31, Y+2	; 0x02
    a272:	40 85       	ldd	r20, Z+8	; 0x08
    a274:	51 85       	ldd	r21, Z+9	; 0x09
    a276:	49 83       	std	Y+1, r20	; 0x01
    a278:	5a 83       	std	Y+2, r21	; 0x02
    a27a:	12 16       	cp	r1, r18
    a27c:	13 06       	cpc	r1, r19
    a27e:	6c f3       	brlt	.-38     	; 0xa25a <findTimerIntElement+0x22>
    a280:	e0 e0       	ldi	r30, 0x00	; 0
    a282:	f0 e0       	ldi	r31, 0x00	; 0
    a284:	cf 01       	movw	r24, r30
    a286:	0f 90       	pop	r0
    a288:	0f 90       	pop	r0
    a28a:	df 91       	pop	r29
    a28c:	cf 91       	pop	r28
    a28e:	08 95       	ret

0000a290 <__vector_15>:
    a290:	1f 92       	push	r1
    a292:	0f 92       	push	r0
    a294:	0f b6       	in	r0, 0x3f	; 63
    a296:	0f 92       	push	r0
    a298:	08 b6       	in	r0, 0x38	; 56
    a29a:	0f 92       	push	r0
    a29c:	11 24       	eor	r1, r1
    a29e:	0f 90       	pop	r0
    a2a0:	08 be       	out	0x38, r0	; 56
    a2a2:	0f 90       	pop	r0
    a2a4:	0f be       	out	0x3f, r0	; 63
    a2a6:	0f 90       	pop	r0
    a2a8:	1f 90       	pop	r1
    a2aa:	18 95       	reti

0000a2ac <__vector_16>:
    a2ac:	1f 92       	push	r1
    a2ae:	0f 92       	push	r0
    a2b0:	0f b6       	in	r0, 0x3f	; 63
    a2b2:	0f 92       	push	r0
    a2b4:	08 b6       	in	r0, 0x38	; 56
    a2b6:	0f 92       	push	r0
    a2b8:	09 b6       	in	r0, 0x39	; 57
    a2ba:	0f 92       	push	r0
    a2bc:	0b b6       	in	r0, 0x3b	; 59
    a2be:	0f 92       	push	r0
    a2c0:	11 24       	eor	r1, r1
    a2c2:	2f 93       	push	r18
    a2c4:	3f 93       	push	r19
    a2c6:	4f 93       	push	r20
    a2c8:	5f 93       	push	r21
    a2ca:	6f 93       	push	r22
    a2cc:	7f 93       	push	r23
    a2ce:	8f 93       	push	r24
    a2d0:	9f 93       	push	r25
    a2d2:	af 93       	push	r26
    a2d4:	bf 93       	push	r27
    a2d6:	ef 93       	push	r30
    a2d8:	ff 93       	push	r31
    a2da:	80 e0       	ldi	r24, 0x00	; 0
    a2dc:	0e 94 1c 51 	call	0xa238	; 0xa238 <findTimerIntElement>
    a2e0:	00 97       	sbiw	r24, 0x00	; 0
    a2e2:	41 f0       	breq	.+16     	; 0xa2f4 <__vector_16+0x48>
    a2e4:	dc 01       	movw	r26, r24
    a2e6:	11 96       	adiw	r26, 0x01	; 1
    a2e8:	ed 91       	ld	r30, X+
    a2ea:	fc 91       	ld	r31, X
    a2ec:	12 97       	sbiw	r26, 0x02	; 2
    a2ee:	30 97       	sbiw	r30, 0x00	; 0
    a2f0:	09 f0       	breq	.+2      	; 0xa2f4 <__vector_16+0x48>
    a2f2:	19 95       	eicall
    a2f4:	ff 91       	pop	r31
    a2f6:	ef 91       	pop	r30
    a2f8:	bf 91       	pop	r27
    a2fa:	af 91       	pop	r26
    a2fc:	9f 91       	pop	r25
    a2fe:	8f 91       	pop	r24
    a300:	7f 91       	pop	r23
    a302:	6f 91       	pop	r22
    a304:	5f 91       	pop	r21
    a306:	4f 91       	pop	r20
    a308:	3f 91       	pop	r19
    a30a:	2f 91       	pop	r18
    a30c:	0f 90       	pop	r0
    a30e:	0b be       	out	0x3b, r0	; 59
    a310:	0f 90       	pop	r0
    a312:	09 be       	out	0x39, r0	; 57
    a314:	0f 90       	pop	r0
    a316:	08 be       	out	0x38, r0	; 56
    a318:	0f 90       	pop	r0
    a31a:	0f be       	out	0x3f, r0	; 63
    a31c:	0f 90       	pop	r0
    a31e:	1f 90       	pop	r1
    a320:	18 95       	reti

0000a322 <__vector_17>:
    a322:	1f 92       	push	r1
    a324:	0f 92       	push	r0
    a326:	0f b6       	in	r0, 0x3f	; 63
    a328:	0f 92       	push	r0
    a32a:	08 b6       	in	r0, 0x38	; 56
    a32c:	0f 92       	push	r0
    a32e:	09 b6       	in	r0, 0x39	; 57
    a330:	0f 92       	push	r0
    a332:	0b b6       	in	r0, 0x3b	; 59
    a334:	0f 92       	push	r0
    a336:	11 24       	eor	r1, r1
    a338:	2f 93       	push	r18
    a33a:	3f 93       	push	r19
    a33c:	4f 93       	push	r20
    a33e:	5f 93       	push	r21
    a340:	6f 93       	push	r22
    a342:	7f 93       	push	r23
    a344:	8f 93       	push	r24
    a346:	9f 93       	push	r25
    a348:	af 93       	push	r26
    a34a:	bf 93       	push	r27
    a34c:	ef 93       	push	r30
    a34e:	ff 93       	push	r31
    a350:	81 e0       	ldi	r24, 0x01	; 1
    a352:	0e 94 1c 51 	call	0xa238	; 0xa238 <findTimerIntElement>
    a356:	00 97       	sbiw	r24, 0x00	; 0
    a358:	41 f0       	breq	.+16     	; 0xa36a <__vector_17+0x48>
    a35a:	dc 01       	movw	r26, r24
    a35c:	11 96       	adiw	r26, 0x01	; 1
    a35e:	ed 91       	ld	r30, X+
    a360:	fc 91       	ld	r31, X
    a362:	12 97       	sbiw	r26, 0x02	; 2
    a364:	30 97       	sbiw	r30, 0x00	; 0
    a366:	09 f0       	breq	.+2      	; 0xa36a <__vector_17+0x48>
    a368:	19 95       	eicall
    a36a:	ff 91       	pop	r31
    a36c:	ef 91       	pop	r30
    a36e:	bf 91       	pop	r27
    a370:	af 91       	pop	r26
    a372:	9f 91       	pop	r25
    a374:	8f 91       	pop	r24
    a376:	7f 91       	pop	r23
    a378:	6f 91       	pop	r22
    a37a:	5f 91       	pop	r21
    a37c:	4f 91       	pop	r20
    a37e:	3f 91       	pop	r19
    a380:	2f 91       	pop	r18
    a382:	0f 90       	pop	r0
    a384:	0b be       	out	0x3b, r0	; 59
    a386:	0f 90       	pop	r0
    a388:	09 be       	out	0x39, r0	; 57
    a38a:	0f 90       	pop	r0
    a38c:	08 be       	out	0x38, r0	; 56
    a38e:	0f 90       	pop	r0
    a390:	0f be       	out	0x3f, r0	; 63
    a392:	0f 90       	pop	r0
    a394:	1f 90       	pop	r1
    a396:	18 95       	reti

0000a398 <__vector_18>:
    a398:	1f 92       	push	r1
    a39a:	0f 92       	push	r0
    a39c:	0f b6       	in	r0, 0x3f	; 63
    a39e:	0f 92       	push	r0
    a3a0:	08 b6       	in	r0, 0x38	; 56
    a3a2:	0f 92       	push	r0
    a3a4:	09 b6       	in	r0, 0x39	; 57
    a3a6:	0f 92       	push	r0
    a3a8:	0b b6       	in	r0, 0x3b	; 59
    a3aa:	0f 92       	push	r0
    a3ac:	11 24       	eor	r1, r1
    a3ae:	2f 93       	push	r18
    a3b0:	3f 93       	push	r19
    a3b2:	4f 93       	push	r20
    a3b4:	5f 93       	push	r21
    a3b6:	6f 93       	push	r22
    a3b8:	7f 93       	push	r23
    a3ba:	8f 93       	push	r24
    a3bc:	9f 93       	push	r25
    a3be:	af 93       	push	r26
    a3c0:	bf 93       	push	r27
    a3c2:	ef 93       	push	r30
    a3c4:	ff 93       	push	r31
    a3c6:	82 e0       	ldi	r24, 0x02	; 2
    a3c8:	0e 94 1c 51 	call	0xa238	; 0xa238 <findTimerIntElement>
    a3cc:	00 97       	sbiw	r24, 0x00	; 0
    a3ce:	41 f0       	breq	.+16     	; 0xa3e0 <__vector_18+0x48>
    a3d0:	dc 01       	movw	r26, r24
    a3d2:	11 96       	adiw	r26, 0x01	; 1
    a3d4:	ed 91       	ld	r30, X+
    a3d6:	fc 91       	ld	r31, X
    a3d8:	12 97       	sbiw	r26, 0x02	; 2
    a3da:	30 97       	sbiw	r30, 0x00	; 0
    a3dc:	09 f0       	breq	.+2      	; 0xa3e0 <__vector_18+0x48>
    a3de:	19 95       	eicall
    a3e0:	ff 91       	pop	r31
    a3e2:	ef 91       	pop	r30
    a3e4:	bf 91       	pop	r27
    a3e6:	af 91       	pop	r26
    a3e8:	9f 91       	pop	r25
    a3ea:	8f 91       	pop	r24
    a3ec:	7f 91       	pop	r23
    a3ee:	6f 91       	pop	r22
    a3f0:	5f 91       	pop	r21
    a3f2:	4f 91       	pop	r20
    a3f4:	3f 91       	pop	r19
    a3f6:	2f 91       	pop	r18
    a3f8:	0f 90       	pop	r0
    a3fa:	0b be       	out	0x3b, r0	; 59
    a3fc:	0f 90       	pop	r0
    a3fe:	09 be       	out	0x39, r0	; 57
    a400:	0f 90       	pop	r0
    a402:	08 be       	out	0x38, r0	; 56
    a404:	0f 90       	pop	r0
    a406:	0f be       	out	0x3f, r0	; 63
    a408:	0f 90       	pop	r0
    a40a:	1f 90       	pop	r1
    a40c:	18 95       	reti

0000a40e <__vector_19>:
    a40e:	1f 92       	push	r1
    a410:	0f 92       	push	r0
    a412:	0f b6       	in	r0, 0x3f	; 63
    a414:	0f 92       	push	r0
    a416:	08 b6       	in	r0, 0x38	; 56
    a418:	0f 92       	push	r0
    a41a:	09 b6       	in	r0, 0x39	; 57
    a41c:	0f 92       	push	r0
    a41e:	0b b6       	in	r0, 0x3b	; 59
    a420:	0f 92       	push	r0
    a422:	11 24       	eor	r1, r1
    a424:	2f 93       	push	r18
    a426:	3f 93       	push	r19
    a428:	4f 93       	push	r20
    a42a:	5f 93       	push	r21
    a42c:	6f 93       	push	r22
    a42e:	7f 93       	push	r23
    a430:	8f 93       	push	r24
    a432:	9f 93       	push	r25
    a434:	af 93       	push	r26
    a436:	bf 93       	push	r27
    a438:	ef 93       	push	r30
    a43a:	ff 93       	push	r31
    a43c:	83 e0       	ldi	r24, 0x03	; 3
    a43e:	0e 94 1c 51 	call	0xa238	; 0xa238 <findTimerIntElement>
    a442:	00 97       	sbiw	r24, 0x00	; 0
    a444:	41 f0       	breq	.+16     	; 0xa456 <__vector_19+0x48>
    a446:	dc 01       	movw	r26, r24
    a448:	11 96       	adiw	r26, 0x01	; 1
    a44a:	ed 91       	ld	r30, X+
    a44c:	fc 91       	ld	r31, X
    a44e:	12 97       	sbiw	r26, 0x02	; 2
    a450:	30 97       	sbiw	r30, 0x00	; 0
    a452:	09 f0       	breq	.+2      	; 0xa456 <__vector_19+0x48>
    a454:	19 95       	eicall
    a456:	ff 91       	pop	r31
    a458:	ef 91       	pop	r30
    a45a:	bf 91       	pop	r27
    a45c:	af 91       	pop	r26
    a45e:	9f 91       	pop	r25
    a460:	8f 91       	pop	r24
    a462:	7f 91       	pop	r23
    a464:	6f 91       	pop	r22
    a466:	5f 91       	pop	r21
    a468:	4f 91       	pop	r20
    a46a:	3f 91       	pop	r19
    a46c:	2f 91       	pop	r18
    a46e:	0f 90       	pop	r0
    a470:	0b be       	out	0x3b, r0	; 59
    a472:	0f 90       	pop	r0
    a474:	09 be       	out	0x39, r0	; 57
    a476:	0f 90       	pop	r0
    a478:	08 be       	out	0x38, r0	; 56
    a47a:	0f 90       	pop	r0
    a47c:	0f be       	out	0x3f, r0	; 63
    a47e:	0f 90       	pop	r0
    a480:	1f 90       	pop	r1
    a482:	18 95       	reti

0000a484 <__vector_14>:
    a484:	1f 92       	push	r1
    a486:	0f 92       	push	r0
    a488:	0f b6       	in	r0, 0x3f	; 63
    a48a:	0f 92       	push	r0
    a48c:	08 b6       	in	r0, 0x38	; 56
    a48e:	0f 92       	push	r0
    a490:	09 b6       	in	r0, 0x39	; 57
    a492:	0f 92       	push	r0
    a494:	0b b6       	in	r0, 0x3b	; 59
    a496:	0f 92       	push	r0
    a498:	11 24       	eor	r1, r1
    a49a:	2f 93       	push	r18
    a49c:	3f 93       	push	r19
    a49e:	4f 93       	push	r20
    a4a0:	5f 93       	push	r21
    a4a2:	6f 93       	push	r22
    a4a4:	7f 93       	push	r23
    a4a6:	8f 93       	push	r24
    a4a8:	9f 93       	push	r25
    a4aa:	af 93       	push	r26
    a4ac:	bf 93       	push	r27
    a4ae:	ef 93       	push	r30
    a4b0:	ff 93       	push	r31
    a4b2:	84 e0       	ldi	r24, 0x04	; 4
    a4b4:	0e 94 1c 51 	call	0xa238	; 0xa238 <findTimerIntElement>
    a4b8:	00 97       	sbiw	r24, 0x00	; 0
    a4ba:	41 f0       	breq	.+16     	; 0xa4cc <__vector_14+0x48>
    a4bc:	dc 01       	movw	r26, r24
    a4be:	11 96       	adiw	r26, 0x01	; 1
    a4c0:	ed 91       	ld	r30, X+
    a4c2:	fc 91       	ld	r31, X
    a4c4:	12 97       	sbiw	r26, 0x02	; 2
    a4c6:	30 97       	sbiw	r30, 0x00	; 0
    a4c8:	09 f0       	breq	.+2      	; 0xa4cc <__vector_14+0x48>
    a4ca:	19 95       	eicall
    a4cc:	ff 91       	pop	r31
    a4ce:	ef 91       	pop	r30
    a4d0:	bf 91       	pop	r27
    a4d2:	af 91       	pop	r26
    a4d4:	9f 91       	pop	r25
    a4d6:	8f 91       	pop	r24
    a4d8:	7f 91       	pop	r23
    a4da:	6f 91       	pop	r22
    a4dc:	5f 91       	pop	r21
    a4de:	4f 91       	pop	r20
    a4e0:	3f 91       	pop	r19
    a4e2:	2f 91       	pop	r18
    a4e4:	0f 90       	pop	r0
    a4e6:	0b be       	out	0x3b, r0	; 59
    a4e8:	0f 90       	pop	r0
    a4ea:	09 be       	out	0x39, r0	; 57
    a4ec:	0f 90       	pop	r0
    a4ee:	08 be       	out	0x38, r0	; 56
    a4f0:	0f 90       	pop	r0
    a4f2:	0f be       	out	0x3f, r0	; 63
    a4f4:	0f 90       	pop	r0
    a4f6:	1f 90       	pop	r1
    a4f8:	18 95       	reti

0000a4fa <__vector_22>:
    a4fa:	1f 92       	push	r1
    a4fc:	0f 92       	push	r0
    a4fe:	0f b6       	in	r0, 0x3f	; 63
    a500:	0f 92       	push	r0
    a502:	08 b6       	in	r0, 0x38	; 56
    a504:	0f 92       	push	r0
    a506:	09 b6       	in	r0, 0x39	; 57
    a508:	0f 92       	push	r0
    a50a:	0b b6       	in	r0, 0x3b	; 59
    a50c:	0f 92       	push	r0
    a50e:	11 24       	eor	r1, r1
    a510:	2f 93       	push	r18
    a512:	3f 93       	push	r19
    a514:	4f 93       	push	r20
    a516:	5f 93       	push	r21
    a518:	6f 93       	push	r22
    a51a:	7f 93       	push	r23
    a51c:	8f 93       	push	r24
    a51e:	9f 93       	push	r25
    a520:	af 93       	push	r26
    a522:	bf 93       	push	r27
    a524:	ef 93       	push	r30
    a526:	ff 93       	push	r31
    a528:	85 e0       	ldi	r24, 0x05	; 5
    a52a:	0e 94 1c 51 	call	0xa238	; 0xa238 <findTimerIntElement>
    a52e:	00 97       	sbiw	r24, 0x00	; 0
    a530:	41 f0       	breq	.+16     	; 0xa542 <__vector_22+0x48>
    a532:	dc 01       	movw	r26, r24
    a534:	11 96       	adiw	r26, 0x01	; 1
    a536:	ed 91       	ld	r30, X+
    a538:	fc 91       	ld	r31, X
    a53a:	12 97       	sbiw	r26, 0x02	; 2
    a53c:	30 97       	sbiw	r30, 0x00	; 0
    a53e:	09 f0       	breq	.+2      	; 0xa542 <__vector_22+0x48>
    a540:	19 95       	eicall
    a542:	ff 91       	pop	r31
    a544:	ef 91       	pop	r30
    a546:	bf 91       	pop	r27
    a548:	af 91       	pop	r26
    a54a:	9f 91       	pop	r25
    a54c:	8f 91       	pop	r24
    a54e:	7f 91       	pop	r23
    a550:	6f 91       	pop	r22
    a552:	5f 91       	pop	r21
    a554:	4f 91       	pop	r20
    a556:	3f 91       	pop	r19
    a558:	2f 91       	pop	r18
    a55a:	0f 90       	pop	r0
    a55c:	0b be       	out	0x3b, r0	; 59
    a55e:	0f 90       	pop	r0
    a560:	09 be       	out	0x39, r0	; 57
    a562:	0f 90       	pop	r0
    a564:	08 be       	out	0x38, r0	; 56
    a566:	0f 90       	pop	r0
    a568:	0f be       	out	0x3f, r0	; 63
    a56a:	0f 90       	pop	r0
    a56c:	1f 90       	pop	r1
    a56e:	18 95       	reti

0000a570 <__vector_23>:
    a570:	1f 92       	push	r1
    a572:	0f 92       	push	r0
    a574:	0f b6       	in	r0, 0x3f	; 63
    a576:	0f 92       	push	r0
    a578:	08 b6       	in	r0, 0x38	; 56
    a57a:	0f 92       	push	r0
    a57c:	09 b6       	in	r0, 0x39	; 57
    a57e:	0f 92       	push	r0
    a580:	0b b6       	in	r0, 0x3b	; 59
    a582:	0f 92       	push	r0
    a584:	11 24       	eor	r1, r1
    a586:	2f 93       	push	r18
    a588:	3f 93       	push	r19
    a58a:	4f 93       	push	r20
    a58c:	5f 93       	push	r21
    a58e:	6f 93       	push	r22
    a590:	7f 93       	push	r23
    a592:	8f 93       	push	r24
    a594:	9f 93       	push	r25
    a596:	af 93       	push	r26
    a598:	bf 93       	push	r27
    a59a:	ef 93       	push	r30
    a59c:	ff 93       	push	r31
    a59e:	86 e0       	ldi	r24, 0x06	; 6
    a5a0:	0e 94 1c 51 	call	0xa238	; 0xa238 <findTimerIntElement>
    a5a4:	00 97       	sbiw	r24, 0x00	; 0
    a5a6:	41 f0       	breq	.+16     	; 0xa5b8 <__vector_23+0x48>
    a5a8:	dc 01       	movw	r26, r24
    a5aa:	11 96       	adiw	r26, 0x01	; 1
    a5ac:	ed 91       	ld	r30, X+
    a5ae:	fc 91       	ld	r31, X
    a5b0:	12 97       	sbiw	r26, 0x02	; 2
    a5b2:	30 97       	sbiw	r30, 0x00	; 0
    a5b4:	09 f0       	breq	.+2      	; 0xa5b8 <__vector_23+0x48>
    a5b6:	19 95       	eicall
    a5b8:	ff 91       	pop	r31
    a5ba:	ef 91       	pop	r30
    a5bc:	bf 91       	pop	r27
    a5be:	af 91       	pop	r26
    a5c0:	9f 91       	pop	r25
    a5c2:	8f 91       	pop	r24
    a5c4:	7f 91       	pop	r23
    a5c6:	6f 91       	pop	r22
    a5c8:	5f 91       	pop	r21
    a5ca:	4f 91       	pop	r20
    a5cc:	3f 91       	pop	r19
    a5ce:	2f 91       	pop	r18
    a5d0:	0f 90       	pop	r0
    a5d2:	0b be       	out	0x3b, r0	; 59
    a5d4:	0f 90       	pop	r0
    a5d6:	09 be       	out	0x39, r0	; 57
    a5d8:	0f 90       	pop	r0
    a5da:	08 be       	out	0x38, r0	; 56
    a5dc:	0f 90       	pop	r0
    a5de:	0f be       	out	0x3f, r0	; 63
    a5e0:	0f 90       	pop	r0
    a5e2:	1f 90       	pop	r1
    a5e4:	18 95       	reti

0000a5e6 <__vector_20>:
    a5e6:	1f 92       	push	r1
    a5e8:	0f 92       	push	r0
    a5ea:	0f b6       	in	r0, 0x3f	; 63
    a5ec:	0f 92       	push	r0
    a5ee:	08 b6       	in	r0, 0x38	; 56
    a5f0:	0f 92       	push	r0
    a5f2:	09 b6       	in	r0, 0x39	; 57
    a5f4:	0f 92       	push	r0
    a5f6:	0b b6       	in	r0, 0x3b	; 59
    a5f8:	0f 92       	push	r0
    a5fa:	11 24       	eor	r1, r1
    a5fc:	2f 93       	push	r18
    a5fe:	3f 93       	push	r19
    a600:	4f 93       	push	r20
    a602:	5f 93       	push	r21
    a604:	6f 93       	push	r22
    a606:	7f 93       	push	r23
    a608:	8f 93       	push	r24
    a60a:	9f 93       	push	r25
    a60c:	af 93       	push	r26
    a60e:	bf 93       	push	r27
    a610:	ef 93       	push	r30
    a612:	ff 93       	push	r31
    a614:	89 e0       	ldi	r24, 0x09	; 9
    a616:	0e 94 1c 51 	call	0xa238	; 0xa238 <findTimerIntElement>
    a61a:	00 97       	sbiw	r24, 0x00	; 0
    a61c:	41 f0       	breq	.+16     	; 0xa62e <__vector_20+0x48>
    a61e:	dc 01       	movw	r26, r24
    a620:	11 96       	adiw	r26, 0x01	; 1
    a622:	ed 91       	ld	r30, X+
    a624:	fc 91       	ld	r31, X
    a626:	12 97       	sbiw	r26, 0x02	; 2
    a628:	30 97       	sbiw	r30, 0x00	; 0
    a62a:	09 f0       	breq	.+2      	; 0xa62e <__vector_20+0x48>
    a62c:	19 95       	eicall
    a62e:	ff 91       	pop	r31
    a630:	ef 91       	pop	r30
    a632:	bf 91       	pop	r27
    a634:	af 91       	pop	r26
    a636:	9f 91       	pop	r25
    a638:	8f 91       	pop	r24
    a63a:	7f 91       	pop	r23
    a63c:	6f 91       	pop	r22
    a63e:	5f 91       	pop	r21
    a640:	4f 91       	pop	r20
    a642:	3f 91       	pop	r19
    a644:	2f 91       	pop	r18
    a646:	0f 90       	pop	r0
    a648:	0b be       	out	0x3b, r0	; 59
    a64a:	0f 90       	pop	r0
    a64c:	09 be       	out	0x39, r0	; 57
    a64e:	0f 90       	pop	r0
    a650:	08 be       	out	0x38, r0	; 56
    a652:	0f 90       	pop	r0
    a654:	0f be       	out	0x3f, r0	; 63
    a656:	0f 90       	pop	r0
    a658:	1f 90       	pop	r1
    a65a:	18 95       	reti

0000a65c <__vector_79>:
    a65c:	1f 92       	push	r1
    a65e:	0f 92       	push	r0
    a660:	0f b6       	in	r0, 0x3f	; 63
    a662:	0f 92       	push	r0
    a664:	08 b6       	in	r0, 0x38	; 56
    a666:	0f 92       	push	r0
    a668:	09 b6       	in	r0, 0x39	; 57
    a66a:	0f 92       	push	r0
    a66c:	0b b6       	in	r0, 0x3b	; 59
    a66e:	0f 92       	push	r0
    a670:	11 24       	eor	r1, r1
    a672:	2f 93       	push	r18
    a674:	3f 93       	push	r19
    a676:	4f 93       	push	r20
    a678:	5f 93       	push	r21
    a67a:	6f 93       	push	r22
    a67c:	7f 93       	push	r23
    a67e:	8f 93       	push	r24
    a680:	9f 93       	push	r25
    a682:	af 93       	push	r26
    a684:	bf 93       	push	r27
    a686:	ef 93       	push	r30
    a688:	ff 93       	push	r31
    a68a:	8a e0       	ldi	r24, 0x0A	; 10
    a68c:	0e 94 1c 51 	call	0xa238	; 0xa238 <findTimerIntElement>
    a690:	00 97       	sbiw	r24, 0x00	; 0
    a692:	41 f0       	breq	.+16     	; 0xa6a4 <__vector_79+0x48>
    a694:	dc 01       	movw	r26, r24
    a696:	11 96       	adiw	r26, 0x01	; 1
    a698:	ed 91       	ld	r30, X+
    a69a:	fc 91       	ld	r31, X
    a69c:	12 97       	sbiw	r26, 0x02	; 2
    a69e:	30 97       	sbiw	r30, 0x00	; 0
    a6a0:	09 f0       	breq	.+2      	; 0xa6a4 <__vector_79+0x48>
    a6a2:	19 95       	eicall
    a6a4:	ff 91       	pop	r31
    a6a6:	ef 91       	pop	r30
    a6a8:	bf 91       	pop	r27
    a6aa:	af 91       	pop	r26
    a6ac:	9f 91       	pop	r25
    a6ae:	8f 91       	pop	r24
    a6b0:	7f 91       	pop	r23
    a6b2:	6f 91       	pop	r22
    a6b4:	5f 91       	pop	r21
    a6b6:	4f 91       	pop	r20
    a6b8:	3f 91       	pop	r19
    a6ba:	2f 91       	pop	r18
    a6bc:	0f 90       	pop	r0
    a6be:	0b be       	out	0x3b, r0	; 59
    a6c0:	0f 90       	pop	r0
    a6c2:	09 be       	out	0x39, r0	; 57
    a6c4:	0f 90       	pop	r0
    a6c6:	08 be       	out	0x38, r0	; 56
    a6c8:	0f 90       	pop	r0
    a6ca:	0f be       	out	0x3f, r0	; 63
    a6cc:	0f 90       	pop	r0
    a6ce:	1f 90       	pop	r1
    a6d0:	18 95       	reti

0000a6d2 <__vector_80>:
    a6d2:	1f 92       	push	r1
    a6d4:	0f 92       	push	r0
    a6d6:	0f b6       	in	r0, 0x3f	; 63
    a6d8:	0f 92       	push	r0
    a6da:	08 b6       	in	r0, 0x38	; 56
    a6dc:	0f 92       	push	r0
    a6de:	09 b6       	in	r0, 0x39	; 57
    a6e0:	0f 92       	push	r0
    a6e2:	0b b6       	in	r0, 0x3b	; 59
    a6e4:	0f 92       	push	r0
    a6e6:	11 24       	eor	r1, r1
    a6e8:	2f 93       	push	r18
    a6ea:	3f 93       	push	r19
    a6ec:	4f 93       	push	r20
    a6ee:	5f 93       	push	r21
    a6f0:	6f 93       	push	r22
    a6f2:	7f 93       	push	r23
    a6f4:	8f 93       	push	r24
    a6f6:	9f 93       	push	r25
    a6f8:	af 93       	push	r26
    a6fa:	bf 93       	push	r27
    a6fc:	ef 93       	push	r30
    a6fe:	ff 93       	push	r31
    a700:	8b e0       	ldi	r24, 0x0B	; 11
    a702:	0e 94 1c 51 	call	0xa238	; 0xa238 <findTimerIntElement>
    a706:	00 97       	sbiw	r24, 0x00	; 0
    a708:	41 f0       	breq	.+16     	; 0xa71a <__vector_80+0x48>
    a70a:	dc 01       	movw	r26, r24
    a70c:	11 96       	adiw	r26, 0x01	; 1
    a70e:	ed 91       	ld	r30, X+
    a710:	fc 91       	ld	r31, X
    a712:	12 97       	sbiw	r26, 0x02	; 2
    a714:	30 97       	sbiw	r30, 0x00	; 0
    a716:	09 f0       	breq	.+2      	; 0xa71a <__vector_80+0x48>
    a718:	19 95       	eicall
    a71a:	ff 91       	pop	r31
    a71c:	ef 91       	pop	r30
    a71e:	bf 91       	pop	r27
    a720:	af 91       	pop	r26
    a722:	9f 91       	pop	r25
    a724:	8f 91       	pop	r24
    a726:	7f 91       	pop	r23
    a728:	6f 91       	pop	r22
    a72a:	5f 91       	pop	r21
    a72c:	4f 91       	pop	r20
    a72e:	3f 91       	pop	r19
    a730:	2f 91       	pop	r18
    a732:	0f 90       	pop	r0
    a734:	0b be       	out	0x3b, r0	; 59
    a736:	0f 90       	pop	r0
    a738:	09 be       	out	0x39, r0	; 57
    a73a:	0f 90       	pop	r0
    a73c:	08 be       	out	0x38, r0	; 56
    a73e:	0f 90       	pop	r0
    a740:	0f be       	out	0x3f, r0	; 63
    a742:	0f 90       	pop	r0
    a744:	1f 90       	pop	r1
    a746:	18 95       	reti

0000a748 <__vector_81>:
    a748:	1f 92       	push	r1
    a74a:	0f 92       	push	r0
    a74c:	0f b6       	in	r0, 0x3f	; 63
    a74e:	0f 92       	push	r0
    a750:	08 b6       	in	r0, 0x38	; 56
    a752:	0f 92       	push	r0
    a754:	09 b6       	in	r0, 0x39	; 57
    a756:	0f 92       	push	r0
    a758:	0b b6       	in	r0, 0x3b	; 59
    a75a:	0f 92       	push	r0
    a75c:	11 24       	eor	r1, r1
    a75e:	2f 93       	push	r18
    a760:	3f 93       	push	r19
    a762:	4f 93       	push	r20
    a764:	5f 93       	push	r21
    a766:	6f 93       	push	r22
    a768:	7f 93       	push	r23
    a76a:	8f 93       	push	r24
    a76c:	9f 93       	push	r25
    a76e:	af 93       	push	r26
    a770:	bf 93       	push	r27
    a772:	ef 93       	push	r30
    a774:	ff 93       	push	r31
    a776:	8c e0       	ldi	r24, 0x0C	; 12
    a778:	0e 94 1c 51 	call	0xa238	; 0xa238 <findTimerIntElement>
    a77c:	00 97       	sbiw	r24, 0x00	; 0
    a77e:	41 f0       	breq	.+16     	; 0xa790 <__vector_81+0x48>
    a780:	dc 01       	movw	r26, r24
    a782:	11 96       	adiw	r26, 0x01	; 1
    a784:	ed 91       	ld	r30, X+
    a786:	fc 91       	ld	r31, X
    a788:	12 97       	sbiw	r26, 0x02	; 2
    a78a:	30 97       	sbiw	r30, 0x00	; 0
    a78c:	09 f0       	breq	.+2      	; 0xa790 <__vector_81+0x48>
    a78e:	19 95       	eicall
    a790:	ff 91       	pop	r31
    a792:	ef 91       	pop	r30
    a794:	bf 91       	pop	r27
    a796:	af 91       	pop	r26
    a798:	9f 91       	pop	r25
    a79a:	8f 91       	pop	r24
    a79c:	7f 91       	pop	r23
    a79e:	6f 91       	pop	r22
    a7a0:	5f 91       	pop	r21
    a7a2:	4f 91       	pop	r20
    a7a4:	3f 91       	pop	r19
    a7a6:	2f 91       	pop	r18
    a7a8:	0f 90       	pop	r0
    a7aa:	0b be       	out	0x3b, r0	; 59
    a7ac:	0f 90       	pop	r0
    a7ae:	09 be       	out	0x39, r0	; 57
    a7b0:	0f 90       	pop	r0
    a7b2:	08 be       	out	0x38, r0	; 56
    a7b4:	0f 90       	pop	r0
    a7b6:	0f be       	out	0x3f, r0	; 63
    a7b8:	0f 90       	pop	r0
    a7ba:	1f 90       	pop	r1
    a7bc:	18 95       	reti

0000a7be <__vector_82>:
    a7be:	1f 92       	push	r1
    a7c0:	0f 92       	push	r0
    a7c2:	0f b6       	in	r0, 0x3f	; 63
    a7c4:	0f 92       	push	r0
    a7c6:	08 b6       	in	r0, 0x38	; 56
    a7c8:	0f 92       	push	r0
    a7ca:	09 b6       	in	r0, 0x39	; 57
    a7cc:	0f 92       	push	r0
    a7ce:	0b b6       	in	r0, 0x3b	; 59
    a7d0:	0f 92       	push	r0
    a7d2:	11 24       	eor	r1, r1
    a7d4:	2f 93       	push	r18
    a7d6:	3f 93       	push	r19
    a7d8:	4f 93       	push	r20
    a7da:	5f 93       	push	r21
    a7dc:	6f 93       	push	r22
    a7de:	7f 93       	push	r23
    a7e0:	8f 93       	push	r24
    a7e2:	9f 93       	push	r25
    a7e4:	af 93       	push	r26
    a7e6:	bf 93       	push	r27
    a7e8:	ef 93       	push	r30
    a7ea:	ff 93       	push	r31
    a7ec:	8d e0       	ldi	r24, 0x0D	; 13
    a7ee:	0e 94 1c 51 	call	0xa238	; 0xa238 <findTimerIntElement>
    a7f2:	00 97       	sbiw	r24, 0x00	; 0
    a7f4:	41 f0       	breq	.+16     	; 0xa806 <__vector_82+0x48>
    a7f6:	dc 01       	movw	r26, r24
    a7f8:	11 96       	adiw	r26, 0x01	; 1
    a7fa:	ed 91       	ld	r30, X+
    a7fc:	fc 91       	ld	r31, X
    a7fe:	12 97       	sbiw	r26, 0x02	; 2
    a800:	30 97       	sbiw	r30, 0x00	; 0
    a802:	09 f0       	breq	.+2      	; 0xa806 <__vector_82+0x48>
    a804:	19 95       	eicall
    a806:	ff 91       	pop	r31
    a808:	ef 91       	pop	r30
    a80a:	bf 91       	pop	r27
    a80c:	af 91       	pop	r26
    a80e:	9f 91       	pop	r25
    a810:	8f 91       	pop	r24
    a812:	7f 91       	pop	r23
    a814:	6f 91       	pop	r22
    a816:	5f 91       	pop	r21
    a818:	4f 91       	pop	r20
    a81a:	3f 91       	pop	r19
    a81c:	2f 91       	pop	r18
    a81e:	0f 90       	pop	r0
    a820:	0b be       	out	0x3b, r0	; 59
    a822:	0f 90       	pop	r0
    a824:	09 be       	out	0x39, r0	; 57
    a826:	0f 90       	pop	r0
    a828:	08 be       	out	0x38, r0	; 56
    a82a:	0f 90       	pop	r0
    a82c:	0f be       	out	0x3f, r0	; 63
    a82e:	0f 90       	pop	r0
    a830:	1f 90       	pop	r1
    a832:	18 95       	reti

0000a834 <__vector_77>:
    a834:	1f 92       	push	r1
    a836:	0f 92       	push	r0
    a838:	0f b6       	in	r0, 0x3f	; 63
    a83a:	0f 92       	push	r0
    a83c:	08 b6       	in	r0, 0x38	; 56
    a83e:	0f 92       	push	r0
    a840:	09 b6       	in	r0, 0x39	; 57
    a842:	0f 92       	push	r0
    a844:	0b b6       	in	r0, 0x3b	; 59
    a846:	0f 92       	push	r0
    a848:	11 24       	eor	r1, r1
    a84a:	2f 93       	push	r18
    a84c:	3f 93       	push	r19
    a84e:	4f 93       	push	r20
    a850:	5f 93       	push	r21
    a852:	6f 93       	push	r22
    a854:	7f 93       	push	r23
    a856:	8f 93       	push	r24
    a858:	9f 93       	push	r25
    a85a:	af 93       	push	r26
    a85c:	bf 93       	push	r27
    a85e:	ef 93       	push	r30
    a860:	ff 93       	push	r31
    a862:	8e e0       	ldi	r24, 0x0E	; 14
    a864:	0e 94 1c 51 	call	0xa238	; 0xa238 <findTimerIntElement>
    a868:	00 97       	sbiw	r24, 0x00	; 0
    a86a:	41 f0       	breq	.+16     	; 0xa87c <__vector_77+0x48>
    a86c:	dc 01       	movw	r26, r24
    a86e:	11 96       	adiw	r26, 0x01	; 1
    a870:	ed 91       	ld	r30, X+
    a872:	fc 91       	ld	r31, X
    a874:	12 97       	sbiw	r26, 0x02	; 2
    a876:	30 97       	sbiw	r30, 0x00	; 0
    a878:	09 f0       	breq	.+2      	; 0xa87c <__vector_77+0x48>
    a87a:	19 95       	eicall
    a87c:	ff 91       	pop	r31
    a87e:	ef 91       	pop	r30
    a880:	bf 91       	pop	r27
    a882:	af 91       	pop	r26
    a884:	9f 91       	pop	r25
    a886:	8f 91       	pop	r24
    a888:	7f 91       	pop	r23
    a88a:	6f 91       	pop	r22
    a88c:	5f 91       	pop	r21
    a88e:	4f 91       	pop	r20
    a890:	3f 91       	pop	r19
    a892:	2f 91       	pop	r18
    a894:	0f 90       	pop	r0
    a896:	0b be       	out	0x3b, r0	; 59
    a898:	0f 90       	pop	r0
    a89a:	09 be       	out	0x39, r0	; 57
    a89c:	0f 90       	pop	r0
    a89e:	08 be       	out	0x38, r0	; 56
    a8a0:	0f 90       	pop	r0
    a8a2:	0f be       	out	0x3f, r0	; 63
    a8a4:	0f 90       	pop	r0
    a8a6:	1f 90       	pop	r1
    a8a8:	18 95       	reti

0000a8aa <__vector_85>:
    a8aa:	1f 92       	push	r1
    a8ac:	0f 92       	push	r0
    a8ae:	0f b6       	in	r0, 0x3f	; 63
    a8b0:	0f 92       	push	r0
    a8b2:	08 b6       	in	r0, 0x38	; 56
    a8b4:	0f 92       	push	r0
    a8b6:	09 b6       	in	r0, 0x39	; 57
    a8b8:	0f 92       	push	r0
    a8ba:	0b b6       	in	r0, 0x3b	; 59
    a8bc:	0f 92       	push	r0
    a8be:	11 24       	eor	r1, r1
    a8c0:	2f 93       	push	r18
    a8c2:	3f 93       	push	r19
    a8c4:	4f 93       	push	r20
    a8c6:	5f 93       	push	r21
    a8c8:	6f 93       	push	r22
    a8ca:	7f 93       	push	r23
    a8cc:	8f 93       	push	r24
    a8ce:	9f 93       	push	r25
    a8d0:	af 93       	push	r26
    a8d2:	bf 93       	push	r27
    a8d4:	ef 93       	push	r30
    a8d6:	ff 93       	push	r31
    a8d8:	8f e0       	ldi	r24, 0x0F	; 15
    a8da:	0e 94 1c 51 	call	0xa238	; 0xa238 <findTimerIntElement>
    a8de:	00 97       	sbiw	r24, 0x00	; 0
    a8e0:	41 f0       	breq	.+16     	; 0xa8f2 <__vector_85+0x48>
    a8e2:	dc 01       	movw	r26, r24
    a8e4:	11 96       	adiw	r26, 0x01	; 1
    a8e6:	ed 91       	ld	r30, X+
    a8e8:	fc 91       	ld	r31, X
    a8ea:	12 97       	sbiw	r26, 0x02	; 2
    a8ec:	30 97       	sbiw	r30, 0x00	; 0
    a8ee:	09 f0       	breq	.+2      	; 0xa8f2 <__vector_85+0x48>
    a8f0:	19 95       	eicall
    a8f2:	ff 91       	pop	r31
    a8f4:	ef 91       	pop	r30
    a8f6:	bf 91       	pop	r27
    a8f8:	af 91       	pop	r26
    a8fa:	9f 91       	pop	r25
    a8fc:	8f 91       	pop	r24
    a8fe:	7f 91       	pop	r23
    a900:	6f 91       	pop	r22
    a902:	5f 91       	pop	r21
    a904:	4f 91       	pop	r20
    a906:	3f 91       	pop	r19
    a908:	2f 91       	pop	r18
    a90a:	0f 90       	pop	r0
    a90c:	0b be       	out	0x3b, r0	; 59
    a90e:	0f 90       	pop	r0
    a910:	09 be       	out	0x39, r0	; 57
    a912:	0f 90       	pop	r0
    a914:	08 be       	out	0x38, r0	; 56
    a916:	0f 90       	pop	r0
    a918:	0f be       	out	0x3f, r0	; 63
    a91a:	0f 90       	pop	r0
    a91c:	1f 90       	pop	r1
    a91e:	18 95       	reti

0000a920 <__vector_86>:
    a920:	1f 92       	push	r1
    a922:	0f 92       	push	r0
    a924:	0f b6       	in	r0, 0x3f	; 63
    a926:	0f 92       	push	r0
    a928:	08 b6       	in	r0, 0x38	; 56
    a92a:	0f 92       	push	r0
    a92c:	09 b6       	in	r0, 0x39	; 57
    a92e:	0f 92       	push	r0
    a930:	0b b6       	in	r0, 0x3b	; 59
    a932:	0f 92       	push	r0
    a934:	11 24       	eor	r1, r1
    a936:	2f 93       	push	r18
    a938:	3f 93       	push	r19
    a93a:	4f 93       	push	r20
    a93c:	5f 93       	push	r21
    a93e:	6f 93       	push	r22
    a940:	7f 93       	push	r23
    a942:	8f 93       	push	r24
    a944:	9f 93       	push	r25
    a946:	af 93       	push	r26
    a948:	bf 93       	push	r27
    a94a:	ef 93       	push	r30
    a94c:	ff 93       	push	r31
    a94e:	80 e1       	ldi	r24, 0x10	; 16
    a950:	0e 94 1c 51 	call	0xa238	; 0xa238 <findTimerIntElement>
    a954:	00 97       	sbiw	r24, 0x00	; 0
    a956:	41 f0       	breq	.+16     	; 0xa968 <__vector_86+0x48>
    a958:	dc 01       	movw	r26, r24
    a95a:	11 96       	adiw	r26, 0x01	; 1
    a95c:	ed 91       	ld	r30, X+
    a95e:	fc 91       	ld	r31, X
    a960:	12 97       	sbiw	r26, 0x02	; 2
    a962:	30 97       	sbiw	r30, 0x00	; 0
    a964:	09 f0       	breq	.+2      	; 0xa968 <__vector_86+0x48>
    a966:	19 95       	eicall
    a968:	ff 91       	pop	r31
    a96a:	ef 91       	pop	r30
    a96c:	bf 91       	pop	r27
    a96e:	af 91       	pop	r26
    a970:	9f 91       	pop	r25
    a972:	8f 91       	pop	r24
    a974:	7f 91       	pop	r23
    a976:	6f 91       	pop	r22
    a978:	5f 91       	pop	r21
    a97a:	4f 91       	pop	r20
    a97c:	3f 91       	pop	r19
    a97e:	2f 91       	pop	r18
    a980:	0f 90       	pop	r0
    a982:	0b be       	out	0x3b, r0	; 59
    a984:	0f 90       	pop	r0
    a986:	09 be       	out	0x39, r0	; 57
    a988:	0f 90       	pop	r0
    a98a:	08 be       	out	0x38, r0	; 56
    a98c:	0f 90       	pop	r0
    a98e:	0f be       	out	0x3f, r0	; 63
    a990:	0f 90       	pop	r0
    a992:	1f 90       	pop	r1
    a994:	18 95       	reti

0000a996 <__vector_83>:
    a996:	1f 92       	push	r1
    a998:	0f 92       	push	r0
    a99a:	0f b6       	in	r0, 0x3f	; 63
    a99c:	0f 92       	push	r0
    a99e:	08 b6       	in	r0, 0x38	; 56
    a9a0:	0f 92       	push	r0
    a9a2:	09 b6       	in	r0, 0x39	; 57
    a9a4:	0f 92       	push	r0
    a9a6:	0b b6       	in	r0, 0x3b	; 59
    a9a8:	0f 92       	push	r0
    a9aa:	11 24       	eor	r1, r1
    a9ac:	2f 93       	push	r18
    a9ae:	3f 93       	push	r19
    a9b0:	4f 93       	push	r20
    a9b2:	5f 93       	push	r21
    a9b4:	6f 93       	push	r22
    a9b6:	7f 93       	push	r23
    a9b8:	8f 93       	push	r24
    a9ba:	9f 93       	push	r25
    a9bc:	af 93       	push	r26
    a9be:	bf 93       	push	r27
    a9c0:	ef 93       	push	r30
    a9c2:	ff 93       	push	r31
    a9c4:	83 e1       	ldi	r24, 0x13	; 19
    a9c6:	0e 94 1c 51 	call	0xa238	; 0xa238 <findTimerIntElement>
    a9ca:	00 97       	sbiw	r24, 0x00	; 0
    a9cc:	41 f0       	breq	.+16     	; 0xa9de <__vector_83+0x48>
    a9ce:	dc 01       	movw	r26, r24
    a9d0:	11 96       	adiw	r26, 0x01	; 1
    a9d2:	ed 91       	ld	r30, X+
    a9d4:	fc 91       	ld	r31, X
    a9d6:	12 97       	sbiw	r26, 0x02	; 2
    a9d8:	30 97       	sbiw	r30, 0x00	; 0
    a9da:	09 f0       	breq	.+2      	; 0xa9de <__vector_83+0x48>
    a9dc:	19 95       	eicall
    a9de:	ff 91       	pop	r31
    a9e0:	ef 91       	pop	r30
    a9e2:	bf 91       	pop	r27
    a9e4:	af 91       	pop	r26
    a9e6:	9f 91       	pop	r25
    a9e8:	8f 91       	pop	r24
    a9ea:	7f 91       	pop	r23
    a9ec:	6f 91       	pop	r22
    a9ee:	5f 91       	pop	r21
    a9f0:	4f 91       	pop	r20
    a9f2:	3f 91       	pop	r19
    a9f4:	2f 91       	pop	r18
    a9f6:	0f 90       	pop	r0
    a9f8:	0b be       	out	0x3b, r0	; 59
    a9fa:	0f 90       	pop	r0
    a9fc:	09 be       	out	0x39, r0	; 57
    a9fe:	0f 90       	pop	r0
    aa00:	08 be       	out	0x38, r0	; 56
    aa02:	0f 90       	pop	r0
    aa04:	0f be       	out	0x3f, r0	; 63
    aa06:	0f 90       	pop	r0
    aa08:	1f 90       	pop	r1
    aa0a:	18 95       	reti

0000aa0c <__vector_49>:
    aa0c:	1f 92       	push	r1
    aa0e:	0f 92       	push	r0
    aa10:	0f b6       	in	r0, 0x3f	; 63
    aa12:	0f 92       	push	r0
    aa14:	08 b6       	in	r0, 0x38	; 56
    aa16:	0f 92       	push	r0
    aa18:	09 b6       	in	r0, 0x39	; 57
    aa1a:	0f 92       	push	r0
    aa1c:	0b b6       	in	r0, 0x3b	; 59
    aa1e:	0f 92       	push	r0
    aa20:	11 24       	eor	r1, r1
    aa22:	2f 93       	push	r18
    aa24:	3f 93       	push	r19
    aa26:	4f 93       	push	r20
    aa28:	5f 93       	push	r21
    aa2a:	6f 93       	push	r22
    aa2c:	7f 93       	push	r23
    aa2e:	8f 93       	push	r24
    aa30:	9f 93       	push	r25
    aa32:	af 93       	push	r26
    aa34:	bf 93       	push	r27
    aa36:	ef 93       	push	r30
    aa38:	ff 93       	push	r31
    aa3a:	84 e1       	ldi	r24, 0x14	; 20
    aa3c:	0e 94 1c 51 	call	0xa238	; 0xa238 <findTimerIntElement>
    aa40:	00 97       	sbiw	r24, 0x00	; 0
    aa42:	41 f0       	breq	.+16     	; 0xaa54 <__vector_49+0x48>
    aa44:	dc 01       	movw	r26, r24
    aa46:	11 96       	adiw	r26, 0x01	; 1
    aa48:	ed 91       	ld	r30, X+
    aa4a:	fc 91       	ld	r31, X
    aa4c:	12 97       	sbiw	r26, 0x02	; 2
    aa4e:	30 97       	sbiw	r30, 0x00	; 0
    aa50:	09 f0       	breq	.+2      	; 0xaa54 <__vector_49+0x48>
    aa52:	19 95       	eicall
    aa54:	ff 91       	pop	r31
    aa56:	ef 91       	pop	r30
    aa58:	bf 91       	pop	r27
    aa5a:	af 91       	pop	r26
    aa5c:	9f 91       	pop	r25
    aa5e:	8f 91       	pop	r24
    aa60:	7f 91       	pop	r23
    aa62:	6f 91       	pop	r22
    aa64:	5f 91       	pop	r21
    aa66:	4f 91       	pop	r20
    aa68:	3f 91       	pop	r19
    aa6a:	2f 91       	pop	r18
    aa6c:	0f 90       	pop	r0
    aa6e:	0b be       	out	0x3b, r0	; 59
    aa70:	0f 90       	pop	r0
    aa72:	09 be       	out	0x39, r0	; 57
    aa74:	0f 90       	pop	r0
    aa76:	08 be       	out	0x38, r0	; 56
    aa78:	0f 90       	pop	r0
    aa7a:	0f be       	out	0x3f, r0	; 63
    aa7c:	0f 90       	pop	r0
    aa7e:	1f 90       	pop	r1
    aa80:	18 95       	reti

0000aa82 <__vector_50>:
    aa82:	1f 92       	push	r1
    aa84:	0f 92       	push	r0
    aa86:	0f b6       	in	r0, 0x3f	; 63
    aa88:	0f 92       	push	r0
    aa8a:	08 b6       	in	r0, 0x38	; 56
    aa8c:	0f 92       	push	r0
    aa8e:	09 b6       	in	r0, 0x39	; 57
    aa90:	0f 92       	push	r0
    aa92:	0b b6       	in	r0, 0x3b	; 59
    aa94:	0f 92       	push	r0
    aa96:	11 24       	eor	r1, r1
    aa98:	2f 93       	push	r18
    aa9a:	3f 93       	push	r19
    aa9c:	4f 93       	push	r20
    aa9e:	5f 93       	push	r21
    aaa0:	6f 93       	push	r22
    aaa2:	7f 93       	push	r23
    aaa4:	8f 93       	push	r24
    aaa6:	9f 93       	push	r25
    aaa8:	af 93       	push	r26
    aaaa:	bf 93       	push	r27
    aaac:	ef 93       	push	r30
    aaae:	ff 93       	push	r31
    aab0:	85 e1       	ldi	r24, 0x15	; 21
    aab2:	0e 94 1c 51 	call	0xa238	; 0xa238 <findTimerIntElement>
    aab6:	00 97       	sbiw	r24, 0x00	; 0
    aab8:	41 f0       	breq	.+16     	; 0xaaca <__vector_50+0x48>
    aaba:	dc 01       	movw	r26, r24
    aabc:	11 96       	adiw	r26, 0x01	; 1
    aabe:	ed 91       	ld	r30, X+
    aac0:	fc 91       	ld	r31, X
    aac2:	12 97       	sbiw	r26, 0x02	; 2
    aac4:	30 97       	sbiw	r30, 0x00	; 0
    aac6:	09 f0       	breq	.+2      	; 0xaaca <__vector_50+0x48>
    aac8:	19 95       	eicall
    aaca:	ff 91       	pop	r31
    aacc:	ef 91       	pop	r30
    aace:	bf 91       	pop	r27
    aad0:	af 91       	pop	r26
    aad2:	9f 91       	pop	r25
    aad4:	8f 91       	pop	r24
    aad6:	7f 91       	pop	r23
    aad8:	6f 91       	pop	r22
    aada:	5f 91       	pop	r21
    aadc:	4f 91       	pop	r20
    aade:	3f 91       	pop	r19
    aae0:	2f 91       	pop	r18
    aae2:	0f 90       	pop	r0
    aae4:	0b be       	out	0x3b, r0	; 59
    aae6:	0f 90       	pop	r0
    aae8:	09 be       	out	0x39, r0	; 57
    aaea:	0f 90       	pop	r0
    aaec:	08 be       	out	0x38, r0	; 56
    aaee:	0f 90       	pop	r0
    aaf0:	0f be       	out	0x3f, r0	; 63
    aaf2:	0f 90       	pop	r0
    aaf4:	1f 90       	pop	r1
    aaf6:	18 95       	reti

0000aaf8 <__vector_51>:
    aaf8:	1f 92       	push	r1
    aafa:	0f 92       	push	r0
    aafc:	0f b6       	in	r0, 0x3f	; 63
    aafe:	0f 92       	push	r0
    ab00:	08 b6       	in	r0, 0x38	; 56
    ab02:	0f 92       	push	r0
    ab04:	09 b6       	in	r0, 0x39	; 57
    ab06:	0f 92       	push	r0
    ab08:	0b b6       	in	r0, 0x3b	; 59
    ab0a:	0f 92       	push	r0
    ab0c:	11 24       	eor	r1, r1
    ab0e:	2f 93       	push	r18
    ab10:	3f 93       	push	r19
    ab12:	4f 93       	push	r20
    ab14:	5f 93       	push	r21
    ab16:	6f 93       	push	r22
    ab18:	7f 93       	push	r23
    ab1a:	8f 93       	push	r24
    ab1c:	9f 93       	push	r25
    ab1e:	af 93       	push	r26
    ab20:	bf 93       	push	r27
    ab22:	ef 93       	push	r30
    ab24:	ff 93       	push	r31
    ab26:	86 e1       	ldi	r24, 0x16	; 22
    ab28:	0e 94 1c 51 	call	0xa238	; 0xa238 <findTimerIntElement>
    ab2c:	00 97       	sbiw	r24, 0x00	; 0
    ab2e:	41 f0       	breq	.+16     	; 0xab40 <__vector_51+0x48>
    ab30:	dc 01       	movw	r26, r24
    ab32:	11 96       	adiw	r26, 0x01	; 1
    ab34:	ed 91       	ld	r30, X+
    ab36:	fc 91       	ld	r31, X
    ab38:	12 97       	sbiw	r26, 0x02	; 2
    ab3a:	30 97       	sbiw	r30, 0x00	; 0
    ab3c:	09 f0       	breq	.+2      	; 0xab40 <__vector_51+0x48>
    ab3e:	19 95       	eicall
    ab40:	ff 91       	pop	r31
    ab42:	ef 91       	pop	r30
    ab44:	bf 91       	pop	r27
    ab46:	af 91       	pop	r26
    ab48:	9f 91       	pop	r25
    ab4a:	8f 91       	pop	r24
    ab4c:	7f 91       	pop	r23
    ab4e:	6f 91       	pop	r22
    ab50:	5f 91       	pop	r21
    ab52:	4f 91       	pop	r20
    ab54:	3f 91       	pop	r19
    ab56:	2f 91       	pop	r18
    ab58:	0f 90       	pop	r0
    ab5a:	0b be       	out	0x3b, r0	; 59
    ab5c:	0f 90       	pop	r0
    ab5e:	09 be       	out	0x39, r0	; 57
    ab60:	0f 90       	pop	r0
    ab62:	08 be       	out	0x38, r0	; 56
    ab64:	0f 90       	pop	r0
    ab66:	0f be       	out	0x3f, r0	; 63
    ab68:	0f 90       	pop	r0
    ab6a:	1f 90       	pop	r1
    ab6c:	18 95       	reti

0000ab6e <__vector_52>:
    ab6e:	1f 92       	push	r1
    ab70:	0f 92       	push	r0
    ab72:	0f b6       	in	r0, 0x3f	; 63
    ab74:	0f 92       	push	r0
    ab76:	08 b6       	in	r0, 0x38	; 56
    ab78:	0f 92       	push	r0
    ab7a:	09 b6       	in	r0, 0x39	; 57
    ab7c:	0f 92       	push	r0
    ab7e:	0b b6       	in	r0, 0x3b	; 59
    ab80:	0f 92       	push	r0
    ab82:	11 24       	eor	r1, r1
    ab84:	2f 93       	push	r18
    ab86:	3f 93       	push	r19
    ab88:	4f 93       	push	r20
    ab8a:	5f 93       	push	r21
    ab8c:	6f 93       	push	r22
    ab8e:	7f 93       	push	r23
    ab90:	8f 93       	push	r24
    ab92:	9f 93       	push	r25
    ab94:	af 93       	push	r26
    ab96:	bf 93       	push	r27
    ab98:	ef 93       	push	r30
    ab9a:	ff 93       	push	r31
    ab9c:	87 e1       	ldi	r24, 0x17	; 23
    ab9e:	0e 94 1c 51 	call	0xa238	; 0xa238 <findTimerIntElement>
    aba2:	00 97       	sbiw	r24, 0x00	; 0
    aba4:	41 f0       	breq	.+16     	; 0xabb6 <__vector_52+0x48>
    aba6:	dc 01       	movw	r26, r24
    aba8:	11 96       	adiw	r26, 0x01	; 1
    abaa:	ed 91       	ld	r30, X+
    abac:	fc 91       	ld	r31, X
    abae:	12 97       	sbiw	r26, 0x02	; 2
    abb0:	30 97       	sbiw	r30, 0x00	; 0
    abb2:	09 f0       	breq	.+2      	; 0xabb6 <__vector_52+0x48>
    abb4:	19 95       	eicall
    abb6:	ff 91       	pop	r31
    abb8:	ef 91       	pop	r30
    abba:	bf 91       	pop	r27
    abbc:	af 91       	pop	r26
    abbe:	9f 91       	pop	r25
    abc0:	8f 91       	pop	r24
    abc2:	7f 91       	pop	r23
    abc4:	6f 91       	pop	r22
    abc6:	5f 91       	pop	r21
    abc8:	4f 91       	pop	r20
    abca:	3f 91       	pop	r19
    abcc:	2f 91       	pop	r18
    abce:	0f 90       	pop	r0
    abd0:	0b be       	out	0x3b, r0	; 59
    abd2:	0f 90       	pop	r0
    abd4:	09 be       	out	0x39, r0	; 57
    abd6:	0f 90       	pop	r0
    abd8:	08 be       	out	0x38, r0	; 56
    abda:	0f 90       	pop	r0
    abdc:	0f be       	out	0x3f, r0	; 63
    abde:	0f 90       	pop	r0
    abe0:	1f 90       	pop	r1
    abe2:	18 95       	reti

0000abe4 <__vector_47>:
    abe4:	1f 92       	push	r1
    abe6:	0f 92       	push	r0
    abe8:	0f b6       	in	r0, 0x3f	; 63
    abea:	0f 92       	push	r0
    abec:	08 b6       	in	r0, 0x38	; 56
    abee:	0f 92       	push	r0
    abf0:	09 b6       	in	r0, 0x39	; 57
    abf2:	0f 92       	push	r0
    abf4:	0b b6       	in	r0, 0x3b	; 59
    abf6:	0f 92       	push	r0
    abf8:	11 24       	eor	r1, r1
    abfa:	2f 93       	push	r18
    abfc:	3f 93       	push	r19
    abfe:	4f 93       	push	r20
    ac00:	5f 93       	push	r21
    ac02:	6f 93       	push	r22
    ac04:	7f 93       	push	r23
    ac06:	8f 93       	push	r24
    ac08:	9f 93       	push	r25
    ac0a:	af 93       	push	r26
    ac0c:	bf 93       	push	r27
    ac0e:	ef 93       	push	r30
    ac10:	ff 93       	push	r31
    ac12:	88 e1       	ldi	r24, 0x18	; 24
    ac14:	0e 94 1c 51 	call	0xa238	; 0xa238 <findTimerIntElement>
    ac18:	00 97       	sbiw	r24, 0x00	; 0
    ac1a:	41 f0       	breq	.+16     	; 0xac2c <__vector_47+0x48>
    ac1c:	dc 01       	movw	r26, r24
    ac1e:	11 96       	adiw	r26, 0x01	; 1
    ac20:	ed 91       	ld	r30, X+
    ac22:	fc 91       	ld	r31, X
    ac24:	12 97       	sbiw	r26, 0x02	; 2
    ac26:	30 97       	sbiw	r30, 0x00	; 0
    ac28:	09 f0       	breq	.+2      	; 0xac2c <__vector_47+0x48>
    ac2a:	19 95       	eicall
    ac2c:	ff 91       	pop	r31
    ac2e:	ef 91       	pop	r30
    ac30:	bf 91       	pop	r27
    ac32:	af 91       	pop	r26
    ac34:	9f 91       	pop	r25
    ac36:	8f 91       	pop	r24
    ac38:	7f 91       	pop	r23
    ac3a:	6f 91       	pop	r22
    ac3c:	5f 91       	pop	r21
    ac3e:	4f 91       	pop	r20
    ac40:	3f 91       	pop	r19
    ac42:	2f 91       	pop	r18
    ac44:	0f 90       	pop	r0
    ac46:	0b be       	out	0x3b, r0	; 59
    ac48:	0f 90       	pop	r0
    ac4a:	09 be       	out	0x39, r0	; 57
    ac4c:	0f 90       	pop	r0
    ac4e:	08 be       	out	0x38, r0	; 56
    ac50:	0f 90       	pop	r0
    ac52:	0f be       	out	0x3f, r0	; 63
    ac54:	0f 90       	pop	r0
    ac56:	1f 90       	pop	r1
    ac58:	18 95       	reti

0000ac5a <__vector_55>:
    ac5a:	1f 92       	push	r1
    ac5c:	0f 92       	push	r0
    ac5e:	0f b6       	in	r0, 0x3f	; 63
    ac60:	0f 92       	push	r0
    ac62:	08 b6       	in	r0, 0x38	; 56
    ac64:	0f 92       	push	r0
    ac66:	09 b6       	in	r0, 0x39	; 57
    ac68:	0f 92       	push	r0
    ac6a:	0b b6       	in	r0, 0x3b	; 59
    ac6c:	0f 92       	push	r0
    ac6e:	11 24       	eor	r1, r1
    ac70:	2f 93       	push	r18
    ac72:	3f 93       	push	r19
    ac74:	4f 93       	push	r20
    ac76:	5f 93       	push	r21
    ac78:	6f 93       	push	r22
    ac7a:	7f 93       	push	r23
    ac7c:	8f 93       	push	r24
    ac7e:	9f 93       	push	r25
    ac80:	af 93       	push	r26
    ac82:	bf 93       	push	r27
    ac84:	ef 93       	push	r30
    ac86:	ff 93       	push	r31
    ac88:	89 e1       	ldi	r24, 0x19	; 25
    ac8a:	0e 94 1c 51 	call	0xa238	; 0xa238 <findTimerIntElement>
    ac8e:	00 97       	sbiw	r24, 0x00	; 0
    ac90:	41 f0       	breq	.+16     	; 0xaca2 <__vector_55+0x48>
    ac92:	dc 01       	movw	r26, r24
    ac94:	11 96       	adiw	r26, 0x01	; 1
    ac96:	ed 91       	ld	r30, X+
    ac98:	fc 91       	ld	r31, X
    ac9a:	12 97       	sbiw	r26, 0x02	; 2
    ac9c:	30 97       	sbiw	r30, 0x00	; 0
    ac9e:	09 f0       	breq	.+2      	; 0xaca2 <__vector_55+0x48>
    aca0:	19 95       	eicall
    aca2:	ff 91       	pop	r31
    aca4:	ef 91       	pop	r30
    aca6:	bf 91       	pop	r27
    aca8:	af 91       	pop	r26
    acaa:	9f 91       	pop	r25
    acac:	8f 91       	pop	r24
    acae:	7f 91       	pop	r23
    acb0:	6f 91       	pop	r22
    acb2:	5f 91       	pop	r21
    acb4:	4f 91       	pop	r20
    acb6:	3f 91       	pop	r19
    acb8:	2f 91       	pop	r18
    acba:	0f 90       	pop	r0
    acbc:	0b be       	out	0x3b, r0	; 59
    acbe:	0f 90       	pop	r0
    acc0:	09 be       	out	0x39, r0	; 57
    acc2:	0f 90       	pop	r0
    acc4:	08 be       	out	0x38, r0	; 56
    acc6:	0f 90       	pop	r0
    acc8:	0f be       	out	0x3f, r0	; 63
    acca:	0f 90       	pop	r0
    accc:	1f 90       	pop	r1
    acce:	18 95       	reti

0000acd0 <__vector_56>:
    acd0:	1f 92       	push	r1
    acd2:	0f 92       	push	r0
    acd4:	0f b6       	in	r0, 0x3f	; 63
    acd6:	0f 92       	push	r0
    acd8:	08 b6       	in	r0, 0x38	; 56
    acda:	0f 92       	push	r0
    acdc:	09 b6       	in	r0, 0x39	; 57
    acde:	0f 92       	push	r0
    ace0:	0b b6       	in	r0, 0x3b	; 59
    ace2:	0f 92       	push	r0
    ace4:	11 24       	eor	r1, r1
    ace6:	2f 93       	push	r18
    ace8:	3f 93       	push	r19
    acea:	4f 93       	push	r20
    acec:	5f 93       	push	r21
    acee:	6f 93       	push	r22
    acf0:	7f 93       	push	r23
    acf2:	8f 93       	push	r24
    acf4:	9f 93       	push	r25
    acf6:	af 93       	push	r26
    acf8:	bf 93       	push	r27
    acfa:	ef 93       	push	r30
    acfc:	ff 93       	push	r31
    acfe:	8a e1       	ldi	r24, 0x1A	; 26
    ad00:	0e 94 1c 51 	call	0xa238	; 0xa238 <findTimerIntElement>
    ad04:	00 97       	sbiw	r24, 0x00	; 0
    ad06:	41 f0       	breq	.+16     	; 0xad18 <__vector_56+0x48>
    ad08:	dc 01       	movw	r26, r24
    ad0a:	11 96       	adiw	r26, 0x01	; 1
    ad0c:	ed 91       	ld	r30, X+
    ad0e:	fc 91       	ld	r31, X
    ad10:	12 97       	sbiw	r26, 0x02	; 2
    ad12:	30 97       	sbiw	r30, 0x00	; 0
    ad14:	09 f0       	breq	.+2      	; 0xad18 <__vector_56+0x48>
    ad16:	19 95       	eicall
    ad18:	ff 91       	pop	r31
    ad1a:	ef 91       	pop	r30
    ad1c:	bf 91       	pop	r27
    ad1e:	af 91       	pop	r26
    ad20:	9f 91       	pop	r25
    ad22:	8f 91       	pop	r24
    ad24:	7f 91       	pop	r23
    ad26:	6f 91       	pop	r22
    ad28:	5f 91       	pop	r21
    ad2a:	4f 91       	pop	r20
    ad2c:	3f 91       	pop	r19
    ad2e:	2f 91       	pop	r18
    ad30:	0f 90       	pop	r0
    ad32:	0b be       	out	0x3b, r0	; 59
    ad34:	0f 90       	pop	r0
    ad36:	09 be       	out	0x39, r0	; 57
    ad38:	0f 90       	pop	r0
    ad3a:	08 be       	out	0x38, r0	; 56
    ad3c:	0f 90       	pop	r0
    ad3e:	0f be       	out	0x3f, r0	; 63
    ad40:	0f 90       	pop	r0
    ad42:	1f 90       	pop	r1
    ad44:	18 95       	reti

0000ad46 <__vector_53>:
    ad46:	1f 92       	push	r1
    ad48:	0f 92       	push	r0
    ad4a:	0f b6       	in	r0, 0x3f	; 63
    ad4c:	0f 92       	push	r0
    ad4e:	08 b6       	in	r0, 0x38	; 56
    ad50:	0f 92       	push	r0
    ad52:	09 b6       	in	r0, 0x39	; 57
    ad54:	0f 92       	push	r0
    ad56:	0b b6       	in	r0, 0x3b	; 59
    ad58:	0f 92       	push	r0
    ad5a:	11 24       	eor	r1, r1
    ad5c:	2f 93       	push	r18
    ad5e:	3f 93       	push	r19
    ad60:	4f 93       	push	r20
    ad62:	5f 93       	push	r21
    ad64:	6f 93       	push	r22
    ad66:	7f 93       	push	r23
    ad68:	8f 93       	push	r24
    ad6a:	9f 93       	push	r25
    ad6c:	af 93       	push	r26
    ad6e:	bf 93       	push	r27
    ad70:	ef 93       	push	r30
    ad72:	ff 93       	push	r31
    ad74:	8d e1       	ldi	r24, 0x1D	; 29
    ad76:	0e 94 1c 51 	call	0xa238	; 0xa238 <findTimerIntElement>
    ad7a:	00 97       	sbiw	r24, 0x00	; 0
    ad7c:	41 f0       	breq	.+16     	; 0xad8e <__vector_53+0x48>
    ad7e:	dc 01       	movw	r26, r24
    ad80:	11 96       	adiw	r26, 0x01	; 1
    ad82:	ed 91       	ld	r30, X+
    ad84:	fc 91       	ld	r31, X
    ad86:	12 97       	sbiw	r26, 0x02	; 2
    ad88:	30 97       	sbiw	r30, 0x00	; 0
    ad8a:	09 f0       	breq	.+2      	; 0xad8e <__vector_53+0x48>
    ad8c:	19 95       	eicall
    ad8e:	ff 91       	pop	r31
    ad90:	ef 91       	pop	r30
    ad92:	bf 91       	pop	r27
    ad94:	af 91       	pop	r26
    ad96:	9f 91       	pop	r25
    ad98:	8f 91       	pop	r24
    ad9a:	7f 91       	pop	r23
    ad9c:	6f 91       	pop	r22
    ad9e:	5f 91       	pop	r21
    ada0:	4f 91       	pop	r20
    ada2:	3f 91       	pop	r19
    ada4:	2f 91       	pop	r18
    ada6:	0f 90       	pop	r0
    ada8:	0b be       	out	0x3b, r0	; 59
    adaa:	0f 90       	pop	r0
    adac:	09 be       	out	0x39, r0	; 57
    adae:	0f 90       	pop	r0
    adb0:	08 be       	out	0x38, r0	; 56
    adb2:	0f 90       	pop	r0
    adb4:	0f be       	out	0x3f, r0	; 63
    adb6:	0f 90       	pop	r0
    adb8:	1f 90       	pop	r1
    adba:	18 95       	reti

0000adbc <__vector_110>:
    adbc:	1f 92       	push	r1
    adbe:	0f 92       	push	r0
    adc0:	0f b6       	in	r0, 0x3f	; 63
    adc2:	0f 92       	push	r0
    adc4:	08 b6       	in	r0, 0x38	; 56
    adc6:	0f 92       	push	r0
    adc8:	09 b6       	in	r0, 0x39	; 57
    adca:	0f 92       	push	r0
    adcc:	0b b6       	in	r0, 0x3b	; 59
    adce:	0f 92       	push	r0
    add0:	11 24       	eor	r1, r1
    add2:	2f 93       	push	r18
    add4:	3f 93       	push	r19
    add6:	4f 93       	push	r20
    add8:	5f 93       	push	r21
    adda:	6f 93       	push	r22
    addc:	7f 93       	push	r23
    adde:	8f 93       	push	r24
    ade0:	9f 93       	push	r25
    ade2:	af 93       	push	r26
    ade4:	bf 93       	push	r27
    ade6:	ef 93       	push	r30
    ade8:	ff 93       	push	r31
    adea:	8e e1       	ldi	r24, 0x1E	; 30
    adec:	0e 94 1c 51 	call	0xa238	; 0xa238 <findTimerIntElement>
    adf0:	00 97       	sbiw	r24, 0x00	; 0
    adf2:	41 f0       	breq	.+16     	; 0xae04 <__vector_110+0x48>
    adf4:	dc 01       	movw	r26, r24
    adf6:	11 96       	adiw	r26, 0x01	; 1
    adf8:	ed 91       	ld	r30, X+
    adfa:	fc 91       	ld	r31, X
    adfc:	12 97       	sbiw	r26, 0x02	; 2
    adfe:	30 97       	sbiw	r30, 0x00	; 0
    ae00:	09 f0       	breq	.+2      	; 0xae04 <__vector_110+0x48>
    ae02:	19 95       	eicall
    ae04:	ff 91       	pop	r31
    ae06:	ef 91       	pop	r30
    ae08:	bf 91       	pop	r27
    ae0a:	af 91       	pop	r26
    ae0c:	9f 91       	pop	r25
    ae0e:	8f 91       	pop	r24
    ae10:	7f 91       	pop	r23
    ae12:	6f 91       	pop	r22
    ae14:	5f 91       	pop	r21
    ae16:	4f 91       	pop	r20
    ae18:	3f 91       	pop	r19
    ae1a:	2f 91       	pop	r18
    ae1c:	0f 90       	pop	r0
    ae1e:	0b be       	out	0x3b, r0	; 59
    ae20:	0f 90       	pop	r0
    ae22:	09 be       	out	0x39, r0	; 57
    ae24:	0f 90       	pop	r0
    ae26:	08 be       	out	0x38, r0	; 56
    ae28:	0f 90       	pop	r0
    ae2a:	0f be       	out	0x3f, r0	; 63
    ae2c:	0f 90       	pop	r0
    ae2e:	1f 90       	pop	r1
    ae30:	18 95       	reti

0000ae32 <__vector_111>:
    ae32:	1f 92       	push	r1
    ae34:	0f 92       	push	r0
    ae36:	0f b6       	in	r0, 0x3f	; 63
    ae38:	0f 92       	push	r0
    ae3a:	08 b6       	in	r0, 0x38	; 56
    ae3c:	0f 92       	push	r0
    ae3e:	09 b6       	in	r0, 0x39	; 57
    ae40:	0f 92       	push	r0
    ae42:	0b b6       	in	r0, 0x3b	; 59
    ae44:	0f 92       	push	r0
    ae46:	11 24       	eor	r1, r1
    ae48:	2f 93       	push	r18
    ae4a:	3f 93       	push	r19
    ae4c:	4f 93       	push	r20
    ae4e:	5f 93       	push	r21
    ae50:	6f 93       	push	r22
    ae52:	7f 93       	push	r23
    ae54:	8f 93       	push	r24
    ae56:	9f 93       	push	r25
    ae58:	af 93       	push	r26
    ae5a:	bf 93       	push	r27
    ae5c:	ef 93       	push	r30
    ae5e:	ff 93       	push	r31
    ae60:	8f e1       	ldi	r24, 0x1F	; 31
    ae62:	0e 94 1c 51 	call	0xa238	; 0xa238 <findTimerIntElement>
    ae66:	00 97       	sbiw	r24, 0x00	; 0
    ae68:	41 f0       	breq	.+16     	; 0xae7a <__vector_111+0x48>
    ae6a:	dc 01       	movw	r26, r24
    ae6c:	11 96       	adiw	r26, 0x01	; 1
    ae6e:	ed 91       	ld	r30, X+
    ae70:	fc 91       	ld	r31, X
    ae72:	12 97       	sbiw	r26, 0x02	; 2
    ae74:	30 97       	sbiw	r30, 0x00	; 0
    ae76:	09 f0       	breq	.+2      	; 0xae7a <__vector_111+0x48>
    ae78:	19 95       	eicall
    ae7a:	ff 91       	pop	r31
    ae7c:	ef 91       	pop	r30
    ae7e:	bf 91       	pop	r27
    ae80:	af 91       	pop	r26
    ae82:	9f 91       	pop	r25
    ae84:	8f 91       	pop	r24
    ae86:	7f 91       	pop	r23
    ae88:	6f 91       	pop	r22
    ae8a:	5f 91       	pop	r21
    ae8c:	4f 91       	pop	r20
    ae8e:	3f 91       	pop	r19
    ae90:	2f 91       	pop	r18
    ae92:	0f 90       	pop	r0
    ae94:	0b be       	out	0x3b, r0	; 59
    ae96:	0f 90       	pop	r0
    ae98:	09 be       	out	0x39, r0	; 57
    ae9a:	0f 90       	pop	r0
    ae9c:	08 be       	out	0x38, r0	; 56
    ae9e:	0f 90       	pop	r0
    aea0:	0f be       	out	0x3f, r0	; 63
    aea2:	0f 90       	pop	r0
    aea4:	1f 90       	pop	r1
    aea6:	18 95       	reti

0000aea8 <__vector_112>:
    aea8:	1f 92       	push	r1
    aeaa:	0f 92       	push	r0
    aeac:	0f b6       	in	r0, 0x3f	; 63
    aeae:	0f 92       	push	r0
    aeb0:	08 b6       	in	r0, 0x38	; 56
    aeb2:	0f 92       	push	r0
    aeb4:	09 b6       	in	r0, 0x39	; 57
    aeb6:	0f 92       	push	r0
    aeb8:	0b b6       	in	r0, 0x3b	; 59
    aeba:	0f 92       	push	r0
    aebc:	11 24       	eor	r1, r1
    aebe:	2f 93       	push	r18
    aec0:	3f 93       	push	r19
    aec2:	4f 93       	push	r20
    aec4:	5f 93       	push	r21
    aec6:	6f 93       	push	r22
    aec8:	7f 93       	push	r23
    aeca:	8f 93       	push	r24
    aecc:	9f 93       	push	r25
    aece:	af 93       	push	r26
    aed0:	bf 93       	push	r27
    aed2:	ef 93       	push	r30
    aed4:	ff 93       	push	r31
    aed6:	80 e2       	ldi	r24, 0x20	; 32
    aed8:	0e 94 1c 51 	call	0xa238	; 0xa238 <findTimerIntElement>
    aedc:	00 97       	sbiw	r24, 0x00	; 0
    aede:	41 f0       	breq	.+16     	; 0xaef0 <__vector_112+0x48>
    aee0:	dc 01       	movw	r26, r24
    aee2:	11 96       	adiw	r26, 0x01	; 1
    aee4:	ed 91       	ld	r30, X+
    aee6:	fc 91       	ld	r31, X
    aee8:	12 97       	sbiw	r26, 0x02	; 2
    aeea:	30 97       	sbiw	r30, 0x00	; 0
    aeec:	09 f0       	breq	.+2      	; 0xaef0 <__vector_112+0x48>
    aeee:	19 95       	eicall
    aef0:	ff 91       	pop	r31
    aef2:	ef 91       	pop	r30
    aef4:	bf 91       	pop	r27
    aef6:	af 91       	pop	r26
    aef8:	9f 91       	pop	r25
    aefa:	8f 91       	pop	r24
    aefc:	7f 91       	pop	r23
    aefe:	6f 91       	pop	r22
    af00:	5f 91       	pop	r21
    af02:	4f 91       	pop	r20
    af04:	3f 91       	pop	r19
    af06:	2f 91       	pop	r18
    af08:	0f 90       	pop	r0
    af0a:	0b be       	out	0x3b, r0	; 59
    af0c:	0f 90       	pop	r0
    af0e:	09 be       	out	0x39, r0	; 57
    af10:	0f 90       	pop	r0
    af12:	08 be       	out	0x38, r0	; 56
    af14:	0f 90       	pop	r0
    af16:	0f be       	out	0x3f, r0	; 63
    af18:	0f 90       	pop	r0
    af1a:	1f 90       	pop	r1
    af1c:	18 95       	reti

0000af1e <__vector_113>:
    af1e:	1f 92       	push	r1
    af20:	0f 92       	push	r0
    af22:	0f b6       	in	r0, 0x3f	; 63
    af24:	0f 92       	push	r0
    af26:	08 b6       	in	r0, 0x38	; 56
    af28:	0f 92       	push	r0
    af2a:	09 b6       	in	r0, 0x39	; 57
    af2c:	0f 92       	push	r0
    af2e:	0b b6       	in	r0, 0x3b	; 59
    af30:	0f 92       	push	r0
    af32:	11 24       	eor	r1, r1
    af34:	2f 93       	push	r18
    af36:	3f 93       	push	r19
    af38:	4f 93       	push	r20
    af3a:	5f 93       	push	r21
    af3c:	6f 93       	push	r22
    af3e:	7f 93       	push	r23
    af40:	8f 93       	push	r24
    af42:	9f 93       	push	r25
    af44:	af 93       	push	r26
    af46:	bf 93       	push	r27
    af48:	ef 93       	push	r30
    af4a:	ff 93       	push	r31
    af4c:	81 e2       	ldi	r24, 0x21	; 33
    af4e:	0e 94 1c 51 	call	0xa238	; 0xa238 <findTimerIntElement>
    af52:	00 97       	sbiw	r24, 0x00	; 0
    af54:	41 f0       	breq	.+16     	; 0xaf66 <__vector_113+0x48>
    af56:	dc 01       	movw	r26, r24
    af58:	11 96       	adiw	r26, 0x01	; 1
    af5a:	ed 91       	ld	r30, X+
    af5c:	fc 91       	ld	r31, X
    af5e:	12 97       	sbiw	r26, 0x02	; 2
    af60:	30 97       	sbiw	r30, 0x00	; 0
    af62:	09 f0       	breq	.+2      	; 0xaf66 <__vector_113+0x48>
    af64:	19 95       	eicall
    af66:	ff 91       	pop	r31
    af68:	ef 91       	pop	r30
    af6a:	bf 91       	pop	r27
    af6c:	af 91       	pop	r26
    af6e:	9f 91       	pop	r25
    af70:	8f 91       	pop	r24
    af72:	7f 91       	pop	r23
    af74:	6f 91       	pop	r22
    af76:	5f 91       	pop	r21
    af78:	4f 91       	pop	r20
    af7a:	3f 91       	pop	r19
    af7c:	2f 91       	pop	r18
    af7e:	0f 90       	pop	r0
    af80:	0b be       	out	0x3b, r0	; 59
    af82:	0f 90       	pop	r0
    af84:	09 be       	out	0x39, r0	; 57
    af86:	0f 90       	pop	r0
    af88:	08 be       	out	0x38, r0	; 56
    af8a:	0f 90       	pop	r0
    af8c:	0f be       	out	0x3f, r0	; 63
    af8e:	0f 90       	pop	r0
    af90:	1f 90       	pop	r1
    af92:	18 95       	reti

0000af94 <__vector_108>:
    af94:	1f 92       	push	r1
    af96:	0f 92       	push	r0
    af98:	0f b6       	in	r0, 0x3f	; 63
    af9a:	0f 92       	push	r0
    af9c:	08 b6       	in	r0, 0x38	; 56
    af9e:	0f 92       	push	r0
    afa0:	09 b6       	in	r0, 0x39	; 57
    afa2:	0f 92       	push	r0
    afa4:	0b b6       	in	r0, 0x3b	; 59
    afa6:	0f 92       	push	r0
    afa8:	11 24       	eor	r1, r1
    afaa:	2f 93       	push	r18
    afac:	3f 93       	push	r19
    afae:	4f 93       	push	r20
    afb0:	5f 93       	push	r21
    afb2:	6f 93       	push	r22
    afb4:	7f 93       	push	r23
    afb6:	8f 93       	push	r24
    afb8:	9f 93       	push	r25
    afba:	af 93       	push	r26
    afbc:	bf 93       	push	r27
    afbe:	ef 93       	push	r30
    afc0:	ff 93       	push	r31
    afc2:	82 e2       	ldi	r24, 0x22	; 34
    afc4:	0e 94 1c 51 	call	0xa238	; 0xa238 <findTimerIntElement>
    afc8:	00 97       	sbiw	r24, 0x00	; 0
    afca:	41 f0       	breq	.+16     	; 0xafdc <__vector_108+0x48>
    afcc:	dc 01       	movw	r26, r24
    afce:	11 96       	adiw	r26, 0x01	; 1
    afd0:	ed 91       	ld	r30, X+
    afd2:	fc 91       	ld	r31, X
    afd4:	12 97       	sbiw	r26, 0x02	; 2
    afd6:	30 97       	sbiw	r30, 0x00	; 0
    afd8:	09 f0       	breq	.+2      	; 0xafdc <__vector_108+0x48>
    afda:	19 95       	eicall
    afdc:	ff 91       	pop	r31
    afde:	ef 91       	pop	r30
    afe0:	bf 91       	pop	r27
    afe2:	af 91       	pop	r26
    afe4:	9f 91       	pop	r25
    afe6:	8f 91       	pop	r24
    afe8:	7f 91       	pop	r23
    afea:	6f 91       	pop	r22
    afec:	5f 91       	pop	r21
    afee:	4f 91       	pop	r20
    aff0:	3f 91       	pop	r19
    aff2:	2f 91       	pop	r18
    aff4:	0f 90       	pop	r0
    aff6:	0b be       	out	0x3b, r0	; 59
    aff8:	0f 90       	pop	r0
    affa:	09 be       	out	0x39, r0	; 57
    affc:	0f 90       	pop	r0
    affe:	08 be       	out	0x38, r0	; 56
    b000:	0f 90       	pop	r0
    b002:	0f be       	out	0x3f, r0	; 63
    b004:	0f 90       	pop	r0
    b006:	1f 90       	pop	r1
    b008:	18 95       	reti

0000b00a <__vector_116>:
    b00a:	1f 92       	push	r1
    b00c:	0f 92       	push	r0
    b00e:	0f b6       	in	r0, 0x3f	; 63
    b010:	0f 92       	push	r0
    b012:	08 b6       	in	r0, 0x38	; 56
    b014:	0f 92       	push	r0
    b016:	09 b6       	in	r0, 0x39	; 57
    b018:	0f 92       	push	r0
    b01a:	0b b6       	in	r0, 0x3b	; 59
    b01c:	0f 92       	push	r0
    b01e:	11 24       	eor	r1, r1
    b020:	2f 93       	push	r18
    b022:	3f 93       	push	r19
    b024:	4f 93       	push	r20
    b026:	5f 93       	push	r21
    b028:	6f 93       	push	r22
    b02a:	7f 93       	push	r23
    b02c:	8f 93       	push	r24
    b02e:	9f 93       	push	r25
    b030:	af 93       	push	r26
    b032:	bf 93       	push	r27
    b034:	ef 93       	push	r30
    b036:	ff 93       	push	r31
    b038:	83 e2       	ldi	r24, 0x23	; 35
    b03a:	0e 94 1c 51 	call	0xa238	; 0xa238 <findTimerIntElement>
    b03e:	00 97       	sbiw	r24, 0x00	; 0
    b040:	41 f0       	breq	.+16     	; 0xb052 <__vector_116+0x48>
    b042:	dc 01       	movw	r26, r24
    b044:	11 96       	adiw	r26, 0x01	; 1
    b046:	ed 91       	ld	r30, X+
    b048:	fc 91       	ld	r31, X
    b04a:	12 97       	sbiw	r26, 0x02	; 2
    b04c:	30 97       	sbiw	r30, 0x00	; 0
    b04e:	09 f0       	breq	.+2      	; 0xb052 <__vector_116+0x48>
    b050:	19 95       	eicall
    b052:	ff 91       	pop	r31
    b054:	ef 91       	pop	r30
    b056:	bf 91       	pop	r27
    b058:	af 91       	pop	r26
    b05a:	9f 91       	pop	r25
    b05c:	8f 91       	pop	r24
    b05e:	7f 91       	pop	r23
    b060:	6f 91       	pop	r22
    b062:	5f 91       	pop	r21
    b064:	4f 91       	pop	r20
    b066:	3f 91       	pop	r19
    b068:	2f 91       	pop	r18
    b06a:	0f 90       	pop	r0
    b06c:	0b be       	out	0x3b, r0	; 59
    b06e:	0f 90       	pop	r0
    b070:	09 be       	out	0x39, r0	; 57
    b072:	0f 90       	pop	r0
    b074:	08 be       	out	0x38, r0	; 56
    b076:	0f 90       	pop	r0
    b078:	0f be       	out	0x3f, r0	; 63
    b07a:	0f 90       	pop	r0
    b07c:	1f 90       	pop	r1
    b07e:	18 95       	reti

0000b080 <__vector_117>:
    b080:	1f 92       	push	r1
    b082:	0f 92       	push	r0
    b084:	0f b6       	in	r0, 0x3f	; 63
    b086:	0f 92       	push	r0
    b088:	08 b6       	in	r0, 0x38	; 56
    b08a:	0f 92       	push	r0
    b08c:	09 b6       	in	r0, 0x39	; 57
    b08e:	0f 92       	push	r0
    b090:	0b b6       	in	r0, 0x3b	; 59
    b092:	0f 92       	push	r0
    b094:	11 24       	eor	r1, r1
    b096:	2f 93       	push	r18
    b098:	3f 93       	push	r19
    b09a:	4f 93       	push	r20
    b09c:	5f 93       	push	r21
    b09e:	6f 93       	push	r22
    b0a0:	7f 93       	push	r23
    b0a2:	8f 93       	push	r24
    b0a4:	9f 93       	push	r25
    b0a6:	af 93       	push	r26
    b0a8:	bf 93       	push	r27
    b0aa:	ef 93       	push	r30
    b0ac:	ff 93       	push	r31
    b0ae:	84 e2       	ldi	r24, 0x24	; 36
    b0b0:	0e 94 1c 51 	call	0xa238	; 0xa238 <findTimerIntElement>
    b0b4:	00 97       	sbiw	r24, 0x00	; 0
    b0b6:	41 f0       	breq	.+16     	; 0xb0c8 <__vector_117+0x48>
    b0b8:	dc 01       	movw	r26, r24
    b0ba:	11 96       	adiw	r26, 0x01	; 1
    b0bc:	ed 91       	ld	r30, X+
    b0be:	fc 91       	ld	r31, X
    b0c0:	12 97       	sbiw	r26, 0x02	; 2
    b0c2:	30 97       	sbiw	r30, 0x00	; 0
    b0c4:	09 f0       	breq	.+2      	; 0xb0c8 <__vector_117+0x48>
    b0c6:	19 95       	eicall
    b0c8:	ff 91       	pop	r31
    b0ca:	ef 91       	pop	r30
    b0cc:	bf 91       	pop	r27
    b0ce:	af 91       	pop	r26
    b0d0:	9f 91       	pop	r25
    b0d2:	8f 91       	pop	r24
    b0d4:	7f 91       	pop	r23
    b0d6:	6f 91       	pop	r22
    b0d8:	5f 91       	pop	r21
    b0da:	4f 91       	pop	r20
    b0dc:	3f 91       	pop	r19
    b0de:	2f 91       	pop	r18
    b0e0:	0f 90       	pop	r0
    b0e2:	0b be       	out	0x3b, r0	; 59
    b0e4:	0f 90       	pop	r0
    b0e6:	09 be       	out	0x39, r0	; 57
    b0e8:	0f 90       	pop	r0
    b0ea:	08 be       	out	0x38, r0	; 56
    b0ec:	0f 90       	pop	r0
    b0ee:	0f be       	out	0x3f, r0	; 63
    b0f0:	0f 90       	pop	r0
    b0f2:	1f 90       	pop	r1
    b0f4:	18 95       	reti

0000b0f6 <__vector_114>:
    b0f6:	1f 92       	push	r1
    b0f8:	0f 92       	push	r0
    b0fa:	0f b6       	in	r0, 0x3f	; 63
    b0fc:	0f 92       	push	r0
    b0fe:	08 b6       	in	r0, 0x38	; 56
    b100:	0f 92       	push	r0
    b102:	09 b6       	in	r0, 0x39	; 57
    b104:	0f 92       	push	r0
    b106:	0b b6       	in	r0, 0x3b	; 59
    b108:	0f 92       	push	r0
    b10a:	11 24       	eor	r1, r1
    b10c:	2f 93       	push	r18
    b10e:	3f 93       	push	r19
    b110:	4f 93       	push	r20
    b112:	5f 93       	push	r21
    b114:	6f 93       	push	r22
    b116:	7f 93       	push	r23
    b118:	8f 93       	push	r24
    b11a:	9f 93       	push	r25
    b11c:	af 93       	push	r26
    b11e:	bf 93       	push	r27
    b120:	ef 93       	push	r30
    b122:	ff 93       	push	r31
    b124:	87 e2       	ldi	r24, 0x27	; 39
    b126:	0e 94 1c 51 	call	0xa238	; 0xa238 <findTimerIntElement>
    b12a:	00 97       	sbiw	r24, 0x00	; 0
    b12c:	41 f0       	breq	.+16     	; 0xb13e <__vector_114+0x48>
    b12e:	dc 01       	movw	r26, r24
    b130:	11 96       	adiw	r26, 0x01	; 1
    b132:	ed 91       	ld	r30, X+
    b134:	fc 91       	ld	r31, X
    b136:	12 97       	sbiw	r26, 0x02	; 2
    b138:	30 97       	sbiw	r30, 0x00	; 0
    b13a:	09 f0       	breq	.+2      	; 0xb13e <__vector_114+0x48>
    b13c:	19 95       	eicall
    b13e:	ff 91       	pop	r31
    b140:	ef 91       	pop	r30
    b142:	bf 91       	pop	r27
    b144:	af 91       	pop	r26
    b146:	9f 91       	pop	r25
    b148:	8f 91       	pop	r24
    b14a:	7f 91       	pop	r23
    b14c:	6f 91       	pop	r22
    b14e:	5f 91       	pop	r21
    b150:	4f 91       	pop	r20
    b152:	3f 91       	pop	r19
    b154:	2f 91       	pop	r18
    b156:	0f 90       	pop	r0
    b158:	0b be       	out	0x3b, r0	; 59
    b15a:	0f 90       	pop	r0
    b15c:	09 be       	out	0x39, r0	; 57
    b15e:	0f 90       	pop	r0
    b160:	08 be       	out	0x38, r0	; 56
    b162:	0f 90       	pop	r0
    b164:	0f be       	out	0x3f, r0	; 63
    b166:	0f 90       	pop	r0
    b168:	1f 90       	pop	r1
    b16a:	18 95       	reti

0000b16c <hal_requestTimerInterrupt>:
    b16c:	cf 92       	push	r12
    b16e:	df 92       	push	r13
    b170:	ef 92       	push	r14
    b172:	ff 92       	push	r15
    b174:	0f 93       	push	r16
    b176:	1f 93       	push	r17
    b178:	cf 93       	push	r28
    b17a:	df 93       	push	r29
    b17c:	cd b7       	in	r28, 0x3d	; 61
    b17e:	de b7       	in	r29, 0x3e	; 62
    b180:	27 97       	sbiw	r28, 0x07	; 7
    b182:	cd bf       	out	0x3d, r28	; 61
    b184:	de bf       	out	0x3e, r29	; 62
    b186:	8e 83       	std	Y+6, r24	; 0x06
    b188:	9f 83       	std	Y+7, r25	; 0x07
    b18a:	06 2f       	mov	r16, r22
    b18c:	6a 01       	movw	r12, r20
    b18e:	8f b7       	in	r24, 0x3f	; 63
    b190:	89 83       	std	Y+1, r24	; 0x01
    b192:	f8 94       	cli
    b194:	ee 81       	ldd	r30, Y+6	; 0x06
    b196:	ff 81       	ldd	r31, Y+7	; 0x07
    b198:	80 91 17 24 	lds	r24, 0x2417
    b19c:	90 91 18 24 	lds	r25, 0x2418
    b1a0:	24 81       	ldd	r18, Z+4	; 0x04
    b1a2:	35 81       	ldd	r19, Z+5	; 0x05
    b1a4:	28 17       	cp	r18, r24
    b1a6:	39 07       	cpc	r19, r25
    b1a8:	21 f0       	breq	.+8      	; 0xb1b2 <hal_requestTimerInterrupt+0x46>
    b1aa:	89 81       	ldd	r24, Y+1	; 0x01
    b1ac:	8f bf       	out	0x3f, r24	; 63
    b1ae:	8b ef       	ldi	r24, 0xFB	; 251
    b1b0:	a5 c0       	rjmp	.+330    	; 0xb2fc <hal_requestTimerInterrupt+0x190>
    b1b2:	ee 81       	ldd	r30, Y+6	; 0x06
    b1b4:	ff 81       	ldd	r31, Y+7	; 0x07
    b1b6:	e0 80       	ld	r14, Z
    b1b8:	f1 80       	ldd	r15, Z+1	; 0x01
    b1ba:	d7 01       	movw	r26, r14
    b1bc:	1c 91       	ld	r17, X
    b1be:	16 0f       	add	r17, r22
    b1c0:	81 2f       	mov	r24, r17
    b1c2:	87 50       	subi	r24, 0x07	; 7
    b1c4:	82 30       	cpi	r24, 0x02	; 2
    b1c6:	70 f0       	brcs	.+28     	; 0xb1e4 <hal_requestTimerInterrupt+0x78>
    b1c8:	11 31       	cpi	r17, 0x11	; 17
    b1ca:	61 f0       	breq	.+24     	; 0xb1e4 <hal_requestTimerInterrupt+0x78>
    b1cc:	12 31       	cpi	r17, 0x12	; 18
    b1ce:	51 f0       	breq	.+20     	; 0xb1e4 <hal_requestTimerInterrupt+0x78>
    b1d0:	1b 31       	cpi	r17, 0x1B	; 27
    b1d2:	41 f0       	breq	.+16     	; 0xb1e4 <hal_requestTimerInterrupt+0x78>
    b1d4:	1c 31       	cpi	r17, 0x1C	; 28
    b1d6:	31 f0       	breq	.+12     	; 0xb1e4 <hal_requestTimerInterrupt+0x78>
    b1d8:	15 32       	cpi	r17, 0x25	; 37
    b1da:	21 f0       	breq	.+8      	; 0xb1e4 <hal_requestTimerInterrupt+0x78>
    b1dc:	16 32       	cpi	r17, 0x26	; 38
    b1de:	11 f0       	breq	.+4      	; 0xb1e4 <hal_requestTimerInterrupt+0x78>
    b1e0:	18 32       	cpi	r17, 0x28	; 40
    b1e2:	20 f0       	brcs	.+8      	; 0xb1ec <hal_requestTimerInterrupt+0x80>
    b1e4:	89 81       	ldd	r24, Y+1	; 0x01
    b1e6:	8f bf       	out	0x3f, r24	; 63
    b1e8:	8a ef       	ldi	r24, 0xFA	; 250
    b1ea:	88 c0       	rjmp	.+272    	; 0xb2fc <hal_requestTimerInterrupt+0x190>
    b1ec:	81 2f       	mov	r24, r17
    b1ee:	0e 94 1c 51 	call	0xa238	; 0xa238 <findTimerIntElement>
    b1f2:	00 97       	sbiw	r24, 0x00	; 0
    b1f4:	09 f0       	breq	.+2      	; 0xb1f8 <hal_requestTimerInterrupt+0x8c>
    b1f6:	7b c0       	rjmp	.+246    	; 0xb2ee <hal_requestTimerInterrupt+0x182>
    b1f8:	83 e0       	ldi	r24, 0x03	; 3
    b1fa:	90 e0       	ldi	r25, 0x00	; 0
    b1fc:	0e 94 5e 8b 	call	0x116bc	; 0x116bc <utl_createLink>
    b200:	8a 83       	std	Y+2, r24	; 0x02
    b202:	9b 83       	std	Y+3, r25	; 0x03
    b204:	8a 81       	ldd	r24, Y+2	; 0x02
    b206:	9b 81       	ldd	r25, Y+3	; 0x03
    b208:	97 fd       	sbrc	r25, 7
    b20a:	0c c0       	rjmp	.+24     	; 0xb224 <hal_requestTimerInterrupt+0xb8>
    b20c:	80 91 09 24 	lds	r24, 0x2409
    b210:	90 91 0a 24 	lds	r25, 0x240A
    b214:	6a 81       	ldd	r22, Y+2	; 0x02
    b216:	7b 81       	ldd	r23, Y+3	; 0x03
    b218:	41 e0       	ldi	r20, 0x01	; 1
    b21a:	0e 94 6e 89 	call	0x112dc	; 0x112dc <utl_insertLink>
    b21e:	8a 81       	ldd	r24, Y+2	; 0x02
    b220:	9b 81       	ldd	r25, Y+3	; 0x03
    b222:	02 c0       	rjmp	.+4      	; 0xb228 <hal_requestTimerInterrupt+0xbc>
    b224:	8f ef       	ldi	r24, 0xFF	; 255
    b226:	9f ef       	ldi	r25, 0xFF	; 255
    b228:	8c 83       	std	Y+4, r24	; 0x04
    b22a:	9d 83       	std	Y+5, r25	; 0x05
    b22c:	8c 81       	ldd	r24, Y+4	; 0x04
    b22e:	9d 81       	ldd	r25, Y+5	; 0x05
    b230:	97 ff       	sbrs	r25, 7
    b232:	04 c0       	rjmp	.+8      	; 0xb23c <hal_requestTimerInterrupt+0xd0>
    b234:	89 81       	ldd	r24, Y+1	; 0x01
    b236:	8f bf       	out	0x3f, r24	; 63
    b238:	8f ef       	ldi	r24, 0xFF	; 255
    b23a:	60 c0       	rjmp	.+192    	; 0xb2fc <hal_requestTimerInterrupt+0x190>
    b23c:	ec 81       	ldd	r30, Y+4	; 0x04
    b23e:	fd 81       	ldd	r31, Y+5	; 0x05
    b240:	01 90       	ld	r0, Z+
    b242:	f0 81       	ld	r31, Z
    b244:	e0 2d       	mov	r30, r0
    b246:	10 83       	st	Z, r17
    b248:	c1 82       	std	Z+1, r12	; 0x01
    b24a:	d2 82       	std	Z+2, r13	; 0x02
    b24c:	f7 01       	movw	r30, r14
    b24e:	82 81       	ldd	r24, Z+2	; 0x02
    b250:	8f 5f       	subi	r24, 0xFF	; 255
    b252:	82 83       	std	Z+2, r24	; 0x02
    b254:	04 30       	cpi	r16, 0x04	; 4
    b256:	71 f4       	brne	.+28     	; 0xb274 <hal_requestTimerInterrupt+0x108>
    b258:	04 80       	ldd	r0, Z+4	; 0x04
    b25a:	f5 81       	ldd	r31, Z+5	; 0x05
    b25c:	e0 2d       	mov	r30, r0
    b25e:	30 97       	sbiw	r30, 0x00	; 0
    b260:	29 f4       	brne	.+10     	; 0xb26c <hal_requestTimerInterrupt+0x100>
    b262:	d7 01       	movw	r26, r14
    b264:	16 96       	adiw	r26, 0x06	; 6
    b266:	ed 91       	ld	r30, X+
    b268:	fc 91       	ld	r31, X
    b26a:	17 97       	sbiw	r26, 0x07	; 7
    b26c:	86 81       	ldd	r24, Z+6	; 0x06
    b26e:	83 60       	ori	r24, 0x03	; 3
    b270:	86 83       	std	Z+6, r24	; 0x06
    b272:	41 c0       	rjmp	.+130    	; 0xb2f6 <hal_requestTimerInterrupt+0x18a>
    b274:	00 23       	and	r16, r16
    b276:	69 f4       	brne	.+26     	; 0xb292 <hal_requestTimerInterrupt+0x126>
    b278:	04 80       	ldd	r0, Z+4	; 0x04
    b27a:	f5 81       	ldd	r31, Z+5	; 0x05
    b27c:	e0 2d       	mov	r30, r0
    b27e:	30 97       	sbiw	r30, 0x00	; 0
    b280:	29 f4       	brne	.+10     	; 0xb28c <hal_requestTimerInterrupt+0x120>
    b282:	d7 01       	movw	r26, r14
    b284:	16 96       	adiw	r26, 0x06	; 6
    b286:	ed 91       	ld	r30, X+
    b288:	fc 91       	ld	r31, X
    b28a:	17 97       	sbiw	r26, 0x07	; 7
    b28c:	87 81       	ldd	r24, Z+7	; 0x07
    b28e:	83 60       	ori	r24, 0x03	; 3
    b290:	0e c0       	rjmp	.+28     	; 0xb2ae <hal_requestTimerInterrupt+0x142>
    b292:	01 30       	cpi	r16, 0x01	; 1
    b294:	71 f4       	brne	.+28     	; 0xb2b2 <hal_requestTimerInterrupt+0x146>
    b296:	04 80       	ldd	r0, Z+4	; 0x04
    b298:	f5 81       	ldd	r31, Z+5	; 0x05
    b29a:	e0 2d       	mov	r30, r0
    b29c:	30 97       	sbiw	r30, 0x00	; 0
    b29e:	29 f4       	brne	.+10     	; 0xb2aa <hal_requestTimerInterrupt+0x13e>
    b2a0:	d7 01       	movw	r26, r14
    b2a2:	16 96       	adiw	r26, 0x06	; 6
    b2a4:	ed 91       	ld	r30, X+
    b2a6:	fc 91       	ld	r31, X
    b2a8:	17 97       	sbiw	r26, 0x07	; 7
    b2aa:	87 81       	ldd	r24, Z+7	; 0x07
    b2ac:	8c 60       	ori	r24, 0x0C	; 12
    b2ae:	87 83       	std	Z+7, r24	; 0x07
    b2b0:	22 c0       	rjmp	.+68     	; 0xb2f6 <hal_requestTimerInterrupt+0x18a>
    b2b2:	02 30       	cpi	r16, 0x02	; 2
    b2b4:	69 f4       	brne	.+26     	; 0xb2d0 <hal_requestTimerInterrupt+0x164>
    b2b6:	04 80       	ldd	r0, Z+4	; 0x04
    b2b8:	f5 81       	ldd	r31, Z+5	; 0x05
    b2ba:	e0 2d       	mov	r30, r0
    b2bc:	30 97       	sbiw	r30, 0x00	; 0
    b2be:	29 f4       	brne	.+10     	; 0xb2ca <hal_requestTimerInterrupt+0x15e>
    b2c0:	d7 01       	movw	r26, r14
    b2c2:	16 96       	adiw	r26, 0x06	; 6
    b2c4:	ed 91       	ld	r30, X+
    b2c6:	fc 91       	ld	r31, X
    b2c8:	17 97       	sbiw	r26, 0x07	; 7
    b2ca:	87 81       	ldd	r24, Z+7	; 0x07
    b2cc:	80 63       	ori	r24, 0x30	; 48
    b2ce:	ef cf       	rjmp	.-34     	; 0xb2ae <hal_requestTimerInterrupt+0x142>
    b2d0:	03 30       	cpi	r16, 0x03	; 3
    b2d2:	89 f4       	brne	.+34     	; 0xb2f6 <hal_requestTimerInterrupt+0x18a>
    b2d4:	04 80       	ldd	r0, Z+4	; 0x04
    b2d6:	f5 81       	ldd	r31, Z+5	; 0x05
    b2d8:	e0 2d       	mov	r30, r0
    b2da:	30 97       	sbiw	r30, 0x00	; 0
    b2dc:	29 f4       	brne	.+10     	; 0xb2e8 <hal_requestTimerInterrupt+0x17c>
    b2de:	d7 01       	movw	r26, r14
    b2e0:	16 96       	adiw	r26, 0x06	; 6
    b2e2:	ed 91       	ld	r30, X+
    b2e4:	fc 91       	ld	r31, X
    b2e6:	17 97       	sbiw	r26, 0x07	; 7
    b2e8:	87 81       	ldd	r24, Z+7	; 0x07
    b2ea:	80 6c       	ori	r24, 0xC0	; 192
    b2ec:	e0 cf       	rjmp	.-64     	; 0xb2ae <hal_requestTimerInterrupt+0x142>
    b2ee:	89 81       	ldd	r24, Y+1	; 0x01
    b2f0:	8f bf       	out	0x3f, r24	; 63
    b2f2:	89 ef       	ldi	r24, 0xF9	; 249
    b2f4:	03 c0       	rjmp	.+6      	; 0xb2fc <hal_requestTimerInterrupt+0x190>
    b2f6:	89 81       	ldd	r24, Y+1	; 0x01
    b2f8:	8f bf       	out	0x3f, r24	; 63
    b2fa:	80 e0       	ldi	r24, 0x00	; 0
    b2fc:	27 96       	adiw	r28, 0x07	; 7
    b2fe:	cd bf       	out	0x3d, r28	; 61
    b300:	de bf       	out	0x3e, r29	; 62
    b302:	df 91       	pop	r29
    b304:	cf 91       	pop	r28
    b306:	1f 91       	pop	r17
    b308:	0f 91       	pop	r16
    b30a:	ff 90       	pop	r15
    b30c:	ef 90       	pop	r14
    b30e:	df 90       	pop	r13
    b310:	cf 90       	pop	r12
    b312:	08 95       	ret

0000b314 <hal_releaseTimerInterrupt>:
    b314:	cf 93       	push	r28
    b316:	df 93       	push	r29
    b318:	00 d0       	rcall	.+0      	; 0xb31a <hal_releaseTimerInterrupt+0x6>
    b31a:	cd b7       	in	r28, 0x3d	; 61
    b31c:	de b7       	in	r29, 0x3e	; 62
    b31e:	8a 83       	std	Y+2, r24	; 0x02
    b320:	9b 83       	std	Y+3, r25	; 0x03
    b322:	8f b7       	in	r24, 0x3f	; 63
    b324:	89 83       	std	Y+1, r24	; 0x01
    b326:	f8 94       	cli
    b328:	ea 81       	ldd	r30, Y+2	; 0x02
    b32a:	fb 81       	ldd	r31, Y+3	; 0x03
    b32c:	80 91 17 24 	lds	r24, 0x2417
    b330:	90 91 18 24 	lds	r25, 0x2418
    b334:	24 81       	ldd	r18, Z+4	; 0x04
    b336:	35 81       	ldd	r19, Z+5	; 0x05
    b338:	28 17       	cp	r18, r24
    b33a:	39 07       	cpc	r19, r25
    b33c:	21 f0       	breq	.+8      	; 0xb346 <hal_releaseTimerInterrupt+0x32>
    b33e:	89 81       	ldd	r24, Y+1	; 0x01
    b340:	8f bf       	out	0x3f, r24	; 63
    b342:	8b ef       	ldi	r24, 0xFB	; 251
    b344:	b7 c0       	rjmp	.+366    	; 0xb4b4 <hal_releaseTimerInterrupt+0x1a0>
    b346:	ea 81       	ldd	r30, Y+2	; 0x02
    b348:	fb 81       	ldd	r31, Y+3	; 0x03
    b34a:	01 90       	ld	r0, Z+
    b34c:	f0 81       	ld	r31, Z
    b34e:	e0 2d       	mov	r30, r0
    b350:	80 81       	ld	r24, Z
    b352:	86 0f       	add	r24, r22
    b354:	98 2f       	mov	r25, r24
    b356:	97 50       	subi	r25, 0x07	; 7
    b358:	92 30       	cpi	r25, 0x02	; 2
    b35a:	70 f0       	brcs	.+28     	; 0xb378 <hal_releaseTimerInterrupt+0x64>
    b35c:	81 31       	cpi	r24, 0x11	; 17
    b35e:	61 f0       	breq	.+24     	; 0xb378 <hal_releaseTimerInterrupt+0x64>
    b360:	82 31       	cpi	r24, 0x12	; 18
    b362:	51 f0       	breq	.+20     	; 0xb378 <hal_releaseTimerInterrupt+0x64>
    b364:	8b 31       	cpi	r24, 0x1B	; 27
    b366:	41 f0       	breq	.+16     	; 0xb378 <hal_releaseTimerInterrupt+0x64>
    b368:	8c 31       	cpi	r24, 0x1C	; 28
    b36a:	31 f0       	breq	.+12     	; 0xb378 <hal_releaseTimerInterrupt+0x64>
    b36c:	85 32       	cpi	r24, 0x25	; 37
    b36e:	21 f0       	breq	.+8      	; 0xb378 <hal_releaseTimerInterrupt+0x64>
    b370:	86 32       	cpi	r24, 0x26	; 38
    b372:	11 f0       	breq	.+4      	; 0xb378 <hal_releaseTimerInterrupt+0x64>
    b374:	88 32       	cpi	r24, 0x28	; 40
    b376:	20 f0       	brcs	.+8      	; 0xb380 <hal_releaseTimerInterrupt+0x6c>
    b378:	89 81       	ldd	r24, Y+1	; 0x01
    b37a:	8f bf       	out	0x3f, r24	; 63
    b37c:	8a ef       	ldi	r24, 0xFA	; 250
    b37e:	9a c0       	rjmp	.+308    	; 0xb4b4 <hal_releaseTimerInterrupt+0x1a0>
    b380:	a0 91 09 24 	lds	r26, 0x2409
    b384:	b0 91 0a 24 	lds	r27, 0x240A
    b388:	12 96       	adiw	r26, 0x02	; 2
    b38a:	4d 91       	ld	r20, X+
    b38c:	5c 91       	ld	r21, X
    b38e:	13 97       	sbiw	r26, 0x03	; 3
    b390:	a0 91 09 24 	lds	r26, 0x2409
    b394:	b0 91 0a 24 	lds	r27, 0x240A
    b398:	7e c0       	rjmp	.+252    	; 0xb496 <hal_releaseTimerInterrupt+0x182>
    b39a:	a0 91 d5 27 	lds	r26, 0x27D5
    b39e:	b0 91 d6 27 	lds	r27, 0x27D6
    b3a2:	0d 90       	ld	r0, X+
    b3a4:	bc 91       	ld	r27, X
    b3a6:	a0 2d       	mov	r26, r0
    b3a8:	9c 91       	ld	r25, X
    b3aa:	98 17       	cp	r25, r24
    b3ac:	09 f0       	breq	.+2      	; 0xb3b0 <hal_releaseTimerInterrupt+0x9c>
    b3ae:	6d c0       	rjmp	.+218    	; 0xb48a <hal_releaseTimerInterrupt+0x176>
    b3b0:	82 81       	ldd	r24, Z+2	; 0x02
    b3b2:	81 50       	subi	r24, 0x01	; 1
    b3b4:	82 83       	std	Z+2, r24	; 0x02
    b3b6:	64 30       	cpi	r22, 0x04	; 4
    b3b8:	99 f4       	brne	.+38     	; 0xb3e0 <hal_releaseTimerInterrupt+0xcc>
    b3ba:	a4 81       	ldd	r26, Z+4	; 0x04
    b3bc:	b5 81       	ldd	r27, Z+5	; 0x05
    b3be:	10 97       	sbiw	r26, 0x00	; 0
    b3c0:	41 f0       	breq	.+16     	; 0xb3d2 <hal_releaseTimerInterrupt+0xbe>
    b3c2:	16 96       	adiw	r26, 0x06	; 6
    b3c4:	8c 91       	ld	r24, X
    b3c6:	16 97       	sbiw	r26, 0x06	; 6
    b3c8:	8c 7f       	andi	r24, 0xFC	; 252
    b3ca:	16 96       	adiw	r26, 0x06	; 6
    b3cc:	8c 93       	st	X, r24
    b3ce:	16 97       	sbiw	r26, 0x06	; 6
    b3d0:	4e c0       	rjmp	.+156    	; 0xb46e <hal_releaseTimerInterrupt+0x15a>
    b3d2:	06 80       	ldd	r0, Z+6	; 0x06
    b3d4:	f7 81       	ldd	r31, Z+7	; 0x07
    b3d6:	e0 2d       	mov	r30, r0
    b3d8:	86 81       	ldd	r24, Z+6	; 0x06
    b3da:	8c 7f       	andi	r24, 0xFC	; 252
    b3dc:	86 83       	std	Z+6, r24	; 0x06
    b3de:	47 c0       	rjmp	.+142    	; 0xb46e <hal_releaseTimerInterrupt+0x15a>
    b3e0:	66 23       	and	r22, r22
    b3e2:	79 f4       	brne	.+30     	; 0xb402 <hal_releaseTimerInterrupt+0xee>
    b3e4:	a4 81       	ldd	r26, Z+4	; 0x04
    b3e6:	b5 81       	ldd	r27, Z+5	; 0x05
    b3e8:	10 97       	sbiw	r26, 0x00	; 0
    b3ea:	29 f0       	breq	.+10     	; 0xb3f6 <hal_releaseTimerInterrupt+0xe2>
    b3ec:	17 96       	adiw	r26, 0x07	; 7
    b3ee:	8c 91       	ld	r24, X
    b3f0:	17 97       	sbiw	r26, 0x07	; 7
    b3f2:	8c 7f       	andi	r24, 0xFC	; 252
    b3f4:	10 c0       	rjmp	.+32     	; 0xb416 <hal_releaseTimerInterrupt+0x102>
    b3f6:	06 80       	ldd	r0, Z+6	; 0x06
    b3f8:	f7 81       	ldd	r31, Z+7	; 0x07
    b3fa:	e0 2d       	mov	r30, r0
    b3fc:	87 81       	ldd	r24, Z+7	; 0x07
    b3fe:	8c 7f       	andi	r24, 0xFC	; 252
    b400:	35 c0       	rjmp	.+106    	; 0xb46c <hal_releaseTimerInterrupt+0x158>
    b402:	61 30       	cpi	r22, 0x01	; 1
    b404:	91 f4       	brne	.+36     	; 0xb42a <hal_releaseTimerInterrupt+0x116>
    b406:	a4 81       	ldd	r26, Z+4	; 0x04
    b408:	b5 81       	ldd	r27, Z+5	; 0x05
    b40a:	10 97       	sbiw	r26, 0x00	; 0
    b40c:	41 f0       	breq	.+16     	; 0xb41e <hal_releaseTimerInterrupt+0x10a>
    b40e:	17 96       	adiw	r26, 0x07	; 7
    b410:	8c 91       	ld	r24, X
    b412:	17 97       	sbiw	r26, 0x07	; 7
    b414:	83 7f       	andi	r24, 0xF3	; 243
    b416:	17 96       	adiw	r26, 0x07	; 7
    b418:	8c 93       	st	X, r24
    b41a:	17 97       	sbiw	r26, 0x07	; 7
    b41c:	28 c0       	rjmp	.+80     	; 0xb46e <hal_releaseTimerInterrupt+0x15a>
    b41e:	06 80       	ldd	r0, Z+6	; 0x06
    b420:	f7 81       	ldd	r31, Z+7	; 0x07
    b422:	e0 2d       	mov	r30, r0
    b424:	87 81       	ldd	r24, Z+7	; 0x07
    b426:	83 7f       	andi	r24, 0xF3	; 243
    b428:	21 c0       	rjmp	.+66     	; 0xb46c <hal_releaseTimerInterrupt+0x158>
    b42a:	62 30       	cpi	r22, 0x02	; 2
    b42c:	79 f4       	brne	.+30     	; 0xb44c <hal_releaseTimerInterrupt+0x138>
    b42e:	a4 81       	ldd	r26, Z+4	; 0x04
    b430:	b5 81       	ldd	r27, Z+5	; 0x05
    b432:	10 97       	sbiw	r26, 0x00	; 0
    b434:	29 f0       	breq	.+10     	; 0xb440 <hal_releaseTimerInterrupt+0x12c>
    b436:	17 96       	adiw	r26, 0x07	; 7
    b438:	8c 91       	ld	r24, X
    b43a:	17 97       	sbiw	r26, 0x07	; 7
    b43c:	8f 7c       	andi	r24, 0xCF	; 207
    b43e:	eb cf       	rjmp	.-42     	; 0xb416 <hal_releaseTimerInterrupt+0x102>
    b440:	06 80       	ldd	r0, Z+6	; 0x06
    b442:	f7 81       	ldd	r31, Z+7	; 0x07
    b444:	e0 2d       	mov	r30, r0
    b446:	87 81       	ldd	r24, Z+7	; 0x07
    b448:	8f 7c       	andi	r24, 0xCF	; 207
    b44a:	10 c0       	rjmp	.+32     	; 0xb46c <hal_releaseTimerInterrupt+0x158>
    b44c:	63 30       	cpi	r22, 0x03	; 3
    b44e:	79 f4       	brne	.+30     	; 0xb46e <hal_releaseTimerInterrupt+0x15a>
    b450:	a4 81       	ldd	r26, Z+4	; 0x04
    b452:	b5 81       	ldd	r27, Z+5	; 0x05
    b454:	10 97       	sbiw	r26, 0x00	; 0
    b456:	29 f0       	breq	.+10     	; 0xb462 <hal_releaseTimerInterrupt+0x14e>
    b458:	17 96       	adiw	r26, 0x07	; 7
    b45a:	8c 91       	ld	r24, X
    b45c:	17 97       	sbiw	r26, 0x07	; 7
    b45e:	8f 73       	andi	r24, 0x3F	; 63
    b460:	da cf       	rjmp	.-76     	; 0xb416 <hal_releaseTimerInterrupt+0x102>
    b462:	06 80       	ldd	r0, Z+6	; 0x06
    b464:	f7 81       	ldd	r31, Z+7	; 0x07
    b466:	e0 2d       	mov	r30, r0
    b468:	87 81       	ldd	r24, Z+7	; 0x07
    b46a:	8f 73       	andi	r24, 0x3F	; 63
    b46c:	87 83       	std	Z+7, r24	; 0x07
    b46e:	80 91 09 24 	lds	r24, 0x2409
    b472:	90 91 0a 24 	lds	r25, 0x240A
    b476:	60 91 d5 27 	lds	r22, 0x27D5
    b47a:	70 91 d6 27 	lds	r23, 0x27D6
    b47e:	0e 94 6a 8a 	call	0x114d4	; 0x114d4 <utl_destroyLink>
    b482:	89 81       	ldd	r24, Y+1	; 0x01
    b484:	8f bf       	out	0x3f, r24	; 63
    b486:	80 e0       	ldi	r24, 0x00	; 0
    b488:	15 c0       	rjmp	.+42     	; 0xb4b4 <hal_releaseTimerInterrupt+0x1a0>
    b48a:	41 50       	subi	r20, 0x01	; 1
    b48c:	50 40       	sbci	r21, 0x00	; 0
    b48e:	a0 91 d5 27 	lds	r26, 0x27D5
    b492:	b0 91 d6 27 	lds	r27, 0x27D6
    b496:	18 96       	adiw	r26, 0x08	; 8
    b498:	2d 91       	ld	r18, X+
    b49a:	3c 91       	ld	r19, X
    b49c:	19 97       	sbiw	r26, 0x09	; 9
    b49e:	20 93 d5 27 	sts	0x27D5, r18
    b4a2:	30 93 d6 27 	sts	0x27D6, r19
    b4a6:	14 16       	cp	r1, r20
    b4a8:	15 06       	cpc	r1, r21
    b4aa:	0c f4       	brge	.+2      	; 0xb4ae <hal_releaseTimerInterrupt+0x19a>
    b4ac:	76 cf       	rjmp	.-276    	; 0xb39a <hal_releaseTimerInterrupt+0x86>
    b4ae:	89 81       	ldd	r24, Y+1	; 0x01
    b4b0:	8f bf       	out	0x3f, r24	; 63
    b4b2:	88 ef       	ldi	r24, 0xF8	; 248
    b4b4:	23 96       	adiw	r28, 0x03	; 3
    b4b6:	cd bf       	out	0x3d, r28	; 61
    b4b8:	de bf       	out	0x3e, r29	; 62
    b4ba:	df 91       	pop	r29
    b4bc:	cf 91       	pop	r28
    b4be:	08 95       	ret

0000b4c0 <hal_requestTimer>:
    b4c0:	1f 93       	push	r17
    b4c2:	cf 93       	push	r28
    b4c4:	df 93       	push	r29
    b4c6:	cd b7       	in	r28, 0x3d	; 61
    b4c8:	de b7       	in	r29, 0x3e	; 62
    b4ca:	25 97       	sbiw	r28, 0x05	; 5
    b4cc:	cd bf       	out	0x3d, r28	; 61
    b4ce:	de bf       	out	0x3e, r29	; 62
    b4d0:	18 2f       	mov	r17, r24
    b4d2:	8f b7       	in	r24, 0x3f	; 63
    b4d4:	89 83       	std	Y+1, r24	; 0x01
    b4d6:	f8 94       	cli
    b4d8:	14 32       	cpi	r17, 0x24	; 36
    b4da:	28 f0       	brcs	.+10     	; 0xb4e6 <hal_requestTimer+0x26>
    b4dc:	89 81       	ldd	r24, Y+1	; 0x01
    b4de:	8f bf       	out	0x3f, r24	; 63
    b4e0:	8c ef       	ldi	r24, 0xFC	; 252
    b4e2:	9f ef       	ldi	r25, 0xFF	; 255
    b4e4:	93 c0       	rjmp	.+294    	; 0xb60c <hal_requestTimer+0x14c>
    b4e6:	e0 91 17 24 	lds	r30, 0x2417
    b4ea:	f0 91 18 24 	lds	r31, 0x2418
    b4ee:	82 81       	ldd	r24, Z+2	; 0x02
    b4f0:	93 81       	ldd	r25, Z+3	; 0x03
    b4f2:	e0 91 17 24 	lds	r30, 0x2417
    b4f6:	f0 91 18 24 	lds	r31, 0x2418
    b4fa:	0b c0       	rjmp	.+22     	; 0xb512 <hal_requestTimer+0x52>
    b4fc:	ea 81       	ldd	r30, Y+2	; 0x02
    b4fe:	fb 81       	ldd	r31, Y+3	; 0x03
    b500:	01 90       	ld	r0, Z+
    b502:	f0 81       	ld	r31, Z
    b504:	e0 2d       	mov	r30, r0
    b506:	20 81       	ld	r18, Z
    b508:	21 17       	cp	r18, r17
    b50a:	59 f0       	breq	.+22     	; 0xb522 <hal_requestTimer+0x62>
    b50c:	01 97       	sbiw	r24, 0x01	; 1
    b50e:	ea 81       	ldd	r30, Y+2	; 0x02
    b510:	fb 81       	ldd	r31, Y+3	; 0x03
    b512:	20 85       	ldd	r18, Z+8	; 0x08
    b514:	31 85       	ldd	r19, Z+9	; 0x09
    b516:	2a 83       	std	Y+2, r18	; 0x02
    b518:	3b 83       	std	Y+3, r19	; 0x03
    b51a:	18 16       	cp	r1, r24
    b51c:	19 06       	cpc	r1, r25
    b51e:	74 f3       	brlt	.-36     	; 0xb4fc <hal_requestTimer+0x3c>
    b520:	03 c0       	rjmp	.+6      	; 0xb528 <hal_requestTimer+0x68>
    b522:	30 97       	sbiw	r30, 0x00	; 0
    b524:	09 f0       	breq	.+2      	; 0xb528 <hal_requestTimer+0x68>
    b526:	69 c0       	rjmp	.+210    	; 0xb5fa <hal_requestTimer+0x13a>
    b528:	88 e0       	ldi	r24, 0x08	; 8
    b52a:	90 e0       	ldi	r25, 0x00	; 0
    b52c:	0e 94 5e 8b 	call	0x116bc	; 0x116bc <utl_createLink>
    b530:	8a 83       	std	Y+2, r24	; 0x02
    b532:	9b 83       	std	Y+3, r25	; 0x03
    b534:	8a 81       	ldd	r24, Y+2	; 0x02
    b536:	9b 81       	ldd	r25, Y+3	; 0x03
    b538:	97 fd       	sbrc	r25, 7
    b53a:	0c c0       	rjmp	.+24     	; 0xb554 <hal_requestTimer+0x94>
    b53c:	80 91 17 24 	lds	r24, 0x2417
    b540:	90 91 18 24 	lds	r25, 0x2418
    b544:	6a 81       	ldd	r22, Y+2	; 0x02
    b546:	7b 81       	ldd	r23, Y+3	; 0x03
    b548:	41 e0       	ldi	r20, 0x01	; 1
    b54a:	0e 94 6e 89 	call	0x112dc	; 0x112dc <utl_insertLink>
    b54e:	8a 81       	ldd	r24, Y+2	; 0x02
    b550:	9b 81       	ldd	r25, Y+3	; 0x03
    b552:	02 c0       	rjmp	.+4      	; 0xb558 <hal_requestTimer+0x98>
    b554:	8f ef       	ldi	r24, 0xFF	; 255
    b556:	9f ef       	ldi	r25, 0xFF	; 255
    b558:	8c 83       	std	Y+4, r24	; 0x04
    b55a:	9d 83       	std	Y+5, r25	; 0x05
    b55c:	8c 81       	ldd	r24, Y+4	; 0x04
    b55e:	9d 81       	ldd	r25, Y+5	; 0x05
    b560:	97 ff       	sbrs	r25, 7
    b562:	05 c0       	rjmp	.+10     	; 0xb56e <hal_requestTimer+0xae>
    b564:	89 81       	ldd	r24, Y+1	; 0x01
    b566:	8f bf       	out	0x3f, r24	; 63
    b568:	8f ef       	ldi	r24, 0xFF	; 255
    b56a:	9f ef       	ldi	r25, 0xFF	; 255
    b56c:	4f c0       	rjmp	.+158    	; 0xb60c <hal_requestTimer+0x14c>
    b56e:	ec 81       	ldd	r30, Y+4	; 0x04
    b570:	fd 81       	ldd	r31, Y+5	; 0x05
    b572:	01 90       	ld	r0, Z+
    b574:	f0 81       	ld	r31, Z
    b576:	e0 2d       	mov	r30, r0
    b578:	11 82       	std	Z+1, r1	; 0x01
    b57a:	10 83       	st	Z, r17
    b57c:	13 82       	std	Z+3, r1	; 0x03
    b57e:	12 82       	std	Z+2, r1	; 0x02
    b580:	1f 30       	cpi	r17, 0x0F	; 15
    b582:	01 f1       	breq	.+64     	; 0xb5c4 <hal_requestTimer+0x104>
    b584:	10 31       	cpi	r17, 0x10	; 16
    b586:	38 f4       	brcc	.+14     	; 0xb596 <hal_requestTimer+0xd6>
    b588:	15 30       	cpi	r17, 0x05	; 5
    b58a:	a1 f0       	breq	.+40     	; 0xb5b4 <hal_requestTimer+0xf4>
    b58c:	1a 30       	cpi	r17, 0x0A	; 10
    b58e:	b9 f0       	breq	.+46     	; 0xb5be <hal_requestTimer+0xfe>
    b590:	11 23       	and	r17, r17
    b592:	69 f0       	breq	.+26     	; 0xb5ae <hal_requestTimer+0xee>
    b594:	37 c0       	rjmp	.+110    	; 0xb604 <hal_requestTimer+0x144>
    b596:	19 31       	cpi	r17, 0x19	; 25
    b598:	e9 f0       	breq	.+58     	; 0xb5d4 <hal_requestTimer+0x114>
    b59a:	1a 31       	cpi	r17, 0x1A	; 26
    b59c:	18 f4       	brcc	.+6      	; 0xb5a4 <hal_requestTimer+0xe4>
    b59e:	14 31       	cpi	r17, 0x14	; 20
    b5a0:	89 f5       	brne	.+98     	; 0xb604 <hal_requestTimer+0x144>
    b5a2:	15 c0       	rjmp	.+42     	; 0xb5ce <hal_requestTimer+0x10e>
    b5a4:	1e 31       	cpi	r17, 0x1E	; 30
    b5a6:	d9 f0       	breq	.+54     	; 0xb5de <hal_requestTimer+0x11e>
    b5a8:	13 32       	cpi	r17, 0x23	; 35
    b5aa:	61 f5       	brne	.+88     	; 0xb604 <hal_requestTimer+0x144>
    b5ac:	1f c0       	rjmp	.+62     	; 0xb5ec <hal_requestTimer+0x12c>
    b5ae:	80 e0       	ldi	r24, 0x00	; 0
    b5b0:	98 e0       	ldi	r25, 0x08	; 8
    b5b2:	17 c0       	rjmp	.+46     	; 0xb5e2 <hal_requestTimer+0x122>
    b5b4:	14 82       	std	Z+4, r1	; 0x04
    b5b6:	15 82       	std	Z+5, r1	; 0x05
    b5b8:	80 e4       	ldi	r24, 0x40	; 64
    b5ba:	98 e0       	ldi	r25, 0x08	; 8
    b5bc:	1b c0       	rjmp	.+54     	; 0xb5f4 <hal_requestTimer+0x134>
    b5be:	80 e0       	ldi	r24, 0x00	; 0
    b5c0:	99 e0       	ldi	r25, 0x09	; 9
    b5c2:	0f c0       	rjmp	.+30     	; 0xb5e2 <hal_requestTimer+0x122>
    b5c4:	14 82       	std	Z+4, r1	; 0x04
    b5c6:	15 82       	std	Z+5, r1	; 0x05
    b5c8:	80 e4       	ldi	r24, 0x40	; 64
    b5ca:	99 e0       	ldi	r25, 0x09	; 9
    b5cc:	13 c0       	rjmp	.+38     	; 0xb5f4 <hal_requestTimer+0x134>
    b5ce:	80 e0       	ldi	r24, 0x00	; 0
    b5d0:	9a e0       	ldi	r25, 0x0A	; 10
    b5d2:	07 c0       	rjmp	.+14     	; 0xb5e2 <hal_requestTimer+0x122>
    b5d4:	14 82       	std	Z+4, r1	; 0x04
    b5d6:	15 82       	std	Z+5, r1	; 0x05
    b5d8:	80 e4       	ldi	r24, 0x40	; 64
    b5da:	9a e0       	ldi	r25, 0x0A	; 10
    b5dc:	0b c0       	rjmp	.+22     	; 0xb5f4 <hal_requestTimer+0x134>
    b5de:	80 e0       	ldi	r24, 0x00	; 0
    b5e0:	9b e0       	ldi	r25, 0x0B	; 11
    b5e2:	84 83       	std	Z+4, r24	; 0x04
    b5e4:	95 83       	std	Z+5, r25	; 0x05
    b5e6:	16 82       	std	Z+6, r1	; 0x06
    b5e8:	17 82       	std	Z+7, r1	; 0x07
    b5ea:	0c c0       	rjmp	.+24     	; 0xb604 <hal_requestTimer+0x144>
    b5ec:	14 82       	std	Z+4, r1	; 0x04
    b5ee:	15 82       	std	Z+5, r1	; 0x05
    b5f0:	80 e4       	ldi	r24, 0x40	; 64
    b5f2:	9b e0       	ldi	r25, 0x0B	; 11
    b5f4:	86 83       	std	Z+6, r24	; 0x06
    b5f6:	97 83       	std	Z+7, r25	; 0x07
    b5f8:	05 c0       	rjmp	.+10     	; 0xb604 <hal_requestTimer+0x144>
    b5fa:	89 81       	ldd	r24, Y+1	; 0x01
    b5fc:	8f bf       	out	0x3f, r24	; 63
    b5fe:	87 ef       	ldi	r24, 0xF7	; 247
    b600:	9f ef       	ldi	r25, 0xFF	; 255
    b602:	04 c0       	rjmp	.+8      	; 0xb60c <hal_requestTimer+0x14c>
    b604:	89 81       	ldd	r24, Y+1	; 0x01
    b606:	8f bf       	out	0x3f, r24	; 63
    b608:	8c 81       	ldd	r24, Y+4	; 0x04
    b60a:	9d 81       	ldd	r25, Y+5	; 0x05
    b60c:	25 96       	adiw	r28, 0x05	; 5
    b60e:	cd bf       	out	0x3d, r28	; 61
    b610:	de bf       	out	0x3e, r29	; 62
    b612:	df 91       	pop	r29
    b614:	cf 91       	pop	r28
    b616:	1f 91       	pop	r17
    b618:	08 95       	ret

0000b61a <hal_releaseTimer>:
    b61a:	af 92       	push	r10
    b61c:	bf 92       	push	r11
    b61e:	cf 92       	push	r12
    b620:	df 92       	push	r13
    b622:	ff 92       	push	r15
    b624:	0f 93       	push	r16
    b626:	1f 93       	push	r17
    b628:	cf 93       	push	r28
    b62a:	df 93       	push	r29
    b62c:	00 d0       	rcall	.+0      	; 0xb62e <hal_releaseTimer+0x14>
    b62e:	0f 92       	push	r0
    b630:	cd b7       	in	r28, 0x3d	; 61
    b632:	de b7       	in	r29, 0x3e	; 62
    b634:	8a 83       	std	Y+2, r24	; 0x02
    b636:	9b 83       	std	Y+3, r25	; 0x03
    b638:	8f b7       	in	r24, 0x3f	; 63
    b63a:	89 83       	std	Y+1, r24	; 0x01
    b63c:	f8 94       	cli
    b63e:	ea 81       	ldd	r30, Y+2	; 0x02
    b640:	fb 81       	ldd	r31, Y+3	; 0x03
    b642:	80 91 17 24 	lds	r24, 0x2417
    b646:	90 91 18 24 	lds	r25, 0x2418
    b64a:	24 81       	ldd	r18, Z+4	; 0x04
    b64c:	35 81       	ldd	r19, Z+5	; 0x05
    b64e:	28 17       	cp	r18, r24
    b650:	39 07       	cpc	r19, r25
    b652:	21 f0       	breq	.+8      	; 0xb65c <hal_releaseTimer+0x42>
    b654:	89 81       	ldd	r24, Y+1	; 0x01
    b656:	8f bf       	out	0x3f, r24	; 63
    b658:	8b ef       	ldi	r24, 0xFB	; 251
    b65a:	ce c0       	rjmp	.+412    	; 0xb7f8 <hal_releaseTimer+0x1de>
    b65c:	ea 81       	ldd	r30, Y+2	; 0x02
    b65e:	fb 81       	ldd	r31, Y+3	; 0x03
    b660:	00 81       	ld	r16, Z
    b662:	11 81       	ldd	r17, Z+1	; 0x01
    b664:	85 e0       	ldi	r24, 0x05	; 5
    b666:	a8 2e       	mov	r10, r24
    b668:	b1 2c       	mov	r11, r1
    b66a:	20 e0       	ldi	r18, 0x00	; 0
    b66c:	d8 01       	movw	r26, r16
    b66e:	fc 90       	ld	r15, X
    b670:	f2 0e       	add	r15, r18
    b672:	e0 91 09 24 	lds	r30, 0x2409
    b676:	f0 91 0a 24 	lds	r31, 0x240A
    b67a:	c2 80       	ldd	r12, Z+2	; 0x02
    b67c:	d3 80       	ldd	r13, Z+3	; 0x03
    b67e:	e0 91 09 24 	lds	r30, 0x2409
    b682:	f0 91 0a 24 	lds	r31, 0x240A
    b686:	71 c0       	rjmp	.+226    	; 0xb76a <hal_releaseTimer+0x150>
    b688:	e0 91 d9 27 	lds	r30, 0x27D9
    b68c:	f0 91 da 27 	lds	r31, 0x27DA
    b690:	a0 81       	ld	r26, Z
    b692:	b1 81       	ldd	r27, Z+1	; 0x01
    b694:	e0 91 d9 27 	lds	r30, 0x27D9
    b698:	f0 91 da 27 	lds	r31, 0x27DA
    b69c:	82 85       	ldd	r24, Z+10	; 0x0a
    b69e:	93 85       	ldd	r25, Z+11	; 0x0b
    b6a0:	80 93 d7 27 	sts	0x27D7, r24
    b6a4:	90 93 d8 27 	sts	0x27D8, r25
    b6a8:	8c 91       	ld	r24, X
    b6aa:	8f 15       	cp	r24, r15
    b6ac:	09 f0       	breq	.+2      	; 0xb6b0 <hal_releaseTimer+0x96>
    b6ae:	56 c0       	rjmp	.+172    	; 0xb75c <hal_releaseTimer+0x142>
    b6b0:	f8 01       	movw	r30, r16
    b6b2:	82 81       	ldd	r24, Z+2	; 0x02
    b6b4:	81 50       	subi	r24, 0x01	; 1
    b6b6:	82 83       	std	Z+2, r24	; 0x02
    b6b8:	04 80       	ldd	r0, Z+4	; 0x04
    b6ba:	f5 81       	ldd	r31, Z+5	; 0x05
    b6bc:	e0 2d       	mov	r30, r0
    b6be:	24 30       	cpi	r18, 0x04	; 4
    b6c0:	59 f4       	brne	.+22     	; 0xb6d8 <hal_releaseTimer+0xbe>
    b6c2:	30 97       	sbiw	r30, 0x00	; 0
    b6c4:	29 f4       	brne	.+10     	; 0xb6d0 <hal_releaseTimer+0xb6>
    b6c6:	d8 01       	movw	r26, r16
    b6c8:	16 96       	adiw	r26, 0x06	; 6
    b6ca:	ed 91       	ld	r30, X+
    b6cc:	fc 91       	ld	r31, X
    b6ce:	17 97       	sbiw	r26, 0x07	; 7
    b6d0:	86 81       	ldd	r24, Z+6	; 0x06
    b6d2:	8c 7f       	andi	r24, 0xFC	; 252
    b6d4:	86 83       	std	Z+6, r24	; 0x06
    b6d6:	2e c0       	rjmp	.+92     	; 0xb734 <hal_releaseTimer+0x11a>
    b6d8:	22 23       	and	r18, r18
    b6da:	51 f4       	brne	.+20     	; 0xb6f0 <hal_releaseTimer+0xd6>
    b6dc:	30 97       	sbiw	r30, 0x00	; 0
    b6de:	29 f4       	brne	.+10     	; 0xb6ea <hal_releaseTimer+0xd0>
    b6e0:	d8 01       	movw	r26, r16
    b6e2:	16 96       	adiw	r26, 0x06	; 6
    b6e4:	ed 91       	ld	r30, X+
    b6e6:	fc 91       	ld	r31, X
    b6e8:	17 97       	sbiw	r26, 0x07	; 7
    b6ea:	87 81       	ldd	r24, Z+7	; 0x07
    b6ec:	8c 7f       	andi	r24, 0xFC	; 252
    b6ee:	21 c0       	rjmp	.+66     	; 0xb732 <hal_releaseTimer+0x118>
    b6f0:	21 30       	cpi	r18, 0x01	; 1
    b6f2:	51 f4       	brne	.+20     	; 0xb708 <hal_releaseTimer+0xee>
    b6f4:	30 97       	sbiw	r30, 0x00	; 0
    b6f6:	29 f4       	brne	.+10     	; 0xb702 <hal_releaseTimer+0xe8>
    b6f8:	d8 01       	movw	r26, r16
    b6fa:	16 96       	adiw	r26, 0x06	; 6
    b6fc:	ed 91       	ld	r30, X+
    b6fe:	fc 91       	ld	r31, X
    b700:	17 97       	sbiw	r26, 0x07	; 7
    b702:	87 81       	ldd	r24, Z+7	; 0x07
    b704:	83 7f       	andi	r24, 0xF3	; 243
    b706:	15 c0       	rjmp	.+42     	; 0xb732 <hal_releaseTimer+0x118>
    b708:	22 30       	cpi	r18, 0x02	; 2
    b70a:	51 f4       	brne	.+20     	; 0xb720 <hal_releaseTimer+0x106>
    b70c:	30 97       	sbiw	r30, 0x00	; 0
    b70e:	29 f4       	brne	.+10     	; 0xb71a <hal_releaseTimer+0x100>
    b710:	d8 01       	movw	r26, r16
    b712:	16 96       	adiw	r26, 0x06	; 6
    b714:	ed 91       	ld	r30, X+
    b716:	fc 91       	ld	r31, X
    b718:	17 97       	sbiw	r26, 0x07	; 7
    b71a:	87 81       	ldd	r24, Z+7	; 0x07
    b71c:	8f 7c       	andi	r24, 0xCF	; 207
    b71e:	09 c0       	rjmp	.+18     	; 0xb732 <hal_releaseTimer+0x118>
    b720:	30 97       	sbiw	r30, 0x00	; 0
    b722:	29 f4       	brne	.+10     	; 0xb72e <hal_releaseTimer+0x114>
    b724:	d8 01       	movw	r26, r16
    b726:	16 96       	adiw	r26, 0x06	; 6
    b728:	ed 91       	ld	r30, X+
    b72a:	fc 91       	ld	r31, X
    b72c:	17 97       	sbiw	r26, 0x07	; 7
    b72e:	87 81       	ldd	r24, Z+7	; 0x07
    b730:	8f 73       	andi	r24, 0x3F	; 63
    b732:	87 83       	std	Z+7, r24	; 0x07
    b734:	80 91 09 24 	lds	r24, 0x2409
    b738:	90 91 0a 24 	lds	r25, 0x240A
    b73c:	60 91 d9 27 	lds	r22, 0x27D9
    b740:	70 91 da 27 	lds	r23, 0x27DA
    b744:	2c 83       	std	Y+4, r18	; 0x04
    b746:	0e 94 6a 8a 	call	0x114d4	; 0x114d4 <utl_destroyLink>
    b74a:	80 91 d7 27 	lds	r24, 0x27D7
    b74e:	90 91 d8 27 	lds	r25, 0x27D8
    b752:	80 93 d9 27 	sts	0x27D9, r24
    b756:	90 93 da 27 	sts	0x27DA, r25
    b75a:	2c 81       	ldd	r18, Y+4	; 0x04
    b75c:	08 94       	sec
    b75e:	c1 08       	sbc	r12, r1
    b760:	d1 08       	sbc	r13, r1
    b762:	e0 91 d9 27 	lds	r30, 0x27D9
    b766:	f0 91 da 27 	lds	r31, 0x27DA
    b76a:	80 85       	ldd	r24, Z+8	; 0x08
    b76c:	91 85       	ldd	r25, Z+9	; 0x09
    b76e:	80 93 d9 27 	sts	0x27D9, r24
    b772:	90 93 da 27 	sts	0x27DA, r25
    b776:	1c 14       	cp	r1, r12
    b778:	1d 04       	cpc	r1, r13
    b77a:	0c f4       	brge	.+2      	; 0xb77e <hal_releaseTimer+0x164>
    b77c:	85 cf       	rjmp	.-246    	; 0xb688 <hal_releaseTimer+0x6e>
    b77e:	2f 5f       	subi	r18, 0xFF	; 255
    b780:	08 94       	sec
    b782:	a1 08       	sbc	r10, r1
    b784:	b1 08       	sbc	r11, r1
    b786:	a1 14       	cp	r10, r1
    b788:	b1 04       	cpc	r11, r1
    b78a:	09 f0       	breq	.+2      	; 0xb78e <hal_releaseTimer+0x174>
    b78c:	6f cf       	rjmp	.-290    	; 0xb66c <hal_releaseTimer+0x52>
    b78e:	f8 01       	movw	r30, r16
    b790:	12 82       	std	Z+2, r1	; 0x02
    b792:	04 80       	ldd	r0, Z+4	; 0x04
    b794:	f5 81       	ldd	r31, Z+5	; 0x05
    b796:	e0 2d       	mov	r30, r0
    b798:	30 97       	sbiw	r30, 0x00	; 0
    b79a:	79 f0       	breq	.+30     	; 0xb7ba <hal_releaseTimer+0x1a0>
    b79c:	80 81       	ld	r24, Z
    b79e:	80 7f       	andi	r24, 0xF0	; 240
    b7a0:	80 83       	st	Z, r24
    b7a2:	d8 01       	movw	r26, r16
    b7a4:	14 96       	adiw	r26, 0x04	; 4
    b7a6:	ed 91       	ld	r30, X+
    b7a8:	fc 91       	ld	r31, X
    b7aa:	15 97       	sbiw	r26, 0x05	; 5
    b7ac:	80 81       	ld	r24, Z
    b7ae:	80 83       	st	Z, r24
    b7b0:	14 96       	adiw	r26, 0x04	; 4
    b7b2:	ed 91       	ld	r30, X+
    b7b4:	fc 91       	ld	r31, X
    b7b6:	15 97       	sbiw	r26, 0x05	; 5
    b7b8:	12 c0       	rjmp	.+36     	; 0xb7de <hal_releaseTimer+0x1c4>
    b7ba:	d8 01       	movw	r26, r16
    b7bc:	16 96       	adiw	r26, 0x06	; 6
    b7be:	ed 91       	ld	r30, X+
    b7c0:	fc 91       	ld	r31, X
    b7c2:	17 97       	sbiw	r26, 0x07	; 7
    b7c4:	80 81       	ld	r24, Z
    b7c6:	80 7f       	andi	r24, 0xF0	; 240
    b7c8:	80 83       	st	Z, r24
    b7ca:	16 96       	adiw	r26, 0x06	; 6
    b7cc:	ed 91       	ld	r30, X+
    b7ce:	fc 91       	ld	r31, X
    b7d0:	17 97       	sbiw	r26, 0x07	; 7
    b7d2:	80 81       	ld	r24, Z
    b7d4:	80 83       	st	Z, r24
    b7d6:	16 96       	adiw	r26, 0x06	; 6
    b7d8:	ed 91       	ld	r30, X+
    b7da:	fc 91       	ld	r31, X
    b7dc:	17 97       	sbiw	r26, 0x07	; 7
    b7de:	8c e0       	ldi	r24, 0x0C	; 12
    b7e0:	81 87       	std	Z+9, r24	; 0x09
    b7e2:	80 91 17 24 	lds	r24, 0x2417
    b7e6:	90 91 18 24 	lds	r25, 0x2418
    b7ea:	6a 81       	ldd	r22, Y+2	; 0x02
    b7ec:	7b 81       	ldd	r23, Y+3	; 0x03
    b7ee:	0e 94 6a 8a 	call	0x114d4	; 0x114d4 <utl_destroyLink>
    b7f2:	89 81       	ldd	r24, Y+1	; 0x01
    b7f4:	8f bf       	out	0x3f, r24	; 63
    b7f6:	80 e0       	ldi	r24, 0x00	; 0
    b7f8:	24 96       	adiw	r28, 0x04	; 4
    b7fa:	cd bf       	out	0x3d, r28	; 61
    b7fc:	de bf       	out	0x3e, r29	; 62
    b7fe:	df 91       	pop	r29
    b800:	cf 91       	pop	r28
    b802:	1f 91       	pop	r17
    b804:	0f 91       	pop	r16
    b806:	ff 90       	pop	r15
    b808:	df 90       	pop	r13
    b80a:	cf 90       	pop	r12
    b80c:	bf 90       	pop	r11
    b80e:	af 90       	pop	r10
    b810:	08 95       	ret

0000b812 <hal_configureTimer>:
    b812:	6f 92       	push	r6
    b814:	7f 92       	push	r7
    b816:	9f 92       	push	r9
    b818:	af 92       	push	r10
    b81a:	bf 92       	push	r11
    b81c:	cf 92       	push	r12
    b81e:	df 92       	push	r13
    b820:	ef 92       	push	r14
    b822:	ff 92       	push	r15
    b824:	0f 93       	push	r16
    b826:	1f 93       	push	r17
    b828:	cf 93       	push	r28
    b82a:	df 93       	push	r29
    b82c:	cd b7       	in	r28, 0x3d	; 61
    b82e:	de b7       	in	r29, 0x3e	; 62
    b830:	67 97       	sbiw	r28, 0x17	; 23
    b832:	cd bf       	out	0x3d, r28	; 61
    b834:	de bf       	out	0x3e, r29	; 62
    b836:	88 8b       	std	Y+16, r24	; 0x10
    b838:	99 8b       	std	Y+17, r25	; 0x11
    b83a:	d2 2e       	mov	r13, r18
    b83c:	2a 8b       	std	Y+18, r18	; 0x12
    b83e:	e3 2e       	mov	r14, r19
    b840:	3b 8b       	std	Y+19, r19	; 0x13
    b842:	4c 8b       	std	Y+20, r20	; 0x14
    b844:	5d 8b       	std	Y+21, r21	; 0x15
    b846:	6e 8b       	std	Y+22, r22	; 0x16
    b848:	7f 8b       	std	Y+23, r23	; 0x17
    b84a:	de 01       	movw	r26, r28
    b84c:	12 96       	adiw	r26, 0x02	; 2
    b84e:	eb ef       	ldi	r30, 0xFB	; 251
    b850:	f3 e2       	ldi	r31, 0x23	; 35
    b852:	8e e0       	ldi	r24, 0x0E	; 14
    b854:	01 90       	ld	r0, Z+
    b856:	0d 92       	st	X+, r0
    b858:	81 50       	subi	r24, 0x01	; 1
    b85a:	e1 f7       	brne	.-8      	; 0xb854 <hal_configureTimer+0x42>
    b85c:	8f b7       	in	r24, 0x3f	; 63
    b85e:	89 83       	std	Y+1, r24	; 0x01
    b860:	f8 94       	cli
    b862:	e8 89       	ldd	r30, Y+16	; 0x10
    b864:	f9 89       	ldd	r31, Y+17	; 0x11
    b866:	80 91 17 24 	lds	r24, 0x2417
    b86a:	90 91 18 24 	lds	r25, 0x2418
    b86e:	24 81       	ldd	r18, Z+4	; 0x04
    b870:	35 81       	ldd	r19, Z+5	; 0x05
    b872:	28 17       	cp	r18, r24
    b874:	39 07       	cpc	r19, r25
    b876:	21 f0       	breq	.+8      	; 0xb880 <hal_configureTimer+0x6e>
    b878:	89 81       	ldd	r24, Y+1	; 0x01
    b87a:	8f bf       	out	0x3f, r24	; 63
    b87c:	8b ef       	ldi	r24, 0xFB	; 251
    b87e:	e9 c0       	rjmp	.+466    	; 0xba52 <hal_configureTimer+0x240>
    b880:	e8 89       	ldd	r30, Y+16	; 0x10
    b882:	f9 89       	ldd	r31, Y+17	; 0x11
    b884:	00 81       	ld	r16, Z
    b886:	11 81       	ldd	r17, Z+1	; 0x01
    b888:	26 e0       	ldi	r18, 0x06	; 6
    b88a:	2d 15       	cp	r18, r13
    b88c:	18 f0       	brcs	.+6      	; 0xb894 <hal_configureTimer+0x82>
    b88e:	82 e0       	ldi	r24, 0x02	; 2
    b890:	d8 16       	cp	r13, r24
    b892:	21 f4       	brne	.+8      	; 0xb89c <hal_configureTimer+0x8a>
    b894:	89 81       	ldd	r24, Y+1	; 0x01
    b896:	8f bf       	out	0x3f, r24	; 63
    b898:	86 ef       	ldi	r24, 0xF6	; 246
    b89a:	db c0       	rjmp	.+438    	; 0xba52 <hal_configureTimer+0x240>
    b89c:	a1 e0       	ldi	r26, 0x01	; 1
    b89e:	ae 15       	cp	r26, r14
    b8a0:	20 f4       	brcc	.+8      	; 0xb8aa <hal_configureTimer+0x98>
    b8a2:	89 81       	ldd	r24, Y+1	; 0x01
    b8a4:	8f bf       	out	0x3f, r24	; 63
    b8a6:	85 ef       	ldi	r24, 0xF5	; 245
    b8a8:	d4 c0       	rjmp	.+424    	; 0xba52 <hal_configureTimer+0x240>
    b8aa:	6c 89       	ldd	r22, Y+20	; 0x14
    b8ac:	7d 89       	ldd	r23, Y+21	; 0x15
    b8ae:	8e 89       	ldd	r24, Y+22	; 0x16
    b8b0:	9f 89       	ldd	r25, Y+23	; 0x17
    b8b2:	20 e0       	ldi	r18, 0x00	; 0
    b8b4:	34 e2       	ldi	r19, 0x24	; 36
    b8b6:	44 ef       	ldi	r20, 0xF4	; 244
    b8b8:	5b e4       	ldi	r21, 0x4B	; 75
    b8ba:	0e 94 d4 ae 	call	0x15da8	; 0x15da8 <__mulsf3>
    b8be:	c6 2e       	mov	r12, r22
    b8c0:	b7 2e       	mov	r11, r23
    b8c2:	a8 2e       	mov	r10, r24
    b8c4:	99 2e       	mov	r9, r25
    b8c6:	62 e0       	ldi	r22, 0x02	; 2
    b8c8:	66 2e       	mov	r6, r22
    b8ca:	71 2c       	mov	r7, r1
    b8cc:	6c 0e       	add	r6, r28
    b8ce:	7d 1e       	adc	r7, r29
    b8d0:	ff 24       	eor	r15, r15
    b8d2:	f3 01       	movw	r30, r6
    b8d4:	61 91       	ld	r22, Z+
    b8d6:	71 91       	ld	r23, Z+
    b8d8:	3f 01       	movw	r6, r30
    b8da:	80 e0       	ldi	r24, 0x00	; 0
    b8dc:	90 e0       	ldi	r25, 0x00	; 0
    b8de:	0e 94 6b ad 	call	0x15ad6	; 0x15ad6 <__floatunsisf>
    b8e2:	9b 01       	movw	r18, r22
    b8e4:	ac 01       	movw	r20, r24
    b8e6:	8c 2d       	mov	r24, r12
    b8e8:	9b 2d       	mov	r25, r11
    b8ea:	aa 2d       	mov	r26, r10
    b8ec:	b9 2d       	mov	r27, r9
    b8ee:	bc 01       	movw	r22, r24
    b8f0:	cd 01       	movw	r24, r26
    b8f2:	0e 94 98 ac 	call	0x15930	; 0x15930 <__divsf3>
    b8f6:	0e 94 3a ad 	call	0x15a74	; 0x15a74 <__fixsfsi>
    b8fa:	ab 01       	movw	r20, r22
    b8fc:	bc 01       	movw	r22, r24
    b8fe:	4f 3f       	cpi	r20, 0xFF	; 255
    b900:	ff e7       	ldi	r31, 0x7F	; 127
    b902:	5f 07       	cpc	r21, r31
    b904:	f0 e0       	ldi	r31, 0x00	; 0
    b906:	6f 07       	cpc	r22, r31
    b908:	f0 e0       	ldi	r31, 0x00	; 0
    b90a:	7f 07       	cpc	r23, r31
    b90c:	24 f0       	brlt	.+8      	; 0xb916 <hal_configureTimer+0x104>
    b90e:	f3 94       	inc	r15
    b910:	27 e0       	ldi	r18, 0x07	; 7
    b912:	f2 16       	cp	r15, r18
    b914:	f1 f6       	brne	.-68     	; 0xb8d2 <hal_configureTimer+0xc0>
    b916:	ef 2d       	mov	r30, r15
    b918:	f0 e0       	ldi	r31, 0x00	; 0
    b91a:	ee 0f       	add	r30, r30
    b91c:	ff 1f       	adc	r31, r31
    b91e:	ec 0f       	add	r30, r28
    b920:	fd 1f       	adc	r31, r29
    b922:	82 81       	ldd	r24, Z+2	; 0x02
    b924:	93 81       	ldd	r25, Z+3	; 0x03
    b926:	88 30       	cpi	r24, 0x08	; 8
    b928:	91 05       	cpc	r25, r1
    b92a:	09 f1       	breq	.+66     	; 0xb96e <hal_configureTimer+0x15c>
    b92c:	89 30       	cpi	r24, 0x09	; 9
    b92e:	91 05       	cpc	r25, r1
    b930:	50 f4       	brcc	.+20     	; 0xb946 <hal_configureTimer+0x134>
    b932:	82 30       	cpi	r24, 0x02	; 2
    b934:	91 05       	cpc	r25, r1
    b936:	a9 f0       	breq	.+42     	; 0xb962 <hal_configureTimer+0x150>
    b938:	84 30       	cpi	r24, 0x04	; 4
    b93a:	91 05       	cpc	r25, r1
    b93c:	a1 f0       	breq	.+40     	; 0xb966 <hal_configureTimer+0x154>
    b93e:	81 30       	cpi	r24, 0x01	; 1
    b940:	91 05       	cpc	r25, r1
    b942:	09 f5       	brne	.+66     	; 0xb986 <hal_configureTimer+0x174>
    b944:	0c c0       	rjmp	.+24     	; 0xb95e <hal_configureTimer+0x14c>
    b946:	a1 e0       	ldi	r26, 0x01	; 1
    b948:	80 30       	cpi	r24, 0x00	; 0
    b94a:	9a 07       	cpc	r25, r26
    b94c:	a1 f0       	breq	.+40     	; 0xb976 <hal_configureTimer+0x164>
    b94e:	b4 e0       	ldi	r27, 0x04	; 4
    b950:	80 30       	cpi	r24, 0x00	; 0
    b952:	9b 07       	cpc	r25, r27
    b954:	b1 f0       	breq	.+44     	; 0xb982 <hal_configureTimer+0x170>
    b956:	80 34       	cpi	r24, 0x40	; 64
    b958:	91 05       	cpc	r25, r1
    b95a:	a9 f4       	brne	.+42     	; 0xb986 <hal_configureTimer+0x174>
    b95c:	0a c0       	rjmp	.+20     	; 0xb972 <hal_configureTimer+0x160>
    b95e:	81 e0       	ldi	r24, 0x01	; 1
    b960:	03 c0       	rjmp	.+6      	; 0xb968 <hal_configureTimer+0x156>
    b962:	82 e0       	ldi	r24, 0x02	; 2
    b964:	09 c0       	rjmp	.+18     	; 0xb978 <hal_configureTimer+0x166>
    b966:	83 e0       	ldi	r24, 0x03	; 3
    b968:	f8 01       	movw	r30, r16
    b96a:	83 83       	std	Z+3, r24	; 0x03
    b96c:	10 c0       	rjmp	.+32     	; 0xb98e <hal_configureTimer+0x17c>
    b96e:	84 e0       	ldi	r24, 0x04	; 4
    b970:	03 c0       	rjmp	.+6      	; 0xb978 <hal_configureTimer+0x166>
    b972:	85 e0       	ldi	r24, 0x05	; 5
    b974:	f9 cf       	rjmp	.-14     	; 0xb968 <hal_configureTimer+0x156>
    b976:	86 e0       	ldi	r24, 0x06	; 6
    b978:	d8 01       	movw	r26, r16
    b97a:	13 96       	adiw	r26, 0x03	; 3
    b97c:	8c 93       	st	X, r24
    b97e:	13 97       	sbiw	r26, 0x03	; 3
    b980:	06 c0       	rjmp	.+12     	; 0xb98e <hal_configureTimer+0x17c>
    b982:	87 e0       	ldi	r24, 0x07	; 7
    b984:	f1 cf       	rjmp	.-30     	; 0xb968 <hal_configureTimer+0x156>
    b986:	89 81       	ldd	r24, Y+1	; 0x01
    b988:	8f bf       	out	0x3f, r24	; 63
    b98a:	84 ef       	ldi	r24, 0xF4	; 244
    b98c:	62 c0       	rjmp	.+196    	; 0xba52 <hal_configureTimer+0x240>
    b98e:	d8 01       	movw	r26, r16
    b990:	14 96       	adiw	r26, 0x04	; 4
    b992:	ed 91       	ld	r30, X+
    b994:	fc 91       	ld	r31, X
    b996:	15 97       	sbiw	r26, 0x05	; 5
    b998:	30 97       	sbiw	r30, 0x00	; 0
    b99a:	11 f1       	breq	.+68     	; 0xb9e0 <hal_configureTimer+0x1ce>
    b99c:	80 81       	ld	r24, Z
    b99e:	80 7f       	andi	r24, 0xF0	; 240
    b9a0:	80 83       	st	Z, r24
    b9a2:	14 96       	adiw	r26, 0x04	; 4
    b9a4:	ed 91       	ld	r30, X+
    b9a6:	fc 91       	ld	r31, X
    b9a8:	15 97       	sbiw	r26, 0x05	; 5
    b9aa:	80 81       	ld	r24, Z
    b9ac:	80 83       	st	Z, r24
    b9ae:	14 96       	adiw	r26, 0x04	; 4
    b9b0:	ed 91       	ld	r30, X+
    b9b2:	fc 91       	ld	r31, X
    b9b4:	15 97       	sbiw	r26, 0x05	; 5
    b9b6:	8c e0       	ldi	r24, 0x0C	; 12
    b9b8:	81 87       	std	Z+9, r24	; 0x09
    b9ba:	14 96       	adiw	r26, 0x04	; 4
    b9bc:	ed 91       	ld	r30, X+
    b9be:	fc 91       	ld	r31, X
    b9c0:	15 97       	sbiw	r26, 0x05	; 5
    b9c2:	81 81       	ldd	r24, Z+1	; 0x01
    b9c4:	88 7f       	andi	r24, 0xF8	; 248
    b9c6:	81 83       	std	Z+1, r24	; 0x01
    b9c8:	14 96       	adiw	r26, 0x04	; 4
    b9ca:	ed 91       	ld	r30, X+
    b9cc:	fc 91       	ld	r31, X
    b9ce:	15 97       	sbiw	r26, 0x05	; 5
    b9d0:	81 81       	ldd	r24, Z+1	; 0x01
    b9d2:	8d 29       	or	r24, r13
    b9d4:	81 83       	std	Z+1, r24	; 0x01
    b9d6:	14 96       	adiw	r26, 0x04	; 4
    b9d8:	ed 91       	ld	r30, X+
    b9da:	fc 91       	ld	r31, X
    b9dc:	15 97       	sbiw	r26, 0x05	; 5
    b9de:	26 c0       	rjmp	.+76     	; 0xba2c <hal_configureTimer+0x21a>
    b9e0:	d8 01       	movw	r26, r16
    b9e2:	16 96       	adiw	r26, 0x06	; 6
    b9e4:	ed 91       	ld	r30, X+
    b9e6:	fc 91       	ld	r31, X
    b9e8:	17 97       	sbiw	r26, 0x07	; 7
    b9ea:	80 81       	ld	r24, Z
    b9ec:	80 7f       	andi	r24, 0xF0	; 240
    b9ee:	80 83       	st	Z, r24
    b9f0:	16 96       	adiw	r26, 0x06	; 6
    b9f2:	ed 91       	ld	r30, X+
    b9f4:	fc 91       	ld	r31, X
    b9f6:	17 97       	sbiw	r26, 0x07	; 7
    b9f8:	80 81       	ld	r24, Z
    b9fa:	80 83       	st	Z, r24
    b9fc:	16 96       	adiw	r26, 0x06	; 6
    b9fe:	ed 91       	ld	r30, X+
    ba00:	fc 91       	ld	r31, X
    ba02:	17 97       	sbiw	r26, 0x07	; 7
    ba04:	8c e0       	ldi	r24, 0x0C	; 12
    ba06:	81 87       	std	Z+9, r24	; 0x09
    ba08:	16 96       	adiw	r26, 0x06	; 6
    ba0a:	ed 91       	ld	r30, X+
    ba0c:	fc 91       	ld	r31, X
    ba0e:	17 97       	sbiw	r26, 0x07	; 7
    ba10:	81 81       	ldd	r24, Z+1	; 0x01
    ba12:	88 7f       	andi	r24, 0xF8	; 248
    ba14:	81 83       	std	Z+1, r24	; 0x01
    ba16:	16 96       	adiw	r26, 0x06	; 6
    ba18:	ed 91       	ld	r30, X+
    ba1a:	fc 91       	ld	r31, X
    ba1c:	17 97       	sbiw	r26, 0x07	; 7
    ba1e:	81 81       	ldd	r24, Z+1	; 0x01
    ba20:	8d 29       	or	r24, r13
    ba22:	81 83       	std	Z+1, r24	; 0x01
    ba24:	16 96       	adiw	r26, 0x06	; 6
    ba26:	ed 91       	ld	r30, X+
    ba28:	fc 91       	ld	r31, X
    ba2a:	17 97       	sbiw	r26, 0x07	; 7
    ba2c:	46 a3       	lds	r20, 0x56
    ba2e:	57 a3       	lds	r21, 0x57
    ba30:	14 96       	adiw	r26, 0x04	; 4
    ba32:	ed 91       	ld	r30, X+
    ba34:	fc 91       	ld	r31, X
    ba36:	15 97       	sbiw	r26, 0x05	; 5
    ba38:	b1 e0       	ldi	r27, 0x01	; 1
    ba3a:	eb 16       	cp	r14, r27
    ba3c:	11 f4       	brne	.+4      	; 0xba42 <hal_configureTimer+0x230>
    ba3e:	e1 86       	std	Z+9, r14	; 0x09
    ba40:	02 c0       	rjmp	.+4      	; 0xba46 <hal_configureTimer+0x234>
    ba42:	81 e0       	ldi	r24, 0x01	; 1
    ba44:	80 87       	std	Z+8, r24	; 0x08
    ba46:	81 e0       	ldi	r24, 0x01	; 1
    ba48:	f8 01       	movw	r30, r16
    ba4a:	81 83       	std	Z+1, r24	; 0x01
    ba4c:	89 81       	ldd	r24, Y+1	; 0x01
    ba4e:	8f bf       	out	0x3f, r24	; 63
    ba50:	80 e0       	ldi	r24, 0x00	; 0
    ba52:	67 96       	adiw	r28, 0x17	; 23
    ba54:	cd bf       	out	0x3d, r28	; 61
    ba56:	de bf       	out	0x3e, r29	; 62
    ba58:	df 91       	pop	r29
    ba5a:	cf 91       	pop	r28
    ba5c:	1f 91       	pop	r17
    ba5e:	0f 91       	pop	r16
    ba60:	ff 90       	pop	r15
    ba62:	ef 90       	pop	r14
    ba64:	df 90       	pop	r13
    ba66:	cf 90       	pop	r12
    ba68:	bf 90       	pop	r11
    ba6a:	af 90       	pop	r10
    ba6c:	9f 90       	pop	r9
    ba6e:	7f 90       	pop	r7
    ba70:	6f 90       	pop	r6
    ba72:	08 95       	ret

0000ba74 <hal_startTimer>:
    ba74:	cf 93       	push	r28
    ba76:	df 93       	push	r29
    ba78:	00 d0       	rcall	.+0      	; 0xba7a <hal_startTimer+0x6>
    ba7a:	cd b7       	in	r28, 0x3d	; 61
    ba7c:	de b7       	in	r29, 0x3e	; 62
    ba7e:	8a 83       	std	Y+2, r24	; 0x02
    ba80:	9b 83       	std	Y+3, r25	; 0x03
    ba82:	8f b7       	in	r24, 0x3f	; 63
    ba84:	89 83       	std	Y+1, r24	; 0x01
    ba86:	f8 94       	cli
    ba88:	ea 81       	ldd	r30, Y+2	; 0x02
    ba8a:	fb 81       	ldd	r31, Y+3	; 0x03
    ba8c:	80 91 17 24 	lds	r24, 0x2417
    ba90:	90 91 18 24 	lds	r25, 0x2418
    ba94:	24 81       	ldd	r18, Z+4	; 0x04
    ba96:	35 81       	ldd	r19, Z+5	; 0x05
    ba98:	28 17       	cp	r18, r24
    ba9a:	39 07       	cpc	r19, r25
    ba9c:	21 f0       	breq	.+8      	; 0xbaa6 <hal_startTimer+0x32>
    ba9e:	89 81       	ldd	r24, Y+1	; 0x01
    baa0:	8f bf       	out	0x3f, r24	; 63
    baa2:	8b ef       	ldi	r24, 0xFB	; 251
    baa4:	24 c0       	rjmp	.+72     	; 0xbaee <hal_startTimer+0x7a>
    baa6:	ea 81       	ldd	r30, Y+2	; 0x02
    baa8:	fb 81       	ldd	r31, Y+3	; 0x03
    baaa:	01 90       	ld	r0, Z+
    baac:	f0 81       	ld	r31, Z
    baae:	e0 2d       	mov	r30, r0
    bab0:	81 81       	ldd	r24, Z+1	; 0x01
    bab2:	88 23       	and	r24, r24
    bab4:	21 f4       	brne	.+8      	; 0xbabe <hal_startTimer+0x4a>
    bab6:	89 81       	ldd	r24, Y+1	; 0x01
    bab8:	8f bf       	out	0x3f, r24	; 63
    baba:	83 ef       	ldi	r24, 0xF3	; 243
    babc:	18 c0       	rjmp	.+48     	; 0xbaee <hal_startTimer+0x7a>
    babe:	a4 81       	ldd	r26, Z+4	; 0x04
    bac0:	b5 81       	ldd	r27, Z+5	; 0x05
    bac2:	10 97       	sbiw	r26, 0x00	; 0
    bac4:	31 f0       	breq	.+12     	; 0xbad2 <hal_startTimer+0x5e>
    bac6:	8c 91       	ld	r24, X
    bac8:	80 7f       	andi	r24, 0xF0	; 240
    baca:	8c 93       	st	X, r24
    bacc:	a4 81       	ldd	r26, Z+4	; 0x04
    bace:	b5 81       	ldd	r27, Z+5	; 0x05
    bad0:	07 c0       	rjmp	.+14     	; 0xbae0 <hal_startTimer+0x6c>
    bad2:	a6 81       	ldd	r26, Z+6	; 0x06
    bad4:	b7 81       	ldd	r27, Z+7	; 0x07
    bad6:	8c 91       	ld	r24, X
    bad8:	80 7f       	andi	r24, 0xF0	; 240
    bada:	8c 93       	st	X, r24
    badc:	a6 81       	ldd	r26, Z+6	; 0x06
    bade:	b7 81       	ldd	r27, Z+7	; 0x07
    bae0:	8c 91       	ld	r24, X
    bae2:	93 81       	ldd	r25, Z+3	; 0x03
    bae4:	89 2b       	or	r24, r25
    bae6:	8c 93       	st	X, r24
    bae8:	89 81       	ldd	r24, Y+1	; 0x01
    baea:	8f bf       	out	0x3f, r24	; 63
    baec:	80 e0       	ldi	r24, 0x00	; 0
    baee:	23 96       	adiw	r28, 0x03	; 3
    baf0:	cd bf       	out	0x3d, r28	; 61
    baf2:	de bf       	out	0x3e, r29	; 62
    baf4:	df 91       	pop	r29
    baf6:	cf 91       	pop	r28
    baf8:	08 95       	ret

0000bafa <hal_stopTimer>:
    bafa:	cf 93       	push	r28
    bafc:	df 93       	push	r29
    bafe:	00 d0       	rcall	.+0      	; 0xbb00 <hal_stopTimer+0x6>
    bb00:	cd b7       	in	r28, 0x3d	; 61
    bb02:	de b7       	in	r29, 0x3e	; 62
    bb04:	8a 83       	std	Y+2, r24	; 0x02
    bb06:	9b 83       	std	Y+3, r25	; 0x03
    bb08:	8f b7       	in	r24, 0x3f	; 63
    bb0a:	89 83       	std	Y+1, r24	; 0x01
    bb0c:	f8 94       	cli
    bb0e:	ea 81       	ldd	r30, Y+2	; 0x02
    bb10:	fb 81       	ldd	r31, Y+3	; 0x03
    bb12:	80 91 17 24 	lds	r24, 0x2417
    bb16:	90 91 18 24 	lds	r25, 0x2418
    bb1a:	24 81       	ldd	r18, Z+4	; 0x04
    bb1c:	35 81       	ldd	r19, Z+5	; 0x05
    bb1e:	28 17       	cp	r18, r24
    bb20:	39 07       	cpc	r19, r25
    bb22:	21 f0       	breq	.+8      	; 0xbb2c <hal_stopTimer+0x32>
    bb24:	89 81       	ldd	r24, Y+1	; 0x01
    bb26:	8f bf       	out	0x3f, r24	; 63
    bb28:	8b ef       	ldi	r24, 0xFB	; 251
    bb2a:	1d c0       	rjmp	.+58     	; 0xbb66 <hal_stopTimer+0x6c>
    bb2c:	ea 81       	ldd	r30, Y+2	; 0x02
    bb2e:	fb 81       	ldd	r31, Y+3	; 0x03
    bb30:	01 90       	ld	r0, Z+
    bb32:	f0 81       	ld	r31, Z
    bb34:	e0 2d       	mov	r30, r0
    bb36:	a4 81       	ldd	r26, Z+4	; 0x04
    bb38:	b5 81       	ldd	r27, Z+5	; 0x05
    bb3a:	10 97       	sbiw	r26, 0x00	; 0
    bb3c:	39 f0       	breq	.+14     	; 0xbb4c <hal_stopTimer+0x52>
    bb3e:	8c 91       	ld	r24, X
    bb40:	80 7f       	andi	r24, 0xF0	; 240
    bb42:	8c 93       	st	X, r24
    bb44:	04 80       	ldd	r0, Z+4	; 0x04
    bb46:	f5 81       	ldd	r31, Z+5	; 0x05
    bb48:	e0 2d       	mov	r30, r0
    bb4a:	08 c0       	rjmp	.+16     	; 0xbb5c <hal_stopTimer+0x62>
    bb4c:	a6 81       	ldd	r26, Z+6	; 0x06
    bb4e:	b7 81       	ldd	r27, Z+7	; 0x07
    bb50:	8c 91       	ld	r24, X
    bb52:	80 7f       	andi	r24, 0xF0	; 240
    bb54:	8c 93       	st	X, r24
    bb56:	06 80       	ldd	r0, Z+6	; 0x06
    bb58:	f7 81       	ldd	r31, Z+7	; 0x07
    bb5a:	e0 2d       	mov	r30, r0
    bb5c:	80 81       	ld	r24, Z
    bb5e:	80 83       	st	Z, r24
    bb60:	89 81       	ldd	r24, Y+1	; 0x01
    bb62:	8f bf       	out	0x3f, r24	; 63
    bb64:	80 e0       	ldi	r24, 0x00	; 0
    bb66:	23 96       	adiw	r28, 0x03	; 3
    bb68:	cd bf       	out	0x3d, r28	; 61
    bb6a:	de bf       	out	0x3e, r29	; 62
    bb6c:	df 91       	pop	r29
    bb6e:	cf 91       	pop	r28
    bb70:	08 95       	ret

0000bb72 <hal_getTimerCount>:
    bb72:	0f 93       	push	r16
    bb74:	1f 93       	push	r17
    bb76:	cf 93       	push	r28
    bb78:	df 93       	push	r29
    bb7a:	0f 92       	push	r0
    bb7c:	0f 92       	push	r0
    bb7e:	cd b7       	in	r28, 0x3d	; 61
    bb80:	de b7       	in	r29, 0x3e	; 62
    bb82:	89 83       	std	Y+1, r24	; 0x01
    bb84:	9a 83       	std	Y+2, r25	; 0x02
    bb86:	e9 81       	ldd	r30, Y+1	; 0x01
    bb88:	fa 81       	ldd	r31, Y+2	; 0x02
    bb8a:	80 91 17 24 	lds	r24, 0x2417
    bb8e:	90 91 18 24 	lds	r25, 0x2418
    bb92:	24 81       	ldd	r18, Z+4	; 0x04
    bb94:	35 81       	ldd	r19, Z+5	; 0x05
    bb96:	28 17       	cp	r18, r24
    bb98:	39 07       	cpc	r19, r25
    bb9a:	b1 f4       	brne	.+44     	; 0xbbc8 <hal_getTimerCount+0x56>
    bb9c:	e9 81       	ldd	r30, Y+1	; 0x01
    bb9e:	fa 81       	ldd	r31, Y+2	; 0x02
    bba0:	01 90       	ld	r0, Z+
    bba2:	f0 81       	ld	r31, Z
    bba4:	e0 2d       	mov	r30, r0
    bba6:	a4 81       	ldd	r26, Z+4	; 0x04
    bba8:	b5 81       	ldd	r27, Z+5	; 0x05
    bbaa:	10 97       	sbiw	r26, 0x00	; 0
    bbac:	29 f0       	breq	.+10     	; 0xbbb8 <hal_getTimerCount+0x46>
    bbae:	90 96       	adiw	r26, 0x20	; 32
    bbb0:	0d 91       	ld	r16, X+
    bbb2:	1c 91       	ld	r17, X
    bbb4:	91 97       	sbiw	r26, 0x21	; 33
    bbb6:	05 c0       	rjmp	.+10     	; 0xbbc2 <hal_getTimerCount+0x50>
    bbb8:	06 80       	ldd	r0, Z+6	; 0x06
    bbba:	f7 81       	ldd	r31, Z+7	; 0x07
    bbbc:	e0 2d       	mov	r30, r0
    bbbe:	00 a1       	lds	r16, 0x40
    bbc0:	11 a1       	lds	r17, 0x41
    bbc2:	20 e0       	ldi	r18, 0x00	; 0
    bbc4:	30 e0       	ldi	r19, 0x00	; 0
    bbc6:	04 c0       	rjmp	.+8      	; 0xbbd0 <hal_getTimerCount+0x5e>
    bbc8:	0b ef       	ldi	r16, 0xFB	; 251
    bbca:	1f ef       	ldi	r17, 0xFF	; 255
    bbcc:	2f ef       	ldi	r18, 0xFF	; 255
    bbce:	3f ef       	ldi	r19, 0xFF	; 255
    bbd0:	b8 01       	movw	r22, r16
    bbd2:	c9 01       	movw	r24, r18
    bbd4:	0f 90       	pop	r0
    bbd6:	0f 90       	pop	r0
    bbd8:	df 91       	pop	r29
    bbda:	cf 91       	pop	r28
    bbdc:	1f 91       	pop	r17
    bbde:	0f 91       	pop	r16
    bbe0:	08 95       	ret

0000bbe2 <hal_setCompareValue>:
    bbe2:	cf 93       	push	r28
    bbe4:	df 93       	push	r29
    bbe6:	0f 92       	push	r0
    bbe8:	0f 92       	push	r0
    bbea:	cd b7       	in	r28, 0x3d	; 61
    bbec:	de b7       	in	r29, 0x3e	; 62
    bbee:	89 83       	std	Y+1, r24	; 0x01
    bbf0:	9a 83       	std	Y+2, r25	; 0x02
    bbf2:	e9 81       	ldd	r30, Y+1	; 0x01
    bbf4:	fa 81       	ldd	r31, Y+2	; 0x02
    bbf6:	20 91 17 24 	lds	r18, 0x2417
    bbfa:	30 91 18 24 	lds	r19, 0x2418
    bbfe:	84 81       	ldd	r24, Z+4	; 0x04
    bc00:	95 81       	ldd	r25, Z+5	; 0x05
    bc02:	82 17       	cp	r24, r18
    bc04:	93 07       	cpc	r25, r19
    bc06:	99 f5       	brne	.+102    	; 0xbc6e <hal_setCompareValue+0x8c>
    bc08:	e9 81       	ldd	r30, Y+1	; 0x01
    bc0a:	fa 81       	ldd	r31, Y+2	; 0x02
    bc0c:	a0 81       	ld	r26, Z
    bc0e:	b1 81       	ldd	r27, Z+1	; 0x01
    bc10:	14 96       	adiw	r26, 0x04	; 4
    bc12:	ed 91       	ld	r30, X+
    bc14:	fc 91       	ld	r31, X
    bc16:	15 97       	sbiw	r26, 0x05	; 5
    bc18:	30 97       	sbiw	r30, 0x00	; 0
    bc1a:	a1 f0       	breq	.+40     	; 0xbc44 <hal_setCompareValue+0x62>
    bc1c:	86 a1       	lds	r24, 0x46
    bc1e:	97 a1       	lds	r25, 0x47
    bc20:	84 17       	cp	r24, r20
    bc22:	95 07       	cpc	r25, r21
    bc24:	30 f1       	brcs	.+76     	; 0xbc72 <hal_setCompareValue+0x90>
    bc26:	61 30       	cpi	r22, 0x01	; 1
    bc28:	f1 f0       	breq	.+60     	; 0xbc66 <hal_setCompareValue+0x84>
    bc2a:	61 30       	cpi	r22, 0x01	; 1
    bc2c:	c8 f0       	brcs	.+50     	; 0xbc60 <hal_setCompareValue+0x7e>
    bc2e:	62 30       	cpi	r22, 0x02	; 2
    bc30:	19 f0       	breq	.+6      	; 0xbc38 <hal_setCompareValue+0x56>
    bc32:	63 30       	cpi	r22, 0x03	; 3
    bc34:	01 f5       	brne	.+64     	; 0xbc76 <hal_setCompareValue+0x94>
    bc36:	03 c0       	rjmp	.+6      	; 0xbc3e <hal_setCompareValue+0x5c>
    bc38:	44 a7       	lds	r20, 0x74
    bc3a:	55 a7       	lds	r21, 0x75
    bc3c:	16 c0       	rjmp	.+44     	; 0xbc6a <hal_setCompareValue+0x88>
    bc3e:	46 a7       	lds	r20, 0x76
    bc40:	57 a7       	lds	r21, 0x77
    bc42:	13 c0       	rjmp	.+38     	; 0xbc6a <hal_setCompareValue+0x88>
    bc44:	16 96       	adiw	r26, 0x06	; 6
    bc46:	ed 91       	ld	r30, X+
    bc48:	fc 91       	ld	r31, X
    bc4a:	17 97       	sbiw	r26, 0x07	; 7
    bc4c:	86 a9       	sts	0x46, r24
    bc4e:	97 a9       	sts	0x47, r25
    bc50:	84 17       	cp	r24, r20
    bc52:	95 07       	cpc	r25, r21
    bc54:	70 f0       	brcs	.+28     	; 0xbc72 <hal_setCompareValue+0x90>
    bc56:	66 23       	and	r22, r22
    bc58:	19 f0       	breq	.+6      	; 0xbc60 <hal_setCompareValue+0x7e>
    bc5a:	61 30       	cpi	r22, 0x01	; 1
    bc5c:	61 f4       	brne	.+24     	; 0xbc76 <hal_setCompareValue+0x94>
    bc5e:	03 c0       	rjmp	.+6      	; 0xbc66 <hal_setCompareValue+0x84>
    bc60:	40 a7       	lds	r20, 0x70
    bc62:	51 a7       	lds	r21, 0x71
    bc64:	02 c0       	rjmp	.+4      	; 0xbc6a <hal_setCompareValue+0x88>
    bc66:	42 a7       	lds	r20, 0x72
    bc68:	53 a7       	lds	r21, 0x73
    bc6a:	80 e0       	ldi	r24, 0x00	; 0
    bc6c:	05 c0       	rjmp	.+10     	; 0xbc78 <hal_setCompareValue+0x96>
    bc6e:	8b ef       	ldi	r24, 0xFB	; 251
    bc70:	03 c0       	rjmp	.+6      	; 0xbc78 <hal_setCompareValue+0x96>
    bc72:	82 ef       	ldi	r24, 0xF2	; 242
    bc74:	01 c0       	rjmp	.+2      	; 0xbc78 <hal_setCompareValue+0x96>
    bc76:	8a ef       	ldi	r24, 0xFA	; 250
    bc78:	0f 90       	pop	r0
    bc7a:	0f 90       	pop	r0
    bc7c:	df 91       	pop	r29
    bc7e:	cf 91       	pop	r28
    bc80:	08 95       	ret

0000bc82 <hal_getPeriodValue>:
    bc82:	0f 93       	push	r16
    bc84:	1f 93       	push	r17
    bc86:	cf 93       	push	r28
    bc88:	df 93       	push	r29
    bc8a:	0f 92       	push	r0
    bc8c:	0f 92       	push	r0
    bc8e:	cd b7       	in	r28, 0x3d	; 61
    bc90:	de b7       	in	r29, 0x3e	; 62
    bc92:	89 83       	std	Y+1, r24	; 0x01
    bc94:	9a 83       	std	Y+2, r25	; 0x02
    bc96:	e9 81       	ldd	r30, Y+1	; 0x01
    bc98:	fa 81       	ldd	r31, Y+2	; 0x02
    bc9a:	80 91 17 24 	lds	r24, 0x2417
    bc9e:	90 91 18 24 	lds	r25, 0x2418
    bca2:	24 81       	ldd	r18, Z+4	; 0x04
    bca4:	35 81       	ldd	r19, Z+5	; 0x05
    bca6:	28 17       	cp	r18, r24
    bca8:	39 07       	cpc	r19, r25
    bcaa:	b1 f4       	brne	.+44     	; 0xbcd8 <hal_getPeriodValue+0x56>
    bcac:	e9 81       	ldd	r30, Y+1	; 0x01
    bcae:	fa 81       	ldd	r31, Y+2	; 0x02
    bcb0:	01 90       	ld	r0, Z+
    bcb2:	f0 81       	ld	r31, Z
    bcb4:	e0 2d       	mov	r30, r0
    bcb6:	a4 81       	ldd	r26, Z+4	; 0x04
    bcb8:	b5 81       	ldd	r27, Z+5	; 0x05
    bcba:	10 97       	sbiw	r26, 0x00	; 0
    bcbc:	29 f0       	breq	.+10     	; 0xbcc8 <hal_getPeriodValue+0x46>
    bcbe:	96 96       	adiw	r26, 0x26	; 38
    bcc0:	0d 91       	ld	r16, X+
    bcc2:	1c 91       	ld	r17, X
    bcc4:	97 97       	sbiw	r26, 0x27	; 39
    bcc6:	05 c0       	rjmp	.+10     	; 0xbcd2 <hal_getPeriodValue+0x50>
    bcc8:	06 80       	ldd	r0, Z+6	; 0x06
    bcca:	f7 81       	ldd	r31, Z+7	; 0x07
    bccc:	e0 2d       	mov	r30, r0
    bcce:	06 a1       	lds	r16, 0x46
    bcd0:	17 a1       	lds	r17, 0x47
    bcd2:	20 e0       	ldi	r18, 0x00	; 0
    bcd4:	30 e0       	ldi	r19, 0x00	; 0
    bcd6:	04 c0       	rjmp	.+8      	; 0xbce0 <hal_getPeriodValue+0x5e>
    bcd8:	0b ef       	ldi	r16, 0xFB	; 251
    bcda:	1f ef       	ldi	r17, 0xFF	; 255
    bcdc:	2f ef       	ldi	r18, 0xFF	; 255
    bcde:	3f ef       	ldi	r19, 0xFF	; 255
    bce0:	b8 01       	movw	r22, r16
    bce2:	c9 01       	movw	r24, r18
    bce4:	0f 90       	pop	r0
    bce6:	0f 90       	pop	r0
    bce8:	df 91       	pop	r29
    bcea:	cf 91       	pop	r28
    bcec:	1f 91       	pop	r17
    bcee:	0f 91       	pop	r16
    bcf0:	08 95       	ret

0000bcf2 <hal_getCompareValue>:
    bcf2:	0f 93       	push	r16
    bcf4:	1f 93       	push	r17
    bcf6:	cf 93       	push	r28
    bcf8:	df 93       	push	r29
    bcfa:	0f 92       	push	r0
    bcfc:	0f 92       	push	r0
    bcfe:	cd b7       	in	r28, 0x3d	; 61
    bd00:	de b7       	in	r29, 0x3e	; 62
    bd02:	89 83       	std	Y+1, r24	; 0x01
    bd04:	9a 83       	std	Y+2, r25	; 0x02
    bd06:	e9 81       	ldd	r30, Y+1	; 0x01
    bd08:	fa 81       	ldd	r31, Y+2	; 0x02
    bd0a:	80 91 17 24 	lds	r24, 0x2417
    bd0e:	90 91 18 24 	lds	r25, 0x2418
    bd12:	24 81       	ldd	r18, Z+4	; 0x04
    bd14:	35 81       	ldd	r19, Z+5	; 0x05
    bd16:	28 17       	cp	r18, r24
    bd18:	39 07       	cpc	r19, r25
    bd1a:	79 f5       	brne	.+94     	; 0xbd7a <hal_getCompareValue+0x88>
    bd1c:	e9 81       	ldd	r30, Y+1	; 0x01
    bd1e:	fa 81       	ldd	r31, Y+2	; 0x02
    bd20:	a0 81       	ld	r26, Z
    bd22:	b1 81       	ldd	r27, Z+1	; 0x01
    bd24:	14 96       	adiw	r26, 0x04	; 4
    bd26:	ed 91       	ld	r30, X+
    bd28:	fc 91       	ld	r31, X
    bd2a:	15 97       	sbiw	r26, 0x05	; 5
    bd2c:	30 97       	sbiw	r30, 0x00	; 0
    bd2e:	a1 f0       	breq	.+40     	; 0xbd58 <hal_getCompareValue+0x66>
    bd30:	61 30       	cpi	r22, 0x01	; 1
    bd32:	39 f0       	breq	.+14     	; 0xbd42 <hal_getCompareValue+0x50>
    bd34:	61 30       	cpi	r22, 0x01	; 1
    bd36:	c8 f0       	brcs	.+50     	; 0xbd6a <hal_getCompareValue+0x78>
    bd38:	62 30       	cpi	r22, 0x02	; 2
    bd3a:	41 f0       	breq	.+16     	; 0xbd4c <hal_getCompareValue+0x5a>
    bd3c:	63 30       	cpi	r22, 0x03	; 3
    bd3e:	11 f5       	brne	.+68     	; 0xbd84 <hal_getCompareValue+0x92>
    bd40:	08 c0       	rjmp	.+16     	; 0xbd52 <hal_getCompareValue+0x60>
    bd42:	02 a5       	lds	r16, 0x62
    bd44:	13 a5       	lds	r17, 0x63
    bd46:	20 e0       	ldi	r18, 0x00	; 0
    bd48:	30 e0       	ldi	r19, 0x00	; 0
    bd4a:	20 c0       	rjmp	.+64     	; 0xbd8c <hal_getCompareValue+0x9a>
    bd4c:	04 a5       	lds	r16, 0x64
    bd4e:	15 a5       	lds	r17, 0x65
    bd50:	fa cf       	rjmp	.-12     	; 0xbd46 <hal_getCompareValue+0x54>
    bd52:	06 a5       	lds	r16, 0x66
    bd54:	17 a5       	lds	r17, 0x67
    bd56:	f7 cf       	rjmp	.-18     	; 0xbd46 <hal_getCompareValue+0x54>
    bd58:	66 23       	and	r22, r22
    bd5a:	19 f0       	breq	.+6      	; 0xbd62 <hal_getCompareValue+0x70>
    bd5c:	61 30       	cpi	r22, 0x01	; 1
    bd5e:	91 f4       	brne	.+36     	; 0xbd84 <hal_getCompareValue+0x92>
    bd60:	07 c0       	rjmp	.+14     	; 0xbd70 <hal_getCompareValue+0x7e>
    bd62:	16 96       	adiw	r26, 0x06	; 6
    bd64:	ed 91       	ld	r30, X+
    bd66:	fc 91       	ld	r31, X
    bd68:	17 97       	sbiw	r26, 0x07	; 7
    bd6a:	00 a5       	lds	r16, 0x60
    bd6c:	11 a5       	lds	r17, 0x61
    bd6e:	eb cf       	rjmp	.-42     	; 0xbd46 <hal_getCompareValue+0x54>
    bd70:	16 96       	adiw	r26, 0x06	; 6
    bd72:	ed 91       	ld	r30, X+
    bd74:	fc 91       	ld	r31, X
    bd76:	17 97       	sbiw	r26, 0x07	; 7
    bd78:	e4 cf       	rjmp	.-56     	; 0xbd42 <hal_getCompareValue+0x50>
    bd7a:	0b ef       	ldi	r16, 0xFB	; 251
    bd7c:	1f ef       	ldi	r17, 0xFF	; 255
    bd7e:	2f ef       	ldi	r18, 0xFF	; 255
    bd80:	3f ef       	ldi	r19, 0xFF	; 255
    bd82:	04 c0       	rjmp	.+8      	; 0xbd8c <hal_getCompareValue+0x9a>
    bd84:	0a ef       	ldi	r16, 0xFA	; 250
    bd86:	1f ef       	ldi	r17, 0xFF	; 255
    bd88:	2f ef       	ldi	r18, 0xFF	; 255
    bd8a:	3f ef       	ldi	r19, 0xFF	; 255
    bd8c:	b8 01       	movw	r22, r16
    bd8e:	c9 01       	movw	r24, r18
    bd90:	0f 90       	pop	r0
    bd92:	0f 90       	pop	r0
    bd94:	df 91       	pop	r29
    bd96:	cf 91       	pop	r28
    bd98:	1f 91       	pop	r17
    bd9a:	0f 91       	pop	r16
    bd9c:	08 95       	ret

0000bd9e <hal_getIntStatus>:
    bd9e:	cf 93       	push	r28
    bda0:	df 93       	push	r29
    bda2:	0f 92       	push	r0
    bda4:	0f 92       	push	r0
    bda6:	cd b7       	in	r28, 0x3d	; 61
    bda8:	de b7       	in	r29, 0x3e	; 62
    bdaa:	89 83       	std	Y+1, r24	; 0x01
    bdac:	9a 83       	std	Y+2, r25	; 0x02
    bdae:	e9 81       	ldd	r30, Y+1	; 0x01
    bdb0:	fa 81       	ldd	r31, Y+2	; 0x02
    bdb2:	80 91 17 24 	lds	r24, 0x2417
    bdb6:	90 91 18 24 	lds	r25, 0x2418
    bdba:	24 81       	ldd	r18, Z+4	; 0x04
    bdbc:	35 81       	ldd	r19, Z+5	; 0x05
    bdbe:	28 17       	cp	r18, r24
    bdc0:	39 07       	cpc	r19, r25
    bdc2:	09 f0       	breq	.+2      	; 0xbdc6 <hal_getIntStatus+0x28>
    bdc4:	44 c0       	rjmp	.+136    	; 0xbe4e <hal_getIntStatus+0xb0>
    bdc6:	e9 81       	ldd	r30, Y+1	; 0x01
    bdc8:	fa 81       	ldd	r31, Y+2	; 0x02
    bdca:	a0 81       	ld	r26, Z
    bdcc:	b1 81       	ldd	r27, Z+1	; 0x01
    bdce:	14 96       	adiw	r26, 0x04	; 4
    bdd0:	ed 91       	ld	r30, X+
    bdd2:	fc 91       	ld	r31, X
    bdd4:	15 97       	sbiw	r26, 0x05	; 5
    bdd6:	30 97       	sbiw	r30, 0x00	; 0
    bdd8:	c1 f0       	breq	.+48     	; 0xbe0a <hal_getIntStatus+0x6c>
    bdda:	62 30       	cpi	r22, 0x02	; 2
    bddc:	61 f0       	breq	.+24     	; 0xbdf6 <hal_getIntStatus+0x58>
    bdde:	63 30       	cpi	r22, 0x03	; 3
    bde0:	28 f4       	brcc	.+10     	; 0xbdec <hal_getIntStatus+0x4e>
    bde2:	66 23       	and	r22, r22
    bde4:	e9 f0       	breq	.+58     	; 0xbe20 <hal_getIntStatus+0x82>
    bde6:	61 30       	cpi	r22, 0x01	; 1
    bde8:	a9 f5       	brne	.+106    	; 0xbe54 <hal_getIntStatus+0xb6>
    bdea:	23 c0       	rjmp	.+70     	; 0xbe32 <hal_getIntStatus+0x94>
    bdec:	63 30       	cpi	r22, 0x03	; 3
    bdee:	41 f0       	breq	.+16     	; 0xbe00 <hal_getIntStatus+0x62>
    bdf0:	64 30       	cpi	r22, 0x04	; 4
    bdf2:	81 f5       	brne	.+96     	; 0xbe54 <hal_getIntStatus+0xb6>
    bdf4:	27 c0       	rjmp	.+78     	; 0xbe44 <hal_getIntStatus+0xa6>
    bdf6:	84 85       	ldd	r24, Z+12	; 0x0c
    bdf8:	90 e0       	ldi	r25, 0x00	; 0
    bdfa:	80 74       	andi	r24, 0x40	; 64
    bdfc:	90 70       	andi	r25, 0x00	; 0
    bdfe:	2c c0       	rjmp	.+88     	; 0xbe58 <hal_getIntStatus+0xba>
    be00:	84 85       	ldd	r24, Z+12	; 0x0c
    be02:	90 e0       	ldi	r25, 0x00	; 0
    be04:	80 78       	andi	r24, 0x80	; 128
    be06:	90 70       	andi	r25, 0x00	; 0
    be08:	27 c0       	rjmp	.+78     	; 0xbe58 <hal_getIntStatus+0xba>
    be0a:	61 30       	cpi	r22, 0x01	; 1
    be0c:	71 f0       	breq	.+28     	; 0xbe2a <hal_getIntStatus+0x8c>
    be0e:	61 30       	cpi	r22, 0x01	; 1
    be10:	18 f0       	brcs	.+6      	; 0xbe18 <hal_getIntStatus+0x7a>
    be12:	64 30       	cpi	r22, 0x04	; 4
    be14:	f9 f4       	brne	.+62     	; 0xbe54 <hal_getIntStatus+0xb6>
    be16:	12 c0       	rjmp	.+36     	; 0xbe3c <hal_getIntStatus+0x9e>
    be18:	16 96       	adiw	r26, 0x06	; 6
    be1a:	ed 91       	ld	r30, X+
    be1c:	fc 91       	ld	r31, X
    be1e:	17 97       	sbiw	r26, 0x07	; 7
    be20:	84 85       	ldd	r24, Z+12	; 0x0c
    be22:	90 e0       	ldi	r25, 0x00	; 0
    be24:	80 71       	andi	r24, 0x10	; 16
    be26:	90 70       	andi	r25, 0x00	; 0
    be28:	17 c0       	rjmp	.+46     	; 0xbe58 <hal_getIntStatus+0xba>
    be2a:	16 96       	adiw	r26, 0x06	; 6
    be2c:	ed 91       	ld	r30, X+
    be2e:	fc 91       	ld	r31, X
    be30:	17 97       	sbiw	r26, 0x07	; 7
    be32:	84 85       	ldd	r24, Z+12	; 0x0c
    be34:	90 e0       	ldi	r25, 0x00	; 0
    be36:	80 72       	andi	r24, 0x20	; 32
    be38:	90 70       	andi	r25, 0x00	; 0
    be3a:	0e c0       	rjmp	.+28     	; 0xbe58 <hal_getIntStatus+0xba>
    be3c:	16 96       	adiw	r26, 0x06	; 6
    be3e:	ed 91       	ld	r30, X+
    be40:	fc 91       	ld	r31, X
    be42:	17 97       	sbiw	r26, 0x07	; 7
    be44:	84 85       	ldd	r24, Z+12	; 0x0c
    be46:	90 e0       	ldi	r25, 0x00	; 0
    be48:	81 70       	andi	r24, 0x01	; 1
    be4a:	90 70       	andi	r25, 0x00	; 0
    be4c:	05 c0       	rjmp	.+10     	; 0xbe58 <hal_getIntStatus+0xba>
    be4e:	8b ef       	ldi	r24, 0xFB	; 251
    be50:	9f ef       	ldi	r25, 0xFF	; 255
    be52:	02 c0       	rjmp	.+4      	; 0xbe58 <hal_getIntStatus+0xba>
    be54:	8a ef       	ldi	r24, 0xFA	; 250
    be56:	9f ef       	ldi	r25, 0xFF	; 255
    be58:	0f 90       	pop	r0
    be5a:	0f 90       	pop	r0
    be5c:	df 91       	pop	r29
    be5e:	cf 91       	pop	r28
    be60:	08 95       	ret

0000be62 <hal_clearIntStatus>:
    be62:	cf 93       	push	r28
    be64:	df 93       	push	r29
    be66:	0f 92       	push	r0
    be68:	0f 92       	push	r0
    be6a:	cd b7       	in	r28, 0x3d	; 61
    be6c:	de b7       	in	r29, 0x3e	; 62
    be6e:	89 83       	std	Y+1, r24	; 0x01
    be70:	9a 83       	std	Y+2, r25	; 0x02
    be72:	e9 81       	ldd	r30, Y+1	; 0x01
    be74:	fa 81       	ldd	r31, Y+2	; 0x02
    be76:	80 91 17 24 	lds	r24, 0x2417
    be7a:	90 91 18 24 	lds	r25, 0x2418
    be7e:	24 81       	ldd	r18, Z+4	; 0x04
    be80:	35 81       	ldd	r19, Z+5	; 0x05
    be82:	28 17       	cp	r18, r24
    be84:	39 07       	cpc	r19, r25
    be86:	e1 f5       	brne	.+120    	; 0xbf00 <hal_clearIntStatus+0x9e>
    be88:	e9 81       	ldd	r30, Y+1	; 0x01
    be8a:	fa 81       	ldd	r31, Y+2	; 0x02
    be8c:	a0 81       	ld	r26, Z
    be8e:	b1 81       	ldd	r27, Z+1	; 0x01
    be90:	14 96       	adiw	r26, 0x04	; 4
    be92:	ed 91       	ld	r30, X+
    be94:	fc 91       	ld	r31, X
    be96:	15 97       	sbiw	r26, 0x05	; 5
    be98:	30 97       	sbiw	r30, 0x00	; 0
    be9a:	a1 f0       	breq	.+40     	; 0xbec4 <hal_clearIntStatus+0x62>
    be9c:	62 30       	cpi	r22, 0x02	; 2
    be9e:	61 f0       	breq	.+24     	; 0xbeb8 <hal_clearIntStatus+0x56>
    bea0:	63 30       	cpi	r22, 0x03	; 3
    bea2:	28 f4       	brcc	.+10     	; 0xbeae <hal_clearIntStatus+0x4c>
    bea4:	66 23       	and	r22, r22
    bea6:	c9 f0       	breq	.+50     	; 0xbeda <hal_clearIntStatus+0x78>
    bea8:	61 30       	cpi	r22, 0x01	; 1
    beaa:	61 f5       	brne	.+88     	; 0xbf04 <hal_clearIntStatus+0xa2>
    beac:	1d c0       	rjmp	.+58     	; 0xbee8 <hal_clearIntStatus+0x86>
    beae:	63 30       	cpi	r22, 0x03	; 3
    beb0:	31 f0       	breq	.+12     	; 0xbebe <hal_clearIntStatus+0x5c>
    beb2:	64 30       	cpi	r22, 0x04	; 4
    beb4:	39 f5       	brne	.+78     	; 0xbf04 <hal_clearIntStatus+0xa2>
    beb6:	1f c0       	rjmp	.+62     	; 0xbef6 <hal_clearIntStatus+0x94>
    beb8:	84 85       	ldd	r24, Z+12	; 0x0c
    beba:	80 64       	ori	r24, 0x40	; 64
    bebc:	1e c0       	rjmp	.+60     	; 0xbefa <hal_clearIntStatus+0x98>
    bebe:	84 85       	ldd	r24, Z+12	; 0x0c
    bec0:	80 68       	ori	r24, 0x80	; 128
    bec2:	1b c0       	rjmp	.+54     	; 0xbefa <hal_clearIntStatus+0x98>
    bec4:	61 30       	cpi	r22, 0x01	; 1
    bec6:	61 f0       	breq	.+24     	; 0xbee0 <hal_clearIntStatus+0x7e>
    bec8:	61 30       	cpi	r22, 0x01	; 1
    beca:	18 f0       	brcs	.+6      	; 0xbed2 <hal_clearIntStatus+0x70>
    becc:	64 30       	cpi	r22, 0x04	; 4
    bece:	d1 f4       	brne	.+52     	; 0xbf04 <hal_clearIntStatus+0xa2>
    bed0:	0e c0       	rjmp	.+28     	; 0xbeee <hal_clearIntStatus+0x8c>
    bed2:	16 96       	adiw	r26, 0x06	; 6
    bed4:	ed 91       	ld	r30, X+
    bed6:	fc 91       	ld	r31, X
    bed8:	17 97       	sbiw	r26, 0x07	; 7
    beda:	84 85       	ldd	r24, Z+12	; 0x0c
    bedc:	80 61       	ori	r24, 0x10	; 16
    bede:	0d c0       	rjmp	.+26     	; 0xbefa <hal_clearIntStatus+0x98>
    bee0:	16 96       	adiw	r26, 0x06	; 6
    bee2:	ed 91       	ld	r30, X+
    bee4:	fc 91       	ld	r31, X
    bee6:	17 97       	sbiw	r26, 0x07	; 7
    bee8:	84 85       	ldd	r24, Z+12	; 0x0c
    beea:	80 62       	ori	r24, 0x20	; 32
    beec:	06 c0       	rjmp	.+12     	; 0xbefa <hal_clearIntStatus+0x98>
    beee:	16 96       	adiw	r26, 0x06	; 6
    bef0:	ed 91       	ld	r30, X+
    bef2:	fc 91       	ld	r31, X
    bef4:	17 97       	sbiw	r26, 0x07	; 7
    bef6:	84 85       	ldd	r24, Z+12	; 0x0c
    bef8:	81 60       	ori	r24, 0x01	; 1
    befa:	84 87       	std	Z+12, r24	; 0x0c
    befc:	80 e0       	ldi	r24, 0x00	; 0
    befe:	03 c0       	rjmp	.+6      	; 0xbf06 <hal_clearIntStatus+0xa4>
    bf00:	8b ef       	ldi	r24, 0xFB	; 251
    bf02:	01 c0       	rjmp	.+2      	; 0xbf06 <hal_clearIntStatus+0xa4>
    bf04:	8a ef       	ldi	r24, 0xFA	; 250
    bf06:	0f 90       	pop	r0
    bf08:	0f 90       	pop	r0
    bf0a:	df 91       	pop	r29
    bf0c:	cf 91       	pop	r28
    bf0e:	08 95       	ret

0000bf10 <hal_enableCompareChannel>:
    bf10:	0f 93       	push	r16
    bf12:	1f 93       	push	r17
    bf14:	cf 93       	push	r28
    bf16:	df 93       	push	r29
    bf18:	cd b7       	in	r28, 0x3d	; 61
    bf1a:	de b7       	in	r29, 0x3e	; 62
    bf1c:	28 97       	sbiw	r28, 0x08	; 8
    bf1e:	cd bf       	out	0x3d, r28	; 61
    bf20:	de bf       	out	0x3e, r29	; 62
    bf22:	8e 83       	std	Y+6, r24	; 0x06
    bf24:	9f 83       	std	Y+7, r25	; 0x07
    bf26:	04 2f       	mov	r16, r20
    bf28:	ee 81       	ldd	r30, Y+6	; 0x06
    bf2a:	ff 81       	ldd	r31, Y+7	; 0x07
    bf2c:	80 91 17 24 	lds	r24, 0x2417
    bf30:	90 91 18 24 	lds	r25, 0x2418
    bf34:	24 81       	ldd	r18, Z+4	; 0x04
    bf36:	35 81       	ldd	r19, Z+5	; 0x05
    bf38:	28 17       	cp	r18, r24
    bf3a:	39 07       	cpc	r19, r25
    bf3c:	09 f0       	breq	.+2      	; 0xbf40 <hal_enableCompareChannel+0x30>
    bf3e:	f1 c0       	rjmp	.+482    	; 0xc122 <hal_enableCompareChannel+0x212>
    bf40:	ee 81       	ldd	r30, Y+6	; 0x06
    bf42:	ff 81       	ldd	r31, Y+7	; 0x07
    bf44:	01 90       	ld	r0, Z+
    bf46:	f0 81       	ld	r31, Z
    bf48:	e0 2d       	mov	r30, r0
    bf4a:	a4 81       	ldd	r26, Z+4	; 0x04
    bf4c:	b5 81       	ldd	r27, Z+5	; 0x05
    bf4e:	10 97       	sbiw	r26, 0x00	; 0
    bf50:	71 f1       	breq	.+92     	; 0xbfae <hal_enableCompareChannel+0x9e>
    bf52:	61 30       	cpi	r22, 0x01	; 1
    bf54:	89 f0       	breq	.+34     	; 0xbf78 <hal_enableCompareChannel+0x68>
    bf56:	61 30       	cpi	r22, 0x01	; 1
    bf58:	30 f0       	brcs	.+12     	; 0xbf66 <hal_enableCompareChannel+0x56>
    bf5a:	62 30       	cpi	r22, 0x02	; 2
    bf5c:	b1 f0       	breq	.+44     	; 0xbf8a <hal_enableCompareChannel+0x7a>
    bf5e:	63 30       	cpi	r22, 0x03	; 3
    bf60:	09 f0       	breq	.+2      	; 0xbf64 <hal_enableCompareChannel+0x54>
    bf62:	e1 c0       	rjmp	.+450    	; 0xc126 <hal_enableCompareChannel+0x216>
    bf64:	1b c0       	rjmp	.+54     	; 0xbf9c <hal_enableCompareChannel+0x8c>
    bf66:	11 96       	adiw	r26, 0x01	; 1
    bf68:	8c 91       	ld	r24, X
    bf6a:	11 97       	sbiw	r26, 0x01	; 1
    bf6c:	80 61       	ori	r24, 0x10	; 16
    bf6e:	11 96       	adiw	r26, 0x01	; 1
    bf70:	8c 93       	st	X, r24
    bf72:	11 97       	sbiw	r26, 0x01	; 1
    bf74:	11 e0       	ldi	r17, 0x01	; 1
    bf76:	36 c0       	rjmp	.+108    	; 0xbfe4 <hal_enableCompareChannel+0xd4>
    bf78:	11 96       	adiw	r26, 0x01	; 1
    bf7a:	8c 91       	ld	r24, X
    bf7c:	11 97       	sbiw	r26, 0x01	; 1
    bf7e:	80 62       	ori	r24, 0x20	; 32
    bf80:	11 96       	adiw	r26, 0x01	; 1
    bf82:	8c 93       	st	X, r24
    bf84:	11 97       	sbiw	r26, 0x01	; 1
    bf86:	12 e0       	ldi	r17, 0x02	; 2
    bf88:	2d c0       	rjmp	.+90     	; 0xbfe4 <hal_enableCompareChannel+0xd4>
    bf8a:	11 96       	adiw	r26, 0x01	; 1
    bf8c:	8c 91       	ld	r24, X
    bf8e:	11 97       	sbiw	r26, 0x01	; 1
    bf90:	80 64       	ori	r24, 0x40	; 64
    bf92:	11 96       	adiw	r26, 0x01	; 1
    bf94:	8c 93       	st	X, r24
    bf96:	11 97       	sbiw	r26, 0x01	; 1
    bf98:	14 e0       	ldi	r17, 0x04	; 4
    bf9a:	24 c0       	rjmp	.+72     	; 0xbfe4 <hal_enableCompareChannel+0xd4>
    bf9c:	11 96       	adiw	r26, 0x01	; 1
    bf9e:	8c 91       	ld	r24, X
    bfa0:	11 97       	sbiw	r26, 0x01	; 1
    bfa2:	80 68       	ori	r24, 0x80	; 128
    bfa4:	11 96       	adiw	r26, 0x01	; 1
    bfa6:	8c 93       	st	X, r24
    bfa8:	11 97       	sbiw	r26, 0x01	; 1
    bfaa:	18 e0       	ldi	r17, 0x08	; 8
    bfac:	1b c0       	rjmp	.+54     	; 0xbfe4 <hal_enableCompareChannel+0xd4>
    bfae:	66 23       	and	r22, r22
    bfb0:	21 f0       	breq	.+8      	; 0xbfba <hal_enableCompareChannel+0xaa>
    bfb2:	61 30       	cpi	r22, 0x01	; 1
    bfb4:	09 f0       	breq	.+2      	; 0xbfb8 <hal_enableCompareChannel+0xa8>
    bfb6:	b7 c0       	rjmp	.+366    	; 0xc126 <hal_enableCompareChannel+0x216>
    bfb8:	0b c0       	rjmp	.+22     	; 0xbfd0 <hal_enableCompareChannel+0xc0>
    bfba:	a6 81       	ldd	r26, Z+6	; 0x06
    bfbc:	b7 81       	ldd	r27, Z+7	; 0x07
    bfbe:	11 96       	adiw	r26, 0x01	; 1
    bfc0:	8c 91       	ld	r24, X
    bfc2:	11 97       	sbiw	r26, 0x01	; 1
    bfc4:	80 61       	ori	r24, 0x10	; 16
    bfc6:	11 96       	adiw	r26, 0x01	; 1
    bfc8:	8c 93       	st	X, r24
    bfca:	11 97       	sbiw	r26, 0x01	; 1
    bfcc:	10 e1       	ldi	r17, 0x10	; 16
    bfce:	0a c0       	rjmp	.+20     	; 0xbfe4 <hal_enableCompareChannel+0xd4>
    bfd0:	a6 81       	ldd	r26, Z+6	; 0x06
    bfd2:	b7 81       	ldd	r27, Z+7	; 0x07
    bfd4:	11 96       	adiw	r26, 0x01	; 1
    bfd6:	8c 91       	ld	r24, X
    bfd8:	11 97       	sbiw	r26, 0x01	; 1
    bfda:	80 62       	ori	r24, 0x20	; 32
    bfdc:	11 96       	adiw	r26, 0x01	; 1
    bfde:	8c 93       	st	X, r24
    bfe0:	11 97       	sbiw	r26, 0x01	; 1
    bfe2:	10 e2       	ldi	r17, 0x20	; 32
    bfe4:	e0 81       	ld	r30, Z
    bfe6:	ea 50       	subi	r30, 0x0A	; 10
    bfe8:	ea 31       	cpi	r30, 0x1A	; 26
    bfea:	28 f4       	brcc	.+10     	; 0xbff6 <hal_enableCompareChannel+0xe6>
    bfec:	f0 e0       	ldi	r31, 0x00	; 0
    bfee:	eb 5d       	subi	r30, 0xDB	; 219
    bff0:	fb 4d       	sbci	r31, 0xDB	; 219
    bff2:	90 81       	ld	r25, Z
    bff4:	01 c0       	rjmp	.+2      	; 0xbff8 <hal_enableCompareChannel+0xe8>
    bff6:	92 e0       	ldi	r25, 0x02	; 2
    bff8:	00 23       	and	r16, r16
    bffa:	31 f0       	breq	.+12     	; 0xc008 <hal_enableCompareChannel+0xf8>
    bffc:	1a 83       	std	Y+2, r17	; 0x02
    bffe:	81 e0       	ldi	r24, 0x01	; 1
    c000:	8b 83       	std	Y+3, r24	; 0x03
    c002:	19 82       	std	Y+1, r1	; 0x01
    c004:	1d 82       	std	Y+5, r1	; 0x05
    c006:	04 c0       	rjmp	.+8      	; 0xc010 <hal_enableCompareChannel+0x100>
    c008:	1a 82       	std	Y+2, r1	; 0x02
    c00a:	19 83       	std	Y+1, r17	; 0x01
    c00c:	84 e0       	ldi	r24, 0x04	; 4
    c00e:	8c 83       	std	Y+4, r24	; 0x04
    c010:	89 2f       	mov	r24, r25
    c012:	29 81       	ldd	r18, Y+1	; 0x01
    c014:	3a 81       	ldd	r19, Y+2	; 0x02
    c016:	4b 81       	ldd	r20, Y+3	; 0x03
    c018:	5c 81       	ldd	r21, Y+4	; 0x04
    c01a:	6d 81       	ldd	r22, Y+5	; 0x05
    c01c:	98 87       	std	Y+8, r25	; 0x08
    c01e:	0e 94 91 2a 	call	0x5522	; 0x5522 <hal_configureGpioPort>
    c022:	98 85       	ldd	r25, Y+8	; 0x08
    c024:	87 fd       	sbrc	r24, 7
    c026:	81 c0       	rjmp	.+258    	; 0xc12a <hal_enableCompareChannel+0x21a>
    c028:	00 23       	and	r16, r16
    c02a:	09 f4       	brne	.+2      	; 0xc02e <hal_enableCompareChannel+0x11e>
    c02c:	80 c0       	rjmp	.+256    	; 0xc12e <hal_enableCompareChannel+0x21e>
    c02e:	95 30       	cpi	r25, 0x05	; 5
    c030:	09 f4       	brne	.+2      	; 0xc034 <hal_enableCompareChannel+0x124>
    c032:	4d c0       	rjmp	.+154    	; 0xc0ce <hal_enableCompareChannel+0x1be>
    c034:	96 30       	cpi	r25, 0x06	; 6
    c036:	80 f4       	brcc	.+32     	; 0xc058 <hal_enableCompareChannel+0x148>
    c038:	92 30       	cpi	r25, 0x02	; 2
    c03a:	91 f1       	breq	.+100    	; 0xc0a0 <hal_enableCompareChannel+0x190>
    c03c:	93 30       	cpi	r25, 0x03	; 3
    c03e:	30 f4       	brcc	.+12     	; 0xc04c <hal_enableCompareChannel+0x13c>
    c040:	99 23       	and	r25, r25
    c042:	e9 f0       	breq	.+58     	; 0xc07e <hal_enableCompareChannel+0x16e>
    c044:	91 30       	cpi	r25, 0x01	; 1
    c046:	09 f0       	breq	.+2      	; 0xc04a <hal_enableCompareChannel+0x13a>
    c048:	72 c0       	rjmp	.+228    	; 0xc12e <hal_enableCompareChannel+0x21e>
    c04a:	21 c0       	rjmp	.+66     	; 0xc08e <hal_enableCompareChannel+0x17e>
    c04c:	93 30       	cpi	r25, 0x03	; 3
    c04e:	81 f1       	breq	.+96     	; 0xc0b0 <hal_enableCompareChannel+0x1a0>
    c050:	94 30       	cpi	r25, 0x04	; 4
    c052:	09 f0       	breq	.+2      	; 0xc056 <hal_enableCompareChannel+0x146>
    c054:	6c c0       	rjmp	.+216    	; 0xc12e <hal_enableCompareChannel+0x21e>
    c056:	34 c0       	rjmp	.+104    	; 0xc0c0 <hal_enableCompareChannel+0x1b0>
    c058:	98 30       	cpi	r25, 0x08	; 8
    c05a:	09 f4       	brne	.+2      	; 0xc05e <hal_enableCompareChannel+0x14e>
    c05c:	4d c0       	rjmp	.+154    	; 0xc0f8 <hal_enableCompareChannel+0x1e8>
    c05e:	99 30       	cpi	r25, 0x09	; 9
    c060:	38 f4       	brcc	.+14     	; 0xc070 <hal_enableCompareChannel+0x160>
    c062:	96 30       	cpi	r25, 0x06	; 6
    c064:	09 f4       	brne	.+2      	; 0xc068 <hal_enableCompareChannel+0x158>
    c066:	3a c0       	rjmp	.+116    	; 0xc0dc <hal_enableCompareChannel+0x1cc>
    c068:	97 30       	cpi	r25, 0x07	; 7
    c06a:	09 f0       	breq	.+2      	; 0xc06e <hal_enableCompareChannel+0x15e>
    c06c:	60 c0       	rjmp	.+192    	; 0xc12e <hal_enableCompareChannel+0x21e>
    c06e:	3d c0       	rjmp	.+122    	; 0xc0ea <hal_enableCompareChannel+0x1da>
    c070:	99 30       	cpi	r25, 0x09	; 9
    c072:	09 f4       	brne	.+2      	; 0xc076 <hal_enableCompareChannel+0x166>
    c074:	48 c0       	rjmp	.+144    	; 0xc106 <hal_enableCompareChannel+0x1f6>
    c076:	9a 30       	cpi	r25, 0x0A	; 10
    c078:	09 f0       	breq	.+2      	; 0xc07c <hal_enableCompareChannel+0x16c>
    c07a:	59 c0       	rjmp	.+178    	; 0xc12e <hal_enableCompareChannel+0x21e>
    c07c:	4b c0       	rjmp	.+150    	; 0xc114 <hal_enableCompareChannel+0x204>
    c07e:	80 91 00 06 	lds	r24, 0x0600
    c082:	81 23       	and	r24, r17
    c084:	09 f4       	brne	.+2      	; 0xc088 <hal_enableCompareChannel+0x178>
    c086:	53 c0       	rjmp	.+166    	; 0xc12e <hal_enableCompareChannel+0x21e>
    c088:	e0 e0       	ldi	r30, 0x00	; 0
    c08a:	f6 e0       	ldi	r31, 0x06	; 6
    c08c:	07 c0       	rjmp	.+14     	; 0xc09c <hal_enableCompareChannel+0x18c>
    c08e:	80 91 20 06 	lds	r24, 0x0620
    c092:	81 23       	and	r24, r17
    c094:	09 f4       	brne	.+2      	; 0xc098 <hal_enableCompareChannel+0x188>
    c096:	4b c0       	rjmp	.+150    	; 0xc12e <hal_enableCompareChannel+0x21e>
    c098:	e0 e2       	ldi	r30, 0x20	; 32
    c09a:	f6 e0       	ldi	r31, 0x06	; 6
    c09c:	16 83       	std	Z+6, r17	; 0x06
    c09e:	47 c0       	rjmp	.+142    	; 0xc12e <hal_enableCompareChannel+0x21e>
    c0a0:	80 91 40 06 	lds	r24, 0x0640
    c0a4:	81 23       	and	r24, r17
    c0a6:	09 f4       	brne	.+2      	; 0xc0aa <hal_enableCompareChannel+0x19a>
    c0a8:	42 c0       	rjmp	.+132    	; 0xc12e <hal_enableCompareChannel+0x21e>
    c0aa:	e0 e4       	ldi	r30, 0x40	; 64
    c0ac:	f6 e0       	ldi	r31, 0x06	; 6
    c0ae:	f6 cf       	rjmp	.-20     	; 0xc09c <hal_enableCompareChannel+0x18c>
    c0b0:	80 91 60 06 	lds	r24, 0x0660
    c0b4:	81 23       	and	r24, r17
    c0b6:	09 f4       	brne	.+2      	; 0xc0ba <hal_enableCompareChannel+0x1aa>
    c0b8:	3a c0       	rjmp	.+116    	; 0xc12e <hal_enableCompareChannel+0x21e>
    c0ba:	e0 e6       	ldi	r30, 0x60	; 96
    c0bc:	f6 e0       	ldi	r31, 0x06	; 6
    c0be:	ee cf       	rjmp	.-36     	; 0xc09c <hal_enableCompareChannel+0x18c>
    c0c0:	80 91 80 06 	lds	r24, 0x0680
    c0c4:	81 23       	and	r24, r17
    c0c6:	99 f1       	breq	.+102    	; 0xc12e <hal_enableCompareChannel+0x21e>
    c0c8:	e0 e8       	ldi	r30, 0x80	; 128
    c0ca:	f6 e0       	ldi	r31, 0x06	; 6
    c0cc:	e7 cf       	rjmp	.-50     	; 0xc09c <hal_enableCompareChannel+0x18c>
    c0ce:	80 91 a0 06 	lds	r24, 0x06A0
    c0d2:	81 23       	and	r24, r17
    c0d4:	61 f1       	breq	.+88     	; 0xc12e <hal_enableCompareChannel+0x21e>
    c0d6:	e0 ea       	ldi	r30, 0xA0	; 160
    c0d8:	f6 e0       	ldi	r31, 0x06	; 6
    c0da:	e0 cf       	rjmp	.-64     	; 0xc09c <hal_enableCompareChannel+0x18c>
    c0dc:	80 91 e0 06 	lds	r24, 0x06E0
    c0e0:	81 23       	and	r24, r17
    c0e2:	29 f1       	breq	.+74     	; 0xc12e <hal_enableCompareChannel+0x21e>
    c0e4:	e0 ee       	ldi	r30, 0xE0	; 224
    c0e6:	f6 e0       	ldi	r31, 0x06	; 6
    c0e8:	d9 cf       	rjmp	.-78     	; 0xc09c <hal_enableCompareChannel+0x18c>
    c0ea:	80 91 00 07 	lds	r24, 0x0700
    c0ee:	81 23       	and	r24, r17
    c0f0:	f1 f0       	breq	.+60     	; 0xc12e <hal_enableCompareChannel+0x21e>
    c0f2:	e0 e0       	ldi	r30, 0x00	; 0
    c0f4:	f7 e0       	ldi	r31, 0x07	; 7
    c0f6:	d2 cf       	rjmp	.-92     	; 0xc09c <hal_enableCompareChannel+0x18c>
    c0f8:	80 91 20 07 	lds	r24, 0x0720
    c0fc:	81 23       	and	r24, r17
    c0fe:	b9 f0       	breq	.+46     	; 0xc12e <hal_enableCompareChannel+0x21e>
    c100:	e0 e2       	ldi	r30, 0x20	; 32
    c102:	f7 e0       	ldi	r31, 0x07	; 7
    c104:	cb cf       	rjmp	.-106    	; 0xc09c <hal_enableCompareChannel+0x18c>
    c106:	80 91 c0 07 	lds	r24, 0x07C0
    c10a:	81 23       	and	r24, r17
    c10c:	81 f0       	breq	.+32     	; 0xc12e <hal_enableCompareChannel+0x21e>
    c10e:	e0 ec       	ldi	r30, 0xC0	; 192
    c110:	f7 e0       	ldi	r31, 0x07	; 7
    c112:	c4 cf       	rjmp	.-120    	; 0xc09c <hal_enableCompareChannel+0x18c>
    c114:	80 91 e0 07 	lds	r24, 0x07E0
    c118:	81 23       	and	r24, r17
    c11a:	49 f0       	breq	.+18     	; 0xc12e <hal_enableCompareChannel+0x21e>
    c11c:	e0 ee       	ldi	r30, 0xE0	; 224
    c11e:	f7 e0       	ldi	r31, 0x07	; 7
    c120:	bd cf       	rjmp	.-134    	; 0xc09c <hal_enableCompareChannel+0x18c>
    c122:	8b ef       	ldi	r24, 0xFB	; 251
    c124:	05 c0       	rjmp	.+10     	; 0xc130 <hal_enableCompareChannel+0x220>
    c126:	8a ef       	ldi	r24, 0xFA	; 250
    c128:	03 c0       	rjmp	.+6      	; 0xc130 <hal_enableCompareChannel+0x220>
    c12a:	81 ef       	ldi	r24, 0xF1	; 241
    c12c:	01 c0       	rjmp	.+2      	; 0xc130 <hal_enableCompareChannel+0x220>
    c12e:	80 e0       	ldi	r24, 0x00	; 0
    c130:	28 96       	adiw	r28, 0x08	; 8
    c132:	cd bf       	out	0x3d, r28	; 61
    c134:	de bf       	out	0x3e, r29	; 62
    c136:	df 91       	pop	r29
    c138:	cf 91       	pop	r28
    c13a:	1f 91       	pop	r17
    c13c:	0f 91       	pop	r16
    c13e:	08 95       	ret

0000c140 <hal_disableCompareChannel>:
    c140:	cf 93       	push	r28
    c142:	df 93       	push	r29
    c144:	cd b7       	in	r28, 0x3d	; 61
    c146:	de b7       	in	r29, 0x3e	; 62
    c148:	27 97       	sbiw	r28, 0x07	; 7
    c14a:	cd bf       	out	0x3d, r28	; 61
    c14c:	de bf       	out	0x3e, r29	; 62
    c14e:	8e 83       	std	Y+6, r24	; 0x06
    c150:	9f 83       	std	Y+7, r25	; 0x07
    c152:	ee 81       	ldd	r30, Y+6	; 0x06
    c154:	ff 81       	ldd	r31, Y+7	; 0x07
    c156:	80 91 17 24 	lds	r24, 0x2417
    c15a:	90 91 18 24 	lds	r25, 0x2418
    c15e:	24 81       	ldd	r18, Z+4	; 0x04
    c160:	35 81       	ldd	r19, Z+5	; 0x05
    c162:	28 17       	cp	r18, r24
    c164:	39 07       	cpc	r19, r25
    c166:	09 f0       	breq	.+2      	; 0xc16a <hal_disableCompareChannel+0x2a>
    c168:	57 c0       	rjmp	.+174    	; 0xc218 <hal_disableCompareChannel+0xd8>
    c16a:	ee 81       	ldd	r30, Y+6	; 0x06
    c16c:	ff 81       	ldd	r31, Y+7	; 0x07
    c16e:	a0 81       	ld	r26, Z
    c170:	b1 81       	ldd	r27, Z+1	; 0x01
    c172:	14 96       	adiw	r26, 0x04	; 4
    c174:	ed 91       	ld	r30, X+
    c176:	fc 91       	ld	r31, X
    c178:	15 97       	sbiw	r26, 0x05	; 5
    c17a:	30 97       	sbiw	r30, 0x00	; 0
    c17c:	f1 f0       	breq	.+60     	; 0xc1ba <hal_disableCompareChannel+0x7a>
    c17e:	61 30       	cpi	r22, 0x01	; 1
    c180:	69 f0       	breq	.+26     	; 0xc19c <hal_disableCompareChannel+0x5c>
    c182:	61 30       	cpi	r22, 0x01	; 1
    c184:	30 f0       	brcs	.+12     	; 0xc192 <hal_disableCompareChannel+0x52>
    c186:	62 30       	cpi	r22, 0x02	; 2
    c188:	71 f0       	breq	.+28     	; 0xc1a6 <hal_disableCompareChannel+0x66>
    c18a:	63 30       	cpi	r22, 0x03	; 3
    c18c:	09 f0       	breq	.+2      	; 0xc190 <hal_disableCompareChannel+0x50>
    c18e:	46 c0       	rjmp	.+140    	; 0xc21c <hal_disableCompareChannel+0xdc>
    c190:	0f c0       	rjmp	.+30     	; 0xc1b0 <hal_disableCompareChannel+0x70>
    c192:	81 81       	ldd	r24, Z+1	; 0x01
    c194:	8f 7e       	andi	r24, 0xEF	; 239
    c196:	81 83       	std	Z+1, r24	; 0x01
    c198:	21 e0       	ldi	r18, 0x01	; 1
    c19a:	25 c0       	rjmp	.+74     	; 0xc1e6 <hal_disableCompareChannel+0xa6>
    c19c:	81 81       	ldd	r24, Z+1	; 0x01
    c19e:	8f 7d       	andi	r24, 0xDF	; 223
    c1a0:	81 83       	std	Z+1, r24	; 0x01
    c1a2:	22 e0       	ldi	r18, 0x02	; 2
    c1a4:	20 c0       	rjmp	.+64     	; 0xc1e6 <hal_disableCompareChannel+0xa6>
    c1a6:	81 81       	ldd	r24, Z+1	; 0x01
    c1a8:	8f 7b       	andi	r24, 0xBF	; 191
    c1aa:	81 83       	std	Z+1, r24	; 0x01
    c1ac:	24 e0       	ldi	r18, 0x04	; 4
    c1ae:	1b c0       	rjmp	.+54     	; 0xc1e6 <hal_disableCompareChannel+0xa6>
    c1b0:	81 81       	ldd	r24, Z+1	; 0x01
    c1b2:	8f 77       	andi	r24, 0x7F	; 127
    c1b4:	81 83       	std	Z+1, r24	; 0x01
    c1b6:	28 e0       	ldi	r18, 0x08	; 8
    c1b8:	16 c0       	rjmp	.+44     	; 0xc1e6 <hal_disableCompareChannel+0xa6>
    c1ba:	66 23       	and	r22, r22
    c1bc:	19 f0       	breq	.+6      	; 0xc1c4 <hal_disableCompareChannel+0x84>
    c1be:	61 30       	cpi	r22, 0x01	; 1
    c1c0:	69 f5       	brne	.+90     	; 0xc21c <hal_disableCompareChannel+0xdc>
    c1c2:	09 c0       	rjmp	.+18     	; 0xc1d6 <hal_disableCompareChannel+0x96>
    c1c4:	16 96       	adiw	r26, 0x06	; 6
    c1c6:	ed 91       	ld	r30, X+
    c1c8:	fc 91       	ld	r31, X
    c1ca:	17 97       	sbiw	r26, 0x07	; 7
    c1cc:	81 81       	ldd	r24, Z+1	; 0x01
    c1ce:	8f 7e       	andi	r24, 0xEF	; 239
    c1d0:	81 83       	std	Z+1, r24	; 0x01
    c1d2:	20 e1       	ldi	r18, 0x10	; 16
    c1d4:	08 c0       	rjmp	.+16     	; 0xc1e6 <hal_disableCompareChannel+0xa6>
    c1d6:	16 96       	adiw	r26, 0x06	; 6
    c1d8:	ed 91       	ld	r30, X+
    c1da:	fc 91       	ld	r31, X
    c1dc:	17 97       	sbiw	r26, 0x07	; 7
    c1de:	81 81       	ldd	r24, Z+1	; 0x01
    c1e0:	8f 7d       	andi	r24, 0xDF	; 223
    c1e2:	81 83       	std	Z+1, r24	; 0x01
    c1e4:	20 e2       	ldi	r18, 0x20	; 32
    c1e6:	ec 91       	ld	r30, X
    c1e8:	ea 50       	subi	r30, 0x0A	; 10
    c1ea:	ea 31       	cpi	r30, 0x1A	; 26
    c1ec:	28 f4       	brcc	.+10     	; 0xc1f8 <hal_disableCompareChannel+0xb8>
    c1ee:	f0 e0       	ldi	r31, 0x00	; 0
    c1f0:	e1 5c       	subi	r30, 0xC1	; 193
    c1f2:	fb 4d       	sbci	r31, 0xDB	; 219
    c1f4:	80 81       	ld	r24, Z
    c1f6:	01 c0       	rjmp	.+2      	; 0xc1fa <hal_disableCompareChannel+0xba>
    c1f8:	82 e0       	ldi	r24, 0x02	; 2
    c1fa:	29 83       	std	Y+1, r18	; 0x01
    c1fc:	1a 82       	std	Y+2, r1	; 0x02
    c1fe:	1b 82       	std	Y+3, r1	; 0x03
    c200:	94 e0       	ldi	r25, 0x04	; 4
    c202:	9c 83       	std	Y+4, r25	; 0x04
    c204:	30 e0       	ldi	r19, 0x00	; 0
    c206:	40 e0       	ldi	r20, 0x00	; 0
    c208:	54 e0       	ldi	r21, 0x04	; 4
    c20a:	6d 81       	ldd	r22, Y+5	; 0x05
    c20c:	0e 94 91 2a 	call	0x5522	; 0x5522 <hal_configureGpioPort>
    c210:	87 ff       	sbrs	r24, 7
    c212:	06 c0       	rjmp	.+12     	; 0xc220 <hal_disableCompareChannel+0xe0>
    c214:	81 ef       	ldi	r24, 0xF1	; 241
    c216:	05 c0       	rjmp	.+10     	; 0xc222 <hal_disableCompareChannel+0xe2>
    c218:	8b ef       	ldi	r24, 0xFB	; 251
    c21a:	03 c0       	rjmp	.+6      	; 0xc222 <hal_disableCompareChannel+0xe2>
    c21c:	8a ef       	ldi	r24, 0xFA	; 250
    c21e:	01 c0       	rjmp	.+2      	; 0xc222 <hal_disableCompareChannel+0xe2>
    c220:	80 e0       	ldi	r24, 0x00	; 0
    c222:	27 96       	adiw	r28, 0x07	; 7
    c224:	cd bf       	out	0x3d, r28	; 61
    c226:	de bf       	out	0x3e, r29	; 62
    c228:	df 91       	pop	r29
    c22a:	cf 91       	pop	r28
    c22c:	08 95       	ret

0000c22e <hal_requestWdAccess>:
    c22e:	cf 93       	push	r28
    c230:	df 93       	push	r29
    c232:	00 d0       	rcall	.+0      	; 0xc234 <hal_requestWdAccess+0x6>
    c234:	cd b7       	in	r28, 0x3d	; 61
    c236:	de b7       	in	r29, 0x3e	; 62
    c238:	8f b7       	in	r24, 0x3f	; 63
    c23a:	89 83       	std	Y+1, r24	; 0x01
    c23c:	f8 94       	cli
    c23e:	e0 91 59 24 	lds	r30, 0x2459
    c242:	f0 91 5a 24 	lds	r31, 0x245A
    c246:	82 81       	ldd	r24, Z+2	; 0x02
    c248:	93 81       	ldd	r25, Z+3	; 0x03
    c24a:	00 97       	sbiw	r24, 0x00	; 0
    c24c:	11 f5       	brne	.+68     	; 0xc292 <hal_requestWdAccess+0x64>
    c24e:	85 e0       	ldi	r24, 0x05	; 5
    c250:	90 e0       	ldi	r25, 0x00	; 0
    c252:	0e 94 5e 8b 	call	0x116bc	; 0x116bc <utl_createLink>
    c256:	8a 83       	std	Y+2, r24	; 0x02
    c258:	9b 83       	std	Y+3, r25	; 0x03
    c25a:	8a 81       	ldd	r24, Y+2	; 0x02
    c25c:	9b 81       	ldd	r25, Y+3	; 0x03
    c25e:	97 fd       	sbrc	r25, 7
    c260:	1d c0       	rjmp	.+58     	; 0xc29c <hal_requestWdAccess+0x6e>
    c262:	ea 81       	ldd	r30, Y+2	; 0x02
    c264:	fb 81       	ldd	r31, Y+3	; 0x03
    c266:	01 90       	ld	r0, Z+
    c268:	f0 81       	ld	r31, Z
    c26a:	e0 2d       	mov	r30, r0
    c26c:	10 82       	st	Z, r1
    c26e:	11 82       	std	Z+1, r1	; 0x01
    c270:	12 82       	std	Z+2, r1	; 0x02
    c272:	13 82       	std	Z+3, r1	; 0x03
    c274:	14 82       	std	Z+4, r1	; 0x04
    c276:	80 91 59 24 	lds	r24, 0x2459
    c27a:	90 91 5a 24 	lds	r25, 0x245A
    c27e:	6a 81       	ldd	r22, Y+2	; 0x02
    c280:	7b 81       	ldd	r23, Y+3	; 0x03
    c282:	41 e0       	ldi	r20, 0x01	; 1
    c284:	0e 94 6e 89 	call	0x112dc	; 0x112dc <utl_insertLink>
    c288:	89 81       	ldd	r24, Y+1	; 0x01
    c28a:	8f bf       	out	0x3f, r24	; 63
    c28c:	8a 81       	ldd	r24, Y+2	; 0x02
    c28e:	9b 81       	ldd	r25, Y+3	; 0x03
    c290:	07 c0       	rjmp	.+14     	; 0xc2a0 <hal_requestWdAccess+0x72>
    c292:	89 81       	ldd	r24, Y+1	; 0x01
    c294:	8f bf       	out	0x3f, r24	; 63
    c296:	8d ef       	ldi	r24, 0xFD	; 253
    c298:	9f ef       	ldi	r25, 0xFF	; 255
    c29a:	02 c0       	rjmp	.+4      	; 0xc2a0 <hal_requestWdAccess+0x72>
    c29c:	8f ef       	ldi	r24, 0xFF	; 255
    c29e:	9f ef       	ldi	r25, 0xFF	; 255
    c2a0:	23 96       	adiw	r28, 0x03	; 3
    c2a2:	cd bf       	out	0x3d, r28	; 61
    c2a4:	de bf       	out	0x3e, r29	; 62
    c2a6:	df 91       	pop	r29
    c2a8:	cf 91       	pop	r28
    c2aa:	08 95       	ret

0000c2ac <hal_releaseWdAccess>:
    c2ac:	cf 93       	push	r28
    c2ae:	df 93       	push	r29
    c2b0:	00 d0       	rcall	.+0      	; 0xc2b2 <hal_releaseWdAccess+0x6>
    c2b2:	cd b7       	in	r28, 0x3d	; 61
    c2b4:	de b7       	in	r29, 0x3e	; 62
    c2b6:	8a 83       	std	Y+2, r24	; 0x02
    c2b8:	9b 83       	std	Y+3, r25	; 0x03
    c2ba:	8f b7       	in	r24, 0x3f	; 63
    c2bc:	89 83       	std	Y+1, r24	; 0x01
    c2be:	f8 94       	cli
    c2c0:	ea 81       	ldd	r30, Y+2	; 0x02
    c2c2:	fb 81       	ldd	r31, Y+3	; 0x03
    c2c4:	80 91 59 24 	lds	r24, 0x2459
    c2c8:	90 91 5a 24 	lds	r25, 0x245A
    c2cc:	24 81       	ldd	r18, Z+4	; 0x04
    c2ce:	35 81       	ldd	r19, Z+5	; 0x05
    c2d0:	28 17       	cp	r18, r24
    c2d2:	39 07       	cpc	r19, r25
    c2d4:	21 f0       	breq	.+8      	; 0xc2de <hal_releaseWdAccess+0x32>
    c2d6:	89 81       	ldd	r24, Y+1	; 0x01
    c2d8:	8f bf       	out	0x3f, r24	; 63
    c2da:	8e ef       	ldi	r24, 0xFE	; 254
    c2dc:	11 c0       	rjmp	.+34     	; 0xc300 <hal_releaseWdAccess+0x54>
    c2de:	8a 81       	ldd	r24, Y+2	; 0x02
    c2e0:	9b 81       	ldd	r25, Y+3	; 0x03
    c2e2:	88 ed       	ldi	r24, 0xD8	; 216
    c2e4:	84 bf       	out	0x34, r24	; 52
    c2e6:	10 92 80 00 	sts	0x0080, r1
    c2ea:	80 91 59 24 	lds	r24, 0x2459
    c2ee:	90 91 5a 24 	lds	r25, 0x245A
    c2f2:	6a 81       	ldd	r22, Y+2	; 0x02
    c2f4:	7b 81       	ldd	r23, Y+3	; 0x03
    c2f6:	0e 94 6a 8a 	call	0x114d4	; 0x114d4 <utl_destroyLink>
    c2fa:	89 81       	ldd	r24, Y+1	; 0x01
    c2fc:	8f bf       	out	0x3f, r24	; 63
    c2fe:	80 e0       	ldi	r24, 0x00	; 0
    c300:	23 96       	adiw	r28, 0x03	; 3
    c302:	cd bf       	out	0x3d, r28	; 61
    c304:	de bf       	out	0x3e, r29	; 62
    c306:	df 91       	pop	r29
    c308:	cf 91       	pop	r28
    c30a:	08 95       	ret

0000c30c <hal_configureWd>:
    c30c:	cf 93       	push	r28
    c30e:	df 93       	push	r29
    c310:	00 d0       	rcall	.+0      	; 0xc312 <hal_configureWd+0x6>
    c312:	cd b7       	in	r28, 0x3d	; 61
    c314:	de b7       	in	r29, 0x3e	; 62
    c316:	8a 83       	std	Y+2, r24	; 0x02
    c318:	9b 83       	std	Y+3, r25	; 0x03
    c31a:	ca 01       	movw	r24, r20
    c31c:	db 01       	movw	r26, r22
    c31e:	2f b7       	in	r18, 0x3f	; 63
    c320:	29 83       	std	Y+1, r18	; 0x01
    c322:	f8 94       	cli
    c324:	89 30       	cpi	r24, 0x09	; 9
    c326:	91 05       	cpc	r25, r1
    c328:	a1 05       	cpc	r26, r1
    c32a:	b1 05       	cpc	r27, r1
    c32c:	08 f4       	brcc	.+2      	; 0xc330 <hal_configureWd+0x24>
    c32e:	47 c0       	rjmp	.+142    	; 0xc3be <hal_configureWd+0xb2>
    c330:	81 31       	cpi	r24, 0x11	; 17
    c332:	91 05       	cpc	r25, r1
    c334:	a1 05       	cpc	r26, r1
    c336:	b1 05       	cpc	r27, r1
    c338:	08 f4       	brcc	.+2      	; 0xc33c <hal_configureWd+0x30>
    c33a:	43 c0       	rjmp	.+134    	; 0xc3c2 <hal_configureWd+0xb6>
    c33c:	81 32       	cpi	r24, 0x21	; 33
    c33e:	91 05       	cpc	r25, r1
    c340:	a1 05       	cpc	r26, r1
    c342:	b1 05       	cpc	r27, r1
    c344:	08 f4       	brcc	.+2      	; 0xc348 <hal_configureWd+0x3c>
    c346:	3f c0       	rjmp	.+126    	; 0xc3c6 <hal_configureWd+0xba>
    c348:	81 34       	cpi	r24, 0x41	; 65
    c34a:	91 05       	cpc	r25, r1
    c34c:	a1 05       	cpc	r26, r1
    c34e:	b1 05       	cpc	r27, r1
    c350:	e0 f1       	brcs	.+120    	; 0xc3ca <hal_configureWd+0xbe>
    c352:	8e 37       	cpi	r24, 0x7E	; 126
    c354:	91 05       	cpc	r25, r1
    c356:	a1 05       	cpc	r26, r1
    c358:	b1 05       	cpc	r27, r1
    c35a:	c8 f1       	brcs	.+114    	; 0xc3ce <hal_configureWd+0xc2>
    c35c:	8b 3f       	cpi	r24, 0xFB	; 251
    c35e:	91 05       	cpc	r25, r1
    c360:	a1 05       	cpc	r26, r1
    c362:	b1 05       	cpc	r27, r1
    c364:	b0 f1       	brcs	.+108    	; 0xc3d2 <hal_configureWd+0xc6>
    c366:	85 3f       	cpi	r24, 0xF5	; 245
    c368:	21 e0       	ldi	r18, 0x01	; 1
    c36a:	92 07       	cpc	r25, r18
    c36c:	20 e0       	ldi	r18, 0x00	; 0
    c36e:	a2 07       	cpc	r26, r18
    c370:	20 e0       	ldi	r18, 0x00	; 0
    c372:	b2 07       	cpc	r27, r18
    c374:	80 f1       	brcs	.+96     	; 0xc3d6 <hal_configureWd+0xca>
    c376:	89 3e       	cpi	r24, 0xE9	; 233
    c378:	23 e0       	ldi	r18, 0x03	; 3
    c37a:	92 07       	cpc	r25, r18
    c37c:	20 e0       	ldi	r18, 0x00	; 0
    c37e:	a2 07       	cpc	r26, r18
    c380:	20 e0       	ldi	r18, 0x00	; 0
    c382:	b2 07       	cpc	r27, r18
    c384:	50 f1       	brcs	.+84     	; 0xc3da <hal_configureWd+0xce>
    c386:	81 3d       	cpi	r24, 0xD1	; 209
    c388:	27 e0       	ldi	r18, 0x07	; 7
    c38a:	92 07       	cpc	r25, r18
    c38c:	20 e0       	ldi	r18, 0x00	; 0
    c38e:	a2 07       	cpc	r26, r18
    c390:	20 e0       	ldi	r18, 0x00	; 0
    c392:	b2 07       	cpc	r27, r18
    c394:	20 f1       	brcs	.+72     	; 0xc3de <hal_configureWd+0xd2>
    c396:	81 3a       	cpi	r24, 0xA1	; 161
    c398:	2f e0       	ldi	r18, 0x0F	; 15
    c39a:	92 07       	cpc	r25, r18
    c39c:	20 e0       	ldi	r18, 0x00	; 0
    c39e:	a2 07       	cpc	r26, r18
    c3a0:	20 e0       	ldi	r18, 0x00	; 0
    c3a2:	b2 07       	cpc	r27, r18
    c3a4:	f0 f0       	brcs	.+60     	; 0xc3e2 <hal_configureWd+0xd6>
    c3a6:	81 34       	cpi	r24, 0x41	; 65
    c3a8:	2f e1       	ldi	r18, 0x1F	; 31
    c3aa:	92 07       	cpc	r25, r18
    c3ac:	20 e0       	ldi	r18, 0x00	; 0
    c3ae:	a2 07       	cpc	r26, r18
    c3b0:	20 e0       	ldi	r18, 0x00	; 0
    c3b2:	b2 07       	cpc	r27, r18
    c3b4:	c0 f0       	brcs	.+48     	; 0xc3e6 <hal_configureWd+0xda>
    c3b6:	89 81       	ldd	r24, Y+1	; 0x01
    c3b8:	8f bf       	out	0x3f, r24	; 63
    c3ba:	8c ef       	ldi	r24, 0xFC	; 252
    c3bc:	3e c0       	rjmp	.+124    	; 0xc43a <hal_configureWd+0x12e>
    c3be:	60 e0       	ldi	r22, 0x00	; 0
    c3c0:	13 c0       	rjmp	.+38     	; 0xc3e8 <hal_configureWd+0xdc>
    c3c2:	64 e0       	ldi	r22, 0x04	; 4
    c3c4:	11 c0       	rjmp	.+34     	; 0xc3e8 <hal_configureWd+0xdc>
    c3c6:	68 e0       	ldi	r22, 0x08	; 8
    c3c8:	0f c0       	rjmp	.+30     	; 0xc3e8 <hal_configureWd+0xdc>
    c3ca:	6c e0       	ldi	r22, 0x0C	; 12
    c3cc:	0d c0       	rjmp	.+26     	; 0xc3e8 <hal_configureWd+0xdc>
    c3ce:	60 e1       	ldi	r22, 0x10	; 16
    c3d0:	0b c0       	rjmp	.+22     	; 0xc3e8 <hal_configureWd+0xdc>
    c3d2:	64 e1       	ldi	r22, 0x14	; 20
    c3d4:	09 c0       	rjmp	.+18     	; 0xc3e8 <hal_configureWd+0xdc>
    c3d6:	68 e1       	ldi	r22, 0x18	; 24
    c3d8:	07 c0       	rjmp	.+14     	; 0xc3e8 <hal_configureWd+0xdc>
    c3da:	6c e1       	ldi	r22, 0x1C	; 28
    c3dc:	05 c0       	rjmp	.+10     	; 0xc3e8 <hal_configureWd+0xdc>
    c3de:	60 e2       	ldi	r22, 0x20	; 32
    c3e0:	03 c0       	rjmp	.+6      	; 0xc3e8 <hal_configureWd+0xdc>
    c3e2:	64 e2       	ldi	r22, 0x24	; 36
    c3e4:	01 c0       	rjmp	.+2      	; 0xc3e8 <hal_configureWd+0xdc>
    c3e6:	68 e2       	ldi	r22, 0x28	; 40
    c3e8:	ea 81       	ldd	r30, Y+2	; 0x02
    c3ea:	fb 81       	ldd	r31, Y+3	; 0x03
    c3ec:	40 91 59 24 	lds	r20, 0x2459
    c3f0:	50 91 5a 24 	lds	r21, 0x245A
    c3f4:	24 81       	ldd	r18, Z+4	; 0x04
    c3f6:	35 81       	ldd	r19, Z+5	; 0x05
    c3f8:	24 17       	cp	r18, r20
    c3fa:	35 07       	cpc	r19, r21
    c3fc:	21 f0       	breq	.+8      	; 0xc406 <hal_configureWd+0xfa>
    c3fe:	89 81       	ldd	r24, Y+1	; 0x01
    c400:	8f bf       	out	0x3f, r24	; 63
    c402:	8e ef       	ldi	r24, 0xFE	; 254
    c404:	1a c0       	rjmp	.+52     	; 0xc43a <hal_configureWd+0x12e>
    c406:	ea 81       	ldd	r30, Y+2	; 0x02
    c408:	fb 81       	ldd	r31, Y+3	; 0x03
    c40a:	01 90       	ld	r0, Z+
    c40c:	f0 81       	ld	r31, Z
    c40e:	e0 2d       	mov	r30, r0
    c410:	28 ed       	ldi	r18, 0xD8	; 216
    c412:	24 bf       	out	0x34, r18	; 52
    c414:	10 92 80 00 	sts	0x0080, r1
    c418:	63 60       	ori	r22, 0x03	; 3
    c41a:	24 bf       	out	0x34, r18	; 52
    c41c:	60 93 80 00 	sts	0x0080, r22
    c420:	81 83       	std	Z+1, r24	; 0x01
    c422:	92 83       	std	Z+2, r25	; 0x02
    c424:	a3 83       	std	Z+3, r26	; 0x03
    c426:	b4 83       	std	Z+4, r27	; 0x04
    c428:	81 e0       	ldi	r24, 0x01	; 1
    c42a:	80 83       	st	Z, r24
    c42c:	80 91 82 00 	lds	r24, 0x0082
    c430:	80 fd       	sbrc	r24, 0
    c432:	fc cf       	rjmp	.-8      	; 0xc42c <hal_configureWd+0x120>
    c434:	89 81       	ldd	r24, Y+1	; 0x01
    c436:	8f bf       	out	0x3f, r24	; 63
    c438:	80 e0       	ldi	r24, 0x00	; 0
    c43a:	23 96       	adiw	r28, 0x03	; 3
    c43c:	cd bf       	out	0x3d, r28	; 61
    c43e:	de bf       	out	0x3e, r29	; 62
    c440:	df 91       	pop	r29
    c442:	cf 91       	pop	r28
    c444:	08 95       	ret

0000c446 <hal_wdDisable>:
    c446:	cf 93       	push	r28
    c448:	df 93       	push	r29
    c44a:	00 d0       	rcall	.+0      	; 0xc44c <hal_wdDisable+0x6>
    c44c:	cd b7       	in	r28, 0x3d	; 61
    c44e:	de b7       	in	r29, 0x3e	; 62
    c450:	8a 83       	std	Y+2, r24	; 0x02
    c452:	9b 83       	std	Y+3, r25	; 0x03
    c454:	8f b7       	in	r24, 0x3f	; 63
    c456:	89 83       	std	Y+1, r24	; 0x01
    c458:	f8 94       	cli
    c45a:	ea 81       	ldd	r30, Y+2	; 0x02
    c45c:	fb 81       	ldd	r31, Y+3	; 0x03
    c45e:	80 91 59 24 	lds	r24, 0x2459
    c462:	90 91 5a 24 	lds	r25, 0x245A
    c466:	24 81       	ldd	r18, Z+4	; 0x04
    c468:	35 81       	ldd	r19, Z+5	; 0x05
    c46a:	28 17       	cp	r18, r24
    c46c:	39 07       	cpc	r19, r25
    c46e:	21 f0       	breq	.+8      	; 0xc478 <hal_wdDisable+0x32>
    c470:	89 81       	ldd	r24, Y+1	; 0x01
    c472:	8f bf       	out	0x3f, r24	; 63
    c474:	8e ef       	ldi	r24, 0xFE	; 254
    c476:	0c c0       	rjmp	.+24     	; 0xc490 <hal_wdDisable+0x4a>
    c478:	8a 81       	ldd	r24, Y+2	; 0x02
    c47a:	9b 81       	ldd	r25, Y+3	; 0x03
    c47c:	88 ed       	ldi	r24, 0xD8	; 216
    c47e:	84 bf       	out	0x34, r24	; 52
    c480:	80 91 80 00 	lds	r24, 0x0080
    c484:	8d 7f       	andi	r24, 0xFD	; 253
    c486:	80 93 80 00 	sts	0x0080, r24
    c48a:	89 81       	ldd	r24, Y+1	; 0x01
    c48c:	8f bf       	out	0x3f, r24	; 63
    c48e:	80 e0       	ldi	r24, 0x00	; 0
    c490:	23 96       	adiw	r28, 0x03	; 3
    c492:	cd bf       	out	0x3d, r28	; 61
    c494:	de bf       	out	0x3e, r29	; 62
    c496:	df 91       	pop	r29
    c498:	cf 91       	pop	r28
    c49a:	08 95       	ret

0000c49c <hal_wdEnable>:
    c49c:	cf 93       	push	r28
    c49e:	df 93       	push	r29
    c4a0:	00 d0       	rcall	.+0      	; 0xc4a2 <hal_wdEnable+0x6>
    c4a2:	cd b7       	in	r28, 0x3d	; 61
    c4a4:	de b7       	in	r29, 0x3e	; 62
    c4a6:	8a 83       	std	Y+2, r24	; 0x02
    c4a8:	9b 83       	std	Y+3, r25	; 0x03
    c4aa:	8f b7       	in	r24, 0x3f	; 63
    c4ac:	89 83       	std	Y+1, r24	; 0x01
    c4ae:	f8 94       	cli
    c4b0:	ea 81       	ldd	r30, Y+2	; 0x02
    c4b2:	fb 81       	ldd	r31, Y+3	; 0x03
    c4b4:	80 91 59 24 	lds	r24, 0x2459
    c4b8:	90 91 5a 24 	lds	r25, 0x245A
    c4bc:	24 81       	ldd	r18, Z+4	; 0x04
    c4be:	35 81       	ldd	r19, Z+5	; 0x05
    c4c0:	28 17       	cp	r18, r24
    c4c2:	39 07       	cpc	r19, r25
    c4c4:	21 f0       	breq	.+8      	; 0xc4ce <hal_wdEnable+0x32>
    c4c6:	89 81       	ldd	r24, Y+1	; 0x01
    c4c8:	8f bf       	out	0x3f, r24	; 63
    c4ca:	8e ef       	ldi	r24, 0xFE	; 254
    c4cc:	1a c0       	rjmp	.+52     	; 0xc502 <hal_wdEnable+0x66>
    c4ce:	ea 81       	ldd	r30, Y+2	; 0x02
    c4d0:	fb 81       	ldd	r31, Y+3	; 0x03
    c4d2:	01 90       	ld	r0, Z+
    c4d4:	f0 81       	ld	r31, Z
    c4d6:	e0 2d       	mov	r30, r0
    c4d8:	80 81       	ld	r24, Z
    c4da:	88 23       	and	r24, r24
    c4dc:	21 f4       	brne	.+8      	; 0xc4e6 <hal_wdEnable+0x4a>
    c4de:	89 81       	ldd	r24, Y+1	; 0x01
    c4e0:	8f bf       	out	0x3f, r24	; 63
    c4e2:	8b ef       	ldi	r24, 0xFB	; 251
    c4e4:	0e c0       	rjmp	.+28     	; 0xc502 <hal_wdEnable+0x66>
    c4e6:	88 ed       	ldi	r24, 0xD8	; 216
    c4e8:	84 bf       	out	0x34, r24	; 52
    c4ea:	80 91 80 00 	lds	r24, 0x0080
    c4ee:	83 60       	ori	r24, 0x03	; 3
    c4f0:	80 93 80 00 	sts	0x0080, r24
    c4f4:	80 91 82 00 	lds	r24, 0x0082
    c4f8:	80 fd       	sbrc	r24, 0
    c4fa:	fc cf       	rjmp	.-8      	; 0xc4f4 <hal_wdEnable+0x58>
    c4fc:	89 81       	ldd	r24, Y+1	; 0x01
    c4fe:	8f bf       	out	0x3f, r24	; 63
    c500:	80 e0       	ldi	r24, 0x00	; 0
    c502:	23 96       	adiw	r28, 0x03	; 3
    c504:	cd bf       	out	0x3d, r28	; 61
    c506:	de bf       	out	0x3e, r29	; 62
    c508:	df 91       	pop	r29
    c50a:	cf 91       	pop	r28
    c50c:	08 95       	ret

0000c50e <__lshrdi3>:
    c50e:	cf 92       	push	r12
    c510:	df 92       	push	r13
    c512:	ef 92       	push	r14
    c514:	ff 92       	push	r15
    c516:	0f 93       	push	r16
    c518:	cf 93       	push	r28
    c51a:	df 93       	push	r29
    c51c:	cd b7       	in	r28, 0x3d	; 61
    c51e:	de b7       	in	r29, 0x3e	; 62
    c520:	60 97       	sbiw	r28, 0x10	; 16
    c522:	cd bf       	out	0x3d, r28	; 61
    c524:	de bf       	out	0x3e, r29	; 62
    c526:	00 23       	and	r16, r16
    c528:	09 f4       	brne	.+2      	; 0xc52c <__lshrdi3+0x1e>
    c52a:	5a c0       	rjmp	.+180    	; 0xc5e0 <__lshrdi3+0xd2>
    c52c:	29 87       	std	Y+9, r18	; 0x09
    c52e:	3a 87       	std	Y+10, r19	; 0x0a
    c530:	4b 87       	std	Y+11, r20	; 0x0b
    c532:	5c 87       	std	Y+12, r21	; 0x0c
    c534:	6d 87       	std	Y+13, r22	; 0x0d
    c536:	7e 87       	std	Y+14, r23	; 0x0e
    c538:	8f 87       	std	Y+15, r24	; 0x0f
    c53a:	98 8b       	std	Y+16, r25	; 0x10
    c53c:	80 e2       	ldi	r24, 0x20	; 32
    c53e:	80 1b       	sub	r24, r16
    c540:	4d 85       	ldd	r20, Y+13	; 0x0d
    c542:	5e 85       	ldd	r21, Y+14	; 0x0e
    c544:	6f 85       	ldd	r22, Y+15	; 0x0f
    c546:	78 89       	ldd	r23, Y+16	; 0x10
    c548:	18 16       	cp	r1, r24
    c54a:	b4 f0       	brlt	.+44     	; 0xc578 <__lshrdi3+0x6a>
    c54c:	1d 82       	std	Y+5, r1	; 0x05
    c54e:	1e 82       	std	Y+6, r1	; 0x06
    c550:	1f 82       	std	Y+7, r1	; 0x07
    c552:	18 86       	std	Y+8, r1	; 0x08
    c554:	99 27       	eor	r25, r25
    c556:	87 fd       	sbrc	r24, 7
    c558:	90 95       	com	r25
    c55a:	90 95       	com	r25
    c55c:	81 95       	neg	r24
    c55e:	9f 4f       	sbci	r25, 0xFF	; 255
    c560:	04 c0       	rjmp	.+8      	; 0xc56a <__lshrdi3+0x5c>
    c562:	76 95       	lsr	r23
    c564:	67 95       	ror	r22
    c566:	57 95       	ror	r21
    c568:	47 95       	ror	r20
    c56a:	8a 95       	dec	r24
    c56c:	d2 f7       	brpl	.-12     	; 0xc562 <__lshrdi3+0x54>
    c56e:	49 83       	std	Y+1, r20	; 0x01
    c570:	5a 83       	std	Y+2, r21	; 0x02
    c572:	6b 83       	std	Y+3, r22	; 0x03
    c574:	7c 83       	std	Y+4, r23	; 0x04
    c576:	2c c0       	rjmp	.+88     	; 0xc5d0 <__lshrdi3+0xc2>
    c578:	6a 01       	movw	r12, r20
    c57a:	7b 01       	movw	r14, r22
    c57c:	00 2e       	mov	r0, r16
    c57e:	04 c0       	rjmp	.+8      	; 0xc588 <__lshrdi3+0x7a>
    c580:	f6 94       	lsr	r15
    c582:	e7 94       	ror	r14
    c584:	d7 94       	ror	r13
    c586:	c7 94       	ror	r12
    c588:	0a 94       	dec	r0
    c58a:	d2 f7       	brpl	.-12     	; 0xc580 <__lshrdi3+0x72>
    c58c:	cd 82       	std	Y+5, r12	; 0x05
    c58e:	de 82       	std	Y+6, r13	; 0x06
    c590:	ef 82       	std	Y+7, r14	; 0x07
    c592:	f8 86       	std	Y+8, r15	; 0x08
    c594:	6a 01       	movw	r12, r20
    c596:	7b 01       	movw	r14, r22
    c598:	04 c0       	rjmp	.+8      	; 0xc5a2 <__lshrdi3+0x94>
    c59a:	cc 0c       	add	r12, r12
    c59c:	dd 1c       	adc	r13, r13
    c59e:	ee 1c       	adc	r14, r14
    c5a0:	ff 1c       	adc	r15, r15
    c5a2:	8a 95       	dec	r24
    c5a4:	d2 f7       	brpl	.-12     	; 0xc59a <__lshrdi3+0x8c>
    c5a6:	d7 01       	movw	r26, r14
    c5a8:	c6 01       	movw	r24, r12
    c5aa:	49 85       	ldd	r20, Y+9	; 0x09
    c5ac:	5a 85       	ldd	r21, Y+10	; 0x0a
    c5ae:	6b 85       	ldd	r22, Y+11	; 0x0b
    c5b0:	7c 85       	ldd	r23, Y+12	; 0x0c
    c5b2:	04 c0       	rjmp	.+8      	; 0xc5bc <__lshrdi3+0xae>
    c5b4:	76 95       	lsr	r23
    c5b6:	67 95       	ror	r22
    c5b8:	57 95       	ror	r21
    c5ba:	47 95       	ror	r20
    c5bc:	0a 95       	dec	r16
    c5be:	d2 f7       	brpl	.-12     	; 0xc5b4 <__lshrdi3+0xa6>
    c5c0:	84 2b       	or	r24, r20
    c5c2:	95 2b       	or	r25, r21
    c5c4:	a6 2b       	or	r26, r22
    c5c6:	b7 2b       	or	r27, r23
    c5c8:	89 83       	std	Y+1, r24	; 0x01
    c5ca:	9a 83       	std	Y+2, r25	; 0x02
    c5cc:	ab 83       	std	Y+3, r26	; 0x03
    c5ce:	bc 83       	std	Y+4, r27	; 0x04
    c5d0:	29 81       	ldd	r18, Y+1	; 0x01
    c5d2:	3a 81       	ldd	r19, Y+2	; 0x02
    c5d4:	4b 81       	ldd	r20, Y+3	; 0x03
    c5d6:	5c 81       	ldd	r21, Y+4	; 0x04
    c5d8:	6d 81       	ldd	r22, Y+5	; 0x05
    c5da:	7e 81       	ldd	r23, Y+6	; 0x06
    c5dc:	8f 81       	ldd	r24, Y+7	; 0x07
    c5de:	98 85       	ldd	r25, Y+8	; 0x08
    c5e0:	60 96       	adiw	r28, 0x10	; 16
    c5e2:	cd bf       	out	0x3d, r28	; 61
    c5e4:	de bf       	out	0x3e, r29	; 62
    c5e6:	df 91       	pop	r29
    c5e8:	cf 91       	pop	r28
    c5ea:	0f 91       	pop	r16
    c5ec:	ff 90       	pop	r15
    c5ee:	ef 90       	pop	r14
    c5f0:	df 90       	pop	r13
    c5f2:	cf 90       	pop	r12
    c5f4:	08 95       	ret

0000c5f6 <arb_consoleInit>:
    c5f6:	cf 92       	push	r12
    c5f8:	df 92       	push	r13
    c5fa:	ef 92       	push	r14
    c5fc:	ff 92       	push	r15
    c5fe:	0f 93       	push	r16
    c600:	1f 93       	push	r17
    c602:	cf 93       	push	r28
    c604:	df 93       	push	r29
    c606:	ec 01       	movw	r28, r24
    c608:	6b 01       	movw	r12, r22
    c60a:	fa 01       	movw	r30, r20
    c60c:	a2 2f       	mov	r26, r18
    c60e:	78 01       	movw	r14, r16
    c610:	81 e6       	ldi	r24, 0x61	; 97
    c612:	93 e6       	ldi	r25, 0x63	; 99
    c614:	61 e0       	ldi	r22, 0x01	; 1
    c616:	70 e0       	ldi	r23, 0x00	; 0
    c618:	40 e0       	ldi	r20, 0x00	; 0
    c61a:	50 e0       	ldi	r21, 0x00	; 0
    c61c:	9f 01       	movw	r18, r30
    c61e:	0a 2f       	mov	r16, r26
    c620:	0e 94 01 84 	call	0x10802	; 0x10802 <arb_threadCreate>
    c624:	80 93 f6 24 	sts	0x24F6, r24
    c628:	90 93 f7 24 	sts	0x24F7, r25
    c62c:	80 91 f6 24 	lds	r24, 0x24F6
    c630:	90 91 f7 24 	lds	r25, 0x24F7
    c634:	97 ff       	sbrs	r25, 7
    c636:	05 c0       	rjmp	.+10     	; 0xc642 <arb_consoleInit+0x4c>
    c638:	80 91 f6 24 	lds	r24, 0x24F6
    c63c:	90 91 f7 24 	lds	r25, 0x24F7
    c640:	37 c0       	rjmp	.+110    	; 0xc6b0 <arb_consoleInit+0xba>
    c642:	ce 01       	movw	r24, r28
    c644:	63 e0       	ldi	r22, 0x03	; 3
    c646:	0e 94 c8 6f 	call	0xdf90	; 0xdf90 <arb_open>
    c64a:	80 93 f8 24 	sts	0x24F8, r24
    c64e:	90 93 f9 24 	sts	0x24F9, r25
    c652:	80 91 f8 24 	lds	r24, 0x24F8
    c656:	90 91 f9 24 	lds	r25, 0x24F9
    c65a:	97 ff       	sbrs	r25, 7
    c65c:	05 c0       	rjmp	.+10     	; 0xc668 <arb_consoleInit+0x72>
    c65e:	80 91 f8 24 	lds	r24, 0x24F8
    c662:	90 91 f9 24 	lds	r25, 0x24F9
    c666:	24 c0       	rjmp	.+72     	; 0xc6b0 <arb_consoleInit+0xba>
    c668:	e0 92 fc 24 	sts	0x24FC, r14
    c66c:	f0 92 fd 24 	sts	0x24FD, r15
    c670:	c6 01       	movw	r24, r12
    c672:	63 e0       	ldi	r22, 0x03	; 3
    c674:	0e 94 c8 6f 	call	0xdf90	; 0xdf90 <arb_open>
    c678:	80 93 fa 24 	sts	0x24FA, r24
    c67c:	90 93 fb 24 	sts	0x24FB, r25
    c680:	80 91 fa 24 	lds	r24, 0x24FA
    c684:	90 91 fb 24 	lds	r25, 0x24FB
    c688:	87 5f       	subi	r24, 0xF7	; 247
    c68a:	9f 4f       	sbci	r25, 0xFF	; 255
    c68c:	29 f4       	brne	.+10     	; 0xc698 <arb_consoleInit+0xa2>
    c68e:	10 92 fa 24 	sts	0x24FA, r1
    c692:	10 92 fb 24 	sts	0x24FB, r1
    c696:	06 c0       	rjmp	.+12     	; 0xc6a4 <arb_consoleInit+0xae>
    c698:	80 91 fa 24 	lds	r24, 0x24FA
    c69c:	90 91 fb 24 	lds	r25, 0x24FB
    c6a0:	97 fd       	sbrc	r25, 7
    c6a2:	02 c0       	rjmp	.+4      	; 0xc6a8 <arb_consoleInit+0xb2>
    c6a4:	80 e0       	ldi	r24, 0x00	; 0
    c6a6:	04 c0       	rjmp	.+8      	; 0xc6b0 <arb_consoleInit+0xba>
    c6a8:	80 91 fa 24 	lds	r24, 0x24FA
    c6ac:	90 91 fb 24 	lds	r25, 0x24FB
    c6b0:	df 91       	pop	r29
    c6b2:	cf 91       	pop	r28
    c6b4:	1f 91       	pop	r17
    c6b6:	0f 91       	pop	r16
    c6b8:	ff 90       	pop	r15
    c6ba:	ef 90       	pop	r14
    c6bc:	df 90       	pop	r13
    c6be:	cf 90       	pop	r12
    c6c0:	08 95       	ret

0000c6c2 <arb_console>:
    c6c2:	2f 92       	push	r2
    c6c4:	3f 92       	push	r3
    c6c6:	4f 92       	push	r4
    c6c8:	5f 92       	push	r5
    c6ca:	6f 92       	push	r6
    c6cc:	7f 92       	push	r7
    c6ce:	8f 92       	push	r8
    c6d0:	9f 92       	push	r9
    c6d2:	af 92       	push	r10
    c6d4:	bf 92       	push	r11
    c6d6:	cf 92       	push	r12
    c6d8:	df 92       	push	r13
    c6da:	ef 92       	push	r14
    c6dc:	ff 92       	push	r15
    c6de:	0f 93       	push	r16
    c6e0:	1f 93       	push	r17
    c6e2:	df 93       	push	r29
    c6e4:	cf 93       	push	r28
    c6e6:	cd b7       	in	r28, 0x3d	; 61
    c6e8:	de b7       	in	r29, 0x3e	; 62
    c6ea:	cb 50       	subi	r28, 0x0B	; 11
    c6ec:	d2 40       	sbci	r29, 0x02	; 2
    c6ee:	cd bf       	out	0x3d, r28	; 61
    c6f0:	de bf       	out	0x3e, r29	; 62
    c6f2:	de 01       	movw	r26, r28
    c6f4:	5a 96       	adiw	r26, 0x1a	; 26
    c6f6:	ed ef       	ldi	r30, 0xFD	; 253
    c6f8:	f1 e2       	ldi	r31, 0x21	; 33
    c6fa:	81 e3       	ldi	r24, 0x31	; 49
    c6fc:	01 90       	ld	r0, Z+
    c6fe:	0d 92       	st	X+, r0
    c700:	81 50       	subi	r24, 0x01	; 1
    c702:	e1 f7       	brne	.-8      	; 0xc6fc <arb_console+0x3a>
    c704:	80 91 f8 24 	lds	r24, 0x24F8
    c708:	90 91 f9 24 	lds	r25, 0x24F9
    c70c:	66 e0       	ldi	r22, 0x06	; 6
    c70e:	70 e0       	ldi	r23, 0x00	; 0
    c710:	20 e0       	ldi	r18, 0x00	; 0
    c712:	30 e0       	ldi	r19, 0x00	; 0
    c714:	40 e0       	ldi	r20, 0x00	; 0
    c716:	50 e0       	ldi	r21, 0x00	; 0
    c718:	0e 94 f0 6d 	call	0xdbe0	; 0xdbe0 <arb_ioctl>
    c71c:	80 91 f8 24 	lds	r24, 0x24F8
    c720:	90 91 f9 24 	lds	r25, 0x24F9
    c724:	67 e0       	ldi	r22, 0x07	; 7
    c726:	70 e0       	ldi	r23, 0x00	; 0
    c728:	20 e3       	ldi	r18, 0x30	; 48
    c72a:	30 e0       	ldi	r19, 0x00	; 0
    c72c:	40 e0       	ldi	r20, 0x00	; 0
    c72e:	50 e0       	ldi	r21, 0x00	; 0
    c730:	0e 94 f0 6d 	call	0xdbe0	; 0xdbe0 <arb_ioctl>
    c734:	80 91 f8 24 	lds	r24, 0x24F8
    c738:	90 91 f9 24 	lds	r25, 0x24F9
    c73c:	68 e0       	ldi	r22, 0x08	; 8
    c73e:	70 e0       	ldi	r23, 0x00	; 0
    c740:	22 e3       	ldi	r18, 0x32	; 50
    c742:	30 e0       	ldi	r19, 0x00	; 0
    c744:	40 e0       	ldi	r20, 0x00	; 0
    c746:	50 e0       	ldi	r21, 0x00	; 0
    c748:	0e 94 f0 6d 	call	0xdbe0	; 0xdbe0 <arb_ioctl>
    c74c:	80 91 f8 24 	lds	r24, 0x24F8
    c750:	90 91 f9 24 	lds	r25, 0x24F9
    c754:	69 e0       	ldi	r22, 0x09	; 9
    c756:	70 e0       	ldi	r23, 0x00	; 0
    c758:	21 e3       	ldi	r18, 0x31	; 49
    c75a:	30 e0       	ldi	r19, 0x00	; 0
    c75c:	40 e0       	ldi	r20, 0x00	; 0
    c75e:	50 e0       	ldi	r21, 0x00	; 0
    c760:	0e 94 f0 6d 	call	0xdbe0	; 0xdbe0 <arb_ioctl>
    c764:	80 91 f8 24 	lds	r24, 0x24F8
    c768:	90 91 f9 24 	lds	r25, 0x24F9
    c76c:	be 01       	movw	r22, r28
    c76e:	66 5e       	subi	r22, 0xE6	; 230
    c770:	7f 4f       	sbci	r23, 0xFF	; 255
    c772:	41 e3       	ldi	r20, 0x31	; 49
    c774:	50 e0       	ldi	r21, 0x00	; 0
    c776:	0e 94 95 6d 	call	0xdb2a	; 0xdb2a <arb_write>
    c77a:	80 91 f8 24 	lds	r24, 0x24F8
    c77e:	90 91 f9 24 	lds	r25, 0x24F9
    c782:	69 e0       	ldi	r22, 0x09	; 9
    c784:	70 e0       	ldi	r23, 0x00	; 0
    c786:	27 e3       	ldi	r18, 0x37	; 55
    c788:	30 e0       	ldi	r19, 0x00	; 0
    c78a:	40 e0       	ldi	r20, 0x00	; 0
    c78c:	50 e0       	ldi	r21, 0x00	; 0
    c78e:	0e 94 f0 6d 	call	0xdbe0	; 0xdbe0 <arb_ioctl>
    c792:	80 91 f8 24 	lds	r24, 0x24F8
    c796:	90 91 f9 24 	lds	r25, 0x24F9
    c79a:	64 e0       	ldi	r22, 0x04	; 4
    c79c:	70 e0       	ldi	r23, 0x00	; 0
    c79e:	20 e0       	ldi	r18, 0x00	; 0
    c7a0:	30 e0       	ldi	r19, 0x00	; 0
    c7a2:	40 e0       	ldi	r20, 0x00	; 0
    c7a4:	50 e0       	ldi	r21, 0x00	; 0
    c7a6:	0e 94 f0 6d 	call	0xdbe0	; 0xdbe0 <arb_ioctl>
    c7aa:	8e 01       	movw	r16, r28
    c7ac:	05 5b       	subi	r16, 0xB5	; 181
    c7ae:	1f 4f       	sbci	r17, 0xFF	; 255
    c7b0:	c6 5f       	subi	r28, 0xF6	; 246
    c7b2:	dd 4f       	sbci	r29, 0xFD	; 253
    c7b4:	08 83       	st	Y, r16
    c7b6:	19 83       	std	Y+1, r17	; 0x01
    c7b8:	ca 50       	subi	r28, 0x0A	; 10
    c7ba:	d2 40       	sbci	r29, 0x02	; 2
    c7bc:	98 01       	movw	r18, r16
    c7be:	40 e0       	ldi	r20, 0x00	; 0
    c7c0:	50 e0       	ldi	r21, 0x00	; 0
    c7c2:	c4 51       	subi	r28, 0x14	; 20
    c7c4:	de 4f       	sbci	r29, 0xFE	; 254
    c7c6:	28 83       	st	Y, r18
    c7c8:	39 83       	std	Y+1, r19	; 0x01
    c7ca:	4a 83       	std	Y+2, r20	; 0x02
    c7cc:	5b 83       	std	Y+3, r21	; 0x03
    c7ce:	cc 5e       	subi	r28, 0xEC	; 236
    c7d0:	d1 40       	sbci	r29, 0x01	; 1
    c7d2:	b8 01       	movw	r22, r16
    c7d4:	60 5f       	subi	r22, 0xF0	; 240
    c7d6:	7f 4f       	sbci	r23, 0xFF	; 255
    c7d8:	c0 51       	subi	r28, 0x10	; 16
    c7da:	de 4f       	sbci	r29, 0xFE	; 254
    c7dc:	68 83       	st	Y, r22
    c7de:	79 83       	std	Y+1, r23	; 0x01
    c7e0:	c0 5f       	subi	r28, 0xF0	; 240
    c7e2:	d1 40       	sbci	r29, 0x01	; 1
    c7e4:	cb 01       	movw	r24, r22
    c7e6:	a0 e0       	ldi	r26, 0x00	; 0
    c7e8:	b0 e0       	ldi	r27, 0x00	; 0
    c7ea:	ce 50       	subi	r28, 0x0E	; 14
    c7ec:	de 4f       	sbci	r29, 0xFE	; 254
    c7ee:	88 83       	st	Y, r24
    c7f0:	99 83       	std	Y+1, r25	; 0x01
    c7f2:	aa 83       	std	Y+2, r26	; 0x02
    c7f4:	bb 83       	std	Y+3, r27	; 0x03
    c7f6:	c2 5f       	subi	r28, 0xF2	; 242
    c7f8:	d1 40       	sbci	r29, 0x01	; 1
    c7fa:	e8 e6       	ldi	r30, 0x68	; 104
    c7fc:	f4 e2       	ldi	r31, 0x24	; 36
    c7fe:	cf 01       	movw	r24, r30
    c800:	a0 e0       	ldi	r26, 0x00	; 0
    c802:	b0 e0       	ldi	r27, 0x00	; 0
    c804:	70 e0       	ldi	r23, 0x00	; 0
    c806:	e7 2e       	mov	r14, r23
    c808:	70 e2       	ldi	r23, 0x20	; 32
    c80a:	f7 2e       	mov	r15, r23
    c80c:	97 01       	movw	r18, r14
    c80e:	40 e0       	ldi	r20, 0x00	; 0
    c810:	50 e0       	ldi	r21, 0x00	; 0
    c812:	7c 01       	movw	r14, r24
    c814:	8d 01       	movw	r16, r26
    c816:	e2 1a       	sub	r14, r18
    c818:	f3 0a       	sbc	r15, r19
    c81a:	04 0b       	sbc	r16, r20
    c81c:	15 0b       	sbc	r17, r21
    c81e:	ca 50       	subi	r28, 0x0A	; 10
    c820:	de 4f       	sbci	r29, 0xFE	; 254
    c822:	e8 82       	st	Y, r14
    c824:	f9 82       	std	Y+1, r15	; 0x01
    c826:	0a 83       	std	Y+2, r16	; 0x02
    c828:	1b 83       	std	Y+3, r17	; 0x03
    c82a:	c6 5f       	subi	r28, 0xF6	; 246
    c82c:	d1 40       	sbci	r29, 0x01	; 1
    c82e:	0e ee       	ldi	r16, 0xEE	; 238
    c830:	17 e2       	ldi	r17, 0x27	; 39
    c832:	78 01       	movw	r14, r16
    c834:	00 e0       	ldi	r16, 0x00	; 0
    c836:	10 e0       	ldi	r17, 0x00	; 0
    c838:	c6 50       	subi	r28, 0x06	; 6
    c83a:	de 4f       	sbci	r29, 0xFE	; 254
    c83c:	e8 82       	st	Y, r14
    c83e:	f9 82       	std	Y+1, r15	; 0x01
    c840:	0a 83       	std	Y+2, r16	; 0x02
    c842:	1b 83       	std	Y+3, r17	; 0x03
    c844:	ca 5f       	subi	r28, 0xFA	; 250
    c846:	d1 40       	sbci	r29, 0x01	; 1
    c848:	e8 1a       	sub	r14, r24
    c84a:	f9 0a       	sbc	r15, r25
    c84c:	0a 0b       	sbc	r16, r26
    c84e:	1b 0b       	sbc	r17, r27
    c850:	c2 50       	subi	r28, 0x02	; 2
    c852:	de 4f       	sbci	r29, 0xFE	; 254
    c854:	e8 82       	st	Y, r14
    c856:	f9 82       	std	Y+1, r15	; 0x01
    c858:	0a 83       	std	Y+2, r16	; 0x02
    c85a:	1b 83       	std	Y+3, r17	; 0x03
    c85c:	ce 5f       	subi	r28, 0xFE	; 254
    c85e:	d1 40       	sbci	r29, 0x01	; 1
    c860:	ca 50       	subi	r28, 0x0A	; 10
    c862:	de 4f       	sbci	r29, 0xFE	; 254
    c864:	68 81       	ld	r22, Y
    c866:	79 81       	ldd	r23, Y+1	; 0x01
    c868:	8a 81       	ldd	r24, Y+2	; 0x02
    c86a:	9b 81       	ldd	r25, Y+3	; 0x03
    c86c:	c6 5f       	subi	r28, 0xF6	; 246
    c86e:	d1 40       	sbci	r29, 0x01	; 1
    c870:	e6 0e       	add	r14, r22
    c872:	f7 1e       	adc	r15, r23
    c874:	08 1f       	adc	r16, r24
    c876:	19 1f       	adc	r17, r25
    c878:	ce 5f       	subi	r28, 0xFE	; 254
    c87a:	dd 4f       	sbci	r29, 0xFD	; 253
    c87c:	e8 82       	st	Y, r14
    c87e:	f9 82       	std	Y+1, r15	; 0x01
    c880:	0a 83       	std	Y+2, r16	; 0x02
    c882:	1b 83       	std	Y+3, r17	; 0x03
    c884:	c2 50       	subi	r28, 0x02	; 2
    c886:	d2 40       	sbci	r29, 0x02	; 2
    c888:	8f ef       	ldi	r24, 0xFF	; 255
    c88a:	9f e3       	ldi	r25, 0x3F	; 63
    c88c:	a0 e0       	ldi	r26, 0x00	; 0
    c88e:	b0 e0       	ldi	r27, 0x00	; 0
    c890:	82 1b       	sub	r24, r18
    c892:	93 0b       	sbc	r25, r19
    c894:	a4 0b       	sbc	r26, r20
    c896:	b5 0b       	sbc	r27, r21
    c898:	ca 5f       	subi	r28, 0xFA	; 250
    c89a:	dd 4f       	sbci	r29, 0xFD	; 253
    c89c:	88 83       	st	Y, r24
    c89e:	99 83       	std	Y+1, r25	; 0x01
    c8a0:	aa 83       	std	Y+2, r26	; 0x02
    c8a2:	bb 83       	std	Y+3, r27	; 0x03
    c8a4:	c6 50       	subi	r28, 0x06	; 6
    c8a6:	d2 40       	sbci	r29, 0x02	; 2
    c8a8:	80 91 f8 24 	lds	r24, 0x24F8
    c8ac:	90 91 f9 24 	lds	r25, 0x24F9
    c8b0:	63 e0       	ldi	r22, 0x03	; 3
    c8b2:	70 e0       	ldi	r23, 0x00	; 0
    c8b4:	c4 51       	subi	r28, 0x14	; 20
    c8b6:	de 4f       	sbci	r29, 0xFE	; 254
    c8b8:	28 81       	ld	r18, Y
    c8ba:	39 81       	ldd	r19, Y+1	; 0x01
    c8bc:	4a 81       	ldd	r20, Y+2	; 0x02
    c8be:	5b 81       	ldd	r21, Y+3	; 0x03
    c8c0:	cc 5e       	subi	r28, 0xEC	; 236
    c8c2:	d1 40       	sbci	r29, 0x01	; 1
    c8c4:	0e 94 f0 6d 	call	0xdbe0	; 0xdbe0 <arb_ioctl>
    c8c8:	6b 3f       	cpi	r22, 0xFB	; 251
    c8ca:	79 f4       	brne	.+30     	; 0xc8ea <arb_console+0x228>
    c8cc:	00 d0       	rcall	.+0      	; 0xc8ce <arb_console+0x20c>
    c8ce:	0f 92       	push	r0
    c8d0:	ec eb       	ldi	r30, 0xBC	; 188
    c8d2:	f0 e0       	ldi	r31, 0x00	; 0
    c8d4:	ec 0f       	add	r30, r28
    c8d6:	fd 1f       	adc	r31, r29
    c8d8:	ad b7       	in	r26, 0x3d	; 61
    c8da:	be b7       	in	r27, 0x3e	; 62
    c8dc:	11 96       	adiw	r26, 0x01	; 1
    c8de:	ed 93       	st	X+, r30
    c8e0:	fc 93       	st	X, r31
    c8e2:	12 97       	sbiw	r26, 0x02	; 2
    c8e4:	82 eb       	ldi	r24, 0xB2	; 178
    c8e6:	93 e0       	ldi	r25, 0x03	; 3
    c8e8:	10 c0       	rjmp	.+32     	; 0xc90a <arb_console+0x248>
    c8ea:	6a 3f       	cpi	r22, 0xFA	; 250
    c8ec:	a1 f4       	brne	.+40     	; 0xc916 <arb_console+0x254>
    c8ee:	00 d0       	rcall	.+0      	; 0xc8f0 <arb_console+0x22e>
    c8f0:	0f 92       	push	r0
    c8f2:	ec eb       	ldi	r30, 0xBC	; 188
    c8f4:	f0 e0       	ldi	r31, 0x00	; 0
    c8f6:	ec 0f       	add	r30, r28
    c8f8:	fd 1f       	adc	r31, r29
    c8fa:	ad b7       	in	r26, 0x3d	; 61
    c8fc:	be b7       	in	r27, 0x3e	; 62
    c8fe:	11 96       	adiw	r26, 0x01	; 1
    c900:	ed 93       	st	X+, r30
    c902:	fc 93       	st	X, r31
    c904:	12 97       	sbiw	r26, 0x02	; 2
    c906:	87 e9       	ldi	r24, 0x97	; 151
    c908:	93 e0       	ldi	r25, 0x03	; 3
    c90a:	13 96       	adiw	r26, 0x03	; 3
    c90c:	8d 93       	st	X+, r24
    c90e:	9c 93       	st	X, r25
    c910:	14 97       	sbiw	r26, 0x04	; 4
    c912:	0c 94 39 6d 	jmp	0xda72	; 0xda72 <arb_console+0x13b0>
    c916:	ce 01       	movw	r24, r28
    c918:	85 5b       	subi	r24, 0xB5	; 181
    c91a:	9f 4f       	sbci	r25, 0xFF	; 255
    c91c:	63 e9       	ldi	r22, 0x93	; 147
    c91e:	73 e0       	ldi	r23, 0x03	; 3
    c920:	0e 94 87 b1 	call	0x1630e	; 0x1630e <strcasecmp_P>
    c924:	89 2b       	or	r24, r25
    c926:	31 f5       	brne	.+76     	; 0xc974 <arb_console+0x2b2>
    c928:	c5 54       	subi	r28, 0x45	; 69
    c92a:	df 4f       	sbci	r29, 0xFF	; 255
    c92c:	88 81       	ld	r24, Y
    c92e:	cb 5b       	subi	r28, 0xBB	; 187
    c930:	d0 40       	sbci	r29, 0x00	; 0
    c932:	84 30       	cpi	r24, 0x04	; 4
    c934:	f9 f4       	brne	.+62     	; 0xc974 <arb_console+0x2b2>
    c936:	c0 51       	subi	r28, 0x10	; 16
    c938:	de 4f       	sbci	r29, 0xFE	; 254
    c93a:	88 81       	ld	r24, Y
    c93c:	99 81       	ldd	r25, Y+1	; 0x01
    c93e:	c0 5f       	subi	r28, 0xF0	; 240
    c940:	d1 40       	sbci	r29, 0x01	; 1
    c942:	0e 94 8e b0 	call	0x1611c	; 0x1611c <atoi>
    c946:	08 2f       	mov	r16, r24
    c948:	8b e4       	ldi	r24, 0x4B	; 75
    c94a:	90 e0       	ldi	r25, 0x00	; 0
    c94c:	8c 0f       	add	r24, r28
    c94e:	9d 1f       	adc	r25, r29
    c950:	80 96       	adiw	r24, 0x20	; 32
    c952:	0e 94 8e b0 	call	0x1611c	; 0x1611c <atoi>
    c956:	18 2f       	mov	r17, r24
    c958:	8b e4       	ldi	r24, 0x4B	; 75
    c95a:	90 e0       	ldi	r25, 0x00	; 0
    c95c:	8c 0f       	add	r24, r28
    c95e:	9d 1f       	adc	r25, r29
    c960:	c0 96       	adiw	r24, 0x30	; 48
    c962:	0e 94 8e b0 	call	0x1611c	; 0x1611c <atoi>
    c966:	48 2f       	mov	r20, r24
    c968:	80 2f       	mov	r24, r16
    c96a:	61 2f       	mov	r22, r17
    c96c:	0e 94 f3 80 	call	0x101e6	; 0x101e6 <arb_setSysTime>
    c970:	0c 94 49 6d 	jmp	0xda92	; 0xda92 <arb_console+0x13d0>
    c974:	ce 01       	movw	r24, r28
    c976:	85 5b       	subi	r24, 0xB5	; 181
    c978:	9f 4f       	sbci	r25, 0xFF	; 255
    c97a:	6e e8       	ldi	r22, 0x8E	; 142
    c97c:	73 e0       	ldi	r23, 0x03	; 3
    c97e:	0e 94 87 b1 	call	0x1630e	; 0x1630e <strcasecmp_P>
    c982:	89 2b       	or	r24, r25
    c984:	09 f0       	breq	.+2      	; 0xc988 <arb_console+0x2c6>
    c986:	eb c1       	rjmp	.+982    	; 0xcd5e <arb_console+0x69c>
    c988:	00 d0       	rcall	.+0      	; 0xc98a <arb_console+0x2c8>
    c98a:	0f 92       	push	r0
    c98c:	ec eb       	ldi	r30, 0xBC	; 188
    c98e:	f0 e0       	ldi	r31, 0x00	; 0
    c990:	ec 0f       	add	r30, r28
    c992:	fd 1f       	adc	r31, r29
    c994:	ad b7       	in	r26, 0x3d	; 61
    c996:	be b7       	in	r27, 0x3e	; 62
    c998:	11 96       	adiw	r26, 0x01	; 1
    c99a:	ed 93       	st	X+, r30
    c99c:	fc 93       	st	X, r31
    c99e:	12 97       	sbiw	r26, 0x02	; 2
    c9a0:	8d ef       	ldi	r24, 0xFD	; 253
    c9a2:	97 e0       	ldi	r25, 0x07	; 7
    c9a4:	13 96       	adiw	r26, 0x03	; 3
    c9a6:	8d 93       	st	X+, r24
    c9a8:	9c 93       	st	X, r25
    c9aa:	14 97       	sbiw	r26, 0x04	; 4
    c9ac:	0e 94 93 b2 	call	0x16526	; 0x16526 <sprintf_P>
    c9b0:	ac 01       	movw	r20, r24
    c9b2:	80 91 f8 24 	lds	r24, 0x24F8
    c9b6:	90 91 f9 24 	lds	r25, 0x24F9
    c9ba:	0f 90       	pop	r0
    c9bc:	0f 90       	pop	r0
    c9be:	0f 90       	pop	r0
    c9c0:	0f 90       	pop	r0
    c9c2:	be 01       	movw	r22, r28
    c9c4:	64 54       	subi	r22, 0x44	; 68
    c9c6:	7f 4f       	sbci	r23, 0xFF	; 255
    c9c8:	0e 94 95 6d 	call	0xdb2a	; 0xdb2a <arb_write>
    c9cc:	00 d0       	rcall	.+0      	; 0xc9ce <arb_console+0x30c>
    c9ce:	0f 92       	push	r0
    c9d0:	ec eb       	ldi	r30, 0xBC	; 188
    c9d2:	f0 e0       	ldi	r31, 0x00	; 0
    c9d4:	ec 0f       	add	r30, r28
    c9d6:	fd 1f       	adc	r31, r29
    c9d8:	ad b7       	in	r26, 0x3d	; 61
    c9da:	be b7       	in	r27, 0x3e	; 62
    c9dc:	11 96       	adiw	r26, 0x01	; 1
    c9de:	ed 93       	st	X+, r30
    c9e0:	fc 93       	st	X, r31
    c9e2:	12 97       	sbiw	r26, 0x02	; 2
    c9e4:	80 eb       	ldi	r24, 0xB0	; 176
    c9e6:	97 e0       	ldi	r25, 0x07	; 7
    c9e8:	13 96       	adiw	r26, 0x03	; 3
    c9ea:	8d 93       	st	X+, r24
    c9ec:	9c 93       	st	X, r25
    c9ee:	14 97       	sbiw	r26, 0x04	; 4
    c9f0:	0e 94 93 b2 	call	0x16526	; 0x16526 <sprintf_P>
    c9f4:	ac 01       	movw	r20, r24
    c9f6:	80 91 f8 24 	lds	r24, 0x24F8
    c9fa:	90 91 f9 24 	lds	r25, 0x24F9
    c9fe:	0f 90       	pop	r0
    ca00:	0f 90       	pop	r0
    ca02:	0f 90       	pop	r0
    ca04:	0f 90       	pop	r0
    ca06:	be 01       	movw	r22, r28
    ca08:	64 54       	subi	r22, 0x44	; 68
    ca0a:	7f 4f       	sbci	r23, 0xFF	; 255
    ca0c:	0e 94 95 6d 	call	0xdb2a	; 0xdb2a <arb_write>
    ca10:	00 d0       	rcall	.+0      	; 0xca12 <arb_console+0x350>
    ca12:	0f 92       	push	r0
    ca14:	ec eb       	ldi	r30, 0xBC	; 188
    ca16:	f0 e0       	ldi	r31, 0x00	; 0
    ca18:	ec 0f       	add	r30, r28
    ca1a:	fd 1f       	adc	r31, r29
    ca1c:	ad b7       	in	r26, 0x3d	; 61
    ca1e:	be b7       	in	r27, 0x3e	; 62
    ca20:	11 96       	adiw	r26, 0x01	; 1
    ca22:	ed 93       	st	X+, r30
    ca24:	fc 93       	st	X, r31
    ca26:	12 97       	sbiw	r26, 0x02	; 2
    ca28:	83 e6       	ldi	r24, 0x63	; 99
    ca2a:	97 e0       	ldi	r25, 0x07	; 7
    ca2c:	13 96       	adiw	r26, 0x03	; 3
    ca2e:	8d 93       	st	X+, r24
    ca30:	9c 93       	st	X, r25
    ca32:	14 97       	sbiw	r26, 0x04	; 4
    ca34:	0e 94 93 b2 	call	0x16526	; 0x16526 <sprintf_P>
    ca38:	ac 01       	movw	r20, r24
    ca3a:	80 91 f8 24 	lds	r24, 0x24F8
    ca3e:	90 91 f9 24 	lds	r25, 0x24F9
    ca42:	0f 90       	pop	r0
    ca44:	0f 90       	pop	r0
    ca46:	0f 90       	pop	r0
    ca48:	0f 90       	pop	r0
    ca4a:	be 01       	movw	r22, r28
    ca4c:	64 54       	subi	r22, 0x44	; 68
    ca4e:	7f 4f       	sbci	r23, 0xFF	; 255
    ca50:	0e 94 95 6d 	call	0xdb2a	; 0xdb2a <arb_write>
    ca54:	00 d0       	rcall	.+0      	; 0xca56 <arb_console+0x394>
    ca56:	0f 92       	push	r0
    ca58:	ec eb       	ldi	r30, 0xBC	; 188
    ca5a:	f0 e0       	ldi	r31, 0x00	; 0
    ca5c:	ec 0f       	add	r30, r28
    ca5e:	fd 1f       	adc	r31, r29
    ca60:	ad b7       	in	r26, 0x3d	; 61
    ca62:	be b7       	in	r27, 0x3e	; 62
    ca64:	11 96       	adiw	r26, 0x01	; 1
    ca66:	ed 93       	st	X+, r30
    ca68:	fc 93       	st	X, r31
    ca6a:	12 97       	sbiw	r26, 0x02	; 2
    ca6c:	86 e1       	ldi	r24, 0x16	; 22
    ca6e:	97 e0       	ldi	r25, 0x07	; 7
    ca70:	13 96       	adiw	r26, 0x03	; 3
    ca72:	8d 93       	st	X+, r24
    ca74:	9c 93       	st	X, r25
    ca76:	14 97       	sbiw	r26, 0x04	; 4
    ca78:	0e 94 93 b2 	call	0x16526	; 0x16526 <sprintf_P>
    ca7c:	ac 01       	movw	r20, r24
    ca7e:	80 91 f8 24 	lds	r24, 0x24F8
    ca82:	90 91 f9 24 	lds	r25, 0x24F9
    ca86:	0f 90       	pop	r0
    ca88:	0f 90       	pop	r0
    ca8a:	0f 90       	pop	r0
    ca8c:	0f 90       	pop	r0
    ca8e:	be 01       	movw	r22, r28
    ca90:	64 54       	subi	r22, 0x44	; 68
    ca92:	7f 4f       	sbci	r23, 0xFF	; 255
    ca94:	0e 94 95 6d 	call	0xdb2a	; 0xdb2a <arb_write>
    ca98:	00 d0       	rcall	.+0      	; 0xca9a <arb_console+0x3d8>
    ca9a:	0f 92       	push	r0
    ca9c:	ec eb       	ldi	r30, 0xBC	; 188
    ca9e:	f0 e0       	ldi	r31, 0x00	; 0
    caa0:	ec 0f       	add	r30, r28
    caa2:	fd 1f       	adc	r31, r29
    caa4:	ad b7       	in	r26, 0x3d	; 61
    caa6:	be b7       	in	r27, 0x3e	; 62
    caa8:	11 96       	adiw	r26, 0x01	; 1
    caaa:	ed 93       	st	X+, r30
    caac:	fc 93       	st	X, r31
    caae:	12 97       	sbiw	r26, 0x02	; 2
    cab0:	89 ec       	ldi	r24, 0xC9	; 201
    cab2:	96 e0       	ldi	r25, 0x06	; 6
    cab4:	13 96       	adiw	r26, 0x03	; 3
    cab6:	8d 93       	st	X+, r24
    cab8:	9c 93       	st	X, r25
    caba:	14 97       	sbiw	r26, 0x04	; 4
    cabc:	0e 94 93 b2 	call	0x16526	; 0x16526 <sprintf_P>
    cac0:	ac 01       	movw	r20, r24
    cac2:	80 91 f8 24 	lds	r24, 0x24F8
    cac6:	90 91 f9 24 	lds	r25, 0x24F9
    caca:	0f 90       	pop	r0
    cacc:	0f 90       	pop	r0
    cace:	0f 90       	pop	r0
    cad0:	0f 90       	pop	r0
    cad2:	be 01       	movw	r22, r28
    cad4:	64 54       	subi	r22, 0x44	; 68
    cad6:	7f 4f       	sbci	r23, 0xFF	; 255
    cad8:	0e 94 95 6d 	call	0xdb2a	; 0xdb2a <arb_write>
    cadc:	00 d0       	rcall	.+0      	; 0xcade <arb_console+0x41c>
    cade:	0f 92       	push	r0
    cae0:	ec eb       	ldi	r30, 0xBC	; 188
    cae2:	f0 e0       	ldi	r31, 0x00	; 0
    cae4:	ec 0f       	add	r30, r28
    cae6:	fd 1f       	adc	r31, r29
    cae8:	ad b7       	in	r26, 0x3d	; 61
    caea:	be b7       	in	r27, 0x3e	; 62
    caec:	11 96       	adiw	r26, 0x01	; 1
    caee:	ed 93       	st	X+, r30
    caf0:	fc 93       	st	X, r31
    caf2:	12 97       	sbiw	r26, 0x02	; 2
    caf4:	8c e7       	ldi	r24, 0x7C	; 124
    caf6:	96 e0       	ldi	r25, 0x06	; 6
    caf8:	13 96       	adiw	r26, 0x03	; 3
    cafa:	8d 93       	st	X+, r24
    cafc:	9c 93       	st	X, r25
    cafe:	14 97       	sbiw	r26, 0x04	; 4
    cb00:	0e 94 93 b2 	call	0x16526	; 0x16526 <sprintf_P>
    cb04:	ac 01       	movw	r20, r24
    cb06:	80 91 f8 24 	lds	r24, 0x24F8
    cb0a:	90 91 f9 24 	lds	r25, 0x24F9
    cb0e:	0f 90       	pop	r0
    cb10:	0f 90       	pop	r0
    cb12:	0f 90       	pop	r0
    cb14:	0f 90       	pop	r0
    cb16:	be 01       	movw	r22, r28
    cb18:	64 54       	subi	r22, 0x44	; 68
    cb1a:	7f 4f       	sbci	r23, 0xFF	; 255
    cb1c:	0e 94 95 6d 	call	0xdb2a	; 0xdb2a <arb_write>
    cb20:	00 d0       	rcall	.+0      	; 0xcb22 <arb_console+0x460>
    cb22:	0f 92       	push	r0
    cb24:	ec eb       	ldi	r30, 0xBC	; 188
    cb26:	f0 e0       	ldi	r31, 0x00	; 0
    cb28:	ec 0f       	add	r30, r28
    cb2a:	fd 1f       	adc	r31, r29
    cb2c:	ad b7       	in	r26, 0x3d	; 61
    cb2e:	be b7       	in	r27, 0x3e	; 62
    cb30:	11 96       	adiw	r26, 0x01	; 1
    cb32:	ed 93       	st	X+, r30
    cb34:	fc 93       	st	X, r31
    cb36:	12 97       	sbiw	r26, 0x02	; 2
    cb38:	8f e2       	ldi	r24, 0x2F	; 47
    cb3a:	96 e0       	ldi	r25, 0x06	; 6
    cb3c:	13 96       	adiw	r26, 0x03	; 3
    cb3e:	8d 93       	st	X+, r24
    cb40:	9c 93       	st	X, r25
    cb42:	14 97       	sbiw	r26, 0x04	; 4
    cb44:	0e 94 93 b2 	call	0x16526	; 0x16526 <sprintf_P>
    cb48:	ac 01       	movw	r20, r24
    cb4a:	80 91 f8 24 	lds	r24, 0x24F8
    cb4e:	90 91 f9 24 	lds	r25, 0x24F9
    cb52:	0f 90       	pop	r0
    cb54:	0f 90       	pop	r0
    cb56:	0f 90       	pop	r0
    cb58:	0f 90       	pop	r0
    cb5a:	be 01       	movw	r22, r28
    cb5c:	64 54       	subi	r22, 0x44	; 68
    cb5e:	7f 4f       	sbci	r23, 0xFF	; 255
    cb60:	0e 94 95 6d 	call	0xdb2a	; 0xdb2a <arb_write>
    cb64:	00 d0       	rcall	.+0      	; 0xcb66 <arb_console+0x4a4>
    cb66:	0f 92       	push	r0
    cb68:	ec eb       	ldi	r30, 0xBC	; 188
    cb6a:	f0 e0       	ldi	r31, 0x00	; 0
    cb6c:	ec 0f       	add	r30, r28
    cb6e:	fd 1f       	adc	r31, r29
    cb70:	ad b7       	in	r26, 0x3d	; 61
    cb72:	be b7       	in	r27, 0x3e	; 62
    cb74:	11 96       	adiw	r26, 0x01	; 1
    cb76:	ed 93       	st	X+, r30
    cb78:	fc 93       	st	X, r31
    cb7a:	12 97       	sbiw	r26, 0x02	; 2
    cb7c:	82 ee       	ldi	r24, 0xE2	; 226
    cb7e:	95 e0       	ldi	r25, 0x05	; 5
    cb80:	13 96       	adiw	r26, 0x03	; 3
    cb82:	8d 93       	st	X+, r24
    cb84:	9c 93       	st	X, r25
    cb86:	14 97       	sbiw	r26, 0x04	; 4
    cb88:	0e 94 93 b2 	call	0x16526	; 0x16526 <sprintf_P>
    cb8c:	ac 01       	movw	r20, r24
    cb8e:	80 91 f8 24 	lds	r24, 0x24F8
    cb92:	90 91 f9 24 	lds	r25, 0x24F9
    cb96:	0f 90       	pop	r0
    cb98:	0f 90       	pop	r0
    cb9a:	0f 90       	pop	r0
    cb9c:	0f 90       	pop	r0
    cb9e:	be 01       	movw	r22, r28
    cba0:	64 54       	subi	r22, 0x44	; 68
    cba2:	7f 4f       	sbci	r23, 0xFF	; 255
    cba4:	0e 94 95 6d 	call	0xdb2a	; 0xdb2a <arb_write>
    cba8:	00 d0       	rcall	.+0      	; 0xcbaa <arb_console+0x4e8>
    cbaa:	0f 92       	push	r0
    cbac:	ec eb       	ldi	r30, 0xBC	; 188
    cbae:	f0 e0       	ldi	r31, 0x00	; 0
    cbb0:	ec 0f       	add	r30, r28
    cbb2:	fd 1f       	adc	r31, r29
    cbb4:	ad b7       	in	r26, 0x3d	; 61
    cbb6:	be b7       	in	r27, 0x3e	; 62
    cbb8:	11 96       	adiw	r26, 0x01	; 1
    cbba:	ed 93       	st	X+, r30
    cbbc:	fc 93       	st	X, r31
    cbbe:	12 97       	sbiw	r26, 0x02	; 2
    cbc0:	85 e9       	ldi	r24, 0x95	; 149
    cbc2:	95 e0       	ldi	r25, 0x05	; 5
    cbc4:	13 96       	adiw	r26, 0x03	; 3
    cbc6:	8d 93       	st	X+, r24
    cbc8:	9c 93       	st	X, r25
    cbca:	14 97       	sbiw	r26, 0x04	; 4
    cbcc:	0e 94 93 b2 	call	0x16526	; 0x16526 <sprintf_P>
    cbd0:	ac 01       	movw	r20, r24
    cbd2:	80 91 f8 24 	lds	r24, 0x24F8
    cbd6:	90 91 f9 24 	lds	r25, 0x24F9
    cbda:	0f 90       	pop	r0
    cbdc:	0f 90       	pop	r0
    cbde:	0f 90       	pop	r0
    cbe0:	0f 90       	pop	r0
    cbe2:	be 01       	movw	r22, r28
    cbe4:	64 54       	subi	r22, 0x44	; 68
    cbe6:	7f 4f       	sbci	r23, 0xFF	; 255
    cbe8:	0e 94 95 6d 	call	0xdb2a	; 0xdb2a <arb_write>
    cbec:	00 d0       	rcall	.+0      	; 0xcbee <arb_console+0x52c>
    cbee:	0f 92       	push	r0
    cbf0:	ec eb       	ldi	r30, 0xBC	; 188
    cbf2:	f0 e0       	ldi	r31, 0x00	; 0
    cbf4:	ec 0f       	add	r30, r28
    cbf6:	fd 1f       	adc	r31, r29
    cbf8:	ad b7       	in	r26, 0x3d	; 61
    cbfa:	be b7       	in	r27, 0x3e	; 62
    cbfc:	11 96       	adiw	r26, 0x01	; 1
    cbfe:	ed 93       	st	X+, r30
    cc00:	fc 93       	st	X, r31
    cc02:	12 97       	sbiw	r26, 0x02	; 2
    cc04:	88 e4       	ldi	r24, 0x48	; 72
    cc06:	95 e0       	ldi	r25, 0x05	; 5
    cc08:	13 96       	adiw	r26, 0x03	; 3
    cc0a:	8d 93       	st	X+, r24
    cc0c:	9c 93       	st	X, r25
    cc0e:	14 97       	sbiw	r26, 0x04	; 4
    cc10:	0e 94 93 b2 	call	0x16526	; 0x16526 <sprintf_P>
    cc14:	ac 01       	movw	r20, r24
    cc16:	80 91 f8 24 	lds	r24, 0x24F8
    cc1a:	90 91 f9 24 	lds	r25, 0x24F9
    cc1e:	0f 90       	pop	r0
    cc20:	0f 90       	pop	r0
    cc22:	0f 90       	pop	r0
    cc24:	0f 90       	pop	r0
    cc26:	be 01       	movw	r22, r28
    cc28:	64 54       	subi	r22, 0x44	; 68
    cc2a:	7f 4f       	sbci	r23, 0xFF	; 255
    cc2c:	0e 94 95 6d 	call	0xdb2a	; 0xdb2a <arb_write>
    cc30:	00 d0       	rcall	.+0      	; 0xcc32 <arb_console+0x570>
    cc32:	0f 92       	push	r0
    cc34:	ec eb       	ldi	r30, 0xBC	; 188
    cc36:	f0 e0       	ldi	r31, 0x00	; 0
    cc38:	ec 0f       	add	r30, r28
    cc3a:	fd 1f       	adc	r31, r29
    cc3c:	ad b7       	in	r26, 0x3d	; 61
    cc3e:	be b7       	in	r27, 0x3e	; 62
    cc40:	11 96       	adiw	r26, 0x01	; 1
    cc42:	ed 93       	st	X+, r30
    cc44:	fc 93       	st	X, r31
    cc46:	12 97       	sbiw	r26, 0x02	; 2
    cc48:	8b ef       	ldi	r24, 0xFB	; 251
    cc4a:	94 e0       	ldi	r25, 0x04	; 4
    cc4c:	13 96       	adiw	r26, 0x03	; 3
    cc4e:	8d 93       	st	X+, r24
    cc50:	9c 93       	st	X, r25
    cc52:	14 97       	sbiw	r26, 0x04	; 4
    cc54:	0e 94 93 b2 	call	0x16526	; 0x16526 <sprintf_P>
    cc58:	ac 01       	movw	r20, r24
    cc5a:	80 91 f8 24 	lds	r24, 0x24F8
    cc5e:	90 91 f9 24 	lds	r25, 0x24F9
    cc62:	0f 90       	pop	r0
    cc64:	0f 90       	pop	r0
    cc66:	0f 90       	pop	r0
    cc68:	0f 90       	pop	r0
    cc6a:	be 01       	movw	r22, r28
    cc6c:	64 54       	subi	r22, 0x44	; 68
    cc6e:	7f 4f       	sbci	r23, 0xFF	; 255
    cc70:	0e 94 95 6d 	call	0xdb2a	; 0xdb2a <arb_write>
    cc74:	00 d0       	rcall	.+0      	; 0xcc76 <arb_console+0x5b4>
    cc76:	0f 92       	push	r0
    cc78:	ec eb       	ldi	r30, 0xBC	; 188
    cc7a:	f0 e0       	ldi	r31, 0x00	; 0
    cc7c:	ec 0f       	add	r30, r28
    cc7e:	fd 1f       	adc	r31, r29
    cc80:	ad b7       	in	r26, 0x3d	; 61
    cc82:	be b7       	in	r27, 0x3e	; 62
    cc84:	11 96       	adiw	r26, 0x01	; 1
    cc86:	ed 93       	st	X+, r30
    cc88:	fc 93       	st	X, r31
    cc8a:	12 97       	sbiw	r26, 0x02	; 2
    cc8c:	8e ea       	ldi	r24, 0xAE	; 174
    cc8e:	94 e0       	ldi	r25, 0x04	; 4
    cc90:	13 96       	adiw	r26, 0x03	; 3
    cc92:	8d 93       	st	X+, r24
    cc94:	9c 93       	st	X, r25
    cc96:	14 97       	sbiw	r26, 0x04	; 4
    cc98:	0e 94 93 b2 	call	0x16526	; 0x16526 <sprintf_P>
    cc9c:	ac 01       	movw	r20, r24
    cc9e:	80 91 f8 24 	lds	r24, 0x24F8
    cca2:	90 91 f9 24 	lds	r25, 0x24F9
    cca6:	0f 90       	pop	r0
    cca8:	0f 90       	pop	r0
    ccaa:	0f 90       	pop	r0
    ccac:	0f 90       	pop	r0
    ccae:	be 01       	movw	r22, r28
    ccb0:	64 54       	subi	r22, 0x44	; 68
    ccb2:	7f 4f       	sbci	r23, 0xFF	; 255
    ccb4:	0e 94 95 6d 	call	0xdb2a	; 0xdb2a <arb_write>
    ccb8:	00 d0       	rcall	.+0      	; 0xccba <arb_console+0x5f8>
    ccba:	0f 92       	push	r0
    ccbc:	ec eb       	ldi	r30, 0xBC	; 188
    ccbe:	f0 e0       	ldi	r31, 0x00	; 0
    ccc0:	ec 0f       	add	r30, r28
    ccc2:	fd 1f       	adc	r31, r29
    ccc4:	ad b7       	in	r26, 0x3d	; 61
    ccc6:	be b7       	in	r27, 0x3e	; 62
    ccc8:	11 96       	adiw	r26, 0x01	; 1
    ccca:	ed 93       	st	X+, r30
    cccc:	fc 93       	st	X, r31
    ccce:	12 97       	sbiw	r26, 0x02	; 2
    ccd0:	81 e6       	ldi	r24, 0x61	; 97
    ccd2:	94 e0       	ldi	r25, 0x04	; 4
    ccd4:	13 96       	adiw	r26, 0x03	; 3
    ccd6:	8d 93       	st	X+, r24
    ccd8:	9c 93       	st	X, r25
    ccda:	14 97       	sbiw	r26, 0x04	; 4
    ccdc:	0e 94 93 b2 	call	0x16526	; 0x16526 <sprintf_P>
    cce0:	ac 01       	movw	r20, r24
    cce2:	80 91 f8 24 	lds	r24, 0x24F8
    cce6:	90 91 f9 24 	lds	r25, 0x24F9
    ccea:	0f 90       	pop	r0
    ccec:	0f 90       	pop	r0
    ccee:	0f 90       	pop	r0
    ccf0:	0f 90       	pop	r0
    ccf2:	be 01       	movw	r22, r28
    ccf4:	64 54       	subi	r22, 0x44	; 68
    ccf6:	7f 4f       	sbci	r23, 0xFF	; 255
    ccf8:	0e 94 95 6d 	call	0xdb2a	; 0xdb2a <arb_write>
    ccfc:	00 d0       	rcall	.+0      	; 0xccfe <arb_console+0x63c>
    ccfe:	0f 92       	push	r0
    cd00:	ec eb       	ldi	r30, 0xBC	; 188
    cd02:	f0 e0       	ldi	r31, 0x00	; 0
    cd04:	ec 0f       	add	r30, r28
    cd06:	fd 1f       	adc	r31, r29
    cd08:	ad b7       	in	r26, 0x3d	; 61
    cd0a:	be b7       	in	r27, 0x3e	; 62
    cd0c:	11 96       	adiw	r26, 0x01	; 1
    cd0e:	ed 93       	st	X+, r30
    cd10:	fc 93       	st	X, r31
    cd12:	12 97       	sbiw	r26, 0x02	; 2
    cd14:	84 e1       	ldi	r24, 0x14	; 20
    cd16:	94 e0       	ldi	r25, 0x04	; 4
    cd18:	13 96       	adiw	r26, 0x03	; 3
    cd1a:	8d 93       	st	X+, r24
    cd1c:	9c 93       	st	X, r25
    cd1e:	14 97       	sbiw	r26, 0x04	; 4
    cd20:	0e 94 93 b2 	call	0x16526	; 0x16526 <sprintf_P>
    cd24:	ac 01       	movw	r20, r24
    cd26:	80 91 f8 24 	lds	r24, 0x24F8
    cd2a:	90 91 f9 24 	lds	r25, 0x24F9
    cd2e:	0f 90       	pop	r0
    cd30:	0f 90       	pop	r0
    cd32:	0f 90       	pop	r0
    cd34:	0f 90       	pop	r0
    cd36:	be 01       	movw	r22, r28
    cd38:	64 54       	subi	r22, 0x44	; 68
    cd3a:	7f 4f       	sbci	r23, 0xFF	; 255
    cd3c:	0e 94 95 6d 	call	0xdb2a	; 0xdb2a <arb_write>
    cd40:	00 d0       	rcall	.+0      	; 0xcd42 <arb_console+0x680>
    cd42:	0f 92       	push	r0
    cd44:	ec eb       	ldi	r30, 0xBC	; 188
    cd46:	f0 e0       	ldi	r31, 0x00	; 0
    cd48:	ec 0f       	add	r30, r28
    cd4a:	fd 1f       	adc	r31, r29
    cd4c:	ad b7       	in	r26, 0x3d	; 61
    cd4e:	be b7       	in	r27, 0x3e	; 62
    cd50:	11 96       	adiw	r26, 0x01	; 1
    cd52:	ed 93       	st	X+, r30
    cd54:	fc 93       	st	X, r31
    cd56:	12 97       	sbiw	r26, 0x02	; 2
    cd58:	87 ec       	ldi	r24, 0xC7	; 199
    cd5a:	93 e0       	ldi	r25, 0x03	; 3
    cd5c:	d6 cd       	rjmp	.-1108   	; 0xc90a <arb_console+0x248>
    cd5e:	ce 01       	movw	r24, r28
    cd60:	85 5b       	subi	r24, 0xB5	; 181
    cd62:	9f 4f       	sbci	r25, 0xFF	; 255
    cd64:	6a e8       	ldi	r22, 0x8A	; 138
    cd66:	73 e0       	ldi	r23, 0x03	; 3
    cd68:	0e 94 87 b1 	call	0x1630e	; 0x1630e <strcasecmp_P>
    cd6c:	89 2b       	or	r24, r25
    cd6e:	09 f0       	breq	.+2      	; 0xcd72 <arb_console+0x6b0>
    cd70:	6e c0       	rjmp	.+220    	; 0xce4e <arb_console+0x78c>
    cd72:	c5 54       	subi	r28, 0x45	; 69
    cd74:	df 4f       	sbci	r29, 0xFF	; 255
    cd76:	88 81       	ld	r24, Y
    cd78:	cb 5b       	subi	r28, 0xBB	; 187
    cd7a:	d0 40       	sbci	r29, 0x00	; 0
    cd7c:	82 30       	cpi	r24, 0x02	; 2
    cd7e:	09 f0       	breq	.+2      	; 0xcd82 <arb_console+0x6c0>
    cd80:	66 c0       	rjmp	.+204    	; 0xce4e <arb_console+0x78c>
    cd82:	6c 96       	adiw	r28, 0x1c	; 28
    cd84:	8f ad       	sts	0x6f, r24
    cd86:	6c 97       	sbiw	r28, 0x1c	; 28
    cd88:	80 33       	cpi	r24, 0x30	; 48
    cd8a:	b9 f0       	breq	.+46     	; 0xcdba <arb_console+0x6f8>
    cd8c:	81 33       	cpi	r24, 0x31	; 49
    cd8e:	11 f4       	brne	.+4      	; 0xcd94 <arb_console+0x6d2>
    cd90:	12 e0       	ldi	r17, 0x02	; 2
    cd92:	14 c0       	rjmp	.+40     	; 0xcdbc <arb_console+0x6fa>
    cd94:	82 33       	cpi	r24, 0x32	; 50
    cd96:	11 f4       	brne	.+4      	; 0xcd9c <arb_console+0x6da>
    cd98:	14 e0       	ldi	r17, 0x04	; 4
    cd9a:	10 c0       	rjmp	.+32     	; 0xcdbc <arb_console+0x6fa>
    cd9c:	00 d0       	rcall	.+0      	; 0xcd9e <arb_console+0x6dc>
    cd9e:	0f 92       	push	r0
    cda0:	ec eb       	ldi	r30, 0xBC	; 188
    cda2:	f0 e0       	ldi	r31, 0x00	; 0
    cda4:	ec 0f       	add	r30, r28
    cda6:	fd 1f       	adc	r31, r29
    cda8:	ad b7       	in	r26, 0x3d	; 61
    cdaa:	be b7       	in	r27, 0x3e	; 62
    cdac:	11 96       	adiw	r26, 0x01	; 1
    cdae:	ed 93       	st	X+, r30
    cdb0:	fc 93       	st	X, r31
    cdb2:	12 97       	sbiw	r26, 0x02	; 2
    cdb4:	82 ea       	ldi	r24, 0xA2	; 162
    cdb6:	98 e0       	ldi	r25, 0x08	; 8
    cdb8:	a8 cd       	rjmp	.-1200   	; 0xc90a <arb_console+0x248>
    cdba:	11 e0       	ldi	r17, 0x01	; 1
    cdbc:	00 d0       	rcall	.+0      	; 0xcdbe <arb_console+0x6fc>
    cdbe:	0f 92       	push	r0
    cdc0:	ec eb       	ldi	r30, 0xBC	; 188
    cdc2:	f0 e0       	ldi	r31, 0x00	; 0
    cdc4:	ec 0f       	add	r30, r28
    cdc6:	fd 1f       	adc	r31, r29
    cdc8:	ad b7       	in	r26, 0x3d	; 61
    cdca:	be b7       	in	r27, 0x3e	; 62
    cdcc:	11 96       	adiw	r26, 0x01	; 1
    cdce:	ed 93       	st	X+, r30
    cdd0:	fc 93       	st	X, r31
    cdd2:	12 97       	sbiw	r26, 0x02	; 2
    cdd4:	8a e4       	ldi	r24, 0x4A	; 74
    cdd6:	98 e0       	ldi	r25, 0x08	; 8
    cdd8:	13 96       	adiw	r26, 0x03	; 3
    cdda:	8d 93       	st	X+, r24
    cddc:	9c 93       	st	X, r25
    cdde:	14 97       	sbiw	r26, 0x04	; 4
    cde0:	0e 94 93 b2 	call	0x16526	; 0x16526 <sprintf_P>
    cde4:	ac 01       	movw	r20, r24
    cde6:	80 91 f8 24 	lds	r24, 0x24F8
    cdea:	90 91 f9 24 	lds	r25, 0x24F9
    cdee:	0f 90       	pop	r0
    cdf0:	0f 90       	pop	r0
    cdf2:	0f 90       	pop	r0
    cdf4:	0f 90       	pop	r0
    cdf6:	be 01       	movw	r22, r28
    cdf8:	64 54       	subi	r22, 0x44	; 68
    cdfa:	7f 4f       	sbci	r23, 0xFF	; 255
    cdfc:	0e 94 95 6d 	call	0xdb2a	; 0xdb2a <arb_write>
    ce00:	80 91 f8 24 	lds	r24, 0x24F8
    ce04:	90 91 f9 24 	lds	r25, 0x24F9
    ce08:	63 e0       	ldi	r22, 0x03	; 3
    ce0a:	70 e0       	ldi	r23, 0x00	; 0
    ce0c:	c4 51       	subi	r28, 0x14	; 20
    ce0e:	de 4f       	sbci	r29, 0xFE	; 254
    ce10:	28 81       	ld	r18, Y
    ce12:	39 81       	ldd	r19, Y+1	; 0x01
    ce14:	4a 81       	ldd	r20, Y+2	; 0x02
    ce16:	5b 81       	ldd	r21, Y+3	; 0x03
    ce18:	cc 5e       	subi	r28, 0xEC	; 236
    ce1a:	d1 40       	sbci	r29, 0x01	; 1
    ce1c:	0e 94 f0 6d 	call	0xdbe0	; 0xdbe0 <arb_ioctl>
    ce20:	81 2f       	mov	r24, r17
    ce22:	0e 94 9e 70 	call	0xe13c	; 0xe13c <arb_setPrintfDbgLevel>
    ce26:	80 91 f8 24 	lds	r24, 0x24F8
    ce2a:	90 91 f9 24 	lds	r25, 0x24F9
    ce2e:	63 e0       	ldi	r22, 0x03	; 3
    ce30:	70 e0       	ldi	r23, 0x00	; 0
    ce32:	c4 51       	subi	r28, 0x14	; 20
    ce34:	de 4f       	sbci	r29, 0xFE	; 254
    ce36:	28 81       	ld	r18, Y
    ce38:	39 81       	ldd	r19, Y+1	; 0x01
    ce3a:	4a 81       	ldd	r20, Y+2	; 0x02
    ce3c:	5b 81       	ldd	r21, Y+3	; 0x03
    ce3e:	cc 5e       	subi	r28, 0xEC	; 236
    ce40:	d1 40       	sbci	r29, 0x01	; 1
    ce42:	0e 94 f0 6d 	call	0xdbe0	; 0xdbe0 <arb_ioctl>
    ce46:	80 e2       	ldi	r24, 0x20	; 32
    ce48:	0e 94 9e 70 	call	0xe13c	; 0xe13c <arb_setPrintfDbgLevel>
    ce4c:	22 c6       	rjmp	.+3140   	; 0xda92 <arb_console+0x13d0>
    ce4e:	ce 01       	movw	r24, r28
    ce50:	85 5b       	subi	r24, 0xB5	; 181
    ce52:	9f 4f       	sbci	r25, 0xFF	; 255
    ce54:	66 e8       	ldi	r22, 0x86	; 134
    ce56:	73 e0       	ldi	r23, 0x03	; 3
    ce58:	0e 94 87 b1 	call	0x1630e	; 0x1630e <strcasecmp_P>
    ce5c:	89 2b       	or	r24, r25
    ce5e:	09 f0       	breq	.+2      	; 0xce62 <arb_console+0x7a0>
    ce60:	d8 c0       	rjmp	.+432    	; 0xd012 <arb_console+0x950>
    ce62:	c5 54       	subi	r28, 0x45	; 69
    ce64:	df 4f       	sbci	r29, 0xFF	; 255
    ce66:	88 81       	ld	r24, Y
    ce68:	cb 5b       	subi	r28, 0xBB	; 187
    ce6a:	d0 40       	sbci	r29, 0x00	; 0
    ce6c:	81 30       	cpi	r24, 0x01	; 1
    ce6e:	09 f0       	breq	.+2      	; 0xce72 <arb_console+0x7b0>
    ce70:	d0 c0       	rjmp	.+416    	; 0xd012 <arb_console+0x950>
    ce72:	0e 94 57 6d 	call	0xdaae	; 0xdaae <arb_getDeviceList>
    ce76:	89 83       	std	Y+1, r24	; 0x01
    ce78:	9a 83       	std	Y+2, r25	; 0x02
    ce7a:	00 d0       	rcall	.+0      	; 0xce7c <arb_console+0x7ba>
    ce7c:	0f 92       	push	r0
    ce7e:	ec eb       	ldi	r30, 0xBC	; 188
    ce80:	f0 e0       	ldi	r31, 0x00	; 0
    ce82:	ec 0f       	add	r30, r28
    ce84:	fd 1f       	adc	r31, r29
    ce86:	ad b7       	in	r26, 0x3d	; 61
    ce88:	be b7       	in	r27, 0x3e	; 62
    ce8a:	11 96       	adiw	r26, 0x01	; 1
    ce8c:	ed 93       	st	X+, r30
    ce8e:	fc 93       	st	X, r31
    ce90:	12 97       	sbiw	r26, 0x02	; 2
    ce92:	81 eb       	ldi	r24, 0xB1	; 177
    ce94:	99 e0       	ldi	r25, 0x09	; 9
    ce96:	13 96       	adiw	r26, 0x03	; 3
    ce98:	8d 93       	st	X+, r24
    ce9a:	9c 93       	st	X, r25
    ce9c:	14 97       	sbiw	r26, 0x04	; 4
    ce9e:	0e 94 93 b2 	call	0x16526	; 0x16526 <sprintf_P>
    cea2:	ac 01       	movw	r20, r24
    cea4:	80 91 f8 24 	lds	r24, 0x24F8
    cea8:	90 91 f9 24 	lds	r25, 0x24F9
    ceac:	0f 90       	pop	r0
    ceae:	0f 90       	pop	r0
    ceb0:	0f 90       	pop	r0
    ceb2:	0f 90       	pop	r0
    ceb4:	be 01       	movw	r22, r28
    ceb6:	64 54       	subi	r22, 0x44	; 68
    ceb8:	7f 4f       	sbci	r23, 0xFF	; 255
    ceba:	0e 94 95 6d 	call	0xdb2a	; 0xdb2a <arb_write>
    cebe:	00 d0       	rcall	.+0      	; 0xcec0 <arb_console+0x7fe>
    cec0:	0f 92       	push	r0
    cec2:	ec eb       	ldi	r30, 0xBC	; 188
    cec4:	f0 e0       	ldi	r31, 0x00	; 0
    cec6:	ec 0f       	add	r30, r28
    cec8:	fd 1f       	adc	r31, r29
    ceca:	ad b7       	in	r26, 0x3d	; 61
    cecc:	be b7       	in	r27, 0x3e	; 62
    cece:	11 96       	adiw	r26, 0x01	; 1
    ced0:	ed 93       	st	X+, r30
    ced2:	fc 93       	st	X, r31
    ced4:	12 97       	sbiw	r26, 0x02	; 2
    ced6:	8f e6       	ldi	r24, 0x6F	; 111
    ced8:	99 e0       	ldi	r25, 0x09	; 9
    ceda:	13 96       	adiw	r26, 0x03	; 3
    cedc:	8d 93       	st	X+, r24
    cede:	9c 93       	st	X, r25
    cee0:	14 97       	sbiw	r26, 0x04	; 4
    cee2:	0e 94 93 b2 	call	0x16526	; 0x16526 <sprintf_P>
    cee6:	ac 01       	movw	r20, r24
    cee8:	80 91 f8 24 	lds	r24, 0x24F8
    ceec:	90 91 f9 24 	lds	r25, 0x24F9
    cef0:	0f 90       	pop	r0
    cef2:	0f 90       	pop	r0
    cef4:	0f 90       	pop	r0
    cef6:	0f 90       	pop	r0
    cef8:	be 01       	movw	r22, r28
    cefa:	64 54       	subi	r22, 0x44	; 68
    cefc:	7f 4f       	sbci	r23, 0xFF	; 255
    cefe:	0e 94 95 6d 	call	0xdb2a	; 0xdb2a <arb_write>
    cf02:	00 d0       	rcall	.+0      	; 0xcf04 <arb_console+0x842>
    cf04:	0f 92       	push	r0
    cf06:	ec eb       	ldi	r30, 0xBC	; 188
    cf08:	f0 e0       	ldi	r31, 0x00	; 0
    cf0a:	ec 0f       	add	r30, r28
    cf0c:	fd 1f       	adc	r31, r29
    cf0e:	ad b7       	in	r26, 0x3d	; 61
    cf10:	be b7       	in	r27, 0x3e	; 62
    cf12:	11 96       	adiw	r26, 0x01	; 1
    cf14:	ed 93       	st	X+, r30
    cf16:	fc 93       	st	X, r31
    cf18:	12 97       	sbiw	r26, 0x02	; 2
    cf1a:	8d e2       	ldi	r24, 0x2D	; 45
    cf1c:	99 e0       	ldi	r25, 0x09	; 9
    cf1e:	13 96       	adiw	r26, 0x03	; 3
    cf20:	8d 93       	st	X+, r24
    cf22:	9c 93       	st	X, r25
    cf24:	14 97       	sbiw	r26, 0x04	; 4
    cf26:	0e 94 93 b2 	call	0x16526	; 0x16526 <sprintf_P>
    cf2a:	ac 01       	movw	r20, r24
    cf2c:	80 91 f8 24 	lds	r24, 0x24F8
    cf30:	90 91 f9 24 	lds	r25, 0x24F9
    cf34:	0f 90       	pop	r0
    cf36:	0f 90       	pop	r0
    cf38:	0f 90       	pop	r0
    cf3a:	0f 90       	pop	r0
    cf3c:	be 01       	movw	r22, r28
    cf3e:	64 54       	subi	r22, 0x44	; 68
    cf40:	7f 4f       	sbci	r23, 0xFF	; 255
    cf42:	0e 94 95 6d 	call	0xdb2a	; 0xdb2a <arb_write>
    cf46:	e9 81       	ldd	r30, Y+1	; 0x01
    cf48:	fa 81       	ldd	r31, Y+2	; 0x02
    cf4a:	02 81       	ldd	r16, Z+2	; 0x02
    cf4c:	13 81       	ldd	r17, Z+3	; 0x03
    cf4e:	e9 81       	ldd	r30, Y+1	; 0x01
    cf50:	fa 81       	ldd	r31, Y+2	; 0x02
    cf52:	48 c0       	rjmp	.+144    	; 0xcfe4 <arb_console+0x922>
    cf54:	eb 81       	ldd	r30, Y+3	; 0x03
    cf56:	fc 81       	ldd	r31, Y+4	; 0x04
    cf58:	20 81       	ld	r18, Z
    cf5a:	31 81       	ldd	r19, Z+1	; 0x01
    cf5c:	d9 01       	movw	r26, r18
    cf5e:	8d 91       	ld	r24, X+
    cf60:	9c 91       	ld	r25, X
    cf62:	f9 01       	movw	r30, r18
    cf64:	41 91       	ld	r20, Z+
    cf66:	51 91       	ld	r21, Z+
    cf68:	7f 01       	movw	r14, r30
    cf6a:	6d b7       	in	r22, 0x3d	; 61
    cf6c:	7e b7       	in	r23, 0x3e	; 62
    cf6e:	6c 50       	subi	r22, 0x0C	; 12
    cf70:	70 40       	sbci	r23, 0x00	; 0
    cf72:	6d bf       	out	0x3d, r22	; 61
    cf74:	7e bf       	out	0x3e, r23	; 62
    cf76:	ed b7       	in	r30, 0x3d	; 61
    cf78:	fe b7       	in	r31, 0x3e	; 62
    cf7a:	31 96       	adiw	r30, 0x01	; 1
    cf7c:	6c eb       	ldi	r22, 0xBC	; 188
    cf7e:	70 e0       	ldi	r23, 0x00	; 0
    cf80:	6c 0f       	add	r22, r28
    cf82:	7d 1f       	adc	r23, r29
    cf84:	ad b7       	in	r26, 0x3d	; 61
    cf86:	be b7       	in	r27, 0x3e	; 62
    cf88:	11 96       	adiw	r26, 0x01	; 1
    cf8a:	6d 93       	st	X+, r22
    cf8c:	7c 93       	st	X, r23
    cf8e:	12 97       	sbiw	r26, 0x02	; 2
    cf90:	a4 ef       	ldi	r26, 0xF4	; 244
    cf92:	b8 e0       	ldi	r27, 0x08	; 8
    cf94:	a2 83       	std	Z+2, r26	; 0x02
    cf96:	b3 83       	std	Z+3, r27	; 0x03
    cf98:	e4 82       	std	Z+4, r14	; 0x04
    cf9a:	f5 82       	std	Z+5, r15	; 0x05
    cf9c:	89 2f       	mov	r24, r25
    cf9e:	99 0f       	add	r25, r25
    cfa0:	99 0b       	sbc	r25, r25
    cfa2:	86 83       	std	Z+6, r24	; 0x06
    cfa4:	17 82       	std	Z+7, r1	; 0x07
    cfa6:	40 87       	std	Z+8, r20	; 0x08
    cfa8:	11 86       	std	Z+9, r1	; 0x09
    cfaa:	d9 01       	movw	r26, r18
    cfac:	52 96       	adiw	r26, 0x12	; 18
    cfae:	8c 91       	ld	r24, X
    cfb0:	99 27       	eor	r25, r25
    cfb2:	87 fd       	sbrc	r24, 7
    cfb4:	90 95       	com	r25
    cfb6:	82 87       	std	Z+10, r24	; 0x0a
    cfb8:	93 87       	std	Z+11, r25	; 0x0b
    cfba:	0e 94 93 b2 	call	0x16526	; 0x16526 <sprintf_P>
    cfbe:	ac 01       	movw	r20, r24
    cfc0:	80 91 f8 24 	lds	r24, 0x24F8
    cfc4:	90 91 f9 24 	lds	r25, 0x24F9
    cfc8:	ed b7       	in	r30, 0x3d	; 61
    cfca:	fe b7       	in	r31, 0x3e	; 62
    cfcc:	3c 96       	adiw	r30, 0x0c	; 12
    cfce:	ed bf       	out	0x3d, r30	; 61
    cfd0:	fe bf       	out	0x3e, r31	; 62
    cfd2:	be 01       	movw	r22, r28
    cfd4:	64 54       	subi	r22, 0x44	; 68
    cfd6:	7f 4f       	sbci	r23, 0xFF	; 255
    cfd8:	0e 94 95 6d 	call	0xdb2a	; 0xdb2a <arb_write>
    cfdc:	01 50       	subi	r16, 0x01	; 1
    cfde:	10 40       	sbci	r17, 0x00	; 0
    cfe0:	eb 81       	ldd	r30, Y+3	; 0x03
    cfe2:	fc 81       	ldd	r31, Y+4	; 0x04
    cfe4:	80 85       	ldd	r24, Z+8	; 0x08
    cfe6:	91 85       	ldd	r25, Z+9	; 0x09
    cfe8:	8b 83       	std	Y+3, r24	; 0x03
    cfea:	9c 83       	std	Y+4, r25	; 0x04
    cfec:	01 15       	cp	r16, r1
    cfee:	11 05       	cpc	r17, r1
    cff0:	09 f0       	breq	.+2      	; 0xcff4 <arb_console+0x932>
    cff2:	b0 cf       	rjmp	.-160    	; 0xcf54 <arb_console+0x892>
    cff4:	00 d0       	rcall	.+0      	; 0xcff6 <arb_console+0x934>
    cff6:	0f 92       	push	r0
    cff8:	ec eb       	ldi	r30, 0xBC	; 188
    cffa:	f0 e0       	ldi	r31, 0x00	; 0
    cffc:	ec 0f       	add	r30, r28
    cffe:	fd 1f       	adc	r31, r29
    d000:	ad b7       	in	r26, 0x3d	; 61
    d002:	be b7       	in	r27, 0x3e	; 62
    d004:	11 96       	adiw	r26, 0x01	; 1
    d006:	ed 93       	st	X+, r30
    d008:	fc 93       	st	X, r31
    d00a:	12 97       	sbiw	r26, 0x02	; 2
    d00c:	82 eb       	ldi	r24, 0xB2	; 178
    d00e:	98 e0       	ldi	r25, 0x08	; 8
    d010:	7c cc       	rjmp	.-1800   	; 0xc90a <arb_console+0x248>
    d012:	ce 01       	movw	r24, r28
    d014:	85 5b       	subi	r24, 0xB5	; 181
    d016:	9f 4f       	sbci	r25, 0xFF	; 255
    d018:	62 e8       	ldi	r22, 0x82	; 130
    d01a:	73 e0       	ldi	r23, 0x03	; 3
    d01c:	0e 94 87 b1 	call	0x1630e	; 0x1630e <strcasecmp_P>
    d020:	89 2b       	or	r24, r25
    d022:	09 f0       	breq	.+2      	; 0xd026 <arb_console+0x964>
    d024:	33 c3       	rjmp	.+1638   	; 0xd68c <arb_console+0xfca>
    d026:	c5 54       	subi	r28, 0x45	; 69
    d028:	df 4f       	sbci	r29, 0xFF	; 255
    d02a:	88 81       	ld	r24, Y
    d02c:	cb 5b       	subi	r28, 0xBB	; 187
    d02e:	d0 40       	sbci	r29, 0x00	; 0
    d030:	81 30       	cpi	r24, 0x01	; 1
    d032:	09 f0       	breq	.+2      	; 0xd036 <arb_console+0x974>
    d034:	2b c3       	rjmp	.+1622   	; 0xd68c <arb_console+0xfca>
    d036:	80 91 ea 27 	lds	r24, 0x27EA
    d03a:	90 91 eb 27 	lds	r25, 0x27EB
    d03e:	a0 e0       	ldi	r26, 0x00	; 0
    d040:	b0 e0       	ldi	r27, 0x00	; 0
    d042:	1c 01       	movw	r2, r24
    d044:	2d 01       	movw	r4, r26
    d046:	c6 50       	subi	r28, 0x06	; 6
    d048:	de 4f       	sbci	r29, 0xFE	; 254
    d04a:	e8 80       	ld	r14, Y
    d04c:	f9 80       	ldd	r15, Y+1	; 0x01
    d04e:	0a 81       	ldd	r16, Y+2	; 0x02
    d050:	1b 81       	ldd	r17, Y+3	; 0x03
    d052:	ca 5f       	subi	r28, 0xFA	; 250
    d054:	d1 40       	sbci	r29, 0x01	; 1
    d056:	2e 18       	sub	r2, r14
    d058:	3f 08       	sbc	r3, r15
    d05a:	40 0a       	sbc	r4, r16
    d05c:	51 0a       	sbc	r5, r17
    d05e:	5f ef       	ldi	r21, 0xFF	; 255
    d060:	a5 2e       	mov	r10, r21
    d062:	5f e3       	ldi	r21, 0x3F	; 63
    d064:	b5 2e       	mov	r11, r21
    d066:	c1 2c       	mov	r12, r1
    d068:	d1 2c       	mov	r13, r1
    d06a:	a8 1a       	sub	r10, r24
    d06c:	b9 0a       	sbc	r11, r25
    d06e:	ca 0a       	sbc	r12, r26
    d070:	db 0a       	sbc	r13, r27
    d072:	80 91 f9 23 	lds	r24, 0x23F9
    d076:	90 91 fa 23 	lds	r25, 0x23FA
    d07a:	a0 e0       	ldi	r26, 0x00	; 0
    d07c:	b0 e0       	ldi	r27, 0x00	; 0
    d07e:	a8 1a       	sub	r10, r24
    d080:	b9 0a       	sbc	r11, r25
    d082:	ca 0a       	sbc	r12, r26
    d084:	db 0a       	sbc	r13, r27
    d086:	ce 5f       	subi	r28, 0xFE	; 254
    d088:	dd 4f       	sbci	r29, 0xFD	; 253
    d08a:	08 81       	ld	r16, Y
    d08c:	19 81       	ldd	r17, Y+1	; 0x01
    d08e:	2a 81       	ldd	r18, Y+2	; 0x02
    d090:	3b 81       	ldd	r19, Y+3	; 0x03
    d092:	c2 50       	subi	r28, 0x02	; 2
    d094:	d2 40       	sbci	r29, 0x02	; 2
    d096:	02 0d       	add	r16, r2
    d098:	13 1d       	adc	r17, r3
    d09a:	24 1d       	adc	r18, r4
    d09c:	35 1d       	adc	r19, r5
    d09e:	c8 51       	subi	r28, 0x18	; 24
    d0a0:	de 4f       	sbci	r29, 0xFE	; 254
    d0a2:	08 83       	st	Y, r16
    d0a4:	19 83       	std	Y+1, r17	; 0x01
    d0a6:	2a 83       	std	Y+2, r18	; 0x02
    d0a8:	3b 83       	std	Y+3, r19	; 0x03
    d0aa:	c8 5e       	subi	r28, 0xE8	; 232
    d0ac:	d1 40       	sbci	r29, 0x01	; 1
    d0ae:	44 e6       	ldi	r20, 0x64	; 100
    d0b0:	64 2e       	mov	r6, r20
    d0b2:	71 2c       	mov	r7, r1
    d0b4:	81 2c       	mov	r8, r1
    d0b6:	91 2c       	mov	r9, r1
    d0b8:	c9 01       	movw	r24, r18
    d0ba:	b8 01       	movw	r22, r16
    d0bc:	24 e6       	ldi	r18, 0x64	; 100
    d0be:	30 e0       	ldi	r19, 0x00	; 0
    d0c0:	40 e0       	ldi	r20, 0x00	; 0
    d0c2:	50 e0       	ldi	r21, 0x00	; 0
    d0c4:	0e 94 cd b4 	call	0x1699a	; 0x1699a <__mulsi3>
    d0c8:	ca 5f       	subi	r28, 0xFA	; 250
    d0ca:	dd 4f       	sbci	r29, 0xFD	; 253
    d0cc:	28 81       	ld	r18, Y
    d0ce:	39 81       	ldd	r19, Y+1	; 0x01
    d0d0:	4a 81       	ldd	r20, Y+2	; 0x02
    d0d2:	5b 81       	ldd	r21, Y+3	; 0x03
    d0d4:	c6 50       	subi	r28, 0x06	; 6
    d0d6:	d2 40       	sbci	r29, 0x02	; 2
    d0d8:	0e 94 0e b5 	call	0x16a1c	; 0x16a1c <__divmodsi4>
    d0dc:	79 01       	movw	r14, r18
    d0de:	8a 01       	movw	r16, r20
    d0e0:	00 d0       	rcall	.+0      	; 0xd0e2 <arb_console+0xa20>
    d0e2:	0f 92       	push	r0
    d0e4:	ec eb       	ldi	r30, 0xBC	; 188
    d0e6:	f0 e0       	ldi	r31, 0x00	; 0
    d0e8:	ec 0f       	add	r30, r28
    d0ea:	fd 1f       	adc	r31, r29
    d0ec:	ad b7       	in	r26, 0x3d	; 61
    d0ee:	be b7       	in	r27, 0x3e	; 62
    d0f0:	11 96       	adiw	r26, 0x01	; 1
    d0f2:	ed 93       	st	X+, r30
    d0f4:	fc 93       	st	X, r31
    d0f6:	12 97       	sbiw	r26, 0x02	; 2
    d0f8:	28 e8       	ldi	r18, 0x88	; 136
    d0fa:	3c e0       	ldi	r19, 0x0C	; 12
    d0fc:	13 96       	adiw	r26, 0x03	; 3
    d0fe:	2d 93       	st	X+, r18
    d100:	3c 93       	st	X, r19
    d102:	14 97       	sbiw	r26, 0x04	; 4
    d104:	0e 94 93 b2 	call	0x16526	; 0x16526 <sprintf_P>
    d108:	ac 01       	movw	r20, r24
    d10a:	80 91 f8 24 	lds	r24, 0x24F8
    d10e:	90 91 f9 24 	lds	r25, 0x24F9
    d112:	0f 90       	pop	r0
    d114:	0f 90       	pop	r0
    d116:	0f 90       	pop	r0
    d118:	0f 90       	pop	r0
    d11a:	be 01       	movw	r22, r28
    d11c:	64 54       	subi	r22, 0x44	; 68
    d11e:	7f 4f       	sbci	r23, 0xFF	; 255
    d120:	0e 94 95 6d 	call	0xdb2a	; 0xdb2a <arb_write>
    d124:	00 d0       	rcall	.+0      	; 0xd126 <arb_console+0xa64>
    d126:	0f 92       	push	r0
    d128:	ec eb       	ldi	r30, 0xBC	; 188
    d12a:	f0 e0       	ldi	r31, 0x00	; 0
    d12c:	ec 0f       	add	r30, r28
    d12e:	fd 1f       	adc	r31, r29
    d130:	ad b7       	in	r26, 0x3d	; 61
    d132:	be b7       	in	r27, 0x3e	; 62
    d134:	11 96       	adiw	r26, 0x01	; 1
    d136:	ed 93       	st	X+, r30
    d138:	fc 93       	st	X, r31
    d13a:	12 97       	sbiw	r26, 0x02	; 2
    d13c:	8a e5       	ldi	r24, 0x5A	; 90
    d13e:	9c e0       	ldi	r25, 0x0C	; 12
    d140:	13 96       	adiw	r26, 0x03	; 3
    d142:	8d 93       	st	X+, r24
    d144:	9c 93       	st	X, r25
    d146:	14 97       	sbiw	r26, 0x04	; 4
    d148:	0e 94 93 b2 	call	0x16526	; 0x16526 <sprintf_P>
    d14c:	ac 01       	movw	r20, r24
    d14e:	80 91 f8 24 	lds	r24, 0x24F8
    d152:	90 91 f9 24 	lds	r25, 0x24F9
    d156:	0f 90       	pop	r0
    d158:	0f 90       	pop	r0
    d15a:	0f 90       	pop	r0
    d15c:	0f 90       	pop	r0
    d15e:	be 01       	movw	r22, r28
    d160:	64 54       	subi	r22, 0x44	; 68
    d162:	7f 4f       	sbci	r23, 0xFF	; 255
    d164:	0e 94 95 6d 	call	0xdb2a	; 0xdb2a <arb_write>
    d168:	00 d0       	rcall	.+0      	; 0xd16a <arb_console+0xaa8>
    d16a:	0f 92       	push	r0
    d16c:	ec eb       	ldi	r30, 0xBC	; 188
    d16e:	f0 e0       	ldi	r31, 0x00	; 0
    d170:	ec 0f       	add	r30, r28
    d172:	fd 1f       	adc	r31, r29
    d174:	ad b7       	in	r26, 0x3d	; 61
    d176:	be b7       	in	r27, 0x3e	; 62
    d178:	11 96       	adiw	r26, 0x01	; 1
    d17a:	ed 93       	st	X+, r30
    d17c:	fc 93       	st	X, r31
    d17e:	12 97       	sbiw	r26, 0x02	; 2
    d180:	8c e2       	ldi	r24, 0x2C	; 44
    d182:	9c e0       	ldi	r25, 0x0C	; 12
    d184:	13 96       	adiw	r26, 0x03	; 3
    d186:	8d 93       	st	X+, r24
    d188:	9c 93       	st	X, r25
    d18a:	14 97       	sbiw	r26, 0x04	; 4
    d18c:	0e 94 93 b2 	call	0x16526	; 0x16526 <sprintf_P>
    d190:	ac 01       	movw	r20, r24
    d192:	80 91 f8 24 	lds	r24, 0x24F8
    d196:	90 91 f9 24 	lds	r25, 0x24F9
    d19a:	0f 90       	pop	r0
    d19c:	0f 90       	pop	r0
    d19e:	0f 90       	pop	r0
    d1a0:	0f 90       	pop	r0
    d1a2:	be 01       	movw	r22, r28
    d1a4:	64 54       	subi	r22, 0x44	; 68
    d1a6:	7f 4f       	sbci	r23, 0xFF	; 255
    d1a8:	0e 94 95 6d 	call	0xdb2a	; 0xdb2a <arb_write>
    d1ac:	2d b7       	in	r18, 0x3d	; 61
    d1ae:	3e b7       	in	r19, 0x3e	; 62
    d1b0:	2a 50       	subi	r18, 0x0A	; 10
    d1b2:	30 40       	sbci	r19, 0x00	; 0
    d1b4:	2d bf       	out	0x3d, r18	; 61
    d1b6:	3e bf       	out	0x3e, r19	; 62
    d1b8:	ed b7       	in	r30, 0x3d	; 61
    d1ba:	fe b7       	in	r31, 0x3e	; 62
    d1bc:	31 96       	adiw	r30, 0x01	; 1
    d1be:	2c eb       	ldi	r18, 0xBC	; 188
    d1c0:	30 e0       	ldi	r19, 0x00	; 0
    d1c2:	2c 0f       	add	r18, r28
    d1c4:	3d 1f       	adc	r19, r29
    d1c6:	ad b7       	in	r26, 0x3d	; 61
    d1c8:	be b7       	in	r27, 0x3e	; 62
    d1ca:	11 96       	adiw	r26, 0x01	; 1
    d1cc:	2d 93       	st	X+, r18
    d1ce:	3c 93       	st	X, r19
    d1d0:	12 97       	sbiw	r26, 0x02	; 2
    d1d2:	89 e0       	ldi	r24, 0x09	; 9
    d1d4:	9c e0       	ldi	r25, 0x0C	; 12
    d1d6:	82 83       	std	Z+2, r24	; 0x02
    d1d8:	93 83       	std	Z+3, r25	; 0x03
    d1da:	40 e0       	ldi	r20, 0x00	; 0
    d1dc:	50 e2       	ldi	r21, 0x20	; 32
    d1de:	44 83       	std	Z+4, r20	; 0x04
    d1e0:	55 83       	std	Z+5, r21	; 0x05
    d1e2:	ca 50       	subi	r28, 0x0A	; 10
    d1e4:	de 4f       	sbci	r29, 0xFE	; 254
    d1e6:	68 81       	ld	r22, Y
    d1e8:	79 81       	ldd	r23, Y+1	; 0x01
    d1ea:	8a 81       	ldd	r24, Y+2	; 0x02
    d1ec:	9b 81       	ldd	r25, Y+3	; 0x03
    d1ee:	c6 5f       	subi	r28, 0xF6	; 246
    d1f0:	d1 40       	sbci	r29, 0x01	; 1
    d1f2:	66 83       	std	Z+6, r22	; 0x06
    d1f4:	77 83       	std	Z+7, r23	; 0x07
    d1f6:	80 87       	std	Z+8, r24	; 0x08
    d1f8:	91 87       	std	Z+9, r25	; 0x09
    d1fa:	0e 94 93 b2 	call	0x16526	; 0x16526 <sprintf_P>
    d1fe:	ac 01       	movw	r20, r24
    d200:	80 91 f8 24 	lds	r24, 0x24F8
    d204:	90 91 f9 24 	lds	r25, 0x24F9
    d208:	ad b7       	in	r26, 0x3d	; 61
    d20a:	be b7       	in	r27, 0x3e	; 62
    d20c:	1a 96       	adiw	r26, 0x0a	; 10
    d20e:	ad bf       	out	0x3d, r26	; 61
    d210:	be bf       	out	0x3e, r27	; 62
    d212:	be 01       	movw	r22, r28
    d214:	64 54       	subi	r22, 0x44	; 68
    d216:	7f 4f       	sbci	r23, 0xFF	; 255
    d218:	0e 94 95 6d 	call	0xdb2a	; 0xdb2a <arb_write>
    d21c:	ed b7       	in	r30, 0x3d	; 61
    d21e:	fe b7       	in	r31, 0x3e	; 62
    d220:	3a 97       	sbiw	r30, 0x0a	; 10
    d222:	ed bf       	out	0x3d, r30	; 61
    d224:	fe bf       	out	0x3e, r31	; 62
    d226:	31 96       	adiw	r30, 0x01	; 1
    d228:	2c eb       	ldi	r18, 0xBC	; 188
    d22a:	30 e0       	ldi	r19, 0x00	; 0
    d22c:	2c 0f       	add	r18, r28
    d22e:	3d 1f       	adc	r19, r29
    d230:	ad b7       	in	r26, 0x3d	; 61
    d232:	be b7       	in	r27, 0x3e	; 62
    d234:	11 96       	adiw	r26, 0x01	; 1
    d236:	2d 93       	st	X+, r18
    d238:	3c 93       	st	X, r19
    d23a:	12 97       	sbiw	r26, 0x02	; 2
    d23c:	86 ee       	ldi	r24, 0xE6	; 230
    d23e:	9b e0       	ldi	r25, 0x0B	; 11
    d240:	82 83       	std	Z+2, r24	; 0x02
    d242:	93 83       	std	Z+3, r25	; 0x03
    d244:	48 e6       	ldi	r20, 0x68	; 104
    d246:	54 e2       	ldi	r21, 0x24	; 36
    d248:	44 83       	std	Z+4, r20	; 0x04
    d24a:	55 83       	std	Z+5, r21	; 0x05
    d24c:	c2 50       	subi	r28, 0x02	; 2
    d24e:	de 4f       	sbci	r29, 0xFE	; 254
    d250:	68 81       	ld	r22, Y
    d252:	79 81       	ldd	r23, Y+1	; 0x01
    d254:	8a 81       	ldd	r24, Y+2	; 0x02
    d256:	9b 81       	ldd	r25, Y+3	; 0x03
    d258:	ce 5f       	subi	r28, 0xFE	; 254
    d25a:	d1 40       	sbci	r29, 0x01	; 1
    d25c:	66 83       	std	Z+6, r22	; 0x06
    d25e:	77 83       	std	Z+7, r23	; 0x07
    d260:	80 87       	std	Z+8, r24	; 0x08
    d262:	91 87       	std	Z+9, r25	; 0x09
    d264:	0e 94 93 b2 	call	0x16526	; 0x16526 <sprintf_P>
    d268:	ac 01       	movw	r20, r24
    d26a:	80 91 f8 24 	lds	r24, 0x24F8
    d26e:	90 91 f9 24 	lds	r25, 0x24F9
    d272:	ad b7       	in	r26, 0x3d	; 61
    d274:	be b7       	in	r27, 0x3e	; 62
    d276:	1a 96       	adiw	r26, 0x0a	; 10
    d278:	ad bf       	out	0x3d, r26	; 61
    d27a:	be bf       	out	0x3e, r27	; 62
    d27c:	be 01       	movw	r22, r28
    d27e:	64 54       	subi	r22, 0x44	; 68
    d280:	7f 4f       	sbci	r23, 0xFF	; 255
    d282:	0e 94 95 6d 	call	0xdb2a	; 0xdb2a <arb_write>
    d286:	ed b7       	in	r30, 0x3d	; 61
    d288:	fe b7       	in	r31, 0x3e	; 62
    d28a:	3a 97       	sbiw	r30, 0x0a	; 10
    d28c:	ed bf       	out	0x3d, r30	; 61
    d28e:	fe bf       	out	0x3e, r31	; 62
    d290:	31 96       	adiw	r30, 0x01	; 1
    d292:	2c eb       	ldi	r18, 0xBC	; 188
    d294:	30 e0       	ldi	r19, 0x00	; 0
    d296:	2c 0f       	add	r18, r28
    d298:	3d 1f       	adc	r19, r29
    d29a:	ad b7       	in	r26, 0x3d	; 61
    d29c:	be b7       	in	r27, 0x3e	; 62
    d29e:	11 96       	adiw	r26, 0x01	; 1
    d2a0:	2d 93       	st	X+, r18
    d2a2:	3c 93       	st	X, r19
    d2a4:	12 97       	sbiw	r26, 0x02	; 2
    d2a6:	83 ec       	ldi	r24, 0xC3	; 195
    d2a8:	9b e0       	ldi	r25, 0x0B	; 11
    d2aa:	82 83       	std	Z+2, r24	; 0x02
    d2ac:	93 83       	std	Z+3, r25	; 0x03
    d2ae:	4e ee       	ldi	r20, 0xEE	; 238
    d2b0:	57 e2       	ldi	r21, 0x27	; 39
    d2b2:	44 83       	std	Z+4, r20	; 0x04
    d2b4:	55 83       	std	Z+5, r21	; 0x05
    d2b6:	26 82       	std	Z+6, r2	; 0x06
    d2b8:	37 82       	std	Z+7, r3	; 0x07
    d2ba:	40 86       	std	Z+8, r4	; 0x08
    d2bc:	51 86       	std	Z+9, r5	; 0x09
    d2be:	0e 94 93 b2 	call	0x16526	; 0x16526 <sprintf_P>
    d2c2:	ac 01       	movw	r20, r24
    d2c4:	80 91 f8 24 	lds	r24, 0x24F8
    d2c8:	90 91 f9 24 	lds	r25, 0x24F9
    d2cc:	6d b7       	in	r22, 0x3d	; 61
    d2ce:	7e b7       	in	r23, 0x3e	; 62
    d2d0:	66 5f       	subi	r22, 0xF6	; 246
    d2d2:	7f 4f       	sbci	r23, 0xFF	; 255
    d2d4:	6d bf       	out	0x3d, r22	; 61
    d2d6:	7e bf       	out	0x3e, r23	; 62
    d2d8:	be 01       	movw	r22, r28
    d2da:	64 54       	subi	r22, 0x44	; 68
    d2dc:	7f 4f       	sbci	r23, 0xFF	; 255
    d2de:	0e 94 95 6d 	call	0xdb2a	; 0xdb2a <arb_write>
    d2e2:	00 d0       	rcall	.+0      	; 0xd2e4 <arb_console+0xc22>
    d2e4:	0f 92       	push	r0
    d2e6:	ec eb       	ldi	r30, 0xBC	; 188
    d2e8:	f0 e0       	ldi	r31, 0x00	; 0
    d2ea:	ec 0f       	add	r30, r28
    d2ec:	fd 1f       	adc	r31, r29
    d2ee:	ad b7       	in	r26, 0x3d	; 61
    d2f0:	be b7       	in	r27, 0x3e	; 62
    d2f2:	11 96       	adiw	r26, 0x01	; 1
    d2f4:	ed 93       	st	X+, r30
    d2f6:	fc 93       	st	X, r31
    d2f8:	12 97       	sbiw	r26, 0x02	; 2
    d2fa:	85 e9       	ldi	r24, 0x95	; 149
    d2fc:	9b e0       	ldi	r25, 0x0B	; 11
    d2fe:	13 96       	adiw	r26, 0x03	; 3
    d300:	8d 93       	st	X+, r24
    d302:	9c 93       	st	X, r25
    d304:	14 97       	sbiw	r26, 0x04	; 4
    d306:	0e 94 93 b2 	call	0x16526	; 0x16526 <sprintf_P>
    d30a:	ac 01       	movw	r20, r24
    d30c:	80 91 f8 24 	lds	r24, 0x24F8
    d310:	90 91 f9 24 	lds	r25, 0x24F9
    d314:	0f 90       	pop	r0
    d316:	0f 90       	pop	r0
    d318:	0f 90       	pop	r0
    d31a:	0f 90       	pop	r0
    d31c:	be 01       	movw	r22, r28
    d31e:	64 54       	subi	r22, 0x44	; 68
    d320:	7f 4f       	sbci	r23, 0xFF	; 255
    d322:	0e 94 95 6d 	call	0xdb2a	; 0xdb2a <arb_write>
    d326:	2d b7       	in	r18, 0x3d	; 61
    d328:	3e b7       	in	r19, 0x3e	; 62
    d32a:	28 50       	subi	r18, 0x08	; 8
    d32c:	30 40       	sbci	r19, 0x00	; 0
    d32e:	2d bf       	out	0x3d, r18	; 61
    d330:	3e bf       	out	0x3e, r19	; 62
    d332:	ed b7       	in	r30, 0x3d	; 61
    d334:	fe b7       	in	r31, 0x3e	; 62
    d336:	31 96       	adiw	r30, 0x01	; 1
    d338:	2c eb       	ldi	r18, 0xBC	; 188
    d33a:	30 e0       	ldi	r19, 0x00	; 0
    d33c:	2c 0f       	add	r18, r28
    d33e:	3d 1f       	adc	r19, r29
    d340:	ad b7       	in	r26, 0x3d	; 61
    d342:	be b7       	in	r27, 0x3e	; 62
    d344:	11 96       	adiw	r26, 0x01	; 1
    d346:	2d 93       	st	X+, r18
    d348:	3c 93       	st	X, r19
    d34a:	12 97       	sbiw	r26, 0x02	; 2
    d34c:	80 e7       	ldi	r24, 0x70	; 112
    d34e:	9b e0       	ldi	r25, 0x0B	; 11
    d350:	82 83       	std	Z+2, r24	; 0x02
    d352:	93 83       	std	Z+3, r25	; 0x03
    d354:	c8 51       	subi	r28, 0x18	; 24
    d356:	de 4f       	sbci	r29, 0xFE	; 254
    d358:	48 81       	ld	r20, Y
    d35a:	59 81       	ldd	r21, Y+1	; 0x01
    d35c:	6a 81       	ldd	r22, Y+2	; 0x02
    d35e:	7b 81       	ldd	r23, Y+3	; 0x03
    d360:	c8 5e       	subi	r28, 0xE8	; 232
    d362:	d1 40       	sbci	r29, 0x01	; 1
    d364:	44 83       	std	Z+4, r20	; 0x04
    d366:	55 83       	std	Z+5, r21	; 0x05
    d368:	66 83       	std	Z+6, r22	; 0x06
    d36a:	77 83       	std	Z+7, r23	; 0x07
    d36c:	0e 94 93 b2 	call	0x16526	; 0x16526 <sprintf_P>
    d370:	ac 01       	movw	r20, r24
    d372:	80 91 f8 24 	lds	r24, 0x24F8
    d376:	90 91 f9 24 	lds	r25, 0x24F9
    d37a:	6d b7       	in	r22, 0x3d	; 61
    d37c:	7e b7       	in	r23, 0x3e	; 62
    d37e:	68 5f       	subi	r22, 0xF8	; 248
    d380:	7f 4f       	sbci	r23, 0xFF	; 255
    d382:	6d bf       	out	0x3d, r22	; 61
    d384:	7e bf       	out	0x3e, r23	; 62
    d386:	be 01       	movw	r22, r28
    d388:	64 54       	subi	r22, 0x44	; 68
    d38a:	7f 4f       	sbci	r23, 0xFF	; 255
    d38c:	0e 94 95 6d 	call	0xdb2a	; 0xdb2a <arb_write>
    d390:	8d b7       	in	r24, 0x3d	; 61
    d392:	9e b7       	in	r25, 0x3e	; 62
    d394:	08 97       	sbiw	r24, 0x08	; 8
    d396:	8d bf       	out	0x3d, r24	; 61
    d398:	9e bf       	out	0x3e, r25	; 62
    d39a:	ed b7       	in	r30, 0x3d	; 61
    d39c:	fe b7       	in	r31, 0x3e	; 62
    d39e:	31 96       	adiw	r30, 0x01	; 1
    d3a0:	2c eb       	ldi	r18, 0xBC	; 188
    d3a2:	30 e0       	ldi	r19, 0x00	; 0
    d3a4:	2c 0f       	add	r18, r28
    d3a6:	3d 1f       	adc	r19, r29
    d3a8:	ad b7       	in	r26, 0x3d	; 61
    d3aa:	be b7       	in	r27, 0x3e	; 62
    d3ac:	11 96       	adiw	r26, 0x01	; 1
    d3ae:	2d 93       	st	X+, r18
    d3b0:	3c 93       	st	X, r19
    d3b2:	12 97       	sbiw	r26, 0x02	; 2
    d3b4:	89 e4       	ldi	r24, 0x49	; 73
    d3b6:	9b e0       	ldi	r25, 0x0B	; 11
    d3b8:	82 83       	std	Z+2, r24	; 0x02
    d3ba:	93 83       	std	Z+3, r25	; 0x03
    d3bc:	e4 82       	std	Z+4, r14	; 0x04
    d3be:	f5 82       	std	Z+5, r15	; 0x05
    d3c0:	06 83       	std	Z+6, r16	; 0x06
    d3c2:	17 83       	std	Z+7, r17	; 0x07
    d3c4:	0e 94 93 b2 	call	0x16526	; 0x16526 <sprintf_P>
    d3c8:	ac 01       	movw	r20, r24
    d3ca:	80 91 f8 24 	lds	r24, 0x24F8
    d3ce:	90 91 f9 24 	lds	r25, 0x24F9
    d3d2:	6d b7       	in	r22, 0x3d	; 61
    d3d4:	7e b7       	in	r23, 0x3e	; 62
    d3d6:	68 5f       	subi	r22, 0xF8	; 248
    d3d8:	7f 4f       	sbci	r23, 0xFF	; 255
    d3da:	6d bf       	out	0x3d, r22	; 61
    d3dc:	7e bf       	out	0x3e, r23	; 62
    d3de:	be 01       	movw	r22, r28
    d3e0:	64 54       	subi	r22, 0x44	; 68
    d3e2:	7f 4f       	sbci	r23, 0xFF	; 255
    d3e4:	0e 94 95 6d 	call	0xdb2a	; 0xdb2a <arb_write>
    d3e8:	00 d0       	rcall	.+0      	; 0xd3ea <arb_console+0xd28>
    d3ea:	0f 92       	push	r0
    d3ec:	ec eb       	ldi	r30, 0xBC	; 188
    d3ee:	f0 e0       	ldi	r31, 0x00	; 0
    d3f0:	ec 0f       	add	r30, r28
    d3f2:	fd 1f       	adc	r31, r29
    d3f4:	ad b7       	in	r26, 0x3d	; 61
    d3f6:	be b7       	in	r27, 0x3e	; 62
    d3f8:	11 96       	adiw	r26, 0x01	; 1
    d3fa:	ed 93       	st	X+, r30
    d3fc:	fc 93       	st	X, r31
    d3fe:	12 97       	sbiw	r26, 0x02	; 2
    d400:	8b e1       	ldi	r24, 0x1B	; 27
    d402:	9b e0       	ldi	r25, 0x0B	; 11
    d404:	13 96       	adiw	r26, 0x03	; 3
    d406:	8d 93       	st	X+, r24
    d408:	9c 93       	st	X, r25
    d40a:	14 97       	sbiw	r26, 0x04	; 4
    d40c:	0e 94 93 b2 	call	0x16526	; 0x16526 <sprintf_P>
    d410:	ac 01       	movw	r20, r24
    d412:	80 91 f8 24 	lds	r24, 0x24F8
    d416:	90 91 f9 24 	lds	r25, 0x24F9
    d41a:	0f 90       	pop	r0
    d41c:	0f 90       	pop	r0
    d41e:	0f 90       	pop	r0
    d420:	0f 90       	pop	r0
    d422:	be 01       	movw	r22, r28
    d424:	64 54       	subi	r22, 0x44	; 68
    d426:	7f 4f       	sbci	r23, 0xFF	; 255
    d428:	0e 94 95 6d 	call	0xdb2a	; 0xdb2a <arb_write>
    d42c:	2d b7       	in	r18, 0x3d	; 61
    d42e:	3e b7       	in	r19, 0x3e	; 62
    d430:	28 50       	subi	r18, 0x08	; 8
    d432:	30 40       	sbci	r19, 0x00	; 0
    d434:	2d bf       	out	0x3d, r18	; 61
    d436:	3e bf       	out	0x3e, r19	; 62
    d438:	ed b7       	in	r30, 0x3d	; 61
    d43a:	fe b7       	in	r31, 0x3e	; 62
    d43c:	31 96       	adiw	r30, 0x01	; 1
    d43e:	2c eb       	ldi	r18, 0xBC	; 188
    d440:	30 e0       	ldi	r19, 0x00	; 0
    d442:	2c 0f       	add	r18, r28
    d444:	3d 1f       	adc	r19, r29
    d446:	ad b7       	in	r26, 0x3d	; 61
    d448:	be b7       	in	r27, 0x3e	; 62
    d44a:	11 96       	adiw	r26, 0x01	; 1
    d44c:	2d 93       	st	X+, r18
    d44e:	3c 93       	st	X, r19
    d450:	12 97       	sbiw	r26, 0x02	; 2
    d452:	86 ef       	ldi	r24, 0xF6	; 246
    d454:	9a e0       	ldi	r25, 0x0A	; 10
    d456:	82 83       	std	Z+2, r24	; 0x02
    d458:	93 83       	std	Z+3, r25	; 0x03
    d45a:	a4 82       	std	Z+4, r10	; 0x04
    d45c:	b5 82       	std	Z+5, r11	; 0x05
    d45e:	c6 82       	std	Z+6, r12	; 0x06
    d460:	d7 82       	std	Z+7, r13	; 0x07
    d462:	0e 94 93 b2 	call	0x16526	; 0x16526 <sprintf_P>
    d466:	ac 01       	movw	r20, r24
    d468:	80 91 f8 24 	lds	r24, 0x24F8
    d46c:	90 91 f9 24 	lds	r25, 0x24F9
    d470:	6d b7       	in	r22, 0x3d	; 61
    d472:	7e b7       	in	r23, 0x3e	; 62
    d474:	68 5f       	subi	r22, 0xF8	; 248
    d476:	7f 4f       	sbci	r23, 0xFF	; 255
    d478:	6d bf       	out	0x3d, r22	; 61
    d47a:	7e bf       	out	0x3e, r23	; 62
    d47c:	be 01       	movw	r22, r28
    d47e:	64 54       	subi	r22, 0x44	; 68
    d480:	7f 4f       	sbci	r23, 0xFF	; 255
    d482:	0e 94 95 6d 	call	0xdb2a	; 0xdb2a <arb_write>
    d486:	8d b7       	in	r24, 0x3d	; 61
    d488:	9e b7       	in	r25, 0x3e	; 62
    d48a:	08 97       	sbiw	r24, 0x08	; 8
    d48c:	8d bf       	out	0x3d, r24	; 61
    d48e:	9e bf       	out	0x3e, r25	; 62
    d490:	ed b7       	in	r30, 0x3d	; 61
    d492:	fe b7       	in	r31, 0x3e	; 62
    d494:	31 96       	adiw	r30, 0x01	; 1
    d496:	2c eb       	ldi	r18, 0xBC	; 188
    d498:	30 e0       	ldi	r19, 0x00	; 0
    d49a:	2c 0f       	add	r18, r28
    d49c:	3d 1f       	adc	r19, r29
    d49e:	ad b7       	in	r26, 0x3d	; 61
    d4a0:	be b7       	in	r27, 0x3e	; 62
    d4a2:	11 96       	adiw	r26, 0x01	; 1
    d4a4:	2d 93       	st	X+, r18
    d4a6:	3c 93       	st	X, r19
    d4a8:	12 97       	sbiw	r26, 0x02	; 2
    d4aa:	8f ec       	ldi	r24, 0xCF	; 207
    d4ac:	9a e0       	ldi	r25, 0x0A	; 10
    d4ae:	82 83       	std	Z+2, r24	; 0x02
    d4b0:	93 83       	std	Z+3, r25	; 0x03
    d4b2:	6e 18       	sub	r6, r14
    d4b4:	7f 08       	sbc	r7, r15
    d4b6:	80 0a       	sbc	r8, r16
    d4b8:	91 0a       	sbc	r9, r17
    d4ba:	64 82       	std	Z+4, r6	; 0x04
    d4bc:	75 82       	std	Z+5, r7	; 0x05
    d4be:	86 82       	std	Z+6, r8	; 0x06
    d4c0:	97 82       	std	Z+7, r9	; 0x07
    d4c2:	0e 94 93 b2 	call	0x16526	; 0x16526 <sprintf_P>
    d4c6:	ac 01       	movw	r20, r24
    d4c8:	80 91 f8 24 	lds	r24, 0x24F8
    d4cc:	90 91 f9 24 	lds	r25, 0x24F9
    d4d0:	6d b7       	in	r22, 0x3d	; 61
    d4d2:	7e b7       	in	r23, 0x3e	; 62
    d4d4:	68 5f       	subi	r22, 0xF8	; 248
    d4d6:	7f 4f       	sbci	r23, 0xFF	; 255
    d4d8:	6d bf       	out	0x3d, r22	; 61
    d4da:	7e bf       	out	0x3e, r23	; 62
    d4dc:	be 01       	movw	r22, r28
    d4de:	64 54       	subi	r22, 0x44	; 68
    d4e0:	7f 4f       	sbci	r23, 0xFF	; 255
    d4e2:	0e 94 95 6d 	call	0xdb2a	; 0xdb2a <arb_write>
    d4e6:	00 d0       	rcall	.+0      	; 0xd4e8 <arb_console+0xe26>
    d4e8:	0f 92       	push	r0
    d4ea:	ec eb       	ldi	r30, 0xBC	; 188
    d4ec:	f0 e0       	ldi	r31, 0x00	; 0
    d4ee:	ec 0f       	add	r30, r28
    d4f0:	fd 1f       	adc	r31, r29
    d4f2:	ad b7       	in	r26, 0x3d	; 61
    d4f4:	be b7       	in	r27, 0x3e	; 62
    d4f6:	11 96       	adiw	r26, 0x01	; 1
    d4f8:	ed 93       	st	X+, r30
    d4fa:	fc 93       	st	X, r31
    d4fc:	12 97       	sbiw	r26, 0x02	; 2
    d4fe:	81 ea       	ldi	r24, 0xA1	; 161
    d500:	9a e0       	ldi	r25, 0x0A	; 10
    d502:	13 96       	adiw	r26, 0x03	; 3
    d504:	8d 93       	st	X+, r24
    d506:	9c 93       	st	X, r25
    d508:	14 97       	sbiw	r26, 0x04	; 4
    d50a:	0e 94 93 b2 	call	0x16526	; 0x16526 <sprintf_P>
    d50e:	ac 01       	movw	r20, r24
    d510:	80 91 f8 24 	lds	r24, 0x24F8
    d514:	90 91 f9 24 	lds	r25, 0x24F9
    d518:	0f 90       	pop	r0
    d51a:	0f 90       	pop	r0
    d51c:	0f 90       	pop	r0
    d51e:	0f 90       	pop	r0
    d520:	be 01       	movw	r22, r28
    d522:	64 54       	subi	r22, 0x44	; 68
    d524:	7f 4f       	sbci	r23, 0xFF	; 255
    d526:	0e 94 95 6d 	call	0xdb2a	; 0xdb2a <arb_write>
    d52a:	0e 94 75 73 	call	0xe6ea	; 0xe6ea <arb_getOneMinLoadingEst>
    d52e:	0d b7       	in	r16, 0x3d	; 61
    d530:	1e b7       	in	r17, 0x3e	; 62
    d532:	08 50       	subi	r16, 0x08	; 8
    d534:	10 40       	sbci	r17, 0x00	; 0
    d536:	0d bf       	out	0x3d, r16	; 61
    d538:	1e bf       	out	0x3e, r17	; 62
    d53a:	0f 5f       	subi	r16, 0xFF	; 255
    d53c:	1f 4f       	sbci	r17, 0xFF	; 255
    d53e:	ec eb       	ldi	r30, 0xBC	; 188
    d540:	f0 e0       	ldi	r31, 0x00	; 0
    d542:	ec 0f       	add	r30, r28
    d544:	fd 1f       	adc	r31, r29
    d546:	ad b7       	in	r26, 0x3d	; 61
    d548:	be b7       	in	r27, 0x3e	; 62
    d54a:	11 96       	adiw	r26, 0x01	; 1
    d54c:	ed 93       	st	X+, r30
    d54e:	fc 93       	st	X, r31
    d550:	12 97       	sbiw	r26, 0x02	; 2
    d552:	28 e7       	ldi	r18, 0x78	; 120
    d554:	3a e0       	ldi	r19, 0x0A	; 10
    d556:	d8 01       	movw	r26, r16
    d558:	12 96       	adiw	r26, 0x02	; 2
    d55a:	2d 93       	st	X+, r18
    d55c:	3c 93       	st	X, r19
    d55e:	13 97       	sbiw	r26, 0x03	; 3
    d560:	0e 94 6b ad 	call	0x15ad6	; 0x15ad6 <__floatunsisf>
    d564:	20 e0       	ldi	r18, 0x00	; 0
    d566:	30 e0       	ldi	r19, 0x00	; 0
    d568:	48 ec       	ldi	r20, 0xC8	; 200
    d56a:	52 e4       	ldi	r21, 0x42	; 66
    d56c:	0e 94 d4 ae 	call	0x15da8	; 0x15da8 <__mulsf3>
    d570:	20 e0       	ldi	r18, 0x00	; 0
    d572:	30 e0       	ldi	r19, 0x00	; 0
    d574:	40 e0       	ldi	r20, 0x00	; 0
    d576:	58 e3       	ldi	r21, 0x38	; 56
    d578:	0e 94 d4 ae 	call	0x15da8	; 0x15da8 <__mulsf3>
    d57c:	f8 01       	movw	r30, r16
    d57e:	64 83       	std	Z+4, r22	; 0x04
    d580:	75 83       	std	Z+5, r23	; 0x05
    d582:	86 83       	std	Z+6, r24	; 0x06
    d584:	97 83       	std	Z+7, r25	; 0x07
    d586:	0e 94 93 b2 	call	0x16526	; 0x16526 <sprintf_P>
    d58a:	ac 01       	movw	r20, r24
    d58c:	80 91 f8 24 	lds	r24, 0x24F8
    d590:	90 91 f9 24 	lds	r25, 0x24F9
    d594:	0d b7       	in	r16, 0x3d	; 61
    d596:	1e b7       	in	r17, 0x3e	; 62
    d598:	08 5f       	subi	r16, 0xF8	; 248
    d59a:	1f 4f       	sbci	r17, 0xFF	; 255
    d59c:	0d bf       	out	0x3d, r16	; 61
    d59e:	1e bf       	out	0x3e, r17	; 62
    d5a0:	be 01       	movw	r22, r28
    d5a2:	64 54       	subi	r22, 0x44	; 68
    d5a4:	7f 4f       	sbci	r23, 0xFF	; 255
    d5a6:	0e 94 95 6d 	call	0xdb2a	; 0xdb2a <arb_write>
    d5aa:	00 d0       	rcall	.+0      	; 0xd5ac <arb_console+0xeea>
    d5ac:	0f 92       	push	r0
    d5ae:	ec eb       	ldi	r30, 0xBC	; 188
    d5b0:	f0 e0       	ldi	r31, 0x00	; 0
    d5b2:	ec 0f       	add	r30, r28
    d5b4:	fd 1f       	adc	r31, r29
    d5b6:	ad b7       	in	r26, 0x3d	; 61
    d5b8:	be b7       	in	r27, 0x3e	; 62
    d5ba:	11 96       	adiw	r26, 0x01	; 1
    d5bc:	ed 93       	st	X+, r30
    d5be:	fc 93       	st	X, r31
    d5c0:	12 97       	sbiw	r26, 0x02	; 2
    d5c2:	8a e4       	ldi	r24, 0x4A	; 74
    d5c4:	9a e0       	ldi	r25, 0x0A	; 10
    d5c6:	13 96       	adiw	r26, 0x03	; 3
    d5c8:	8d 93       	st	X+, r24
    d5ca:	9c 93       	st	X, r25
    d5cc:	14 97       	sbiw	r26, 0x04	; 4
    d5ce:	0e 94 93 b2 	call	0x16526	; 0x16526 <sprintf_P>
    d5d2:	ac 01       	movw	r20, r24
    d5d4:	80 91 f8 24 	lds	r24, 0x24F8
    d5d8:	90 91 f9 24 	lds	r25, 0x24F9
    d5dc:	0f 90       	pop	r0
    d5de:	0f 90       	pop	r0
    d5e0:	0f 90       	pop	r0
    d5e2:	0f 90       	pop	r0
    d5e4:	be 01       	movw	r22, r28
    d5e6:	64 54       	subi	r22, 0x44	; 68
    d5e8:	7f 4f       	sbci	r23, 0xFF	; 255
    d5ea:	0e 94 95 6d 	call	0xdb2a	; 0xdb2a <arb_write>
    d5ee:	0e 94 7e 73 	call	0xe6fc	; 0xe6fc <arb_getFiveMinLoadingEst>
    d5f2:	0d b7       	in	r16, 0x3d	; 61
    d5f4:	1e b7       	in	r17, 0x3e	; 62
    d5f6:	08 50       	subi	r16, 0x08	; 8
    d5f8:	10 40       	sbci	r17, 0x00	; 0
    d5fa:	0d bf       	out	0x3d, r16	; 61
    d5fc:	1e bf       	out	0x3e, r17	; 62
    d5fe:	0f 5f       	subi	r16, 0xFF	; 255
    d600:	1f 4f       	sbci	r17, 0xFF	; 255
    d602:	ec eb       	ldi	r30, 0xBC	; 188
    d604:	f0 e0       	ldi	r31, 0x00	; 0
    d606:	ec 0f       	add	r30, r28
    d608:	fd 1f       	adc	r31, r29
    d60a:	ad b7       	in	r26, 0x3d	; 61
    d60c:	be b7       	in	r27, 0x3e	; 62
    d60e:	11 96       	adiw	r26, 0x01	; 1
    d610:	ed 93       	st	X+, r30
    d612:	fc 93       	st	X, r31
    d614:	12 97       	sbiw	r26, 0x02	; 2
    d616:	21 e2       	ldi	r18, 0x21	; 33
    d618:	3a e0       	ldi	r19, 0x0A	; 10
    d61a:	d8 01       	movw	r26, r16
    d61c:	12 96       	adiw	r26, 0x02	; 2
    d61e:	2d 93       	st	X+, r18
    d620:	3c 93       	st	X, r19
    d622:	13 97       	sbiw	r26, 0x03	; 3
    d624:	0e 94 6b ad 	call	0x15ad6	; 0x15ad6 <__floatunsisf>
    d628:	20 e0       	ldi	r18, 0x00	; 0
    d62a:	30 e0       	ldi	r19, 0x00	; 0
    d62c:	48 ec       	ldi	r20, 0xC8	; 200
    d62e:	52 e4       	ldi	r21, 0x42	; 66
    d630:	0e 94 d4 ae 	call	0x15da8	; 0x15da8 <__mulsf3>
    d634:	20 e0       	ldi	r18, 0x00	; 0
    d636:	30 e0       	ldi	r19, 0x00	; 0
    d638:	40 e0       	ldi	r20, 0x00	; 0
    d63a:	58 e3       	ldi	r21, 0x38	; 56
    d63c:	0e 94 d4 ae 	call	0x15da8	; 0x15da8 <__mulsf3>
    d640:	f8 01       	movw	r30, r16
    d642:	64 83       	std	Z+4, r22	; 0x04
    d644:	75 83       	std	Z+5, r23	; 0x05
    d646:	86 83       	std	Z+6, r24	; 0x06
    d648:	97 83       	std	Z+7, r25	; 0x07
    d64a:	0e 94 93 b2 	call	0x16526	; 0x16526 <sprintf_P>
    d64e:	ac 01       	movw	r20, r24
    d650:	80 91 f8 24 	lds	r24, 0x24F8
    d654:	90 91 f9 24 	lds	r25, 0x24F9
    d658:	0d b7       	in	r16, 0x3d	; 61
    d65a:	1e b7       	in	r17, 0x3e	; 62
    d65c:	08 5f       	subi	r16, 0xF8	; 248
    d65e:	1f 4f       	sbci	r17, 0xFF	; 255
    d660:	0d bf       	out	0x3d, r16	; 61
    d662:	1e bf       	out	0x3e, r17	; 62
    d664:	be 01       	movw	r22, r28
    d666:	64 54       	subi	r22, 0x44	; 68
    d668:	7f 4f       	sbci	r23, 0xFF	; 255
    d66a:	0e 94 95 6d 	call	0xdb2a	; 0xdb2a <arb_write>
    d66e:	00 d0       	rcall	.+0      	; 0xd670 <arb_console+0xfae>
    d670:	0f 92       	push	r0
    d672:	ec eb       	ldi	r30, 0xBC	; 188
    d674:	f0 e0       	ldi	r31, 0x00	; 0
    d676:	ec 0f       	add	r30, r28
    d678:	fd 1f       	adc	r31, r29
    d67a:	ad b7       	in	r26, 0x3d	; 61
    d67c:	be b7       	in	r27, 0x3e	; 62
    d67e:	11 96       	adiw	r26, 0x01	; 1
    d680:	ed 93       	st	X+, r30
    d682:	fc 93       	st	X, r31
    d684:	12 97       	sbiw	r26, 0x02	; 2
    d686:	83 ef       	ldi	r24, 0xF3	; 243
    d688:	99 e0       	ldi	r25, 0x09	; 9
    d68a:	3f c9       	rjmp	.-3458   	; 0xc90a <arb_console+0x248>
    d68c:	ce 01       	movw	r24, r28
    d68e:	85 5b       	subi	r24, 0xB5	; 181
    d690:	9f 4f       	sbci	r25, 0xFF	; 255
    d692:	6f e7       	ldi	r22, 0x7F	; 127
    d694:	73 e0       	ldi	r23, 0x03	; 3
    d696:	0e 94 87 b1 	call	0x1630e	; 0x1630e <strcasecmp_P>
    d69a:	89 2b       	or	r24, r25
    d69c:	71 f4       	brne	.+28     	; 0xd6ba <arb_console+0xff8>
    d69e:	c5 54       	subi	r28, 0x45	; 69
    d6a0:	df 4f       	sbci	r29, 0xFF	; 255
    d6a2:	88 81       	ld	r24, Y
    d6a4:	cb 5b       	subi	r28, 0xBB	; 187
    d6a6:	d0 40       	sbci	r29, 0x00	; 0
    d6a8:	81 30       	cpi	r24, 0x01	; 1
    d6aa:	39 f4       	brne	.+14     	; 0xd6ba <arb_console+0xff8>
    d6ac:	80 91 fa 24 	lds	r24, 0x24FA
    d6b0:	90 91 fb 24 	lds	r25, 0x24FB
    d6b4:	65 e0       	ldi	r22, 0x05	; 5
    d6b6:	70 e0       	ldi	r23, 0x00	; 0
    d6b8:	22 c0       	rjmp	.+68     	; 0xd6fe <arb_console+0x103c>
    d6ba:	ce 01       	movw	r24, r28
    d6bc:	85 5b       	subi	r24, 0xB5	; 181
    d6be:	9f 4f       	sbci	r25, 0xFF	; 255
    d6c0:	6c e7       	ldi	r22, 0x7C	; 124
    d6c2:	73 e0       	ldi	r23, 0x03	; 3
    d6c4:	0e 94 87 b1 	call	0x1630e	; 0x1630e <strcasecmp_P>
    d6c8:	89 2b       	or	r24, r25
    d6ca:	39 f5       	brne	.+78     	; 0xd71a <arb_console+0x1058>
    d6cc:	c5 54       	subi	r28, 0x45	; 69
    d6ce:	df 4f       	sbci	r29, 0xFF	; 255
    d6d0:	88 81       	ld	r24, Y
    d6d2:	cb 5b       	subi	r28, 0xBB	; 187
    d6d4:	d0 40       	sbci	r29, 0x00	; 0
    d6d6:	82 30       	cpi	r24, 0x02	; 2
    d6d8:	01 f5       	brne	.+64     	; 0xd71a <arb_console+0x1058>
    d6da:	c0 51       	subi	r28, 0x10	; 16
    d6dc:	de 4f       	sbci	r29, 0xFE	; 254
    d6de:	88 81       	ld	r24, Y
    d6e0:	99 81       	ldd	r25, Y+1	; 0x01
    d6e2:	c0 5f       	subi	r28, 0xF0	; 240
    d6e4:	d1 40       	sbci	r29, 0x01	; 1
    d6e6:	69 e7       	ldi	r22, 0x79	; 121
    d6e8:	73 e0       	ldi	r23, 0x03	; 3
    d6ea:	0e 94 87 b1 	call	0x1630e	; 0x1630e <strcasecmp_P>
    d6ee:	89 2b       	or	r24, r25
    d6f0:	69 f4       	brne	.+26     	; 0xd70c <arb_console+0x104a>
    d6f2:	80 91 fa 24 	lds	r24, 0x24FA
    d6f6:	90 91 fb 24 	lds	r25, 0x24FB
    d6fa:	61 e0       	ldi	r22, 0x01	; 1
    d6fc:	70 e0       	ldi	r23, 0x00	; 0
    d6fe:	20 e0       	ldi	r18, 0x00	; 0
    d700:	30 e0       	ldi	r19, 0x00	; 0
    d702:	40 e0       	ldi	r20, 0x00	; 0
    d704:	50 e0       	ldi	r21, 0x00	; 0
    d706:	0e 94 f0 6d 	call	0xdbe0	; 0xdbe0 <arb_ioctl>
    d70a:	c3 c1       	rjmp	.+902    	; 0xda92 <arb_console+0x13d0>
    d70c:	80 91 fa 24 	lds	r24, 0x24FA
    d710:	90 91 fb 24 	lds	r25, 0x24FB
    d714:	68 e0       	ldi	r22, 0x08	; 8
    d716:	70 e0       	ldi	r23, 0x00	; 0
    d718:	2d c0       	rjmp	.+90     	; 0xd774 <arb_console+0x10b2>
    d71a:	ce 01       	movw	r24, r28
    d71c:	85 5b       	subi	r24, 0xB5	; 181
    d71e:	9f 4f       	sbci	r25, 0xFF	; 255
    d720:	63 e7       	ldi	r22, 0x73	; 115
    d722:	73 e0       	ldi	r23, 0x03	; 3
    d724:	0e 94 87 b1 	call	0x1630e	; 0x1630e <strcasecmp_P>
    d728:	89 2b       	or	r24, r25
    d72a:	71 f4       	brne	.+28     	; 0xd748 <arb_console+0x1086>
    d72c:	c5 54       	subi	r28, 0x45	; 69
    d72e:	df 4f       	sbci	r29, 0xFF	; 255
    d730:	88 81       	ld	r24, Y
    d732:	cb 5b       	subi	r28, 0xBB	; 187
    d734:	d0 40       	sbci	r29, 0x00	; 0
    d736:	82 30       	cpi	r24, 0x02	; 2
    d738:	39 f4       	brne	.+14     	; 0xd748 <arb_console+0x1086>
    d73a:	80 91 fa 24 	lds	r24, 0x24FA
    d73e:	90 91 fb 24 	lds	r25, 0x24FB
    d742:	67 e0       	ldi	r22, 0x07	; 7
    d744:	70 e0       	ldi	r23, 0x00	; 0
    d746:	16 c0       	rjmp	.+44     	; 0xd774 <arb_console+0x10b2>
    d748:	ce 01       	movw	r24, r28
    d74a:	85 5b       	subi	r24, 0xB5	; 181
    d74c:	9f 4f       	sbci	r25, 0xFF	; 255
    d74e:	6d e6       	ldi	r22, 0x6D	; 109
    d750:	73 e0       	ldi	r23, 0x03	; 3
    d752:	0e 94 87 b1 	call	0x1630e	; 0x1630e <strcasecmp_P>
    d756:	89 2b       	or	r24, r25
    d758:	b1 f4       	brne	.+44     	; 0xd786 <arb_console+0x10c4>
    d75a:	c5 54       	subi	r28, 0x45	; 69
    d75c:	df 4f       	sbci	r29, 0xFF	; 255
    d75e:	88 81       	ld	r24, Y
    d760:	cb 5b       	subi	r28, 0xBB	; 187
    d762:	d0 40       	sbci	r29, 0x00	; 0
    d764:	82 30       	cpi	r24, 0x02	; 2
    d766:	79 f4       	brne	.+30     	; 0xd786 <arb_console+0x10c4>
    d768:	80 91 fa 24 	lds	r24, 0x24FA
    d76c:	90 91 fb 24 	lds	r25, 0x24FB
    d770:	66 e0       	ldi	r22, 0x06	; 6
    d772:	70 e0       	ldi	r23, 0x00	; 0
    d774:	ce 50       	subi	r28, 0x0E	; 14
    d776:	de 4f       	sbci	r29, 0xFE	; 254
    d778:	28 81       	ld	r18, Y
    d77a:	39 81       	ldd	r19, Y+1	; 0x01
    d77c:	4a 81       	ldd	r20, Y+2	; 0x02
    d77e:	5b 81       	ldd	r21, Y+3	; 0x03
    d780:	c2 5f       	subi	r28, 0xF2	; 242
    d782:	d1 40       	sbci	r29, 0x01	; 1
    d784:	c0 cf       	rjmp	.-128    	; 0xd706 <arb_console+0x1044>
    d786:	ce 01       	movw	r24, r28
    d788:	85 5b       	subi	r24, 0xB5	; 181
    d78a:	9f 4f       	sbci	r25, 0xFF	; 255
    d78c:	6a e6       	ldi	r22, 0x6A	; 106
    d78e:	73 e0       	ldi	r23, 0x03	; 3
    d790:	0e 94 87 b1 	call	0x1630e	; 0x1630e <strcasecmp_P>
    d794:	89 2b       	or	r24, r25
    d796:	09 f0       	breq	.+2      	; 0xd79a <arb_console+0x10d8>
    d798:	4d c0       	rjmp	.+154    	; 0xd834 <arb_console+0x1172>
    d79a:	c5 54       	subi	r28, 0x45	; 69
    d79c:	df 4f       	sbci	r29, 0xFF	; 255
    d79e:	88 81       	ld	r24, Y
    d7a0:	cb 5b       	subi	r28, 0xBB	; 187
    d7a2:	d0 40       	sbci	r29, 0x00	; 0
    d7a4:	82 30       	cpi	r24, 0x02	; 2
    d7a6:	09 f0       	breq	.+2      	; 0xd7aa <arb_console+0x10e8>
    d7a8:	45 c0       	rjmp	.+138    	; 0xd834 <arb_console+0x1172>
    d7aa:	80 91 fa 24 	lds	r24, 0x24FA
    d7ae:	90 91 fb 24 	lds	r25, 0x24FB
    d7b2:	69 e0       	ldi	r22, 0x09	; 9
    d7b4:	70 e0       	ldi	r23, 0x00	; 0
    d7b6:	ce 50       	subi	r28, 0x0E	; 14
    d7b8:	de 4f       	sbci	r29, 0xFE	; 254
    d7ba:	28 81       	ld	r18, Y
    d7bc:	39 81       	ldd	r19, Y+1	; 0x01
    d7be:	4a 81       	ldd	r20, Y+2	; 0x02
    d7c0:	5b 81       	ldd	r21, Y+3	; 0x03
    d7c2:	c2 5f       	subi	r28, 0xF2	; 242
    d7c4:	d1 40       	sbci	r29, 0x01	; 1
    d7c6:	0e 94 f0 6d 	call	0xdbe0	; 0xdbe0 <arb_ioctl>
    d7ca:	66 23       	and	r22, r22
    d7cc:	09 f0       	breq	.+2      	; 0xd7d0 <arb_console+0x110e>
    d7ce:	61 c1       	rjmp	.+706    	; 0xda92 <arb_console+0x13d0>
    d7d0:	80 91 f8 24 	lds	r24, 0x24F8
    d7d4:	90 91 f9 24 	lds	r25, 0x24F9
    d7d8:	65 e0       	ldi	r22, 0x05	; 5
    d7da:	70 e0       	ldi	r23, 0x00	; 0
    d7dc:	ce 50       	subi	r28, 0x0E	; 14
    d7de:	de 4f       	sbci	r29, 0xFE	; 254
    d7e0:	28 81       	ld	r18, Y
    d7e2:	39 81       	ldd	r19, Y+1	; 0x01
    d7e4:	4a 81       	ldd	r20, Y+2	; 0x02
    d7e6:	5b 81       	ldd	r21, Y+3	; 0x03
    d7e8:	c2 5f       	subi	r28, 0xF2	; 242
    d7ea:	d1 40       	sbci	r29, 0x01	; 1
    d7ec:	0e 94 f0 6d 	call	0xdbe0	; 0xdbe0 <arb_ioctl>
    d7f0:	c0 51       	subi	r28, 0x10	; 16
    d7f2:	de 4f       	sbci	r29, 0xFE	; 254
    d7f4:	88 81       	ld	r24, Y
    d7f6:	99 81       	ldd	r25, Y+1	; 0x01
    d7f8:	c0 5f       	subi	r28, 0xF0	; 240
    d7fa:	d1 40       	sbci	r29, 0x01	; 1
    d7fc:	68 e6       	ldi	r22, 0x68	; 104
    d7fe:	73 e0       	ldi	r23, 0x03	; 3
    d800:	0e 94 87 b1 	call	0x1630e	; 0x1630e <strcasecmp_P>
    d804:	89 2b       	or	r24, r25
    d806:	59 f4       	brne	.+22     	; 0xd81e <arb_console+0x115c>
    d808:	80 91 f8 24 	lds	r24, 0x24F8
    d80c:	90 91 f9 24 	lds	r25, 0x24F9
    d810:	68 e0       	ldi	r22, 0x08	; 8
    d812:	70 e0       	ldi	r23, 0x00	; 0
    d814:	22 e3       	ldi	r18, 0x32	; 50
    d816:	30 e0       	ldi	r19, 0x00	; 0
    d818:	40 e0       	ldi	r20, 0x00	; 0
    d81a:	50 e0       	ldi	r21, 0x00	; 0
    d81c:	74 cf       	rjmp	.-280    	; 0xd706 <arb_console+0x1044>
    d81e:	80 91 f8 24 	lds	r24, 0x24F8
    d822:	90 91 f9 24 	lds	r25, 0x24F9
    d826:	68 e0       	ldi	r22, 0x08	; 8
    d828:	70 e0       	ldi	r23, 0x00	; 0
    d82a:	21 e3       	ldi	r18, 0x31	; 49
    d82c:	30 e0       	ldi	r19, 0x00	; 0
    d82e:	40 e0       	ldi	r20, 0x00	; 0
    d830:	50 e0       	ldi	r21, 0x00	; 0
    d832:	69 cf       	rjmp	.-302    	; 0xd706 <arb_console+0x1044>
    d834:	ce 01       	movw	r24, r28
    d836:	85 5b       	subi	r24, 0xB5	; 181
    d838:	9f 4f       	sbci	r25, 0xFF	; 255
    d83a:	63 e6       	ldi	r22, 0x63	; 99
    d83c:	73 e0       	ldi	r23, 0x03	; 3
    d83e:	0e 94 87 b1 	call	0x1630e	; 0x1630e <strcasecmp_P>
    d842:	89 2b       	or	r24, r25
    d844:	09 f0       	breq	.+2      	; 0xd848 <arb_console+0x1186>
    d846:	ee c0       	rjmp	.+476    	; 0xda24 <arb_console+0x1362>
    d848:	c5 54       	subi	r28, 0x45	; 69
    d84a:	df 4f       	sbci	r29, 0xFF	; 255
    d84c:	88 81       	ld	r24, Y
    d84e:	cb 5b       	subi	r28, 0xBB	; 187
    d850:	d0 40       	sbci	r29, 0x00	; 0
    d852:	82 30       	cpi	r24, 0x02	; 2
    d854:	09 f0       	breq	.+2      	; 0xd858 <arb_console+0x1196>
    d856:	e6 c0       	rjmp	.+460    	; 0xda24 <arb_console+0x1362>
    d858:	19 8e       	std	Y+25, r1	; 0x19
    d85a:	80 91 fa 24 	lds	r24, 0x24FA
    d85e:	90 91 fb 24 	lds	r25, 0x24FB
    d862:	0e 94 cd 6d 	call	0xdb9a	; 0xdb9a <arb_getDevName>
    d866:	0d b7       	in	r16, 0x3d	; 61
    d868:	1e b7       	in	r17, 0x3e	; 62
    d86a:	08 50       	subi	r16, 0x08	; 8
    d86c:	10 40       	sbci	r17, 0x00	; 0
    d86e:	0d bf       	out	0x3d, r16	; 61
    d870:	1e bf       	out	0x3e, r17	; 62
    d872:	ed b7       	in	r30, 0x3d	; 61
    d874:	fe b7       	in	r31, 0x3e	; 62
    d876:	31 96       	adiw	r30, 0x01	; 1
    d878:	2c eb       	ldi	r18, 0xBC	; 188
    d87a:	e2 2e       	mov	r14, r18
    d87c:	f1 2c       	mov	r15, r1
    d87e:	ec 0e       	add	r14, r28
    d880:	fd 1e       	adc	r15, r29
    d882:	ad b7       	in	r26, 0x3d	; 61
    d884:	be b7       	in	r27, 0x3e	; 62
    d886:	11 96       	adiw	r26, 0x01	; 1
    d888:	ed 92       	st	X+, r14
    d88a:	fc 92       	st	X, r15
    d88c:	12 97       	sbiw	r26, 0x02	; 2
    d88e:	05 ef       	ldi	r16, 0xF5	; 245
    d890:	11 e2       	ldi	r17, 0x21	; 33
    d892:	02 83       	std	Z+2, r16	; 0x02
    d894:	13 83       	std	Z+3, r17	; 0x03
    d896:	84 83       	std	Z+4, r24	; 0x04
    d898:	95 83       	std	Z+5, r25	; 0x05
    d89a:	c0 51       	subi	r28, 0x10	; 16
    d89c:	de 4f       	sbci	r29, 0xFE	; 254
    d89e:	28 81       	ld	r18, Y
    d8a0:	39 81       	ldd	r19, Y+1	; 0x01
    d8a2:	c0 5f       	subi	r28, 0xF0	; 240
    d8a4:	d1 40       	sbci	r29, 0x01	; 1
    d8a6:	26 83       	std	Z+6, r18	; 0x06
    d8a8:	37 83       	std	Z+7, r19	; 0x07
    d8aa:	0e 94 6a b2 	call	0x164d4	; 0x164d4 <sprintf>
    d8ae:	4d b7       	in	r20, 0x3d	; 61
    d8b0:	5e b7       	in	r21, 0x3e	; 62
    d8b2:	48 5f       	subi	r20, 0xF8	; 248
    d8b4:	5f 4f       	sbci	r21, 0xFF	; 255
    d8b6:	4d bf       	out	0x3d, r20	; 61
    d8b8:	5e bf       	out	0x3e, r21	; 62
    d8ba:	c7 01       	movw	r24, r14
    d8bc:	61 e0       	ldi	r22, 0x01	; 1
    d8be:	0e 94 c8 6f 	call	0xdf90	; 0xdf90 <arb_open>
    d8c2:	8b 83       	std	Y+3, r24	; 0x03
    d8c4:	9c 83       	std	Y+4, r25	; 0x04
    d8c6:	8b 81       	ldd	r24, Y+3	; 0x03
    d8c8:	9c 81       	ldd	r25, Y+4	; 0x04
    d8ca:	18 16       	cp	r1, r24
    d8cc:	19 06       	cpc	r1, r25
    d8ce:	0c f0       	brlt	.+2      	; 0xd8d2 <arb_console+0x1210>
    d8d0:	e0 c0       	rjmp	.+448    	; 0xda92 <arb_console+0x13d0>
    d8d2:	8b 81       	ldd	r24, Y+3	; 0x03
    d8d4:	9c 81       	ldd	r25, Y+4	; 0x04
    d8d6:	6a e0       	ldi	r22, 0x0A	; 10
    d8d8:	70 e0       	ldi	r23, 0x00	; 0
    d8da:	20 e0       	ldi	r18, 0x00	; 0
    d8dc:	30 e0       	ldi	r19, 0x00	; 0
    d8de:	40 e0       	ldi	r20, 0x00	; 0
    d8e0:	50 e0       	ldi	r21, 0x00	; 0
    d8e2:	0e 94 f0 6d 	call	0xdbe0	; 0xdbe0 <arb_ioctl>
    d8e6:	5b 01       	movw	r10, r22
    d8e8:	6c 01       	movw	r12, r24
    d8ea:	ff 24       	eor	r15, r15
    d8ec:	95 e0       	ldi	r25, 0x05	; 5
    d8ee:	69 2e       	mov	r6, r25
    d8f0:	71 2c       	mov	r7, r1
    d8f2:	6c 0e       	add	r6, r28
    d8f4:	7d 1e       	adc	r7, r29
    d8f6:	8b 81       	ldd	r24, Y+3	; 0x03
    d8f8:	9c 81       	ldd	r25, Y+4	; 0x04
    d8fa:	b3 01       	movw	r22, r6
    d8fc:	44 e1       	ldi	r20, 0x14	; 20
    d8fe:	50 e0       	ldi	r21, 0x00	; 0
    d900:	0e 94 5d 6d 	call	0xdaba	; 0xdaba <arb_read>
    d904:	4c 01       	movw	r8, r24
    d906:	c3 01       	movw	r24, r6
    d908:	6a e0       	ldi	r22, 0x0A	; 10
    d90a:	70 e0       	ldi	r23, 0x00	; 0
    d90c:	0e 94 da b1 	call	0x163b4	; 0x163b4 <strchr>
    d910:	8c 01       	movw	r16, r24
    d912:	00 97       	sbiw	r24, 0x00	; 0
    d914:	09 f4       	brne	.+2      	; 0xd918 <arb_console+0x1256>
    d916:	62 c0       	rjmp	.+196    	; 0xd9dc <arb_console+0x131a>
    d918:	f3 94       	inc	r15
    d91a:	54 e1       	ldi	r21, 0x14	; 20
    d91c:	f5 16       	cp	r15, r21
    d91e:	09 f0       	breq	.+2      	; 0xd922 <arb_console+0x1260>
    d920:	5d c0       	rjmp	.+186    	; 0xd9dc <arb_console+0x131a>
    d922:	7c 01       	movw	r14, r24
    d924:	e6 18       	sub	r14, r6
    d926:	f7 08       	sbc	r15, r7
    d928:	1e 14       	cp	r1, r14
    d92a:	1f 04       	cpc	r1, r15
    d92c:	54 f4       	brge	.+20     	; 0xd942 <arb_console+0x1280>
    d92e:	80 91 f8 24 	lds	r24, 0x24F8
    d932:	90 91 f9 24 	lds	r25, 0x24F9
    d936:	a7 01       	movw	r20, r14
    d938:	4f 5f       	subi	r20, 0xFF	; 255
    d93a:	5f 4f       	sbci	r21, 0xFF	; 255
    d93c:	b3 01       	movw	r22, r6
    d93e:	0e 94 95 6d 	call	0xdb2a	; 0xdb2a <arb_write>
    d942:	00 d0       	rcall	.+0      	; 0xd944 <arb_console+0x1282>
    d944:	0f 92       	push	r0
    d946:	ec eb       	ldi	r30, 0xBC	; 188
    d948:	f0 e0       	ldi	r31, 0x00	; 0
    d94a:	ec 0f       	add	r30, r28
    d94c:	fd 1f       	adc	r31, r29
    d94e:	ad b7       	in	r26, 0x3d	; 61
    d950:	be b7       	in	r27, 0x3e	; 62
    d952:	11 96       	adiw	r26, 0x01	; 1
    d954:	ed 93       	st	X+, r30
    d956:	fc 93       	st	X, r31
    d958:	12 97       	sbiw	r26, 0x02	; 2
    d95a:	26 eb       	ldi	r18, 0xB6	; 182
    d95c:	3c e0       	ldi	r19, 0x0C	; 12
    d95e:	13 96       	adiw	r26, 0x03	; 3
    d960:	2d 93       	st	X+, r18
    d962:	3c 93       	st	X, r19
    d964:	14 97       	sbiw	r26, 0x04	; 4
    d966:	0e 94 93 b2 	call	0x16526	; 0x16526 <sprintf_P>
    d96a:	ac 01       	movw	r20, r24
    d96c:	80 91 f8 24 	lds	r24, 0x24F8
    d970:	90 91 f9 24 	lds	r25, 0x24F9
    d974:	0f 90       	pop	r0
    d976:	0f 90       	pop	r0
    d978:	0f 90       	pop	r0
    d97a:	0f 90       	pop	r0
    d97c:	be 01       	movw	r22, r28
    d97e:	64 54       	subi	r22, 0x44	; 68
    d980:	7f 4f       	sbci	r23, 0xFF	; 255
    d982:	0e 94 95 6d 	call	0xdb2a	; 0xdb2a <arb_write>
    d986:	80 91 f8 24 	lds	r24, 0x24F8
    d98a:	90 91 f9 24 	lds	r25, 0x24F9
    d98e:	63 e0       	ldi	r22, 0x03	; 3
    d990:	70 e0       	ldi	r23, 0x00	; 0
    d992:	c4 51       	subi	r28, 0x14	; 20
    d994:	de 4f       	sbci	r29, 0xFE	; 254
    d996:	28 81       	ld	r18, Y
    d998:	39 81       	ldd	r19, Y+1	; 0x01
    d99a:	4a 81       	ldd	r20, Y+2	; 0x02
    d99c:	5b 81       	ldd	r21, Y+3	; 0x03
    d99e:	cc 5e       	subi	r28, 0xEC	; 236
    d9a0:	d1 40       	sbci	r29, 0x01	; 1
    d9a2:	0e 94 f0 6d 	call	0xdbe0	; 0xdbe0 <arb_ioctl>
    d9a6:	ce 01       	movw	r24, r28
    d9a8:	85 5b       	subi	r24, 0xB5	; 181
    d9aa:	9f 4f       	sbci	r25, 0xFF	; 255
    d9ac:	6b ef       	ldi	r22, 0xFB	; 251
    d9ae:	71 e2       	ldi	r23, 0x21	; 33
    d9b0:	0e 94 c7 b1 	call	0x1638e	; 0x1638e <strcasecmp>
    d9b4:	89 2b       	or	r24, r25
    d9b6:	89 f1       	breq	.+98     	; 0xda1a <arb_console+0x1358>
    d9b8:	a7 01       	movw	r20, r14
    d9ba:	40 95       	com	r20
    d9bc:	50 95       	com	r21
    d9be:	48 0d       	add	r20, r8
    d9c0:	59 1d       	adc	r21, r9
    d9c2:	14 16       	cp	r1, r20
    d9c4:	15 06       	cpc	r1, r21
    d9c6:	cc f4       	brge	.+50     	; 0xd9fa <arb_console+0x1338>
    d9c8:	80 91 f8 24 	lds	r24, 0x24F8
    d9cc:	90 91 f9 24 	lds	r25, 0x24F9
    d9d0:	0f 5f       	subi	r16, 0xFF	; 255
    d9d2:	1f 4f       	sbci	r17, 0xFF	; 255
    d9d4:	b8 01       	movw	r22, r16
    d9d6:	0e 94 95 6d 	call	0xdb2a	; 0xdb2a <arb_write>
    d9da:	0f c0       	rjmp	.+30     	; 0xd9fa <arb_console+0x1338>
    d9dc:	33 e1       	ldi	r19, 0x13	; 19
    d9de:	3f 15       	cp	r19, r15
    d9e0:	60 f0       	brcs	.+24     	; 0xd9fa <arb_console+0x1338>
    d9e2:	18 14       	cp	r1, r8
    d9e4:	19 04       	cpc	r1, r9
    d9e6:	54 f4       	brge	.+20     	; 0xd9fc <arb_console+0x133a>
    d9e8:	80 91 f8 24 	lds	r24, 0x24F8
    d9ec:	90 91 f9 24 	lds	r25, 0x24F9
    d9f0:	b3 01       	movw	r22, r6
    d9f2:	a4 01       	movw	r20, r8
    d9f4:	0e 94 95 6d 	call	0xdb2a	; 0xdb2a <arb_write>
    d9f8:	01 c0       	rjmp	.+2      	; 0xd9fc <arb_console+0x133a>
    d9fa:	ff 24       	eor	r15, r15
    d9fc:	c4 01       	movw	r24, r8
    d9fe:	aa 27       	eor	r26, r26
    da00:	97 fd       	sbrc	r25, 7
    da02:	a0 95       	com	r26
    da04:	ba 2f       	mov	r27, r26
    da06:	a8 1a       	sub	r10, r24
    da08:	b9 0a       	sbc	r11, r25
    da0a:	ca 0a       	sbc	r12, r26
    da0c:	db 0a       	sbc	r13, r27
    da0e:	1a 14       	cp	r1, r10
    da10:	1b 04       	cpc	r1, r11
    da12:	1c 04       	cpc	r1, r12
    da14:	1d 04       	cpc	r1, r13
    da16:	0c f4       	brge	.+2      	; 0xda1a <arb_console+0x1358>
    da18:	6e cf       	rjmp	.-292    	; 0xd8f6 <arb_console+0x1234>
    da1a:	8b 81       	ldd	r24, Y+3	; 0x03
    da1c:	9c 81       	ldd	r25, Y+4	; 0x04
    da1e:	0e 94 34 6e 	call	0xdc68	; 0xdc68 <arb_close>
    da22:	37 c0       	rjmp	.+110    	; 0xda92 <arb_console+0x13d0>
    da24:	e0 91 fc 24 	lds	r30, 0x24FC
    da28:	f0 91 fd 24 	lds	r31, 0x24FD
    da2c:	30 97       	sbiw	r30, 0x00	; 0
    da2e:	89 f1       	breq	.+98     	; 0xda92 <arb_console+0x13d0>
    da30:	80 91 f8 24 	lds	r24, 0x24F8
    da34:	90 91 f9 24 	lds	r25, 0x24F9
    da38:	be 01       	movw	r22, r28
    da3a:	64 54       	subi	r22, 0x44	; 68
    da3c:	7f 4f       	sbci	r23, 0xFF	; 255
    da3e:	ae 01       	movw	r20, r28
    da40:	45 5b       	subi	r20, 0xB5	; 181
    da42:	5f 4f       	sbci	r21, 0xFF	; 255
    da44:	19 95       	eicall
    da46:	88 23       	and	r24, r24
    da48:	21 f5       	brne	.+72     	; 0xda92 <arb_console+0x13d0>
    da4a:	00 d0       	rcall	.+0      	; 0xda4c <arb_console+0x138a>
    da4c:	0f 92       	push	r0
    da4e:	ec eb       	ldi	r30, 0xBC	; 188
    da50:	f0 e0       	ldi	r31, 0x00	; 0
    da52:	ec 0f       	add	r30, r28
    da54:	fd 1f       	adc	r31, r29
    da56:	ad b7       	in	r26, 0x3d	; 61
    da58:	be b7       	in	r27, 0x3e	; 62
    da5a:	11 96       	adiw	r26, 0x01	; 1
    da5c:	ed 93       	st	X+, r30
    da5e:	fc 93       	st	X, r31
    da60:	12 97       	sbiw	r26, 0x02	; 2
    da62:	85 e5       	ldi	r24, 0x55	; 85
    da64:	e8 2e       	mov	r14, r24
    da66:	83 e0       	ldi	r24, 0x03	; 3
    da68:	f8 2e       	mov	r15, r24
    da6a:	13 96       	adiw	r26, 0x03	; 3
    da6c:	ed 92       	st	X+, r14
    da6e:	fc 92       	st	X, r15
    da70:	14 97       	sbiw	r26, 0x04	; 4
    da72:	0e 94 93 b2 	call	0x16526	; 0x16526 <sprintf_P>
    da76:	ac 01       	movw	r20, r24
    da78:	80 91 f8 24 	lds	r24, 0x24F8
    da7c:	90 91 f9 24 	lds	r25, 0x24F9
    da80:	0f 90       	pop	r0
    da82:	0f 90       	pop	r0
    da84:	0f 90       	pop	r0
    da86:	0f 90       	pop	r0
    da88:	be 01       	movw	r22, r28
    da8a:	64 54       	subi	r22, 0x44	; 68
    da8c:	7f 4f       	sbci	r23, 0xFF	; 255
    da8e:	0e 94 95 6d 	call	0xdb2a	; 0xdb2a <arb_write>
    da92:	80 91 f8 24 	lds	r24, 0x24F8
    da96:	90 91 f9 24 	lds	r25, 0x24F9
    da9a:	64 e0       	ldi	r22, 0x04	; 4
    da9c:	70 e0       	ldi	r23, 0x00	; 0
    da9e:	20 e0       	ldi	r18, 0x00	; 0
    daa0:	30 e0       	ldi	r19, 0x00	; 0
    daa2:	40 e0       	ldi	r20, 0x00	; 0
    daa4:	50 e0       	ldi	r21, 0x00	; 0
    daa6:	0e 94 f0 6d 	call	0xdbe0	; 0xdbe0 <arb_ioctl>
    daaa:	0c 94 54 64 	jmp	0xc8a8	; 0xc8a8 <arb_console+0x1e6>

0000daae <arb_getDeviceList>:
    daae:	20 91 3c 22 	lds	r18, 0x223C
    dab2:	30 91 3d 22 	lds	r19, 0x223D
    dab6:	c9 01       	movw	r24, r18
    dab8:	08 95       	ret

0000daba <arb_read>:
    daba:	0f 93       	push	r16
    dabc:	1f 93       	push	r17
    dabe:	df 93       	push	r29
    dac0:	cf 93       	push	r28
    dac2:	0f 92       	push	r0
    dac4:	0f 92       	push	r0
    dac6:	cd b7       	in	r28, 0x3d	; 61
    dac8:	de b7       	in	r29, 0x3e	; 62
    daca:	89 83       	std	Y+1, r24	; 0x01
    dacc:	9a 83       	std	Y+2, r25	; 0x02
    dace:	8a 01       	movw	r16, r20
    dad0:	e9 81       	ldd	r30, Y+1	; 0x01
    dad2:	fa 81       	ldd	r31, Y+2	; 0x02
    dad4:	40 81       	ld	r20, Z
    dad6:	51 81       	ldd	r21, Z+1	; 0x01
    dad8:	e9 81       	ldd	r30, Y+1	; 0x01
    dada:	fa 81       	ldd	r31, Y+2	; 0x02
    dadc:	20 91 4a 22 	lds	r18, 0x224A
    dae0:	30 91 4b 22 	lds	r19, 0x224B
    dae4:	84 81       	ldd	r24, Z+4	; 0x04
    dae6:	95 81       	ldd	r25, Z+5	; 0x05
    dae8:	82 17       	cp	r24, r18
    daea:	93 07       	cpc	r25, r19
    daec:	19 f0       	breq	.+6      	; 0xdaf4 <arb_read+0x3a>
    daee:	29 ef       	ldi	r18, 0xF9	; 249
    daf0:	3f ef       	ldi	r19, 0xFF	; 255
    daf2:	13 c0       	rjmp	.+38     	; 0xdb1a <arb_read+0x60>
    daf4:	da 01       	movw	r26, r20
    daf6:	ed 91       	ld	r30, X+
    daf8:	fc 91       	ld	r31, X
    dafa:	11 97       	sbiw	r26, 0x01	; 1
    dafc:	03 88       	ldd	r0, Z+19	; 0x13
    dafe:	f4 89       	ldd	r31, Z+20	; 0x14
    db00:	e0 2d       	mov	r30, r0
    db02:	30 97       	sbiw	r30, 0x00	; 0
    db04:	19 f4       	brne	.+6      	; 0xdb0c <arb_read+0x52>
    db06:	2d ef       	ldi	r18, 0xFD	; 253
    db08:	3f ef       	ldi	r19, 0xFF	; 255
    db0a:	07 c0       	rjmp	.+14     	; 0xdb1a <arb_read+0x60>
    db0c:	02 80       	ldd	r0, Z+2	; 0x02
    db0e:	f3 81       	ldd	r31, Z+3	; 0x03
    db10:	e0 2d       	mov	r30, r0
    db12:	cd 01       	movw	r24, r26
    db14:	a8 01       	movw	r20, r16
    db16:	19 95       	eicall
    db18:	9c 01       	movw	r18, r24
    db1a:	c9 01       	movw	r24, r18
    db1c:	0f 90       	pop	r0
    db1e:	0f 90       	pop	r0
    db20:	cf 91       	pop	r28
    db22:	df 91       	pop	r29
    db24:	1f 91       	pop	r17
    db26:	0f 91       	pop	r16
    db28:	08 95       	ret

0000db2a <arb_write>:
    db2a:	0f 93       	push	r16
    db2c:	1f 93       	push	r17
    db2e:	df 93       	push	r29
    db30:	cf 93       	push	r28
    db32:	0f 92       	push	r0
    db34:	0f 92       	push	r0
    db36:	cd b7       	in	r28, 0x3d	; 61
    db38:	de b7       	in	r29, 0x3e	; 62
    db3a:	89 83       	std	Y+1, r24	; 0x01
    db3c:	9a 83       	std	Y+2, r25	; 0x02
    db3e:	8a 01       	movw	r16, r20
    db40:	e9 81       	ldd	r30, Y+1	; 0x01
    db42:	fa 81       	ldd	r31, Y+2	; 0x02
    db44:	40 81       	ld	r20, Z
    db46:	51 81       	ldd	r21, Z+1	; 0x01
    db48:	e9 81       	ldd	r30, Y+1	; 0x01
    db4a:	fa 81       	ldd	r31, Y+2	; 0x02
    db4c:	20 91 4a 22 	lds	r18, 0x224A
    db50:	30 91 4b 22 	lds	r19, 0x224B
    db54:	84 81       	ldd	r24, Z+4	; 0x04
    db56:	95 81       	ldd	r25, Z+5	; 0x05
    db58:	82 17       	cp	r24, r18
    db5a:	93 07       	cpc	r25, r19
    db5c:	19 f0       	breq	.+6      	; 0xdb64 <arb_write+0x3a>
    db5e:	29 ef       	ldi	r18, 0xF9	; 249
    db60:	3f ef       	ldi	r19, 0xFF	; 255
    db62:	13 c0       	rjmp	.+38     	; 0xdb8a <arb_write+0x60>
    db64:	da 01       	movw	r26, r20
    db66:	ed 91       	ld	r30, X+
    db68:	fc 91       	ld	r31, X
    db6a:	11 97       	sbiw	r26, 0x01	; 1
    db6c:	03 88       	ldd	r0, Z+19	; 0x13
    db6e:	f4 89       	ldd	r31, Z+20	; 0x14
    db70:	e0 2d       	mov	r30, r0
    db72:	30 97       	sbiw	r30, 0x00	; 0
    db74:	19 f4       	brne	.+6      	; 0xdb7c <arb_write+0x52>
    db76:	2d ef       	ldi	r18, 0xFD	; 253
    db78:	3f ef       	ldi	r19, 0xFF	; 255
    db7a:	07 c0       	rjmp	.+14     	; 0xdb8a <arb_write+0x60>
    db7c:	04 80       	ldd	r0, Z+4	; 0x04
    db7e:	f5 81       	ldd	r31, Z+5	; 0x05
    db80:	e0 2d       	mov	r30, r0
    db82:	cd 01       	movw	r24, r26
    db84:	a8 01       	movw	r20, r16
    db86:	19 95       	eicall
    db88:	9c 01       	movw	r18, r24
    db8a:	c9 01       	movw	r24, r18
    db8c:	0f 90       	pop	r0
    db8e:	0f 90       	pop	r0
    db90:	cf 91       	pop	r28
    db92:	df 91       	pop	r29
    db94:	1f 91       	pop	r17
    db96:	0f 91       	pop	r16
    db98:	08 95       	ret

0000db9a <arb_getDevName>:
    db9a:	df 93       	push	r29
    db9c:	cf 93       	push	r28
    db9e:	0f 92       	push	r0
    dba0:	0f 92       	push	r0
    dba2:	cd b7       	in	r28, 0x3d	; 61
    dba4:	de b7       	in	r29, 0x3e	; 62
    dba6:	89 83       	std	Y+1, r24	; 0x01
    dba8:	9a 83       	std	Y+2, r25	; 0x02
    dbaa:	e9 81       	ldd	r30, Y+1	; 0x01
    dbac:	fa 81       	ldd	r31, Y+2	; 0x02
    dbae:	a0 81       	ld	r26, Z
    dbb0:	b1 81       	ldd	r27, Z+1	; 0x01
    dbb2:	e9 81       	ldd	r30, Y+1	; 0x01
    dbb4:	fa 81       	ldd	r31, Y+2	; 0x02
    dbb6:	20 91 4a 22 	lds	r18, 0x224A
    dbba:	30 91 4b 22 	lds	r19, 0x224B
    dbbe:	84 81       	ldd	r24, Z+4	; 0x04
    dbc0:	95 81       	ldd	r25, Z+5	; 0x05
    dbc2:	82 17       	cp	r24, r18
    dbc4:	93 07       	cpc	r25, r19
    dbc6:	19 f0       	breq	.+6      	; 0xdbce <arb_getDevName+0x34>
    dbc8:	e0 e0       	ldi	r30, 0x00	; 0
    dbca:	f0 e0       	ldi	r31, 0x00	; 0
    dbcc:	03 c0       	rjmp	.+6      	; 0xdbd4 <arb_getDevName+0x3a>
    dbce:	ed 91       	ld	r30, X+
    dbd0:	fc 91       	ld	r31, X
    dbd2:	32 96       	adiw	r30, 0x02	; 2
    dbd4:	cf 01       	movw	r24, r30
    dbd6:	0f 90       	pop	r0
    dbd8:	0f 90       	pop	r0
    dbda:	cf 91       	pop	r28
    dbdc:	df 91       	pop	r29
    dbde:	08 95       	ret

0000dbe0 <arb_ioctl>:
    dbe0:	ef 92       	push	r14
    dbe2:	ff 92       	push	r15
    dbe4:	0f 93       	push	r16
    dbe6:	1f 93       	push	r17
    dbe8:	df 93       	push	r29
    dbea:	cf 93       	push	r28
    dbec:	0f 92       	push	r0
    dbee:	0f 92       	push	r0
    dbf0:	cd b7       	in	r28, 0x3d	; 61
    dbf2:	de b7       	in	r29, 0x3e	; 62
    dbf4:	89 83       	std	Y+1, r24	; 0x01
    dbf6:	9a 83       	std	Y+2, r25	; 0x02
    dbf8:	79 01       	movw	r14, r18
    dbfa:	8a 01       	movw	r16, r20
    dbfc:	e9 81       	ldd	r30, Y+1	; 0x01
    dbfe:	fa 81       	ldd	r31, Y+2	; 0x02
    dc00:	40 81       	ld	r20, Z
    dc02:	51 81       	ldd	r21, Z+1	; 0x01
    dc04:	e9 81       	ldd	r30, Y+1	; 0x01
    dc06:	fa 81       	ldd	r31, Y+2	; 0x02
    dc08:	20 91 4a 22 	lds	r18, 0x224A
    dc0c:	30 91 4b 22 	lds	r19, 0x224B
    dc10:	84 81       	ldd	r24, Z+4	; 0x04
    dc12:	95 81       	ldd	r25, Z+5	; 0x05
    dc14:	82 17       	cp	r24, r18
    dc16:	93 07       	cpc	r25, r19
    dc18:	29 f0       	breq	.+10     	; 0xdc24 <arb_ioctl+0x44>
    dc1a:	29 ef       	ldi	r18, 0xF9	; 249
    dc1c:	3f ef       	ldi	r19, 0xFF	; 255
    dc1e:	4f ef       	ldi	r20, 0xFF	; 255
    dc20:	5f ef       	ldi	r21, 0xFF	; 255
    dc22:	17 c0       	rjmp	.+46     	; 0xdc52 <arb_ioctl+0x72>
    dc24:	da 01       	movw	r26, r20
    dc26:	ed 91       	ld	r30, X+
    dc28:	fc 91       	ld	r31, X
    dc2a:	11 97       	sbiw	r26, 0x01	; 1
    dc2c:	03 88       	ldd	r0, Z+19	; 0x13
    dc2e:	f4 89       	ldd	r31, Z+20	; 0x14
    dc30:	e0 2d       	mov	r30, r0
    dc32:	30 97       	sbiw	r30, 0x00	; 0
    dc34:	29 f4       	brne	.+10     	; 0xdc40 <arb_ioctl+0x60>
    dc36:	2d ef       	ldi	r18, 0xFD	; 253
    dc38:	3f ef       	ldi	r19, 0xFF	; 255
    dc3a:	4f ef       	ldi	r20, 0xFF	; 255
    dc3c:	5f ef       	ldi	r21, 0xFF	; 255
    dc3e:	09 c0       	rjmp	.+18     	; 0xdc52 <arb_ioctl+0x72>
    dc40:	06 80       	ldd	r0, Z+6	; 0x06
    dc42:	f7 81       	ldd	r31, Z+7	; 0x07
    dc44:	e0 2d       	mov	r30, r0
    dc46:	cd 01       	movw	r24, r26
    dc48:	a8 01       	movw	r20, r16
    dc4a:	97 01       	movw	r18, r14
    dc4c:	19 95       	eicall
    dc4e:	9b 01       	movw	r18, r22
    dc50:	ac 01       	movw	r20, r24
    dc52:	b9 01       	movw	r22, r18
    dc54:	ca 01       	movw	r24, r20
    dc56:	0f 90       	pop	r0
    dc58:	0f 90       	pop	r0
    dc5a:	cf 91       	pop	r28
    dc5c:	df 91       	pop	r29
    dc5e:	1f 91       	pop	r17
    dc60:	0f 91       	pop	r16
    dc62:	ff 90       	pop	r15
    dc64:	ef 90       	pop	r14
    dc66:	08 95       	ret

0000dc68 <arb_close>:
    dc68:	0f 93       	push	r16
    dc6a:	1f 93       	push	r17
    dc6c:	df 93       	push	r29
    dc6e:	cf 93       	push	r28
    dc70:	0f 92       	push	r0
    dc72:	0f 92       	push	r0
    dc74:	cd b7       	in	r28, 0x3d	; 61
    dc76:	de b7       	in	r29, 0x3e	; 62
    dc78:	89 83       	std	Y+1, r24	; 0x01
    dc7a:	9a 83       	std	Y+2, r25	; 0x02
    dc7c:	e9 81       	ldd	r30, Y+1	; 0x01
    dc7e:	fa 81       	ldd	r31, Y+2	; 0x02
    dc80:	40 81       	ld	r20, Z
    dc82:	51 81       	ldd	r21, Z+1	; 0x01
    dc84:	e9 81       	ldd	r30, Y+1	; 0x01
    dc86:	fa 81       	ldd	r31, Y+2	; 0x02
    dc88:	20 91 4a 22 	lds	r18, 0x224A
    dc8c:	30 91 4b 22 	lds	r19, 0x224B
    dc90:	84 81       	ldd	r24, Z+4	; 0x04
    dc92:	95 81       	ldd	r25, Z+5	; 0x05
    dc94:	82 17       	cp	r24, r18
    dc96:	93 07       	cpc	r25, r19
    dc98:	11 f0       	breq	.+4      	; 0xdc9e <arb_close+0x36>
    dc9a:	89 ef       	ldi	r24, 0xF9	; 249
    dc9c:	21 c0       	rjmp	.+66     	; 0xdce0 <arb_close+0x78>
    dc9e:	8a 01       	movw	r16, r20
    dca0:	d8 01       	movw	r26, r16
    dca2:	ed 91       	ld	r30, X+
    dca4:	fc 91       	ld	r31, X
    dca6:	03 88       	ldd	r0, Z+19	; 0x13
    dca8:	f4 89       	ldd	r31, Z+20	; 0x14
    dcaa:	e0 2d       	mov	r30, r0
    dcac:	30 97       	sbiw	r30, 0x00	; 0
    dcae:	11 f4       	brne	.+4      	; 0xdcb4 <arb_close+0x4c>
    dcb0:	8d ef       	ldi	r24, 0xFD	; 253
    dcb2:	16 c0       	rjmp	.+44     	; 0xdce0 <arb_close+0x78>
    dcb4:	00 84       	ldd	r0, Z+8	; 0x08
    dcb6:	f1 85       	ldd	r31, Z+9	; 0x09
    dcb8:	e0 2d       	mov	r30, r0
    dcba:	c8 01       	movw	r24, r16
    dcbc:	19 95       	eicall
    dcbe:	87 fd       	sbrc	r24, 7
    dcc0:	0f c0       	rjmp	.+30     	; 0xdce0 <arb_close+0x78>
    dcc2:	d8 01       	movw	r26, r16
    dcc4:	ed 91       	ld	r30, X+
    dcc6:	fc 91       	ld	r31, X
    dcc8:	82 89       	ldd	r24, Z+18	; 0x12
    dcca:	81 50       	subi	r24, 0x01	; 1
    dccc:	82 8b       	std	Z+18, r24	; 0x12
    dcce:	80 91 4a 22 	lds	r24, 0x224A
    dcd2:	90 91 4b 22 	lds	r25, 0x224B
    dcd6:	69 81       	ldd	r22, Y+1	; 0x01
    dcd8:	7a 81       	ldd	r23, Y+2	; 0x02
    dcda:	0e 94 6a 8a 	call	0x114d4	; 0x114d4 <utl_destroyLink>
    dcde:	80 e0       	ldi	r24, 0x00	; 0
    dce0:	0f 90       	pop	r0
    dce2:	0f 90       	pop	r0
    dce4:	cf 91       	pop	r28
    dce6:	df 91       	pop	r29
    dce8:	1f 91       	pop	r17
    dcea:	0f 91       	pop	r16
    dcec:	08 95       	ret

0000dcee <arb_getDeviceLinkByName>:
    dcee:	ef 92       	push	r14
    dcf0:	ff 92       	push	r15
    dcf2:	0f 93       	push	r16
    dcf4:	1f 93       	push	r17
    dcf6:	df 93       	push	r29
    dcf8:	cf 93       	push	r28
    dcfa:	0f 92       	push	r0
    dcfc:	0f 92       	push	r0
    dcfe:	cd b7       	in	r28, 0x3d	; 61
    dd00:	de b7       	in	r29, 0x3e	; 62
    dd02:	7c 01       	movw	r14, r24
    dd04:	e0 91 3c 22 	lds	r30, 0x223C
    dd08:	f0 91 3d 22 	lds	r31, 0x223D
    dd0c:	02 81       	ldd	r16, Z+2	; 0x02
    dd0e:	13 81       	ldd	r17, Z+3	; 0x03
    dd10:	e0 91 3c 22 	lds	r30, 0x223C
    dd14:	f0 91 3d 22 	lds	r31, 0x223D
    dd18:	11 c0       	rjmp	.+34     	; 0xdd3c <arb_getDeviceLinkByName+0x4e>
    dd1a:	e9 81       	ldd	r30, Y+1	; 0x01
    dd1c:	fa 81       	ldd	r31, Y+2	; 0x02
    dd1e:	80 81       	ld	r24, Z
    dd20:	91 81       	ldd	r25, Z+1	; 0x01
    dd22:	02 96       	adiw	r24, 0x02	; 2
    dd24:	b7 01       	movw	r22, r14
    dd26:	0e 94 e5 b1 	call	0x163ca	; 0x163ca <strcmp>
    dd2a:	00 97       	sbiw	r24, 0x00	; 0
    dd2c:	19 f4       	brne	.+6      	; 0xdd34 <arb_getDeviceLinkByName+0x46>
    dd2e:	29 81       	ldd	r18, Y+1	; 0x01
    dd30:	3a 81       	ldd	r19, Y+2	; 0x02
    dd32:	0d c0       	rjmp	.+26     	; 0xdd4e <arb_getDeviceLinkByName+0x60>
    dd34:	01 50       	subi	r16, 0x01	; 1
    dd36:	10 40       	sbci	r17, 0x00	; 0
    dd38:	e9 81       	ldd	r30, Y+1	; 0x01
    dd3a:	fa 81       	ldd	r31, Y+2	; 0x02
    dd3c:	80 85       	ldd	r24, Z+8	; 0x08
    dd3e:	91 85       	ldd	r25, Z+9	; 0x09
    dd40:	89 83       	std	Y+1, r24	; 0x01
    dd42:	9a 83       	std	Y+2, r25	; 0x02
    dd44:	10 16       	cp	r1, r16
    dd46:	11 06       	cpc	r1, r17
    dd48:	44 f3       	brlt	.-48     	; 0xdd1a <arb_getDeviceLinkByName+0x2c>
    dd4a:	27 ef       	ldi	r18, 0xF7	; 247
    dd4c:	3f ef       	ldi	r19, 0xFF	; 255
    dd4e:	c9 01       	movw	r24, r18
    dd50:	0f 90       	pop	r0
    dd52:	0f 90       	pop	r0
    dd54:	cf 91       	pop	r28
    dd56:	df 91       	pop	r29
    dd58:	1f 91       	pop	r17
    dd5a:	0f 91       	pop	r16
    dd5c:	ff 90       	pop	r15
    dd5e:	ef 90       	pop	r14
    dd60:	08 95       	ret

0000dd62 <arb_destroyDevice>:
    dd62:	ef 92       	push	r14
    dd64:	ff 92       	push	r15
    dd66:	0f 93       	push	r16
    dd68:	1f 93       	push	r17
    dd6a:	df 93       	push	r29
    dd6c:	cf 93       	push	r28
    dd6e:	0f 92       	push	r0
    dd70:	cd b7       	in	r28, 0x3d	; 61
    dd72:	de b7       	in	r29, 0x3e	; 62
    dd74:	2f b7       	in	r18, 0x3f	; 63
    dd76:	29 83       	std	Y+1, r18	; 0x01
    dd78:	f8 94       	cli
    dd7a:	0e 94 77 6e 	call	0xdcee	; 0xdcee <arb_getDeviceLinkByName>
    dd7e:	80 93 02 25 	sts	0x2502, r24
    dd82:	90 93 03 25 	sts	0x2503, r25
    dd86:	80 91 02 25 	lds	r24, 0x2502
    dd8a:	90 91 03 25 	lds	r25, 0x2503
    dd8e:	87 5f       	subi	r24, 0xF7	; 247
    dd90:	9f 4f       	sbci	r25, 0xFF	; 255
    dd92:	21 f4       	brne	.+8      	; 0xdd9c <arb_destroyDevice+0x3a>
    dd94:	89 81       	ldd	r24, Y+1	; 0x01
    dd96:	8f bf       	out	0x3f, r24	; 63
    dd98:	87 ef       	ldi	r24, 0xF7	; 247
    dd9a:	54 c0       	rjmp	.+168    	; 0xde44 <arb_destroyDevice+0xe2>
    dd9c:	e0 91 02 25 	lds	r30, 0x2502
    dda0:	f0 91 03 25 	lds	r31, 0x2503
    dda4:	e0 80       	ld	r14, Z
    dda6:	f1 80       	ldd	r15, Z+1	; 0x01
    dda8:	e0 91 4a 22 	lds	r30, 0x224A
    ddac:	f0 91 4b 22 	lds	r31, 0x224B
    ddb0:	02 81       	ldd	r16, Z+2	; 0x02
    ddb2:	13 81       	ldd	r17, Z+3	; 0x03
    ddb4:	e0 91 4a 22 	lds	r30, 0x224A
    ddb8:	f0 91 4b 22 	lds	r31, 0x224B
    ddbc:	2d c0       	rjmp	.+90     	; 0xde18 <arb_destroyDevice+0xb6>
    ddbe:	e0 91 00 25 	lds	r30, 0x2500
    ddc2:	f0 91 01 25 	lds	r31, 0x2501
    ddc6:	a0 81       	ld	r26, Z
    ddc8:	b1 81       	ldd	r27, Z+1	; 0x01
    ddca:	e0 91 00 25 	lds	r30, 0x2500
    ddce:	f0 91 01 25 	lds	r31, 0x2501
    ddd2:	82 85       	ldd	r24, Z+10	; 0x0a
    ddd4:	93 85       	ldd	r25, Z+11	; 0x0b
    ddd6:	80 93 fe 24 	sts	0x24FE, r24
    ddda:	90 93 ff 24 	sts	0x24FF, r25
    ddde:	8d 91       	ld	r24, X+
    dde0:	9c 91       	ld	r25, X
    dde2:	8e 15       	cp	r24, r14
    dde4:	9f 05       	cpc	r25, r15
    dde6:	91 f4       	brne	.+36     	; 0xde0c <arb_destroyDevice+0xaa>
    dde8:	80 91 4a 22 	lds	r24, 0x224A
    ddec:	90 91 4b 22 	lds	r25, 0x224B
    ddf0:	60 91 00 25 	lds	r22, 0x2500
    ddf4:	70 91 01 25 	lds	r23, 0x2501
    ddf8:	0e 94 6a 8a 	call	0x114d4	; 0x114d4 <utl_destroyLink>
    ddfc:	80 91 fe 24 	lds	r24, 0x24FE
    de00:	90 91 ff 24 	lds	r25, 0x24FF
    de04:	80 93 00 25 	sts	0x2500, r24
    de08:	90 93 01 25 	sts	0x2501, r25
    de0c:	01 50       	subi	r16, 0x01	; 1
    de0e:	10 40       	sbci	r17, 0x00	; 0
    de10:	e0 91 00 25 	lds	r30, 0x2500
    de14:	f0 91 01 25 	lds	r31, 0x2501
    de18:	80 85       	ldd	r24, Z+8	; 0x08
    de1a:	91 85       	ldd	r25, Z+9	; 0x09
    de1c:	80 93 00 25 	sts	0x2500, r24
    de20:	90 93 01 25 	sts	0x2501, r25
    de24:	10 16       	cp	r1, r16
    de26:	11 06       	cpc	r1, r17
    de28:	54 f2       	brlt	.-108    	; 0xddbe <arb_destroyDevice+0x5c>
    de2a:	80 91 3c 22 	lds	r24, 0x223C
    de2e:	90 91 3d 22 	lds	r25, 0x223D
    de32:	60 91 02 25 	lds	r22, 0x2502
    de36:	70 91 03 25 	lds	r23, 0x2503
    de3a:	0e 94 6a 8a 	call	0x114d4	; 0x114d4 <utl_destroyLink>
    de3e:	89 81       	ldd	r24, Y+1	; 0x01
    de40:	8f bf       	out	0x3f, r24	; 63
    de42:	80 e0       	ldi	r24, 0x00	; 0
    de44:	0f 90       	pop	r0
    de46:	cf 91       	pop	r28
    de48:	df 91       	pop	r29
    de4a:	1f 91       	pop	r17
    de4c:	0f 91       	pop	r16
    de4e:	ff 90       	pop	r15
    de50:	ef 90       	pop	r14
    de52:	08 95       	ret

0000de54 <arb_registerDevice>:
    de54:	ef 92       	push	r14
    de56:	ff 92       	push	r15
    de58:	0f 93       	push	r16
    de5a:	1f 93       	push	r17
    de5c:	df 93       	push	r29
    de5e:	cf 93       	push	r28
    de60:	cd b7       	in	r28, 0x3d	; 61
    de62:	de b7       	in	r29, 0x3e	; 62
    de64:	29 97       	sbiw	r28, 0x09	; 9
    de66:	cd bf       	out	0x3d, r28	; 61
    de68:	de bf       	out	0x3e, r29	; 62
    de6a:	18 2f       	mov	r17, r24
    de6c:	09 2f       	mov	r16, r25
    de6e:	68 87       	std	Y+8, r22	; 0x08
    de70:	79 87       	std	Y+9, r23	; 0x09
    de72:	7a 01       	movw	r14, r20
    de74:	8f b7       	in	r24, 0x3f	; 63
    de76:	89 83       	std	Y+1, r24	; 0x01
    de78:	f8 94       	cli
    de7a:	a1 2f       	mov	r26, r17
    de7c:	b9 2f       	mov	r27, r25
    de7e:	fd 01       	movw	r30, r26
    de80:	01 90       	ld	r0, Z+
    de82:	00 20       	and	r0, r0
    de84:	e9 f7       	brne	.-6      	; 0xde80 <arb_registerDevice+0x2c>
    de86:	31 97       	sbiw	r30, 0x01	; 1
    de88:	ea 1b       	sub	r30, r26
    de8a:	fb 0b       	sbc	r31, r27
    de8c:	71 97       	sbiw	r30, 0x11	; 17
    de8e:	20 f0       	brcs	.+8      	; 0xde98 <arb_registerDevice+0x44>
    de90:	89 81       	ldd	r24, Y+1	; 0x01
    de92:	8f bf       	out	0x3f, r24	; 63
    de94:	8c ef       	ldi	r24, 0xFC	; 252
    de96:	72 c0       	rjmp	.+228    	; 0xdf7c <arb_registerDevice+0x128>
    de98:	81 2f       	mov	r24, r17
    de9a:	0e 94 77 6e 	call	0xdcee	; 0xdcee <arb_getDeviceLinkByName>
    de9e:	8a 83       	std	Y+2, r24	; 0x02
    dea0:	9b 83       	std	Y+3, r25	; 0x03
    dea2:	88 85       	ldd	r24, Y+8	; 0x08
    dea4:	99 85       	ldd	r25, Y+9	; 0x09
    dea6:	78 2f       	mov	r23, r24
    dea8:	69 2f       	mov	r22, r25
    deaa:	e0 91 3c 22 	lds	r30, 0x223C
    deae:	f0 91 3d 22 	lds	r31, 0x223D
    deb2:	42 81       	ldd	r20, Z+2	; 0x02
    deb4:	53 81       	ldd	r21, Z+3	; 0x03
    deb6:	e0 91 3c 22 	lds	r30, 0x223C
    deba:	f0 91 3d 22 	lds	r31, 0x223D
    debe:	13 c0       	rjmp	.+38     	; 0xdee6 <arb_registerDevice+0x92>
    dec0:	ee 81       	ldd	r30, Y+6	; 0x06
    dec2:	ff 81       	ldd	r31, Y+7	; 0x07
    dec4:	01 90       	ld	r0, Z+
    dec6:	f0 81       	ld	r31, Z
    dec8:	e0 2d       	mov	r30, r0
    deca:	20 81       	ld	r18, Z
    decc:	31 81       	ldd	r19, Z+1	; 0x01
    dece:	87 2f       	mov	r24, r23
    ded0:	96 2f       	mov	r25, r22
    ded2:	28 17       	cp	r18, r24
    ded4:	39 07       	cpc	r19, r25
    ded6:	19 f4       	brne	.+6      	; 0xdede <arb_registerDevice+0x8a>
    ded8:	8e 81       	ldd	r24, Y+6	; 0x06
    deda:	9f 81       	ldd	r25, Y+7	; 0x07
    dedc:	0d c0       	rjmp	.+26     	; 0xdef8 <arb_registerDevice+0xa4>
    dede:	41 50       	subi	r20, 0x01	; 1
    dee0:	50 40       	sbci	r21, 0x00	; 0
    dee2:	ee 81       	ldd	r30, Y+6	; 0x06
    dee4:	ff 81       	ldd	r31, Y+7	; 0x07
    dee6:	80 85       	ldd	r24, Z+8	; 0x08
    dee8:	91 85       	ldd	r25, Z+9	; 0x09
    deea:	8e 83       	std	Y+6, r24	; 0x06
    deec:	9f 83       	std	Y+7, r25	; 0x07
    deee:	14 16       	cp	r1, r20
    def0:	15 06       	cpc	r1, r21
    def2:	34 f3       	brlt	.-52     	; 0xdec0 <arb_registerDevice+0x6c>
    def4:	87 ef       	ldi	r24, 0xF7	; 247
    def6:	9f ef       	ldi	r25, 0xFF	; 255
    def8:	8c 83       	std	Y+4, r24	; 0x04
    defa:	9d 83       	std	Y+5, r25	; 0x05
    defc:	8a 81       	ldd	r24, Y+2	; 0x02
    defe:	9b 81       	ldd	r25, Y+3	; 0x03
    df00:	87 5f       	subi	r24, 0xF7	; 247
    df02:	9f 4f       	sbci	r25, 0xFF	; 255
    df04:	c1 f5       	brne	.+112    	; 0xdf76 <arb_registerDevice+0x122>
    df06:	8c 81       	ldd	r24, Y+4	; 0x04
    df08:	9d 81       	ldd	r25, Y+5	; 0x05
    df0a:	87 5f       	subi	r24, 0xF7	; 247
    df0c:	9f 4f       	sbci	r25, 0xFF	; 255
    df0e:	99 f5       	brne	.+102    	; 0xdf76 <arb_registerDevice+0x122>
    df10:	85 e1       	ldi	r24, 0x15	; 21
    df12:	90 e0       	ldi	r25, 0x00	; 0
    df14:	0e 94 5e 8b 	call	0x116bc	; 0x116bc <utl_createLink>
    df18:	8a 83       	std	Y+2, r24	; 0x02
    df1a:	9b 83       	std	Y+3, r25	; 0x03
    df1c:	8a 81       	ldd	r24, Y+2	; 0x02
    df1e:	9b 81       	ldd	r25, Y+3	; 0x03
    df20:	97 ff       	sbrs	r25, 7
    df22:	04 c0       	rjmp	.+8      	; 0xdf2c <arb_registerDevice+0xd8>
    df24:	89 81       	ldd	r24, Y+1	; 0x01
    df26:	8f bf       	out	0x3f, r24	; 63
    df28:	8f ef       	ldi	r24, 0xFF	; 255
    df2a:	28 c0       	rjmp	.+80     	; 0xdf7c <arb_registerDevice+0x128>
    df2c:	ea 81       	ldd	r30, Y+2	; 0x02
    df2e:	fb 81       	ldd	r31, Y+3	; 0x03
    df30:	01 90       	ld	r0, Z+
    df32:	f0 81       	ld	r31, Z
    df34:	e0 2d       	mov	r30, r0
    df36:	28 85       	ldd	r18, Y+8	; 0x08
    df38:	39 85       	ldd	r19, Y+9	; 0x09
    df3a:	85 e1       	ldi	r24, 0x15	; 21
    df3c:	df 01       	movw	r26, r30
    df3e:	1d 92       	st	X+, r1
    df40:	8a 95       	dec	r24
    df42:	e9 f7       	brne	.-6      	; 0xdf3e <arb_registerDevice+0xea>
    df44:	20 83       	st	Z, r18
    df46:	31 83       	std	Z+1, r19	; 0x01
    df48:	e3 8a       	std	Z+19, r14	; 0x13
    df4a:	f4 8a       	std	Z+20, r15	; 0x14
    df4c:	cf 01       	movw	r24, r30
    df4e:	02 96       	adiw	r24, 0x02	; 2
    df50:	61 2f       	mov	r22, r17
    df52:	70 2f       	mov	r23, r16
    df54:	40 e1       	ldi	r20, 0x10	; 16
    df56:	50 e0       	ldi	r21, 0x00	; 0
    df58:	0e 94 f5 b1 	call	0x163ea	; 0x163ea <strncpy>
    df5c:	80 91 3c 22 	lds	r24, 0x223C
    df60:	90 91 3d 22 	lds	r25, 0x223D
    df64:	6a 81       	ldd	r22, Y+2	; 0x02
    df66:	7b 81       	ldd	r23, Y+3	; 0x03
    df68:	41 e0       	ldi	r20, 0x01	; 1
    df6a:	0e 94 6e 89 	call	0x112dc	; 0x112dc <utl_insertLink>
    df6e:	89 81       	ldd	r24, Y+1	; 0x01
    df70:	8f bf       	out	0x3f, r24	; 63
    df72:	80 e0       	ldi	r24, 0x00	; 0
    df74:	03 c0       	rjmp	.+6      	; 0xdf7c <arb_registerDevice+0x128>
    df76:	89 81       	ldd	r24, Y+1	; 0x01
    df78:	8f bf       	out	0x3f, r24	; 63
    df7a:	8e ef       	ldi	r24, 0xFE	; 254
    df7c:	29 96       	adiw	r28, 0x09	; 9
    df7e:	cd bf       	out	0x3d, r28	; 61
    df80:	de bf       	out	0x3e, r29	; 62
    df82:	cf 91       	pop	r28
    df84:	df 91       	pop	r29
    df86:	1f 91       	pop	r17
    df88:	0f 91       	pop	r16
    df8a:	ff 90       	pop	r15
    df8c:	ef 90       	pop	r14
    df8e:	08 95       	ret

0000df90 <arb_open>:
    df90:	9f 92       	push	r9
    df92:	af 92       	push	r10
    df94:	bf 92       	push	r11
    df96:	cf 92       	push	r12
    df98:	df 92       	push	r13
    df9a:	ef 92       	push	r14
    df9c:	ff 92       	push	r15
    df9e:	0f 93       	push	r16
    dfa0:	1f 93       	push	r17
    dfa2:	df 93       	push	r29
    dfa4:	cf 93       	push	r28
    dfa6:	cd b7       	in	r28, 0x3d	; 61
    dfa8:	de b7       	in	r29, 0x3e	; 62
    dfaa:	25 97       	sbiw	r28, 0x05	; 5
    dfac:	cd bf       	out	0x3d, r28	; 61
    dfae:	de bf       	out	0x3e, r29	; 62
    dfb0:	96 2e       	mov	r9, r22
    dfb2:	2f b7       	in	r18, 0x3f	; 63
    dfb4:	29 83       	std	Y+1, r18	; 0x01
    dfb6:	f8 94       	cli
    dfb8:	dc 01       	movw	r26, r24
    dfba:	0d 90       	ld	r0, X+
    dfbc:	00 20       	and	r0, r0
    dfbe:	e9 f7       	brne	.-6      	; 0xdfba <arb_open+0x2a>
    dfc0:	7d 01       	movw	r14, r26
    dfc2:	08 94       	sec
    dfc4:	e1 08       	sbc	r14, r1
    dfc6:	f1 08       	sbc	r15, r1
    dfc8:	e8 1a       	sub	r14, r24
    dfca:	f9 0a       	sbc	r15, r25
    dfcc:	6e e2       	ldi	r22, 0x2E	; 46
    dfce:	72 e2       	ldi	r23, 0x22	; 34
    dfd0:	0e 94 a5 b1 	call	0x1634a	; 0x1634a <strtok>
    dfd4:	b8 2e       	mov	r11, r24
    dfd6:	a9 2e       	mov	r10, r25
    dfd8:	e8 2f       	mov	r30, r24
    dfda:	f9 2f       	mov	r31, r25
    dfdc:	df 01       	movw	r26, r30
    dfde:	0d 90       	ld	r0, X+
    dfe0:	00 20       	and	r0, r0
    dfe2:	e9 f7       	brne	.-6      	; 0xdfde <arb_open+0x4e>
    dfe4:	8d 01       	movw	r16, r26
    dfe6:	01 50       	subi	r16, 0x01	; 1
    dfe8:	10 40       	sbci	r17, 0x00	; 0
    dfea:	0e 1b       	sub	r16, r30
    dfec:	1f 0b       	sbc	r17, r31
    dfee:	80 e0       	ldi	r24, 0x00	; 0
    dff0:	90 e0       	ldi	r25, 0x00	; 0
    dff2:	6e e2       	ldi	r22, 0x2E	; 46
    dff4:	72 e2       	ldi	r23, 0x22	; 34
    dff6:	0e 94 a5 b1 	call	0x1634a	; 0x1634a <strtok>
    dffa:	6c 01       	movw	r12, r24
    dffc:	dc 01       	movw	r26, r24
    dffe:	0d 90       	ld	r0, X+
    e000:	00 20       	and	r0, r0
    e002:	e9 f7       	brne	.-6      	; 0xdffe <arb_open+0x6e>
    e004:	11 97       	sbiw	r26, 0x01	; 1
    e006:	a8 1b       	sub	r26, r24
    e008:	b9 0b       	sbc	r27, r25
    e00a:	00 95       	com	r16
    e00c:	10 95       	com	r17
    e00e:	0e 0d       	add	r16, r14
    e010:	1f 1d       	adc	r17, r15
    e012:	a0 17       	cp	r26, r16
    e014:	b1 07       	cpc	r27, r17
    e016:	34 f4       	brge	.+12     	; 0xe024 <arb_open+0x94>
    e018:	00 97       	sbiw	r24, 0x00	; 0
    e01a:	21 f0       	breq	.+8      	; 0xe024 <arb_open+0x94>
    e01c:	a8 0f       	add	r26, r24
    e01e:	b9 1f       	adc	r27, r25
    e020:	8f e2       	ldi	r24, 0x2F	; 47
    e022:	8c 93       	st	X, r24
    e024:	8b 2d       	mov	r24, r11
    e026:	9a 2d       	mov	r25, r10
    e028:	0e 94 77 6e 	call	0xdcee	; 0xdcee <arb_getDeviceLinkByName>
    e02c:	8a 83       	std	Y+2, r24	; 0x02
    e02e:	9b 83       	std	Y+3, r25	; 0x03
    e030:	8a 81       	ldd	r24, Y+2	; 0x02
    e032:	9b 81       	ldd	r25, Y+3	; 0x03
    e034:	87 5f       	subi	r24, 0xF7	; 247
    e036:	9f 4f       	sbci	r25, 0xFF	; 255
    e038:	29 f4       	brne	.+10     	; 0xe044 <arb_open+0xb4>
    e03a:	89 81       	ldd	r24, Y+1	; 0x01
    e03c:	8f bf       	out	0x3f, r24	; 63
    e03e:	27 ef       	ldi	r18, 0xF7	; 247
    e040:	3f ef       	ldi	r19, 0xFF	; 255
    e042:	5c c0       	rjmp	.+184    	; 0xe0fc <arb_open+0x16c>
    e044:	89 e0       	ldi	r24, 0x09	; 9
    e046:	90 e0       	ldi	r25, 0x00	; 0
    e048:	0e 94 5e 8b 	call	0x116bc	; 0x116bc <utl_createLink>
    e04c:	8c 83       	std	Y+4, r24	; 0x04
    e04e:	9d 83       	std	Y+5, r25	; 0x05
    e050:	8c 81       	ldd	r24, Y+4	; 0x04
    e052:	9d 81       	ldd	r25, Y+5	; 0x05
    e054:	97 ff       	sbrs	r25, 7
    e056:	05 c0       	rjmp	.+10     	; 0xe062 <arb_open+0xd2>
    e058:	89 81       	ldd	r24, Y+1	; 0x01
    e05a:	8f bf       	out	0x3f, r24	; 63
    e05c:	2f ef       	ldi	r18, 0xFF	; 255
    e05e:	3f ef       	ldi	r19, 0xFF	; 255
    e060:	4d c0       	rjmp	.+154    	; 0xe0fc <arb_open+0x16c>
    e062:	ea 81       	ldd	r30, Y+2	; 0x02
    e064:	fb 81       	ldd	r31, Y+3	; 0x03
    e066:	a0 81       	ld	r26, Z
    e068:	b1 81       	ldd	r27, Z+1	; 0x01
    e06a:	ec 81       	ldd	r30, Y+4	; 0x04
    e06c:	fd 81       	ldd	r31, Y+5	; 0x05
    e06e:	00 81       	ld	r16, Z
    e070:	11 81       	ldd	r17, Z+1	; 0x01
    e072:	89 e0       	ldi	r24, 0x09	; 9
    e074:	f8 01       	movw	r30, r16
    e076:	11 92       	st	Z+, r1
    e078:	8a 95       	dec	r24
    e07a:	e9 f7       	brne	.-6      	; 0xe076 <arb_open+0xe6>
    e07c:	52 96       	adiw	r26, 0x12	; 18
    e07e:	8c 91       	ld	r24, X
    e080:	52 97       	sbiw	r26, 0x12	; 18
    e082:	8f 5f       	subi	r24, 0xFF	; 255
    e084:	52 96       	adiw	r26, 0x12	; 18
    e086:	8c 93       	st	X, r24
    e088:	52 97       	sbiw	r26, 0x12	; 18
    e08a:	f8 01       	movw	r30, r16
    e08c:	a0 83       	st	Z, r26
    e08e:	b1 83       	std	Z+1, r27	; 0x01
    e090:	94 82       	std	Z+4, r9	; 0x04
    e092:	c2 82       	std	Z+2, r12	; 0x02
    e094:	d3 82       	std	Z+3, r13	; 0x03
    e096:	80 91 4a 22 	lds	r24, 0x224A
    e09a:	90 91 4b 22 	lds	r25, 0x224B
    e09e:	6c 81       	ldd	r22, Y+4	; 0x04
    e0a0:	7d 81       	ldd	r23, Y+5	; 0x05
    e0a2:	41 e0       	ldi	r20, 0x01	; 1
    e0a4:	0e 94 6e 89 	call	0x112dc	; 0x112dc <utl_insertLink>
    e0a8:	89 81       	ldd	r24, Y+1	; 0x01
    e0aa:	8f bf       	out	0x3f, r24	; 63
    e0ac:	d8 01       	movw	r26, r16
    e0ae:	ed 91       	ld	r30, X+
    e0b0:	fc 91       	ld	r31, X
    e0b2:	03 88       	ldd	r0, Z+19	; 0x13
    e0b4:	f4 89       	ldd	r31, Z+20	; 0x14
    e0b6:	e0 2d       	mov	r30, r0
    e0b8:	30 97       	sbiw	r30, 0x00	; 0
    e0ba:	19 f4       	brne	.+6      	; 0xe0c2 <arb_open+0x132>
    e0bc:	2d ef       	ldi	r18, 0xFD	; 253
    e0be:	3f ef       	ldi	r19, 0xFF	; 255
    e0c0:	1d c0       	rjmp	.+58     	; 0xe0fc <arb_open+0x16c>
    e0c2:	01 90       	ld	r0, Z+
    e0c4:	f0 81       	ld	r31, Z
    e0c6:	e0 2d       	mov	r30, r0
    e0c8:	c8 01       	movw	r24, r16
    e0ca:	19 95       	eicall
    e0cc:	e8 2e       	mov	r14, r24
    e0ce:	87 ff       	sbrs	r24, 7
    e0d0:	13 c0       	rjmp	.+38     	; 0xe0f8 <arb_open+0x168>
    e0d2:	d8 01       	movw	r26, r16
    e0d4:	ed 91       	ld	r30, X+
    e0d6:	fc 91       	ld	r31, X
    e0d8:	82 89       	ldd	r24, Z+18	; 0x12
    e0da:	81 50       	subi	r24, 0x01	; 1
    e0dc:	82 8b       	std	Z+18, r24	; 0x12
    e0de:	80 91 4a 22 	lds	r24, 0x224A
    e0e2:	90 91 4b 22 	lds	r25, 0x224B
    e0e6:	6c 81       	ldd	r22, Y+4	; 0x04
    e0e8:	7d 81       	ldd	r23, Y+5	; 0x05
    e0ea:	0e 94 6a 8a 	call	0x114d4	; 0x114d4 <utl_destroyLink>
    e0ee:	2e 2d       	mov	r18, r14
    e0f0:	33 27       	eor	r19, r19
    e0f2:	27 fd       	sbrc	r18, 7
    e0f4:	30 95       	com	r19
    e0f6:	02 c0       	rjmp	.+4      	; 0xe0fc <arb_open+0x16c>
    e0f8:	2c 81       	ldd	r18, Y+4	; 0x04
    e0fa:	3d 81       	ldd	r19, Y+5	; 0x05
    e0fc:	c9 01       	movw	r24, r18
    e0fe:	25 96       	adiw	r28, 0x05	; 5
    e100:	cd bf       	out	0x3d, r28	; 61
    e102:	de bf       	out	0x3e, r29	; 62
    e104:	cf 91       	pop	r28
    e106:	df 91       	pop	r29
    e108:	1f 91       	pop	r17
    e10a:	0f 91       	pop	r16
    e10c:	ff 90       	pop	r15
    e10e:	ef 90       	pop	r14
    e110:	df 90       	pop	r13
    e112:	cf 90       	pop	r12
    e114:	bf 90       	pop	r11
    e116:	af 90       	pop	r10
    e118:	9f 90       	pop	r9
    e11a:	08 95       	ret

0000e11c <main>:
    e11c:	60 e0       	ldi	r22, 0x00	; 0
    e11e:	78 e4       	ldi	r23, 0x48	; 72
    e120:	88 ee       	ldi	r24, 0xE8	; 232
    e122:	91 e0       	ldi	r25, 0x01	; 1
    e124:	0e 94 c9 49 	call	0x9392	; 0x9392 <hal_setCpuFreq>
    e128:	84 e0       	ldi	r24, 0x04	; 4
    e12a:	0e 94 16 51 	call	0xa22c	; 0xa22c <hal_configureIntLevel>
    e12e:	0e 94 94 1d 	call	0x3b28	; 0x3b28 <usr_appInit>
    e132:	0e 94 63 77 	call	0xeec6	; 0xeec6 <arb_schedulerStart>
    e136:	80 e0       	ldi	r24, 0x00	; 0
    e138:	90 e0       	ldi	r25, 0x00	; 0
    e13a:	08 95       	ret

0000e13c <arb_setPrintfDbgLevel>:
    e13c:	80 93 0a 25 	sts	0x250A, r24
    e140:	84 30       	cpi	r24, 0x04	; 4
    e142:	59 f0       	breq	.+22     	; 0xe15a <arb_setPrintfDbgLevel+0x1e>
    e144:	85 30       	cpi	r24, 0x05	; 5
    e146:	20 f4       	brcc	.+8      	; 0xe150 <arb_setPrintfDbgLevel+0x14>
    e148:	81 50       	subi	r24, 0x01	; 1
    e14a:	82 30       	cpi	r24, 0x02	; 2
    e14c:	18 f4       	brcc	.+6      	; 0xe154 <arb_setPrintfDbgLevel+0x18>
    e14e:	05 c0       	rjmp	.+10     	; 0xe15a <arb_setPrintfDbgLevel+0x1e>
    e150:	80 32       	cpi	r24, 0x20	; 32
    e152:	19 f0       	breq	.+6      	; 0xe15a <arb_setPrintfDbgLevel+0x1e>
    e154:	84 e0       	ldi	r24, 0x04	; 4
    e156:	80 93 0a 25 	sts	0x250A, r24
    e15a:	80 e0       	ldi	r24, 0x00	; 0
    e15c:	08 95       	ret

0000e15e <arb_printfInit>:
    e15e:	0f 93       	push	r16
    e160:	1f 93       	push	r17
    e162:	cf 93       	push	r28
    e164:	df 93       	push	r29
    e166:	8b 01       	movw	r16, r22
    e168:	ea 01       	movw	r28, r20
    e16a:	20 e2       	ldi	r18, 0x20	; 32
    e16c:	20 93 0a 25 	sts	0x250A, r18
    e170:	10 92 0b 25 	sts	0x250B, r1
    e174:	63 e0       	ldi	r22, 0x03	; 3
    e176:	0e 94 c8 6f 	call	0xdf90	; 0xdf90 <arb_open>
    e17a:	80 93 04 25 	sts	0x2504, r24
    e17e:	90 93 05 25 	sts	0x2505, r25
    e182:	80 91 04 25 	lds	r24, 0x2504
    e186:	90 91 05 25 	lds	r25, 0x2505
    e18a:	97 ff       	sbrs	r25, 7
    e18c:	05 c0       	rjmp	.+10     	; 0xe198 <arb_printfInit+0x3a>
    e18e:	80 91 04 25 	lds	r24, 0x2504
    e192:	90 91 05 25 	lds	r25, 0x2505
    e196:	36 c0       	rjmp	.+108    	; 0xe204 <arb_printfInit+0xa6>
    e198:	20 97       	sbiw	r28, 0x00	; 0
    e19a:	31 f1       	breq	.+76     	; 0xe1e8 <arb_printfInit+0x8a>
    e19c:	ce 01       	movw	r24, r28
    e19e:	6a e4       	ldi	r22, 0x4A	; 74
    e1a0:	0e 94 c8 6f 	call	0xdf90	; 0xdf90 <arb_open>
    e1a4:	80 93 06 25 	sts	0x2506, r24
    e1a8:	90 93 07 25 	sts	0x2507, r25
    e1ac:	80 91 06 25 	lds	r24, 0x2506
    e1b0:	90 91 07 25 	lds	r25, 0x2507
    e1b4:	97 ff       	sbrs	r25, 7
    e1b6:	05 c0       	rjmp	.+10     	; 0xe1c2 <arb_printfInit+0x64>
    e1b8:	80 91 06 25 	lds	r24, 0x2506
    e1bc:	90 91 07 25 	lds	r25, 0x2507
    e1c0:	21 c0       	rjmp	.+66     	; 0xe204 <arb_printfInit+0xa6>
    e1c2:	80 91 06 25 	lds	r24, 0x2506
    e1c6:	90 91 07 25 	lds	r25, 0x2507
    e1ca:	62 e0       	ldi	r22, 0x02	; 2
    e1cc:	70 e0       	ldi	r23, 0x00	; 0
    e1ce:	20 e0       	ldi	r18, 0x00	; 0
    e1d0:	30 e0       	ldi	r19, 0x00	; 0
    e1d2:	40 e0       	ldi	r20, 0x00	; 0
    e1d4:	50 e0       	ldi	r21, 0x00	; 0
    e1d6:	0e 94 f0 6d 	call	0xdbe0	; 0xdbe0 <arb_ioctl>
    e1da:	97 ff       	sbrs	r25, 7
    e1dc:	02 c0       	rjmp	.+4      	; 0xe1e2 <arb_printfInit+0x84>
    e1de:	80 ef       	ldi	r24, 0xF0	; 240
    e1e0:	11 c0       	rjmp	.+34     	; 0xe204 <arb_printfInit+0xa6>
    e1e2:	81 e0       	ldi	r24, 0x01	; 1
    e1e4:	80 93 0b 25 	sts	0x250B, r24
    e1e8:	c8 01       	movw	r24, r16
    e1ea:	0e 94 5e 88 	call	0x110bc	; 0x110bc <utl_createBuffer>
    e1ee:	80 93 08 25 	sts	0x2508, r24
    e1f2:	90 93 09 25 	sts	0x2509, r25
    e1f6:	80 91 08 25 	lds	r24, 0x2508
    e1fa:	90 91 09 25 	lds	r25, 0x2509
    e1fe:	89 2f       	mov	r24, r25
    e200:	88 0f       	add	r24, r24
    e202:	88 0b       	sbc	r24, r24
    e204:	df 91       	pop	r29
    e206:	cf 91       	pop	r28
    e208:	1f 91       	pop	r17
    e20a:	0f 91       	pop	r16
    e20c:	08 95       	ret

0000e20e <arb_sysPrintChar>:
    e20e:	df 93       	push	r29
    e210:	cf 93       	push	r28
    e212:	0f 92       	push	r0
    e214:	cd b7       	in	r28, 0x3d	; 61
    e216:	de b7       	in	r29, 0x3e	; 62
    e218:	89 83       	std	Y+1, r24	; 0x01
    e21a:	80 91 04 25 	lds	r24, 0x2504
    e21e:	90 91 05 25 	lds	r25, 0x2505
    e222:	be 01       	movw	r22, r28
    e224:	6f 5f       	subi	r22, 0xFF	; 255
    e226:	7f 4f       	sbci	r23, 0xFF	; 255
    e228:	41 e0       	ldi	r20, 0x01	; 1
    e22a:	50 e0       	ldi	r21, 0x00	; 0
    e22c:	0e 94 95 6d 	call	0xdb2a	; 0xdb2a <arb_write>
    e230:	0f 90       	pop	r0
    e232:	cf 91       	pop	r28
    e234:	df 91       	pop	r29
    e236:	08 95       	ret

0000e238 <arb_printfFlushBuf>:
    e238:	6f 92       	push	r6
    e23a:	7f 92       	push	r7
    e23c:	8f 92       	push	r8
    e23e:	9f 92       	push	r9
    e240:	af 92       	push	r10
    e242:	bf 92       	push	r11
    e244:	cf 92       	push	r12
    e246:	df 92       	push	r13
    e248:	ef 92       	push	r14
    e24a:	ff 92       	push	r15
    e24c:	0f 93       	push	r16
    e24e:	1f 93       	push	r17
    e250:	df 93       	push	r29
    e252:	cf 93       	push	r28
    e254:	cd b7       	in	r28, 0x3d	; 61
    e256:	de b7       	in	r29, 0x3e	; 62
    e258:	66 97       	sbiw	r28, 0x16	; 22
    e25a:	cd bf       	out	0x3d, r28	; 61
    e25c:	de bf       	out	0x3e, r29	; 62
    e25e:	8f b7       	in	r24, 0x3f	; 63
    e260:	89 83       	std	Y+1, r24	; 0x01
    e262:	f8 94       	cli
    e264:	80 91 08 25 	lds	r24, 0x2508
    e268:	90 91 09 25 	lds	r25, 0x2509
    e26c:	0e 94 6c 87 	call	0x10ed8	; 0x10ed8 <utl_getBufferPtr>
    e270:	4c 01       	movw	r8, r24
    e272:	80 91 08 25 	lds	r24, 0x2508
    e276:	90 91 09 25 	lds	r25, 0x2509
    e27a:	0e 94 44 87 	call	0x10e88	; 0x10e88 <utl_getBufferFullLevel>
    e27e:	6c 01       	movw	r12, r24
    e280:	80 91 08 25 	lds	r24, 0x2508
    e284:	90 91 09 25 	lds	r25, 0x2509
    e288:	0e 94 58 87 	call	0x10eb0	; 0x10eb0 <utl_getBufferSize>
    e28c:	8c 01       	movw	r16, r24
    e28e:	80 91 08 25 	lds	r24, 0x2508
    e292:	90 91 09 25 	lds	r25, 0x2509
    e296:	0e 94 dc 87 	call	0x10fb8	; 0x10fb8 <utl_getBufRdPtr>
    e29a:	bc 01       	movw	r22, r24
    e29c:	89 81       	ldd	r24, Y+1	; 0x01
    e29e:	8f bf       	out	0x3f, r24	; 63
    e2a0:	c0 16       	cp	r12, r16
    e2a2:	d1 06       	cpc	r13, r17
    e2a4:	c4 f1       	brlt	.+112    	; 0xe316 <arb_printfFlushBuf+0xde>
    e2a6:	80 91 04 25 	lds	r24, 0x2504
    e2aa:	90 91 05 25 	lds	r25, 0x2505
    e2ae:	b4 01       	movw	r22, r8
    e2b0:	a8 01       	movw	r20, r16
    e2b2:	0e 94 95 6d 	call	0xdb2a	; 0xdb2a <arb_write>
    e2b6:	80 91 0b 25 	lds	r24, 0x250B
    e2ba:	88 23       	and	r24, r24
    e2bc:	11 f1       	breq	.+68     	; 0xe302 <arb_printfFlushBuf+0xca>
    e2be:	80 91 06 25 	lds	r24, 0x2506
    e2c2:	90 91 07 25 	lds	r25, 0x2507
    e2c6:	b4 01       	movw	r22, r8
    e2c8:	a8 01       	movw	r20, r16
    e2ca:	0e 94 95 6d 	call	0xdb2a	; 0xdb2a <arb_write>
    e2ce:	80 17       	cp	r24, r16
    e2d0:	91 07       	cpc	r25, r17
    e2d2:	b9 f0       	breq	.+46     	; 0xe302 <arb_printfFlushBuf+0xca>
    e2d4:	8e 01       	movw	r16, r28
    e2d6:	0d 5f       	subi	r16, 0xFD	; 253
    e2d8:	1f 4f       	sbci	r17, 0xFF	; 255
    e2da:	c8 01       	movw	r24, r16
    e2dc:	6c e4       	ldi	r22, 0x4C	; 76
    e2de:	72 e2       	ldi	r23, 0x22	; 34
    e2e0:	0e 94 ee b1 	call	0x163dc	; 0x163dc <strcpy>
    e2e4:	80 91 04 25 	lds	r24, 0x2504
    e2e8:	90 91 05 25 	lds	r25, 0x2505
    e2ec:	f8 01       	movw	r30, r16
    e2ee:	01 90       	ld	r0, Z+
    e2f0:	00 20       	and	r0, r0
    e2f2:	e9 f7       	brne	.-6      	; 0xe2ee <arb_printfFlushBuf+0xb6>
    e2f4:	31 97       	sbiw	r30, 0x01	; 1
    e2f6:	e0 1b       	sub	r30, r16
    e2f8:	f1 0b       	sbc	r31, r17
    e2fa:	b8 01       	movw	r22, r16
    e2fc:	af 01       	movw	r20, r30
    e2fe:	0e 94 95 6d 	call	0xdb2a	; 0xdb2a <arb_write>
    e302:	8f b7       	in	r24, 0x3f	; 63
    e304:	8a 83       	std	Y+2, r24	; 0x02
    e306:	f8 94       	cli
    e308:	80 91 08 25 	lds	r24, 0x2508
    e30c:	90 91 09 25 	lds	r25, 0x2509
    e310:	0e 94 25 88 	call	0x1104a	; 0x1104a <ult_resetBuffer>
    e314:	8e c0       	rjmp	.+284    	; 0xe432 <arb_printfFlushBuf+0x1fa>
    e316:	1c 14       	cp	r1, r12
    e318:	1d 04       	cpc	r1, r13
    e31a:	0c f0       	brlt	.+2      	; 0xe31e <arb_printfFlushBuf+0xe6>
    e31c:	8c c0       	rjmp	.+280    	; 0xe436 <arb_printfFlushBuf+0x1fe>
    e31e:	06 1b       	sub	r16, r22
    e320:	17 0b       	sbc	r17, r23
    e322:	54 01       	movw	r10, r8
    e324:	a6 0e       	add	r10, r22
    e326:	b7 1e       	adc	r11, r23
    e328:	0c 15       	cp	r16, r12
    e32a:	1d 05       	cpc	r17, r13
    e32c:	0c f0       	brlt	.+2      	; 0xe330 <arb_printfFlushBuf+0xf8>
    e32e:	49 c0       	rjmp	.+146    	; 0xe3c2 <arb_printfFlushBuf+0x18a>
    e330:	80 91 04 25 	lds	r24, 0x2504
    e334:	90 91 05 25 	lds	r25, 0x2505
    e338:	b5 01       	movw	r22, r10
    e33a:	a8 01       	movw	r20, r16
    e33c:	0e 94 95 6d 	call	0xdb2a	; 0xdb2a <arb_write>
    e340:	80 91 04 25 	lds	r24, 0x2504
    e344:	90 91 05 25 	lds	r25, 0x2505
    e348:	76 01       	movw	r14, r12
    e34a:	e0 1a       	sub	r14, r16
    e34c:	f1 0a       	sbc	r15, r17
    e34e:	7e 2c       	mov	r7, r14
    e350:	6f 2c       	mov	r6, r15
    e352:	b4 01       	movw	r22, r8
    e354:	a7 01       	movw	r20, r14
    e356:	0e 94 95 6d 	call	0xdb2a	; 0xdb2a <arb_write>
    e35a:	80 91 0b 25 	lds	r24, 0x250B
    e35e:	88 23       	and	r24, r24
    e360:	09 f4       	brne	.+2      	; 0xe364 <arb_printfFlushBuf+0x12c>
    e362:	5d c0       	rjmp	.+186    	; 0xe41e <arb_printfFlushBuf+0x1e6>
    e364:	80 91 06 25 	lds	r24, 0x2506
    e368:	90 91 07 25 	lds	r25, 0x2507
    e36c:	b5 01       	movw	r22, r10
    e36e:	a8 01       	movw	r20, r16
    e370:	0e 94 95 6d 	call	0xdb2a	; 0xdb2a <arb_write>
    e374:	80 17       	cp	r24, r16
    e376:	91 07       	cpc	r25, r17
    e378:	b9 f0       	breq	.+46     	; 0xe3a8 <arb_printfFlushBuf+0x170>
    e37a:	8e 01       	movw	r16, r28
    e37c:	0d 5f       	subi	r16, 0xFD	; 253
    e37e:	1f 4f       	sbci	r17, 0xFF	; 255
    e380:	c8 01       	movw	r24, r16
    e382:	6c e4       	ldi	r22, 0x4C	; 76
    e384:	72 e2       	ldi	r23, 0x22	; 34
    e386:	0e 94 ee b1 	call	0x163dc	; 0x163dc <strcpy>
    e38a:	80 91 04 25 	lds	r24, 0x2504
    e38e:	90 91 05 25 	lds	r25, 0x2505
    e392:	f8 01       	movw	r30, r16
    e394:	01 90       	ld	r0, Z+
    e396:	00 20       	and	r0, r0
    e398:	e9 f7       	brne	.-6      	; 0xe394 <arb_printfFlushBuf+0x15c>
    e39a:	31 97       	sbiw	r30, 0x01	; 1
    e39c:	e0 1b       	sub	r30, r16
    e39e:	f1 0b       	sbc	r31, r17
    e3a0:	b8 01       	movw	r22, r16
    e3a2:	af 01       	movw	r20, r30
    e3a4:	0e 94 95 6d 	call	0xdb2a	; 0xdb2a <arb_write>
    e3a8:	80 91 06 25 	lds	r24, 0x2506
    e3ac:	90 91 07 25 	lds	r25, 0x2507
    e3b0:	b4 01       	movw	r22, r8
    e3b2:	47 2d       	mov	r20, r7
    e3b4:	56 2d       	mov	r21, r6
    e3b6:	0e 94 95 6d 	call	0xdb2a	; 0xdb2a <arb_write>
    e3ba:	8e 15       	cp	r24, r14
    e3bc:	9f 05       	cpc	r25, r15
    e3be:	79 f1       	breq	.+94     	; 0xe41e <arb_printfFlushBuf+0x1e6>
    e3c0:	17 c0       	rjmp	.+46     	; 0xe3f0 <arb_printfFlushBuf+0x1b8>
    e3c2:	80 91 04 25 	lds	r24, 0x2504
    e3c6:	90 91 05 25 	lds	r25, 0x2505
    e3ca:	b5 01       	movw	r22, r10
    e3cc:	a6 01       	movw	r20, r12
    e3ce:	0e 94 95 6d 	call	0xdb2a	; 0xdb2a <arb_write>
    e3d2:	80 91 0b 25 	lds	r24, 0x250B
    e3d6:	88 23       	and	r24, r24
    e3d8:	11 f1       	breq	.+68     	; 0xe41e <arb_printfFlushBuf+0x1e6>
    e3da:	80 91 06 25 	lds	r24, 0x2506
    e3de:	90 91 07 25 	lds	r25, 0x2507
    e3e2:	b5 01       	movw	r22, r10
    e3e4:	a6 01       	movw	r20, r12
    e3e6:	0e 94 95 6d 	call	0xdb2a	; 0xdb2a <arb_write>
    e3ea:	8c 15       	cp	r24, r12
    e3ec:	9d 05       	cpc	r25, r13
    e3ee:	b9 f0       	breq	.+46     	; 0xe41e <arb_printfFlushBuf+0x1e6>
    e3f0:	8e 01       	movw	r16, r28
    e3f2:	0d 5f       	subi	r16, 0xFD	; 253
    e3f4:	1f 4f       	sbci	r17, 0xFF	; 255
    e3f6:	c8 01       	movw	r24, r16
    e3f8:	6c e4       	ldi	r22, 0x4C	; 76
    e3fa:	72 e2       	ldi	r23, 0x22	; 34
    e3fc:	0e 94 ee b1 	call	0x163dc	; 0x163dc <strcpy>
    e400:	80 91 04 25 	lds	r24, 0x2504
    e404:	90 91 05 25 	lds	r25, 0x2505
    e408:	f8 01       	movw	r30, r16
    e40a:	01 90       	ld	r0, Z+
    e40c:	00 20       	and	r0, r0
    e40e:	e9 f7       	brne	.-6      	; 0xe40a <arb_printfFlushBuf+0x1d2>
    e410:	31 97       	sbiw	r30, 0x01	; 1
    e412:	e0 1b       	sub	r30, r16
    e414:	f1 0b       	sbc	r31, r17
    e416:	b8 01       	movw	r22, r16
    e418:	af 01       	movw	r20, r30
    e41a:	0e 94 95 6d 	call	0xdb2a	; 0xdb2a <arb_write>
    e41e:	8f b7       	in	r24, 0x3f	; 63
    e420:	8a 83       	std	Y+2, r24	; 0x02
    e422:	f8 94       	cli
    e424:	80 91 08 25 	lds	r24, 0x2508
    e428:	90 91 09 25 	lds	r25, 0x2509
    e42c:	b6 01       	movw	r22, r12
    e42e:	0e 94 b5 87 	call	0x10f6a	; 0x10f6a <utl_incrBufRdPtr>
    e432:	8a 81       	ldd	r24, Y+2	; 0x02
    e434:	8f bf       	out	0x3f, r24	; 63
    e436:	66 96       	adiw	r28, 0x16	; 22
    e438:	cd bf       	out	0x3d, r28	; 61
    e43a:	de bf       	out	0x3e, r29	; 62
    e43c:	cf 91       	pop	r28
    e43e:	df 91       	pop	r29
    e440:	1f 91       	pop	r17
    e442:	0f 91       	pop	r16
    e444:	ff 90       	pop	r15
    e446:	ef 90       	pop	r14
    e448:	df 90       	pop	r13
    e44a:	cf 90       	pop	r12
    e44c:	bf 90       	pop	r11
    e44e:	af 90       	pop	r10
    e450:	9f 90       	pop	r9
    e452:	8f 90       	pop	r8
    e454:	7f 90       	pop	r7
    e456:	6f 90       	pop	r6
    e458:	08 95       	ret

0000e45a <arb_printf>:
    e45a:	af 92       	push	r10
    e45c:	bf 92       	push	r11
    e45e:	cf 92       	push	r12
    e460:	df 92       	push	r13
    e462:	ef 92       	push	r14
    e464:	ff 92       	push	r15
    e466:	0f 93       	push	r16
    e468:	1f 93       	push	r17
    e46a:	df 93       	push	r29
    e46c:	cf 93       	push	r28
    e46e:	cd b7       	in	r28, 0x3d	; 61
    e470:	de b7       	in	r29, 0x3e	; 62
    e472:	ae 97       	sbiw	r28, 0x2e	; 46
    e474:	cd bf       	out	0x3d, r28	; 61
    e476:	de bf       	out	0x3e, r29	; 62
    e478:	b6 2e       	mov	r11, r22
    e47a:	a7 2e       	mov	r10, r23
    e47c:	9f b7       	in	r25, 0x3f	; 63
    e47e:	99 83       	std	Y+1, r25	; 0x01
    e480:	f8 94       	cli
    e482:	e8 2e       	mov	r14, r24
    e484:	ff 24       	eor	r15, r15
    e486:	86 ff       	sbrs	r24, 6
    e488:	fe c0       	rjmp	.+508    	; 0xe686 <arb_printf+0x22c>
    e48a:	97 01       	movw	r18, r14
    e48c:	27 70       	andi	r18, 0x07	; 7
    e48e:	30 70       	andi	r19, 0x00	; 0
    e490:	80 91 0a 25 	lds	r24, 0x250A
    e494:	90 e0       	ldi	r25, 0x00	; 0
    e496:	28 17       	cp	r18, r24
    e498:	39 07       	cpc	r19, r25
    e49a:	0c f4       	brge	.+2      	; 0xe49e <arb_printf+0x44>
    e49c:	f4 c0       	rjmp	.+488    	; 0xe686 <arb_printf+0x22c>
    e49e:	ce 01       	movw	r24, r28
    e4a0:	46 96       	adiw	r24, 0x16	; 22
    e4a2:	0e 94 4a 82 	call	0x10494	; 0x10494 <arb_sysTimeNow>
    e4a6:	ca a4       	lds	r28, 0xaa
    e4a8:	d9 a4       	lds	r29, 0xa9
    e4aa:	28 a5       	lds	r18, 0x68
    e4ac:	ce 01       	movw	r24, r28
    e4ae:	02 96       	adiw	r24, 0x02	; 2
    e4b0:	2a 30       	cpi	r18, 0x0A	; 10
    e4b2:	70 f4       	brcc	.+28     	; 0xe4d0 <arb_printf+0x76>
    e4b4:	00 d0       	rcall	.+0      	; 0xe4b6 <arb_printf+0x5c>
    e4b6:	00 d0       	rcall	.+0      	; 0xe4b8 <arb_printf+0x5e>
    e4b8:	ed b7       	in	r30, 0x3d	; 61
    e4ba:	fe b7       	in	r31, 0x3e	; 62
    e4bc:	31 96       	adiw	r30, 0x01	; 1
    e4be:	ad b7       	in	r26, 0x3d	; 61
    e4c0:	be b7       	in	r27, 0x3e	; 62
    e4c2:	11 96       	adiw	r26, 0x01	; 1
    e4c4:	8d 93       	st	X+, r24
    e4c6:	9c 93       	st	X, r25
    e4c8:	12 97       	sbiw	r26, 0x02	; 2
    e4ca:	84 e1       	ldi	r24, 0x14	; 20
    e4cc:	9d e0       	ldi	r25, 0x0D	; 13
    e4ce:	0d c0       	rjmp	.+26     	; 0xe4ea <arb_printf+0x90>
    e4d0:	00 d0       	rcall	.+0      	; 0xe4d2 <arb_printf+0x78>
    e4d2:	00 d0       	rcall	.+0      	; 0xe4d4 <arb_printf+0x7a>
    e4d4:	ed b7       	in	r30, 0x3d	; 61
    e4d6:	fe b7       	in	r31, 0x3e	; 62
    e4d8:	31 96       	adiw	r30, 0x01	; 1
    e4da:	ad b7       	in	r26, 0x3d	; 61
    e4dc:	be b7       	in	r27, 0x3e	; 62
    e4de:	11 96       	adiw	r26, 0x01	; 1
    e4e0:	8d 93       	st	X+, r24
    e4e2:	9c 93       	st	X, r25
    e4e4:	12 97       	sbiw	r26, 0x02	; 2
    e4e6:	8e e0       	ldi	r24, 0x0E	; 14
    e4e8:	9d e0       	ldi	r25, 0x0D	; 13
    e4ea:	82 83       	std	Z+2, r24	; 0x02
    e4ec:	93 83       	std	Z+3, r25	; 0x03
    e4ee:	24 83       	std	Z+4, r18	; 0x04
    e4f0:	15 82       	std	Z+5, r1	; 0x05
    e4f2:	0e 94 93 b2 	call	0x16526	; 0x16526 <sprintf_P>
    e4f6:	8c 01       	movw	r16, r24
    e4f8:	8d b7       	in	r24, 0x3d	; 61
    e4fa:	9e b7       	in	r25, 0x3e	; 62
    e4fc:	06 96       	adiw	r24, 0x06	; 6
    e4fe:	8d bf       	out	0x3d, r24	; 61
    e500:	9e bf       	out	0x3e, r25	; 62
    e502:	ce 01       	movw	r24, r28
    e504:	02 96       	adiw	r24, 0x02	; 2
    e506:	a9 e0       	ldi	r26, 0x09	; 9
    e508:	ad 15       	cp	r26, r13
    e50a:	80 f0       	brcs	.+32     	; 0xe52c <arb_printf+0xd2>
    e50c:	00 d0       	rcall	.+0      	; 0xe50e <arb_printf+0xb4>
    e50e:	00 d0       	rcall	.+0      	; 0xe510 <arb_printf+0xb6>
    e510:	ed b7       	in	r30, 0x3d	; 61
    e512:	fe b7       	in	r31, 0x3e	; 62
    e514:	31 96       	adiw	r30, 0x01	; 1
    e516:	80 0f       	add	r24, r16
    e518:	91 1f       	adc	r25, r17
    e51a:	ad b7       	in	r26, 0x3d	; 61
    e51c:	be b7       	in	r27, 0x3e	; 62
    e51e:	11 96       	adiw	r26, 0x01	; 1
    e520:	8d 93       	st	X+, r24
    e522:	9c 93       	st	X, r25
    e524:	12 97       	sbiw	r26, 0x02	; 2
    e526:	88 e0       	ldi	r24, 0x08	; 8
    e528:	9d e0       	ldi	r25, 0x0D	; 13
    e52a:	0f c0       	rjmp	.+30     	; 0xe54a <arb_printf+0xf0>
    e52c:	00 d0       	rcall	.+0      	; 0xe52e <arb_printf+0xd4>
    e52e:	00 d0       	rcall	.+0      	; 0xe530 <arb_printf+0xd6>
    e530:	ed b7       	in	r30, 0x3d	; 61
    e532:	fe b7       	in	r31, 0x3e	; 62
    e534:	31 96       	adiw	r30, 0x01	; 1
    e536:	80 0f       	add	r24, r16
    e538:	91 1f       	adc	r25, r17
    e53a:	ad b7       	in	r26, 0x3d	; 61
    e53c:	be b7       	in	r27, 0x3e	; 62
    e53e:	11 96       	adiw	r26, 0x01	; 1
    e540:	8d 93       	st	X+, r24
    e542:	9c 93       	st	X, r25
    e544:	12 97       	sbiw	r26, 0x02	; 2
    e546:	83 e0       	ldi	r24, 0x03	; 3
    e548:	9d e0       	ldi	r25, 0x0D	; 13
    e54a:	82 83       	std	Z+2, r24	; 0x02
    e54c:	93 83       	std	Z+3, r25	; 0x03
    e54e:	d4 82       	std	Z+4, r13	; 0x04
    e550:	15 82       	std	Z+5, r1	; 0x05
    e552:	0e 94 93 b2 	call	0x16526	; 0x16526 <sprintf_P>
    e556:	08 0f       	add	r16, r24
    e558:	19 1f       	adc	r17, r25
    e55a:	8d b7       	in	r24, 0x3d	; 61
    e55c:	9e b7       	in	r25, 0x3e	; 62
    e55e:	06 96       	adiw	r24, 0x06	; 6
    e560:	8d bf       	out	0x3d, r24	; 61
    e562:	9e bf       	out	0x3e, r25	; 62
    e564:	ce 01       	movw	r24, r28
    e566:	02 96       	adiw	r24, 0x02	; 2
    e568:	a9 e0       	ldi	r26, 0x09	; 9
    e56a:	ac 15       	cp	r26, r12
    e56c:	80 f0       	brcs	.+32     	; 0xe58e <arb_printf+0x134>
    e56e:	00 d0       	rcall	.+0      	; 0xe570 <arb_printf+0x116>
    e570:	00 d0       	rcall	.+0      	; 0xe572 <arb_printf+0x118>
    e572:	ed b7       	in	r30, 0x3d	; 61
    e574:	fe b7       	in	r31, 0x3e	; 62
    e576:	31 96       	adiw	r30, 0x01	; 1
    e578:	80 0f       	add	r24, r16
    e57a:	91 1f       	adc	r25, r17
    e57c:	ad b7       	in	r26, 0x3d	; 61
    e57e:	be b7       	in	r27, 0x3e	; 62
    e580:	11 96       	adiw	r26, 0x01	; 1
    e582:	8d 93       	st	X+, r24
    e584:	9c 93       	st	X, r25
    e586:	12 97       	sbiw	r26, 0x02	; 2
    e588:	8d ef       	ldi	r24, 0xFD	; 253
    e58a:	9c e0       	ldi	r25, 0x0C	; 12
    e58c:	0f c0       	rjmp	.+30     	; 0xe5ac <arb_printf+0x152>
    e58e:	00 d0       	rcall	.+0      	; 0xe590 <arb_printf+0x136>
    e590:	00 d0       	rcall	.+0      	; 0xe592 <arb_printf+0x138>
    e592:	ed b7       	in	r30, 0x3d	; 61
    e594:	fe b7       	in	r31, 0x3e	; 62
    e596:	31 96       	adiw	r30, 0x01	; 1
    e598:	80 0f       	add	r24, r16
    e59a:	91 1f       	adc	r25, r17
    e59c:	ad b7       	in	r26, 0x3d	; 61
    e59e:	be b7       	in	r27, 0x3e	; 62
    e5a0:	11 96       	adiw	r26, 0x01	; 1
    e5a2:	8d 93       	st	X+, r24
    e5a4:	9c 93       	st	X, r25
    e5a6:	12 97       	sbiw	r26, 0x02	; 2
    e5a8:	88 ef       	ldi	r24, 0xF8	; 248
    e5aa:	9c e0       	ldi	r25, 0x0C	; 12
    e5ac:	82 83       	std	Z+2, r24	; 0x02
    e5ae:	93 83       	std	Z+3, r25	; 0x03
    e5b0:	c4 82       	std	Z+4, r12	; 0x04
    e5b2:	15 82       	std	Z+5, r1	; 0x05
    e5b4:	0e 94 93 b2 	call	0x16526	; 0x16526 <sprintf_P>
    e5b8:	08 0f       	add	r16, r24
    e5ba:	19 1f       	adc	r17, r25
    e5bc:	8d b7       	in	r24, 0x3d	; 61
    e5be:	9e b7       	in	r25, 0x3e	; 62
    e5c0:	06 96       	adiw	r24, 0x06	; 6
    e5c2:	8d bf       	out	0x3d, r24	; 61
    e5c4:	9e bf       	out	0x3e, r25	; 62
    e5c6:	6b a5       	lds	r22, 0x6b
    e5c8:	7c a5       	lds	r23, 0x6c
    e5ca:	8d a5       	lds	r24, 0x6d
    e5cc:	9e a5       	lds	r25, 0x6e
    e5ce:	28 ee       	ldi	r18, 0xE8	; 232
    e5d0:	33 e0       	ldi	r19, 0x03	; 3
    e5d2:	40 e0       	ldi	r20, 0x00	; 0
    e5d4:	50 e0       	ldi	r21, 0x00	; 0
    e5d6:	0e 94 ec b4 	call	0x169d8	; 0x169d8 <__udivmodsi4>
    e5da:	2a 30       	cpi	r18, 0x0A	; 10
    e5dc:	31 05       	cpc	r19, r1
    e5de:	94 f4       	brge	.+36     	; 0xe604 <arb_printf+0x1aa>
    e5e0:	00 d0       	rcall	.+0      	; 0xe5e2 <arb_printf+0x188>
    e5e2:	00 d0       	rcall	.+0      	; 0xe5e4 <arb_printf+0x18a>
    e5e4:	ed b7       	in	r30, 0x3d	; 61
    e5e6:	fe b7       	in	r31, 0x3e	; 62
    e5e8:	31 96       	adiw	r30, 0x01	; 1
    e5ea:	ce 01       	movw	r24, r28
    e5ec:	02 96       	adiw	r24, 0x02	; 2
    e5ee:	80 0f       	add	r24, r16
    e5f0:	91 1f       	adc	r25, r17
    e5f2:	ad b7       	in	r26, 0x3d	; 61
    e5f4:	be b7       	in	r27, 0x3e	; 62
    e5f6:	11 96       	adiw	r26, 0x01	; 1
    e5f8:	8d 93       	st	X+, r24
    e5fa:	9c 93       	st	X, r25
    e5fc:	12 97       	sbiw	r26, 0x02	; 2
    e5fe:	8f ee       	ldi	r24, 0xEF	; 239
    e600:	9c e0       	ldi	r25, 0x0C	; 12
    e602:	2a c0       	rjmp	.+84     	; 0xe658 <arb_printf+0x1fe>
    e604:	24 36       	cpi	r18, 0x64	; 100
    e606:	31 05       	cpc	r19, r1
    e608:	94 f4       	brge	.+36     	; 0xe62e <arb_printf+0x1d4>
    e60a:	00 d0       	rcall	.+0      	; 0xe60c <arb_printf+0x1b2>
    e60c:	00 d0       	rcall	.+0      	; 0xe60e <arb_printf+0x1b4>
    e60e:	ed b7       	in	r30, 0x3d	; 61
    e610:	fe b7       	in	r31, 0x3e	; 62
    e612:	31 96       	adiw	r30, 0x01	; 1
    e614:	ce 01       	movw	r24, r28
    e616:	02 96       	adiw	r24, 0x02	; 2
    e618:	80 0f       	add	r24, r16
    e61a:	91 1f       	adc	r25, r17
    e61c:	ad b7       	in	r26, 0x3d	; 61
    e61e:	be b7       	in	r27, 0x3e	; 62
    e620:	11 96       	adiw	r26, 0x01	; 1
    e622:	8d 93       	st	X+, r24
    e624:	9c 93       	st	X, r25
    e626:	12 97       	sbiw	r26, 0x02	; 2
    e628:	87 ee       	ldi	r24, 0xE7	; 231
    e62a:	9c e0       	ldi	r25, 0x0C	; 12
    e62c:	15 c0       	rjmp	.+42     	; 0xe658 <arb_printf+0x1fe>
    e62e:	a3 e0       	ldi	r26, 0x03	; 3
    e630:	28 3e       	cpi	r18, 0xE8	; 232
    e632:	3a 07       	cpc	r19, r26
    e634:	f4 f4       	brge	.+60     	; 0xe672 <arb_printf+0x218>
    e636:	00 d0       	rcall	.+0      	; 0xe638 <arb_printf+0x1de>
    e638:	00 d0       	rcall	.+0      	; 0xe63a <arb_printf+0x1e0>
    e63a:	ed b7       	in	r30, 0x3d	; 61
    e63c:	fe b7       	in	r31, 0x3e	; 62
    e63e:	31 96       	adiw	r30, 0x01	; 1
    e640:	ce 01       	movw	r24, r28
    e642:	02 96       	adiw	r24, 0x02	; 2
    e644:	80 0f       	add	r24, r16
    e646:	91 1f       	adc	r25, r17
    e648:	ad b7       	in	r26, 0x3d	; 61
    e64a:	be b7       	in	r27, 0x3e	; 62
    e64c:	11 96       	adiw	r26, 0x01	; 1
    e64e:	8d 93       	st	X+, r24
    e650:	9c 93       	st	X, r25
    e652:	12 97       	sbiw	r26, 0x02	; 2
    e654:	80 ee       	ldi	r24, 0xE0	; 224
    e656:	9c e0       	ldi	r25, 0x0C	; 12
    e658:	82 83       	std	Z+2, r24	; 0x02
    e65a:	93 83       	std	Z+3, r25	; 0x03
    e65c:	24 83       	std	Z+4, r18	; 0x04
    e65e:	35 83       	std	Z+5, r19	; 0x05
    e660:	0e 94 93 b2 	call	0x16526	; 0x16526 <sprintf_P>
    e664:	08 0f       	add	r16, r24
    e666:	19 1f       	adc	r17, r25
    e668:	8d b7       	in	r24, 0x3d	; 61
    e66a:	9e b7       	in	r25, 0x3e	; 62
    e66c:	06 96       	adiw	r24, 0x06	; 6
    e66e:	8d bf       	out	0x3d, r24	; 61
    e670:	9e bf       	out	0x3e, r25	; 62
    e672:	80 91 08 25 	lds	r24, 0x2508
    e676:	90 91 09 25 	lds	r25, 0x2509
    e67a:	be 01       	movw	r22, r28
    e67c:	6e 5f       	subi	r22, 0xFE	; 254
    e67e:	7f 4f       	sbci	r23, 0xFF	; 255
    e680:	a8 01       	movw	r20, r16
    e682:	0e 94 10 89 	call	0x11220	; 0x11220 <utl_writeBlock>
    e686:	97 e0       	ldi	r25, 0x07	; 7
    e688:	e9 22       	and	r14, r25
    e68a:	ff 24       	eor	r15, r15
    e68c:	80 91 0a 25 	lds	r24, 0x250A
    e690:	90 e0       	ldi	r25, 0x00	; 0
    e692:	e8 16       	cp	r14, r24
    e694:	f9 06       	cpc	r15, r25
    e696:	cc f0       	brlt	.+50     	; 0xe6ca <arb_printf+0x270>
    e698:	80 91 08 25 	lds	r24, 0x2508
    e69c:	90 91 09 25 	lds	r25, 0x2509
    e6a0:	eb 2d       	mov	r30, r11
    e6a2:	fa 2d       	mov	r31, r10
    e6a4:	df 01       	movw	r26, r30
    e6a6:	0d 90       	ld	r0, X+
    e6a8:	00 20       	and	r0, r0
    e6aa:	e9 f7       	brne	.-6      	; 0xe6a6 <arb_printf+0x24c>
    e6ac:	11 97       	sbiw	r26, 0x01	; 1
    e6ae:	ae 1b       	sub	r26, r30
    e6b0:	bf 0b       	sbc	r27, r31
    e6b2:	6b 2d       	mov	r22, r11
    e6b4:	7a 2d       	mov	r23, r10
    e6b6:	ad 01       	movw	r20, r26
    e6b8:	0e 94 10 89 	call	0x11220	; 0x11220 <utl_writeBlock>
    e6bc:	80 91 08 25 	lds	r24, 0x2508
    e6c0:	90 91 09 25 	lds	r25, 0x2509
    e6c4:	6a e0       	ldi	r22, 0x0A	; 10
    e6c6:	0e 94 80 87 	call	0x10f00	; 0x10f00 <utl_writeByte>
    e6ca:	89 81       	ldd	r24, Y+1	; 0x01
    e6cc:	8f bf       	out	0x3f, r24	; 63
    e6ce:	ae 96       	adiw	r28, 0x2e	; 46
    e6d0:	cd bf       	out	0x3d, r28	; 61
    e6d2:	de bf       	out	0x3e, r29	; 62
    e6d4:	cf 91       	pop	r28
    e6d6:	df 91       	pop	r29
    e6d8:	1f 91       	pop	r17
    e6da:	0f 91       	pop	r16
    e6dc:	ff 90       	pop	r15
    e6de:	ef 90       	pop	r14
    e6e0:	df 90       	pop	r13
    e6e2:	cf 90       	pop	r12
    e6e4:	bf 90       	pop	r11
    e6e6:	af 90       	pop	r10
    e6e8:	08 95       	ret

0000e6ea <arb_getOneMinLoadingEst>:
    e6ea:	60 91 13 25 	lds	r22, 0x2513
    e6ee:	70 91 14 25 	lds	r23, 0x2514
    e6f2:	80 91 15 25 	lds	r24, 0x2515
    e6f6:	90 91 16 25 	lds	r25, 0x2516
    e6fa:	08 95       	ret

0000e6fc <arb_getFiveMinLoadingEst>:
    e6fc:	60 91 17 25 	lds	r22, 0x2517
    e700:	70 91 18 25 	lds	r23, 0x2518
    e704:	80 91 19 25 	lds	r24, 0x2519
    e708:	90 91 1a 25 	lds	r25, 0x251A
    e70c:	08 95       	ret

0000e70e <arb_roundRobinScheduler>:
    e70e:	4f 92       	push	r4
    e710:	5f 92       	push	r5
    e712:	6f 92       	push	r6
    e714:	7f 92       	push	r7
    e716:	8f 92       	push	r8
    e718:	9f 92       	push	r9
    e71a:	af 92       	push	r10
    e71c:	bf 92       	push	r11
    e71e:	cf 92       	push	r12
    e720:	df 92       	push	r13
    e722:	ef 92       	push	r14
    e724:	ff 92       	push	r15
    e726:	0f 93       	push	r16
    e728:	1f 93       	push	r17
    e72a:	df 93       	push	r29
    e72c:	cf 93       	push	r28
    e72e:	00 d0       	rcall	.+0      	; 0xe730 <arb_roundRobinScheduler+0x22>
    e730:	0f 92       	push	r0
    e732:	cd b7       	in	r28, 0x3d	; 61
    e734:	de b7       	in	r29, 0x3e	; 62
    e736:	e0 91 ab 22 	lds	r30, 0x22AB
    e73a:	f0 91 ac 22 	lds	r31, 0x22AC
    e73e:	86 81       	ldd	r24, Z+6	; 0x06
    e740:	97 81       	ldd	r25, Z+7	; 0x07
    e742:	89 83       	std	Y+1, r24	; 0x01
    e744:	9a 83       	std	Y+2, r25	; 0x02
    e746:	80 91 10 25 	lds	r24, 0x2510
    e74a:	88 23       	and	r24, r24
    e74c:	09 f4       	brne	.+2      	; 0xe750 <arb_roundRobinScheduler+0x42>
    e74e:	a3 c1       	rjmp	.+838    	; 0xea96 <arb_roundRobinScheduler+0x388>
    e750:	e9 81       	ldd	r30, Y+1	; 0x01
    e752:	fa 81       	ldd	r31, Y+2	; 0x02
    e754:	80 85       	ldd	r24, Z+8	; 0x08
    e756:	91 85       	ldd	r25, Z+9	; 0x09
    e758:	89 83       	std	Y+1, r24	; 0x01
    e75a:	9a 83       	std	Y+2, r25	; 0x02
    e75c:	e9 81       	ldd	r30, Y+1	; 0x01
    e75e:	fa 81       	ldd	r31, Y+2	; 0x02
    e760:	a0 81       	ld	r26, Z
    e762:	b1 81       	ldd	r27, Z+1	; 0x01
    e764:	11 96       	adiw	r26, 0x01	; 1
    e766:	8c 91       	ld	r24, X
    e768:	11 97       	sbiw	r26, 0x01	; 1
    e76a:	83 30       	cpi	r24, 0x03	; 3
    e76c:	89 f3       	breq	.-30     	; 0xe750 <arb_roundRobinScheduler+0x42>
    e76e:	e0 91 ab 22 	lds	r30, 0x22AB
    e772:	f0 91 ac 22 	lds	r31, 0x22AC
    e776:	89 81       	ldd	r24, Y+1	; 0x01
    e778:	9a 81       	ldd	r25, Y+2	; 0x02
    e77a:	86 83       	std	Z+6, r24	; 0x06
    e77c:	97 83       	std	Z+7, r25	; 0x07
    e77e:	a0 93 0c 25 	sts	0x250C, r26
    e782:	b0 93 0d 25 	sts	0x250D, r27
    e786:	81 e0       	ldi	r24, 0x01	; 1
    e788:	11 96       	adiw	r26, 0x01	; 1
    e78a:	8c 93       	st	X, r24
    e78c:	e0 91 ab 22 	lds	r30, 0x22AB
    e790:	f0 91 ac 22 	lds	r31, 0x22AC
    e794:	62 81       	ldd	r22, Z+2	; 0x02
    e796:	73 81       	ldd	r23, Z+3	; 0x03
    e798:	e0 91 ab 22 	lds	r30, 0x22AB
    e79c:	f0 91 ac 22 	lds	r31, 0x22AC
    e7a0:	80 85       	ldd	r24, Z+8	; 0x08
    e7a2:	91 85       	ldd	r25, Z+9	; 0x09
    e7a4:	8b 83       	std	Y+3, r24	; 0x03
    e7a6:	9c 83       	std	Y+4, r25	; 0x04
    e7a8:	20 91 1b 25 	lds	r18, 0x251B
    e7ac:	30 91 1c 25 	lds	r19, 0x251C
    e7b0:	40 91 1d 25 	lds	r20, 0x251D
    e7b4:	50 91 1e 25 	lds	r21, 0x251E
    e7b8:	17 c0       	rjmp	.+46     	; 0xe7e8 <arb_roundRobinScheduler+0xda>
    e7ba:	eb 81       	ldd	r30, Y+3	; 0x03
    e7bc:	fc 81       	ldd	r31, Y+4	; 0x04
    e7be:	01 90       	ld	r0, Z+
    e7c0:	f0 81       	ld	r31, Z
    e7c2:	e0 2d       	mov	r30, r0
    e7c4:	81 81       	ldd	r24, Z+1	; 0x01
    e7c6:	82 30       	cpi	r24, 0x02	; 2
    e7c8:	38 f4       	brcc	.+14     	; 0xe7d8 <arb_roundRobinScheduler+0xca>
    e7ca:	82 81       	ldd	r24, Z+2	; 0x02
    e7cc:	8f 3f       	cpi	r24, 0xFF	; 255
    e7ce:	21 f0       	breq	.+8      	; 0xe7d8 <arb_roundRobinScheduler+0xca>
    e7d0:	2f 5f       	subi	r18, 0xFF	; 255
    e7d2:	3f 4f       	sbci	r19, 0xFF	; 255
    e7d4:	4f 4f       	sbci	r20, 0xFF	; 255
    e7d6:	5f 4f       	sbci	r21, 0xFF	; 255
    e7d8:	61 50       	subi	r22, 0x01	; 1
    e7da:	70 40       	sbci	r23, 0x00	; 0
    e7dc:	eb 81       	ldd	r30, Y+3	; 0x03
    e7de:	fc 81       	ldd	r31, Y+4	; 0x04
    e7e0:	80 85       	ldd	r24, Z+8	; 0x08
    e7e2:	91 85       	ldd	r25, Z+9	; 0x09
    e7e4:	8b 83       	std	Y+3, r24	; 0x03
    e7e6:	9c 83       	std	Y+4, r25	; 0x04
    e7e8:	61 15       	cp	r22, r1
    e7ea:	71 05       	cpc	r23, r1
    e7ec:	31 f7       	brne	.-52     	; 0xe7ba <arb_roundRobinScheduler+0xac>
    e7ee:	20 93 1b 25 	sts	0x251B, r18
    e7f2:	30 93 1c 25 	sts	0x251C, r19
    e7f6:	40 93 1d 25 	sts	0x251D, r20
    e7fa:	50 93 1e 25 	sts	0x251E, r21
    e7fe:	80 91 11 25 	lds	r24, 0x2511
    e802:	90 91 12 25 	lds	r25, 0x2512
    e806:	01 96       	adiw	r24, 0x01	; 1
    e808:	80 93 11 25 	sts	0x2511, r24
    e80c:	90 93 12 25 	sts	0x2512, r25
    e810:	84 5f       	subi	r24, 0xF4	; 244
    e812:	91 40       	sbci	r25, 0x01	; 1
    e814:	09 f0       	breq	.+2      	; 0xe818 <arb_roundRobinScheduler+0x10a>
    e816:	3f c1       	rjmp	.+638    	; 0xea96 <arb_roundRobinScheduler+0x388>
    e818:	6f e0       	ldi	r22, 0x0F	; 15
    e81a:	22 0f       	add	r18, r18
    e81c:	33 1f       	adc	r19, r19
    e81e:	44 1f       	adc	r20, r20
    e820:	55 1f       	adc	r21, r21
    e822:	6a 95       	dec	r22
    e824:	d1 f7       	brne	.-12     	; 0xe81a <arb_roundRobinScheduler+0x10c>
    e826:	ca 01       	movw	r24, r20
    e828:	b9 01       	movw	r22, r18
    e82a:	24 ef       	ldi	r18, 0xF4	; 244
    e82c:	31 e0       	ldi	r19, 0x01	; 1
    e82e:	40 e0       	ldi	r20, 0x00	; 0
    e830:	50 e0       	ldi	r21, 0x00	; 0
    e832:	0e 94 ec b4 	call	0x169d8	; 0x169d8 <__udivmodsi4>
    e836:	72 2e       	mov	r7, r18
    e838:	63 2e       	mov	r6, r19
    e83a:	54 2e       	mov	r5, r20
    e83c:	45 2e       	mov	r4, r21
    e83e:	10 92 1b 25 	sts	0x251B, r1
    e842:	10 92 1c 25 	sts	0x251C, r1
    e846:	10 92 1d 25 	sts	0x251D, r1
    e84a:	10 92 1e 25 	sts	0x251E, r1
    e84e:	10 92 11 25 	sts	0x2511, r1
    e852:	10 92 12 25 	sts	0x2512, r1
    e856:	60 91 13 25 	lds	r22, 0x2513
    e85a:	70 91 14 25 	lds	r23, 0x2514
    e85e:	80 91 15 25 	lds	r24, 0x2515
    e862:	90 91 16 25 	lds	r25, 0x2516
    e866:	25 e5       	ldi	r18, 0x55	; 85
    e868:	35 e7       	ldi	r19, 0x75	; 117
    e86a:	40 e0       	ldi	r20, 0x00	; 0
    e86c:	50 e0       	ldi	r21, 0x00	; 0
    e86e:	0e 94 cd b4 	call	0x1699a	; 0x1699a <__mulsi3>
    e872:	8b 01       	movw	r16, r22
    e874:	9c 01       	movw	r18, r24
    e876:	40 e0       	ldi	r20, 0x00	; 0
    e878:	50 e0       	ldi	r21, 0x00	; 0
    e87a:	60 e0       	ldi	r22, 0x00	; 0
    e87c:	70 e0       	ldi	r23, 0x00	; 0
    e87e:	a0 2e       	mov	r10, r16
    e880:	90 e4       	ldi	r25, 0x40	; 64
    e882:	f9 2e       	mov	r15, r25
    e884:	f1 0e       	add	r15, r17
    e886:	91 e0       	ldi	r25, 0x01	; 1
    e888:	f1 16       	cp	r15, r17
    e88a:	08 f0       	brcs	.+2      	; 0xe88e <arb_roundRobinScheduler+0x180>
    e88c:	90 e0       	ldi	r25, 0x00	; 0
    e88e:	e9 2e       	mov	r14, r25
    e890:	e2 0e       	add	r14, r18
    e892:	91 e0       	ldi	r25, 0x01	; 1
    e894:	e2 16       	cp	r14, r18
    e896:	08 f0       	brcs	.+2      	; 0xe89a <arb_roundRobinScheduler+0x18c>
    e898:	90 e0       	ldi	r25, 0x00	; 0
    e89a:	d9 2e       	mov	r13, r25
    e89c:	d3 0e       	add	r13, r19
    e89e:	91 e0       	ldi	r25, 0x01	; 1
    e8a0:	d3 16       	cp	r13, r19
    e8a2:	08 f0       	brcs	.+2      	; 0xe8a6 <arb_roundRobinScheduler+0x198>
    e8a4:	90 e0       	ldi	r25, 0x00	; 0
    e8a6:	99 2e       	mov	r9, r25
    e8a8:	cc 24       	eor	r12, r12
    e8aa:	c3 94       	inc	r12
    e8ac:	44 23       	and	r20, r20
    e8ae:	09 f4       	brne	.+2      	; 0xe8b2 <arb_roundRobinScheduler+0x1a4>
    e8b0:	cc 24       	eor	r12, r12
    e8b2:	bb 24       	eor	r11, r11
    e8b4:	b3 94       	inc	r11
    e8b6:	55 23       	and	r21, r21
    e8b8:	09 f4       	brne	.+2      	; 0xe8bc <arb_roundRobinScheduler+0x1ae>
    e8ba:	bb 24       	eor	r11, r11
    e8bc:	88 24       	eor	r8, r8
    e8be:	83 94       	inc	r8
    e8c0:	66 23       	and	r22, r22
    e8c2:	09 f4       	brne	.+2      	; 0xe8c6 <arb_roundRobinScheduler+0x1b8>
    e8c4:	88 24       	eor	r8, r8
    e8c6:	67 2d       	mov	r22, r7
    e8c8:	76 2d       	mov	r23, r6
    e8ca:	85 2d       	mov	r24, r5
    e8cc:	94 2d       	mov	r25, r4
    e8ce:	2b ea       	ldi	r18, 0xAB	; 171
    e8d0:	3a e0       	ldi	r19, 0x0A	; 10
    e8d2:	40 e0       	ldi	r20, 0x00	; 0
    e8d4:	50 e0       	ldi	r21, 0x00	; 0
    e8d6:	0e 94 cd b4 	call	0x1699a	; 0x1699a <__mulsi3>
    e8da:	9b 01       	movw	r18, r22
    e8dc:	ac 01       	movw	r20, r24
    e8de:	0a 2d       	mov	r16, r10
    e8e0:	06 0f       	add	r16, r22
    e8e2:	f1 e0       	ldi	r31, 0x01	; 1
    e8e4:	0a 15       	cp	r16, r10
    e8e6:	08 f0       	brcs	.+2      	; 0xe8ea <arb_roundRobinScheduler+0x1dc>
    e8e8:	f0 e0       	ldi	r31, 0x00	; 0
    e8ea:	ef 2d       	mov	r30, r15
    e8ec:	e3 0f       	add	r30, r19
    e8ee:	a1 e0       	ldi	r26, 0x01	; 1
    e8f0:	ef 15       	cp	r30, r15
    e8f2:	08 f0       	brcs	.+2      	; 0xe8f6 <arb_roundRobinScheduler+0x1e8>
    e8f4:	a0 e0       	ldi	r26, 0x00	; 0
    e8f6:	1f 2f       	mov	r17, r31
    e8f8:	1e 0f       	add	r17, r30
    e8fa:	f1 e0       	ldi	r31, 0x01	; 1
    e8fc:	1e 17       	cp	r17, r30
    e8fe:	08 f0       	brcs	.+2      	; 0xe902 <arb_roundRobinScheduler+0x1f4>
    e900:	f0 e0       	ldi	r31, 0x00	; 0
    e902:	af 2b       	or	r26, r31
    e904:	ee 2d       	mov	r30, r14
    e906:	e4 0f       	add	r30, r20
    e908:	b1 e0       	ldi	r27, 0x01	; 1
    e90a:	ee 15       	cp	r30, r14
    e90c:	08 f0       	brcs	.+2      	; 0xe910 <arb_roundRobinScheduler+0x202>
    e90e:	b0 e0       	ldi	r27, 0x00	; 0
    e910:	ae 0f       	add	r26, r30
    e912:	f1 e0       	ldi	r31, 0x01	; 1
    e914:	ae 17       	cp	r26, r30
    e916:	08 f0       	brcs	.+2      	; 0xe91a <arb_roundRobinScheduler+0x20c>
    e918:	f0 e0       	ldi	r31, 0x00	; 0
    e91a:	bf 2b       	or	r27, r31
    e91c:	6d 2d       	mov	r22, r13
    e91e:	65 0f       	add	r22, r21
    e920:	91 e0       	ldi	r25, 0x01	; 1
    e922:	6d 15       	cp	r22, r13
    e924:	08 f0       	brcs	.+2      	; 0xe928 <arb_roundRobinScheduler+0x21a>
    e926:	90 e0       	ldi	r25, 0x00	; 0
    e928:	5b 2f       	mov	r21, r27
    e92a:	56 0f       	add	r21, r22
    e92c:	81 e0       	ldi	r24, 0x01	; 1
    e92e:	56 17       	cp	r21, r22
    e930:	08 f0       	brcs	.+2      	; 0xe934 <arb_roundRobinScheduler+0x226>
    e932:	80 e0       	ldi	r24, 0x00	; 0
    e934:	69 2f       	mov	r22, r25
    e936:	68 2b       	or	r22, r24
    e938:	69 0d       	add	r22, r9
    e93a:	71 e0       	ldi	r23, 0x01	; 1
    e93c:	69 15       	cp	r22, r9
    e93e:	08 f0       	brcs	.+2      	; 0xe942 <arb_roundRobinScheduler+0x234>
    e940:	70 e0       	ldi	r23, 0x00	; 0
    e942:	7c 0d       	add	r23, r12
    e944:	81 e0       	ldi	r24, 0x01	; 1
    e946:	7c 15       	cp	r23, r12
    e948:	08 f0       	brcs	.+2      	; 0xe94c <arb_roundRobinScheduler+0x23e>
    e94a:	80 e0       	ldi	r24, 0x00	; 0
    e94c:	8b 0d       	add	r24, r11
    e94e:	91 e0       	ldi	r25, 0x01	; 1
    e950:	8b 15       	cp	r24, r11
    e952:	08 f0       	brcs	.+2      	; 0xe956 <arb_roundRobinScheduler+0x248>
    e954:	90 e0       	ldi	r25, 0x00	; 0
    e956:	98 01       	movw	r18, r16
    e958:	4a 2f       	mov	r20, r26
    e95a:	98 0d       	add	r25, r8
    e95c:	0f e0       	ldi	r16, 0x0F	; 15
    e95e:	0e 94 87 62 	call	0xc50e	; 0xc50e <__lshrdi3>
    e962:	c9 01       	movw	r24, r18
    e964:	ba 01       	movw	r22, r20
    e966:	20 93 13 25 	sts	0x2513, r18
    e96a:	90 93 14 25 	sts	0x2514, r25
    e96e:	40 93 15 25 	sts	0x2515, r20
    e972:	70 93 16 25 	sts	0x2516, r23
    e976:	60 91 17 25 	lds	r22, 0x2517
    e97a:	70 91 18 25 	lds	r23, 0x2518
    e97e:	80 91 19 25 	lds	r24, 0x2519
    e982:	90 91 1a 25 	lds	r25, 0x251A
    e986:	2d ed       	ldi	r18, 0xDD	; 221
    e988:	3d e7       	ldi	r19, 0x7D	; 125
    e98a:	40 e0       	ldi	r20, 0x00	; 0
    e98c:	50 e0       	ldi	r21, 0x00	; 0
    e98e:	0e 94 cd b4 	call	0x1699a	; 0x1699a <__mulsi3>
    e992:	8b 01       	movw	r16, r22
    e994:	9c 01       	movw	r18, r24
    e996:	40 e0       	ldi	r20, 0x00	; 0
    e998:	50 e0       	ldi	r21, 0x00	; 0
    e99a:	60 e0       	ldi	r22, 0x00	; 0
    e99c:	70 e0       	ldi	r23, 0x00	; 0
    e99e:	a0 2e       	mov	r10, r16
    e9a0:	80 e4       	ldi	r24, 0x40	; 64
    e9a2:	f8 2e       	mov	r15, r24
    e9a4:	f1 0e       	add	r15, r17
    e9a6:	91 e0       	ldi	r25, 0x01	; 1
    e9a8:	f1 16       	cp	r15, r17
    e9aa:	08 f0       	brcs	.+2      	; 0xe9ae <arb_roundRobinScheduler+0x2a0>
    e9ac:	90 e0       	ldi	r25, 0x00	; 0
    e9ae:	e9 2e       	mov	r14, r25
    e9b0:	e2 0e       	add	r14, r18
    e9b2:	91 e0       	ldi	r25, 0x01	; 1
    e9b4:	e2 16       	cp	r14, r18
    e9b6:	08 f0       	brcs	.+2      	; 0xe9ba <arb_roundRobinScheduler+0x2ac>
    e9b8:	90 e0       	ldi	r25, 0x00	; 0
    e9ba:	d9 2e       	mov	r13, r25
    e9bc:	d3 0e       	add	r13, r19
    e9be:	91 e0       	ldi	r25, 0x01	; 1
    e9c0:	d3 16       	cp	r13, r19
    e9c2:	08 f0       	brcs	.+2      	; 0xe9c6 <arb_roundRobinScheduler+0x2b8>
    e9c4:	90 e0       	ldi	r25, 0x00	; 0
    e9c6:	99 2e       	mov	r9, r25
    e9c8:	cc 24       	eor	r12, r12
    e9ca:	c3 94       	inc	r12
    e9cc:	44 23       	and	r20, r20
    e9ce:	09 f4       	brne	.+2      	; 0xe9d2 <arb_roundRobinScheduler+0x2c4>
    e9d0:	cc 24       	eor	r12, r12
    e9d2:	bb 24       	eor	r11, r11
    e9d4:	b3 94       	inc	r11
    e9d6:	55 23       	and	r21, r21
    e9d8:	09 f4       	brne	.+2      	; 0xe9dc <arb_roundRobinScheduler+0x2ce>
    e9da:	bb 24       	eor	r11, r11
    e9dc:	88 24       	eor	r8, r8
    e9de:	83 94       	inc	r8
    e9e0:	66 23       	and	r22, r22
    e9e2:	09 f4       	brne	.+2      	; 0xe9e6 <arb_roundRobinScheduler+0x2d8>
    e9e4:	88 24       	eor	r8, r8
    e9e6:	67 2d       	mov	r22, r7
    e9e8:	76 2d       	mov	r23, r6
    e9ea:	85 2d       	mov	r24, r5
    e9ec:	94 2d       	mov	r25, r4
    e9ee:	23 e2       	ldi	r18, 0x23	; 35
    e9f0:	32 e0       	ldi	r19, 0x02	; 2
    e9f2:	40 e0       	ldi	r20, 0x00	; 0
    e9f4:	50 e0       	ldi	r21, 0x00	; 0
    e9f6:	0e 94 cd b4 	call	0x1699a	; 0x1699a <__mulsi3>
    e9fa:	9b 01       	movw	r18, r22
    e9fc:	ac 01       	movw	r20, r24
    e9fe:	0a 2d       	mov	r16, r10
    ea00:	06 0f       	add	r16, r22
    ea02:	f1 e0       	ldi	r31, 0x01	; 1
    ea04:	0a 15       	cp	r16, r10
    ea06:	08 f0       	brcs	.+2      	; 0xea0a <arb_roundRobinScheduler+0x2fc>
    ea08:	f0 e0       	ldi	r31, 0x00	; 0
    ea0a:	ef 2d       	mov	r30, r15
    ea0c:	e3 0f       	add	r30, r19
    ea0e:	a1 e0       	ldi	r26, 0x01	; 1
    ea10:	ef 15       	cp	r30, r15
    ea12:	08 f0       	brcs	.+2      	; 0xea16 <arb_roundRobinScheduler+0x308>
    ea14:	a0 e0       	ldi	r26, 0x00	; 0
    ea16:	1f 2f       	mov	r17, r31
    ea18:	1e 0f       	add	r17, r30
    ea1a:	f1 e0       	ldi	r31, 0x01	; 1
    ea1c:	1e 17       	cp	r17, r30
    ea1e:	08 f0       	brcs	.+2      	; 0xea22 <arb_roundRobinScheduler+0x314>
    ea20:	f0 e0       	ldi	r31, 0x00	; 0
    ea22:	af 2b       	or	r26, r31
    ea24:	ee 2d       	mov	r30, r14
    ea26:	e4 0f       	add	r30, r20
    ea28:	b1 e0       	ldi	r27, 0x01	; 1
    ea2a:	ee 15       	cp	r30, r14
    ea2c:	08 f0       	brcs	.+2      	; 0xea30 <arb_roundRobinScheduler+0x322>
    ea2e:	b0 e0       	ldi	r27, 0x00	; 0
    ea30:	ae 0f       	add	r26, r30
    ea32:	f1 e0       	ldi	r31, 0x01	; 1
    ea34:	ae 17       	cp	r26, r30
    ea36:	08 f0       	brcs	.+2      	; 0xea3a <arb_roundRobinScheduler+0x32c>
    ea38:	f0 e0       	ldi	r31, 0x00	; 0
    ea3a:	bf 2b       	or	r27, r31
    ea3c:	6d 2d       	mov	r22, r13
    ea3e:	65 0f       	add	r22, r21
    ea40:	91 e0       	ldi	r25, 0x01	; 1
    ea42:	6d 15       	cp	r22, r13
    ea44:	08 f0       	brcs	.+2      	; 0xea48 <arb_roundRobinScheduler+0x33a>
    ea46:	90 e0       	ldi	r25, 0x00	; 0
    ea48:	5b 2f       	mov	r21, r27
    ea4a:	56 0f       	add	r21, r22
    ea4c:	81 e0       	ldi	r24, 0x01	; 1
    ea4e:	56 17       	cp	r21, r22
    ea50:	08 f0       	brcs	.+2      	; 0xea54 <arb_roundRobinScheduler+0x346>
    ea52:	80 e0       	ldi	r24, 0x00	; 0
    ea54:	69 2f       	mov	r22, r25
    ea56:	68 2b       	or	r22, r24
    ea58:	69 0d       	add	r22, r9
    ea5a:	71 e0       	ldi	r23, 0x01	; 1
    ea5c:	69 15       	cp	r22, r9
    ea5e:	08 f0       	brcs	.+2      	; 0xea62 <arb_roundRobinScheduler+0x354>
    ea60:	70 e0       	ldi	r23, 0x00	; 0
    ea62:	7c 0d       	add	r23, r12
    ea64:	81 e0       	ldi	r24, 0x01	; 1
    ea66:	7c 15       	cp	r23, r12
    ea68:	08 f0       	brcs	.+2      	; 0xea6c <arb_roundRobinScheduler+0x35e>
    ea6a:	80 e0       	ldi	r24, 0x00	; 0
    ea6c:	8b 0d       	add	r24, r11
    ea6e:	91 e0       	ldi	r25, 0x01	; 1
    ea70:	8b 15       	cp	r24, r11
    ea72:	08 f0       	brcs	.+2      	; 0xea76 <arb_roundRobinScheduler+0x368>
    ea74:	90 e0       	ldi	r25, 0x00	; 0
    ea76:	98 01       	movw	r18, r16
    ea78:	4a 2f       	mov	r20, r26
    ea7a:	98 0d       	add	r25, r8
    ea7c:	0f e0       	ldi	r16, 0x0F	; 15
    ea7e:	0e 94 87 62 	call	0xc50e	; 0xc50e <__lshrdi3>
    ea82:	c9 01       	movw	r24, r18
    ea84:	ba 01       	movw	r22, r20
    ea86:	20 93 17 25 	sts	0x2517, r18
    ea8a:	90 93 18 25 	sts	0x2518, r25
    ea8e:	40 93 19 25 	sts	0x2519, r20
    ea92:	70 93 1a 25 	sts	0x251A, r23
    ea96:	24 96       	adiw	r28, 0x04	; 4
    ea98:	cd bf       	out	0x3d, r28	; 61
    ea9a:	de bf       	out	0x3e, r29	; 62
    ea9c:	cf 91       	pop	r28
    ea9e:	df 91       	pop	r29
    eaa0:	1f 91       	pop	r17
    eaa2:	0f 91       	pop	r16
    eaa4:	ff 90       	pop	r15
    eaa6:	ef 90       	pop	r14
    eaa8:	df 90       	pop	r13
    eaaa:	cf 90       	pop	r12
    eaac:	bf 90       	pop	r11
    eaae:	af 90       	pop	r10
    eab0:	9f 90       	pop	r9
    eab2:	8f 90       	pop	r8
    eab4:	7f 90       	pop	r7
    eab6:	6f 90       	pop	r6
    eab8:	5f 90       	pop	r5
    eaba:	4f 90       	pop	r4
    eabc:	08 95       	ret

0000eabe <arb_priorityScheduler>:
    eabe:	4f 92       	push	r4
    eac0:	5f 92       	push	r5
    eac2:	6f 92       	push	r6
    eac4:	7f 92       	push	r7
    eac6:	8f 92       	push	r8
    eac8:	9f 92       	push	r9
    eaca:	af 92       	push	r10
    eacc:	bf 92       	push	r11
    eace:	cf 92       	push	r12
    ead0:	df 92       	push	r13
    ead2:	ef 92       	push	r14
    ead4:	ff 92       	push	r15
    ead6:	0f 93       	push	r16
    ead8:	1f 93       	push	r17
    eada:	df 93       	push	r29
    eadc:	cf 93       	push	r28
    eade:	00 d0       	rcall	.+0      	; 0xeae0 <arb_priorityScheduler+0x22>
    eae0:	00 d0       	rcall	.+0      	; 0xeae2 <arb_priorityScheduler+0x24>
    eae2:	cd b7       	in	r28, 0x3d	; 61
    eae4:	de b7       	in	r29, 0x3e	; 62
    eae6:	80 91 10 25 	lds	r24, 0x2510
    eaea:	88 23       	and	r24, r24
    eaec:	09 f4       	brne	.+2      	; 0xeaf0 <arb_priorityScheduler+0x32>
    eaee:	d7 c1       	rjmp	.+942    	; 0xee9e <arb_priorityScheduler+0x3e0>
    eaf0:	e0 91 ab 22 	lds	r30, 0x22AB
    eaf4:	f0 91 ac 22 	lds	r31, 0x22AC
    eaf8:	80 85       	ldd	r24, Z+8	; 0x08
    eafa:	91 85       	ldd	r25, Z+9	; 0x09
    eafc:	8b 83       	std	Y+3, r24	; 0x03
    eafe:	9c 83       	std	Y+4, r25	; 0x04
    eb00:	eb 81       	ldd	r30, Y+3	; 0x03
    eb02:	fc 81       	ldd	r31, Y+4	; 0x04
    eb04:	01 90       	ld	r0, Z+
    eb06:	f0 81       	ld	r31, Z
    eb08:	e0 2d       	mov	r30, r0
    eb0a:	82 81       	ldd	r24, Z+2	; 0x02
    eb0c:	48 2f       	mov	r20, r24
    eb0e:	50 e0       	ldi	r21, 0x00	; 0
    eb10:	e0 91 ab 22 	lds	r30, 0x22AB
    eb14:	f0 91 ac 22 	lds	r31, 0x22AC
    eb18:	62 81       	ldd	r22, Z+2	; 0x02
    eb1a:	73 81       	ldd	r23, Z+3	; 0x03
    eb1c:	e0 91 ab 22 	lds	r30, 0x22AB
    eb20:	f0 91 ac 22 	lds	r31, 0x22AC
    eb24:	80 85       	ldd	r24, Z+8	; 0x08
    eb26:	91 85       	ldd	r25, Z+9	; 0x09
    eb28:	89 83       	std	Y+1, r24	; 0x01
    eb2a:	9a 83       	std	Y+2, r25	; 0x02
    eb2c:	1d c0       	rjmp	.+58     	; 0xeb68 <arb_priorityScheduler+0xaa>
    eb2e:	e9 81       	ldd	r30, Y+1	; 0x01
    eb30:	fa 81       	ldd	r31, Y+2	; 0x02
    eb32:	01 90       	ld	r0, Z+
    eb34:	f0 81       	ld	r31, Z
    eb36:	e0 2d       	mov	r30, r0
    eb38:	82 81       	ldd	r24, Z+2	; 0x02
    eb3a:	28 2f       	mov	r18, r24
    eb3c:	30 e0       	ldi	r19, 0x00	; 0
    eb3e:	24 17       	cp	r18, r20
    eb40:	35 07       	cpc	r19, r21
    eb42:	40 f4       	brcc	.+16     	; 0xeb54 <arb_priorityScheduler+0x96>
    eb44:	81 81       	ldd	r24, Z+1	; 0x01
    eb46:	83 30       	cpi	r24, 0x03	; 3
    eb48:	29 f0       	breq	.+10     	; 0xeb54 <arb_priorityScheduler+0x96>
    eb4a:	89 81       	ldd	r24, Y+1	; 0x01
    eb4c:	9a 81       	ldd	r25, Y+2	; 0x02
    eb4e:	8b 83       	std	Y+3, r24	; 0x03
    eb50:	9c 83       	std	Y+4, r25	; 0x04
    eb52:	01 c0       	rjmp	.+2      	; 0xeb56 <arb_priorityScheduler+0x98>
    eb54:	9a 01       	movw	r18, r20
    eb56:	61 50       	subi	r22, 0x01	; 1
    eb58:	70 40       	sbci	r23, 0x00	; 0
    eb5a:	e9 81       	ldd	r30, Y+1	; 0x01
    eb5c:	fa 81       	ldd	r31, Y+2	; 0x02
    eb5e:	80 85       	ldd	r24, Z+8	; 0x08
    eb60:	91 85       	ldd	r25, Z+9	; 0x09
    eb62:	89 83       	std	Y+1, r24	; 0x01
    eb64:	9a 83       	std	Y+2, r25	; 0x02
    eb66:	a9 01       	movw	r20, r18
    eb68:	61 15       	cp	r22, r1
    eb6a:	71 05       	cpc	r23, r1
    eb6c:	01 f7       	brne	.-64     	; 0xeb2e <arb_priorityScheduler+0x70>
    eb6e:	e0 91 ab 22 	lds	r30, 0x22AB
    eb72:	f0 91 ac 22 	lds	r31, 0x22AC
    eb76:	8b 81       	ldd	r24, Y+3	; 0x03
    eb78:	9c 81       	ldd	r25, Y+4	; 0x04
    eb7a:	86 83       	std	Z+6, r24	; 0x06
    eb7c:	97 83       	std	Z+7, r25	; 0x07
    eb7e:	eb 81       	ldd	r30, Y+3	; 0x03
    eb80:	fc 81       	ldd	r31, Y+4	; 0x04
    eb82:	01 90       	ld	r0, Z+
    eb84:	f0 81       	ld	r31, Z
    eb86:	e0 2d       	mov	r30, r0
    eb88:	e0 93 0c 25 	sts	0x250C, r30
    eb8c:	f0 93 0d 25 	sts	0x250D, r31
    eb90:	81 e0       	ldi	r24, 0x01	; 1
    eb92:	81 83       	std	Z+1, r24	; 0x01
    eb94:	e0 91 ab 22 	lds	r30, 0x22AB
    eb98:	f0 91 ac 22 	lds	r31, 0x22AC
    eb9c:	62 81       	ldd	r22, Z+2	; 0x02
    eb9e:	73 81       	ldd	r23, Z+3	; 0x03
    eba0:	e0 91 ab 22 	lds	r30, 0x22AB
    eba4:	f0 91 ac 22 	lds	r31, 0x22AC
    eba8:	80 85       	ldd	r24, Z+8	; 0x08
    ebaa:	91 85       	ldd	r25, Z+9	; 0x09
    ebac:	8d 83       	std	Y+5, r24	; 0x05
    ebae:	9e 83       	std	Y+6, r25	; 0x06
    ebb0:	20 91 1b 25 	lds	r18, 0x251B
    ebb4:	30 91 1c 25 	lds	r19, 0x251C
    ebb8:	40 91 1d 25 	lds	r20, 0x251D
    ebbc:	50 91 1e 25 	lds	r21, 0x251E
    ebc0:	17 c0       	rjmp	.+46     	; 0xebf0 <arb_priorityScheduler+0x132>
    ebc2:	ed 81       	ldd	r30, Y+5	; 0x05
    ebc4:	fe 81       	ldd	r31, Y+6	; 0x06
    ebc6:	01 90       	ld	r0, Z+
    ebc8:	f0 81       	ld	r31, Z
    ebca:	e0 2d       	mov	r30, r0
    ebcc:	81 81       	ldd	r24, Z+1	; 0x01
    ebce:	82 30       	cpi	r24, 0x02	; 2
    ebd0:	38 f4       	brcc	.+14     	; 0xebe0 <arb_priorityScheduler+0x122>
    ebd2:	82 81       	ldd	r24, Z+2	; 0x02
    ebd4:	8f 3f       	cpi	r24, 0xFF	; 255
    ebd6:	21 f0       	breq	.+8      	; 0xebe0 <arb_priorityScheduler+0x122>
    ebd8:	2f 5f       	subi	r18, 0xFF	; 255
    ebda:	3f 4f       	sbci	r19, 0xFF	; 255
    ebdc:	4f 4f       	sbci	r20, 0xFF	; 255
    ebde:	5f 4f       	sbci	r21, 0xFF	; 255
    ebe0:	61 50       	subi	r22, 0x01	; 1
    ebe2:	70 40       	sbci	r23, 0x00	; 0
    ebe4:	ed 81       	ldd	r30, Y+5	; 0x05
    ebe6:	fe 81       	ldd	r31, Y+6	; 0x06
    ebe8:	80 85       	ldd	r24, Z+8	; 0x08
    ebea:	91 85       	ldd	r25, Z+9	; 0x09
    ebec:	8d 83       	std	Y+5, r24	; 0x05
    ebee:	9e 83       	std	Y+6, r25	; 0x06
    ebf0:	61 15       	cp	r22, r1
    ebf2:	71 05       	cpc	r23, r1
    ebf4:	31 f7       	brne	.-52     	; 0xebc2 <arb_priorityScheduler+0x104>
    ebf6:	20 93 1b 25 	sts	0x251B, r18
    ebfa:	30 93 1c 25 	sts	0x251C, r19
    ebfe:	40 93 1d 25 	sts	0x251D, r20
    ec02:	50 93 1e 25 	sts	0x251E, r21
    ec06:	80 91 11 25 	lds	r24, 0x2511
    ec0a:	90 91 12 25 	lds	r25, 0x2512
    ec0e:	01 96       	adiw	r24, 0x01	; 1
    ec10:	80 93 11 25 	sts	0x2511, r24
    ec14:	90 93 12 25 	sts	0x2512, r25
    ec18:	84 5f       	subi	r24, 0xF4	; 244
    ec1a:	91 40       	sbci	r25, 0x01	; 1
    ec1c:	09 f0       	breq	.+2      	; 0xec20 <arb_priorityScheduler+0x162>
    ec1e:	3f c1       	rjmp	.+638    	; 0xee9e <arb_priorityScheduler+0x3e0>
    ec20:	ff e0       	ldi	r31, 0x0F	; 15
    ec22:	22 0f       	add	r18, r18
    ec24:	33 1f       	adc	r19, r19
    ec26:	44 1f       	adc	r20, r20
    ec28:	55 1f       	adc	r21, r21
    ec2a:	fa 95       	dec	r31
    ec2c:	d1 f7       	brne	.-12     	; 0xec22 <arb_priorityScheduler+0x164>
    ec2e:	ca 01       	movw	r24, r20
    ec30:	b9 01       	movw	r22, r18
    ec32:	24 ef       	ldi	r18, 0xF4	; 244
    ec34:	31 e0       	ldi	r19, 0x01	; 1
    ec36:	40 e0       	ldi	r20, 0x00	; 0
    ec38:	50 e0       	ldi	r21, 0x00	; 0
    ec3a:	0e 94 ec b4 	call	0x169d8	; 0x169d8 <__udivmodsi4>
    ec3e:	72 2e       	mov	r7, r18
    ec40:	63 2e       	mov	r6, r19
    ec42:	54 2e       	mov	r5, r20
    ec44:	45 2e       	mov	r4, r21
    ec46:	10 92 1b 25 	sts	0x251B, r1
    ec4a:	10 92 1c 25 	sts	0x251C, r1
    ec4e:	10 92 1d 25 	sts	0x251D, r1
    ec52:	10 92 1e 25 	sts	0x251E, r1
    ec56:	10 92 11 25 	sts	0x2511, r1
    ec5a:	10 92 12 25 	sts	0x2512, r1
    ec5e:	60 91 13 25 	lds	r22, 0x2513
    ec62:	70 91 14 25 	lds	r23, 0x2514
    ec66:	80 91 15 25 	lds	r24, 0x2515
    ec6a:	90 91 16 25 	lds	r25, 0x2516
    ec6e:	25 e5       	ldi	r18, 0x55	; 85
    ec70:	35 e7       	ldi	r19, 0x75	; 117
    ec72:	40 e0       	ldi	r20, 0x00	; 0
    ec74:	50 e0       	ldi	r21, 0x00	; 0
    ec76:	0e 94 cd b4 	call	0x1699a	; 0x1699a <__mulsi3>
    ec7a:	8b 01       	movw	r16, r22
    ec7c:	9c 01       	movw	r18, r24
    ec7e:	40 e0       	ldi	r20, 0x00	; 0
    ec80:	50 e0       	ldi	r21, 0x00	; 0
    ec82:	60 e0       	ldi	r22, 0x00	; 0
    ec84:	70 e0       	ldi	r23, 0x00	; 0
    ec86:	a0 2e       	mov	r10, r16
    ec88:	e0 e4       	ldi	r30, 0x40	; 64
    ec8a:	fe 2e       	mov	r15, r30
    ec8c:	f1 0e       	add	r15, r17
    ec8e:	91 e0       	ldi	r25, 0x01	; 1
    ec90:	f1 16       	cp	r15, r17
    ec92:	08 f0       	brcs	.+2      	; 0xec96 <arb_priorityScheduler+0x1d8>
    ec94:	90 e0       	ldi	r25, 0x00	; 0
    ec96:	e9 2e       	mov	r14, r25
    ec98:	e2 0e       	add	r14, r18
    ec9a:	91 e0       	ldi	r25, 0x01	; 1
    ec9c:	e2 16       	cp	r14, r18
    ec9e:	08 f0       	brcs	.+2      	; 0xeca2 <arb_priorityScheduler+0x1e4>
    eca0:	90 e0       	ldi	r25, 0x00	; 0
    eca2:	d9 2e       	mov	r13, r25
    eca4:	d3 0e       	add	r13, r19
    eca6:	91 e0       	ldi	r25, 0x01	; 1
    eca8:	d3 16       	cp	r13, r19
    ecaa:	08 f0       	brcs	.+2      	; 0xecae <arb_priorityScheduler+0x1f0>
    ecac:	90 e0       	ldi	r25, 0x00	; 0
    ecae:	99 2e       	mov	r9, r25
    ecb0:	cc 24       	eor	r12, r12
    ecb2:	c3 94       	inc	r12
    ecb4:	44 23       	and	r20, r20
    ecb6:	09 f4       	brne	.+2      	; 0xecba <arb_priorityScheduler+0x1fc>
    ecb8:	cc 24       	eor	r12, r12
    ecba:	bb 24       	eor	r11, r11
    ecbc:	b3 94       	inc	r11
    ecbe:	55 23       	and	r21, r21
    ecc0:	09 f4       	brne	.+2      	; 0xecc4 <arb_priorityScheduler+0x206>
    ecc2:	bb 24       	eor	r11, r11
    ecc4:	88 24       	eor	r8, r8
    ecc6:	83 94       	inc	r8
    ecc8:	66 23       	and	r22, r22
    ecca:	09 f4       	brne	.+2      	; 0xecce <arb_priorityScheduler+0x210>
    eccc:	88 24       	eor	r8, r8
    ecce:	67 2d       	mov	r22, r7
    ecd0:	76 2d       	mov	r23, r6
    ecd2:	85 2d       	mov	r24, r5
    ecd4:	94 2d       	mov	r25, r4
    ecd6:	2b ea       	ldi	r18, 0xAB	; 171
    ecd8:	3a e0       	ldi	r19, 0x0A	; 10
    ecda:	40 e0       	ldi	r20, 0x00	; 0
    ecdc:	50 e0       	ldi	r21, 0x00	; 0
    ecde:	0e 94 cd b4 	call	0x1699a	; 0x1699a <__mulsi3>
    ece2:	9b 01       	movw	r18, r22
    ece4:	ac 01       	movw	r20, r24
    ece6:	0a 2d       	mov	r16, r10
    ece8:	06 0f       	add	r16, r22
    ecea:	f1 e0       	ldi	r31, 0x01	; 1
    ecec:	0a 15       	cp	r16, r10
    ecee:	08 f0       	brcs	.+2      	; 0xecf2 <arb_priorityScheduler+0x234>
    ecf0:	f0 e0       	ldi	r31, 0x00	; 0
    ecf2:	ef 2d       	mov	r30, r15
    ecf4:	e3 0f       	add	r30, r19
    ecf6:	a1 e0       	ldi	r26, 0x01	; 1
    ecf8:	ef 15       	cp	r30, r15
    ecfa:	08 f0       	brcs	.+2      	; 0xecfe <arb_priorityScheduler+0x240>
    ecfc:	a0 e0       	ldi	r26, 0x00	; 0
    ecfe:	1f 2f       	mov	r17, r31
    ed00:	1e 0f       	add	r17, r30
    ed02:	f1 e0       	ldi	r31, 0x01	; 1
    ed04:	1e 17       	cp	r17, r30
    ed06:	08 f0       	brcs	.+2      	; 0xed0a <arb_priorityScheduler+0x24c>
    ed08:	f0 e0       	ldi	r31, 0x00	; 0
    ed0a:	af 2b       	or	r26, r31
    ed0c:	ee 2d       	mov	r30, r14
    ed0e:	e4 0f       	add	r30, r20
    ed10:	b1 e0       	ldi	r27, 0x01	; 1
    ed12:	ee 15       	cp	r30, r14
    ed14:	08 f0       	brcs	.+2      	; 0xed18 <arb_priorityScheduler+0x25a>
    ed16:	b0 e0       	ldi	r27, 0x00	; 0
    ed18:	ae 0f       	add	r26, r30
    ed1a:	f1 e0       	ldi	r31, 0x01	; 1
    ed1c:	ae 17       	cp	r26, r30
    ed1e:	08 f0       	brcs	.+2      	; 0xed22 <arb_priorityScheduler+0x264>
    ed20:	f0 e0       	ldi	r31, 0x00	; 0
    ed22:	bf 2b       	or	r27, r31
    ed24:	6d 2d       	mov	r22, r13
    ed26:	65 0f       	add	r22, r21
    ed28:	91 e0       	ldi	r25, 0x01	; 1
    ed2a:	6d 15       	cp	r22, r13
    ed2c:	08 f0       	brcs	.+2      	; 0xed30 <arb_priorityScheduler+0x272>
    ed2e:	90 e0       	ldi	r25, 0x00	; 0
    ed30:	5b 2f       	mov	r21, r27
    ed32:	56 0f       	add	r21, r22
    ed34:	81 e0       	ldi	r24, 0x01	; 1
    ed36:	56 17       	cp	r21, r22
    ed38:	08 f0       	brcs	.+2      	; 0xed3c <arb_priorityScheduler+0x27e>
    ed3a:	80 e0       	ldi	r24, 0x00	; 0
    ed3c:	69 2f       	mov	r22, r25
    ed3e:	68 2b       	or	r22, r24
    ed40:	69 0d       	add	r22, r9
    ed42:	71 e0       	ldi	r23, 0x01	; 1
    ed44:	69 15       	cp	r22, r9
    ed46:	08 f0       	brcs	.+2      	; 0xed4a <arb_priorityScheduler+0x28c>
    ed48:	70 e0       	ldi	r23, 0x00	; 0
    ed4a:	7c 0d       	add	r23, r12
    ed4c:	81 e0       	ldi	r24, 0x01	; 1
    ed4e:	7c 15       	cp	r23, r12
    ed50:	08 f0       	brcs	.+2      	; 0xed54 <arb_priorityScheduler+0x296>
    ed52:	80 e0       	ldi	r24, 0x00	; 0
    ed54:	8b 0d       	add	r24, r11
    ed56:	91 e0       	ldi	r25, 0x01	; 1
    ed58:	8b 15       	cp	r24, r11
    ed5a:	08 f0       	brcs	.+2      	; 0xed5e <arb_priorityScheduler+0x2a0>
    ed5c:	90 e0       	ldi	r25, 0x00	; 0
    ed5e:	98 01       	movw	r18, r16
    ed60:	4a 2f       	mov	r20, r26
    ed62:	98 0d       	add	r25, r8
    ed64:	0f e0       	ldi	r16, 0x0F	; 15
    ed66:	0e 94 87 62 	call	0xc50e	; 0xc50e <__lshrdi3>
    ed6a:	c9 01       	movw	r24, r18
    ed6c:	ba 01       	movw	r22, r20
    ed6e:	20 93 13 25 	sts	0x2513, r18
    ed72:	90 93 14 25 	sts	0x2514, r25
    ed76:	40 93 15 25 	sts	0x2515, r20
    ed7a:	70 93 16 25 	sts	0x2516, r23
    ed7e:	60 91 17 25 	lds	r22, 0x2517
    ed82:	70 91 18 25 	lds	r23, 0x2518
    ed86:	80 91 19 25 	lds	r24, 0x2519
    ed8a:	90 91 1a 25 	lds	r25, 0x251A
    ed8e:	2d ed       	ldi	r18, 0xDD	; 221
    ed90:	3d e7       	ldi	r19, 0x7D	; 125
    ed92:	40 e0       	ldi	r20, 0x00	; 0
    ed94:	50 e0       	ldi	r21, 0x00	; 0
    ed96:	0e 94 cd b4 	call	0x1699a	; 0x1699a <__mulsi3>
    ed9a:	8b 01       	movw	r16, r22
    ed9c:	9c 01       	movw	r18, r24
    ed9e:	40 e0       	ldi	r20, 0x00	; 0
    eda0:	50 e0       	ldi	r21, 0x00	; 0
    eda2:	60 e0       	ldi	r22, 0x00	; 0
    eda4:	70 e0       	ldi	r23, 0x00	; 0
    eda6:	a0 2e       	mov	r10, r16
    eda8:	70 e4       	ldi	r23, 0x40	; 64
    edaa:	f7 2e       	mov	r15, r23
    edac:	f1 0e       	add	r15, r17
    edae:	91 e0       	ldi	r25, 0x01	; 1
    edb0:	f1 16       	cp	r15, r17
    edb2:	08 f0       	brcs	.+2      	; 0xedb6 <arb_priorityScheduler+0x2f8>
    edb4:	90 e0       	ldi	r25, 0x00	; 0
    edb6:	e9 2e       	mov	r14, r25
    edb8:	e2 0e       	add	r14, r18
    edba:	91 e0       	ldi	r25, 0x01	; 1
    edbc:	e2 16       	cp	r14, r18
    edbe:	08 f0       	brcs	.+2      	; 0xedc2 <arb_priorityScheduler+0x304>
    edc0:	90 e0       	ldi	r25, 0x00	; 0
    edc2:	d9 2e       	mov	r13, r25
    edc4:	d3 0e       	add	r13, r19
    edc6:	91 e0       	ldi	r25, 0x01	; 1
    edc8:	d3 16       	cp	r13, r19
    edca:	08 f0       	brcs	.+2      	; 0xedce <arb_priorityScheduler+0x310>
    edcc:	90 e0       	ldi	r25, 0x00	; 0
    edce:	99 2e       	mov	r9, r25
    edd0:	cc 24       	eor	r12, r12
    edd2:	c3 94       	inc	r12
    edd4:	44 23       	and	r20, r20
    edd6:	09 f4       	brne	.+2      	; 0xedda <arb_priorityScheduler+0x31c>
    edd8:	cc 24       	eor	r12, r12
    edda:	bb 24       	eor	r11, r11
    eddc:	b3 94       	inc	r11
    edde:	55 23       	and	r21, r21
    ede0:	09 f4       	brne	.+2      	; 0xede4 <arb_priorityScheduler+0x326>
    ede2:	bb 24       	eor	r11, r11
    ede4:	88 24       	eor	r8, r8
    ede6:	83 94       	inc	r8
    ede8:	66 23       	and	r22, r22
    edea:	09 f4       	brne	.+2      	; 0xedee <arb_priorityScheduler+0x330>
    edec:	88 24       	eor	r8, r8
    edee:	67 2d       	mov	r22, r7
    edf0:	76 2d       	mov	r23, r6
    edf2:	85 2d       	mov	r24, r5
    edf4:	94 2d       	mov	r25, r4
    edf6:	23 e2       	ldi	r18, 0x23	; 35
    edf8:	32 e0       	ldi	r19, 0x02	; 2
    edfa:	40 e0       	ldi	r20, 0x00	; 0
    edfc:	50 e0       	ldi	r21, 0x00	; 0
    edfe:	0e 94 cd b4 	call	0x1699a	; 0x1699a <__mulsi3>
    ee02:	9b 01       	movw	r18, r22
    ee04:	ac 01       	movw	r20, r24
    ee06:	0a 2d       	mov	r16, r10
    ee08:	06 0f       	add	r16, r22
    ee0a:	f1 e0       	ldi	r31, 0x01	; 1
    ee0c:	0a 15       	cp	r16, r10
    ee0e:	08 f0       	brcs	.+2      	; 0xee12 <arb_priorityScheduler+0x354>
    ee10:	f0 e0       	ldi	r31, 0x00	; 0
    ee12:	ef 2d       	mov	r30, r15
    ee14:	e3 0f       	add	r30, r19
    ee16:	a1 e0       	ldi	r26, 0x01	; 1
    ee18:	ef 15       	cp	r30, r15
    ee1a:	08 f0       	brcs	.+2      	; 0xee1e <arb_priorityScheduler+0x360>
    ee1c:	a0 e0       	ldi	r26, 0x00	; 0
    ee1e:	1f 2f       	mov	r17, r31
    ee20:	1e 0f       	add	r17, r30
    ee22:	f1 e0       	ldi	r31, 0x01	; 1
    ee24:	1e 17       	cp	r17, r30
    ee26:	08 f0       	brcs	.+2      	; 0xee2a <arb_priorityScheduler+0x36c>
    ee28:	f0 e0       	ldi	r31, 0x00	; 0
    ee2a:	af 2b       	or	r26, r31
    ee2c:	ee 2d       	mov	r30, r14
    ee2e:	e4 0f       	add	r30, r20
    ee30:	b1 e0       	ldi	r27, 0x01	; 1
    ee32:	ee 15       	cp	r30, r14
    ee34:	08 f0       	brcs	.+2      	; 0xee38 <arb_priorityScheduler+0x37a>
    ee36:	b0 e0       	ldi	r27, 0x00	; 0
    ee38:	ae 0f       	add	r26, r30
    ee3a:	f1 e0       	ldi	r31, 0x01	; 1
    ee3c:	ae 17       	cp	r26, r30
    ee3e:	08 f0       	brcs	.+2      	; 0xee42 <arb_priorityScheduler+0x384>
    ee40:	f0 e0       	ldi	r31, 0x00	; 0
    ee42:	bf 2b       	or	r27, r31
    ee44:	6d 2d       	mov	r22, r13
    ee46:	65 0f       	add	r22, r21
    ee48:	91 e0       	ldi	r25, 0x01	; 1
    ee4a:	6d 15       	cp	r22, r13
    ee4c:	08 f0       	brcs	.+2      	; 0xee50 <arb_priorityScheduler+0x392>
    ee4e:	90 e0       	ldi	r25, 0x00	; 0
    ee50:	5b 2f       	mov	r21, r27
    ee52:	56 0f       	add	r21, r22
    ee54:	81 e0       	ldi	r24, 0x01	; 1
    ee56:	56 17       	cp	r21, r22
    ee58:	08 f0       	brcs	.+2      	; 0xee5c <arb_priorityScheduler+0x39e>
    ee5a:	80 e0       	ldi	r24, 0x00	; 0
    ee5c:	69 2f       	mov	r22, r25
    ee5e:	68 2b       	or	r22, r24
    ee60:	69 0d       	add	r22, r9
    ee62:	71 e0       	ldi	r23, 0x01	; 1
    ee64:	69 15       	cp	r22, r9
    ee66:	08 f0       	brcs	.+2      	; 0xee6a <arb_priorityScheduler+0x3ac>
    ee68:	70 e0       	ldi	r23, 0x00	; 0
    ee6a:	7c 0d       	add	r23, r12
    ee6c:	81 e0       	ldi	r24, 0x01	; 1
    ee6e:	7c 15       	cp	r23, r12
    ee70:	08 f0       	brcs	.+2      	; 0xee74 <arb_priorityScheduler+0x3b6>
    ee72:	80 e0       	ldi	r24, 0x00	; 0
    ee74:	8b 0d       	add	r24, r11
    ee76:	91 e0       	ldi	r25, 0x01	; 1
    ee78:	8b 15       	cp	r24, r11
    ee7a:	08 f0       	brcs	.+2      	; 0xee7e <arb_priorityScheduler+0x3c0>
    ee7c:	90 e0       	ldi	r25, 0x00	; 0
    ee7e:	98 01       	movw	r18, r16
    ee80:	4a 2f       	mov	r20, r26
    ee82:	98 0d       	add	r25, r8
    ee84:	0f e0       	ldi	r16, 0x0F	; 15
    ee86:	0e 94 87 62 	call	0xc50e	; 0xc50e <__lshrdi3>
    ee8a:	c9 01       	movw	r24, r18
    ee8c:	ba 01       	movw	r22, r20
    ee8e:	20 93 17 25 	sts	0x2517, r18
    ee92:	90 93 18 25 	sts	0x2518, r25
    ee96:	40 93 19 25 	sts	0x2519, r20
    ee9a:	70 93 1a 25 	sts	0x251A, r23
    ee9e:	26 96       	adiw	r28, 0x06	; 6
    eea0:	cd bf       	out	0x3d, r28	; 61
    eea2:	de bf       	out	0x3e, r29	; 62
    eea4:	cf 91       	pop	r28
    eea6:	df 91       	pop	r29
    eea8:	1f 91       	pop	r17
    eeaa:	0f 91       	pop	r16
    eeac:	ff 90       	pop	r15
    eeae:	ef 90       	pop	r14
    eeb0:	df 90       	pop	r13
    eeb2:	cf 90       	pop	r12
    eeb4:	bf 90       	pop	r11
    eeb6:	af 90       	pop	r10
    eeb8:	9f 90       	pop	r9
    eeba:	8f 90       	pop	r8
    eebc:	7f 90       	pop	r7
    eebe:	6f 90       	pop	r6
    eec0:	5f 90       	pop	r5
    eec2:	4f 90       	pop	r4
    eec4:	08 95       	ret

0000eec6 <arb_schedulerStart>:
    eec6:	ef 92       	push	r14
    eec8:	ff 92       	push	r15
    eeca:	0f 93       	push	r16
    eecc:	1f 93       	push	r17
    eece:	df 93       	push	r29
    eed0:	cf 93       	push	r28
    eed2:	cd b7       	in	r28, 0x3d	; 61
    eed4:	de b7       	in	r29, 0x3e	; 62
    eed6:	e3 97       	sbiw	r28, 0x33	; 51
    eed8:	cd bf       	out	0x3d, r28	; 61
    eeda:	de bf       	out	0x3e, r29	; 62
    eedc:	11 e0       	ldi	r17, 0x01	; 1
    eede:	10 93 10 25 	sts	0x2510, r17
    eee2:	0e 94 39 82 	call	0x10472	; 0x10472 <arb_sysTimerStart>
    eee6:	28 2f       	mov	r18, r24
    eee8:	87 ff       	sbrs	r24, 7
    eeea:	27 c0       	rjmp	.+78     	; 0xef3a <arb_schedulerStart+0x74>
    eeec:	00 d0       	rcall	.+0      	; 0xeeee <arb_schedulerStart+0x28>
    eeee:	00 d0       	rcall	.+0      	; 0xeef0 <arb_schedulerStart+0x2a>
    eef0:	ed b7       	in	r30, 0x3d	; 61
    eef2:	fe b7       	in	r31, 0x3e	; 62
    eef4:	31 96       	adiw	r30, 0x01	; 1
    eef6:	8e 01       	movw	r16, r28
    eef8:	0e 5f       	subi	r16, 0xFE	; 254
    eefa:	1f 4f       	sbci	r17, 0xFF	; 255
    eefc:	ad b7       	in	r26, 0x3d	; 61
    eefe:	be b7       	in	r27, 0x3e	; 62
    ef00:	11 96       	adiw	r26, 0x01	; 1
    ef02:	0d 93       	st	X+, r16
    ef04:	1c 93       	st	X, r17
    ef06:	12 97       	sbiw	r26, 0x02	; 2
    ef08:	8b e1       	ldi	r24, 0x1B	; 27
    ef0a:	9d e0       	ldi	r25, 0x0D	; 13
    ef0c:	82 83       	std	Z+2, r24	; 0x02
    ef0e:	93 83       	std	Z+3, r25	; 0x03
    ef10:	82 2f       	mov	r24, r18
    ef12:	99 27       	eor	r25, r25
    ef14:	87 fd       	sbrc	r24, 7
    ef16:	90 95       	com	r25
    ef18:	84 83       	std	Z+4, r24	; 0x04
    ef1a:	95 83       	std	Z+5, r25	; 0x05
    ef1c:	0e 94 93 b2 	call	0x16526	; 0x16526 <sprintf_P>
    ef20:	8d b7       	in	r24, 0x3d	; 61
    ef22:	9e b7       	in	r25, 0x3e	; 62
    ef24:	06 96       	adiw	r24, 0x06	; 6
    ef26:	8d bf       	out	0x3d, r24	; 61
    ef28:	9e bf       	out	0x3e, r25	; 62
    ef2a:	84 e0       	ldi	r24, 0x04	; 4
    ef2c:	b8 01       	movw	r22, r16
    ef2e:	0e 94 2d 72 	call	0xe45a	; 0xe45a <arb_printf>
    ef32:	80 e0       	ldi	r24, 0x00	; 0
    ef34:	90 e0       	ldi	r25, 0x00	; 0
    ef36:	0e 94 ac b0 	call	0x16158	; 0x16158 <exit>
    ef3a:	e0 91 ab 22 	lds	r30, 0x22AB
    ef3e:	f0 91 ac 22 	lds	r31, 0x22AC
    ef42:	06 80       	ldd	r0, Z+6	; 0x06
    ef44:	f7 81       	ldd	r31, Z+7	; 0x07
    ef46:	e0 2d       	mov	r30, r0
    ef48:	01 90       	ld	r0, Z+
    ef4a:	f0 81       	ld	r31, Z
    ef4c:	e0 2d       	mov	r30, r0
    ef4e:	e0 93 0e 25 	sts	0x250E, r30
    ef52:	f0 93 0f 25 	sts	0x250F, r31
    ef56:	11 83       	std	Z+1, r17	; 0x01
    ef58:	80 e2       	ldi	r24, 0x20	; 32
    ef5a:	0e 94 9e 70 	call	0xe13c	; 0xe13c <arb_setPrintfDbgLevel>
    ef5e:	0e 94 c0 49 	call	0x9380	; 0x9380 <hal_getCpuFreq>
    ef62:	0e 94 6b ad 	call	0x15ad6	; 0x15ad6 <__floatunsisf>
    ef66:	20 e0       	ldi	r18, 0x00	; 0
    ef68:	30 e0       	ldi	r19, 0x00	; 0
    ef6a:	4a e7       	ldi	r20, 0x7A	; 122
    ef6c:	55 e4       	ldi	r21, 0x45	; 69
    ef6e:	0e 94 98 ac 	call	0x15930	; 0x15930 <__divsf3>
    ef72:	20 e0       	ldi	r18, 0x00	; 0
    ef74:	30 e0       	ldi	r19, 0x00	; 0
    ef76:	4a e7       	ldi	r20, 0x7A	; 122
    ef78:	54 e4       	ldi	r21, 0x44	; 68
    ef7a:	0e 94 d4 ae 	call	0x15da8	; 0x15da8 <__mulsf3>
    ef7e:	7b 01       	movw	r14, r22
    ef80:	8c 01       	movw	r16, r24
    ef82:	8f b7       	in	r24, 0x3f	; 63
    ef84:	89 83       	std	Y+1, r24	; 0x01
    ef86:	f8 94       	cli
    ef88:	c8 01       	movw	r24, r16
    ef8a:	b7 01       	movw	r22, r14
    ef8c:	20 e0       	ldi	r18, 0x00	; 0
    ef8e:	30 e0       	ldi	r19, 0x00	; 0
    ef90:	40 e8       	ldi	r20, 0x80	; 128
    ef92:	5f e3       	ldi	r21, 0x3F	; 63
    ef94:	0e 94 91 ac 	call	0x15922	; 0x15922 <__cmpsf2>
    ef98:	88 23       	and	r24, r24
    ef9a:	1c f4       	brge	.+6      	; 0xefa2 <arb_schedulerStart+0xdc>
    ef9c:	81 e0       	ldi	r24, 0x01	; 1
    ef9e:	90 e0       	ldi	r25, 0x00	; 0
    efa0:	19 c0       	rjmp	.+50     	; 0xefd4 <arb_schedulerStart+0x10e>
    efa2:	c8 01       	movw	r24, r16
    efa4:	b7 01       	movw	r22, r14
    efa6:	20 e0       	ldi	r18, 0x00	; 0
    efa8:	3f ef       	ldi	r19, 0xFF	; 255
    efaa:	4f e7       	ldi	r20, 0x7F	; 127
    efac:	57 e4       	ldi	r21, 0x47	; 71
    efae:	0e 94 c9 ae 	call	0x15d92	; 0x15d92 <__gesf2>
    efb2:	18 16       	cp	r1, r24
    efb4:	54 f4       	brge	.+20     	; 0xefca <arb_schedulerStart+0x104>
    efb6:	80 e1       	ldi	r24, 0x10	; 16
    efb8:	97 e2       	ldi	r25, 0x27	; 39
    efba:	20 e2       	ldi	r18, 0x20	; 32
    efbc:	33 e0       	ldi	r19, 0x03	; 3
    efbe:	f9 01       	movw	r30, r18
    efc0:	31 97       	sbiw	r30, 0x01	; 1
    efc2:	f1 f7       	brne	.-4      	; 0xefc0 <arb_schedulerStart+0xfa>
    efc4:	01 97       	sbiw	r24, 0x01	; 1
    efc6:	d9 f7       	brne	.-10     	; 0xefbe <arb_schedulerStart+0xf8>
    efc8:	09 c0       	rjmp	.+18     	; 0xefdc <arb_schedulerStart+0x116>
    efca:	c8 01       	movw	r24, r16
    efcc:	b7 01       	movw	r22, r14
    efce:	0e 94 3f ad 	call	0x15a7e	; 0x15a7e <__fixunssfsi>
    efd2:	cb 01       	movw	r24, r22
    efd4:	01 97       	sbiw	r24, 0x01	; 1
    efd6:	f1 f7       	brne	.-4      	; 0xefd4 <arb_schedulerStart+0x10e>
    efd8:	89 81       	ldd	r24, Y+1	; 0x01
    efda:	8f bf       	out	0x3f, r24	; 63
    efdc:	e0 91 ab 22 	lds	r30, 0x22AB
    efe0:	f0 91 ac 22 	lds	r31, 0x22AC
    efe4:	06 80       	ldd	r0, Z+6	; 0x06
    efe6:	f7 81       	ldd	r31, Z+7	; 0x07
    efe8:	e0 2d       	mov	r30, r0
    efea:	01 90       	ld	r0, Z+
    efec:	f0 81       	ld	r31, Z
    efee:	e0 2d       	mov	r30, r0
    eff0:	e0 93 e8 27 	sts	0x27E8, r30
    eff4:	f0 93 e9 27 	sts	0x27E9, r31
    eff8:	81 85       	ldd	r24, Z+9	; 0x09
    effa:	92 85       	ldd	r25, Z+10	; 0x0a
    effc:	8d bf       	out	0x3d, r24	; 61
    effe:	9e bf       	out	0x3e, r25	; 62
    f000:	ff 91       	pop	r31
    f002:	ef 91       	pop	r30
    f004:	df 91       	pop	r29
    f006:	cf 91       	pop	r28
    f008:	bf 91       	pop	r27
    f00a:	af 91       	pop	r26
    f00c:	9f 91       	pop	r25
    f00e:	8f 91       	pop	r24
    f010:	7f 91       	pop	r23
    f012:	6f 91       	pop	r22
    f014:	5f 91       	pop	r21
    f016:	4f 91       	pop	r20
    f018:	3f 91       	pop	r19
    f01a:	2f 91       	pop	r18
    f01c:	1f 91       	pop	r17
    f01e:	0f 91       	pop	r16
    f020:	ff 90       	pop	r15
    f022:	ef 90       	pop	r14
    f024:	df 90       	pop	r13
    f026:	cf 90       	pop	r12
    f028:	bf 90       	pop	r11
    f02a:	af 90       	pop	r10
    f02c:	9f 90       	pop	r9
    f02e:	8f 90       	pop	r8
    f030:	7f 90       	pop	r7
    f032:	6f 90       	pop	r6
    f034:	5f 90       	pop	r5
    f036:	4f 90       	pop	r4
    f038:	3f 90       	pop	r3
    f03a:	2f 90       	pop	r2
    f03c:	1f 90       	pop	r1
    f03e:	0f 90       	pop	r0
    f040:	0f be       	out	0x3f, r0	; 63
    f042:	0f 90       	pop	r0
    f044:	08 95       	ret
    f046:	e3 96       	adiw	r28, 0x33	; 51
    f048:	cd bf       	out	0x3d, r28	; 61
    f04a:	de bf       	out	0x3e, r29	; 62
    f04c:	cf 91       	pop	r28
    f04e:	df 91       	pop	r29
    f050:	1f 91       	pop	r17
    f052:	0f 91       	pop	r16
    f054:	ff 90       	pop	r15
    f056:	ef 90       	pop	r14
    f058:	08 95       	ret

0000f05a <arb_schedulerInit>:
    f05a:	ff 92       	push	r15
    f05c:	0f 93       	push	r16
    f05e:	1f 93       	push	r17
    f060:	df 93       	push	r29
    f062:	cf 93       	push	r28
    f064:	0f 92       	push	r0
    f066:	0f 92       	push	r0
    f068:	cd b7       	in	r28, 0x3d	; 61
    f06a:	de b7       	in	r29, 0x3e	; 62
    f06c:	f8 2e       	mov	r15, r24
    f06e:	8b 01       	movw	r16, r22
    f070:	84 2f       	mov	r24, r20
    f072:	10 92 10 25 	sts	0x2510, r1
    f076:	10 92 13 25 	sts	0x2513, r1
    f07a:	10 92 14 25 	sts	0x2514, r1
    f07e:	10 92 15 25 	sts	0x2515, r1
    f082:	10 92 16 25 	sts	0x2516, r1
    f086:	10 92 17 25 	sts	0x2517, r1
    f08a:	10 92 18 25 	sts	0x2518, r1
    f08e:	10 92 19 25 	sts	0x2519, r1
    f092:	10 92 1a 25 	sts	0x251A, r1
    f096:	10 92 11 25 	sts	0x2511, r1
    f09a:	10 92 12 25 	sts	0x2512, r1
    f09e:	10 92 1b 25 	sts	0x251B, r1
    f0a2:	10 92 1c 25 	sts	0x251C, r1
    f0a6:	10 92 1d 25 	sts	0x251D, r1
    f0aa:	10 92 1e 25 	sts	0x251E, r1
    f0ae:	f8 94       	cli
    f0b0:	0e 94 4a 81 	call	0x10294	; 0x10294 <arb_sysTimerInit>
    f0b4:	c8 01       	movw	r24, r16
    f0b6:	6f ef       	ldi	r22, 0xFF	; 255
    f0b8:	0e 94 71 86 	call	0x10ce2	; 0x10ce2 <arb_idleInit>
    f0bc:	89 83       	std	Y+1, r24	; 0x01
    f0be:	9a 83       	std	Y+2, r25	; 0x02
    f0c0:	89 81       	ldd	r24, Y+1	; 0x01
    f0c2:	9a 81       	ldd	r25, Y+2	; 0x02
    f0c4:	97 ff       	sbrs	r25, 7
    f0c6:	08 c0       	rjmp	.+16     	; 0xf0d8 <arb_schedulerInit+0x7e>
    f0c8:	84 e0       	ldi	r24, 0x04	; 4
    f0ca:	6d e5       	ldi	r22, 0x5D	; 93
    f0cc:	72 e2       	ldi	r23, 0x22	; 34
    f0ce:	0e 94 2d 72 	call	0xe45a	; 0xe45a <arb_printf>
    f0d2:	89 81       	ldd	r24, Y+1	; 0x01
    f0d4:	9a 81       	ldd	r25, Y+2	; 0x02
    f0d6:	1c c0       	rjmp	.+56     	; 0xf110 <arb_schedulerInit+0xb6>
    f0d8:	e0 91 ab 22 	lds	r30, 0x22AB
    f0dc:	f0 91 ac 22 	lds	r31, 0x22AC
    f0e0:	89 81       	ldd	r24, Y+1	; 0x01
    f0e2:	9a 81       	ldd	r25, Y+2	; 0x02
    f0e4:	86 83       	std	Z+6, r24	; 0x06
    f0e6:	97 83       	std	Z+7, r25	; 0x07
    f0e8:	ff 20       	and	r15, r15
    f0ea:	31 f0       	breq	.+12     	; 0xf0f8 <arb_schedulerInit+0x9e>
    f0ec:	81 e0       	ldi	r24, 0x01	; 1
    f0ee:	f8 16       	cp	r15, r24
    f0f0:	19 f4       	brne	.+6      	; 0xf0f8 <arb_schedulerInit+0x9e>
    f0f2:	8f e5       	ldi	r24, 0x5F	; 95
    f0f4:	95 e7       	ldi	r25, 0x75	; 117
    f0f6:	02 c0       	rjmp	.+4      	; 0xf0fc <arb_schedulerInit+0xa2>
    f0f8:	87 e8       	ldi	r24, 0x87	; 135
    f0fa:	93 e7       	ldi	r25, 0x73	; 115
    f0fc:	80 93 e6 27 	sts	0x27E6, r24
    f100:	90 93 e7 27 	sts	0x27E7, r25
    f104:	84 e0       	ldi	r24, 0x04	; 4
    f106:	68 e7       	ldi	r22, 0x78	; 120
    f108:	72 e2       	ldi	r23, 0x22	; 34
    f10a:	0e 94 2d 72 	call	0xe45a	; 0xe45a <arb_printf>
    f10e:	80 e0       	ldi	r24, 0x00	; 0
    f110:	0f 90       	pop	r0
    f112:	0f 90       	pop	r0
    f114:	cf 91       	pop	r28
    f116:	df 91       	pop	r29
    f118:	1f 91       	pop	r17
    f11a:	0f 91       	pop	r16
    f11c:	ff 90       	pop	r15
    f11e:	08 95       	ret

0000f120 <arb_semaphoreDestroy>:
    f120:	ef 92       	push	r14
    f122:	ff 92       	push	r15
    f124:	0f 93       	push	r16
    f126:	1f 93       	push	r17
    f128:	df 93       	push	r29
    f12a:	cf 93       	push	r28
    f12c:	cd b7       	in	r28, 0x3d	; 61
    f12e:	de b7       	in	r29, 0x3e	; 62
    f130:	27 97       	sbiw	r28, 0x07	; 7
    f132:	cd bf       	out	0x3d, r28	; 61
    f134:	de bf       	out	0x3e, r29	; 62
    f136:	8e 83       	std	Y+6, r24	; 0x06
    f138:	9f 83       	std	Y+7, r25	; 0x07
    f13a:	8f b7       	in	r24, 0x3f	; 63
    f13c:	89 83       	std	Y+1, r24	; 0x01
    f13e:	f8 94       	cli
    f140:	ee 81       	ldd	r30, Y+6	; 0x06
    f142:	ff 81       	ldd	r31, Y+7	; 0x07
    f144:	20 91 9c 22 	lds	r18, 0x229C
    f148:	30 91 9d 22 	lds	r19, 0x229D
    f14c:	84 81       	ldd	r24, Z+4	; 0x04
    f14e:	95 81       	ldd	r25, Z+5	; 0x05
    f150:	82 17       	cp	r24, r18
    f152:	93 07       	cpc	r25, r19
    f154:	21 f0       	breq	.+8      	; 0xf15e <arb_semaphoreDestroy+0x3e>
    f156:	89 81       	ldd	r24, Y+1	; 0x01
    f158:	8f bf       	out	0x3f, r24	; 63
    f15a:	89 ef       	ldi	r24, 0xF9	; 249
    f15c:	4e c0       	rjmp	.+156    	; 0xf1fa <arb_semaphoreDestroy+0xda>
    f15e:	ee 81       	ldd	r30, Y+6	; 0x06
    f160:	ff 81       	ldd	r31, Y+7	; 0x07
    f162:	00 81       	ld	r16, Z
    f164:	11 81       	ldd	r17, Z+1	; 0x01
    f166:	d8 01       	movw	r26, r16
    f168:	13 96       	adiw	r26, 0x03	; 3
    f16a:	ed 91       	ld	r30, X+
    f16c:	fc 91       	ld	r31, X
    f16e:	14 97       	sbiw	r26, 0x04	; 4
    f170:	e2 80       	ldd	r14, Z+2	; 0x02
    f172:	f3 80       	ldd	r15, Z+3	; 0x03
    f174:	13 96       	adiw	r26, 0x03	; 3
    f176:	ed 91       	ld	r30, X+
    f178:	fc 91       	ld	r31, X
    f17a:	14 97       	sbiw	r26, 0x04	; 4
    f17c:	25 c0       	rjmp	.+74     	; 0xf1c8 <arb_semaphoreDestroy+0xa8>
    f17e:	ea 81       	ldd	r30, Y+2	; 0x02
    f180:	fb 81       	ldd	r31, Y+3	; 0x03
    f182:	01 90       	ld	r0, Z+
    f184:	f0 81       	ld	r31, Z
    f186:	e0 2d       	mov	r30, r0
    f188:	11 82       	std	Z+1, r1	; 0x01
    f18a:	ea 81       	ldd	r30, Y+2	; 0x02
    f18c:	fb 81       	ldd	r31, Y+3	; 0x03
    f18e:	82 85       	ldd	r24, Z+10	; 0x0a
    f190:	93 85       	ldd	r25, Z+11	; 0x0b
    f192:	8c 83       	std	Y+4, r24	; 0x04
    f194:	9d 83       	std	Y+5, r25	; 0x05
    f196:	f8 01       	movw	r30, r16
    f198:	83 81       	ldd	r24, Z+3	; 0x03
    f19a:	94 81       	ldd	r25, Z+4	; 0x04
    f19c:	6a 81       	ldd	r22, Y+2	; 0x02
    f19e:	7b 81       	ldd	r23, Y+3	; 0x03
    f1a0:	0e 94 e9 89 	call	0x113d2	; 0x113d2 <utl_removeLink>
    f1a4:	80 91 ab 22 	lds	r24, 0x22AB
    f1a8:	90 91 ac 22 	lds	r25, 0x22AC
    f1ac:	6a 81       	ldd	r22, Y+2	; 0x02
    f1ae:	7b 81       	ldd	r23, Y+3	; 0x03
    f1b0:	41 e0       	ldi	r20, 0x01	; 1
    f1b2:	0e 94 6e 89 	call	0x112dc	; 0x112dc <utl_insertLink>
    f1b6:	8c 81       	ldd	r24, Y+4	; 0x04
    f1b8:	9d 81       	ldd	r25, Y+5	; 0x05
    f1ba:	8a 83       	std	Y+2, r24	; 0x02
    f1bc:	9b 83       	std	Y+3, r25	; 0x03
    f1be:	08 94       	sec
    f1c0:	e1 08       	sbc	r14, r1
    f1c2:	f1 08       	sbc	r15, r1
    f1c4:	ea 81       	ldd	r30, Y+2	; 0x02
    f1c6:	fb 81       	ldd	r31, Y+3	; 0x03
    f1c8:	80 85       	ldd	r24, Z+8	; 0x08
    f1ca:	91 85       	ldd	r25, Z+9	; 0x09
    f1cc:	8a 83       	std	Y+2, r24	; 0x02
    f1ce:	9b 83       	std	Y+3, r25	; 0x03
    f1d0:	e1 14       	cp	r14, r1
    f1d2:	f1 04       	cpc	r15, r1
    f1d4:	a1 f6       	brne	.-88     	; 0xf17e <arb_semaphoreDestroy+0x5e>
    f1d6:	d8 01       	movw	r26, r16
    f1d8:	13 96       	adiw	r26, 0x03	; 3
    f1da:	8d 91       	ld	r24, X+
    f1dc:	9c 91       	ld	r25, X
    f1de:	14 97       	sbiw	r26, 0x04	; 4
    f1e0:	0e 94 19 8b 	call	0x11632	; 0x11632 <utl_destroyContainer>
    f1e4:	80 91 9c 22 	lds	r24, 0x229C
    f1e8:	90 91 9d 22 	lds	r25, 0x229D
    f1ec:	6e 81       	ldd	r22, Y+6	; 0x06
    f1ee:	7f 81       	ldd	r23, Y+7	; 0x07
    f1f0:	0e 94 6a 8a 	call	0x114d4	; 0x114d4 <utl_destroyLink>
    f1f4:	89 81       	ldd	r24, Y+1	; 0x01
    f1f6:	8f bf       	out	0x3f, r24	; 63
    f1f8:	80 e0       	ldi	r24, 0x00	; 0
    f1fa:	27 96       	adiw	r28, 0x07	; 7
    f1fc:	cd bf       	out	0x3d, r28	; 61
    f1fe:	de bf       	out	0x3e, r29	; 62
    f200:	cf 91       	pop	r28
    f202:	df 91       	pop	r29
    f204:	1f 91       	pop	r17
    f206:	0f 91       	pop	r16
    f208:	ff 90       	pop	r15
    f20a:	ef 90       	pop	r14
    f20c:	08 95       	ret

0000f20e <arb_semaphoreCreate>:
    f20e:	ff 92       	push	r15
    f210:	0f 93       	push	r16
    f212:	1f 93       	push	r17
    f214:	df 93       	push	r29
    f216:	cf 93       	push	r28
    f218:	00 d0       	rcall	.+0      	; 0xf21a <arb_semaphoreCreate+0xc>
    f21a:	cd b7       	in	r28, 0x3d	; 61
    f21c:	de b7       	in	r29, 0x3e	; 62
    f21e:	f8 2e       	mov	r15, r24
    f220:	8f b7       	in	r24, 0x3f	; 63
    f222:	89 83       	std	Y+1, r24	; 0x01
    f224:	f8 94       	cli
    f226:	85 e0       	ldi	r24, 0x05	; 5
    f228:	90 e0       	ldi	r25, 0x00	; 0
    f22a:	0e 94 5e 8b 	call	0x116bc	; 0x116bc <utl_createLink>
    f22e:	8a 83       	std	Y+2, r24	; 0x02
    f230:	9b 83       	std	Y+3, r25	; 0x03
    f232:	8a 81       	ldd	r24, Y+2	; 0x02
    f234:	9b 81       	ldd	r25, Y+3	; 0x03
    f236:	97 fd       	sbrc	r25, 7
    f238:	1e c0       	rjmp	.+60     	; 0xf276 <arb_semaphoreCreate+0x68>
    f23a:	80 91 9c 22 	lds	r24, 0x229C
    f23e:	90 91 9d 22 	lds	r25, 0x229D
    f242:	6a 81       	ldd	r22, Y+2	; 0x02
    f244:	7b 81       	ldd	r23, Y+3	; 0x03
    f246:	41 e0       	ldi	r20, 0x01	; 1
    f248:	0e 94 6e 89 	call	0x112dc	; 0x112dc <utl_insertLink>
    f24c:	ea 81       	ldd	r30, Y+2	; 0x02
    f24e:	fb 81       	ldd	r31, Y+3	; 0x03
    f250:	00 81       	ld	r16, Z
    f252:	11 81       	ldd	r17, Z+1	; 0x01
    f254:	0e 94 c8 8b 	call	0x11790	; 0x11790 <utl_createContainer>
    f258:	f8 01       	movw	r30, r16
    f25a:	83 83       	std	Z+3, r24	; 0x03
    f25c:	94 83       	std	Z+4, r25	; 0x04
    f25e:	83 81       	ldd	r24, Z+3	; 0x03
    f260:	94 81       	ldd	r25, Z+4	; 0x04
    f262:	97 ff       	sbrs	r25, 7
    f264:	0d c0       	rjmp	.+26     	; 0xf280 <arb_semaphoreCreate+0x72>
    f266:	80 91 9c 22 	lds	r24, 0x229C
    f26a:	90 91 9d 22 	lds	r25, 0x229D
    f26e:	6a 81       	ldd	r22, Y+2	; 0x02
    f270:	7b 81       	ldd	r23, Y+3	; 0x03
    f272:	0e 94 6a 8a 	call	0x114d4	; 0x114d4 <utl_destroyLink>
    f276:	89 81       	ldd	r24, Y+1	; 0x01
    f278:	8f bf       	out	0x3f, r24	; 63
    f27a:	2f ef       	ldi	r18, 0xFF	; 255
    f27c:	3f ef       	ldi	r19, 0xFF	; 255
    f27e:	12 c0       	rjmp	.+36     	; 0xf2a4 <arb_semaphoreCreate+0x96>
    f280:	f8 01       	movw	r30, r16
    f282:	f0 82       	st	Z, r15
    f284:	f2 e0       	ldi	r31, 0x02	; 2
    f286:	ff 16       	cp	r15, r31
    f288:	31 f4       	brne	.+12     	; 0xf296 <arb_semaphoreCreate+0x88>
    f28a:	81 e0       	ldi	r24, 0x01	; 1
    f28c:	90 e0       	ldi	r25, 0x00	; 0
    f28e:	f8 01       	movw	r30, r16
    f290:	81 83       	std	Z+1, r24	; 0x01
    f292:	92 83       	std	Z+2, r25	; 0x02
    f294:	03 c0       	rjmp	.+6      	; 0xf29c <arb_semaphoreCreate+0x8e>
    f296:	f8 01       	movw	r30, r16
    f298:	11 82       	std	Z+1, r1	; 0x01
    f29a:	12 82       	std	Z+2, r1	; 0x02
    f29c:	89 81       	ldd	r24, Y+1	; 0x01
    f29e:	8f bf       	out	0x3f, r24	; 63
    f2a0:	2a 81       	ldd	r18, Y+2	; 0x02
    f2a2:	3b 81       	ldd	r19, Y+3	; 0x03
    f2a4:	c9 01       	movw	r24, r18
    f2a6:	23 96       	adiw	r28, 0x03	; 3
    f2a8:	cd bf       	out	0x3d, r28	; 61
    f2aa:	de bf       	out	0x3e, r29	; 62
    f2ac:	cf 91       	pop	r28
    f2ae:	df 91       	pop	r29
    f2b0:	1f 91       	pop	r17
    f2b2:	0f 91       	pop	r16
    f2b4:	ff 90       	pop	r15
    f2b6:	08 95       	ret

0000f2b8 <arb_yieldFromSignalActiveInt>:
    f2b8:	0f 92       	push	r0
    f2ba:	0f b6       	in	r0, 0x3f	; 63
    f2bc:	0f 93       	push	r16
    f2be:	00 2d       	mov	r16, r0
    f2c0:	00 68       	ori	r16, 0x80	; 128
    f2c2:	00 2e       	mov	r0, r16
    f2c4:	0f 91       	pop	r16
    f2c6:	0f 92       	push	r0
    f2c8:	1f 92       	push	r1
    f2ca:	11 24       	eor	r1, r1
    f2cc:	2f 92       	push	r2
    f2ce:	3f 92       	push	r3
    f2d0:	4f 92       	push	r4
    f2d2:	5f 92       	push	r5
    f2d4:	6f 92       	push	r6
    f2d6:	7f 92       	push	r7
    f2d8:	8f 92       	push	r8
    f2da:	9f 92       	push	r9
    f2dc:	af 92       	push	r10
    f2de:	bf 92       	push	r11
    f2e0:	cf 92       	push	r12
    f2e2:	df 92       	push	r13
    f2e4:	ef 92       	push	r14
    f2e6:	ff 92       	push	r15
    f2e8:	0f 93       	push	r16
    f2ea:	1f 93       	push	r17
    f2ec:	2f 93       	push	r18
    f2ee:	3f 93       	push	r19
    f2f0:	4f 93       	push	r20
    f2f2:	5f 93       	push	r21
    f2f4:	6f 93       	push	r22
    f2f6:	7f 93       	push	r23
    f2f8:	8f 93       	push	r24
    f2fa:	9f 93       	push	r25
    f2fc:	af 93       	push	r26
    f2fe:	bf 93       	push	r27
    f300:	cf 93       	push	r28
    f302:	df 93       	push	r29
    f304:	ef 93       	push	r30
    f306:	ff 93       	push	r31
    f308:	e0 91 ab 22 	lds	r30, 0x22AB
    f30c:	f0 91 ac 22 	lds	r31, 0x22AC
    f310:	06 80       	ldd	r0, Z+6	; 0x06
    f312:	f7 81       	ldd	r31, Z+7	; 0x07
    f314:	e0 2d       	mov	r30, r0
    f316:	01 90       	ld	r0, Z+
    f318:	f0 81       	ld	r31, Z
    f31a:	e0 2d       	mov	r30, r0
    f31c:	e0 93 e8 27 	sts	0x27E8, r30
    f320:	f0 93 e9 27 	sts	0x27E9, r31
    f324:	2d b7       	in	r18, 0x3d	; 61
    f326:	4e b7       	in	r20, 0x3e	; 62
    f328:	94 2f       	mov	r25, r20
    f32a:	80 e0       	ldi	r24, 0x00	; 0
    f32c:	30 e0       	ldi	r19, 0x00	; 0
    f32e:	82 2b       	or	r24, r18
    f330:	93 2b       	or	r25, r19
    f332:	81 87       	std	Z+9, r24	; 0x09
    f334:	92 87       	std	Z+10, r25	; 0x0a
    f336:	8f ef       	ldi	r24, 0xFF	; 255
    f338:	8d bf       	out	0x3d, r24	; 61
    f33a:	8f e3       	ldi	r24, 0x3F	; 63
    f33c:	8e bf       	out	0x3e, r24	; 62
    f33e:	c0 91 3d 00 	lds	r28, 0x003D
    f342:	d0 91 3e 00 	lds	r29, 0x003E
    f346:	e0 91 ab 22 	lds	r30, 0x22AB
    f34a:	f0 91 ac 22 	lds	r31, 0x22AC
    f34e:	06 80       	ldd	r0, Z+6	; 0x06
    f350:	f7 81       	ldd	r31, Z+7	; 0x07
    f352:	e0 2d       	mov	r30, r0
    f354:	01 90       	ld	r0, Z+
    f356:	f0 81       	ld	r31, Z
    f358:	e0 2d       	mov	r30, r0
    f35a:	e0 93 21 25 	sts	0x2521, r30
    f35e:	f0 93 22 25 	sts	0x2522, r31
    f362:	03 84       	ldd	r0, Z+11	; 0x0b
    f364:	f4 85       	ldd	r31, Z+12	; 0x0c
    f366:	e0 2d       	mov	r30, r0
    f368:	80 81       	ld	r24, Z
    f36a:	91 81       	ldd	r25, Z+1	; 0x01
    f36c:	8d 5a       	subi	r24, 0xAD	; 173
    f36e:	9e 4d       	sbci	r25, 0xDE	; 222
    f370:	11 f0       	breq	.+4      	; 0xf376 <arb_yieldFromSignalActiveInt+0xbe>
    f372:	0e 94 38 86 	call	0x10c70	; 0x10c70 <arb_stackOverflow>
    f376:	e0 91 e6 27 	lds	r30, 0x27E6
    f37a:	f0 91 e7 27 	lds	r31, 0x27E7
    f37e:	19 95       	eicall
    f380:	e0 91 ab 22 	lds	r30, 0x22AB
    f384:	f0 91 ac 22 	lds	r31, 0x22AC
    f388:	06 80       	ldd	r0, Z+6	; 0x06
    f38a:	f7 81       	ldd	r31, Z+7	; 0x07
    f38c:	e0 2d       	mov	r30, r0
    f38e:	01 90       	ld	r0, Z+
    f390:	f0 81       	ld	r31, Z
    f392:	e0 2d       	mov	r30, r0
    f394:	e0 93 e8 27 	sts	0x27E8, r30
    f398:	f0 93 e9 27 	sts	0x27E9, r31
    f39c:	81 85       	ldd	r24, Z+9	; 0x09
    f39e:	92 85       	ldd	r25, Z+10	; 0x0a
    f3a0:	8d bf       	out	0x3d, r24	; 61
    f3a2:	9e bf       	out	0x3e, r25	; 62
    f3a4:	ff 91       	pop	r31
    f3a6:	ef 91       	pop	r30
    f3a8:	df 91       	pop	r29
    f3aa:	cf 91       	pop	r28
    f3ac:	bf 91       	pop	r27
    f3ae:	af 91       	pop	r26
    f3b0:	9f 91       	pop	r25
    f3b2:	8f 91       	pop	r24
    f3b4:	7f 91       	pop	r23
    f3b6:	6f 91       	pop	r22
    f3b8:	5f 91       	pop	r21
    f3ba:	4f 91       	pop	r20
    f3bc:	3f 91       	pop	r19
    f3be:	2f 91       	pop	r18
    f3c0:	1f 91       	pop	r17
    f3c2:	0f 91       	pop	r16
    f3c4:	ff 90       	pop	r15
    f3c6:	ef 90       	pop	r14
    f3c8:	df 90       	pop	r13
    f3ca:	cf 90       	pop	r12
    f3cc:	bf 90       	pop	r11
    f3ce:	af 90       	pop	r10
    f3d0:	9f 90       	pop	r9
    f3d2:	8f 90       	pop	r8
    f3d4:	7f 90       	pop	r7
    f3d6:	6f 90       	pop	r6
    f3d8:	5f 90       	pop	r5
    f3da:	4f 90       	pop	r4
    f3dc:	3f 90       	pop	r3
    f3de:	2f 90       	pop	r2
    f3e0:	1f 90       	pop	r1
    f3e2:	0f 90       	pop	r0
    f3e4:	0f be       	out	0x3f, r0	; 63
    f3e6:	0f 90       	pop	r0
    f3e8:	18 95       	reti

0000f3ea <arb_yieldFromSignalIntsOn>:
    f3ea:	0f 92       	push	r0
    f3ec:	0f b6       	in	r0, 0x3f	; 63
    f3ee:	0f 93       	push	r16
    f3f0:	00 2d       	mov	r16, r0
    f3f2:	00 68       	ori	r16, 0x80	; 128
    f3f4:	00 2e       	mov	r0, r16
    f3f6:	0f 91       	pop	r16
    f3f8:	0f 92       	push	r0
    f3fa:	1f 92       	push	r1
    f3fc:	11 24       	eor	r1, r1
    f3fe:	2f 92       	push	r2
    f400:	3f 92       	push	r3
    f402:	4f 92       	push	r4
    f404:	5f 92       	push	r5
    f406:	6f 92       	push	r6
    f408:	7f 92       	push	r7
    f40a:	8f 92       	push	r8
    f40c:	9f 92       	push	r9
    f40e:	af 92       	push	r10
    f410:	bf 92       	push	r11
    f412:	cf 92       	push	r12
    f414:	df 92       	push	r13
    f416:	ef 92       	push	r14
    f418:	ff 92       	push	r15
    f41a:	0f 93       	push	r16
    f41c:	1f 93       	push	r17
    f41e:	2f 93       	push	r18
    f420:	3f 93       	push	r19
    f422:	4f 93       	push	r20
    f424:	5f 93       	push	r21
    f426:	6f 93       	push	r22
    f428:	7f 93       	push	r23
    f42a:	8f 93       	push	r24
    f42c:	9f 93       	push	r25
    f42e:	af 93       	push	r26
    f430:	bf 93       	push	r27
    f432:	cf 93       	push	r28
    f434:	df 93       	push	r29
    f436:	ef 93       	push	r30
    f438:	ff 93       	push	r31
    f43a:	e0 91 ab 22 	lds	r30, 0x22AB
    f43e:	f0 91 ac 22 	lds	r31, 0x22AC
    f442:	06 80       	ldd	r0, Z+6	; 0x06
    f444:	f7 81       	ldd	r31, Z+7	; 0x07
    f446:	e0 2d       	mov	r30, r0
    f448:	01 90       	ld	r0, Z+
    f44a:	f0 81       	ld	r31, Z
    f44c:	e0 2d       	mov	r30, r0
    f44e:	e0 93 e8 27 	sts	0x27E8, r30
    f452:	f0 93 e9 27 	sts	0x27E9, r31
    f456:	2d b7       	in	r18, 0x3d	; 61
    f458:	4e b7       	in	r20, 0x3e	; 62
    f45a:	94 2f       	mov	r25, r20
    f45c:	80 e0       	ldi	r24, 0x00	; 0
    f45e:	30 e0       	ldi	r19, 0x00	; 0
    f460:	82 2b       	or	r24, r18
    f462:	93 2b       	or	r25, r19
    f464:	81 87       	std	Z+9, r24	; 0x09
    f466:	92 87       	std	Z+10, r25	; 0x0a
    f468:	8f ef       	ldi	r24, 0xFF	; 255
    f46a:	8d bf       	out	0x3d, r24	; 61
    f46c:	8f e3       	ldi	r24, 0x3F	; 63
    f46e:	8e bf       	out	0x3e, r24	; 62
    f470:	c0 91 3d 00 	lds	r28, 0x003D
    f474:	d0 91 3e 00 	lds	r29, 0x003E
    f478:	e0 91 ab 22 	lds	r30, 0x22AB
    f47c:	f0 91 ac 22 	lds	r31, 0x22AC
    f480:	06 80       	ldd	r0, Z+6	; 0x06
    f482:	f7 81       	ldd	r31, Z+7	; 0x07
    f484:	e0 2d       	mov	r30, r0
    f486:	01 90       	ld	r0, Z+
    f488:	f0 81       	ld	r31, Z
    f48a:	e0 2d       	mov	r30, r0
    f48c:	e0 93 21 25 	sts	0x2521, r30
    f490:	f0 93 22 25 	sts	0x2522, r31
    f494:	03 84       	ldd	r0, Z+11	; 0x0b
    f496:	f4 85       	ldd	r31, Z+12	; 0x0c
    f498:	e0 2d       	mov	r30, r0
    f49a:	80 81       	ld	r24, Z
    f49c:	91 81       	ldd	r25, Z+1	; 0x01
    f49e:	8d 5a       	subi	r24, 0xAD	; 173
    f4a0:	9e 4d       	sbci	r25, 0xDE	; 222
    f4a2:	11 f0       	breq	.+4      	; 0xf4a8 <arb_yieldFromSignalIntsOn+0xbe>
    f4a4:	0e 94 38 86 	call	0x10c70	; 0x10c70 <arb_stackOverflow>
    f4a8:	e0 91 e6 27 	lds	r30, 0x27E6
    f4ac:	f0 91 e7 27 	lds	r31, 0x27E7
    f4b0:	19 95       	eicall
    f4b2:	e0 91 ab 22 	lds	r30, 0x22AB
    f4b6:	f0 91 ac 22 	lds	r31, 0x22AC
    f4ba:	06 80       	ldd	r0, Z+6	; 0x06
    f4bc:	f7 81       	ldd	r31, Z+7	; 0x07
    f4be:	e0 2d       	mov	r30, r0
    f4c0:	01 90       	ld	r0, Z+
    f4c2:	f0 81       	ld	r31, Z
    f4c4:	e0 2d       	mov	r30, r0
    f4c6:	e0 93 e8 27 	sts	0x27E8, r30
    f4ca:	f0 93 e9 27 	sts	0x27E9, r31
    f4ce:	81 85       	ldd	r24, Z+9	; 0x09
    f4d0:	92 85       	ldd	r25, Z+10	; 0x0a
    f4d2:	8d bf       	out	0x3d, r24	; 61
    f4d4:	9e bf       	out	0x3e, r25	; 62
    f4d6:	ff 91       	pop	r31
    f4d8:	ef 91       	pop	r30
    f4da:	df 91       	pop	r29
    f4dc:	cf 91       	pop	r28
    f4de:	bf 91       	pop	r27
    f4e0:	af 91       	pop	r26
    f4e2:	9f 91       	pop	r25
    f4e4:	8f 91       	pop	r24
    f4e6:	7f 91       	pop	r23
    f4e8:	6f 91       	pop	r22
    f4ea:	5f 91       	pop	r21
    f4ec:	4f 91       	pop	r20
    f4ee:	3f 91       	pop	r19
    f4f0:	2f 91       	pop	r18
    f4f2:	1f 91       	pop	r17
    f4f4:	0f 91       	pop	r16
    f4f6:	ff 90       	pop	r15
    f4f8:	ef 90       	pop	r14
    f4fa:	df 90       	pop	r13
    f4fc:	cf 90       	pop	r12
    f4fe:	bf 90       	pop	r11
    f500:	af 90       	pop	r10
    f502:	9f 90       	pop	r9
    f504:	8f 90       	pop	r8
    f506:	7f 90       	pop	r7
    f508:	6f 90       	pop	r6
    f50a:	5f 90       	pop	r5
    f50c:	4f 90       	pop	r4
    f50e:	3f 90       	pop	r3
    f510:	2f 90       	pop	r2
    f512:	1f 90       	pop	r1
    f514:	0f 90       	pop	r0
    f516:	0f be       	out	0x3f, r0	; 63
    f518:	0f 90       	pop	r0
    f51a:	08 95       	ret

0000f51c <arb_yieldFromSignalIntsOff>:
    f51c:	0f 92       	push	r0
    f51e:	0f b6       	in	r0, 0x3f	; 63
    f520:	0f 92       	push	r0
    f522:	1f 92       	push	r1
    f524:	11 24       	eor	r1, r1
    f526:	2f 92       	push	r2
    f528:	3f 92       	push	r3
    f52a:	4f 92       	push	r4
    f52c:	5f 92       	push	r5
    f52e:	6f 92       	push	r6
    f530:	7f 92       	push	r7
    f532:	8f 92       	push	r8
    f534:	9f 92       	push	r9
    f536:	af 92       	push	r10
    f538:	bf 92       	push	r11
    f53a:	cf 92       	push	r12
    f53c:	df 92       	push	r13
    f53e:	ef 92       	push	r14
    f540:	ff 92       	push	r15
    f542:	0f 93       	push	r16
    f544:	1f 93       	push	r17
    f546:	2f 93       	push	r18
    f548:	3f 93       	push	r19
    f54a:	4f 93       	push	r20
    f54c:	5f 93       	push	r21
    f54e:	6f 93       	push	r22
    f550:	7f 93       	push	r23
    f552:	8f 93       	push	r24
    f554:	9f 93       	push	r25
    f556:	af 93       	push	r26
    f558:	bf 93       	push	r27
    f55a:	cf 93       	push	r28
    f55c:	df 93       	push	r29
    f55e:	ef 93       	push	r30
    f560:	ff 93       	push	r31
    f562:	e0 91 ab 22 	lds	r30, 0x22AB
    f566:	f0 91 ac 22 	lds	r31, 0x22AC
    f56a:	06 80       	ldd	r0, Z+6	; 0x06
    f56c:	f7 81       	ldd	r31, Z+7	; 0x07
    f56e:	e0 2d       	mov	r30, r0
    f570:	01 90       	ld	r0, Z+
    f572:	f0 81       	ld	r31, Z
    f574:	e0 2d       	mov	r30, r0
    f576:	e0 93 e8 27 	sts	0x27E8, r30
    f57a:	f0 93 e9 27 	sts	0x27E9, r31
    f57e:	2d b7       	in	r18, 0x3d	; 61
    f580:	4e b7       	in	r20, 0x3e	; 62
    f582:	94 2f       	mov	r25, r20
    f584:	80 e0       	ldi	r24, 0x00	; 0
    f586:	30 e0       	ldi	r19, 0x00	; 0
    f588:	82 2b       	or	r24, r18
    f58a:	93 2b       	or	r25, r19
    f58c:	81 87       	std	Z+9, r24	; 0x09
    f58e:	92 87       	std	Z+10, r25	; 0x0a
    f590:	8f ef       	ldi	r24, 0xFF	; 255
    f592:	8d bf       	out	0x3d, r24	; 61
    f594:	8f e3       	ldi	r24, 0x3F	; 63
    f596:	8e bf       	out	0x3e, r24	; 62
    f598:	c0 91 3d 00 	lds	r28, 0x003D
    f59c:	d0 91 3e 00 	lds	r29, 0x003E
    f5a0:	e0 91 ab 22 	lds	r30, 0x22AB
    f5a4:	f0 91 ac 22 	lds	r31, 0x22AC
    f5a8:	06 80       	ldd	r0, Z+6	; 0x06
    f5aa:	f7 81       	ldd	r31, Z+7	; 0x07
    f5ac:	e0 2d       	mov	r30, r0
    f5ae:	01 90       	ld	r0, Z+
    f5b0:	f0 81       	ld	r31, Z
    f5b2:	e0 2d       	mov	r30, r0
    f5b4:	e0 93 21 25 	sts	0x2521, r30
    f5b8:	f0 93 22 25 	sts	0x2522, r31
    f5bc:	03 84       	ldd	r0, Z+11	; 0x0b
    f5be:	f4 85       	ldd	r31, Z+12	; 0x0c
    f5c0:	e0 2d       	mov	r30, r0
    f5c2:	80 81       	ld	r24, Z
    f5c4:	91 81       	ldd	r25, Z+1	; 0x01
    f5c6:	8d 5a       	subi	r24, 0xAD	; 173
    f5c8:	9e 4d       	sbci	r25, 0xDE	; 222
    f5ca:	11 f0       	breq	.+4      	; 0xf5d0 <arb_yieldFromSignalIntsOff+0xb4>
    f5cc:	0e 94 38 86 	call	0x10c70	; 0x10c70 <arb_stackOverflow>
    f5d0:	e0 91 e6 27 	lds	r30, 0x27E6
    f5d4:	f0 91 e7 27 	lds	r31, 0x27E7
    f5d8:	19 95       	eicall
    f5da:	e0 91 ab 22 	lds	r30, 0x22AB
    f5de:	f0 91 ac 22 	lds	r31, 0x22AC
    f5e2:	06 80       	ldd	r0, Z+6	; 0x06
    f5e4:	f7 81       	ldd	r31, Z+7	; 0x07
    f5e6:	e0 2d       	mov	r30, r0
    f5e8:	01 90       	ld	r0, Z+
    f5ea:	f0 81       	ld	r31, Z
    f5ec:	e0 2d       	mov	r30, r0
    f5ee:	e0 93 e8 27 	sts	0x27E8, r30
    f5f2:	f0 93 e9 27 	sts	0x27E9, r31
    f5f6:	81 85       	ldd	r24, Z+9	; 0x09
    f5f8:	92 85       	ldd	r25, Z+10	; 0x0a
    f5fa:	8d bf       	out	0x3d, r24	; 61
    f5fc:	9e bf       	out	0x3e, r25	; 62
    f5fe:	ff 91       	pop	r31
    f600:	ef 91       	pop	r30
    f602:	df 91       	pop	r29
    f604:	cf 91       	pop	r28
    f606:	bf 91       	pop	r27
    f608:	af 91       	pop	r26
    f60a:	9f 91       	pop	r25
    f60c:	8f 91       	pop	r24
    f60e:	7f 91       	pop	r23
    f610:	6f 91       	pop	r22
    f612:	5f 91       	pop	r21
    f614:	4f 91       	pop	r20
    f616:	3f 91       	pop	r19
    f618:	2f 91       	pop	r18
    f61a:	1f 91       	pop	r17
    f61c:	0f 91       	pop	r16
    f61e:	ff 90       	pop	r15
    f620:	ef 90       	pop	r14
    f622:	df 90       	pop	r13
    f624:	cf 90       	pop	r12
    f626:	bf 90       	pop	r11
    f628:	af 90       	pop	r10
    f62a:	9f 90       	pop	r9
    f62c:	8f 90       	pop	r8
    f62e:	7f 90       	pop	r7
    f630:	6f 90       	pop	r6
    f632:	5f 90       	pop	r5
    f634:	4f 90       	pop	r4
    f636:	3f 90       	pop	r3
    f638:	2f 90       	pop	r2
    f63a:	1f 90       	pop	r1
    f63c:	0f 90       	pop	r0
    f63e:	0f be       	out	0x3f, r0	; 63
    f640:	0f 90       	pop	r0
    f642:	08 95       	ret

0000f644 <arb_signal>:
    f644:	0f 93       	push	r16
    f646:	1f 93       	push	r17
    f648:	df 93       	push	r29
    f64a:	cf 93       	push	r28
    f64c:	cd b7       	in	r28, 0x3d	; 61
    f64e:	de b7       	in	r29, 0x3e	; 62
    f650:	28 97       	sbiw	r28, 0x08	; 8
    f652:	cd bf       	out	0x3d, r28	; 61
    f654:	de bf       	out	0x3e, r29	; 62
    f656:	8f 83       	std	Y+7, r24	; 0x07
    f658:	98 87       	std	Y+8, r25	; 0x08
    f65a:	0f b6       	in	r0, 0x3f	; 63
    f65c:	07 fe       	sbrs	r0, 7
    f65e:	e3 c0       	rjmp	.+454    	; 0xf826 <arb_signal+0x1e2>
    f660:	f8 94       	cli
    f662:	ef 81       	ldd	r30, Y+7	; 0x07
    f664:	f8 85       	ldd	r31, Y+8	; 0x08
    f666:	20 91 9c 22 	lds	r18, 0x229C
    f66a:	30 91 9d 22 	lds	r19, 0x229D
    f66e:	84 81       	ldd	r24, Z+4	; 0x04
    f670:	95 81       	ldd	r25, Z+5	; 0x05
    f672:	82 17       	cp	r24, r18
    f674:	93 07       	cpc	r25, r19
    f676:	11 f0       	breq	.+4      	; 0xf67c <arb_signal+0x38>
    f678:	78 94       	sei
    f67a:	e0 c0       	rjmp	.+448    	; 0xf83c <arb_signal+0x1f8>
    f67c:	ef 81       	ldd	r30, Y+7	; 0x07
    f67e:	f8 85       	ldd	r31, Y+8	; 0x08
    f680:	a0 81       	ld	r26, Z
    f682:	b1 81       	ldd	r27, Z+1	; 0x01
    f684:	a0 93 1f 25 	sts	0x251F, r26
    f688:	b0 93 20 25 	sts	0x2520, r27
    f68c:	11 96       	adiw	r26, 0x01	; 1
    f68e:	8d 91       	ld	r24, X+
    f690:	9c 91       	ld	r25, X
    f692:	12 97       	sbiw	r26, 0x02	; 2
    f694:	01 96       	adiw	r24, 0x01	; 1
    f696:	11 96       	adiw	r26, 0x01	; 1
    f698:	8d 93       	st	X+, r24
    f69a:	9c 93       	st	X, r25
    f69c:	12 97       	sbiw	r26, 0x02	; 2
    f69e:	18 16       	cp	r1, r24
    f6a0:	19 06       	cpc	r1, r25
    f6a2:	0c f4       	brge	.+2      	; 0xf6a6 <arb_signal+0x62>
    f6a4:	be c0       	rjmp	.+380    	; 0xf822 <arb_signal+0x1de>
    f6a6:	13 96       	adiw	r26, 0x03	; 3
    f6a8:	ed 91       	ld	r30, X+
    f6aa:	fc 91       	ld	r31, X
    f6ac:	14 97       	sbiw	r26, 0x04	; 4
    f6ae:	82 81       	ldd	r24, Z+2	; 0x02
    f6b0:	93 81       	ldd	r25, Z+3	; 0x03
    f6b2:	89 2b       	or	r24, r25
    f6b4:	09 f4       	brne	.+2      	; 0xf6b8 <arb_signal+0x74>
    f6b6:	b5 c0       	rjmp	.+362    	; 0xf822 <arb_signal+0x1de>
    f6b8:	13 96       	adiw	r26, 0x03	; 3
    f6ba:	ed 91       	ld	r30, X+
    f6bc:	fc 91       	ld	r31, X
    f6be:	14 97       	sbiw	r26, 0x04	; 4
    f6c0:	80 85       	ldd	r24, Z+8	; 0x08
    f6c2:	91 85       	ldd	r25, Z+9	; 0x09
    f6c4:	8b 83       	std	Y+3, r24	; 0x03
    f6c6:	9c 83       	std	Y+4, r25	; 0x04
    f6c8:	eb 81       	ldd	r30, Y+3	; 0x03
    f6ca:	fc 81       	ldd	r31, Y+4	; 0x04
    f6cc:	01 90       	ld	r0, Z+
    f6ce:	f0 81       	ld	r31, Z
    f6d0:	e0 2d       	mov	r30, r0
    f6d2:	82 81       	ldd	r24, Z+2	; 0x02
    f6d4:	48 2f       	mov	r20, r24
    f6d6:	50 e0       	ldi	r21, 0x00	; 0
    f6d8:	13 96       	adiw	r26, 0x03	; 3
    f6da:	ed 91       	ld	r30, X+
    f6dc:	fc 91       	ld	r31, X
    f6de:	14 97       	sbiw	r26, 0x04	; 4
    f6e0:	62 81       	ldd	r22, Z+2	; 0x02
    f6e2:	73 81       	ldd	r23, Z+3	; 0x03
    f6e4:	13 96       	adiw	r26, 0x03	; 3
    f6e6:	ed 91       	ld	r30, X+
    f6e8:	fc 91       	ld	r31, X
    f6ea:	14 97       	sbiw	r26, 0x04	; 4
    f6ec:	80 85       	ldd	r24, Z+8	; 0x08
    f6ee:	91 85       	ldd	r25, Z+9	; 0x09
    f6f0:	89 83       	std	Y+1, r24	; 0x01
    f6f2:	9a 83       	std	Y+2, r25	; 0x02
    f6f4:	1a c0       	rjmp	.+52     	; 0xf72a <arb_signal+0xe6>
    f6f6:	e9 81       	ldd	r30, Y+1	; 0x01
    f6f8:	fa 81       	ldd	r31, Y+2	; 0x02
    f6fa:	01 90       	ld	r0, Z+
    f6fc:	f0 81       	ld	r31, Z
    f6fe:	e0 2d       	mov	r30, r0
    f700:	82 81       	ldd	r24, Z+2	; 0x02
    f702:	28 2f       	mov	r18, r24
    f704:	30 e0       	ldi	r19, 0x00	; 0
    f706:	24 17       	cp	r18, r20
    f708:	35 07       	cpc	r19, r21
    f70a:	10 f0       	brcs	.+4      	; 0xf710 <arb_signal+0xcc>
    f70c:	9a 01       	movw	r18, r20
    f70e:	04 c0       	rjmp	.+8      	; 0xf718 <arb_signal+0xd4>
    f710:	89 81       	ldd	r24, Y+1	; 0x01
    f712:	9a 81       	ldd	r25, Y+2	; 0x02
    f714:	8b 83       	std	Y+3, r24	; 0x03
    f716:	9c 83       	std	Y+4, r25	; 0x04
    f718:	61 50       	subi	r22, 0x01	; 1
    f71a:	70 40       	sbci	r23, 0x00	; 0
    f71c:	e9 81       	ldd	r30, Y+1	; 0x01
    f71e:	fa 81       	ldd	r31, Y+2	; 0x02
    f720:	80 85       	ldd	r24, Z+8	; 0x08
    f722:	91 85       	ldd	r25, Z+9	; 0x09
    f724:	89 83       	std	Y+1, r24	; 0x01
    f726:	9a 83       	std	Y+2, r25	; 0x02
    f728:	a9 01       	movw	r20, r18
    f72a:	61 15       	cp	r22, r1
    f72c:	71 05       	cpc	r23, r1
    f72e:	19 f7       	brne	.-58     	; 0xf6f6 <arb_signal+0xb2>
    f730:	8c 91       	ld	r24, X
    f732:	81 30       	cpi	r24, 0x01	; 1
    f734:	c1 f0       	breq	.+48     	; 0xf766 <arb_signal+0x122>
    f736:	eb 81       	ldd	r30, Y+3	; 0x03
    f738:	fc 81       	ldd	r31, Y+4	; 0x04
    f73a:	01 90       	ld	r0, Z+
    f73c:	f0 81       	ld	r31, Z
    f73e:	e0 2d       	mov	r30, r0
    f740:	11 82       	std	Z+1, r1	; 0x01
    f742:	13 96       	adiw	r26, 0x03	; 3
    f744:	8d 91       	ld	r24, X+
    f746:	9c 91       	ld	r25, X
    f748:	14 97       	sbiw	r26, 0x04	; 4
    f74a:	6b 81       	ldd	r22, Y+3	; 0x03
    f74c:	7c 81       	ldd	r23, Y+4	; 0x04
    f74e:	0e 94 e9 89 	call	0x113d2	; 0x113d2 <utl_removeLink>
    f752:	80 91 ab 22 	lds	r24, 0x22AB
    f756:	90 91 ac 22 	lds	r25, 0x22AC
    f75a:	6b 81       	ldd	r22, Y+3	; 0x03
    f75c:	7c 81       	ldd	r23, Y+4	; 0x04
    f75e:	41 e0       	ldi	r20, 0x01	; 1
    f760:	0e 94 6e 89 	call	0x112dc	; 0x112dc <utl_insertLink>
    f764:	3f c0       	rjmp	.+126    	; 0xf7e4 <arb_signal+0x1a0>
    f766:	13 96       	adiw	r26, 0x03	; 3
    f768:	ed 91       	ld	r30, X+
    f76a:	fc 91       	ld	r31, X
    f76c:	14 97       	sbiw	r26, 0x04	; 4
    f76e:	02 81       	ldd	r16, Z+2	; 0x02
    f770:	13 81       	ldd	r17, Z+3	; 0x03
    f772:	13 96       	adiw	r26, 0x03	; 3
    f774:	ed 91       	ld	r30, X+
    f776:	fc 91       	ld	r31, X
    f778:	14 97       	sbiw	r26, 0x04	; 4
    f77a:	25 c0       	rjmp	.+74     	; 0xf7c6 <arb_signal+0x182>
    f77c:	e9 81       	ldd	r30, Y+1	; 0x01
    f77e:	fa 81       	ldd	r31, Y+2	; 0x02
    f780:	01 90       	ld	r0, Z+
    f782:	f0 81       	ld	r31, Z
    f784:	e0 2d       	mov	r30, r0
    f786:	11 82       	std	Z+1, r1	; 0x01
    f788:	e9 81       	ldd	r30, Y+1	; 0x01
    f78a:	fa 81       	ldd	r31, Y+2	; 0x02
    f78c:	82 85       	ldd	r24, Z+10	; 0x0a
    f78e:	93 85       	ldd	r25, Z+11	; 0x0b
    f790:	8d 83       	std	Y+5, r24	; 0x05
    f792:	9e 83       	std	Y+6, r25	; 0x06
    f794:	13 96       	adiw	r26, 0x03	; 3
    f796:	8d 91       	ld	r24, X+
    f798:	9c 91       	ld	r25, X
    f79a:	14 97       	sbiw	r26, 0x04	; 4
    f79c:	69 81       	ldd	r22, Y+1	; 0x01
    f79e:	7a 81       	ldd	r23, Y+2	; 0x02
    f7a0:	0e 94 e9 89 	call	0x113d2	; 0x113d2 <utl_removeLink>
    f7a4:	80 91 ab 22 	lds	r24, 0x22AB
    f7a8:	90 91 ac 22 	lds	r25, 0x22AC
    f7ac:	69 81       	ldd	r22, Y+1	; 0x01
    f7ae:	7a 81       	ldd	r23, Y+2	; 0x02
    f7b0:	41 e0       	ldi	r20, 0x01	; 1
    f7b2:	0e 94 6e 89 	call	0x112dc	; 0x112dc <utl_insertLink>
    f7b6:	8d 81       	ldd	r24, Y+5	; 0x05
    f7b8:	9e 81       	ldd	r25, Y+6	; 0x06
    f7ba:	89 83       	std	Y+1, r24	; 0x01
    f7bc:	9a 83       	std	Y+2, r25	; 0x02
    f7be:	01 50       	subi	r16, 0x01	; 1
    f7c0:	10 40       	sbci	r17, 0x00	; 0
    f7c2:	e9 81       	ldd	r30, Y+1	; 0x01
    f7c4:	fa 81       	ldd	r31, Y+2	; 0x02
    f7c6:	80 85       	ldd	r24, Z+8	; 0x08
    f7c8:	91 85       	ldd	r25, Z+9	; 0x09
    f7ca:	89 83       	std	Y+1, r24	; 0x01
    f7cc:	9a 83       	std	Y+2, r25	; 0x02
    f7ce:	a0 91 1f 25 	lds	r26, 0x251F
    f7d2:	b0 91 20 25 	lds	r27, 0x2520
    f7d6:	01 15       	cp	r16, r1
    f7d8:	11 05       	cpc	r17, r1
    f7da:	81 f6       	brne	.-96     	; 0xf77c <arb_signal+0x138>
    f7dc:	11 96       	adiw	r26, 0x01	; 1
    f7de:	1d 92       	st	X+, r1
    f7e0:	1c 92       	st	X, r1
    f7e2:	12 97       	sbiw	r26, 0x02	; 2
    f7e4:	ab 81       	ldd	r26, Y+3	; 0x03
    f7e6:	bc 81       	ldd	r27, Y+4	; 0x04
    f7e8:	e0 91 ab 22 	lds	r30, 0x22AB
    f7ec:	f0 91 ac 22 	lds	r31, 0x22AC
    f7f0:	06 80       	ldd	r0, Z+6	; 0x06
    f7f2:	f7 81       	ldd	r31, Z+7	; 0x07
    f7f4:	e0 2d       	mov	r30, r0
    f7f6:	20 81       	ld	r18, Z
    f7f8:	31 81       	ldd	r19, Z+1	; 0x01
    f7fa:	ed 91       	ld	r30, X+
    f7fc:	fc 91       	ld	r31, X
    f7fe:	92 81       	ldd	r25, Z+2	; 0x02
    f800:	f9 01       	movw	r30, r18
    f802:	82 81       	ldd	r24, Z+2	; 0x02
    f804:	89 17       	cp	r24, r25
    f806:	58 f0       	brcs	.+22     	; 0xf81e <arb_signal+0x1da>
    f808:	11 82       	std	Z+1, r1	; 0x01
    f80a:	80 91 a0 00 	lds	r24, 0x00A0
    f80e:	88 23       	and	r24, r24
    f810:	19 f0       	breq	.+6      	; 0xf818 <arb_signal+0x1d4>
    f812:	0e 94 5c 79 	call	0xf2b8	; 0xf2b8 <arb_yieldFromSignalActiveInt>
    f816:	dd c0       	rjmp	.+442    	; 0xf9d2 <arb_signal+0x38e>
    f818:	0e 94 f5 79 	call	0xf3ea	; 0xf3ea <arb_yieldFromSignalIntsOn>
    f81c:	da c0       	rjmp	.+436    	; 0xf9d2 <arb_signal+0x38e>
    f81e:	78 94       	sei
    f820:	d8 c0       	rjmp	.+432    	; 0xf9d2 <arb_signal+0x38e>
    f822:	78 94       	sei
    f824:	d6 c0       	rjmp	.+428    	; 0xf9d2 <arb_signal+0x38e>
    f826:	ef 81       	ldd	r30, Y+7	; 0x07
    f828:	f8 85       	ldd	r31, Y+8	; 0x08
    f82a:	20 91 9c 22 	lds	r18, 0x229C
    f82e:	30 91 9d 22 	lds	r19, 0x229D
    f832:	84 81       	ldd	r24, Z+4	; 0x04
    f834:	95 81       	ldd	r25, Z+5	; 0x05
    f836:	82 17       	cp	r24, r18
    f838:	93 07       	cpc	r25, r19
    f83a:	11 f0       	breq	.+4      	; 0xf840 <arb_signal+0x1fc>
    f83c:	89 ef       	ldi	r24, 0xF9	; 249
    f83e:	ca c0       	rjmp	.+404    	; 0xf9d4 <arb_signal+0x390>
    f840:	ef 81       	ldd	r30, Y+7	; 0x07
    f842:	f8 85       	ldd	r31, Y+8	; 0x08
    f844:	a0 81       	ld	r26, Z
    f846:	b1 81       	ldd	r27, Z+1	; 0x01
    f848:	a0 93 1f 25 	sts	0x251F, r26
    f84c:	b0 93 20 25 	sts	0x2520, r27
    f850:	11 96       	adiw	r26, 0x01	; 1
    f852:	8d 91       	ld	r24, X+
    f854:	9c 91       	ld	r25, X
    f856:	12 97       	sbiw	r26, 0x02	; 2
    f858:	01 96       	adiw	r24, 0x01	; 1
    f85a:	11 96       	adiw	r26, 0x01	; 1
    f85c:	8d 93       	st	X+, r24
    f85e:	9c 93       	st	X, r25
    f860:	12 97       	sbiw	r26, 0x02	; 2
    f862:	18 16       	cp	r1, r24
    f864:	19 06       	cpc	r1, r25
    f866:	0c f4       	brge	.+2      	; 0xf86a <arb_signal+0x226>
    f868:	b4 c0       	rjmp	.+360    	; 0xf9d2 <arb_signal+0x38e>
    f86a:	13 96       	adiw	r26, 0x03	; 3
    f86c:	ed 91       	ld	r30, X+
    f86e:	fc 91       	ld	r31, X
    f870:	14 97       	sbiw	r26, 0x04	; 4
    f872:	82 81       	ldd	r24, Z+2	; 0x02
    f874:	93 81       	ldd	r25, Z+3	; 0x03
    f876:	89 2b       	or	r24, r25
    f878:	09 f4       	brne	.+2      	; 0xf87c <arb_signal+0x238>
    f87a:	ab c0       	rjmp	.+342    	; 0xf9d2 <arb_signal+0x38e>
    f87c:	13 96       	adiw	r26, 0x03	; 3
    f87e:	ed 91       	ld	r30, X+
    f880:	fc 91       	ld	r31, X
    f882:	14 97       	sbiw	r26, 0x04	; 4
    f884:	80 85       	ldd	r24, Z+8	; 0x08
    f886:	91 85       	ldd	r25, Z+9	; 0x09
    f888:	8b 83       	std	Y+3, r24	; 0x03
    f88a:	9c 83       	std	Y+4, r25	; 0x04
    f88c:	eb 81       	ldd	r30, Y+3	; 0x03
    f88e:	fc 81       	ldd	r31, Y+4	; 0x04
    f890:	01 90       	ld	r0, Z+
    f892:	f0 81       	ld	r31, Z
    f894:	e0 2d       	mov	r30, r0
    f896:	82 81       	ldd	r24, Z+2	; 0x02
    f898:	48 2f       	mov	r20, r24
    f89a:	50 e0       	ldi	r21, 0x00	; 0
    f89c:	13 96       	adiw	r26, 0x03	; 3
    f89e:	ed 91       	ld	r30, X+
    f8a0:	fc 91       	ld	r31, X
    f8a2:	14 97       	sbiw	r26, 0x04	; 4
    f8a4:	62 81       	ldd	r22, Z+2	; 0x02
    f8a6:	73 81       	ldd	r23, Z+3	; 0x03
    f8a8:	13 96       	adiw	r26, 0x03	; 3
    f8aa:	ed 91       	ld	r30, X+
    f8ac:	fc 91       	ld	r31, X
    f8ae:	14 97       	sbiw	r26, 0x04	; 4
    f8b0:	80 85       	ldd	r24, Z+8	; 0x08
    f8b2:	91 85       	ldd	r25, Z+9	; 0x09
    f8b4:	89 83       	std	Y+1, r24	; 0x01
    f8b6:	9a 83       	std	Y+2, r25	; 0x02
    f8b8:	1a c0       	rjmp	.+52     	; 0xf8ee <arb_signal+0x2aa>
    f8ba:	e9 81       	ldd	r30, Y+1	; 0x01
    f8bc:	fa 81       	ldd	r31, Y+2	; 0x02
    f8be:	01 90       	ld	r0, Z+
    f8c0:	f0 81       	ld	r31, Z
    f8c2:	e0 2d       	mov	r30, r0
    f8c4:	82 81       	ldd	r24, Z+2	; 0x02
    f8c6:	28 2f       	mov	r18, r24
    f8c8:	30 e0       	ldi	r19, 0x00	; 0
    f8ca:	24 17       	cp	r18, r20
    f8cc:	35 07       	cpc	r19, r21
    f8ce:	10 f0       	brcs	.+4      	; 0xf8d4 <arb_signal+0x290>
    f8d0:	9a 01       	movw	r18, r20
    f8d2:	04 c0       	rjmp	.+8      	; 0xf8dc <arb_signal+0x298>
    f8d4:	89 81       	ldd	r24, Y+1	; 0x01
    f8d6:	9a 81       	ldd	r25, Y+2	; 0x02
    f8d8:	8b 83       	std	Y+3, r24	; 0x03
    f8da:	9c 83       	std	Y+4, r25	; 0x04
    f8dc:	61 50       	subi	r22, 0x01	; 1
    f8de:	70 40       	sbci	r23, 0x00	; 0
    f8e0:	e9 81       	ldd	r30, Y+1	; 0x01
    f8e2:	fa 81       	ldd	r31, Y+2	; 0x02
    f8e4:	80 85       	ldd	r24, Z+8	; 0x08
    f8e6:	91 85       	ldd	r25, Z+9	; 0x09
    f8e8:	89 83       	std	Y+1, r24	; 0x01
    f8ea:	9a 83       	std	Y+2, r25	; 0x02
    f8ec:	a9 01       	movw	r20, r18
    f8ee:	61 15       	cp	r22, r1
    f8f0:	71 05       	cpc	r23, r1
    f8f2:	19 f7       	brne	.-58     	; 0xf8ba <arb_signal+0x276>
    f8f4:	8c 91       	ld	r24, X
    f8f6:	81 30       	cpi	r24, 0x01	; 1
    f8f8:	c1 f0       	breq	.+48     	; 0xf92a <arb_signal+0x2e6>
    f8fa:	eb 81       	ldd	r30, Y+3	; 0x03
    f8fc:	fc 81       	ldd	r31, Y+4	; 0x04
    f8fe:	01 90       	ld	r0, Z+
    f900:	f0 81       	ld	r31, Z
    f902:	e0 2d       	mov	r30, r0
    f904:	11 82       	std	Z+1, r1	; 0x01
    f906:	13 96       	adiw	r26, 0x03	; 3
    f908:	8d 91       	ld	r24, X+
    f90a:	9c 91       	ld	r25, X
    f90c:	14 97       	sbiw	r26, 0x04	; 4
    f90e:	6b 81       	ldd	r22, Y+3	; 0x03
    f910:	7c 81       	ldd	r23, Y+4	; 0x04
    f912:	0e 94 e9 89 	call	0x113d2	; 0x113d2 <utl_removeLink>
    f916:	80 91 ab 22 	lds	r24, 0x22AB
    f91a:	90 91 ac 22 	lds	r25, 0x22AC
    f91e:	6b 81       	ldd	r22, Y+3	; 0x03
    f920:	7c 81       	ldd	r23, Y+4	; 0x04
    f922:	41 e0       	ldi	r20, 0x01	; 1
    f924:	0e 94 6e 89 	call	0x112dc	; 0x112dc <utl_insertLink>
    f928:	3f c0       	rjmp	.+126    	; 0xf9a8 <arb_signal+0x364>
    f92a:	13 96       	adiw	r26, 0x03	; 3
    f92c:	ed 91       	ld	r30, X+
    f92e:	fc 91       	ld	r31, X
    f930:	14 97       	sbiw	r26, 0x04	; 4
    f932:	02 81       	ldd	r16, Z+2	; 0x02
    f934:	13 81       	ldd	r17, Z+3	; 0x03
    f936:	13 96       	adiw	r26, 0x03	; 3
    f938:	ed 91       	ld	r30, X+
    f93a:	fc 91       	ld	r31, X
    f93c:	14 97       	sbiw	r26, 0x04	; 4
    f93e:	25 c0       	rjmp	.+74     	; 0xf98a <arb_signal+0x346>
    f940:	e9 81       	ldd	r30, Y+1	; 0x01
    f942:	fa 81       	ldd	r31, Y+2	; 0x02
    f944:	01 90       	ld	r0, Z+
    f946:	f0 81       	ld	r31, Z
    f948:	e0 2d       	mov	r30, r0
    f94a:	11 82       	std	Z+1, r1	; 0x01
    f94c:	e9 81       	ldd	r30, Y+1	; 0x01
    f94e:	fa 81       	ldd	r31, Y+2	; 0x02
    f950:	82 85       	ldd	r24, Z+10	; 0x0a
    f952:	93 85       	ldd	r25, Z+11	; 0x0b
    f954:	8d 83       	std	Y+5, r24	; 0x05
    f956:	9e 83       	std	Y+6, r25	; 0x06
    f958:	13 96       	adiw	r26, 0x03	; 3
    f95a:	8d 91       	ld	r24, X+
    f95c:	9c 91       	ld	r25, X
    f95e:	14 97       	sbiw	r26, 0x04	; 4
    f960:	69 81       	ldd	r22, Y+1	; 0x01
    f962:	7a 81       	ldd	r23, Y+2	; 0x02
    f964:	0e 94 e9 89 	call	0x113d2	; 0x113d2 <utl_removeLink>
    f968:	80 91 ab 22 	lds	r24, 0x22AB
    f96c:	90 91 ac 22 	lds	r25, 0x22AC
    f970:	69 81       	ldd	r22, Y+1	; 0x01
    f972:	7a 81       	ldd	r23, Y+2	; 0x02
    f974:	41 e0       	ldi	r20, 0x01	; 1
    f976:	0e 94 6e 89 	call	0x112dc	; 0x112dc <utl_insertLink>
    f97a:	8d 81       	ldd	r24, Y+5	; 0x05
    f97c:	9e 81       	ldd	r25, Y+6	; 0x06
    f97e:	89 83       	std	Y+1, r24	; 0x01
    f980:	9a 83       	std	Y+2, r25	; 0x02
    f982:	01 50       	subi	r16, 0x01	; 1
    f984:	10 40       	sbci	r17, 0x00	; 0
    f986:	e9 81       	ldd	r30, Y+1	; 0x01
    f988:	fa 81       	ldd	r31, Y+2	; 0x02
    f98a:	80 85       	ldd	r24, Z+8	; 0x08
    f98c:	91 85       	ldd	r25, Z+9	; 0x09
    f98e:	89 83       	std	Y+1, r24	; 0x01
    f990:	9a 83       	std	Y+2, r25	; 0x02
    f992:	a0 91 1f 25 	lds	r26, 0x251F
    f996:	b0 91 20 25 	lds	r27, 0x2520
    f99a:	01 15       	cp	r16, r1
    f99c:	11 05       	cpc	r17, r1
    f99e:	81 f6       	brne	.-96     	; 0xf940 <arb_signal+0x2fc>
    f9a0:	11 96       	adiw	r26, 0x01	; 1
    f9a2:	1d 92       	st	X+, r1
    f9a4:	1c 92       	st	X, r1
    f9a6:	12 97       	sbiw	r26, 0x02	; 2
    f9a8:	ab 81       	ldd	r26, Y+3	; 0x03
    f9aa:	bc 81       	ldd	r27, Y+4	; 0x04
    f9ac:	e0 91 ab 22 	lds	r30, 0x22AB
    f9b0:	f0 91 ac 22 	lds	r31, 0x22AC
    f9b4:	06 80       	ldd	r0, Z+6	; 0x06
    f9b6:	f7 81       	ldd	r31, Z+7	; 0x07
    f9b8:	e0 2d       	mov	r30, r0
    f9ba:	20 81       	ld	r18, Z
    f9bc:	31 81       	ldd	r19, Z+1	; 0x01
    f9be:	ed 91       	ld	r30, X+
    f9c0:	fc 91       	ld	r31, X
    f9c2:	92 81       	ldd	r25, Z+2	; 0x02
    f9c4:	f9 01       	movw	r30, r18
    f9c6:	82 81       	ldd	r24, Z+2	; 0x02
    f9c8:	89 17       	cp	r24, r25
    f9ca:	18 f0       	brcs	.+6      	; 0xf9d2 <arb_signal+0x38e>
    f9cc:	11 82       	std	Z+1, r1	; 0x01
    f9ce:	0e 94 8e 7a 	call	0xf51c	; 0xf51c <arb_yieldFromSignalIntsOff>
    f9d2:	80 e0       	ldi	r24, 0x00	; 0
    f9d4:	28 96       	adiw	r28, 0x08	; 8
    f9d6:	cd bf       	out	0x3d, r28	; 61
    f9d8:	de bf       	out	0x3e, r29	; 62
    f9da:	cf 91       	pop	r28
    f9dc:	df 91       	pop	r29
    f9de:	1f 91       	pop	r17
    f9e0:	0f 91       	pop	r16
    f9e2:	08 95       	ret

0000f9e4 <arb_yieldFromWaitIntsOn>:
    f9e4:	0f 92       	push	r0
    f9e6:	0f b6       	in	r0, 0x3f	; 63
    f9e8:	0f 93       	push	r16
    f9ea:	00 2d       	mov	r16, r0
    f9ec:	00 68       	ori	r16, 0x80	; 128
    f9ee:	00 2e       	mov	r0, r16
    f9f0:	0f 91       	pop	r16
    f9f2:	0f 92       	push	r0
    f9f4:	1f 92       	push	r1
    f9f6:	11 24       	eor	r1, r1
    f9f8:	2f 92       	push	r2
    f9fa:	3f 92       	push	r3
    f9fc:	4f 92       	push	r4
    f9fe:	5f 92       	push	r5
    fa00:	6f 92       	push	r6
    fa02:	7f 92       	push	r7
    fa04:	8f 92       	push	r8
    fa06:	9f 92       	push	r9
    fa08:	af 92       	push	r10
    fa0a:	bf 92       	push	r11
    fa0c:	cf 92       	push	r12
    fa0e:	df 92       	push	r13
    fa10:	ef 92       	push	r14
    fa12:	ff 92       	push	r15
    fa14:	0f 93       	push	r16
    fa16:	1f 93       	push	r17
    fa18:	2f 93       	push	r18
    fa1a:	3f 93       	push	r19
    fa1c:	4f 93       	push	r20
    fa1e:	5f 93       	push	r21
    fa20:	6f 93       	push	r22
    fa22:	7f 93       	push	r23
    fa24:	8f 93       	push	r24
    fa26:	9f 93       	push	r25
    fa28:	af 93       	push	r26
    fa2a:	bf 93       	push	r27
    fa2c:	cf 93       	push	r28
    fa2e:	df 93       	push	r29
    fa30:	ef 93       	push	r30
    fa32:	ff 93       	push	r31
    fa34:	e0 91 ab 22 	lds	r30, 0x22AB
    fa38:	f0 91 ac 22 	lds	r31, 0x22AC
    fa3c:	06 80       	ldd	r0, Z+6	; 0x06
    fa3e:	f7 81       	ldd	r31, Z+7	; 0x07
    fa40:	e0 2d       	mov	r30, r0
    fa42:	01 90       	ld	r0, Z+
    fa44:	f0 81       	ld	r31, Z
    fa46:	e0 2d       	mov	r30, r0
    fa48:	e0 93 e8 27 	sts	0x27E8, r30
    fa4c:	f0 93 e9 27 	sts	0x27E9, r31
    fa50:	2d b7       	in	r18, 0x3d	; 61
    fa52:	4e b7       	in	r20, 0x3e	; 62
    fa54:	94 2f       	mov	r25, r20
    fa56:	80 e0       	ldi	r24, 0x00	; 0
    fa58:	30 e0       	ldi	r19, 0x00	; 0
    fa5a:	82 2b       	or	r24, r18
    fa5c:	93 2b       	or	r25, r19
    fa5e:	81 87       	std	Z+9, r24	; 0x09
    fa60:	92 87       	std	Z+10, r25	; 0x0a
    fa62:	8f ef       	ldi	r24, 0xFF	; 255
    fa64:	8d bf       	out	0x3d, r24	; 61
    fa66:	8f e3       	ldi	r24, 0x3F	; 63
    fa68:	8e bf       	out	0x3e, r24	; 62
    fa6a:	c0 91 3d 00 	lds	r28, 0x003D
    fa6e:	d0 91 3e 00 	lds	r29, 0x003E
    fa72:	e0 91 ab 22 	lds	r30, 0x22AB
    fa76:	f0 91 ac 22 	lds	r31, 0x22AC
    fa7a:	06 80       	ldd	r0, Z+6	; 0x06
    fa7c:	f7 81       	ldd	r31, Z+7	; 0x07
    fa7e:	e0 2d       	mov	r30, r0
    fa80:	01 90       	ld	r0, Z+
    fa82:	f0 81       	ld	r31, Z
    fa84:	e0 2d       	mov	r30, r0
    fa86:	e0 93 21 25 	sts	0x2521, r30
    fa8a:	f0 93 22 25 	sts	0x2522, r31
    fa8e:	03 84       	ldd	r0, Z+11	; 0x0b
    fa90:	f4 85       	ldd	r31, Z+12	; 0x0c
    fa92:	e0 2d       	mov	r30, r0
    fa94:	80 81       	ld	r24, Z
    fa96:	91 81       	ldd	r25, Z+1	; 0x01
    fa98:	8d 5a       	subi	r24, 0xAD	; 173
    fa9a:	9e 4d       	sbci	r25, 0xDE	; 222
    fa9c:	11 f0       	breq	.+4      	; 0xfaa2 <arb_yieldFromWaitIntsOn+0xbe>
    fa9e:	0e 94 38 86 	call	0x10c70	; 0x10c70 <arb_stackOverflow>
    faa2:	e0 91 21 25 	lds	r30, 0x2521
    faa6:	f0 91 22 25 	lds	r31, 0x2522
    faaa:	82 e0       	ldi	r24, 0x02	; 2
    faac:	81 83       	std	Z+1, r24	; 0x01
    faae:	80 91 ab 22 	lds	r24, 0x22AB
    fab2:	90 91 ac 22 	lds	r25, 0x22AC
    fab6:	e0 91 ab 22 	lds	r30, 0x22AB
    faba:	f0 91 ac 22 	lds	r31, 0x22AC
    fabe:	66 81       	ldd	r22, Z+6	; 0x06
    fac0:	77 81       	ldd	r23, Z+7	; 0x07
    fac2:	0e 94 e9 89 	call	0x113d2	; 0x113d2 <utl_removeLink>
    fac6:	80 93 23 25 	sts	0x2523, r24
    faca:	e0 91 1f 25 	lds	r30, 0x251F
    face:	f0 91 20 25 	lds	r31, 0x2520
    fad2:	83 81       	ldd	r24, Z+3	; 0x03
    fad4:	94 81       	ldd	r25, Z+4	; 0x04
    fad6:	e0 91 ab 22 	lds	r30, 0x22AB
    fada:	f0 91 ac 22 	lds	r31, 0x22AC
    fade:	66 81       	ldd	r22, Z+6	; 0x06
    fae0:	77 81       	ldd	r23, Z+7	; 0x07
    fae2:	41 e0       	ldi	r20, 0x01	; 1
    fae4:	0e 94 6e 89 	call	0x112dc	; 0x112dc <utl_insertLink>
    fae8:	80 93 23 25 	sts	0x2523, r24
    faec:	e0 91 e6 27 	lds	r30, 0x27E6
    faf0:	f0 91 e7 27 	lds	r31, 0x27E7
    faf4:	19 95       	eicall
    faf6:	e0 91 ab 22 	lds	r30, 0x22AB
    fafa:	f0 91 ac 22 	lds	r31, 0x22AC
    fafe:	06 80       	ldd	r0, Z+6	; 0x06
    fb00:	f7 81       	ldd	r31, Z+7	; 0x07
    fb02:	e0 2d       	mov	r30, r0
    fb04:	01 90       	ld	r0, Z+
    fb06:	f0 81       	ld	r31, Z
    fb08:	e0 2d       	mov	r30, r0
    fb0a:	e0 93 e8 27 	sts	0x27E8, r30
    fb0e:	f0 93 e9 27 	sts	0x27E9, r31
    fb12:	81 85       	ldd	r24, Z+9	; 0x09
    fb14:	92 85       	ldd	r25, Z+10	; 0x0a
    fb16:	8d bf       	out	0x3d, r24	; 61
    fb18:	9e bf       	out	0x3e, r25	; 62
    fb1a:	ff 91       	pop	r31
    fb1c:	ef 91       	pop	r30
    fb1e:	df 91       	pop	r29
    fb20:	cf 91       	pop	r28
    fb22:	bf 91       	pop	r27
    fb24:	af 91       	pop	r26
    fb26:	9f 91       	pop	r25
    fb28:	8f 91       	pop	r24
    fb2a:	7f 91       	pop	r23
    fb2c:	6f 91       	pop	r22
    fb2e:	5f 91       	pop	r21
    fb30:	4f 91       	pop	r20
    fb32:	3f 91       	pop	r19
    fb34:	2f 91       	pop	r18
    fb36:	1f 91       	pop	r17
    fb38:	0f 91       	pop	r16
    fb3a:	ff 90       	pop	r15
    fb3c:	ef 90       	pop	r14
    fb3e:	df 90       	pop	r13
    fb40:	cf 90       	pop	r12
    fb42:	bf 90       	pop	r11
    fb44:	af 90       	pop	r10
    fb46:	9f 90       	pop	r9
    fb48:	8f 90       	pop	r8
    fb4a:	7f 90       	pop	r7
    fb4c:	6f 90       	pop	r6
    fb4e:	5f 90       	pop	r5
    fb50:	4f 90       	pop	r4
    fb52:	3f 90       	pop	r3
    fb54:	2f 90       	pop	r2
    fb56:	1f 90       	pop	r1
    fb58:	0f 90       	pop	r0
    fb5a:	0f be       	out	0x3f, r0	; 63
    fb5c:	0f 90       	pop	r0
    fb5e:	08 95       	ret

0000fb60 <arb_yieldFromWaitIntsOff>:
    fb60:	0f 92       	push	r0
    fb62:	0f b6       	in	r0, 0x3f	; 63
    fb64:	0f 92       	push	r0
    fb66:	1f 92       	push	r1
    fb68:	11 24       	eor	r1, r1
    fb6a:	2f 92       	push	r2
    fb6c:	3f 92       	push	r3
    fb6e:	4f 92       	push	r4
    fb70:	5f 92       	push	r5
    fb72:	6f 92       	push	r6
    fb74:	7f 92       	push	r7
    fb76:	8f 92       	push	r8
    fb78:	9f 92       	push	r9
    fb7a:	af 92       	push	r10
    fb7c:	bf 92       	push	r11
    fb7e:	cf 92       	push	r12
    fb80:	df 92       	push	r13
    fb82:	ef 92       	push	r14
    fb84:	ff 92       	push	r15
    fb86:	0f 93       	push	r16
    fb88:	1f 93       	push	r17
    fb8a:	2f 93       	push	r18
    fb8c:	3f 93       	push	r19
    fb8e:	4f 93       	push	r20
    fb90:	5f 93       	push	r21
    fb92:	6f 93       	push	r22
    fb94:	7f 93       	push	r23
    fb96:	8f 93       	push	r24
    fb98:	9f 93       	push	r25
    fb9a:	af 93       	push	r26
    fb9c:	bf 93       	push	r27
    fb9e:	cf 93       	push	r28
    fba0:	df 93       	push	r29
    fba2:	ef 93       	push	r30
    fba4:	ff 93       	push	r31
    fba6:	e0 91 ab 22 	lds	r30, 0x22AB
    fbaa:	f0 91 ac 22 	lds	r31, 0x22AC
    fbae:	06 80       	ldd	r0, Z+6	; 0x06
    fbb0:	f7 81       	ldd	r31, Z+7	; 0x07
    fbb2:	e0 2d       	mov	r30, r0
    fbb4:	01 90       	ld	r0, Z+
    fbb6:	f0 81       	ld	r31, Z
    fbb8:	e0 2d       	mov	r30, r0
    fbba:	e0 93 e8 27 	sts	0x27E8, r30
    fbbe:	f0 93 e9 27 	sts	0x27E9, r31
    fbc2:	2d b7       	in	r18, 0x3d	; 61
    fbc4:	4e b7       	in	r20, 0x3e	; 62
    fbc6:	94 2f       	mov	r25, r20
    fbc8:	80 e0       	ldi	r24, 0x00	; 0
    fbca:	30 e0       	ldi	r19, 0x00	; 0
    fbcc:	82 2b       	or	r24, r18
    fbce:	93 2b       	or	r25, r19
    fbd0:	81 87       	std	Z+9, r24	; 0x09
    fbd2:	92 87       	std	Z+10, r25	; 0x0a
    fbd4:	8f ef       	ldi	r24, 0xFF	; 255
    fbd6:	8d bf       	out	0x3d, r24	; 61
    fbd8:	8f e3       	ldi	r24, 0x3F	; 63
    fbda:	8e bf       	out	0x3e, r24	; 62
    fbdc:	c0 91 3d 00 	lds	r28, 0x003D
    fbe0:	d0 91 3e 00 	lds	r29, 0x003E
    fbe4:	e0 91 ab 22 	lds	r30, 0x22AB
    fbe8:	f0 91 ac 22 	lds	r31, 0x22AC
    fbec:	06 80       	ldd	r0, Z+6	; 0x06
    fbee:	f7 81       	ldd	r31, Z+7	; 0x07
    fbf0:	e0 2d       	mov	r30, r0
    fbf2:	01 90       	ld	r0, Z+
    fbf4:	f0 81       	ld	r31, Z
    fbf6:	e0 2d       	mov	r30, r0
    fbf8:	e0 93 21 25 	sts	0x2521, r30
    fbfc:	f0 93 22 25 	sts	0x2522, r31
    fc00:	03 84       	ldd	r0, Z+11	; 0x0b
    fc02:	f4 85       	ldd	r31, Z+12	; 0x0c
    fc04:	e0 2d       	mov	r30, r0
    fc06:	80 81       	ld	r24, Z
    fc08:	91 81       	ldd	r25, Z+1	; 0x01
    fc0a:	8d 5a       	subi	r24, 0xAD	; 173
    fc0c:	9e 4d       	sbci	r25, 0xDE	; 222
    fc0e:	11 f0       	breq	.+4      	; 0xfc14 <arb_yieldFromWaitIntsOff+0xb4>
    fc10:	0e 94 38 86 	call	0x10c70	; 0x10c70 <arb_stackOverflow>
    fc14:	e0 91 21 25 	lds	r30, 0x2521
    fc18:	f0 91 22 25 	lds	r31, 0x2522
    fc1c:	82 e0       	ldi	r24, 0x02	; 2
    fc1e:	81 83       	std	Z+1, r24	; 0x01
    fc20:	80 91 ab 22 	lds	r24, 0x22AB
    fc24:	90 91 ac 22 	lds	r25, 0x22AC
    fc28:	e0 91 ab 22 	lds	r30, 0x22AB
    fc2c:	f0 91 ac 22 	lds	r31, 0x22AC
    fc30:	66 81       	ldd	r22, Z+6	; 0x06
    fc32:	77 81       	ldd	r23, Z+7	; 0x07
    fc34:	0e 94 e9 89 	call	0x113d2	; 0x113d2 <utl_removeLink>
    fc38:	80 93 23 25 	sts	0x2523, r24
    fc3c:	e0 91 1f 25 	lds	r30, 0x251F
    fc40:	f0 91 20 25 	lds	r31, 0x2520
    fc44:	83 81       	ldd	r24, Z+3	; 0x03
    fc46:	94 81       	ldd	r25, Z+4	; 0x04
    fc48:	e0 91 ab 22 	lds	r30, 0x22AB
    fc4c:	f0 91 ac 22 	lds	r31, 0x22AC
    fc50:	66 81       	ldd	r22, Z+6	; 0x06
    fc52:	77 81       	ldd	r23, Z+7	; 0x07
    fc54:	41 e0       	ldi	r20, 0x01	; 1
    fc56:	0e 94 6e 89 	call	0x112dc	; 0x112dc <utl_insertLink>
    fc5a:	80 93 23 25 	sts	0x2523, r24
    fc5e:	e0 91 e6 27 	lds	r30, 0x27E6
    fc62:	f0 91 e7 27 	lds	r31, 0x27E7
    fc66:	19 95       	eicall
    fc68:	e0 91 ab 22 	lds	r30, 0x22AB
    fc6c:	f0 91 ac 22 	lds	r31, 0x22AC
    fc70:	06 80       	ldd	r0, Z+6	; 0x06
    fc72:	f7 81       	ldd	r31, Z+7	; 0x07
    fc74:	e0 2d       	mov	r30, r0
    fc76:	01 90       	ld	r0, Z+
    fc78:	f0 81       	ld	r31, Z
    fc7a:	e0 2d       	mov	r30, r0
    fc7c:	e0 93 e8 27 	sts	0x27E8, r30
    fc80:	f0 93 e9 27 	sts	0x27E9, r31
    fc84:	81 85       	ldd	r24, Z+9	; 0x09
    fc86:	92 85       	ldd	r25, Z+10	; 0x0a
    fc88:	8d bf       	out	0x3d, r24	; 61
    fc8a:	9e bf       	out	0x3e, r25	; 62
    fc8c:	ff 91       	pop	r31
    fc8e:	ef 91       	pop	r30
    fc90:	df 91       	pop	r29
    fc92:	cf 91       	pop	r28
    fc94:	bf 91       	pop	r27
    fc96:	af 91       	pop	r26
    fc98:	9f 91       	pop	r25
    fc9a:	8f 91       	pop	r24
    fc9c:	7f 91       	pop	r23
    fc9e:	6f 91       	pop	r22
    fca0:	5f 91       	pop	r21
    fca2:	4f 91       	pop	r20
    fca4:	3f 91       	pop	r19
    fca6:	2f 91       	pop	r18
    fca8:	1f 91       	pop	r17
    fcaa:	0f 91       	pop	r16
    fcac:	ff 90       	pop	r15
    fcae:	ef 90       	pop	r14
    fcb0:	df 90       	pop	r13
    fcb2:	cf 90       	pop	r12
    fcb4:	bf 90       	pop	r11
    fcb6:	af 90       	pop	r10
    fcb8:	9f 90       	pop	r9
    fcba:	8f 90       	pop	r8
    fcbc:	7f 90       	pop	r7
    fcbe:	6f 90       	pop	r6
    fcc0:	5f 90       	pop	r5
    fcc2:	4f 90       	pop	r4
    fcc4:	3f 90       	pop	r3
    fcc6:	2f 90       	pop	r2
    fcc8:	1f 90       	pop	r1
    fcca:	0f 90       	pop	r0
    fccc:	0f be       	out	0x3f, r0	; 63
    fcce:	0f 90       	pop	r0
    fcd0:	08 95       	ret

0000fcd2 <arb_wait>:
    fcd2:	df 93       	push	r29
    fcd4:	cf 93       	push	r28
    fcd6:	0f 92       	push	r0
    fcd8:	0f 92       	push	r0
    fcda:	cd b7       	in	r28, 0x3d	; 61
    fcdc:	de b7       	in	r29, 0x3e	; 62
    fcde:	89 83       	std	Y+1, r24	; 0x01
    fce0:	9a 83       	std	Y+2, r25	; 0x02
    fce2:	0f b6       	in	r0, 0x3f	; 63
    fce4:	07 fe       	sbrs	r0, 7
    fce6:	33 c0       	rjmp	.+102    	; 0xfd4e <arb_wait+0x7c>
    fce8:	f8 94       	cli
    fcea:	e9 81       	ldd	r30, Y+1	; 0x01
    fcec:	fa 81       	ldd	r31, Y+2	; 0x02
    fcee:	20 91 9c 22 	lds	r18, 0x229C
    fcf2:	30 91 9d 22 	lds	r19, 0x229D
    fcf6:	84 81       	ldd	r24, Z+4	; 0x04
    fcf8:	95 81       	ldd	r25, Z+5	; 0x05
    fcfa:	82 17       	cp	r24, r18
    fcfc:	93 07       	cpc	r25, r19
    fcfe:	11 f0       	breq	.+4      	; 0xfd04 <arb_wait+0x32>
    fd00:	78 94       	sei
    fd02:	30 c0       	rjmp	.+96     	; 0xfd64 <arb_wait+0x92>
    fd04:	e9 81       	ldd	r30, Y+1	; 0x01
    fd06:	fa 81       	ldd	r31, Y+2	; 0x02
    fd08:	01 90       	ld	r0, Z+
    fd0a:	f0 81       	ld	r31, Z
    fd0c:	e0 2d       	mov	r30, r0
    fd0e:	e0 93 1f 25 	sts	0x251F, r30
    fd12:	f0 93 20 25 	sts	0x2520, r31
    fd16:	81 81       	ldd	r24, Z+1	; 0x01
    fd18:	92 81       	ldd	r25, Z+2	; 0x02
    fd1a:	66 23       	and	r22, r22
    fd1c:	71 f4       	brne	.+28     	; 0xfd3a <arb_wait+0x68>
    fd1e:	01 97       	sbiw	r24, 0x01	; 1
    fd20:	81 83       	std	Z+1, r24	; 0x01
    fd22:	92 83       	std	Z+2, r25	; 0x02
    fd24:	97 ff       	sbrs	r25, 7
    fd26:	07 c0       	rjmp	.+14     	; 0xfd36 <arb_wait+0x64>
    fd28:	80 91 ab 22 	lds	r24, 0x22AB
    fd2c:	90 91 ac 22 	lds	r25, 0x22AC
    fd30:	0e 94 f2 7c 	call	0xf9e4	; 0xf9e4 <arb_yieldFromWaitIntsOn>
    fd34:	3a c0       	rjmp	.+116    	; 0xfdaa <arb_wait+0xd8>
    fd36:	78 94       	sei
    fd38:	38 c0       	rjmp	.+112    	; 0xfdaa <arb_wait+0xd8>
    fd3a:	18 16       	cp	r1, r24
    fd3c:	19 06       	cpc	r1, r25
    fd3e:	2c f4       	brge	.+10     	; 0xfd4a <arb_wait+0x78>
    fd40:	01 97       	sbiw	r24, 0x01	; 1
    fd42:	81 83       	std	Z+1, r24	; 0x01
    fd44:	92 83       	std	Z+2, r25	; 0x02
    fd46:	78 94       	sei
    fd48:	30 c0       	rjmp	.+96     	; 0xfdaa <arb_wait+0xd8>
    fd4a:	78 94       	sei
    fd4c:	29 c0       	rjmp	.+82     	; 0xfda0 <arb_wait+0xce>
    fd4e:	e9 81       	ldd	r30, Y+1	; 0x01
    fd50:	fa 81       	ldd	r31, Y+2	; 0x02
    fd52:	20 91 9c 22 	lds	r18, 0x229C
    fd56:	30 91 9d 22 	lds	r19, 0x229D
    fd5a:	84 81       	ldd	r24, Z+4	; 0x04
    fd5c:	95 81       	ldd	r25, Z+5	; 0x05
    fd5e:	82 17       	cp	r24, r18
    fd60:	93 07       	cpc	r25, r19
    fd62:	11 f0       	breq	.+4      	; 0xfd68 <arb_wait+0x96>
    fd64:	89 ef       	ldi	r24, 0xF9	; 249
    fd66:	22 c0       	rjmp	.+68     	; 0xfdac <arb_wait+0xda>
    fd68:	e9 81       	ldd	r30, Y+1	; 0x01
    fd6a:	fa 81       	ldd	r31, Y+2	; 0x02
    fd6c:	01 90       	ld	r0, Z+
    fd6e:	f0 81       	ld	r31, Z
    fd70:	e0 2d       	mov	r30, r0
    fd72:	e0 93 1f 25 	sts	0x251F, r30
    fd76:	f0 93 20 25 	sts	0x2520, r31
    fd7a:	81 81       	ldd	r24, Z+1	; 0x01
    fd7c:	92 81       	ldd	r25, Z+2	; 0x02
    fd7e:	66 23       	and	r22, r22
    fd80:	61 f4       	brne	.+24     	; 0xfd9a <arb_wait+0xc8>
    fd82:	01 97       	sbiw	r24, 0x01	; 1
    fd84:	81 83       	std	Z+1, r24	; 0x01
    fd86:	92 83       	std	Z+2, r25	; 0x02
    fd88:	97 ff       	sbrs	r25, 7
    fd8a:	0f c0       	rjmp	.+30     	; 0xfdaa <arb_wait+0xd8>
    fd8c:	80 91 ab 22 	lds	r24, 0x22AB
    fd90:	90 91 ac 22 	lds	r25, 0x22AC
    fd94:	0e 94 b0 7d 	call	0xfb60	; 0xfb60 <arb_yieldFromWaitIntsOff>
    fd98:	08 c0       	rjmp	.+16     	; 0xfdaa <arb_wait+0xd8>
    fd9a:	18 16       	cp	r1, r24
    fd9c:	19 06       	cpc	r1, r25
    fd9e:	14 f0       	brlt	.+4      	; 0xfda4 <arb_wait+0xd2>
    fda0:	83 ef       	ldi	r24, 0xF3	; 243
    fda2:	04 c0       	rjmp	.+8      	; 0xfdac <arb_wait+0xda>
    fda4:	01 97       	sbiw	r24, 0x01	; 1
    fda6:	81 83       	std	Z+1, r24	; 0x01
    fda8:	92 83       	std	Z+2, r25	; 0x02
    fdaa:	80 e0       	ldi	r24, 0x00	; 0
    fdac:	0f 90       	pop	r0
    fdae:	0f 90       	pop	r0
    fdb0:	cf 91       	pop	r28
    fdb2:	df 91       	pop	r29
    fdb4:	08 95       	ret

0000fdb6 <updateSystemTime>:
    fdb6:	cf 92       	push	r12
    fdb8:	df 92       	push	r13
    fdba:	ef 92       	push	r14
    fdbc:	ff 92       	push	r15
    fdbe:	0f 93       	push	r16
    fdc0:	1f 93       	push	r17
    fdc2:	80 91 2c 25 	lds	r24, 0x252C
    fdc6:	30 91 2d 25 	lds	r19, 0x252D
    fdca:	40 91 2e 25 	lds	r20, 0x252E
    fdce:	60 91 2f 25 	lds	r22, 0x252F
    fdd2:	70 91 30 25 	lds	r23, 0x2530
    fdd6:	f0 91 31 25 	lds	r31, 0x2531
    fdda:	a0 91 32 25 	lds	r26, 0x2532
    fdde:	00 91 33 25 	lds	r16, 0x2533
    fde2:	b8 2f       	mov	r27, r24
    fde4:	b9 57       	subi	r27, 0x79	; 121
    fde6:	91 e0       	ldi	r25, 0x01	; 1
    fde8:	b8 17       	cp	r27, r24
    fdea:	08 f0       	brcs	.+2      	; 0xfdee <updateSystemTime+0x38>
    fdec:	90 e0       	ldi	r25, 0x00	; 0
    fdee:	83 2f       	mov	r24, r19
    fdf0:	8d 5e       	subi	r24, 0xED	; 237
    fdf2:	21 e0       	ldi	r18, 0x01	; 1
    fdf4:	83 17       	cp	r24, r19
    fdf6:	08 f0       	brcs	.+2      	; 0xfdfa <updateSystemTime+0x44>
    fdf8:	20 e0       	ldi	r18, 0x00	; 0
    fdfa:	e9 2f       	mov	r30, r25
    fdfc:	e8 0f       	add	r30, r24
    fdfe:	91 e0       	ldi	r25, 0x01	; 1
    fe00:	e8 17       	cp	r30, r24
    fe02:	08 f0       	brcs	.+2      	; 0xfe06 <updateSystemTime+0x50>
    fe04:	90 e0       	ldi	r25, 0x00	; 0
    fe06:	92 2b       	or	r25, r18
    fe08:	94 0f       	add	r25, r20
    fe0a:	81 e0       	ldi	r24, 0x01	; 1
    fe0c:	94 17       	cp	r25, r20
    fe0e:	08 f0       	brcs	.+2      	; 0xfe12 <updateSystemTime+0x5c>
    fe10:	80 e0       	ldi	r24, 0x00	; 0
    fe12:	58 2f       	mov	r21, r24
    fe14:	56 0f       	add	r21, r22
    fe16:	81 e0       	ldi	r24, 0x01	; 1
    fe18:	56 17       	cp	r21, r22
    fe1a:	08 f0       	brcs	.+2      	; 0xfe1e <updateSystemTime+0x68>
    fe1c:	80 e0       	ldi	r24, 0x00	; 0
    fe1e:	48 2f       	mov	r20, r24
    fe20:	47 0f       	add	r20, r23
    fe22:	81 e0       	ldi	r24, 0x01	; 1
    fe24:	47 17       	cp	r20, r23
    fe26:	08 f0       	brcs	.+2      	; 0xfe2a <updateSystemTime+0x74>
    fe28:	80 e0       	ldi	r24, 0x00	; 0
    fe2a:	38 2f       	mov	r19, r24
    fe2c:	3f 0f       	add	r19, r31
    fe2e:	81 e0       	ldi	r24, 0x01	; 1
    fe30:	3f 17       	cp	r19, r31
    fe32:	08 f0       	brcs	.+2      	; 0xfe36 <updateSystemTime+0x80>
    fe34:	80 e0       	ldi	r24, 0x00	; 0
    fe36:	28 2f       	mov	r18, r24
    fe38:	2a 0f       	add	r18, r26
    fe3a:	81 e0       	ldi	r24, 0x01	; 1
    fe3c:	2a 17       	cp	r18, r26
    fe3e:	08 f0       	brcs	.+2      	; 0xfe42 <updateSystemTime+0x8c>
    fe40:	80 e0       	ldi	r24, 0x00	; 0
    fe42:	80 0f       	add	r24, r16
    fe44:	b0 93 2c 25 	sts	0x252C, r27
    fe48:	e0 93 2d 25 	sts	0x252D, r30
    fe4c:	90 93 2e 25 	sts	0x252E, r25
    fe50:	50 93 2f 25 	sts	0x252F, r21
    fe54:	40 93 30 25 	sts	0x2530, r20
    fe58:	30 93 31 25 	sts	0x2531, r19
    fe5c:	20 93 32 25 	sts	0x2532, r18
    fe60:	80 93 33 25 	sts	0x2533, r24
    fe64:	60 91 39 25 	lds	r22, 0x2539
    fe68:	70 91 3a 25 	lds	r23, 0x253A
    fe6c:	80 91 3b 25 	lds	r24, 0x253B
    fe70:	90 91 3c 25 	lds	r25, 0x253C
    fe74:	0e 94 6b ad 	call	0x15ad6	; 0x15ad6 <__floatunsisf>
    fe78:	20 e0       	ldi	r18, 0x00	; 0
    fe7a:	30 e4       	ldi	r19, 0x40	; 64
    fe7c:	4c e1       	ldi	r20, 0x1C	; 28
    fe7e:	56 e4       	ldi	r21, 0x46	; 70
    fe80:	0e 94 cb ab 	call	0x15796	; 0x15796 <__addsf3>
    fe84:	0e 94 3f ad 	call	0x15a7e	; 0x15a7e <__fixunssfsi>
    fe88:	6b 01       	movw	r12, r22
    fe8a:	7c 01       	movw	r14, r24
    fe8c:	60 93 39 25 	sts	0x2539, r22
    fe90:	70 93 3a 25 	sts	0x253A, r23
    fe94:	80 93 3b 25 	sts	0x253B, r24
    fe98:	90 93 3c 25 	sts	0x253C, r25
    fe9c:	04 e2       	ldi	r16, 0x24	; 36
    fe9e:	15 e2       	ldi	r17, 0x25	; 37
    fea0:	20 91 24 25 	lds	r18, 0x2524
    fea4:	30 91 25 25 	lds	r19, 0x2525
    fea8:	40 91 26 25 	lds	r20, 0x2526
    feac:	50 91 27 25 	lds	r21, 0x2527
    feb0:	60 91 28 25 	lds	r22, 0x2528
    feb4:	70 91 29 25 	lds	r23, 0x2529
    feb8:	80 91 2a 25 	lds	r24, 0x252A
    febc:	90 91 2b 25 	lds	r25, 0x252B
    fec0:	0e 94 a8 ad 	call	0x15b50	; 0x15b50 <__floatundisf>
    fec4:	20 e0       	ldi	r18, 0x00	; 0
    fec6:	30 e0       	ldi	r19, 0x00	; 0
    fec8:	40 e2       	ldi	r20, 0x20	; 32
    feca:	51 e4       	ldi	r21, 0x41	; 65
    fecc:	0e 94 cb ab 	call	0x15796	; 0x15796 <__addsf3>
    fed0:	0e 94 05 ad 	call	0x15a0a	; 0x15a0a <__fixunssfdi>
    fed4:	20 93 24 25 	sts	0x2524, r18
    fed8:	f8 01       	movw	r30, r16
    feda:	31 83       	std	Z+1, r19	; 0x01
    fedc:	42 83       	std	Z+2, r20	; 0x02
    fede:	53 83       	std	Z+3, r21	; 0x03
    fee0:	64 83       	std	Z+4, r22	; 0x04
    fee2:	75 83       	std	Z+5, r23	; 0x05
    fee4:	86 83       	std	Z+6, r24	; 0x06
    fee6:	97 83       	std	Z+7, r25	; 0x07
    fee8:	99 23       	and	r25, r25
    feea:	a9 f4       	brne	.+42     	; 0xff16 <updateSystemTime+0x160>
    feec:	88 23       	and	r24, r24
    feee:	99 f4       	brne	.+38     	; 0xff16 <updateSystemTime+0x160>
    fef0:	77 23       	and	r23, r23
    fef2:	89 f4       	brne	.+34     	; 0xff16 <updateSystemTime+0x160>
    fef4:	66 23       	and	r22, r22
    fef6:	79 f4       	brne	.+30     	; 0xff16 <updateSystemTime+0x160>
    fef8:	55 23       	and	r21, r21
    fefa:	69 f4       	brne	.+26     	; 0xff16 <updateSystemTime+0x160>
    fefc:	47 33       	cpi	r20, 0x37	; 55
    fefe:	58 f4       	brcc	.+22     	; 0xff16 <updateSystemTime+0x160>
    ff00:	46 33       	cpi	r20, 0x36	; 54
    ff02:	09 f0       	breq	.+2      	; 0xff06 <updateSystemTime+0x150>
    ff04:	6c c0       	rjmp	.+216    	; 0xffde <updateSystemTime+0x228>
    ff06:	3f 3e       	cpi	r19, 0xEF	; 239
    ff08:	30 f4       	brcc	.+12     	; 0xff16 <updateSystemTime+0x160>
    ff0a:	3e 3e       	cpi	r19, 0xEE	; 238
    ff0c:	09 f0       	breq	.+2      	; 0xff10 <updateSystemTime+0x15a>
    ff0e:	67 c0       	rjmp	.+206    	; 0xffde <updateSystemTime+0x228>
    ff10:	20 38       	cpi	r18, 0x80	; 128
    ff12:	08 f4       	brcc	.+2      	; 0xff16 <updateSystemTime+0x160>
    ff14:	64 c0       	rjmp	.+200    	; 0xffde <updateSystemTime+0x228>
    ff16:	02 2f       	mov	r16, r18
    ff18:	00 58       	subi	r16, 0x80	; 128
    ff1a:	f1 e0       	ldi	r31, 0x01	; 1
    ff1c:	02 17       	cp	r16, r18
    ff1e:	08 f0       	brcs	.+2      	; 0xff22 <updateSystemTime+0x16c>
    ff20:	f0 e0       	ldi	r31, 0x00	; 0
    ff22:	23 2f       	mov	r18, r19
    ff24:	2f 5e       	subi	r18, 0xEF	; 239
    ff26:	e1 e0       	ldi	r30, 0x01	; 1
    ff28:	23 17       	cp	r18, r19
    ff2a:	08 f0       	brcs	.+2      	; 0xff2e <updateSystemTime+0x178>
    ff2c:	e0 e0       	ldi	r30, 0x00	; 0
    ff2e:	bf 2f       	mov	r27, r31
    ff30:	b2 0f       	add	r27, r18
    ff32:	31 e0       	ldi	r19, 0x01	; 1
    ff34:	b2 17       	cp	r27, r18
    ff36:	08 f0       	brcs	.+2      	; 0xff3a <updateSystemTime+0x184>
    ff38:	30 e0       	ldi	r19, 0x00	; 0
    ff3a:	e3 2b       	or	r30, r19
    ff3c:	24 2f       	mov	r18, r20
    ff3e:	27 53       	subi	r18, 0x37	; 55
    ff40:	f1 e0       	ldi	r31, 0x01	; 1
    ff42:	24 17       	cp	r18, r20
    ff44:	08 f0       	brcs	.+2      	; 0xff48 <updateSystemTime+0x192>
    ff46:	f0 e0       	ldi	r31, 0x00	; 0
    ff48:	ae 2f       	mov	r26, r30
    ff4a:	a2 0f       	add	r26, r18
    ff4c:	31 e0       	ldi	r19, 0x01	; 1
    ff4e:	a2 17       	cp	r26, r18
    ff50:	08 f0       	brcs	.+2      	; 0xff54 <updateSystemTime+0x19e>
    ff52:	30 e0       	ldi	r19, 0x00	; 0
    ff54:	f3 2b       	or	r31, r19
    ff56:	25 2f       	mov	r18, r21
    ff58:	21 50       	subi	r18, 0x01	; 1
    ff5a:	41 e0       	ldi	r20, 0x01	; 1
    ff5c:	25 17       	cp	r18, r21
    ff5e:	08 f0       	brcs	.+2      	; 0xff62 <updateSystemTime+0x1ac>
    ff60:	40 e0       	ldi	r20, 0x00	; 0
    ff62:	ef 2f       	mov	r30, r31
    ff64:	e2 0f       	add	r30, r18
    ff66:	31 e0       	ldi	r19, 0x01	; 1
    ff68:	e2 17       	cp	r30, r18
    ff6a:	08 f0       	brcs	.+2      	; 0xff6e <updateSystemTime+0x1b8>
    ff6c:	30 e0       	ldi	r19, 0x00	; 0
    ff6e:	43 2b       	or	r20, r19
    ff70:	26 2f       	mov	r18, r22
    ff72:	21 50       	subi	r18, 0x01	; 1
    ff74:	51 e0       	ldi	r21, 0x01	; 1
    ff76:	26 17       	cp	r18, r22
    ff78:	08 f0       	brcs	.+2      	; 0xff7c <updateSystemTime+0x1c6>
    ff7a:	50 e0       	ldi	r21, 0x00	; 0
    ff7c:	64 2f       	mov	r22, r20
    ff7e:	62 0f       	add	r22, r18
    ff80:	31 e0       	ldi	r19, 0x01	; 1
    ff82:	62 17       	cp	r22, r18
    ff84:	08 f0       	brcs	.+2      	; 0xff88 <updateSystemTime+0x1d2>
    ff86:	30 e0       	ldi	r19, 0x00	; 0
    ff88:	53 2b       	or	r21, r19
    ff8a:	27 2f       	mov	r18, r23
    ff8c:	21 50       	subi	r18, 0x01	; 1
    ff8e:	41 e0       	ldi	r20, 0x01	; 1
    ff90:	27 17       	cp	r18, r23
    ff92:	08 f0       	brcs	.+2      	; 0xff96 <updateSystemTime+0x1e0>
    ff94:	40 e0       	ldi	r20, 0x00	; 0
    ff96:	52 0f       	add	r21, r18
    ff98:	31 e0       	ldi	r19, 0x01	; 1
    ff9a:	52 17       	cp	r21, r18
    ff9c:	08 f0       	brcs	.+2      	; 0xffa0 <updateSystemTime+0x1ea>
    ff9e:	30 e0       	ldi	r19, 0x00	; 0
    ffa0:	43 2b       	or	r20, r19
    ffa2:	28 2f       	mov	r18, r24
    ffa4:	21 50       	subi	r18, 0x01	; 1
    ffa6:	31 e0       	ldi	r19, 0x01	; 1
    ffa8:	28 17       	cp	r18, r24
    ffaa:	08 f0       	brcs	.+2      	; 0xffae <updateSystemTime+0x1f8>
    ffac:	30 e0       	ldi	r19, 0x00	; 0
    ffae:	42 0f       	add	r20, r18
    ffb0:	81 e0       	ldi	r24, 0x01	; 1
    ffb2:	42 17       	cp	r20, r18
    ffb4:	08 f0       	brcs	.+2      	; 0xffb8 <updateSystemTime+0x202>
    ffb6:	80 e0       	ldi	r24, 0x00	; 0
    ffb8:	38 2b       	or	r19, r24
    ffba:	91 50       	subi	r25, 0x01	; 1
    ffbc:	39 0f       	add	r19, r25
    ffbe:	00 93 24 25 	sts	0x2524, r16
    ffc2:	b0 93 25 25 	sts	0x2525, r27
    ffc6:	a0 93 26 25 	sts	0x2526, r26
    ffca:	e0 93 27 25 	sts	0x2527, r30
    ffce:	60 93 28 25 	sts	0x2528, r22
    ffd2:	50 93 29 25 	sts	0x2529, r21
    ffd6:	40 93 2a 25 	sts	0x252A, r20
    ffda:	30 93 2b 25 	sts	0x252B, r19
    ffde:	f0 e4       	ldi	r31, 0x40	; 64
    ffe0:	cf 16       	cp	r12, r31
    ffe2:	f2 e4       	ldi	r31, 0x42	; 66
    ffe4:	df 06       	cpc	r13, r31
    ffe6:	ff e0       	ldi	r31, 0x0F	; 15
    ffe8:	ef 06       	cpc	r14, r31
    ffea:	f0 e0       	ldi	r31, 0x00	; 0
    ffec:	ff 06       	cpc	r15, r31
    ffee:	90 f1       	brcs	.+100    	; 0x10054 <updateSystemTime+0x29e>
    fff0:	d7 01       	movw	r26, r14
    fff2:	c6 01       	movw	r24, r12
    fff4:	80 54       	subi	r24, 0x40	; 64
    fff6:	92 44       	sbci	r25, 0x42	; 66
    fff8:	af 40       	sbci	r26, 0x0F	; 15
    fffa:	b0 40       	sbci	r27, 0x00	; 0
    fffc:	80 93 39 25 	sts	0x2539, r24
   10000:	90 93 3a 25 	sts	0x253A, r25
   10004:	a0 93 3b 25 	sts	0x253B, r26
   10008:	b0 93 3c 25 	sts	0x253C, r27
   1000c:	80 91 38 25 	lds	r24, 0x2538
   10010:	8f 5f       	subi	r24, 0xFF	; 255
   10012:	80 93 38 25 	sts	0x2538, r24
   10016:	8c 33       	cpi	r24, 0x3C	; 60
   10018:	e9 f4       	brne	.+58     	; 0x10054 <updateSystemTime+0x29e>
   1001a:	10 92 38 25 	sts	0x2538, r1
   1001e:	80 91 37 25 	lds	r24, 0x2537
   10022:	8f 5f       	subi	r24, 0xFF	; 255
   10024:	80 93 37 25 	sts	0x2537, r24
   10028:	8c 33       	cpi	r24, 0x3C	; 60
   1002a:	a1 f4       	brne	.+40     	; 0x10054 <updateSystemTime+0x29e>
   1002c:	10 92 37 25 	sts	0x2537, r1
   10030:	80 91 36 25 	lds	r24, 0x2536
   10034:	8f 5f       	subi	r24, 0xFF	; 255
   10036:	80 93 36 25 	sts	0x2536, r24
   1003a:	88 31       	cpi	r24, 0x18	; 24
   1003c:	59 f4       	brne	.+22     	; 0x10054 <updateSystemTime+0x29e>
   1003e:	10 92 36 25 	sts	0x2536, r1
   10042:	80 91 34 25 	lds	r24, 0x2534
   10046:	90 91 35 25 	lds	r25, 0x2535
   1004a:	01 96       	adiw	r24, 0x01	; 1
   1004c:	80 93 34 25 	sts	0x2534, r24
   10050:	90 93 35 25 	sts	0x2535, r25
   10054:	1f 91       	pop	r17
   10056:	0f 91       	pop	r16
   10058:	ff 90       	pop	r15
   1005a:	ef 90       	pop	r14
   1005c:	df 90       	pop	r13
   1005e:	cf 90       	pop	r12
   10060:	08 95       	ret

00010062 <arb_sysMsecNow>:
   10062:	20 91 24 25 	lds	r18, 0x2524
   10066:	30 91 25 25 	lds	r19, 0x2525
   1006a:	40 91 26 25 	lds	r20, 0x2526
   1006e:	50 91 27 25 	lds	r21, 0x2527
   10072:	60 91 28 25 	lds	r22, 0x2528
   10076:	70 91 29 25 	lds	r23, 0x2529
   1007a:	80 91 2a 25 	lds	r24, 0x252A
   1007e:	90 91 2b 25 	lds	r25, 0x252B
   10082:	08 95       	ret

00010084 <arb_sysMsecDelta>:
   10084:	af 92       	push	r10
   10086:	bf 92       	push	r11
   10088:	cf 92       	push	r12
   1008a:	df 92       	push	r13
   1008c:	ef 92       	push	r14
   1008e:	ff 92       	push	r15
   10090:	0f 93       	push	r16
   10092:	1f 93       	push	r17
   10094:	e2 2f       	mov	r30, r18
   10096:	ea 19       	sub	r30, r10
   10098:	ae 2e       	mov	r10, r30
   1009a:	f1 e0       	ldi	r31, 0x01	; 1
   1009c:	2e 17       	cp	r18, r30
   1009e:	08 f0       	brcs	.+2      	; 0x100a2 <arb_sysMsecDelta+0x1e>
   100a0:	f0 e0       	ldi	r31, 0x00	; 0
   100a2:	23 2f       	mov	r18, r19
   100a4:	2b 19       	sub	r18, r11
   100a6:	b2 2e       	mov	r11, r18
   100a8:	e1 e0       	ldi	r30, 0x01	; 1
   100aa:	32 17       	cp	r19, r18
   100ac:	08 f0       	brcs	.+2      	; 0x100b0 <arb_sysMsecDelta+0x2c>
   100ae:	e0 e0       	ldi	r30, 0x00	; 0
   100b0:	bb 2d       	mov	r27, r11
   100b2:	bf 1b       	sub	r27, r31
   100b4:	21 e0       	ldi	r18, 0x01	; 1
   100b6:	bb 16       	cp	r11, r27
   100b8:	08 f0       	brcs	.+2      	; 0x100bc <arb_sysMsecDelta+0x38>
   100ba:	20 e0       	ldi	r18, 0x00	; 0
   100bc:	e2 2b       	or	r30, r18
   100be:	24 2f       	mov	r18, r20
   100c0:	2c 19       	sub	r18, r12
   100c2:	c2 2e       	mov	r12, r18
   100c4:	31 e0       	ldi	r19, 0x01	; 1
   100c6:	42 17       	cp	r20, r18
   100c8:	08 f0       	brcs	.+2      	; 0x100cc <arb_sysMsecDelta+0x48>
   100ca:	30 e0       	ldi	r19, 0x00	; 0
   100cc:	bc 2c       	mov	r11, r12
   100ce:	be 1a       	sub	r11, r30
   100d0:	21 e0       	ldi	r18, 0x01	; 1
   100d2:	cb 14       	cp	r12, r11
   100d4:	08 f0       	brcs	.+2      	; 0x100d8 <arb_sysMsecDelta+0x54>
   100d6:	20 e0       	ldi	r18, 0x00	; 0
   100d8:	32 2b       	or	r19, r18
   100da:	e5 2f       	mov	r30, r21
   100dc:	ed 19       	sub	r30, r13
   100de:	de 2e       	mov	r13, r30
   100e0:	41 e0       	ldi	r20, 0x01	; 1
   100e2:	5e 17       	cp	r21, r30
   100e4:	08 f0       	brcs	.+2      	; 0x100e8 <arb_sysMsecDelta+0x64>
   100e6:	40 e0       	ldi	r20, 0x00	; 0
   100e8:	cd 2c       	mov	r12, r13
   100ea:	c3 1a       	sub	r12, r19
   100ec:	21 e0       	ldi	r18, 0x01	; 1
   100ee:	dc 14       	cp	r13, r12
   100f0:	08 f0       	brcs	.+2      	; 0x100f4 <arb_sysMsecDelta+0x70>
   100f2:	20 e0       	ldi	r18, 0x00	; 0
   100f4:	42 2b       	or	r20, r18
   100f6:	26 2f       	mov	r18, r22
   100f8:	2e 19       	sub	r18, r14
   100fa:	e2 2e       	mov	r14, r18
   100fc:	31 e0       	ldi	r19, 0x01	; 1
   100fe:	62 17       	cp	r22, r18
   10100:	08 f0       	brcs	.+2      	; 0x10104 <arb_sysMsecDelta+0x80>
   10102:	30 e0       	ldi	r19, 0x00	; 0
   10104:	ae 2d       	mov	r26, r14
   10106:	a4 1b       	sub	r26, r20
   10108:	21 e0       	ldi	r18, 0x01	; 1
   1010a:	ea 16       	cp	r14, r26
   1010c:	08 f0       	brcs	.+2      	; 0x10110 <arb_sysMsecDelta+0x8c>
   1010e:	20 e0       	ldi	r18, 0x00	; 0
   10110:	32 2b       	or	r19, r18
   10112:	e7 2f       	mov	r30, r23
   10114:	ef 19       	sub	r30, r15
   10116:	fe 2e       	mov	r15, r30
   10118:	41 e0       	ldi	r20, 0x01	; 1
   1011a:	7e 17       	cp	r23, r30
   1011c:	08 f0       	brcs	.+2      	; 0x10120 <arb_sysMsecDelta+0x9c>
   1011e:	40 e0       	ldi	r20, 0x00	; 0
   10120:	ff 2d       	mov	r31, r15
   10122:	f3 1b       	sub	r31, r19
   10124:	21 e0       	ldi	r18, 0x01	; 1
   10126:	ff 16       	cp	r15, r31
   10128:	08 f0       	brcs	.+2      	; 0x1012c <arb_sysMsecDelta+0xa8>
   1012a:	20 e0       	ldi	r18, 0x00	; 0
   1012c:	42 2b       	or	r20, r18
   1012e:	28 2f       	mov	r18, r24
   10130:	20 1b       	sub	r18, r16
   10132:	02 2f       	mov	r16, r18
   10134:	21 e0       	ldi	r18, 0x01	; 1
   10136:	80 17       	cp	r24, r16
   10138:	08 f0       	brcs	.+2      	; 0x1013c <arb_sysMsecDelta+0xb8>
   1013a:	20 e0       	ldi	r18, 0x00	; 0
   1013c:	e0 2f       	mov	r30, r16
   1013e:	e4 1b       	sub	r30, r20
   10140:	81 e0       	ldi	r24, 0x01	; 1
   10142:	0e 17       	cp	r16, r30
   10144:	08 f0       	brcs	.+2      	; 0x10148 <arb_sysMsecDelta+0xc4>
   10146:	80 e0       	ldi	r24, 0x00	; 0
   10148:	28 2b       	or	r18, r24
   1014a:	91 1b       	sub	r25, r17
   1014c:	19 2f       	mov	r17, r25
   1014e:	12 1b       	sub	r17, r18
   10150:	2a 2d       	mov	r18, r10
   10152:	3b 2f       	mov	r19, r27
   10154:	4b 2d       	mov	r20, r11
   10156:	5c 2d       	mov	r21, r12
   10158:	6a 2f       	mov	r22, r26
   1015a:	7f 2f       	mov	r23, r31
   1015c:	8e 2f       	mov	r24, r30
   1015e:	91 2f       	mov	r25, r17
   10160:	b2 f5       	brpl	.+108    	; 0x101ce <arb_sysMsecDelta+0x14a>
   10162:	2a 2d       	mov	r18, r10
   10164:	20 58       	subi	r18, 0x80	; 128
   10166:	31 e0       	ldi	r19, 0x01	; 1
   10168:	2a 15       	cp	r18, r10
   1016a:	08 f0       	brcs	.+2      	; 0x1016e <arb_sysMsecDelta+0xea>
   1016c:	30 e0       	ldi	r19, 0x00	; 0
   1016e:	8b 2f       	mov	r24, r27
   10170:	82 51       	subi	r24, 0x12	; 18
   10172:	51 e0       	ldi	r21, 0x01	; 1
   10174:	8b 17       	cp	r24, r27
   10176:	08 f0       	brcs	.+2      	; 0x1017a <arb_sysMsecDelta+0xf6>
   10178:	50 e0       	ldi	r21, 0x00	; 0
   1017a:	38 0f       	add	r19, r24
   1017c:	41 e0       	ldi	r20, 0x01	; 1
   1017e:	38 17       	cp	r19, r24
   10180:	08 f0       	brcs	.+2      	; 0x10184 <arb_sysMsecDelta+0x100>
   10182:	40 e0       	ldi	r20, 0x00	; 0
   10184:	54 2b       	or	r21, r20
   10186:	8b 2d       	mov	r24, r11
   10188:	8a 5c       	subi	r24, 0xCA	; 202
   1018a:	61 e0       	ldi	r22, 0x01	; 1
   1018c:	8b 15       	cp	r24, r11
   1018e:	08 f0       	brcs	.+2      	; 0x10192 <arb_sysMsecDelta+0x10e>
   10190:	60 e0       	ldi	r22, 0x00	; 0
   10192:	45 2f       	mov	r20, r21
   10194:	48 0f       	add	r20, r24
   10196:	51 e0       	ldi	r21, 0x01	; 1
   10198:	48 17       	cp	r20, r24
   1019a:	08 f0       	brcs	.+2      	; 0x1019e <arb_sysMsecDelta+0x11a>
   1019c:	50 e0       	ldi	r21, 0x00	; 0
   1019e:	56 2b       	or	r21, r22
   101a0:	5c 0d       	add	r21, r12
   101a2:	81 e0       	ldi	r24, 0x01	; 1
   101a4:	5c 15       	cp	r21, r12
   101a6:	08 f0       	brcs	.+2      	; 0x101aa <arb_sysMsecDelta+0x126>
   101a8:	80 e0       	ldi	r24, 0x00	; 0
   101aa:	68 2f       	mov	r22, r24
   101ac:	6a 0f       	add	r22, r26
   101ae:	81 e0       	ldi	r24, 0x01	; 1
   101b0:	6a 17       	cp	r22, r26
   101b2:	08 f0       	brcs	.+2      	; 0x101b6 <arb_sysMsecDelta+0x132>
   101b4:	80 e0       	ldi	r24, 0x00	; 0
   101b6:	78 2f       	mov	r23, r24
   101b8:	7f 0f       	add	r23, r31
   101ba:	81 e0       	ldi	r24, 0x01	; 1
   101bc:	7f 17       	cp	r23, r31
   101be:	08 f0       	brcs	.+2      	; 0x101c2 <arb_sysMsecDelta+0x13e>
   101c0:	80 e0       	ldi	r24, 0x00	; 0
   101c2:	8e 0f       	add	r24, r30
   101c4:	91 e0       	ldi	r25, 0x01	; 1
   101c6:	8e 17       	cp	r24, r30
   101c8:	08 f0       	brcs	.+2      	; 0x101cc <arb_sysMsecDelta+0x148>
   101ca:	90 e0       	ldi	r25, 0x00	; 0
   101cc:	91 0f       	add	r25, r17
   101ce:	1f 91       	pop	r17
   101d0:	0f 91       	pop	r16
   101d2:	ff 90       	pop	r15
   101d4:	ef 90       	pop	r14
   101d6:	df 90       	pop	r13
   101d8:	cf 90       	pop	r12
   101da:	bf 90       	pop	r11
   101dc:	af 90       	pop	r10
   101de:	08 95       	ret

000101e0 <arb_sysTimerEnabled>:
   101e0:	80 91 3d 25 	lds	r24, 0x253D
   101e4:	08 95       	ret

000101e6 <arb_setSysTime>:
   101e6:	df 93       	push	r29
   101e8:	cf 93       	push	r28
   101ea:	0f 92       	push	r0
   101ec:	cd b7       	in	r28, 0x3d	; 61
   101ee:	de b7       	in	r29, 0x3e	; 62
   101f0:	9f b7       	in	r25, 0x3f	; 63
   101f2:	99 83       	std	Y+1, r25	; 0x01
   101f4:	f8 94       	cli
   101f6:	10 92 2c 25 	sts	0x252C, r1
   101fa:	10 92 2d 25 	sts	0x252D, r1
   101fe:	10 92 2e 25 	sts	0x252E, r1
   10202:	10 92 2f 25 	sts	0x252F, r1
   10206:	10 92 30 25 	sts	0x2530, r1
   1020a:	10 92 31 25 	sts	0x2531, r1
   1020e:	10 92 32 25 	sts	0x2532, r1
   10212:	10 92 33 25 	sts	0x2533, r1
   10216:	e4 e2       	ldi	r30, 0x24	; 36
   10218:	f5 e2       	ldi	r31, 0x25	; 37
   1021a:	10 82       	st	Z, r1
   1021c:	11 82       	std	Z+1, r1	; 0x01
   1021e:	12 82       	std	Z+2, r1	; 0x02
   10220:	13 82       	std	Z+3, r1	; 0x03
   10222:	14 82       	std	Z+4, r1	; 0x04
   10224:	15 82       	std	Z+5, r1	; 0x05
   10226:	16 82       	std	Z+6, r1	; 0x06
   10228:	17 82       	std	Z+7, r1	; 0x07
   1022a:	40 93 38 25 	sts	0x2538, r20
   1022e:	60 93 37 25 	sts	0x2537, r22
   10232:	80 93 36 25 	sts	0x2536, r24
   10236:	10 92 34 25 	sts	0x2534, r1
   1023a:	10 92 35 25 	sts	0x2535, r1
   1023e:	89 81       	ldd	r24, Y+1	; 0x01
   10240:	8f bf       	out	0x3f, r24	; 63
   10242:	0f 90       	pop	r0
   10244:	cf 91       	pop	r28
   10246:	df 91       	pop	r29
   10248:	08 95       	ret

0001024a <arb_resetSysTime>:
   1024a:	10 92 2c 25 	sts	0x252C, r1
   1024e:	10 92 2d 25 	sts	0x252D, r1
   10252:	10 92 2e 25 	sts	0x252E, r1
   10256:	10 92 2f 25 	sts	0x252F, r1
   1025a:	10 92 30 25 	sts	0x2530, r1
   1025e:	10 92 31 25 	sts	0x2531, r1
   10262:	10 92 32 25 	sts	0x2532, r1
   10266:	10 92 33 25 	sts	0x2533, r1
   1026a:	e4 e2       	ldi	r30, 0x24	; 36
   1026c:	f5 e2       	ldi	r31, 0x25	; 37
   1026e:	10 82       	st	Z, r1
   10270:	11 82       	std	Z+1, r1	; 0x01
   10272:	12 82       	std	Z+2, r1	; 0x02
   10274:	13 82       	std	Z+3, r1	; 0x03
   10276:	14 82       	std	Z+4, r1	; 0x04
   10278:	15 82       	std	Z+5, r1	; 0x05
   1027a:	16 82       	std	Z+6, r1	; 0x06
   1027c:	17 82       	std	Z+7, r1	; 0x07
   1027e:	10 92 38 25 	sts	0x2538, r1
   10282:	10 92 37 25 	sts	0x2537, r1
   10286:	10 92 36 25 	sts	0x2536, r1
   1028a:	10 92 34 25 	sts	0x2534, r1
   1028e:	10 92 35 25 	sts	0x2535, r1
   10292:	08 95       	ret

00010294 <arb_sysTimerInit>:
   10294:	1f 93       	push	r17
   10296:	df 93       	push	r29
   10298:	cf 93       	push	r28
   1029a:	00 d0       	rcall	.+0      	; 0x1029c <arb_sysTimerInit+0x8>
   1029c:	00 d0       	rcall	.+0      	; 0x1029e <arb_sysTimerInit+0xa>
   1029e:	cd b7       	in	r28, 0x3d	; 61
   102a0:	de b7       	in	r29, 0x3e	; 62
   102a2:	18 2f       	mov	r17, r24
   102a4:	0e 94 25 81 	call	0x1024a	; 0x1024a <arb_resetSysTime>
   102a8:	81 2f       	mov	r24, r17
   102aa:	0e 94 60 5a 	call	0xb4c0	; 0xb4c0 <hal_requestTimer>
   102ae:	80 93 3e 25 	sts	0x253E, r24
   102b2:	90 93 3f 25 	sts	0x253F, r25
   102b6:	80 91 3e 25 	lds	r24, 0x253E
   102ba:	90 91 3f 25 	lds	r25, 0x253F
   102be:	97 fd       	sbrc	r25, 7
   102c0:	23 c0       	rjmp	.+70     	; 0x10308 <arb_sysTimerInit+0x74>
   102c2:	19 82       	std	Y+1, r1	; 0x01
   102c4:	1a 82       	std	Y+2, r1	; 0x02
   102c6:	8a e0       	ldi	r24, 0x0A	; 10
   102c8:	97 ed       	ldi	r25, 0xD7	; 215
   102ca:	a3 e2       	ldi	r26, 0x23	; 35
   102cc:	bc e3       	ldi	r27, 0x3C	; 60
   102ce:	8b 83       	std	Y+3, r24	; 0x03
   102d0:	9c 83       	std	Y+4, r25	; 0x04
   102d2:	ad 83       	std	Y+5, r26	; 0x05
   102d4:	be 83       	std	Y+6, r27	; 0x06
   102d6:	80 91 3e 25 	lds	r24, 0x253E
   102da:	90 91 3f 25 	lds	r25, 0x253F
   102de:	20 e0       	ldi	r18, 0x00	; 0
   102e0:	30 e0       	ldi	r19, 0x00	; 0
   102e2:	4b 81       	ldd	r20, Y+3	; 0x03
   102e4:	5c 81       	ldd	r21, Y+4	; 0x04
   102e6:	6d 81       	ldd	r22, Y+5	; 0x05
   102e8:	7e 81       	ldd	r23, Y+6	; 0x06
   102ea:	0e 94 09 5c 	call	0xb812	; 0xb812 <hal_configureTimer>
   102ee:	87 fd       	sbrc	r24, 7
   102f0:	0b c0       	rjmp	.+22     	; 0x10308 <arb_sysTimerInit+0x74>
   102f2:	80 91 3e 25 	lds	r24, 0x253E
   102f6:	90 91 3f 25 	lds	r25, 0x253F
   102fa:	64 e0       	ldi	r22, 0x04	; 4
   102fc:	4f e8       	ldi	r20, 0x8F	; 143
   102fe:	51 e8       	ldi	r21, 0x81	; 129
   10300:	0e 94 b6 58 	call	0xb16c	; 0xb16c <hal_requestTimerInterrupt>
   10304:	87 ff       	sbrs	r24, 7
   10306:	04 c0       	rjmp	.+8      	; 0x10310 <arb_sysTimerInit+0x7c>
   10308:	80 e0       	ldi	r24, 0x00	; 0
   1030a:	90 e0       	ldi	r25, 0x00	; 0
   1030c:	0e 94 ac b0 	call	0x16158	; 0x16158 <exit>
   10310:	26 96       	adiw	r28, 0x06	; 6
   10312:	cd bf       	out	0x3d, r28	; 61
   10314:	de bf       	out	0x3e, r29	; 62
   10316:	cf 91       	pop	r28
   10318:	df 91       	pop	r29
   1031a:	1f 91       	pop	r17
   1031c:	08 95       	ret

0001031e <sysTimerInterrupt>:
   1031e:	f8 94       	cli
   10320:	0f 92       	push	r0
   10322:	0f b6       	in	r0, 0x3f	; 63
   10324:	0f 93       	push	r16
   10326:	00 2d       	mov	r16, r0
   10328:	00 68       	ori	r16, 0x80	; 128
   1032a:	00 2e       	mov	r0, r16
   1032c:	0f 91       	pop	r16
   1032e:	0f 92       	push	r0
   10330:	1f 92       	push	r1
   10332:	11 24       	eor	r1, r1
   10334:	2f 92       	push	r2
   10336:	3f 92       	push	r3
   10338:	4f 92       	push	r4
   1033a:	5f 92       	push	r5
   1033c:	6f 92       	push	r6
   1033e:	7f 92       	push	r7
   10340:	8f 92       	push	r8
   10342:	9f 92       	push	r9
   10344:	af 92       	push	r10
   10346:	bf 92       	push	r11
   10348:	cf 92       	push	r12
   1034a:	df 92       	push	r13
   1034c:	ef 92       	push	r14
   1034e:	ff 92       	push	r15
   10350:	0f 93       	push	r16
   10352:	1f 93       	push	r17
   10354:	2f 93       	push	r18
   10356:	3f 93       	push	r19
   10358:	4f 93       	push	r20
   1035a:	5f 93       	push	r21
   1035c:	6f 93       	push	r22
   1035e:	7f 93       	push	r23
   10360:	8f 93       	push	r24
   10362:	9f 93       	push	r25
   10364:	af 93       	push	r26
   10366:	bf 93       	push	r27
   10368:	cf 93       	push	r28
   1036a:	df 93       	push	r29
   1036c:	ef 93       	push	r30
   1036e:	ff 93       	push	r31
   10370:	e0 91 ab 22 	lds	r30, 0x22AB
   10374:	f0 91 ac 22 	lds	r31, 0x22AC
   10378:	06 80       	ldd	r0, Z+6	; 0x06
   1037a:	f7 81       	ldd	r31, Z+7	; 0x07
   1037c:	e0 2d       	mov	r30, r0
   1037e:	01 90       	ld	r0, Z+
   10380:	f0 81       	ld	r31, Z
   10382:	e0 2d       	mov	r30, r0
   10384:	e0 93 e8 27 	sts	0x27E8, r30
   10388:	f0 93 e9 27 	sts	0x27E9, r31
   1038c:	2d b7       	in	r18, 0x3d	; 61
   1038e:	4e b7       	in	r20, 0x3e	; 62
   10390:	94 2f       	mov	r25, r20
   10392:	80 e0       	ldi	r24, 0x00	; 0
   10394:	30 e0       	ldi	r19, 0x00	; 0
   10396:	82 2b       	or	r24, r18
   10398:	93 2b       	or	r25, r19
   1039a:	81 87       	std	Z+9, r24	; 0x09
   1039c:	92 87       	std	Z+10, r25	; 0x0a
   1039e:	8f ef       	ldi	r24, 0xFF	; 255
   103a0:	8d bf       	out	0x3d, r24	; 61
   103a2:	8f e3       	ldi	r24, 0x3F	; 63
   103a4:	8e bf       	out	0x3e, r24	; 62
   103a6:	c0 91 3d 00 	lds	r28, 0x003D
   103aa:	d0 91 3e 00 	lds	r29, 0x003E
   103ae:	e0 91 ab 22 	lds	r30, 0x22AB
   103b2:	f0 91 ac 22 	lds	r31, 0x22AC
   103b6:	06 80       	ldd	r0, Z+6	; 0x06
   103b8:	f7 81       	ldd	r31, Z+7	; 0x07
   103ba:	e0 2d       	mov	r30, r0
   103bc:	01 90       	ld	r0, Z+
   103be:	f0 81       	ld	r31, Z
   103c0:	e0 2d       	mov	r30, r0
   103c2:	e0 93 40 25 	sts	0x2540, r30
   103c6:	f0 93 41 25 	sts	0x2541, r31
   103ca:	03 84       	ldd	r0, Z+11	; 0x0b
   103cc:	f4 85       	ldd	r31, Z+12	; 0x0c
   103ce:	e0 2d       	mov	r30, r0
   103d0:	80 81       	ld	r24, Z
   103d2:	91 81       	ldd	r25, Z+1	; 0x01
   103d4:	8d 5a       	subi	r24, 0xAD	; 173
   103d6:	9e 4d       	sbci	r25, 0xDE	; 222
   103d8:	11 f0       	breq	.+4      	; 0x103de <sysTimerInterrupt+0xc0>
   103da:	0e 94 38 86 	call	0x10c70	; 0x10c70 <arb_stackOverflow>
   103de:	e0 91 40 25 	lds	r30, 0x2540
   103e2:	f0 91 41 25 	lds	r31, 0x2541
   103e6:	11 82       	std	Z+1, r1	; 0x01
   103e8:	80 91 9e 22 	lds	r24, 0x229E
   103ec:	88 23       	and	r24, r24
   103ee:	11 f0       	breq	.+4      	; 0x103f4 <sysTimerInterrupt+0xd6>
   103f0:	0e 94 db 7e 	call	0xfdb6	; 0xfdb6 <updateSystemTime>
   103f4:	81 e0       	ldi	r24, 0x01	; 1
   103f6:	80 93 9e 22 	sts	0x229E, r24
   103fa:	0e 94 d0 83 	call	0x107a0	; 0x107a0 <arb_updateSleepingThreads>
   103fe:	e0 91 e6 27 	lds	r30, 0x27E6
   10402:	f0 91 e7 27 	lds	r31, 0x27E7
   10406:	19 95       	eicall
   10408:	e0 91 ab 22 	lds	r30, 0x22AB
   1040c:	f0 91 ac 22 	lds	r31, 0x22AC
   10410:	06 80       	ldd	r0, Z+6	; 0x06
   10412:	f7 81       	ldd	r31, Z+7	; 0x07
   10414:	e0 2d       	mov	r30, r0
   10416:	01 90       	ld	r0, Z+
   10418:	f0 81       	ld	r31, Z
   1041a:	e0 2d       	mov	r30, r0
   1041c:	e0 93 e8 27 	sts	0x27E8, r30
   10420:	f0 93 e9 27 	sts	0x27E9, r31
   10424:	81 85       	ldd	r24, Z+9	; 0x09
   10426:	92 85       	ldd	r25, Z+10	; 0x0a
   10428:	8d bf       	out	0x3d, r24	; 61
   1042a:	9e bf       	out	0x3e, r25	; 62
   1042c:	ff 91       	pop	r31
   1042e:	ef 91       	pop	r30
   10430:	df 91       	pop	r29
   10432:	cf 91       	pop	r28
   10434:	bf 91       	pop	r27
   10436:	af 91       	pop	r26
   10438:	9f 91       	pop	r25
   1043a:	8f 91       	pop	r24
   1043c:	7f 91       	pop	r23
   1043e:	6f 91       	pop	r22
   10440:	5f 91       	pop	r21
   10442:	4f 91       	pop	r20
   10444:	3f 91       	pop	r19
   10446:	2f 91       	pop	r18
   10448:	1f 91       	pop	r17
   1044a:	0f 91       	pop	r16
   1044c:	ff 90       	pop	r15
   1044e:	ef 90       	pop	r14
   10450:	df 90       	pop	r13
   10452:	cf 90       	pop	r12
   10454:	bf 90       	pop	r11
   10456:	af 90       	pop	r10
   10458:	9f 90       	pop	r9
   1045a:	8f 90       	pop	r8
   1045c:	7f 90       	pop	r7
   1045e:	6f 90       	pop	r6
   10460:	5f 90       	pop	r5
   10462:	4f 90       	pop	r4
   10464:	3f 90       	pop	r3
   10466:	2f 90       	pop	r2
   10468:	1f 90       	pop	r1
   1046a:	0f 90       	pop	r0
   1046c:	0f be       	out	0x3f, r0	; 63
   1046e:	0f 90       	pop	r0
   10470:	18 95       	reti

00010472 <arb_sysTimerStart>:
   10472:	80 91 3e 25 	lds	r24, 0x253E
   10476:	90 91 3f 25 	lds	r25, 0x253F
   1047a:	0e 94 3a 5d 	call	0xba74	; 0xba74 <hal_startTimer>
   1047e:	87 ff       	sbrs	r24, 7
   10480:	02 c0       	rjmp	.+4      	; 0x10486 <arb_sysTimerStart+0x14>
   10482:	86 ef       	ldi	r24, 0xF6	; 246
   10484:	08 95       	ret
   10486:	81 e0       	ldi	r24, 0x01	; 1
   10488:	80 93 3d 25 	sts	0x253D, r24
   1048c:	80 93 9e 22 	sts	0x229E, r24
   10490:	80 e0       	ldi	r24, 0x00	; 0
   10492:	08 95       	ret

00010494 <arb_sysTimeNow>:
   10494:	2f 92       	push	r2
   10496:	3f 92       	push	r3
   10498:	4f 92       	push	r4
   1049a:	5f 92       	push	r5
   1049c:	6f 92       	push	r6
   1049e:	7f 92       	push	r7
   104a0:	8f 92       	push	r8
   104a2:	9f 92       	push	r9
   104a4:	af 92       	push	r10
   104a6:	bf 92       	push	r11
   104a8:	cf 92       	push	r12
   104aa:	df 92       	push	r13
   104ac:	ef 92       	push	r14
   104ae:	ff 92       	push	r15
   104b0:	0f 93       	push	r16
   104b2:	1f 93       	push	r17
   104b4:	df 93       	push	r29
   104b6:	cf 93       	push	r28
   104b8:	cd b7       	in	r28, 0x3d	; 61
   104ba:	de b7       	in	r29, 0x3e	; 62
   104bc:	2d 97       	sbiw	r28, 0x0d	; 13
   104be:	cd bf       	out	0x3d, r28	; 61
   104c0:	de bf       	out	0x3e, r29	; 62
   104c2:	8c 01       	movw	r16, r24
   104c4:	8f b7       	in	r24, 0x3f	; 63
   104c6:	89 83       	std	Y+1, r24	; 0x01
   104c8:	f8 94       	cli
   104ca:	80 91 3e 25 	lds	r24, 0x253E
   104ce:	90 91 3f 25 	lds	r25, 0x253F
   104d2:	64 e0       	ldi	r22, 0x04	; 4
   104d4:	0e 94 cf 5e 	call	0xbd9e	; 0xbd9e <hal_getIntStatus>
   104d8:	18 16       	cp	r1, r24
   104da:	19 06       	cpc	r1, r25
   104dc:	24 f4       	brge	.+8      	; 0x104e6 <arb_sysTimeNow+0x52>
   104de:	10 92 9e 22 	sts	0x229E, r1
   104e2:	0e 94 db 7e 	call	0xfdb6	; 0xfdb6 <updateSystemTime>
   104e6:	80 91 3e 25 	lds	r24, 0x253E
   104ea:	90 91 3f 25 	lds	r25, 0x253F
   104ee:	0e 94 b9 5d 	call	0xbb72	; 0xbb72 <hal_getTimerCount>
   104f2:	5b 01       	movw	r10, r22
   104f4:	9b 01       	movw	r18, r22
   104f6:	40 e0       	ldi	r20, 0x00	; 0
   104f8:	50 e0       	ldi	r21, 0x00	; 0
   104fa:	60 e0       	ldi	r22, 0x00	; 0
   104fc:	70 e0       	ldi	r23, 0x00	; 0
   104fe:	80 e0       	ldi	r24, 0x00	; 0
   10500:	90 e0       	ldi	r25, 0x00	; 0
   10502:	40 90 2c 25 	lds	r4, 0x252C
   10506:	e0 91 2d 25 	lds	r30, 0x252D
   1050a:	b0 91 2e 25 	lds	r27, 0x252E
   1050e:	f0 90 2f 25 	lds	r15, 0x252F
   10512:	e0 90 30 25 	lds	r14, 0x2530
   10516:	d0 90 31 25 	lds	r13, 0x2531
   1051a:	c0 90 32 25 	lds	r12, 0x2532
   1051e:	90 90 33 25 	lds	r9, 0x2533
   10522:	4a 0c       	add	r4, r10
   10524:	a1 e0       	ldi	r26, 0x01	; 1
   10526:	4a 14       	cp	r4, r10
   10528:	08 f0       	brcs	.+2      	; 0x1052c <arb_sysTimeNow+0x98>
   1052a:	a0 e0       	ldi	r26, 0x00	; 0
   1052c:	e3 0f       	add	r30, r19
   1052e:	f1 e0       	ldi	r31, 0x01	; 1
   10530:	e3 17       	cp	r30, r19
   10532:	08 f0       	brcs	.+2      	; 0x10536 <arb_sysTimeNow+0xa2>
   10534:	f0 e0       	ldi	r31, 0x00	; 0
   10536:	ae 0f       	add	r26, r30
   10538:	af 83       	std	Y+7, r26	; 0x07
   1053a:	a1 e0       	ldi	r26, 0x01	; 1
   1053c:	8f 80       	ldd	r8, Y+7	; 0x07
   1053e:	8e 16       	cp	r8, r30
   10540:	08 f0       	brcs	.+2      	; 0x10544 <arb_sysTimeNow+0xb0>
   10542:	a0 e0       	ldi	r26, 0x00	; 0
   10544:	fa 2b       	or	r31, r26
   10546:	e1 e0       	ldi	r30, 0x01	; 1
   10548:	b4 17       	cp	r27, r20
   1054a:	08 f0       	brcs	.+2      	; 0x1054e <arb_sysTimeNow+0xba>
   1054c:	e0 e0       	ldi	r30, 0x00	; 0
   1054e:	fb 0f       	add	r31, r27
   10550:	f8 87       	std	Y+8, r31	; 0x08
   10552:	f1 e0       	ldi	r31, 0x01	; 1
   10554:	a8 85       	ldd	r26, Y+8	; 0x08
   10556:	ab 17       	cp	r26, r27
   10558:	08 f0       	brcs	.+2      	; 0x1055c <arb_sysTimeNow+0xc8>
   1055a:	f0 e0       	ldi	r31, 0x00	; 0
   1055c:	ef 2b       	or	r30, r31
   1055e:	f1 e0       	ldi	r31, 0x01	; 1
   10560:	f5 16       	cp	r15, r21
   10562:	08 f0       	brcs	.+2      	; 0x10566 <arb_sysTimeNow+0xd2>
   10564:	f0 e0       	ldi	r31, 0x00	; 0
   10566:	ef 0d       	add	r30, r15
   10568:	e9 87       	std	Y+9, r30	; 0x09
   1056a:	e1 e0       	ldi	r30, 0x01	; 1
   1056c:	b9 85       	ldd	r27, Y+9	; 0x09
   1056e:	bf 15       	cp	r27, r15
   10570:	08 f0       	brcs	.+2      	; 0x10574 <arb_sysTimeNow+0xe0>
   10572:	e0 e0       	ldi	r30, 0x00	; 0
   10574:	fe 2b       	or	r31, r30
   10576:	e1 e0       	ldi	r30, 0x01	; 1
   10578:	e6 16       	cp	r14, r22
   1057a:	08 f0       	brcs	.+2      	; 0x1057e <arb_sysTimeNow+0xea>
   1057c:	e0 e0       	ldi	r30, 0x00	; 0
   1057e:	fe 0d       	add	r31, r14
   10580:	fa 87       	std	Y+10, r31	; 0x0a
   10582:	f1 e0       	ldi	r31, 0x01	; 1
   10584:	8a 84       	ldd	r8, Y+10	; 0x0a
   10586:	8e 14       	cp	r8, r14
   10588:	08 f0       	brcs	.+2      	; 0x1058c <arb_sysTimeNow+0xf8>
   1058a:	f0 e0       	ldi	r31, 0x00	; 0
   1058c:	ef 2b       	or	r30, r31
   1058e:	f1 e0       	ldi	r31, 0x01	; 1
   10590:	d7 16       	cp	r13, r23
   10592:	08 f0       	brcs	.+2      	; 0x10596 <arb_sysTimeNow+0x102>
   10594:	f0 e0       	ldi	r31, 0x00	; 0
   10596:	ed 0d       	add	r30, r13
   10598:	eb 87       	std	Y+11, r30	; 0x0b
   1059a:	e1 e0       	ldi	r30, 0x01	; 1
   1059c:	ab 85       	ldd	r26, Y+11	; 0x0b
   1059e:	ad 15       	cp	r26, r13
   105a0:	08 f0       	brcs	.+2      	; 0x105a4 <arb_sysTimeNow+0x110>
   105a2:	e0 e0       	ldi	r30, 0x00	; 0
   105a4:	fe 2b       	or	r31, r30
   105a6:	e1 e0       	ldi	r30, 0x01	; 1
   105a8:	c8 16       	cp	r12, r24
   105aa:	08 f0       	brcs	.+2      	; 0x105ae <arb_sysTimeNow+0x11a>
   105ac:	e0 e0       	ldi	r30, 0x00	; 0
   105ae:	fc 0d       	add	r31, r12
   105b0:	fc 87       	std	Y+12, r31	; 0x0c
   105b2:	21 e0       	ldi	r18, 0x01	; 1
   105b4:	fc 15       	cp	r31, r12
   105b6:	08 f0       	brcs	.+2      	; 0x105ba <arb_sysTimeNow+0x126>
   105b8:	20 e0       	ldi	r18, 0x00	; 0
   105ba:	6e 2e       	mov	r6, r30
   105bc:	62 2a       	or	r6, r18
   105be:	69 0c       	add	r6, r9
   105c0:	b0 91 38 25 	lds	r27, 0x2538
   105c4:	be 83       	std	Y+6, r27	; 0x06
   105c6:	e0 91 37 25 	lds	r30, 0x2537
   105ca:	ed 83       	std	Y+5, r30	; 0x05
   105cc:	f0 91 36 25 	lds	r31, 0x2536
   105d0:	fc 83       	std	Y+4, r31	; 0x04
   105d2:	80 91 34 25 	lds	r24, 0x2534
   105d6:	90 91 35 25 	lds	r25, 0x2535
   105da:	8a 83       	std	Y+2, r24	; 0x02
   105dc:	9b 83       	std	Y+3, r25	; 0x03
   105de:	b5 01       	movw	r22, r10
   105e0:	80 e0       	ldi	r24, 0x00	; 0
   105e2:	90 e0       	ldi	r25, 0x00	; 0
   105e4:	66 0f       	add	r22, r22
   105e6:	77 1f       	adc	r23, r23
   105e8:	88 1f       	adc	r24, r24
   105ea:	99 1f       	adc	r25, r25
   105ec:	c0 90 39 25 	lds	r12, 0x2539
   105f0:	d0 90 3a 25 	lds	r13, 0x253A
   105f4:	e0 90 3b 25 	lds	r14, 0x253B
   105f8:	f0 90 3c 25 	lds	r15, 0x253C
   105fc:	c6 0e       	add	r12, r22
   105fe:	d7 1e       	adc	r13, r23
   10600:	e8 1e       	adc	r14, r24
   10602:	f9 1e       	adc	r15, r25
   10604:	29 81       	ldd	r18, Y+1	; 0x01
   10606:	2f bf       	out	0x3f, r18	; 63
   10608:	28 ee       	ldi	r18, 0xE8	; 232
   1060a:	33 e0       	ldi	r19, 0x03	; 3
   1060c:	40 e0       	ldi	r20, 0x00	; 0
   1060e:	50 e0       	ldi	r21, 0x00	; 0
   10610:	0e 94 ec b4 	call	0x169d8	; 0x169d8 <__udivmodsi4>
   10614:	60 e0       	ldi	r22, 0x00	; 0
   10616:	70 e0       	ldi	r23, 0x00	; 0
   10618:	80 e0       	ldi	r24, 0x00	; 0
   1061a:	90 e0       	ldi	r25, 0x00	; 0
   1061c:	90 90 24 25 	lds	r9, 0x2524
   10620:	e0 91 25 25 	lds	r30, 0x2525
   10624:	b0 91 26 25 	lds	r27, 0x2526
   10628:	70 90 27 25 	lds	r7, 0x2527
   1062c:	b0 90 28 25 	lds	r11, 0x2528
   10630:	a0 90 29 25 	lds	r10, 0x2529
   10634:	80 90 2a 25 	lds	r8, 0x252A
   10638:	20 90 2b 25 	lds	r2, 0x252B
   1063c:	92 0e       	add	r9, r18
   1063e:	f1 e0       	ldi	r31, 0x01	; 1
   10640:	92 16       	cp	r9, r18
   10642:	08 f0       	brcs	.+2      	; 0x10646 <arb_sysTimeNow+0x1b2>
   10644:	f0 e0       	ldi	r31, 0x00	; 0
   10646:	e3 0f       	add	r30, r19
   10648:	a1 e0       	ldi	r26, 0x01	; 1
   1064a:	e3 17       	cp	r30, r19
   1064c:	08 f0       	brcs	.+2      	; 0x10650 <arb_sysTimeNow+0x1bc>
   1064e:	a0 e0       	ldi	r26, 0x00	; 0
   10650:	3f 2e       	mov	r3, r31
   10652:	3e 0e       	add	r3, r30
   10654:	f1 e0       	ldi	r31, 0x01	; 1
   10656:	3e 16       	cp	r3, r30
   10658:	08 f0       	brcs	.+2      	; 0x1065c <arb_sysTimeNow+0x1c8>
   1065a:	f0 e0       	ldi	r31, 0x00	; 0
   1065c:	af 2b       	or	r26, r31
   1065e:	e4 2f       	mov	r30, r20
   10660:	eb 0f       	add	r30, r27
   10662:	b1 e0       	ldi	r27, 0x01	; 1
   10664:	e4 17       	cp	r30, r20
   10666:	08 f0       	brcs	.+2      	; 0x1066a <arb_sysTimeNow+0x1d6>
   10668:	b0 e0       	ldi	r27, 0x00	; 0
   1066a:	5a 2e       	mov	r5, r26
   1066c:	5e 0e       	add	r5, r30
   1066e:	f1 e0       	ldi	r31, 0x01	; 1
   10670:	5e 16       	cp	r5, r30
   10672:	08 f0       	brcs	.+2      	; 0x10676 <arb_sysTimeNow+0x1e2>
   10674:	f0 e0       	ldi	r31, 0x00	; 0
   10676:	bf 2b       	or	r27, r31
   10678:	e5 2f       	mov	r30, r21
   1067a:	e7 0d       	add	r30, r7
   1067c:	f1 e0       	ldi	r31, 0x01	; 1
   1067e:	e5 17       	cp	r30, r21
   10680:	08 f0       	brcs	.+2      	; 0x10684 <arb_sysTimeNow+0x1f0>
   10682:	f0 e0       	ldi	r31, 0x00	; 0
   10684:	7b 2e       	mov	r7, r27
   10686:	7e 0e       	add	r7, r30
   10688:	a1 e0       	ldi	r26, 0x01	; 1
   1068a:	7e 16       	cp	r7, r30
   1068c:	08 f0       	brcs	.+2      	; 0x10690 <arb_sysTimeNow+0x1fc>
   1068e:	a0 e0       	ldi	r26, 0x00	; 0
   10690:	fa 2b       	or	r31, r26
   10692:	e1 e0       	ldi	r30, 0x01	; 1
   10694:	b6 16       	cp	r11, r22
   10696:	08 f0       	brcs	.+2      	; 0x1069a <arb_sysTimeNow+0x206>
   10698:	e0 e0       	ldi	r30, 0x00	; 0
   1069a:	fb 0d       	add	r31, r11
   1069c:	fd 87       	std	Y+13, r31	; 0x0d
   1069e:	f1 e0       	ldi	r31, 0x01	; 1
   106a0:	ad 85       	ldd	r26, Y+13	; 0x0d
   106a2:	ab 15       	cp	r26, r11
   106a4:	08 f0       	brcs	.+2      	; 0x106a8 <arb_sysTimeNow+0x214>
   106a6:	f0 e0       	ldi	r31, 0x00	; 0
   106a8:	ef 2b       	or	r30, r31
   106aa:	f1 e0       	ldi	r31, 0x01	; 1
   106ac:	a7 16       	cp	r10, r23
   106ae:	08 f0       	brcs	.+2      	; 0x106b2 <arb_sysTimeNow+0x21e>
   106b0:	f0 e0       	ldi	r31, 0x00	; 0
   106b2:	be 2e       	mov	r11, r30
   106b4:	ba 0c       	add	r11, r10
   106b6:	e1 e0       	ldi	r30, 0x01	; 1
   106b8:	ba 14       	cp	r11, r10
   106ba:	08 f0       	brcs	.+2      	; 0x106be <arb_sysTimeNow+0x22a>
   106bc:	e0 e0       	ldi	r30, 0x00	; 0
   106be:	fe 2b       	or	r31, r30
   106c0:	e1 e0       	ldi	r30, 0x01	; 1
   106c2:	88 16       	cp	r8, r24
   106c4:	08 f0       	brcs	.+2      	; 0x106c8 <arb_sysTimeNow+0x234>
   106c6:	e0 e0       	ldi	r30, 0x00	; 0
   106c8:	9f 2f       	mov	r25, r31
   106ca:	98 0d       	add	r25, r8
   106cc:	81 e0       	ldi	r24, 0x01	; 1
   106ce:	98 15       	cp	r25, r8
   106d0:	08 f0       	brcs	.+2      	; 0x106d4 <arb_sysTimeNow+0x240>
   106d2:	80 e0       	ldi	r24, 0x00	; 0
   106d4:	e8 2b       	or	r30, r24
   106d6:	e2 0d       	add	r30, r2
   106d8:	d8 01       	movw	r26, r16
   106da:	9c 92       	st	X, r9
   106dc:	11 96       	adiw	r26, 0x01	; 1
   106de:	3c 92       	st	X, r3
   106e0:	11 97       	sbiw	r26, 0x01	; 1
   106e2:	12 96       	adiw	r26, 0x02	; 2
   106e4:	5c 92       	st	X, r5
   106e6:	12 97       	sbiw	r26, 0x02	; 2
   106e8:	13 96       	adiw	r26, 0x03	; 3
   106ea:	7c 92       	st	X, r7
   106ec:	13 97       	sbiw	r26, 0x03	; 3
   106ee:	fd 85       	ldd	r31, Y+13	; 0x0d
   106f0:	14 96       	adiw	r26, 0x04	; 4
   106f2:	fc 93       	st	X, r31
   106f4:	14 97       	sbiw	r26, 0x04	; 4
   106f6:	15 96       	adiw	r26, 0x05	; 5
   106f8:	bc 92       	st	X, r11
   106fa:	15 97       	sbiw	r26, 0x05	; 5
   106fc:	16 96       	adiw	r26, 0x06	; 6
   106fe:	9c 93       	st	X, r25
   10700:	16 97       	sbiw	r26, 0x06	; 6
   10702:	17 96       	adiw	r26, 0x07	; 7
   10704:	ec 93       	st	X, r30
   10706:	17 97       	sbiw	r26, 0x07	; 7
   10708:	55 96       	adiw	r26, 0x15	; 21
   1070a:	cd 92       	st	X+, r12
   1070c:	dd 92       	st	X+, r13
   1070e:	ed 92       	st	X+, r14
   10710:	fc 92       	st	X, r15
   10712:	58 97       	sbiw	r26, 0x18	; 24
   10714:	ea 81       	ldd	r30, Y+2	; 0x02
   10716:	fb 81       	ldd	r31, Y+3	; 0x03
   10718:	50 96       	adiw	r26, 0x10	; 16
   1071a:	ed 93       	st	X+, r30
   1071c:	fc 93       	st	X, r31
   1071e:	51 97       	sbiw	r26, 0x11	; 17
   10720:	fc 81       	ldd	r31, Y+4	; 0x04
   10722:	52 96       	adiw	r26, 0x12	; 18
   10724:	fc 93       	st	X, r31
   10726:	52 97       	sbiw	r26, 0x12	; 18
   10728:	8d 80       	ldd	r8, Y+5	; 0x05
   1072a:	53 96       	adiw	r26, 0x13	; 19
   1072c:	8c 92       	st	X, r8
   1072e:	53 97       	sbiw	r26, 0x13	; 19
   10730:	8e 81       	ldd	r24, Y+6	; 0x06
   10732:	54 96       	adiw	r26, 0x14	; 20
   10734:	8c 93       	st	X, r24
   10736:	54 97       	sbiw	r26, 0x14	; 20
   10738:	18 96       	adiw	r26, 0x08	; 8
   1073a:	4c 92       	st	X, r4
   1073c:	18 97       	sbiw	r26, 0x08	; 8
   1073e:	9f 81       	ldd	r25, Y+7	; 0x07
   10740:	19 96       	adiw	r26, 0x09	; 9
   10742:	9c 93       	st	X, r25
   10744:	19 97       	sbiw	r26, 0x09	; 9
   10746:	e8 85       	ldd	r30, Y+8	; 0x08
   10748:	1a 96       	adiw	r26, 0x0a	; 10
   1074a:	ec 93       	st	X, r30
   1074c:	1a 97       	sbiw	r26, 0x0a	; 10
   1074e:	f9 85       	ldd	r31, Y+9	; 0x09
   10750:	1b 96       	adiw	r26, 0x0b	; 11
   10752:	fc 93       	st	X, r31
   10754:	1b 97       	sbiw	r26, 0x0b	; 11
   10756:	8a 84       	ldd	r8, Y+10	; 0x0a
   10758:	1c 96       	adiw	r26, 0x0c	; 12
   1075a:	8c 92       	st	X, r8
   1075c:	1c 97       	sbiw	r26, 0x0c	; 12
   1075e:	8b 85       	ldd	r24, Y+11	; 0x0b
   10760:	1d 96       	adiw	r26, 0x0d	; 13
   10762:	8c 93       	st	X, r24
   10764:	1d 97       	sbiw	r26, 0x0d	; 13
   10766:	9c 85       	ldd	r25, Y+12	; 0x0c
   10768:	1e 96       	adiw	r26, 0x0e	; 14
   1076a:	9c 93       	st	X, r25
   1076c:	1e 97       	sbiw	r26, 0x0e	; 14
   1076e:	1f 96       	adiw	r26, 0x0f	; 15
   10770:	6c 92       	st	X, r6
   10772:	c8 01       	movw	r24, r16
   10774:	2d 96       	adiw	r28, 0x0d	; 13
   10776:	cd bf       	out	0x3d, r28	; 61
   10778:	de bf       	out	0x3e, r29	; 62
   1077a:	cf 91       	pop	r28
   1077c:	df 91       	pop	r29
   1077e:	1f 91       	pop	r17
   10780:	0f 91       	pop	r16
   10782:	ff 90       	pop	r15
   10784:	ef 90       	pop	r14
   10786:	df 90       	pop	r13
   10788:	cf 90       	pop	r12
   1078a:	bf 90       	pop	r11
   1078c:	af 90       	pop	r10
   1078e:	9f 90       	pop	r9
   10790:	8f 90       	pop	r8
   10792:	7f 90       	pop	r7
   10794:	6f 90       	pop	r6
   10796:	5f 90       	pop	r5
   10798:	4f 90       	pop	r4
   1079a:	3f 90       	pop	r3
   1079c:	2f 90       	pop	r2
   1079e:	08 95       	ret

000107a0 <arb_updateSleepingThreads>:
   107a0:	df 93       	push	r29
   107a2:	cf 93       	push	r28
   107a4:	0f 92       	push	r0
   107a6:	0f 92       	push	r0
   107a8:	cd b7       	in	r28, 0x3d	; 61
   107aa:	de b7       	in	r29, 0x3e	; 62
   107ac:	e0 91 ab 22 	lds	r30, 0x22AB
   107b0:	f0 91 ac 22 	lds	r31, 0x22AC
   107b4:	22 81       	ldd	r18, Z+2	; 0x02
   107b6:	33 81       	ldd	r19, Z+3	; 0x03
   107b8:	e0 91 ab 22 	lds	r30, 0x22AB
   107bc:	f0 91 ac 22 	lds	r31, 0x22AC
   107c0:	14 c0       	rjmp	.+40     	; 0x107ea <arb_updateSleepingThreads+0x4a>
   107c2:	e9 81       	ldd	r30, Y+1	; 0x01
   107c4:	fa 81       	ldd	r31, Y+2	; 0x02
   107c6:	01 90       	ld	r0, Z+
   107c8:	f0 81       	ld	r31, Z
   107ca:	e0 2d       	mov	r30, r0
   107cc:	81 81       	ldd	r24, Z+1	; 0x01
   107ce:	83 30       	cpi	r24, 0x03	; 3
   107d0:	41 f4       	brne	.+16     	; 0x107e2 <arb_updateSleepingThreads+0x42>
   107d2:	83 81       	ldd	r24, Z+3	; 0x03
   107d4:	94 81       	ldd	r25, Z+4	; 0x04
   107d6:	01 97       	sbiw	r24, 0x01	; 1
   107d8:	83 83       	std	Z+3, r24	; 0x03
   107da:	94 83       	std	Z+4, r25	; 0x04
   107dc:	89 2b       	or	r24, r25
   107de:	09 f4       	brne	.+2      	; 0x107e2 <arb_updateSleepingThreads+0x42>
   107e0:	11 82       	std	Z+1, r1	; 0x01
   107e2:	21 50       	subi	r18, 0x01	; 1
   107e4:	30 40       	sbci	r19, 0x00	; 0
   107e6:	e9 81       	ldd	r30, Y+1	; 0x01
   107e8:	fa 81       	ldd	r31, Y+2	; 0x02
   107ea:	80 85       	ldd	r24, Z+8	; 0x08
   107ec:	91 85       	ldd	r25, Z+9	; 0x09
   107ee:	89 83       	std	Y+1, r24	; 0x01
   107f0:	9a 83       	std	Y+2, r25	; 0x02
   107f2:	21 15       	cp	r18, r1
   107f4:	31 05       	cpc	r19, r1
   107f6:	29 f7       	brne	.-54     	; 0x107c2 <arb_updateSleepingThreads+0x22>
   107f8:	0f 90       	pop	r0
   107fa:	0f 90       	pop	r0
   107fc:	cf 91       	pop	r28
   107fe:	df 91       	pop	r29
   10800:	08 95       	ret

00010802 <arb_threadCreate>:
   10802:	5f 92       	push	r5
   10804:	6f 92       	push	r6
   10806:	7f 92       	push	r7
   10808:	8f 92       	push	r8
   1080a:	9f 92       	push	r9
   1080c:	af 92       	push	r10
   1080e:	bf 92       	push	r11
   10810:	cf 92       	push	r12
   10812:	df 92       	push	r13
   10814:	ef 92       	push	r14
   10816:	ff 92       	push	r15
   10818:	0f 93       	push	r16
   1081a:	1f 93       	push	r17
   1081c:	df 93       	push	r29
   1081e:	cf 93       	push	r28
   10820:	00 d0       	rcall	.+0      	; 0x10822 <arb_threadCreate+0x20>
   10822:	cd b7       	in	r28, 0x3d	; 61
   10824:	de b7       	in	r29, 0x3e	; 62
   10826:	5c 01       	movw	r10, r24
   10828:	4b 01       	movw	r8, r22
   1082a:	3a 01       	movw	r6, r20
   1082c:	79 01       	movw	r14, r18
   1082e:	50 2e       	mov	r5, r16
   10830:	8f b7       	in	r24, 0x3f	; 63
   10832:	89 83       	std	Y+1, r24	; 0x01
   10834:	f8 94       	cli
   10836:	e0 91 ab 22 	lds	r30, 0x22AB
   1083a:	f0 91 ac 22 	lds	r31, 0x22AC
   1083e:	22 81       	ldd	r18, Z+2	; 0x02
   10840:	33 81       	ldd	r19, Z+3	; 0x03
   10842:	e0 91 ab 22 	lds	r30, 0x22AB
   10846:	f0 91 ac 22 	lds	r31, 0x22AC
   1084a:	11 c0       	rjmp	.+34     	; 0x1086e <arb_threadCreate+0x6c>
   1084c:	ea 81       	ldd	r30, Y+2	; 0x02
   1084e:	fb 81       	ldd	r31, Y+3	; 0x03
   10850:	01 90       	ld	r0, Z+
   10852:	f0 81       	ld	r31, Z
   10854:	e0 2d       	mov	r30, r0
   10856:	82 81       	ldd	r24, Z+2	; 0x02
   10858:	85 15       	cp	r24, r5
   1085a:	29 f4       	brne	.+10     	; 0x10866 <arb_threadCreate+0x64>
   1085c:	89 81       	ldd	r24, Y+1	; 0x01
   1085e:	8f bf       	out	0x3f, r24	; 63
   10860:	28 ef       	ldi	r18, 0xF8	; 248
   10862:	3f ef       	ldi	r19, 0xFF	; 255
   10864:	52 c0       	rjmp	.+164    	; 0x1090a <arb_threadCreate+0x108>
   10866:	21 50       	subi	r18, 0x01	; 1
   10868:	30 40       	sbci	r19, 0x00	; 0
   1086a:	ea 81       	ldd	r30, Y+2	; 0x02
   1086c:	fb 81       	ldd	r31, Y+3	; 0x03
   1086e:	80 85       	ldd	r24, Z+8	; 0x08
   10870:	91 85       	ldd	r25, Z+9	; 0x09
   10872:	8a 83       	std	Y+2, r24	; 0x02
   10874:	9b 83       	std	Y+3, r25	; 0x03
   10876:	21 15       	cp	r18, r1
   10878:	31 05       	cpc	r19, r1
   1087a:	41 f7       	brne	.-48     	; 0x1084c <arb_threadCreate+0x4a>
   1087c:	c7 01       	movw	r24, r14
   1087e:	ca 96       	adiw	r24, 0x3a	; 58
   10880:	0e 94 5e 8b 	call	0x116bc	; 0x116bc <utl_createLink>
   10884:	8a 83       	std	Y+2, r24	; 0x02
   10886:	9b 83       	std	Y+3, r25	; 0x03
   10888:	8a 81       	ldd	r24, Y+2	; 0x02
   1088a:	9b 81       	ldd	r25, Y+3	; 0x03
   1088c:	97 ff       	sbrs	r25, 7
   1088e:	05 c0       	rjmp	.+10     	; 0x1089a <arb_threadCreate+0x98>
   10890:	89 81       	ldd	r24, Y+1	; 0x01
   10892:	8f bf       	out	0x3f, r24	; 63
   10894:	2f ef       	ldi	r18, 0xFF	; 255
   10896:	3f ef       	ldi	r19, 0xFF	; 255
   10898:	38 c0       	rjmp	.+112    	; 0x1090a <arb_threadCreate+0x108>
   1089a:	ea 81       	ldd	r30, Y+2	; 0x02
   1089c:	fb 81       	ldd	r31, Y+3	; 0x03
   1089e:	c0 80       	ld	r12, Z
   108a0:	d1 80       	ldd	r13, Z+1	; 0x01
   108a2:	96 01       	movw	r18, r12
   108a4:	23 5f       	subi	r18, 0xF3	; 243
   108a6:	3f 4f       	sbci	r19, 0xFF	; 255
   108a8:	f6 01       	movw	r30, r12
   108aa:	23 87       	std	Z+11, r18	; 0x0b
   108ac:	34 87       	std	Z+12, r19	; 0x0c
   108ae:	8d ea       	ldi	r24, 0xAD	; 173
   108b0:	9e ed       	ldi	r25, 0xDE	; 222
   108b2:	85 87       	std	Z+13, r24	; 0x0d
   108b4:	96 87       	std	Z+14, r25	; 0x0e
   108b6:	25 83       	std	Z+5, r18	; 0x05
   108b8:	36 83       	std	Z+6, r19	; 0x06
   108ba:	87 01       	movw	r16, r14
   108bc:	04 5d       	subi	r16, 0xD4	; 212
   108be:	1f 4f       	sbci	r17, 0xFF	; 255
   108c0:	02 0f       	add	r16, r18
   108c2:	13 1f       	adc	r17, r19
   108c4:	07 83       	std	Z+7, r16	; 0x07
   108c6:	10 87       	std	Z+8, r17	; 0x08
   108c8:	52 82       	std	Z+2, r5	; 0x02
   108ca:	84 e0       	ldi	r24, 0x04	; 4
   108cc:	81 83       	std	Z+1, r24	; 0x01
   108ce:	13 82       	std	Z+3, r1	; 0x03
   108d0:	14 82       	std	Z+4, r1	; 0x04
   108d2:	39 96       	adiw	r30, 0x09	; 9
   108d4:	c5 01       	movw	r24, r10
   108d6:	b4 01       	movw	r22, r8
   108d8:	a3 01       	movw	r20, r6
   108da:	98 01       	movw	r18, r16
   108dc:	7f 01       	movw	r14, r30
   108de:	0e 94 ec 85 	call	0x10bd8	; 0x10bd8 <hal_initThreadStack>
   108e2:	e0 91 ab 22 	lds	r30, 0x22AB
   108e6:	f0 91 ac 22 	lds	r31, 0x22AC
   108ea:	82 81       	ldd	r24, Z+2	; 0x02
   108ec:	f6 01       	movw	r30, r12
   108ee:	80 83       	st	Z, r24
   108f0:	80 91 ab 22 	lds	r24, 0x22AB
   108f4:	90 91 ac 22 	lds	r25, 0x22AC
   108f8:	6a 81       	ldd	r22, Y+2	; 0x02
   108fa:	7b 81       	ldd	r23, Y+3	; 0x03
   108fc:	41 e0       	ldi	r20, 0x01	; 1
   108fe:	0e 94 6e 89 	call	0x112dc	; 0x112dc <utl_insertLink>
   10902:	89 81       	ldd	r24, Y+1	; 0x01
   10904:	8f bf       	out	0x3f, r24	; 63
   10906:	2a 81       	ldd	r18, Y+2	; 0x02
   10908:	3b 81       	ldd	r19, Y+3	; 0x03
   1090a:	c9 01       	movw	r24, r18
   1090c:	23 96       	adiw	r28, 0x03	; 3
   1090e:	cd bf       	out	0x3d, r28	; 61
   10910:	de bf       	out	0x3e, r29	; 62
   10912:	cf 91       	pop	r28
   10914:	df 91       	pop	r29
   10916:	1f 91       	pop	r17
   10918:	0f 91       	pop	r16
   1091a:	ff 90       	pop	r15
   1091c:	ef 90       	pop	r14
   1091e:	df 90       	pop	r13
   10920:	cf 90       	pop	r12
   10922:	bf 90       	pop	r11
   10924:	af 90       	pop	r10
   10926:	9f 90       	pop	r9
   10928:	8f 90       	pop	r8
   1092a:	7f 90       	pop	r7
   1092c:	6f 90       	pop	r6
   1092e:	5f 90       	pop	r5
   10930:	08 95       	ret

00010932 <arb_yieldFromSleepIntsOn>:
   10932:	0f 92       	push	r0
   10934:	0f b6       	in	r0, 0x3f	; 63
   10936:	0f 93       	push	r16
   10938:	00 2d       	mov	r16, r0
   1093a:	00 68       	ori	r16, 0x80	; 128
   1093c:	00 2e       	mov	r0, r16
   1093e:	0f 91       	pop	r16
   10940:	0f 92       	push	r0
   10942:	1f 92       	push	r1
   10944:	11 24       	eor	r1, r1
   10946:	2f 92       	push	r2
   10948:	3f 92       	push	r3
   1094a:	4f 92       	push	r4
   1094c:	5f 92       	push	r5
   1094e:	6f 92       	push	r6
   10950:	7f 92       	push	r7
   10952:	8f 92       	push	r8
   10954:	9f 92       	push	r9
   10956:	af 92       	push	r10
   10958:	bf 92       	push	r11
   1095a:	cf 92       	push	r12
   1095c:	df 92       	push	r13
   1095e:	ef 92       	push	r14
   10960:	ff 92       	push	r15
   10962:	0f 93       	push	r16
   10964:	1f 93       	push	r17
   10966:	2f 93       	push	r18
   10968:	3f 93       	push	r19
   1096a:	4f 93       	push	r20
   1096c:	5f 93       	push	r21
   1096e:	6f 93       	push	r22
   10970:	7f 93       	push	r23
   10972:	8f 93       	push	r24
   10974:	9f 93       	push	r25
   10976:	af 93       	push	r26
   10978:	bf 93       	push	r27
   1097a:	cf 93       	push	r28
   1097c:	df 93       	push	r29
   1097e:	ef 93       	push	r30
   10980:	ff 93       	push	r31
   10982:	e0 91 ab 22 	lds	r30, 0x22AB
   10986:	f0 91 ac 22 	lds	r31, 0x22AC
   1098a:	06 80       	ldd	r0, Z+6	; 0x06
   1098c:	f7 81       	ldd	r31, Z+7	; 0x07
   1098e:	e0 2d       	mov	r30, r0
   10990:	01 90       	ld	r0, Z+
   10992:	f0 81       	ld	r31, Z
   10994:	e0 2d       	mov	r30, r0
   10996:	e0 93 e8 27 	sts	0x27E8, r30
   1099a:	f0 93 e9 27 	sts	0x27E9, r31
   1099e:	2d b7       	in	r18, 0x3d	; 61
   109a0:	4e b7       	in	r20, 0x3e	; 62
   109a2:	94 2f       	mov	r25, r20
   109a4:	80 e0       	ldi	r24, 0x00	; 0
   109a6:	30 e0       	ldi	r19, 0x00	; 0
   109a8:	82 2b       	or	r24, r18
   109aa:	93 2b       	or	r25, r19
   109ac:	81 87       	std	Z+9, r24	; 0x09
   109ae:	92 87       	std	Z+10, r25	; 0x0a
   109b0:	8f ef       	ldi	r24, 0xFF	; 255
   109b2:	8d bf       	out	0x3d, r24	; 61
   109b4:	8f e3       	ldi	r24, 0x3F	; 63
   109b6:	8e bf       	out	0x3e, r24	; 62
   109b8:	c0 91 3d 00 	lds	r28, 0x003D
   109bc:	d0 91 3e 00 	lds	r29, 0x003E
   109c0:	e0 91 ab 22 	lds	r30, 0x22AB
   109c4:	f0 91 ac 22 	lds	r31, 0x22AC
   109c8:	06 80       	ldd	r0, Z+6	; 0x06
   109ca:	f7 81       	ldd	r31, Z+7	; 0x07
   109cc:	e0 2d       	mov	r30, r0
   109ce:	01 90       	ld	r0, Z+
   109d0:	f0 81       	ld	r31, Z
   109d2:	e0 2d       	mov	r30, r0
   109d4:	e0 93 42 25 	sts	0x2542, r30
   109d8:	f0 93 43 25 	sts	0x2543, r31
   109dc:	03 84       	ldd	r0, Z+11	; 0x0b
   109de:	f4 85       	ldd	r31, Z+12	; 0x0c
   109e0:	e0 2d       	mov	r30, r0
   109e2:	80 81       	ld	r24, Z
   109e4:	91 81       	ldd	r25, Z+1	; 0x01
   109e6:	8d 5a       	subi	r24, 0xAD	; 173
   109e8:	9e 4d       	sbci	r25, 0xDE	; 222
   109ea:	11 f0       	breq	.+4      	; 0x109f0 <arb_yieldFromSleepIntsOn+0xbe>
   109ec:	0e 94 38 86 	call	0x10c70	; 0x10c70 <arb_stackOverflow>
   109f0:	e0 91 e6 27 	lds	r30, 0x27E6
   109f4:	f0 91 e7 27 	lds	r31, 0x27E7
   109f8:	19 95       	eicall
   109fa:	e0 91 ab 22 	lds	r30, 0x22AB
   109fe:	f0 91 ac 22 	lds	r31, 0x22AC
   10a02:	06 80       	ldd	r0, Z+6	; 0x06
   10a04:	f7 81       	ldd	r31, Z+7	; 0x07
   10a06:	e0 2d       	mov	r30, r0
   10a08:	01 90       	ld	r0, Z+
   10a0a:	f0 81       	ld	r31, Z
   10a0c:	e0 2d       	mov	r30, r0
   10a0e:	e0 93 e8 27 	sts	0x27E8, r30
   10a12:	f0 93 e9 27 	sts	0x27E9, r31
   10a16:	81 85       	ldd	r24, Z+9	; 0x09
   10a18:	92 85       	ldd	r25, Z+10	; 0x0a
   10a1a:	8d bf       	out	0x3d, r24	; 61
   10a1c:	9e bf       	out	0x3e, r25	; 62
   10a1e:	ff 91       	pop	r31
   10a20:	ef 91       	pop	r30
   10a22:	df 91       	pop	r29
   10a24:	cf 91       	pop	r28
   10a26:	bf 91       	pop	r27
   10a28:	af 91       	pop	r26
   10a2a:	9f 91       	pop	r25
   10a2c:	8f 91       	pop	r24
   10a2e:	7f 91       	pop	r23
   10a30:	6f 91       	pop	r22
   10a32:	5f 91       	pop	r21
   10a34:	4f 91       	pop	r20
   10a36:	3f 91       	pop	r19
   10a38:	2f 91       	pop	r18
   10a3a:	1f 91       	pop	r17
   10a3c:	0f 91       	pop	r16
   10a3e:	ff 90       	pop	r15
   10a40:	ef 90       	pop	r14
   10a42:	df 90       	pop	r13
   10a44:	cf 90       	pop	r12
   10a46:	bf 90       	pop	r11
   10a48:	af 90       	pop	r10
   10a4a:	9f 90       	pop	r9
   10a4c:	8f 90       	pop	r8
   10a4e:	7f 90       	pop	r7
   10a50:	6f 90       	pop	r6
   10a52:	5f 90       	pop	r5
   10a54:	4f 90       	pop	r4
   10a56:	3f 90       	pop	r3
   10a58:	2f 90       	pop	r2
   10a5a:	1f 90       	pop	r1
   10a5c:	0f 90       	pop	r0
   10a5e:	0f be       	out	0x3f, r0	; 63
   10a60:	0f 90       	pop	r0
   10a62:	08 95       	ret

00010a64 <arb_yieldFromSleepIntsOff>:
   10a64:	0f 92       	push	r0
   10a66:	0f b6       	in	r0, 0x3f	; 63
   10a68:	0f 92       	push	r0
   10a6a:	1f 92       	push	r1
   10a6c:	11 24       	eor	r1, r1
   10a6e:	2f 92       	push	r2
   10a70:	3f 92       	push	r3
   10a72:	4f 92       	push	r4
   10a74:	5f 92       	push	r5
   10a76:	6f 92       	push	r6
   10a78:	7f 92       	push	r7
   10a7a:	8f 92       	push	r8
   10a7c:	9f 92       	push	r9
   10a7e:	af 92       	push	r10
   10a80:	bf 92       	push	r11
   10a82:	cf 92       	push	r12
   10a84:	df 92       	push	r13
   10a86:	ef 92       	push	r14
   10a88:	ff 92       	push	r15
   10a8a:	0f 93       	push	r16
   10a8c:	1f 93       	push	r17
   10a8e:	2f 93       	push	r18
   10a90:	3f 93       	push	r19
   10a92:	4f 93       	push	r20
   10a94:	5f 93       	push	r21
   10a96:	6f 93       	push	r22
   10a98:	7f 93       	push	r23
   10a9a:	8f 93       	push	r24
   10a9c:	9f 93       	push	r25
   10a9e:	af 93       	push	r26
   10aa0:	bf 93       	push	r27
   10aa2:	cf 93       	push	r28
   10aa4:	df 93       	push	r29
   10aa6:	ef 93       	push	r30
   10aa8:	ff 93       	push	r31
   10aaa:	e0 91 ab 22 	lds	r30, 0x22AB
   10aae:	f0 91 ac 22 	lds	r31, 0x22AC
   10ab2:	06 80       	ldd	r0, Z+6	; 0x06
   10ab4:	f7 81       	ldd	r31, Z+7	; 0x07
   10ab6:	e0 2d       	mov	r30, r0
   10ab8:	01 90       	ld	r0, Z+
   10aba:	f0 81       	ld	r31, Z
   10abc:	e0 2d       	mov	r30, r0
   10abe:	e0 93 e8 27 	sts	0x27E8, r30
   10ac2:	f0 93 e9 27 	sts	0x27E9, r31
   10ac6:	2d b7       	in	r18, 0x3d	; 61
   10ac8:	4e b7       	in	r20, 0x3e	; 62
   10aca:	94 2f       	mov	r25, r20
   10acc:	80 e0       	ldi	r24, 0x00	; 0
   10ace:	30 e0       	ldi	r19, 0x00	; 0
   10ad0:	82 2b       	or	r24, r18
   10ad2:	93 2b       	or	r25, r19
   10ad4:	81 87       	std	Z+9, r24	; 0x09
   10ad6:	92 87       	std	Z+10, r25	; 0x0a
   10ad8:	8f ef       	ldi	r24, 0xFF	; 255
   10ada:	8d bf       	out	0x3d, r24	; 61
   10adc:	8f e3       	ldi	r24, 0x3F	; 63
   10ade:	8e bf       	out	0x3e, r24	; 62
   10ae0:	c0 91 3d 00 	lds	r28, 0x003D
   10ae4:	d0 91 3e 00 	lds	r29, 0x003E
   10ae8:	e0 91 ab 22 	lds	r30, 0x22AB
   10aec:	f0 91 ac 22 	lds	r31, 0x22AC
   10af0:	06 80       	ldd	r0, Z+6	; 0x06
   10af2:	f7 81       	ldd	r31, Z+7	; 0x07
   10af4:	e0 2d       	mov	r30, r0
   10af6:	01 90       	ld	r0, Z+
   10af8:	f0 81       	ld	r31, Z
   10afa:	e0 2d       	mov	r30, r0
   10afc:	e0 93 42 25 	sts	0x2542, r30
   10b00:	f0 93 43 25 	sts	0x2543, r31
   10b04:	03 84       	ldd	r0, Z+11	; 0x0b
   10b06:	f4 85       	ldd	r31, Z+12	; 0x0c
   10b08:	e0 2d       	mov	r30, r0
   10b0a:	80 81       	ld	r24, Z
   10b0c:	91 81       	ldd	r25, Z+1	; 0x01
   10b0e:	8d 5a       	subi	r24, 0xAD	; 173
   10b10:	9e 4d       	sbci	r25, 0xDE	; 222
   10b12:	11 f0       	breq	.+4      	; 0x10b18 <arb_yieldFromSleepIntsOff+0xb4>
   10b14:	0e 94 38 86 	call	0x10c70	; 0x10c70 <arb_stackOverflow>
   10b18:	e0 91 e6 27 	lds	r30, 0x27E6
   10b1c:	f0 91 e7 27 	lds	r31, 0x27E7
   10b20:	19 95       	eicall
   10b22:	e0 91 ab 22 	lds	r30, 0x22AB
   10b26:	f0 91 ac 22 	lds	r31, 0x22AC
   10b2a:	06 80       	ldd	r0, Z+6	; 0x06
   10b2c:	f7 81       	ldd	r31, Z+7	; 0x07
   10b2e:	e0 2d       	mov	r30, r0
   10b30:	01 90       	ld	r0, Z+
   10b32:	f0 81       	ld	r31, Z
   10b34:	e0 2d       	mov	r30, r0
   10b36:	e0 93 e8 27 	sts	0x27E8, r30
   10b3a:	f0 93 e9 27 	sts	0x27E9, r31
   10b3e:	81 85       	ldd	r24, Z+9	; 0x09
   10b40:	92 85       	ldd	r25, Z+10	; 0x0a
   10b42:	8d bf       	out	0x3d, r24	; 61
   10b44:	9e bf       	out	0x3e, r25	; 62
   10b46:	ff 91       	pop	r31
   10b48:	ef 91       	pop	r30
   10b4a:	df 91       	pop	r29
   10b4c:	cf 91       	pop	r28
   10b4e:	bf 91       	pop	r27
   10b50:	af 91       	pop	r26
   10b52:	9f 91       	pop	r25
   10b54:	8f 91       	pop	r24
   10b56:	7f 91       	pop	r23
   10b58:	6f 91       	pop	r22
   10b5a:	5f 91       	pop	r21
   10b5c:	4f 91       	pop	r20
   10b5e:	3f 91       	pop	r19
   10b60:	2f 91       	pop	r18
   10b62:	1f 91       	pop	r17
   10b64:	0f 91       	pop	r16
   10b66:	ff 90       	pop	r15
   10b68:	ef 90       	pop	r14
   10b6a:	df 90       	pop	r13
   10b6c:	cf 90       	pop	r12
   10b6e:	bf 90       	pop	r11
   10b70:	af 90       	pop	r10
   10b72:	9f 90       	pop	r9
   10b74:	8f 90       	pop	r8
   10b76:	7f 90       	pop	r7
   10b78:	6f 90       	pop	r6
   10b7a:	5f 90       	pop	r5
   10b7c:	4f 90       	pop	r4
   10b7e:	3f 90       	pop	r3
   10b80:	2f 90       	pop	r2
   10b82:	1f 90       	pop	r1
   10b84:	0f 90       	pop	r0
   10b86:	0f be       	out	0x3f, r0	; 63
   10b88:	0f 90       	pop	r0
   10b8a:	08 95       	ret

00010b8c <arb_sleep>:
   10b8c:	0f b6       	in	r0, 0x3f	; 63
   10b8e:	07 fe       	sbrs	r0, 7
   10b90:	12 c0       	rjmp	.+36     	; 0x10bb6 <arb_sleep+0x2a>
   10b92:	f8 94       	cli
   10b94:	e0 91 ab 22 	lds	r30, 0x22AB
   10b98:	f0 91 ac 22 	lds	r31, 0x22AC
   10b9c:	06 80       	ldd	r0, Z+6	; 0x06
   10b9e:	f7 81       	ldd	r31, Z+7	; 0x07
   10ba0:	e0 2d       	mov	r30, r0
   10ba2:	01 90       	ld	r0, Z+
   10ba4:	f0 81       	ld	r31, Z
   10ba6:	e0 2d       	mov	r30, r0
   10ba8:	83 83       	std	Z+3, r24	; 0x03
   10baa:	94 83       	std	Z+4, r25	; 0x04
   10bac:	83 e0       	ldi	r24, 0x03	; 3
   10bae:	81 83       	std	Z+1, r24	; 0x01
   10bb0:	0e 94 99 84 	call	0x10932	; 0x10932 <arb_yieldFromSleepIntsOn>
   10bb4:	08 95       	ret
   10bb6:	e0 91 ab 22 	lds	r30, 0x22AB
   10bba:	f0 91 ac 22 	lds	r31, 0x22AC
   10bbe:	06 80       	ldd	r0, Z+6	; 0x06
   10bc0:	f7 81       	ldd	r31, Z+7	; 0x07
   10bc2:	e0 2d       	mov	r30, r0
   10bc4:	01 90       	ld	r0, Z+
   10bc6:	f0 81       	ld	r31, Z
   10bc8:	e0 2d       	mov	r30, r0
   10bca:	83 83       	std	Z+3, r24	; 0x03
   10bcc:	94 83       	std	Z+4, r25	; 0x04
   10bce:	83 e0       	ldi	r24, 0x03	; 3
   10bd0:	81 83       	std	Z+1, r24	; 0x01
   10bd2:	0e 94 32 85 	call	0x10a64	; 0x10a64 <arb_yieldFromSleepIntsOff>
   10bd6:	08 95       	ret

00010bd8 <hal_initThreadStack>:
   10bd8:	cf 92       	push	r12
   10bda:	df 92       	push	r13
   10bdc:	ef 92       	push	r14
   10bde:	ff 92       	push	r15
   10be0:	0f 93       	push	r16
   10be2:	1f 93       	push	r17
   10be4:	f9 01       	movw	r30, r18
   10be6:	97 01       	movw	r18, r14
   10be8:	a0 e0       	ldi	r26, 0x00	; 0
   10bea:	b0 e0       	ldi	r27, 0x00	; 0
   10bec:	ba 2f       	mov	r27, r26
   10bee:	a9 2f       	mov	r26, r25
   10bf0:	98 2f       	mov	r25, r24
   10bf2:	88 27       	eor	r24, r24
   10bf4:	80 83       	st	Z, r24
   10bf6:	c9 2e       	mov	r12, r25
   10bf8:	da 2e       	mov	r13, r26
   10bfa:	eb 2e       	mov	r14, r27
   10bfc:	ff 24       	eor	r15, r15
   10bfe:	c2 92       	st	-Z, r12
   10c00:	cd 01       	movw	r24, r26
   10c02:	aa 27       	eor	r26, r26
   10c04:	bb 27       	eor	r27, r27
   10c06:	82 93       	st	-Z, r24
   10c08:	12 92       	st	-Z, r1
   10c0a:	12 92       	st	-Z, r1
   10c0c:	80 e8       	ldi	r24, 0x80	; 128
   10c0e:	82 93       	st	-Z, r24
   10c10:	12 92       	st	-Z, r1
   10c12:	12 92       	st	-Z, r1
   10c14:	12 92       	st	-Z, r1
   10c16:	12 92       	st	-Z, r1
   10c18:	12 92       	st	-Z, r1
   10c1a:	12 92       	st	-Z, r1
   10c1c:	12 92       	st	-Z, r1
   10c1e:	12 92       	st	-Z, r1
   10c20:	12 92       	st	-Z, r1
   10c22:	12 92       	st	-Z, r1
   10c24:	12 92       	st	-Z, r1
   10c26:	12 92       	st	-Z, r1
   10c28:	12 92       	st	-Z, r1
   10c2a:	12 92       	st	-Z, r1
   10c2c:	12 92       	st	-Z, r1
   10c2e:	12 92       	st	-Z, r1
   10c30:	12 92       	st	-Z, r1
   10c32:	12 92       	st	-Z, r1
   10c34:	12 92       	st	-Z, r1
   10c36:	12 92       	st	-Z, r1
   10c38:	12 92       	st	-Z, r1
   10c3a:	42 93       	st	-Z, r20
   10c3c:	45 2f       	mov	r20, r21
   10c3e:	55 0f       	add	r21, r21
   10c40:	55 0b       	sbc	r21, r21
   10c42:	42 93       	st	-Z, r20
   10c44:	62 93       	st	-Z, r22
   10c46:	67 2f       	mov	r22, r23
   10c48:	77 0f       	add	r23, r23
   10c4a:	77 0b       	sbc	r23, r23
   10c4c:	62 93       	st	-Z, r22
   10c4e:	12 92       	st	-Z, r1
   10c50:	12 92       	st	-Z, r1
   10c52:	02 93       	st	-Z, r16
   10c54:	12 93       	st	-Z, r17
   10c56:	12 92       	st	-Z, r1
   10c58:	12 92       	st	-Z, r1
   10c5a:	31 97       	sbiw	r30, 0x01	; 1
   10c5c:	d9 01       	movw	r26, r18
   10c5e:	ed 93       	st	X+, r30
   10c60:	fc 93       	st	X, r31
   10c62:	1f 91       	pop	r17
   10c64:	0f 91       	pop	r16
   10c66:	ff 90       	pop	r15
   10c68:	ef 90       	pop	r14
   10c6a:	df 90       	pop	r13
   10c6c:	cf 90       	pop	r12
   10c6e:	08 95       	ret

00010c70 <arb_stackOverflow>:
   10c70:	0f 93       	push	r16
   10c72:	1f 93       	push	r17
   10c74:	df 93       	push	r29
   10c76:	cf 93       	push	r28
   10c78:	0f 92       	push	r0
   10c7a:	cd b7       	in	r28, 0x3d	; 61
   10c7c:	de b7       	in	r29, 0x3e	; 62
   10c7e:	8f b7       	in	r24, 0x3f	; 63
   10c80:	89 83       	std	Y+1, r24	; 0x01
   10c82:	f8 94       	cli
   10c84:	84 e0       	ldi	r24, 0x04	; 4
   10c86:	0e 94 9e 70 	call	0xe13c	; 0xe13c <arb_setPrintfDbgLevel>
   10c8a:	00 d0       	rcall	.+0      	; 0x10c8c <arb_stackOverflow+0x1c>
   10c8c:	00 d0       	rcall	.+0      	; 0x10c8e <arb_stackOverflow+0x1e>
   10c8e:	ad b7       	in	r26, 0x3d	; 61
   10c90:	be b7       	in	r27, 0x3e	; 62
   10c92:	11 96       	adiw	r26, 0x01	; 1
   10c94:	04 e4       	ldi	r16, 0x44	; 68
   10c96:	15 e2       	ldi	r17, 0x25	; 37
   10c98:	ed b7       	in	r30, 0x3d	; 61
   10c9a:	fe b7       	in	r31, 0x3e	; 62
   10c9c:	01 83       	std	Z+1, r16	; 0x01
   10c9e:	12 83       	std	Z+2, r17	; 0x02
   10ca0:	8d ea       	ldi	r24, 0xAD	; 173
   10ca2:	92 e2       	ldi	r25, 0x22	; 34
   10ca4:	12 96       	adiw	r26, 0x02	; 2
   10ca6:	8d 93       	st	X+, r24
   10ca8:	9c 93       	st	X, r25
   10caa:	13 97       	sbiw	r26, 0x03	; 3
   10cac:	e0 91 0c 25 	lds	r30, 0x250C
   10cb0:	f0 91 0d 25 	lds	r31, 0x250D
   10cb4:	80 81       	ld	r24, Z
   10cb6:	14 96       	adiw	r26, 0x04	; 4
   10cb8:	8c 93       	st	X, r24
   10cba:	14 97       	sbiw	r26, 0x04	; 4
   10cbc:	15 96       	adiw	r26, 0x05	; 5
   10cbe:	1c 92       	st	X, r1
   10cc0:	0e 94 6a b2 	call	0x164d4	; 0x164d4 <sprintf>
   10cc4:	8d b7       	in	r24, 0x3d	; 61
   10cc6:	9e b7       	in	r25, 0x3e	; 62
   10cc8:	06 96       	adiw	r24, 0x06	; 6
   10cca:	8d bf       	out	0x3d, r24	; 61
   10ccc:	9e bf       	out	0x3e, r25	; 62
   10cce:	84 e4       	ldi	r24, 0x44	; 68
   10cd0:	b8 01       	movw	r22, r16
   10cd2:	0e 94 2d 72 	call	0xe45a	; 0xe45a <arb_printf>
   10cd6:	0e 94 1c 71 	call	0xe238	; 0xe238 <arb_printfFlushBuf>
   10cda:	80 e0       	ldi	r24, 0x00	; 0
   10cdc:	90 e0       	ldi	r25, 0x00	; 0
   10cde:	0e 94 ac b0 	call	0x16158	; 0x16158 <exit>

00010ce2 <arb_idleInit>:
   10ce2:	0f 93       	push	r16
   10ce4:	9c 01       	movw	r18, r24
   10ce6:	06 2f       	mov	r16, r22
   10ce8:	88 ea       	ldi	r24, 0xA8	; 168
   10cea:	96 e8       	ldi	r25, 0x86	; 134
   10cec:	6a ea       	ldi	r22, 0xAA	; 170
   10cee:	70 e0       	ldi	r23, 0x00	; 0
   10cf0:	4b eb       	ldi	r20, 0xBB	; 187
   10cf2:	50 e0       	ldi	r21, 0x00	; 0
   10cf4:	0e 94 01 84 	call	0x10802	; 0x10802 <arb_threadCreate>
   10cf8:	80 93 62 25 	sts	0x2562, r24
   10cfc:	90 93 63 25 	sts	0x2563, r25
   10d00:	80 91 62 25 	lds	r24, 0x2562
   10d04:	90 91 63 25 	lds	r25, 0x2563
   10d08:	97 fd       	sbrc	r25, 7
   10d0a:	18 c0       	rjmp	.+48     	; 0x10d3c <arb_idleInit+0x5a>
   10d0c:	0e 94 17 61 	call	0xc22e	; 0xc22e <hal_requestWdAccess>
   10d10:	80 93 64 25 	sts	0x2564, r24
   10d14:	90 93 65 25 	sts	0x2565, r25
   10d18:	80 91 64 25 	lds	r24, 0x2564
   10d1c:	90 91 65 25 	lds	r25, 0x2565
   10d20:	97 fd       	sbrc	r25, 7
   10d22:	11 c0       	rjmp	.+34     	; 0x10d46 <arb_idleInit+0x64>
   10d24:	80 91 64 25 	lds	r24, 0x2564
   10d28:	90 91 65 25 	lds	r25, 0x2565
   10d2c:	40 e4       	ldi	r20, 0x40	; 64
   10d2e:	5f e1       	ldi	r21, 0x1F	; 31
   10d30:	60 e0       	ldi	r22, 0x00	; 0
   10d32:	70 e0       	ldi	r23, 0x00	; 0
   10d34:	0e 94 86 61 	call	0xc30c	; 0xc30c <hal_configureWd>
   10d38:	88 23       	and	r24, r24
   10d3a:	29 f4       	brne	.+10     	; 0x10d46 <arb_idleInit+0x64>
   10d3c:	20 91 62 25 	lds	r18, 0x2562
   10d40:	30 91 63 25 	lds	r19, 0x2563
   10d44:	02 c0       	rjmp	.+4      	; 0x10d4a <arb_idleInit+0x68>
   10d46:	26 ef       	ldi	r18, 0xF6	; 246
   10d48:	3f ef       	ldi	r19, 0xFF	; 255
   10d4a:	c9 01       	movw	r24, r18
   10d4c:	0f 91       	pop	r16
   10d4e:	08 95       	ret

00010d50 <arb_idle>:
   10d50:	2f 92       	push	r2
   10d52:	3f 92       	push	r3
   10d54:	4f 92       	push	r4
   10d56:	5f 92       	push	r5
   10d58:	6f 92       	push	r6
   10d5a:	7f 92       	push	r7
   10d5c:	8f 92       	push	r8
   10d5e:	9f 92       	push	r9
   10d60:	af 92       	push	r10
   10d62:	bf 92       	push	r11
   10d64:	cf 92       	push	r12
   10d66:	df 92       	push	r13
   10d68:	ef 92       	push	r14
   10d6a:	ff 92       	push	r15
   10d6c:	0f 93       	push	r16
   10d6e:	1f 93       	push	r17
   10d70:	df 93       	push	r29
   10d72:	cf 93       	push	r28
   10d74:	cd b7       	in	r28, 0x3d	; 61
   10d76:	de b7       	in	r29, 0x3e	; 62
   10d78:	c8 56       	subi	r28, 0x68	; 104
   10d7a:	d0 40       	sbci	r29, 0x00	; 0
   10d7c:	cd bf       	out	0x3d, r28	; 61
   10d7e:	de bf       	out	0x3e, r29	; 62
   10d80:	80 91 64 25 	lds	r24, 0x2564
   10d84:	90 91 65 25 	lds	r25, 0x2565
   10d88:	0e 94 4e 62 	call	0xc49c	; 0xc49c <hal_wdEnable>
   10d8c:	a6 96       	adiw	r28, 0x26	; 38
   10d8e:	1f ae       	sts	0xbf, r17
   10d90:	a6 97       	sbiw	r28, 0x26	; 38
   10d92:	a7 96       	adiw	r28, 0x27	; 39
   10d94:	1f ae       	sts	0xbf, r17
   10d96:	a7 97       	sbiw	r28, 0x27	; 39
   10d98:	a8 96       	adiw	r28, 0x28	; 40
   10d9a:	1f ae       	sts	0xbf, r17
   10d9c:	a8 97       	sbiw	r28, 0x28	; 40
   10d9e:	a9 96       	adiw	r28, 0x29	; 41
   10da0:	1f ae       	sts	0xbf, r17
   10da2:	a9 97       	sbiw	r28, 0x29	; 41
   10da4:	22 24       	eor	r2, r2
   10da6:	33 24       	eor	r3, r3
   10da8:	44 24       	eor	r4, r4
   10daa:	55 24       	eor	r5, r5
   10dac:	66 24       	eor	r6, r6
   10dae:	77 24       	eor	r7, r7
   10db0:	43 01       	movw	r8, r6
   10db2:	0e 94 31 80 	call	0x10062	; 0x10062 <arb_sysMsecNow>
   10db6:	a6 96       	adiw	r28, 0x26	; 38
   10db8:	af ac       	sts	0xaf, r26
   10dba:	a6 97       	sbiw	r28, 0x26	; 38
   10dbc:	a7 96       	adiw	r28, 0x27	; 39
   10dbe:	bf ac       	sts	0xaf, r27
   10dc0:	a7 97       	sbiw	r28, 0x27	; 39
   10dc2:	a8 96       	adiw	r28, 0x28	; 40
   10dc4:	cf ac       	sts	0xaf, r28
   10dc6:	a8 97       	sbiw	r28, 0x28	; 40
   10dc8:	a9 96       	adiw	r28, 0x29	; 41
   10dca:	df ac       	sts	0xaf, r29
   10dcc:	a9 97       	sbiw	r28, 0x29	; 41
   10dce:	71 01       	movw	r14, r2
   10dd0:	82 01       	movw	r16, r4
   10dd2:	0e 94 42 80 	call	0x10084	; 0x10084 <arb_sysMsecDelta>
   10dd6:	99 23       	and	r25, r25
   10dd8:	91 f4       	brne	.+36     	; 0x10dfe <arb_idle+0xae>
   10dda:	88 23       	and	r24, r24
   10ddc:	81 f4       	brne	.+32     	; 0x10dfe <arb_idle+0xae>
   10dde:	77 23       	and	r23, r23
   10de0:	71 f4       	brne	.+28     	; 0x10dfe <arb_idle+0xae>
   10de2:	66 23       	and	r22, r22
   10de4:	61 f4       	brne	.+24     	; 0x10dfe <arb_idle+0xae>
   10de6:	55 23       	and	r21, r21
   10de8:	51 f4       	brne	.+20     	; 0x10dfe <arb_idle+0xae>
   10dea:	44 23       	and	r20, r20
   10dec:	41 f4       	brne	.+16     	; 0x10dfe <arb_idle+0xae>
   10dee:	38 30       	cpi	r19, 0x08	; 8
   10df0:	30 f4       	brcc	.+12     	; 0x10dfe <arb_idle+0xae>
   10df2:	37 30       	cpi	r19, 0x07	; 7
   10df4:	09 f0       	breq	.+2      	; 0x10df8 <arb_idle+0xa8>
   10df6:	45 c0       	rjmp	.+138    	; 0x10e82 <arb_idle+0x132>
   10df8:	20 3d       	cpi	r18, 0xD0	; 208
   10dfa:	08 f4       	brcc	.+2      	; 0x10dfe <arb_idle+0xae>
   10dfc:	42 c0       	rjmp	.+132    	; 0x10e82 <arb_idle+0x132>
   10dfe:	08 94       	sec
   10e00:	61 1c       	adc	r6, r1
   10e02:	71 1c       	adc	r7, r1
   10e04:	81 1c       	adc	r8, r1
   10e06:	91 1c       	adc	r9, r1
   10e08:	0e 94 31 80 	call	0x10062	; 0x10062 <arb_sysMsecNow>
   10e0c:	a6 96       	adiw	r28, 0x26	; 38
   10e0e:	2f af       	sts	0x7f, r18
   10e10:	a6 97       	sbiw	r28, 0x26	; 38
   10e12:	a7 96       	adiw	r28, 0x27	; 39
   10e14:	3f af       	sts	0x7f, r19
   10e16:	a7 97       	sbiw	r28, 0x27	; 39
   10e18:	a8 96       	adiw	r28, 0x28	; 40
   10e1a:	4f af       	sts	0x7f, r20
   10e1c:	a8 97       	sbiw	r28, 0x28	; 40
   10e1e:	a9 96       	adiw	r28, 0x29	; 41
   10e20:	5f af       	sts	0x7f, r21
   10e22:	a9 97       	sbiw	r28, 0x29	; 41
   10e24:	1b 01       	movw	r2, r22
   10e26:	2c 01       	movw	r4, r24
   10e28:	8d b7       	in	r24, 0x3d	; 61
   10e2a:	9e b7       	in	r25, 0x3e	; 62
   10e2c:	08 97       	sbiw	r24, 0x08	; 8
   10e2e:	8d bf       	out	0x3d, r24	; 61
   10e30:	9e bf       	out	0x3e, r25	; 62
   10e32:	0d b7       	in	r16, 0x3d	; 61
   10e34:	1e b7       	in	r17, 0x3e	; 62
   10e36:	0f 5f       	subi	r16, 0xFF	; 255
   10e38:	1f 4f       	sbci	r17, 0xFF	; 255
   10e3a:	81 e0       	ldi	r24, 0x01	; 1
   10e3c:	90 e0       	ldi	r25, 0x00	; 0
   10e3e:	8c 0f       	add	r24, r28
   10e40:	9d 1f       	adc	r25, r29
   10e42:	ed b7       	in	r30, 0x3d	; 61
   10e44:	fe b7       	in	r31, 0x3e	; 62
   10e46:	81 83       	std	Z+1, r24	; 0x01
   10e48:	92 83       	std	Z+2, r25	; 0x02
   10e4a:	8c ec       	ldi	r24, 0xCC	; 204
   10e4c:	92 e2       	ldi	r25, 0x22	; 34
   10e4e:	f8 01       	movw	r30, r16
   10e50:	82 83       	std	Z+2, r24	; 0x02
   10e52:	93 83       	std	Z+3, r25	; 0x03
   10e54:	c4 01       	movw	r24, r8
   10e56:	b3 01       	movw	r22, r6
   10e58:	0e 94 6b ad 	call	0x15ad6	; 0x15ad6 <__floatunsisf>
   10e5c:	f8 01       	movw	r30, r16
   10e5e:	64 83       	std	Z+4, r22	; 0x04
   10e60:	75 83       	std	Z+5, r23	; 0x05
   10e62:	86 83       	std	Z+6, r24	; 0x06
   10e64:	97 83       	std	Z+7, r25	; 0x07
   10e66:	0e 94 6a b2 	call	0x164d4	; 0x164d4 <sprintf>
   10e6a:	8d b7       	in	r24, 0x3d	; 61
   10e6c:	9e b7       	in	r25, 0x3e	; 62
   10e6e:	08 96       	adiw	r24, 0x08	; 8
   10e70:	8d bf       	out	0x3d, r24	; 61
   10e72:	9e bf       	out	0x3e, r25	; 62
   10e74:	81 e4       	ldi	r24, 0x41	; 65
   10e76:	be 01       	movw	r22, r28
   10e78:	6f 5f       	subi	r22, 0xFF	; 255
   10e7a:	7f 4f       	sbci	r23, 0xFF	; 255
   10e7c:	0e 94 2d 72 	call	0xe45a	; 0xe45a <arb_printf>
   10e80:	a8 95       	wdr
   10e82:	0e 94 1c 71 	call	0xe238	; 0xe238 <arb_printfFlushBuf>
   10e86:	95 cf       	rjmp	.-214    	; 0x10db2 <arb_idle+0x62>

00010e88 <utl_getBufferFullLevel>:
   10e88:	df 93       	push	r29
   10e8a:	cf 93       	push	r28
   10e8c:	0f 92       	push	r0
   10e8e:	0f 92       	push	r0
   10e90:	cd b7       	in	r28, 0x3d	; 61
   10e92:	de b7       	in	r29, 0x3e	; 62
   10e94:	89 83       	std	Y+1, r24	; 0x01
   10e96:	9a 83       	std	Y+2, r25	; 0x02
   10e98:	e9 81       	ldd	r30, Y+1	; 0x01
   10e9a:	fa 81       	ldd	r31, Y+2	; 0x02
   10e9c:	01 90       	ld	r0, Z+
   10e9e:	f0 81       	ld	r31, Z
   10ea0:	e0 2d       	mov	r30, r0
   10ea2:	84 81       	ldd	r24, Z+4	; 0x04
   10ea4:	95 81       	ldd	r25, Z+5	; 0x05
   10ea6:	0f 90       	pop	r0
   10ea8:	0f 90       	pop	r0
   10eaa:	cf 91       	pop	r28
   10eac:	df 91       	pop	r29
   10eae:	08 95       	ret

00010eb0 <utl_getBufferSize>:
   10eb0:	df 93       	push	r29
   10eb2:	cf 93       	push	r28
   10eb4:	0f 92       	push	r0
   10eb6:	0f 92       	push	r0
   10eb8:	cd b7       	in	r28, 0x3d	; 61
   10eba:	de b7       	in	r29, 0x3e	; 62
   10ebc:	89 83       	std	Y+1, r24	; 0x01
   10ebe:	9a 83       	std	Y+2, r25	; 0x02
   10ec0:	e9 81       	ldd	r30, Y+1	; 0x01
   10ec2:	fa 81       	ldd	r31, Y+2	; 0x02
   10ec4:	01 90       	ld	r0, Z+
   10ec6:	f0 81       	ld	r31, Z
   10ec8:	e0 2d       	mov	r30, r0
   10eca:	86 81       	ldd	r24, Z+6	; 0x06
   10ecc:	97 81       	ldd	r25, Z+7	; 0x07
   10ece:	0f 90       	pop	r0
   10ed0:	0f 90       	pop	r0
   10ed2:	cf 91       	pop	r28
   10ed4:	df 91       	pop	r29
   10ed6:	08 95       	ret

00010ed8 <utl_getBufferPtr>:
   10ed8:	df 93       	push	r29
   10eda:	cf 93       	push	r28
   10edc:	0f 92       	push	r0
   10ede:	0f 92       	push	r0
   10ee0:	cd b7       	in	r28, 0x3d	; 61
   10ee2:	de b7       	in	r29, 0x3e	; 62
   10ee4:	89 83       	std	Y+1, r24	; 0x01
   10ee6:	9a 83       	std	Y+2, r25	; 0x02
   10ee8:	e9 81       	ldd	r30, Y+1	; 0x01
   10eea:	fa 81       	ldd	r31, Y+2	; 0x02
   10eec:	01 90       	ld	r0, Z+
   10eee:	f0 81       	ld	r31, Z
   10ef0:	e0 2d       	mov	r30, r0
   10ef2:	80 85       	ldd	r24, Z+8	; 0x08
   10ef4:	91 85       	ldd	r25, Z+9	; 0x09
   10ef6:	0f 90       	pop	r0
   10ef8:	0f 90       	pop	r0
   10efa:	cf 91       	pop	r28
   10efc:	df 91       	pop	r29
   10efe:	08 95       	ret

00010f00 <utl_writeByte>:
   10f00:	df 93       	push	r29
   10f02:	cf 93       	push	r28
   10f04:	0f 92       	push	r0
   10f06:	0f 92       	push	r0
   10f08:	cd b7       	in	r28, 0x3d	; 61
   10f0a:	de b7       	in	r29, 0x3e	; 62
   10f0c:	89 83       	std	Y+1, r24	; 0x01
   10f0e:	9a 83       	std	Y+2, r25	; 0x02
   10f10:	e9 81       	ldd	r30, Y+1	; 0x01
   10f12:	fa 81       	ldd	r31, Y+2	; 0x02
   10f14:	a0 81       	ld	r26, Z
   10f16:	b1 81       	ldd	r27, Z+1	; 0x01
   10f18:	18 96       	adiw	r26, 0x08	; 8
   10f1a:	ed 91       	ld	r30, X+
   10f1c:	fc 91       	ld	r31, X
   10f1e:	19 97       	sbiw	r26, 0x09	; 9
   10f20:	8d 91       	ld	r24, X+
   10f22:	9c 91       	ld	r25, X
   10f24:	11 97       	sbiw	r26, 0x01	; 1
   10f26:	e8 0f       	add	r30, r24
   10f28:	f9 1f       	adc	r31, r25
   10f2a:	60 83       	st	Z, r22
   10f2c:	8d 91       	ld	r24, X+
   10f2e:	9c 91       	ld	r25, X
   10f30:	11 97       	sbiw	r26, 0x01	; 1
   10f32:	01 96       	adiw	r24, 0x01	; 1
   10f34:	8d 93       	st	X+, r24
   10f36:	9c 93       	st	X, r25
   10f38:	11 97       	sbiw	r26, 0x01	; 1
   10f3a:	16 96       	adiw	r26, 0x06	; 6
   10f3c:	2d 91       	ld	r18, X+
   10f3e:	3c 91       	ld	r19, X
   10f40:	17 97       	sbiw	r26, 0x07	; 7
   10f42:	82 17       	cp	r24, r18
   10f44:	93 07       	cpc	r25, r19
   10f46:	19 f4       	brne	.+6      	; 0x10f4e <utl_writeByte+0x4e>
   10f48:	1d 92       	st	X+, r1
   10f4a:	1c 92       	st	X, r1
   10f4c:	11 97       	sbiw	r26, 0x01	; 1
   10f4e:	14 96       	adiw	r26, 0x04	; 4
   10f50:	8d 91       	ld	r24, X+
   10f52:	9c 91       	ld	r25, X
   10f54:	15 97       	sbiw	r26, 0x05	; 5
   10f56:	01 96       	adiw	r24, 0x01	; 1
   10f58:	14 96       	adiw	r26, 0x04	; 4
   10f5a:	8d 93       	st	X+, r24
   10f5c:	9c 93       	st	X, r25
   10f5e:	15 97       	sbiw	r26, 0x05	; 5
   10f60:	0f 90       	pop	r0
   10f62:	0f 90       	pop	r0
   10f64:	cf 91       	pop	r28
   10f66:	df 91       	pop	r29
   10f68:	08 95       	ret

00010f6a <utl_incrBufRdPtr>:
   10f6a:	df 93       	push	r29
   10f6c:	cf 93       	push	r28
   10f6e:	0f 92       	push	r0
   10f70:	0f 92       	push	r0
   10f72:	cd b7       	in	r28, 0x3d	; 61
   10f74:	de b7       	in	r29, 0x3e	; 62
   10f76:	89 83       	std	Y+1, r24	; 0x01
   10f78:	9a 83       	std	Y+2, r25	; 0x02
   10f7a:	e9 81       	ldd	r30, Y+1	; 0x01
   10f7c:	fa 81       	ldd	r31, Y+2	; 0x02
   10f7e:	01 90       	ld	r0, Z+
   10f80:	f0 81       	ld	r31, Z
   10f82:	e0 2d       	mov	r30, r0
   10f84:	82 81       	ldd	r24, Z+2	; 0x02
   10f86:	93 81       	ldd	r25, Z+3	; 0x03
   10f88:	86 0f       	add	r24, r22
   10f8a:	97 1f       	adc	r25, r23
   10f8c:	82 83       	std	Z+2, r24	; 0x02
   10f8e:	93 83       	std	Z+3, r25	; 0x03
   10f90:	26 81       	ldd	r18, Z+6	; 0x06
   10f92:	37 81       	ldd	r19, Z+7	; 0x07
   10f94:	82 17       	cp	r24, r18
   10f96:	93 07       	cpc	r25, r19
   10f98:	20 f0       	brcs	.+8      	; 0x10fa2 <utl_incrBufRdPtr+0x38>
   10f9a:	82 1b       	sub	r24, r18
   10f9c:	93 0b       	sbc	r25, r19
   10f9e:	82 83       	std	Z+2, r24	; 0x02
   10fa0:	93 83       	std	Z+3, r25	; 0x03
   10fa2:	84 81       	ldd	r24, Z+4	; 0x04
   10fa4:	95 81       	ldd	r25, Z+5	; 0x05
   10fa6:	86 1b       	sub	r24, r22
   10fa8:	97 0b       	sbc	r25, r23
   10faa:	84 83       	std	Z+4, r24	; 0x04
   10fac:	95 83       	std	Z+5, r25	; 0x05
   10fae:	0f 90       	pop	r0
   10fb0:	0f 90       	pop	r0
   10fb2:	cf 91       	pop	r28
   10fb4:	df 91       	pop	r29
   10fb6:	08 95       	ret

00010fb8 <utl_getBufRdPtr>:
   10fb8:	df 93       	push	r29
   10fba:	cf 93       	push	r28
   10fbc:	0f 92       	push	r0
   10fbe:	0f 92       	push	r0
   10fc0:	cd b7       	in	r28, 0x3d	; 61
   10fc2:	de b7       	in	r29, 0x3e	; 62
   10fc4:	89 83       	std	Y+1, r24	; 0x01
   10fc6:	9a 83       	std	Y+2, r25	; 0x02
   10fc8:	e9 81       	ldd	r30, Y+1	; 0x01
   10fca:	fa 81       	ldd	r31, Y+2	; 0x02
   10fcc:	01 90       	ld	r0, Z+
   10fce:	f0 81       	ld	r31, Z
   10fd0:	e0 2d       	mov	r30, r0
   10fd2:	82 81       	ldd	r24, Z+2	; 0x02
   10fd4:	93 81       	ldd	r25, Z+3	; 0x03
   10fd6:	0f 90       	pop	r0
   10fd8:	0f 90       	pop	r0
   10fda:	cf 91       	pop	r28
   10fdc:	df 91       	pop	r29
   10fde:	08 95       	ret

00010fe0 <utl_buffEraseTailByte>:
   10fe0:	df 93       	push	r29
   10fe2:	cf 93       	push	r28
   10fe4:	0f 92       	push	r0
   10fe6:	0f 92       	push	r0
   10fe8:	cd b7       	in	r28, 0x3d	; 61
   10fea:	de b7       	in	r29, 0x3e	; 62
   10fec:	89 83       	std	Y+1, r24	; 0x01
   10fee:	9a 83       	std	Y+2, r25	; 0x02
   10ff0:	e9 81       	ldd	r30, Y+1	; 0x01
   10ff2:	fa 81       	ldd	r31, Y+2	; 0x02
   10ff4:	a0 81       	ld	r26, Z
   10ff6:	b1 81       	ldd	r27, Z+1	; 0x01
   10ff8:	8d 91       	ld	r24, X+
   10ffa:	9c 91       	ld	r25, X
   10ffc:	11 97       	sbiw	r26, 0x01	; 1
   10ffe:	01 97       	sbiw	r24, 0x01	; 1
   11000:	8d 93       	st	X+, r24
   11002:	9c 93       	st	X, r25
   11004:	11 97       	sbiw	r26, 0x01	; 1
   11006:	97 ff       	sbrs	r25, 7
   11008:	08 c0       	rjmp	.+16     	; 0x1101a <utl_buffEraseTailByte+0x3a>
   1100a:	16 96       	adiw	r26, 0x06	; 6
   1100c:	8d 91       	ld	r24, X+
   1100e:	9c 91       	ld	r25, X
   11010:	17 97       	sbiw	r26, 0x07	; 7
   11012:	01 97       	sbiw	r24, 0x01	; 1
   11014:	8d 93       	st	X+, r24
   11016:	9c 93       	st	X, r25
   11018:	11 97       	sbiw	r26, 0x01	; 1
   1101a:	18 96       	adiw	r26, 0x08	; 8
   1101c:	ed 91       	ld	r30, X+
   1101e:	fc 91       	ld	r31, X
   11020:	19 97       	sbiw	r26, 0x09	; 9
   11022:	8d 91       	ld	r24, X+
   11024:	9c 91       	ld	r25, X
   11026:	11 97       	sbiw	r26, 0x01	; 1
   11028:	e8 0f       	add	r30, r24
   1102a:	f9 1f       	adc	r31, r25
   1102c:	10 82       	st	Z, r1
   1102e:	14 96       	adiw	r26, 0x04	; 4
   11030:	8d 91       	ld	r24, X+
   11032:	9c 91       	ld	r25, X
   11034:	15 97       	sbiw	r26, 0x05	; 5
   11036:	01 97       	sbiw	r24, 0x01	; 1
   11038:	14 96       	adiw	r26, 0x04	; 4
   1103a:	8d 93       	st	X+, r24
   1103c:	9c 93       	st	X, r25
   1103e:	15 97       	sbiw	r26, 0x05	; 5
   11040:	0f 90       	pop	r0
   11042:	0f 90       	pop	r0
   11044:	cf 91       	pop	r28
   11046:	df 91       	pop	r29
   11048:	08 95       	ret

0001104a <ult_resetBuffer>:
   1104a:	df 93       	push	r29
   1104c:	cf 93       	push	r28
   1104e:	0f 92       	push	r0
   11050:	0f 92       	push	r0
   11052:	cd b7       	in	r28, 0x3d	; 61
   11054:	de b7       	in	r29, 0x3e	; 62
   11056:	89 83       	std	Y+1, r24	; 0x01
   11058:	9a 83       	std	Y+2, r25	; 0x02
   1105a:	e9 81       	ldd	r30, Y+1	; 0x01
   1105c:	fa 81       	ldd	r31, Y+2	; 0x02
   1105e:	01 90       	ld	r0, Z+
   11060:	f0 81       	ld	r31, Z
   11062:	e0 2d       	mov	r30, r0
   11064:	12 82       	std	Z+2, r1	; 0x02
   11066:	13 82       	std	Z+3, r1	; 0x03
   11068:	10 82       	st	Z, r1
   1106a:	11 82       	std	Z+1, r1	; 0x01
   1106c:	14 82       	std	Z+4, r1	; 0x04
   1106e:	15 82       	std	Z+5, r1	; 0x05
   11070:	0f 90       	pop	r0
   11072:	0f 90       	pop	r0
   11074:	cf 91       	pop	r28
   11076:	df 91       	pop	r29
   11078:	08 95       	ret

0001107a <utl_destroyBuffer>:
   1107a:	df 93       	push	r29
   1107c:	cf 93       	push	r28
   1107e:	00 d0       	rcall	.+0      	; 0x11080 <utl_destroyBuffer+0x6>
   11080:	cd b7       	in	r28, 0x3d	; 61
   11082:	de b7       	in	r29, 0x3e	; 62
   11084:	8a 83       	std	Y+2, r24	; 0x02
   11086:	9b 83       	std	Y+3, r25	; 0x03
   11088:	8f b7       	in	r24, 0x3f	; 63
   1108a:	89 83       	std	Y+1, r24	; 0x01
   1108c:	f8 94       	cli
   1108e:	80 91 f6 22 	lds	r24, 0x22F6
   11092:	90 91 f7 22 	lds	r25, 0x22F7
   11096:	6a 81       	ldd	r22, Y+2	; 0x02
   11098:	7b 81       	ldd	r23, Y+3	; 0x03
   1109a:	0e 94 6a 8a 	call	0x114d4	; 0x114d4 <utl_destroyLink>
   1109e:	87 ff       	sbrs	r24, 7
   110a0:	04 c0       	rjmp	.+8      	; 0x110aa <utl_destroyBuffer+0x30>
   110a2:	89 81       	ldd	r24, Y+1	; 0x01
   110a4:	8f bf       	out	0x3f, r24	; 63
   110a6:	8d ef       	ldi	r24, 0xFD	; 253
   110a8:	03 c0       	rjmp	.+6      	; 0x110b0 <utl_destroyBuffer+0x36>
   110aa:	89 81       	ldd	r24, Y+1	; 0x01
   110ac:	8f bf       	out	0x3f, r24	; 63
   110ae:	80 e0       	ldi	r24, 0x00	; 0
   110b0:	23 96       	adiw	r28, 0x03	; 3
   110b2:	cd bf       	out	0x3d, r28	; 61
   110b4:	de bf       	out	0x3e, r29	; 62
   110b6:	cf 91       	pop	r28
   110b8:	df 91       	pop	r29
   110ba:	08 95       	ret

000110bc <utl_createBuffer>:
   110bc:	df 92       	push	r13
   110be:	ef 92       	push	r14
   110c0:	ff 92       	push	r15
   110c2:	0f 93       	push	r16
   110c4:	1f 93       	push	r17
   110c6:	df 93       	push	r29
   110c8:	cf 93       	push	r28
   110ca:	00 d0       	rcall	.+0      	; 0x110cc <utl_createBuffer+0x10>
   110cc:	cd b7       	in	r28, 0x3d	; 61
   110ce:	de b7       	in	r29, 0x3e	; 62
   110d0:	d9 2e       	mov	r13, r25
   110d2:	9f b7       	in	r25, 0x3f	; 63
   110d4:	99 83       	std	Y+1, r25	; 0x01
   110d6:	f8 94       	cli
   110d8:	e8 2e       	mov	r14, r24
   110da:	fd 2c       	mov	r15, r13
   110dc:	c7 01       	movw	r24, r14
   110de:	0a 96       	adiw	r24, 0x0a	; 10
   110e0:	0e 94 5e 8b 	call	0x116bc	; 0x116bc <utl_createLink>
   110e4:	8a 83       	std	Y+2, r24	; 0x02
   110e6:	9b 83       	std	Y+3, r25	; 0x03
   110e8:	8a 81       	ldd	r24, Y+2	; 0x02
   110ea:	9b 81       	ldd	r25, Y+3	; 0x03
   110ec:	97 ff       	sbrs	r25, 7
   110ee:	05 c0       	rjmp	.+10     	; 0x110fa <utl_createBuffer+0x3e>
   110f0:	89 81       	ldd	r24, Y+1	; 0x01
   110f2:	8f bf       	out	0x3f, r24	; 63
   110f4:	2f ef       	ldi	r18, 0xFF	; 255
   110f6:	3f ef       	ldi	r19, 0xFF	; 255
   110f8:	27 c0       	rjmp	.+78     	; 0x11148 <utl_createBuffer+0x8c>
   110fa:	ea 81       	ldd	r30, Y+2	; 0x02
   110fc:	fb 81       	ldd	r31, Y+3	; 0x03
   110fe:	00 81       	ld	r16, Z
   11100:	11 81       	ldd	r17, Z+1	; 0x01
   11102:	f8 01       	movw	r30, r16
   11104:	10 82       	st	Z, r1
   11106:	11 82       	std	Z+1, r1	; 0x01
   11108:	12 82       	std	Z+2, r1	; 0x02
   1110a:	13 82       	std	Z+3, r1	; 0x03
   1110c:	14 82       	std	Z+4, r1	; 0x04
   1110e:	15 82       	std	Z+5, r1	; 0x05
   11110:	98 01       	movw	r18, r16
   11112:	26 5f       	subi	r18, 0xF6	; 246
   11114:	3f 4f       	sbci	r19, 0xFF	; 255
   11116:	20 87       	std	Z+8, r18	; 0x08
   11118:	31 87       	std	Z+9, r19	; 0x09
   1111a:	c9 01       	movw	r24, r18
   1111c:	60 e0       	ldi	r22, 0x00	; 0
   1111e:	70 e0       	ldi	r23, 0x00	; 0
   11120:	4e 2d       	mov	r20, r14
   11122:	5d 2d       	mov	r21, r13
   11124:	0e 94 c0 b1 	call	0x16380	; 0x16380 <memset>
   11128:	f8 01       	movw	r30, r16
   1112a:	e6 82       	std	Z+6, r14	; 0x06
   1112c:	f7 82       	std	Z+7, r15	; 0x07
   1112e:	80 91 f6 22 	lds	r24, 0x22F6
   11132:	90 91 f7 22 	lds	r25, 0x22F7
   11136:	6a 81       	ldd	r22, Y+2	; 0x02
   11138:	7b 81       	ldd	r23, Y+3	; 0x03
   1113a:	41 e0       	ldi	r20, 0x01	; 1
   1113c:	0e 94 6e 89 	call	0x112dc	; 0x112dc <utl_insertLink>
   11140:	89 81       	ldd	r24, Y+1	; 0x01
   11142:	8f bf       	out	0x3f, r24	; 63
   11144:	2a 81       	ldd	r18, Y+2	; 0x02
   11146:	3b 81       	ldd	r19, Y+3	; 0x03
   11148:	c9 01       	movw	r24, r18
   1114a:	23 96       	adiw	r28, 0x03	; 3
   1114c:	cd bf       	out	0x3d, r28	; 61
   1114e:	de bf       	out	0x3e, r29	; 62
   11150:	cf 91       	pop	r28
   11152:	df 91       	pop	r29
   11154:	1f 91       	pop	r17
   11156:	0f 91       	pop	r16
   11158:	ff 90       	pop	r15
   1115a:	ef 90       	pop	r14
   1115c:	df 90       	pop	r13
   1115e:	08 95       	ret

00011160 <utl_readBlock>:
   11160:	8f 92       	push	r8
   11162:	9f 92       	push	r9
   11164:	af 92       	push	r10
   11166:	bf 92       	push	r11
   11168:	cf 92       	push	r12
   1116a:	df 92       	push	r13
   1116c:	ef 92       	push	r14
   1116e:	ff 92       	push	r15
   11170:	0f 93       	push	r16
   11172:	1f 93       	push	r17
   11174:	df 93       	push	r29
   11176:	cf 93       	push	r28
   11178:	0f 92       	push	r0
   1117a:	0f 92       	push	r0
   1117c:	cd b7       	in	r28, 0x3d	; 61
   1117e:	de b7       	in	r29, 0x3e	; 62
   11180:	89 83       	std	Y+1, r24	; 0x01
   11182:	9a 83       	std	Y+2, r25	; 0x02
   11184:	6b 01       	movw	r12, r22
   11186:	4a 01       	movw	r8, r20
   11188:	e9 81       	ldd	r30, Y+1	; 0x01
   1118a:	fa 81       	ldd	r31, Y+2	; 0x02
   1118c:	e0 80       	ld	r14, Z
   1118e:	f1 80       	ldd	r15, Z+1	; 0x01
   11190:	f7 01       	movw	r30, r14
   11192:	a0 84       	ldd	r10, Z+8	; 0x08
   11194:	b1 84       	ldd	r11, Z+9	; 0x09
   11196:	82 81       	ldd	r24, Z+2	; 0x02
   11198:	93 81       	ldd	r25, Z+3	; 0x03
   1119a:	06 81       	ldd	r16, Z+6	; 0x06
   1119c:	17 81       	ldd	r17, Z+7	; 0x07
   1119e:	08 1b       	sub	r16, r24
   111a0:	19 0b       	sbc	r17, r25
   111a2:	95 01       	movw	r18, r10
   111a4:	28 0f       	add	r18, r24
   111a6:	39 1f       	adc	r19, r25
   111a8:	04 17       	cp	r16, r20
   111aa:	15 07       	cpc	r17, r21
   111ac:	78 f4       	brcc	.+30     	; 0x111cc <utl_readBlock+0x6c>
   111ae:	cb 01       	movw	r24, r22
   111b0:	b9 01       	movw	r22, r18
   111b2:	a8 01       	movw	r20, r16
   111b4:	0e 94 b7 b1 	call	0x1636e	; 0x1636e <memcpy>
   111b8:	96 01       	movw	r18, r12
   111ba:	20 0f       	add	r18, r16
   111bc:	31 1f       	adc	r19, r17
   111be:	f4 01       	movw	r30, r8
   111c0:	e0 1b       	sub	r30, r16
   111c2:	f1 0b       	sbc	r31, r17
   111c4:	c9 01       	movw	r24, r18
   111c6:	b5 01       	movw	r22, r10
   111c8:	af 01       	movw	r20, r30
   111ca:	02 c0       	rjmp	.+4      	; 0x111d0 <utl_readBlock+0x70>
   111cc:	cb 01       	movw	r24, r22
   111ce:	b9 01       	movw	r22, r18
   111d0:	0e 94 b7 b1 	call	0x1636e	; 0x1636e <memcpy>
   111d4:	f7 01       	movw	r30, r14
   111d6:	82 81       	ldd	r24, Z+2	; 0x02
   111d8:	93 81       	ldd	r25, Z+3	; 0x03
   111da:	88 0d       	add	r24, r8
   111dc:	99 1d       	adc	r25, r9
   111de:	82 83       	std	Z+2, r24	; 0x02
   111e0:	93 83       	std	Z+3, r25	; 0x03
   111e2:	26 81       	ldd	r18, Z+6	; 0x06
   111e4:	37 81       	ldd	r19, Z+7	; 0x07
   111e6:	82 17       	cp	r24, r18
   111e8:	93 07       	cpc	r25, r19
   111ea:	20 f0       	brcs	.+8      	; 0x111f4 <utl_readBlock+0x94>
   111ec:	82 1b       	sub	r24, r18
   111ee:	93 0b       	sbc	r25, r19
   111f0:	82 83       	std	Z+2, r24	; 0x02
   111f2:	93 83       	std	Z+3, r25	; 0x03
   111f4:	f7 01       	movw	r30, r14
   111f6:	84 81       	ldd	r24, Z+4	; 0x04
   111f8:	95 81       	ldd	r25, Z+5	; 0x05
   111fa:	88 19       	sub	r24, r8
   111fc:	99 09       	sbc	r25, r9
   111fe:	84 83       	std	Z+4, r24	; 0x04
   11200:	95 83       	std	Z+5, r25	; 0x05
   11202:	0f 90       	pop	r0
   11204:	0f 90       	pop	r0
   11206:	cf 91       	pop	r28
   11208:	df 91       	pop	r29
   1120a:	1f 91       	pop	r17
   1120c:	0f 91       	pop	r16
   1120e:	ff 90       	pop	r15
   11210:	ef 90       	pop	r14
   11212:	df 90       	pop	r13
   11214:	cf 90       	pop	r12
   11216:	bf 90       	pop	r11
   11218:	af 90       	pop	r10
   1121a:	9f 90       	pop	r9
   1121c:	8f 90       	pop	r8
   1121e:	08 95       	ret

00011220 <utl_writeBlock>:
   11220:	8f 92       	push	r8
   11222:	9f 92       	push	r9
   11224:	af 92       	push	r10
   11226:	bf 92       	push	r11
   11228:	cf 92       	push	r12
   1122a:	df 92       	push	r13
   1122c:	ef 92       	push	r14
   1122e:	ff 92       	push	r15
   11230:	0f 93       	push	r16
   11232:	1f 93       	push	r17
   11234:	df 93       	push	r29
   11236:	cf 93       	push	r28
   11238:	0f 92       	push	r0
   1123a:	0f 92       	push	r0
   1123c:	cd b7       	in	r28, 0x3d	; 61
   1123e:	de b7       	in	r29, 0x3e	; 62
   11240:	89 83       	std	Y+1, r24	; 0x01
   11242:	9a 83       	std	Y+2, r25	; 0x02
   11244:	6b 01       	movw	r12, r22
   11246:	4a 01       	movw	r8, r20
   11248:	e9 81       	ldd	r30, Y+1	; 0x01
   1124a:	fa 81       	ldd	r31, Y+2	; 0x02
   1124c:	e0 80       	ld	r14, Z
   1124e:	f1 80       	ldd	r15, Z+1	; 0x01
   11250:	f7 01       	movw	r30, r14
   11252:	a0 84       	ldd	r10, Z+8	; 0x08
   11254:	b1 84       	ldd	r11, Z+9	; 0x09
   11256:	80 81       	ld	r24, Z
   11258:	91 81       	ldd	r25, Z+1	; 0x01
   1125a:	06 81       	ldd	r16, Z+6	; 0x06
   1125c:	17 81       	ldd	r17, Z+7	; 0x07
   1125e:	08 1b       	sub	r16, r24
   11260:	19 0b       	sbc	r17, r25
   11262:	95 01       	movw	r18, r10
   11264:	28 0f       	add	r18, r24
   11266:	39 1f       	adc	r19, r25
   11268:	04 17       	cp	r16, r20
   1126a:	15 07       	cpc	r17, r21
   1126c:	70 f4       	brcc	.+28     	; 0x1128a <utl_writeBlock+0x6a>
   1126e:	c9 01       	movw	r24, r18
   11270:	a8 01       	movw	r20, r16
   11272:	0e 94 b7 b1 	call	0x1636e	; 0x1636e <memcpy>
   11276:	f4 01       	movw	r30, r8
   11278:	e0 1b       	sub	r30, r16
   1127a:	f1 0b       	sbc	r31, r17
   1127c:	96 01       	movw	r18, r12
   1127e:	20 0f       	add	r18, r16
   11280:	31 1f       	adc	r19, r17
   11282:	c5 01       	movw	r24, r10
   11284:	b9 01       	movw	r22, r18
   11286:	af 01       	movw	r20, r30
   11288:	01 c0       	rjmp	.+2      	; 0x1128c <utl_writeBlock+0x6c>
   1128a:	c9 01       	movw	r24, r18
   1128c:	0e 94 b7 b1 	call	0x1636e	; 0x1636e <memcpy>
   11290:	f7 01       	movw	r30, r14
   11292:	80 81       	ld	r24, Z
   11294:	91 81       	ldd	r25, Z+1	; 0x01
   11296:	88 0d       	add	r24, r8
   11298:	99 1d       	adc	r25, r9
   1129a:	80 83       	st	Z, r24
   1129c:	91 83       	std	Z+1, r25	; 0x01
   1129e:	26 81       	ldd	r18, Z+6	; 0x06
   112a0:	37 81       	ldd	r19, Z+7	; 0x07
   112a2:	82 17       	cp	r24, r18
   112a4:	93 07       	cpc	r25, r19
   112a6:	20 f0       	brcs	.+8      	; 0x112b0 <utl_writeBlock+0x90>
   112a8:	82 1b       	sub	r24, r18
   112aa:	93 0b       	sbc	r25, r19
   112ac:	80 83       	st	Z, r24
   112ae:	91 83       	std	Z+1, r25	; 0x01
   112b0:	f7 01       	movw	r30, r14
   112b2:	84 81       	ldd	r24, Z+4	; 0x04
   112b4:	95 81       	ldd	r25, Z+5	; 0x05
   112b6:	88 0d       	add	r24, r8
   112b8:	99 1d       	adc	r25, r9
   112ba:	84 83       	std	Z+4, r24	; 0x04
   112bc:	95 83       	std	Z+5, r25	; 0x05
   112be:	0f 90       	pop	r0
   112c0:	0f 90       	pop	r0
   112c2:	cf 91       	pop	r28
   112c4:	df 91       	pop	r29
   112c6:	1f 91       	pop	r17
   112c8:	0f 91       	pop	r16
   112ca:	ff 90       	pop	r15
   112cc:	ef 90       	pop	r14
   112ce:	df 90       	pop	r13
   112d0:	cf 90       	pop	r12
   112d2:	bf 90       	pop	r11
   112d4:	af 90       	pop	r10
   112d6:	9f 90       	pop	r9
   112d8:	8f 90       	pop	r8
   112da:	08 95       	ret

000112dc <utl_insertLink>:
   112dc:	df 93       	push	r29
   112de:	cf 93       	push	r28
   112e0:	cd b7       	in	r28, 0x3d	; 61
   112e2:	de b7       	in	r29, 0x3e	; 62
   112e4:	25 97       	sbiw	r28, 0x05	; 5
   112e6:	cd bf       	out	0x3d, r28	; 61
   112e8:	de bf       	out	0x3e, r29	; 62
   112ea:	8a 83       	std	Y+2, r24	; 0x02
   112ec:	9b 83       	std	Y+3, r25	; 0x03
   112ee:	6c 83       	std	Y+4, r22	; 0x04
   112f0:	7d 83       	std	Y+5, r23	; 0x05
   112f2:	8f b7       	in	r24, 0x3f	; 63
   112f4:	89 83       	std	Y+1, r24	; 0x01
   112f6:	f8 94       	cli
   112f8:	6a 81       	ldd	r22, Y+2	; 0x02
   112fa:	7b 81       	ldd	r23, Y+3	; 0x03
   112fc:	fb 01       	movw	r30, r22
   112fe:	80 81       	ld	r24, Z
   11300:	91 81       	ldd	r25, Z+1	; 0x01
   11302:	8e 5d       	subi	r24, 0xDE	; 222
   11304:	9a 4f       	sbci	r25, 0xFA	; 250
   11306:	09 f0       	breq	.+2      	; 0x1130a <utl_insertLink+0x2e>
   11308:	5b c0       	rjmp	.+182    	; 0x113c0 <utl_insertLink+0xe4>
   1130a:	ac 81       	ldd	r26, Y+4	; 0x04
   1130c:	bd 81       	ldd	r27, Y+5	; 0x05
   1130e:	14 96       	adiw	r26, 0x04	; 4
   11310:	8d 91       	ld	r24, X+
   11312:	9c 91       	ld	r25, X
   11314:	15 97       	sbiw	r26, 0x05	; 5
   11316:	89 2b       	or	r24, r25
   11318:	21 f0       	breq	.+8      	; 0x11322 <utl_insertLink+0x46>
   1131a:	89 81       	ldd	r24, Y+1	; 0x01
   1131c:	8f bf       	out	0x3f, r24	; 63
   1131e:	8c ef       	ldi	r24, 0xFC	; 252
   11320:	52 c0       	rjmp	.+164    	; 0x113c6 <utl_insertLink+0xea>
   11322:	8a 81       	ldd	r24, Y+2	; 0x02
   11324:	9b 81       	ldd	r25, Y+3	; 0x03
   11326:	14 96       	adiw	r26, 0x04	; 4
   11328:	8d 93       	st	X+, r24
   1132a:	9c 93       	st	X, r25
   1132c:	15 97       	sbiw	r26, 0x05	; 5
   1132e:	fb 01       	movw	r30, r22
   11330:	20 85       	ldd	r18, Z+8	; 0x08
   11332:	31 85       	ldd	r19, Z+9	; 0x09
   11334:	21 15       	cp	r18, r1
   11336:	31 05       	cpc	r19, r1
   11338:	a9 f4       	brne	.+42     	; 0x11364 <utl_insertLink+0x88>
   1133a:	82 85       	ldd	r24, Z+10	; 0x0a
   1133c:	93 85       	ldd	r25, Z+11	; 0x0b
   1133e:	89 2b       	or	r24, r25
   11340:	89 f4       	brne	.+34     	; 0x11364 <utl_insertLink+0x88>
   11342:	0a 2e       	mov	r0, r26
   11344:	1b 2e       	mov	r1, r27
   11346:	1a 96       	adiw	r26, 0x0a	; 10
   11348:	0d 92       	st	X+, r0
   1134a:	1c 92       	st	X, r1
   1134c:	11 24       	eor	r1, r1
   1134e:	1b 97       	sbiw	r26, 0x0b	; 11
   11350:	0a 2e       	mov	r0, r26
   11352:	1b 2e       	mov	r1, r27
   11354:	18 96       	adiw	r26, 0x08	; 8
   11356:	0d 92       	st	X+, r0
   11358:	1c 92       	st	X, r1
   1135a:	11 24       	eor	r1, r1
   1135c:	19 97       	sbiw	r26, 0x09	; 9
   1135e:	a0 87       	std	Z+8, r26	; 0x08
   11360:	b1 87       	std	Z+9, r27	; 0x09
   11362:	14 c0       	rjmp	.+40     	; 0x1138c <utl_insertLink+0xb0>
   11364:	fb 01       	movw	r30, r22
   11366:	82 85       	ldd	r24, Z+10	; 0x0a
   11368:	93 85       	ldd	r25, Z+11	; 0x0b
   1136a:	1a 96       	adiw	r26, 0x0a	; 10
   1136c:	8d 93       	st	X+, r24
   1136e:	9c 93       	st	X, r25
   11370:	1b 97       	sbiw	r26, 0x0b	; 11
   11372:	18 96       	adiw	r26, 0x08	; 8
   11374:	2d 93       	st	X+, r18
   11376:	3c 93       	st	X, r19
   11378:	19 97       	sbiw	r26, 0x09	; 9
   1137a:	f9 01       	movw	r30, r18
   1137c:	a2 87       	std	Z+10, r26	; 0x0a
   1137e:	b3 87       	std	Z+11, r27	; 0x0b
   11380:	fc 01       	movw	r30, r24
   11382:	a0 87       	std	Z+8, r26	; 0x08
   11384:	b1 87       	std	Z+9, r27	; 0x09
   11386:	44 23       	and	r20, r20
   11388:	21 f0       	breq	.+8      	; 0x11392 <utl_insertLink+0xb6>
   1138a:	fb 01       	movw	r30, r22
   1138c:	a2 87       	std	Z+10, r26	; 0x0a
   1138e:	b3 87       	std	Z+11, r27	; 0x0b
   11390:	03 c0       	rjmp	.+6      	; 0x11398 <utl_insertLink+0xbc>
   11392:	fb 01       	movw	r30, r22
   11394:	a0 87       	std	Z+8, r26	; 0x08
   11396:	b1 87       	std	Z+9, r27	; 0x09
   11398:	fb 01       	movw	r30, r22
   1139a:	82 81       	ldd	r24, Z+2	; 0x02
   1139c:	93 81       	ldd	r25, Z+3	; 0x03
   1139e:	01 96       	adiw	r24, 0x01	; 1
   113a0:	82 83       	std	Z+2, r24	; 0x02
   113a2:	93 83       	std	Z+3, r25	; 0x03
   113a4:	84 81       	ldd	r24, Z+4	; 0x04
   113a6:	95 81       	ldd	r25, Z+5	; 0x05
   113a8:	16 96       	adiw	r26, 0x06	; 6
   113aa:	2d 91       	ld	r18, X+
   113ac:	3c 91       	ld	r19, X
   113ae:	17 97       	sbiw	r26, 0x07	; 7
   113b0:	82 0f       	add	r24, r18
   113b2:	93 1f       	adc	r25, r19
   113b4:	84 83       	std	Z+4, r24	; 0x04
   113b6:	95 83       	std	Z+5, r25	; 0x05
   113b8:	89 81       	ldd	r24, Y+1	; 0x01
   113ba:	8f bf       	out	0x3f, r24	; 63
   113bc:	80 e0       	ldi	r24, 0x00	; 0
   113be:	03 c0       	rjmp	.+6      	; 0x113c6 <utl_insertLink+0xea>
   113c0:	89 81       	ldd	r24, Y+1	; 0x01
   113c2:	8f bf       	out	0x3f, r24	; 63
   113c4:	8d ef       	ldi	r24, 0xFD	; 253
   113c6:	25 96       	adiw	r28, 0x05	; 5
   113c8:	cd bf       	out	0x3d, r28	; 61
   113ca:	de bf       	out	0x3e, r29	; 62
   113cc:	cf 91       	pop	r28
   113ce:	df 91       	pop	r29
   113d0:	08 95       	ret

000113d2 <utl_removeLink>:
   113d2:	df 93       	push	r29
   113d4:	cf 93       	push	r28
   113d6:	cd b7       	in	r28, 0x3d	; 61
   113d8:	de b7       	in	r29, 0x3e	; 62
   113da:	25 97       	sbiw	r28, 0x05	; 5
   113dc:	cd bf       	out	0x3d, r28	; 61
   113de:	de bf       	out	0x3e, r29	; 62
   113e0:	8a 83       	std	Y+2, r24	; 0x02
   113e2:	9b 83       	std	Y+3, r25	; 0x03
   113e4:	6c 83       	std	Y+4, r22	; 0x04
   113e6:	7d 83       	std	Y+5, r23	; 0x05
   113e8:	8f b7       	in	r24, 0x3f	; 63
   113ea:	89 83       	std	Y+1, r24	; 0x01
   113ec:	f8 94       	cli
   113ee:	4a 81       	ldd	r20, Y+2	; 0x02
   113f0:	5b 81       	ldd	r21, Y+3	; 0x03
   113f2:	fa 01       	movw	r30, r20
   113f4:	80 81       	ld	r24, Z
   113f6:	91 81       	ldd	r25, Z+1	; 0x01
   113f8:	8e 5d       	subi	r24, 0xDE	; 222
   113fa:	9a 4f       	sbci	r25, 0xFA	; 250
   113fc:	09 f0       	breq	.+2      	; 0x11400 <utl_removeLink+0x2e>
   113fe:	61 c0       	rjmp	.+194    	; 0x114c2 <utl_removeLink+0xf0>
   11400:	ac 81       	ldd	r26, Y+4	; 0x04
   11402:	bd 81       	ldd	r27, Y+5	; 0x05
   11404:	ec 81       	ldd	r30, Y+4	; 0x04
   11406:	fd 81       	ldd	r31, Y+5	; 0x05
   11408:	2a 81       	ldd	r18, Y+2	; 0x02
   1140a:	3b 81       	ldd	r19, Y+3	; 0x03
   1140c:	84 81       	ldd	r24, Z+4	; 0x04
   1140e:	95 81       	ldd	r25, Z+5	; 0x05
   11410:	82 17       	cp	r24, r18
   11412:	93 07       	cpc	r25, r19
   11414:	21 f0       	breq	.+8      	; 0x1141e <utl_removeLink+0x4c>
   11416:	89 81       	ldd	r24, Y+1	; 0x01
   11418:	8f bf       	out	0x3f, r24	; 63
   1141a:	8e ef       	ldi	r24, 0xFE	; 254
   1141c:	55 c0       	rjmp	.+170    	; 0x114c8 <utl_removeLink+0xf6>
   1141e:	14 96       	adiw	r26, 0x04	; 4
   11420:	1d 92       	st	X+, r1
   11422:	1c 92       	st	X, r1
   11424:	15 97       	sbiw	r26, 0x05	; 5
   11426:	1a 96       	adiw	r26, 0x0a	; 10
   11428:	2d 91       	ld	r18, X+
   1142a:	3c 91       	ld	r19, X
   1142c:	1b 97       	sbiw	r26, 0x0b	; 11
   1142e:	20 93 68 25 	sts	0x2568, r18
   11432:	30 93 69 25 	sts	0x2569, r19
   11436:	18 96       	adiw	r26, 0x08	; 8
   11438:	6d 91       	ld	r22, X+
   1143a:	7c 91       	ld	r23, X
   1143c:	19 97       	sbiw	r26, 0x09	; 9
   1143e:	60 93 66 25 	sts	0x2566, r22
   11442:	70 93 67 25 	sts	0x2567, r23
   11446:	a6 17       	cp	r26, r22
   11448:	b7 07       	cpc	r27, r23
   1144a:	c1 f0       	breq	.+48     	; 0x1147c <utl_removeLink+0xaa>
   1144c:	f9 01       	movw	r30, r18
   1144e:	60 87       	std	Z+8, r22	; 0x08
   11450:	71 87       	std	Z+9, r23	; 0x09
   11452:	fb 01       	movw	r30, r22
   11454:	22 87       	std	Z+10, r18	; 0x0a
   11456:	33 87       	std	Z+11, r19	; 0x0b
   11458:	fa 01       	movw	r30, r20
   1145a:	80 85       	ldd	r24, Z+8	; 0x08
   1145c:	91 85       	ldd	r25, Z+9	; 0x09
   1145e:	a8 17       	cp	r26, r24
   11460:	b9 07       	cpc	r27, r25
   11462:	19 f4       	brne	.+6      	; 0x1146a <utl_removeLink+0x98>
   11464:	60 87       	std	Z+8, r22	; 0x08
   11466:	71 87       	std	Z+9, r23	; 0x09
   11468:	0e c0       	rjmp	.+28     	; 0x11486 <utl_removeLink+0xb4>
   1146a:	fa 01       	movw	r30, r20
   1146c:	82 85       	ldd	r24, Z+10	; 0x0a
   1146e:	93 85       	ldd	r25, Z+11	; 0x0b
   11470:	a8 17       	cp	r26, r24
   11472:	b9 07       	cpc	r27, r25
   11474:	41 f4       	brne	.+16     	; 0x11486 <utl_removeLink+0xb4>
   11476:	22 87       	std	Z+10, r18	; 0x0a
   11478:	33 87       	std	Z+11, r19	; 0x0b
   1147a:	05 c0       	rjmp	.+10     	; 0x11486 <utl_removeLink+0xb4>
   1147c:	fa 01       	movw	r30, r20
   1147e:	10 86       	std	Z+8, r1	; 0x08
   11480:	11 86       	std	Z+9, r1	; 0x09
   11482:	12 86       	std	Z+10, r1	; 0x0a
   11484:	13 86       	std	Z+11, r1	; 0x0b
   11486:	14 96       	adiw	r26, 0x04	; 4
   11488:	1d 92       	st	X+, r1
   1148a:	1c 92       	st	X, r1
   1148c:	15 97       	sbiw	r26, 0x05	; 5
   1148e:	18 96       	adiw	r26, 0x08	; 8
   11490:	1d 92       	st	X+, r1
   11492:	1c 92       	st	X, r1
   11494:	19 97       	sbiw	r26, 0x09	; 9
   11496:	1a 96       	adiw	r26, 0x0a	; 10
   11498:	1d 92       	st	X+, r1
   1149a:	1c 92       	st	X, r1
   1149c:	1b 97       	sbiw	r26, 0x0b	; 11
   1149e:	fa 01       	movw	r30, r20
   114a0:	82 81       	ldd	r24, Z+2	; 0x02
   114a2:	93 81       	ldd	r25, Z+3	; 0x03
   114a4:	01 97       	sbiw	r24, 0x01	; 1
   114a6:	82 83       	std	Z+2, r24	; 0x02
   114a8:	93 83       	std	Z+3, r25	; 0x03
   114aa:	84 81       	ldd	r24, Z+4	; 0x04
   114ac:	95 81       	ldd	r25, Z+5	; 0x05
   114ae:	16 96       	adiw	r26, 0x06	; 6
   114b0:	2d 91       	ld	r18, X+
   114b2:	3c 91       	ld	r19, X
   114b4:	17 97       	sbiw	r26, 0x07	; 7
   114b6:	82 1b       	sub	r24, r18
   114b8:	93 0b       	sbc	r25, r19
   114ba:	84 83       	std	Z+4, r24	; 0x04
   114bc:	95 83       	std	Z+5, r25	; 0x05
   114be:	80 e0       	ldi	r24, 0x00	; 0
   114c0:	03 c0       	rjmp	.+6      	; 0x114c8 <utl_removeLink+0xf6>
   114c2:	89 81       	ldd	r24, Y+1	; 0x01
   114c4:	8f bf       	out	0x3f, r24	; 63
   114c6:	8d ef       	ldi	r24, 0xFD	; 253
   114c8:	25 96       	adiw	r28, 0x05	; 5
   114ca:	cd bf       	out	0x3d, r28	; 61
   114cc:	de bf       	out	0x3e, r29	; 62
   114ce:	cf 91       	pop	r28
   114d0:	df 91       	pop	r29
   114d2:	08 95       	ret

000114d4 <utl_destroyLink>:
   114d4:	df 93       	push	r29
   114d6:	cf 93       	push	r28
   114d8:	cd b7       	in	r28, 0x3d	; 61
   114da:	de b7       	in	r29, 0x3e	; 62
   114dc:	27 97       	sbiw	r28, 0x07	; 7
   114de:	cd bf       	out	0x3d, r28	; 61
   114e0:	de bf       	out	0x3e, r29	; 62
   114e2:	8c 83       	std	Y+4, r24	; 0x04
   114e4:	9d 83       	std	Y+5, r25	; 0x05
   114e6:	6e 83       	std	Y+6, r22	; 0x06
   114e8:	7f 83       	std	Y+7, r23	; 0x07
   114ea:	8f b7       	in	r24, 0x3f	; 63
   114ec:	89 83       	std	Y+1, r24	; 0x01
   114ee:	f8 94       	cli
   114f0:	ac 81       	ldd	r26, Y+4	; 0x04
   114f2:	bd 81       	ldd	r27, Y+5	; 0x05
   114f4:	8d 91       	ld	r24, X+
   114f6:	9c 91       	ld	r25, X
   114f8:	11 97       	sbiw	r26, 0x01	; 1
   114fa:	8e 5d       	subi	r24, 0xDE	; 222
   114fc:	9a 4f       	sbci	r25, 0xFA	; 250
   114fe:	09 f0       	breq	.+2      	; 0x11502 <utl_destroyLink+0x2e>
   11500:	8f c0       	rjmp	.+286    	; 0x11620 <utl_destroyLink+0x14c>
   11502:	6e 81       	ldd	r22, Y+6	; 0x06
   11504:	7f 81       	ldd	r23, Y+7	; 0x07
   11506:	ee 81       	ldd	r30, Y+6	; 0x06
   11508:	ff 81       	ldd	r31, Y+7	; 0x07
   1150a:	2c 81       	ldd	r18, Y+4	; 0x04
   1150c:	3d 81       	ldd	r19, Y+5	; 0x05
   1150e:	84 81       	ldd	r24, Z+4	; 0x04
   11510:	95 81       	ldd	r25, Z+5	; 0x05
   11512:	82 17       	cp	r24, r18
   11514:	93 07       	cpc	r25, r19
   11516:	21 f0       	breq	.+8      	; 0x11520 <utl_destroyLink+0x4c>
   11518:	89 81       	ldd	r24, Y+1	; 0x01
   1151a:	8f bf       	out	0x3f, r24	; 63
   1151c:	8e ef       	ldi	r24, 0xFE	; 254
   1151e:	83 c0       	rjmp	.+262    	; 0x11626 <utl_destroyLink+0x152>
   11520:	fb 01       	movw	r30, r22
   11522:	22 85       	ldd	r18, Z+10	; 0x0a
   11524:	33 85       	ldd	r19, Z+11	; 0x0b
   11526:	20 93 70 25 	sts	0x2570, r18
   1152a:	30 93 71 25 	sts	0x2571, r19
   1152e:	40 85       	ldd	r20, Z+8	; 0x08
   11530:	51 85       	ldd	r21, Z+9	; 0x09
   11532:	40 93 6e 25 	sts	0x256E, r20
   11536:	50 93 6f 25 	sts	0x256F, r21
   1153a:	64 17       	cp	r22, r20
   1153c:	75 07       	cpc	r23, r21
   1153e:	f1 f0       	breq	.+60     	; 0x1157c <utl_destroyLink+0xa8>
   11540:	f9 01       	movw	r30, r18
   11542:	40 87       	std	Z+8, r20	; 0x08
   11544:	51 87       	std	Z+9, r21	; 0x09
   11546:	fa 01       	movw	r30, r20
   11548:	22 87       	std	Z+10, r18	; 0x0a
   1154a:	33 87       	std	Z+11, r19	; 0x0b
   1154c:	18 96       	adiw	r26, 0x08	; 8
   1154e:	8d 91       	ld	r24, X+
   11550:	9c 91       	ld	r25, X
   11552:	19 97       	sbiw	r26, 0x09	; 9
   11554:	68 17       	cp	r22, r24
   11556:	79 07       	cpc	r23, r25
   11558:	29 f4       	brne	.+10     	; 0x11564 <utl_destroyLink+0x90>
   1155a:	18 96       	adiw	r26, 0x08	; 8
   1155c:	4d 93       	st	X+, r20
   1155e:	5c 93       	st	X, r21
   11560:	19 97       	sbiw	r26, 0x09	; 9
   11562:	14 c0       	rjmp	.+40     	; 0x1158c <utl_destroyLink+0xb8>
   11564:	1a 96       	adiw	r26, 0x0a	; 10
   11566:	8d 91       	ld	r24, X+
   11568:	9c 91       	ld	r25, X
   1156a:	1b 97       	sbiw	r26, 0x0b	; 11
   1156c:	68 17       	cp	r22, r24
   1156e:	79 07       	cpc	r23, r25
   11570:	69 f4       	brne	.+26     	; 0x1158c <utl_destroyLink+0xb8>
   11572:	1a 96       	adiw	r26, 0x0a	; 10
   11574:	2d 93       	st	X+, r18
   11576:	3c 93       	st	X, r19
   11578:	1b 97       	sbiw	r26, 0x0b	; 11
   1157a:	08 c0       	rjmp	.+16     	; 0x1158c <utl_destroyLink+0xb8>
   1157c:	18 96       	adiw	r26, 0x08	; 8
   1157e:	1d 92       	st	X+, r1
   11580:	1c 92       	st	X, r1
   11582:	19 97       	sbiw	r26, 0x09	; 9
   11584:	1a 96       	adiw	r26, 0x0a	; 10
   11586:	1d 92       	st	X+, r1
   11588:	1c 92       	st	X, r1
   1158a:	1b 97       	sbiw	r26, 0x0b	; 11
   1158c:	12 96       	adiw	r26, 0x02	; 2
   1158e:	8d 91       	ld	r24, X+
   11590:	9c 91       	ld	r25, X
   11592:	13 97       	sbiw	r26, 0x03	; 3
   11594:	01 97       	sbiw	r24, 0x01	; 1
   11596:	12 96       	adiw	r26, 0x02	; 2
   11598:	8d 93       	st	X+, r24
   1159a:	9c 93       	st	X, r25
   1159c:	13 97       	sbiw	r26, 0x03	; 3
   1159e:	fb 01       	movw	r30, r22
   115a0:	26 81       	ldd	r18, Z+6	; 0x06
   115a2:	37 81       	ldd	r19, Z+7	; 0x07
   115a4:	14 96       	adiw	r26, 0x04	; 4
   115a6:	8d 91       	ld	r24, X+
   115a8:	9c 91       	ld	r25, X
   115aa:	15 97       	sbiw	r26, 0x05	; 5
   115ac:	82 1b       	sub	r24, r18
   115ae:	93 0b       	sbc	r25, r19
   115b0:	14 96       	adiw	r26, 0x04	; 4
   115b2:	8d 93       	st	X+, r24
   115b4:	9c 93       	st	X, r25
   115b6:	15 97       	sbiw	r26, 0x05	; 5
   115b8:	40 e0       	ldi	r20, 0x00	; 0
   115ba:	50 e0       	ldi	r21, 0x00	; 0
   115bc:	80 91 6a 25 	lds	r24, 0x256A
   115c0:	90 91 6b 25 	lds	r25, 0x256B
   115c4:	a0 91 6c 25 	lds	r26, 0x256C
   115c8:	b0 91 6d 25 	lds	r27, 0x256D
   115cc:	82 1b       	sub	r24, r18
   115ce:	93 0b       	sbc	r25, r19
   115d0:	a4 0b       	sbc	r26, r20
   115d2:	b5 0b       	sbc	r27, r21
   115d4:	80 93 6a 25 	sts	0x256A, r24
   115d8:	90 93 6b 25 	sts	0x256B, r25
   115dc:	a0 93 6c 25 	sts	0x256C, r26
   115e0:	b0 93 6d 25 	sts	0x256D, r27
   115e4:	6a 83       	std	Y+2, r22	; 0x02
   115e6:	7b 83       	std	Y+3, r23	; 0x03
   115e8:	cb 01       	movw	r24, r22
   115ea:	0e 94 75 b4 	call	0x168ea	; 0x168ea <arb_free>
   115ee:	ea 81       	ldd	r30, Y+2	; 0x02
   115f0:	fb 81       	ldd	r31, Y+3	; 0x03
   115f2:	42 81       	ldd	r20, Z+2	; 0x02
   115f4:	53 81       	ldd	r21, Z+3	; 0x03
   115f6:	80 81       	ld	r24, Z
   115f8:	91 81       	ldd	r25, Z+1	; 0x01
   115fa:	60 e0       	ldi	r22, 0x00	; 0
   115fc:	70 e0       	ldi	r23, 0x00	; 0
   115fe:	0e 94 c0 b1 	call	0x16380	; 0x16380 <memset>
   11602:	ce 01       	movw	r24, r28
   11604:	02 96       	adiw	r24, 0x02	; 2
   11606:	0e 94 75 b4 	call	0x168ea	; 0x168ea <arb_free>
   1160a:	ea 81       	ldd	r30, Y+2	; 0x02
   1160c:	fb 81       	ldd	r31, Y+3	; 0x03
   1160e:	8c e0       	ldi	r24, 0x0C	; 12
   11610:	df 01       	movw	r26, r30
   11612:	1d 92       	st	X+, r1
   11614:	8a 95       	dec	r24
   11616:	e9 f7       	brne	.-6      	; 0x11612 <utl_destroyLink+0x13e>
   11618:	89 81       	ldd	r24, Y+1	; 0x01
   1161a:	8f bf       	out	0x3f, r24	; 63
   1161c:	80 e0       	ldi	r24, 0x00	; 0
   1161e:	03 c0       	rjmp	.+6      	; 0x11626 <utl_destroyLink+0x152>
   11620:	89 81       	ldd	r24, Y+1	; 0x01
   11622:	8f bf       	out	0x3f, r24	; 63
   11624:	8d ef       	ldi	r24, 0xFD	; 253
   11626:	27 96       	adiw	r28, 0x07	; 7
   11628:	cd bf       	out	0x3d, r28	; 61
   1162a:	de bf       	out	0x3e, r29	; 62
   1162c:	cf 91       	pop	r28
   1162e:	df 91       	pop	r29
   11630:	08 95       	ret

00011632 <utl_destroyContainer>:
   11632:	df 93       	push	r29
   11634:	cf 93       	push	r28
   11636:	cd b7       	in	r28, 0x3d	; 61
   11638:	de b7       	in	r29, 0x3e	; 62
   1163a:	25 97       	sbiw	r28, 0x05	; 5
   1163c:	cd bf       	out	0x3d, r28	; 61
   1163e:	de bf       	out	0x3e, r29	; 62
   11640:	8c 83       	std	Y+4, r24	; 0x04
   11642:	9d 83       	std	Y+5, r25	; 0x05
   11644:	8f b7       	in	r24, 0x3f	; 63
   11646:	89 83       	std	Y+1, r24	; 0x01
   11648:	f8 94       	cli
   1164a:	ec 81       	ldd	r30, Y+4	; 0x04
   1164c:	fd 81       	ldd	r31, Y+5	; 0x05
   1164e:	80 81       	ld	r24, Z
   11650:	91 81       	ldd	r25, Z+1	; 0x01
   11652:	8e 5d       	subi	r24, 0xDE	; 222
   11654:	9a 4f       	sbci	r25, 0xFA	; 250
   11656:	49 f5       	brne	.+82     	; 0x116aa <utl_destroyContainer+0x78>
   11658:	24 81       	ldd	r18, Z+4	; 0x04
   1165a:	35 81       	ldd	r19, Z+5	; 0x05
   1165c:	40 e0       	ldi	r20, 0x00	; 0
   1165e:	50 e0       	ldi	r21, 0x00	; 0
   11660:	80 91 6a 25 	lds	r24, 0x256A
   11664:	90 91 6b 25 	lds	r25, 0x256B
   11668:	a0 91 6c 25 	lds	r26, 0x256C
   1166c:	b0 91 6d 25 	lds	r27, 0x256D
   11670:	82 1b       	sub	r24, r18
   11672:	93 0b       	sbc	r25, r19
   11674:	a4 0b       	sbc	r26, r20
   11676:	b5 0b       	sbc	r27, r21
   11678:	80 93 6a 25 	sts	0x256A, r24
   1167c:	90 93 6b 25 	sts	0x256B, r25
   11680:	a0 93 6c 25 	sts	0x256C, r26
   11684:	b0 93 6d 25 	sts	0x256D, r27
   11688:	ea 83       	std	Y+2, r30	; 0x02
   1168a:	fb 83       	std	Y+3, r31	; 0x03
   1168c:	ce 01       	movw	r24, r28
   1168e:	02 96       	adiw	r24, 0x02	; 2
   11690:	0e 94 75 b4 	call	0x168ea	; 0x168ea <arb_free>
   11694:	ea 81       	ldd	r30, Y+2	; 0x02
   11696:	fb 81       	ldd	r31, Y+3	; 0x03
   11698:	8c e0       	ldi	r24, 0x0C	; 12
   1169a:	df 01       	movw	r26, r30
   1169c:	1d 92       	st	X+, r1
   1169e:	8a 95       	dec	r24
   116a0:	e9 f7       	brne	.-6      	; 0x1169c <utl_destroyContainer+0x6a>
   116a2:	89 81       	ldd	r24, Y+1	; 0x01
   116a4:	8f bf       	out	0x3f, r24	; 63
   116a6:	80 e0       	ldi	r24, 0x00	; 0
   116a8:	03 c0       	rjmp	.+6      	; 0x116b0 <utl_destroyContainer+0x7e>
   116aa:	89 81       	ldd	r24, Y+1	; 0x01
   116ac:	8f bf       	out	0x3f, r24	; 63
   116ae:	8d ef       	ldi	r24, 0xFD	; 253
   116b0:	25 96       	adiw	r28, 0x05	; 5
   116b2:	cd bf       	out	0x3d, r28	; 61
   116b4:	de bf       	out	0x3e, r29	; 62
   116b6:	cf 91       	pop	r28
   116b8:	df 91       	pop	r29
   116ba:	08 95       	ret

000116bc <utl_createLink>:
   116bc:	ef 92       	push	r14
   116be:	ff 92       	push	r15
   116c0:	0f 93       	push	r16
   116c2:	1f 93       	push	r17
   116c4:	df 93       	push	r29
   116c6:	cf 93       	push	r28
   116c8:	cd b7       	in	r28, 0x3d	; 61
   116ca:	de b7       	in	r29, 0x3e	; 62
   116cc:	25 97       	sbiw	r28, 0x05	; 5
   116ce:	cd bf       	out	0x3d, r28	; 61
   116d0:	de bf       	out	0x3e, r29	; 62
   116d2:	8c 01       	movw	r16, r24
   116d4:	8f b7       	in	r24, 0x3f	; 63
   116d6:	89 83       	std	Y+1, r24	; 0x01
   116d8:	f8 94       	cli
   116da:	82 e0       	ldi	r24, 0x02	; 2
   116dc:	e8 2e       	mov	r14, r24
   116de:	f1 2c       	mov	r15, r1
   116e0:	ec 0e       	add	r14, r28
   116e2:	fd 1e       	adc	r15, r29
   116e4:	8c e0       	ldi	r24, 0x0C	; 12
   116e6:	90 e0       	ldi	r25, 0x00	; 0
   116e8:	b7 01       	movw	r22, r14
   116ea:	0e 94 99 b4 	call	0x16932	; 0x16932 <arb_malloc>
   116ee:	8a 81       	ldd	r24, Y+2	; 0x02
   116f0:	9b 81       	ldd	r25, Y+3	; 0x03
   116f2:	89 2b       	or	r24, r25
   116f4:	69 f0       	breq	.+26     	; 0x11710 <utl_createLink+0x54>
   116f6:	c8 01       	movw	r24, r16
   116f8:	be 01       	movw	r22, r28
   116fa:	6c 5f       	subi	r22, 0xFC	; 252
   116fc:	7f 4f       	sbci	r23, 0xFF	; 255
   116fe:	0e 94 99 b4 	call	0x16932	; 0x16932 <arb_malloc>
   11702:	8c 81       	ldd	r24, Y+4	; 0x04
   11704:	9d 81       	ldd	r25, Y+5	; 0x05
   11706:	00 97       	sbiw	r24, 0x00	; 0
   11708:	41 f4       	brne	.+16     	; 0x1171a <utl_createLink+0x5e>
   1170a:	c7 01       	movw	r24, r14
   1170c:	0e 94 75 b4 	call	0x168ea	; 0x168ea <arb_free>
   11710:	89 81       	ldd	r24, Y+1	; 0x01
   11712:	8f bf       	out	0x3f, r24	; 63
   11714:	ef ef       	ldi	r30, 0xFF	; 255
   11716:	ff ef       	ldi	r31, 0xFF	; 255
   11718:	30 c0       	rjmp	.+96     	; 0x1177a <utl_createLink+0xbe>
   1171a:	6f ef       	ldi	r22, 0xFF	; 255
   1171c:	70 e0       	ldi	r23, 0x00	; 0
   1171e:	a8 01       	movw	r20, r16
   11720:	0e 94 c0 b1 	call	0x16380	; 0x16380 <memset>
   11724:	ea 81       	ldd	r30, Y+2	; 0x02
   11726:	fb 81       	ldd	r31, Y+3	; 0x03
   11728:	8c 81       	ldd	r24, Y+4	; 0x04
   1172a:	9d 81       	ldd	r25, Y+5	; 0x05
   1172c:	80 83       	st	Z, r24
   1172e:	91 83       	std	Z+1, r25	; 0x01
   11730:	14 82       	std	Z+4, r1	; 0x04
   11732:	15 82       	std	Z+5, r1	; 0x05
   11734:	02 83       	std	Z+2, r16	; 0x02
   11736:	13 83       	std	Z+3, r17	; 0x03
   11738:	98 01       	movw	r18, r16
   1173a:	24 5f       	subi	r18, 0xF4	; 244
   1173c:	3f 4f       	sbci	r19, 0xFF	; 255
   1173e:	26 83       	std	Z+6, r18	; 0x06
   11740:	37 83       	std	Z+7, r19	; 0x07
   11742:	10 86       	std	Z+8, r1	; 0x08
   11744:	11 86       	std	Z+9, r1	; 0x09
   11746:	12 86       	std	Z+10, r1	; 0x0a
   11748:	13 86       	std	Z+11, r1	; 0x0b
   1174a:	40 e0       	ldi	r20, 0x00	; 0
   1174c:	50 e0       	ldi	r21, 0x00	; 0
   1174e:	80 91 6a 25 	lds	r24, 0x256A
   11752:	90 91 6b 25 	lds	r25, 0x256B
   11756:	a0 91 6c 25 	lds	r26, 0x256C
   1175a:	b0 91 6d 25 	lds	r27, 0x256D
   1175e:	82 0f       	add	r24, r18
   11760:	93 1f       	adc	r25, r19
   11762:	a4 1f       	adc	r26, r20
   11764:	b5 1f       	adc	r27, r21
   11766:	80 93 6a 25 	sts	0x256A, r24
   1176a:	90 93 6b 25 	sts	0x256B, r25
   1176e:	a0 93 6c 25 	sts	0x256C, r26
   11772:	b0 93 6d 25 	sts	0x256D, r27
   11776:	89 81       	ldd	r24, Y+1	; 0x01
   11778:	8f bf       	out	0x3f, r24	; 63
   1177a:	cf 01       	movw	r24, r30
   1177c:	25 96       	adiw	r28, 0x05	; 5
   1177e:	cd bf       	out	0x3d, r28	; 61
   11780:	de bf       	out	0x3e, r29	; 62
   11782:	cf 91       	pop	r28
   11784:	df 91       	pop	r29
   11786:	1f 91       	pop	r17
   11788:	0f 91       	pop	r16
   1178a:	ff 90       	pop	r15
   1178c:	ef 90       	pop	r14
   1178e:	08 95       	ret

00011790 <utl_createContainer>:
   11790:	df 93       	push	r29
   11792:	cf 93       	push	r28
   11794:	00 d0       	rcall	.+0      	; 0x11796 <utl_createContainer+0x6>
   11796:	cd b7       	in	r28, 0x3d	; 61
   11798:	de b7       	in	r29, 0x3e	; 62
   1179a:	8f b7       	in	r24, 0x3f	; 63
   1179c:	89 83       	std	Y+1, r24	; 0x01
   1179e:	f8 94       	cli
   117a0:	8c e0       	ldi	r24, 0x0C	; 12
   117a2:	90 e0       	ldi	r25, 0x00	; 0
   117a4:	be 01       	movw	r22, r28
   117a6:	6e 5f       	subi	r22, 0xFE	; 254
   117a8:	7f 4f       	sbci	r23, 0xFF	; 255
   117aa:	0e 94 99 b4 	call	0x16932	; 0x16932 <arb_malloc>
   117ae:	ea 81       	ldd	r30, Y+2	; 0x02
   117b0:	fb 81       	ldd	r31, Y+3	; 0x03
   117b2:	30 97       	sbiw	r30, 0x00	; 0
   117b4:	29 f4       	brne	.+10     	; 0x117c0 <utl_createContainer+0x30>
   117b6:	89 81       	ldd	r24, Y+1	; 0x01
   117b8:	8f bf       	out	0x3f, r24	; 63
   117ba:	2f ef       	ldi	r18, 0xFF	; 255
   117bc:	3f ef       	ldi	r19, 0xFF	; 255
   117be:	24 c0       	rjmp	.+72     	; 0x11808 <utl_createContainer+0x78>
   117c0:	8e ed       	ldi	r24, 0xDE	; 222
   117c2:	9a ef       	ldi	r25, 0xFA	; 250
   117c4:	80 83       	st	Z, r24
   117c6:	91 83       	std	Z+1, r25	; 0x01
   117c8:	12 82       	std	Z+2, r1	; 0x02
   117ca:	13 82       	std	Z+3, r1	; 0x03
   117cc:	8c e0       	ldi	r24, 0x0C	; 12
   117ce:	90 e0       	ldi	r25, 0x00	; 0
   117d0:	84 83       	std	Z+4, r24	; 0x04
   117d2:	95 83       	std	Z+5, r25	; 0x05
   117d4:	10 86       	std	Z+8, r1	; 0x08
   117d6:	11 86       	std	Z+9, r1	; 0x09
   117d8:	12 86       	std	Z+10, r1	; 0x0a
   117da:	13 86       	std	Z+11, r1	; 0x0b
   117dc:	80 91 6a 25 	lds	r24, 0x256A
   117e0:	90 91 6b 25 	lds	r25, 0x256B
   117e4:	a0 91 6c 25 	lds	r26, 0x256C
   117e8:	b0 91 6d 25 	lds	r27, 0x256D
   117ec:	0c 96       	adiw	r24, 0x0c	; 12
   117ee:	a1 1d       	adc	r26, r1
   117f0:	b1 1d       	adc	r27, r1
   117f2:	80 93 6a 25 	sts	0x256A, r24
   117f6:	90 93 6b 25 	sts	0x256B, r25
   117fa:	a0 93 6c 25 	sts	0x256C, r26
   117fe:	b0 93 6d 25 	sts	0x256D, r27
   11802:	89 81       	ldd	r24, Y+1	; 0x01
   11804:	8f bf       	out	0x3f, r24	; 63
   11806:	9f 01       	movw	r18, r30
   11808:	c9 01       	movw	r24, r18
   1180a:	23 96       	adiw	r28, 0x03	; 3
   1180c:	cd bf       	out	0x3d, r28	; 61
   1180e:	de bf       	out	0x3e, r29	; 62
   11810:	cf 91       	pop	r28
   11812:	df 91       	pop	r29
   11814:	08 95       	ret

00011816 <utl_cos16_16>:
   11816:	af 92       	push	r10
   11818:	bf 92       	push	r11
   1181a:	cf 92       	push	r12
   1181c:	df 92       	push	r13
   1181e:	ef 92       	push	r14
   11820:	ff 92       	push	r15
   11822:	0f 93       	push	r16
   11824:	1f 93       	push	r17
   11826:	9c 01       	movw	r18, r24
   11828:	e3 2e       	mov	r14, r19
   1182a:	e2 94       	swap	r14
   1182c:	ef e0       	ldi	r30, 0x0F	; 15
   1182e:	ee 22       	and	r14, r30
   11830:	ee 2d       	mov	r30, r14
   11832:	f0 e0       	ldi	r31, 0x00	; 0
   11834:	ee 0f       	add	r30, r30
   11836:	ff 1f       	adc	r31, r31
   11838:	df 01       	movw	r26, r30
   1183a:	a0 59       	subi	r26, 0x90	; 144
   1183c:	bc 4d       	sbci	r27, 0xDC	; 220
   1183e:	8d 91       	ld	r24, X+
   11840:	9c 91       	ld	r25, X
   11842:	5c 01       	movw	r10, r24
   11844:	cc 24       	eor	r12, r12
   11846:	b7 fc       	sbrc	r11, 7
   11848:	c0 94       	com	r12
   1184a:	dc 2c       	mov	r13, r12
   1184c:	ee 58       	subi	r30, 0x8E	; 142
   1184e:	fc 4d       	sbci	r31, 0xDC	; 220
   11850:	60 81       	ld	r22, Z
   11852:	71 81       	ldd	r23, Z+1	; 0x01
   11854:	6a 19       	sub	r22, r10
   11856:	7b 09       	sbc	r23, r11
   11858:	88 27       	eor	r24, r24
   1185a:	77 fd       	sbrc	r23, 7
   1185c:	80 95       	com	r24
   1185e:	98 2f       	mov	r25, r24
   11860:	ff 24       	eor	r15, r15
   11862:	00 e0       	ldi	r16, 0x00	; 0
   11864:	10 e0       	ldi	r17, 0x00	; 0
   11866:	5c e0       	ldi	r21, 0x0C	; 12
   11868:	ee 0c       	add	r14, r14
   1186a:	ff 1c       	adc	r15, r15
   1186c:	00 1f       	adc	r16, r16
   1186e:	11 1f       	adc	r17, r17
   11870:	5a 95       	dec	r21
   11872:	d1 f7       	brne	.-12     	; 0x11868 <utl_cos16_16+0x52>
   11874:	2e 19       	sub	r18, r14
   11876:	3f 09       	sbc	r19, r15
   11878:	44 27       	eor	r20, r20
   1187a:	37 fd       	sbrc	r19, 7
   1187c:	40 95       	com	r20
   1187e:	54 2f       	mov	r21, r20
   11880:	0e 94 cd b4 	call	0x1699a	; 0x1699a <__mulsi3>
   11884:	97 fd       	sbrc	r25, 7
   11886:	02 c0       	rjmp	.+4      	; 0x1188c <utl_cos16_16+0x76>
   11888:	21 e0       	ldi	r18, 0x01	; 1
   1188a:	08 c0       	rjmp	.+16     	; 0x1189c <utl_cos16_16+0x86>
   1188c:	90 95       	com	r25
   1188e:	80 95       	com	r24
   11890:	70 95       	com	r23
   11892:	61 95       	neg	r22
   11894:	7f 4f       	sbci	r23, 0xFF	; 255
   11896:	8f 4f       	sbci	r24, 0xFF	; 255
   11898:	9f 4f       	sbci	r25, 0xFF	; 255
   1189a:	2f ef       	ldi	r18, 0xFF	; 255
   1189c:	44 e0       	ldi	r20, 0x04	; 4
   1189e:	66 0f       	add	r22, r22
   118a0:	77 1f       	adc	r23, r23
   118a2:	88 1f       	adc	r24, r24
   118a4:	99 1f       	adc	r25, r25
   118a6:	4a 95       	dec	r20
   118a8:	d1 f7       	brne	.-12     	; 0x1189e <utl_cos16_16+0x88>
   118aa:	2f 3f       	cpi	r18, 0xFF	; 255
   118ac:	29 f4       	brne	.+10     	; 0x118b8 <utl_cos16_16+0xa2>
   118ae:	ee 27       	eor	r30, r30
   118b0:	ff 27       	eor	r31, r31
   118b2:	e8 1b       	sub	r30, r24
   118b4:	f9 0b       	sbc	r31, r25
   118b6:	01 c0       	rjmp	.+2      	; 0x118ba <utl_cos16_16+0xa4>
   118b8:	fc 01       	movw	r30, r24
   118ba:	9f 01       	movw	r18, r30
   118bc:	44 27       	eor	r20, r20
   118be:	37 fd       	sbrc	r19, 7
   118c0:	40 95       	com	r20
   118c2:	54 2f       	mov	r21, r20
   118c4:	2a 0d       	add	r18, r10
   118c6:	3b 1d       	adc	r19, r11
   118c8:	4c 1d       	adc	r20, r12
   118ca:	5d 1d       	adc	r21, r13
   118cc:	c9 01       	movw	r24, r18
   118ce:	1f 91       	pop	r17
   118d0:	0f 91       	pop	r16
   118d2:	ff 90       	pop	r15
   118d4:	ef 90       	pop	r14
   118d6:	df 90       	pop	r13
   118d8:	cf 90       	pop	r12
   118da:	bf 90       	pop	r11
   118dc:	af 90       	pop	r10
   118de:	08 95       	ret

000118e0 <utl_atan2_16>:
   118e0:	af 92       	push	r10
   118e2:	bf 92       	push	r11
   118e4:	cf 92       	push	r12
   118e6:	df 92       	push	r13
   118e8:	ef 92       	push	r14
   118ea:	ff 92       	push	r15
   118ec:	0f 93       	push	r16
   118ee:	1f 93       	push	r17
   118f0:	cf 93       	push	r28
   118f2:	df 93       	push	r29
   118f4:	6c 01       	movw	r12, r24
   118f6:	5b 01       	movw	r10, r22
   118f8:	9b 01       	movw	r18, r22
   118fa:	44 27       	eor	r20, r20
   118fc:	37 fd       	sbrc	r19, 7
   118fe:	40 95       	com	r20
   11900:	54 2f       	mov	r21, r20
   11902:	57 ff       	sbrs	r21, 7
   11904:	07 c0       	rjmp	.+14     	; 0x11914 <utl_atan2_16+0x34>
   11906:	50 95       	com	r21
   11908:	40 95       	com	r20
   1190a:	30 95       	com	r19
   1190c:	21 95       	neg	r18
   1190e:	3f 4f       	sbci	r19, 0xFF	; 255
   11910:	4f 4f       	sbci	r20, 0xFF	; 255
   11912:	5f 4f       	sbci	r21, 0xFF	; 255
   11914:	89 01       	movw	r16, r18
   11916:	96 01       	movw	r18, r12
   11918:	44 27       	eor	r20, r20
   1191a:	37 fd       	sbrc	r19, 7
   1191c:	40 95       	com	r20
   1191e:	54 2f       	mov	r21, r20
   11920:	57 ff       	sbrs	r21, 7
   11922:	07 c0       	rjmp	.+14     	; 0x11932 <utl_atan2_16+0x52>
   11924:	50 95       	com	r21
   11926:	40 95       	com	r20
   11928:	30 95       	com	r19
   1192a:	21 95       	neg	r18
   1192c:	3f 4f       	sbci	r19, 0xFF	; 255
   1192e:	4f 4f       	sbci	r20, 0xFF	; 255
   11930:	5f 4f       	sbci	r21, 0xFF	; 255
   11932:	e9 01       	movw	r28, r18
   11934:	02 17       	cp	r16, r18
   11936:	13 07       	cpc	r17, r19
   11938:	08 f4       	brcc	.+2      	; 0x1193c <utl_atan2_16+0x5c>
   1193a:	6e c0       	rjmp	.+220    	; 0x11a18 <utl_atan2_16+0x138>
   1193c:	b9 01       	movw	r22, r18
   1193e:	80 e0       	ldi	r24, 0x00	; 0
   11940:	90 e0       	ldi	r25, 0x00	; 0
   11942:	2f ef       	ldi	r18, 0xFF	; 255
   11944:	3f e7       	ldi	r19, 0x7F	; 127
   11946:	40 e0       	ldi	r20, 0x00	; 0
   11948:	50 e0       	ldi	r21, 0x00	; 0
   1194a:	0e 94 cd b4 	call	0x1699a	; 0x1699a <__mulsi3>
   1194e:	0f 5f       	subi	r16, 0xFF	; 255
   11950:	1f 4f       	sbci	r17, 0xFF	; 255
   11952:	98 01       	movw	r18, r16
   11954:	40 e0       	ldi	r20, 0x00	; 0
   11956:	50 e0       	ldi	r21, 0x00	; 0
   11958:	0e 94 ec b4 	call	0x169d8	; 0x169d8 <__udivmodsi4>
   1195c:	79 01       	movw	r14, r18
   1195e:	ef 2c       	mov	r14, r15
   11960:	ff 24       	eor	r15, r15
   11962:	e6 94       	lsr	r14
   11964:	e6 94       	lsr	r14
   11966:	e6 94       	lsr	r14
   11968:	00 e0       	ldi	r16, 0x00	; 0
   1196a:	10 e0       	ldi	r17, 0x00	; 0
   1196c:	f7 01       	movw	r30, r14
   1196e:	ee 0f       	add	r30, r30
   11970:	ff 1f       	adc	r31, r31
   11972:	e8 50       	subi	r30, 0x08	; 8
   11974:	fd 4d       	sbci	r31, 0xDD	; 221
   11976:	c0 81       	ld	r28, Z
   11978:	d1 81       	ldd	r29, Z+1	; 0x01
   1197a:	d8 01       	movw	r26, r16
   1197c:	c7 01       	movw	r24, r14
   1197e:	4b e0       	ldi	r20, 0x0B	; 11
   11980:	88 0f       	add	r24, r24
   11982:	99 1f       	adc	r25, r25
   11984:	aa 1f       	adc	r26, r26
   11986:	bb 1f       	adc	r27, r27
   11988:	4a 95       	dec	r20
   1198a:	d1 f7       	brne	.-12     	; 0x11980 <utl_atan2_16+0xa0>
   1198c:	28 1b       	sub	r18, r24
   1198e:	39 0b       	sbc	r19, r25
   11990:	b9 01       	movw	r22, r18
   11992:	88 27       	eor	r24, r24
   11994:	77 fd       	sbrc	r23, 7
   11996:	80 95       	com	r24
   11998:	98 2f       	mov	r25, r24
   1199a:	08 94       	sec
   1199c:	e1 1c       	adc	r14, r1
   1199e:	f1 1c       	adc	r15, r1
   119a0:	01 1d       	adc	r16, r1
   119a2:	11 1d       	adc	r17, r1
   119a4:	ee 0c       	add	r14, r14
   119a6:	ff 1c       	adc	r15, r15
   119a8:	28 ef       	ldi	r18, 0xF8	; 248
   119aa:	32 e2       	ldi	r19, 0x22	; 34
   119ac:	e2 0e       	add	r14, r18
   119ae:	f3 1e       	adc	r15, r19
   119b0:	f7 01       	movw	r30, r14
   119b2:	20 81       	ld	r18, Z
   119b4:	31 81       	ldd	r19, Z+1	; 0x01
   119b6:	2c 1b       	sub	r18, r28
   119b8:	3d 0b       	sbc	r19, r29
   119ba:	44 27       	eor	r20, r20
   119bc:	37 fd       	sbrc	r19, 7
   119be:	40 95       	com	r20
   119c0:	54 2f       	mov	r21, r20
   119c2:	0e 94 cd b4 	call	0x1699a	; 0x1699a <__mulsi3>
   119c6:	97 fd       	sbrc	r25, 7
   119c8:	02 c0       	rjmp	.+4      	; 0x119ce <utl_atan2_16+0xee>
   119ca:	21 e0       	ldi	r18, 0x01	; 1
   119cc:	08 c0       	rjmp	.+16     	; 0x119de <utl_atan2_16+0xfe>
   119ce:	90 95       	com	r25
   119d0:	80 95       	com	r24
   119d2:	70 95       	com	r23
   119d4:	61 95       	neg	r22
   119d6:	7f 4f       	sbci	r23, 0xFF	; 255
   119d8:	8f 4f       	sbci	r24, 0xFF	; 255
   119da:	9f 4f       	sbci	r25, 0xFF	; 255
   119dc:	2f ef       	ldi	r18, 0xFF	; 255
   119de:	e5 e0       	ldi	r30, 0x05	; 5
   119e0:	66 0f       	add	r22, r22
   119e2:	77 1f       	adc	r23, r23
   119e4:	88 1f       	adc	r24, r24
   119e6:	99 1f       	adc	r25, r25
   119e8:	ea 95       	dec	r30
   119ea:	d1 f7       	brne	.-12     	; 0x119e0 <utl_atan2_16+0x100>
   119ec:	2f 3f       	cpi	r18, 0xFF	; 255
   119ee:	29 f4       	brne	.+10     	; 0x119fa <utl_atan2_16+0x11a>
   119f0:	22 27       	eor	r18, r18
   119f2:	33 27       	eor	r19, r19
   119f4:	28 1b       	sub	r18, r24
   119f6:	39 0b       	sbc	r19, r25
   119f8:	01 c0       	rjmp	.+2      	; 0x119fc <utl_atan2_16+0x11c>
   119fa:	9c 01       	movw	r18, r24
   119fc:	c9 01       	movw	r24, r18
   119fe:	aa 27       	eor	r26, r26
   11a00:	97 fd       	sbrc	r25, 7
   11a02:	a0 95       	com	r26
   11a04:	ba 2f       	mov	r27, r26
   11a06:	9e 01       	movw	r18, r28
   11a08:	40 e0       	ldi	r20, 0x00	; 0
   11a0a:	50 e0       	ldi	r21, 0x00	; 0
   11a0c:	82 0f       	add	r24, r18
   11a0e:	93 1f       	adc	r25, r19
   11a10:	a4 1f       	adc	r26, r20
   11a12:	b5 1f       	adc	r27, r21
   11a14:	9c 01       	movw	r18, r24
   11a16:	6f c0       	rjmp	.+222    	; 0x11af6 <utl_atan2_16+0x216>
   11a18:	b8 01       	movw	r22, r16
   11a1a:	80 e0       	ldi	r24, 0x00	; 0
   11a1c:	90 e0       	ldi	r25, 0x00	; 0
   11a1e:	2f ef       	ldi	r18, 0xFF	; 255
   11a20:	3f e7       	ldi	r19, 0x7F	; 127
   11a22:	40 e0       	ldi	r20, 0x00	; 0
   11a24:	50 e0       	ldi	r21, 0x00	; 0
   11a26:	0e 94 cd b4 	call	0x1699a	; 0x1699a <__mulsi3>
   11a2a:	21 96       	adiw	r28, 0x01	; 1
   11a2c:	9e 01       	movw	r18, r28
   11a2e:	40 e0       	ldi	r20, 0x00	; 0
   11a30:	50 e0       	ldi	r21, 0x00	; 0
   11a32:	0e 94 ec b4 	call	0x169d8	; 0x169d8 <__udivmodsi4>
   11a36:	79 01       	movw	r14, r18
   11a38:	ef 2c       	mov	r14, r15
   11a3a:	ff 24       	eor	r15, r15
   11a3c:	e6 94       	lsr	r14
   11a3e:	e6 94       	lsr	r14
   11a40:	e6 94       	lsr	r14
   11a42:	00 e0       	ldi	r16, 0x00	; 0
   11a44:	10 e0       	ldi	r17, 0x00	; 0
   11a46:	f7 01       	movw	r30, r14
   11a48:	ee 0f       	add	r30, r30
   11a4a:	ff 1f       	adc	r31, r31
   11a4c:	e8 50       	subi	r30, 0x08	; 8
   11a4e:	fd 4d       	sbci	r31, 0xDD	; 221
   11a50:	c0 81       	ld	r28, Z
   11a52:	d1 81       	ldd	r29, Z+1	; 0x01
   11a54:	d8 01       	movw	r26, r16
   11a56:	c7 01       	movw	r24, r14
   11a58:	4b e0       	ldi	r20, 0x0B	; 11
   11a5a:	88 0f       	add	r24, r24
   11a5c:	99 1f       	adc	r25, r25
   11a5e:	aa 1f       	adc	r26, r26
   11a60:	bb 1f       	adc	r27, r27
   11a62:	4a 95       	dec	r20
   11a64:	d1 f7       	brne	.-12     	; 0x11a5a <utl_atan2_16+0x17a>
   11a66:	28 1b       	sub	r18, r24
   11a68:	39 0b       	sbc	r19, r25
   11a6a:	b9 01       	movw	r22, r18
   11a6c:	88 27       	eor	r24, r24
   11a6e:	77 fd       	sbrc	r23, 7
   11a70:	80 95       	com	r24
   11a72:	98 2f       	mov	r25, r24
   11a74:	08 94       	sec
   11a76:	e1 1c       	adc	r14, r1
   11a78:	f1 1c       	adc	r15, r1
   11a7a:	01 1d       	adc	r16, r1
   11a7c:	11 1d       	adc	r17, r1
   11a7e:	ee 0c       	add	r14, r14
   11a80:	ff 1c       	adc	r15, r15
   11a82:	28 ef       	ldi	r18, 0xF8	; 248
   11a84:	32 e2       	ldi	r19, 0x22	; 34
   11a86:	e2 0e       	add	r14, r18
   11a88:	f3 1e       	adc	r15, r19
   11a8a:	f7 01       	movw	r30, r14
   11a8c:	20 81       	ld	r18, Z
   11a8e:	31 81       	ldd	r19, Z+1	; 0x01
   11a90:	2c 1b       	sub	r18, r28
   11a92:	3d 0b       	sbc	r19, r29
   11a94:	44 27       	eor	r20, r20
   11a96:	37 fd       	sbrc	r19, 7
   11a98:	40 95       	com	r20
   11a9a:	54 2f       	mov	r21, r20
   11a9c:	0e 94 cd b4 	call	0x1699a	; 0x1699a <__mulsi3>
   11aa0:	97 fd       	sbrc	r25, 7
   11aa2:	02 c0       	rjmp	.+4      	; 0x11aa8 <utl_atan2_16+0x1c8>
   11aa4:	21 e0       	ldi	r18, 0x01	; 1
   11aa6:	08 c0       	rjmp	.+16     	; 0x11ab8 <utl_atan2_16+0x1d8>
   11aa8:	90 95       	com	r25
   11aaa:	80 95       	com	r24
   11aac:	70 95       	com	r23
   11aae:	61 95       	neg	r22
   11ab0:	7f 4f       	sbci	r23, 0xFF	; 255
   11ab2:	8f 4f       	sbci	r24, 0xFF	; 255
   11ab4:	9f 4f       	sbci	r25, 0xFF	; 255
   11ab6:	2f ef       	ldi	r18, 0xFF	; 255
   11ab8:	15 e0       	ldi	r17, 0x05	; 5
   11aba:	66 0f       	add	r22, r22
   11abc:	77 1f       	adc	r23, r23
   11abe:	88 1f       	adc	r24, r24
   11ac0:	99 1f       	adc	r25, r25
   11ac2:	1a 95       	dec	r17
   11ac4:	d1 f7       	brne	.-12     	; 0x11aba <utl_atan2_16+0x1da>
   11ac6:	2f 3f       	cpi	r18, 0xFF	; 255
   11ac8:	29 f4       	brne	.+10     	; 0x11ad4 <utl_atan2_16+0x1f4>
   11aca:	22 27       	eor	r18, r18
   11acc:	33 27       	eor	r19, r19
   11ace:	28 1b       	sub	r18, r24
   11ad0:	39 0b       	sbc	r19, r25
   11ad2:	01 c0       	rjmp	.+2      	; 0x11ad6 <utl_atan2_16+0x1f6>
   11ad4:	9c 01       	movw	r18, r24
   11ad6:	c9 01       	movw	r24, r18
   11ad8:	aa 27       	eor	r26, r26
   11ada:	97 fd       	sbrc	r25, 7
   11adc:	a0 95       	com	r26
   11ade:	ba 2f       	mov	r27, r26
   11ae0:	9e 01       	movw	r18, r28
   11ae2:	40 e0       	ldi	r20, 0x00	; 0
   11ae4:	50 e0       	ldi	r21, 0x00	; 0
   11ae6:	82 0f       	add	r24, r18
   11ae8:	93 1f       	adc	r25, r19
   11aea:	a4 1f       	adc	r26, r20
   11aec:	b5 1f       	adc	r27, r21
   11aee:	2f ef       	ldi	r18, 0xFF	; 255
   11af0:	3f e3       	ldi	r19, 0x3F	; 63
   11af2:	28 1b       	sub	r18, r24
   11af4:	39 0b       	sbc	r19, r25
   11af6:	b7 fe       	sbrs	r11, 7
   11af8:	09 c0       	rjmp	.+18     	; 0x11b0c <utl_atan2_16+0x22c>
   11afa:	d7 fc       	sbrc	r13, 7
   11afc:	07 c0       	rjmp	.+14     	; 0x11b0c <utl_atan2_16+0x22c>
   11afe:	8f ef       	ldi	r24, 0xFF	; 255
   11b00:	9f e7       	ldi	r25, 0x7F	; 127
   11b02:	ac 01       	movw	r20, r24
   11b04:	42 1b       	sub	r20, r18
   11b06:	53 0b       	sbc	r21, r19
   11b08:	9a 01       	movw	r18, r20
   11b0a:	0f c0       	rjmp	.+30     	; 0x11b2a <utl_atan2_16+0x24a>
   11b0c:	1a 14       	cp	r1, r10
   11b0e:	1b 04       	cpc	r1, r11
   11b10:	34 f0       	brlt	.+12     	; 0x11b1e <utl_atan2_16+0x23e>
   11b12:	1c 14       	cp	r1, r12
   11b14:	1d 04       	cpc	r1, r13
   11b16:	4c f0       	brlt	.+18     	; 0x11b2a <utl_atan2_16+0x24a>
   11b18:	20 50       	subi	r18, 0x00	; 0
   11b1a:	30 48       	sbci	r19, 0x80	; 128
   11b1c:	06 c0       	rjmp	.+12     	; 0x11b2a <utl_atan2_16+0x24a>
   11b1e:	1c 14       	cp	r1, r12
   11b20:	1d 04       	cpc	r1, r13
   11b22:	1c f0       	brlt	.+6      	; 0x11b2a <utl_atan2_16+0x24a>
   11b24:	30 95       	com	r19
   11b26:	21 95       	neg	r18
   11b28:	3f 4f       	sbci	r19, 0xFF	; 255
   11b2a:	c9 01       	movw	r24, r18
   11b2c:	df 91       	pop	r29
   11b2e:	cf 91       	pop	r28
   11b30:	1f 91       	pop	r17
   11b32:	0f 91       	pop	r16
   11b34:	ff 90       	pop	r15
   11b36:	ef 90       	pop	r14
   11b38:	df 90       	pop	r13
   11b3a:	cf 90       	pop	r12
   11b3c:	bf 90       	pop	r11
   11b3e:	af 90       	pop	r10
   11b40:	08 95       	ret

00011b42 <sd_begin>:
   11b42:	cf 93       	push	r28
   11b44:	df 93       	push	r29
   11b46:	0f 92       	push	r0
   11b48:	0f 92       	push	r0
   11b4a:	cd b7       	in	r28, 0x3d	; 61
   11b4c:	de b7       	in	r29, 0x3e	; 62
   11b4e:	89 83       	std	Y+1, r24	; 0x01
   11b50:	9a 83       	std	Y+2, r25	; 0x02
   11b52:	69 81       	ldd	r22, Y+1	; 0x01
   11b54:	7a 81       	ldd	r23, Y+2	; 0x02
   11b56:	82 e7       	ldi	r24, 0x72	; 114
   11b58:	95 e2       	ldi	r25, 0x25	; 37
   11b5a:	0e 94 c3 a1 	call	0x14386	; 0x14386 <_ZN5SdFat5beginEi>
   11b5e:	0f 90       	pop	r0
   11b60:	0f 90       	pop	r0
   11b62:	df 91       	pop	r29
   11b64:	cf 91       	pop	r28
   11b66:	08 95       	ret

00011b68 <sd_init>:
   11b68:	cf 93       	push	r28
   11b6a:	df 93       	push	r29
   11b6c:	0f 92       	push	r0
   11b6e:	0f 92       	push	r0
   11b70:	cd b7       	in	r28, 0x3d	; 61
   11b72:	de b7       	in	r29, 0x3e	; 62
   11b74:	89 83       	std	Y+1, r24	; 0x01
   11b76:	9a 83       	std	Y+2, r25	; 0x02
   11b78:	69 81       	ldd	r22, Y+1	; 0x01
   11b7a:	7a 81       	ldd	r23, Y+2	; 0x02
   11b7c:	82 e7       	ldi	r24, 0x72	; 114
   11b7e:	95 e2       	ldi	r25, 0x25	; 37
   11b80:	0e 94 ac 91 	call	0x12358	; 0x12358 <_ZN7Sd2Card4initEi>
   11b84:	0f 90       	pop	r0
   11b86:	0f 90       	pop	r0
   11b88:	df 91       	pop	r29
   11b8a:	cf 91       	pop	r28
   11b8c:	08 95       	ret

00011b8e <sd_open>:
   11b8e:	2f 92       	push	r2
   11b90:	3f 92       	push	r3
   11b92:	4f 92       	push	r4
   11b94:	5f 92       	push	r5
   11b96:	6f 92       	push	r6
   11b98:	7f 92       	push	r7
   11b9a:	8f 92       	push	r8
   11b9c:	9f 92       	push	r9
   11b9e:	af 92       	push	r10
   11ba0:	bf 92       	push	r11
   11ba2:	cf 92       	push	r12
   11ba4:	df 92       	push	r13
   11ba6:	ef 92       	push	r14
   11ba8:	ff 92       	push	r15
   11baa:	0f 93       	push	r16
   11bac:	1f 93       	push	r17
   11bae:	cf 93       	push	r28
   11bb0:	df 93       	push	r29
   11bb2:	cd b7       	in	r28, 0x3d	; 61
   11bb4:	de b7       	in	r29, 0x3e	; 62
   11bb6:	68 97       	sbiw	r28, 0x18	; 24
   11bb8:	cd bf       	out	0x3d, r28	; 61
   11bba:	de bf       	out	0x3e, r29	; 62
   11bbc:	8c 01       	movw	r16, r24
   11bbe:	68 8f       	std	Y+24, r22	; 0x18
   11bc0:	8f b7       	in	r24, 0x3f	; 63
   11bc2:	89 83       	std	Y+1, r24	; 0x01
   11bc4:	f8 94       	cli
   11bc6:	8f e1       	ldi	r24, 0x1F	; 31
   11bc8:	90 e0       	ldi	r25, 0x00	; 0
   11bca:	be 01       	movw	r22, r28
   11bcc:	6e 5f       	subi	r22, 0xFE	; 254
   11bce:	7f 4f       	sbci	r23, 0xFF	; 255
   11bd0:	0e 94 99 b4 	call	0x16932	; 0x16932 <arb_malloc>
   11bd4:	8a 81       	ldd	r24, Y+2	; 0x02
   11bd6:	9b 81       	ldd	r25, Y+3	; 0x03
   11bd8:	04 96       	adiw	r24, 0x04	; 4
   11bda:	0e 94 f2 99 	call	0x133e4	; 0x133e4 <_ZN10SdBaseFile5closeEv>
   11bde:	8a 81       	ldd	r24, Y+2	; 0x02
   11be0:	9b 81       	ldd	r25, Y+3	; 0x03
   11be2:	00 97       	sbiw	r24, 0x00	; 0
   11be4:	09 f4       	brne	.+2      	; 0x11be8 <sd_open+0x5a>
   11be6:	8d c0       	rjmp	.+282    	; 0x11d02 <sd_open+0x174>
   11be8:	85 e9       	ldi	r24, 0x95	; 149
   11bea:	95 e2       	ldi	r25, 0x25	; 37
   11bec:	60 eb       	ldi	r22, 0xB0	; 176
   11bee:	75 e2       	ldi	r23, 0x25	; 37
   11bf0:	0e 94 10 95 	call	0x12a20	; 0x12a20 <_ZN10SdBaseFile11getFilenameEPc>
   11bf4:	c8 01       	movw	r24, r16
   11bf6:	6a ec       	ldi	r22, 0xCA	; 202
   11bf8:	73 e2       	ldi	r23, 0x23	; 35
   11bfa:	0e 94 a5 b1 	call	0x1634a	; 0x1634a <strtok>
   11bfe:	8c 83       	std	Y+4, r24	; 0x04
   11c00:	9d 83       	std	Y+5, r25	; 0x05
   11c02:	34 e0       	ldi	r19, 0x04	; 4
   11c04:	23 2e       	mov	r2, r19
   11c06:	31 2c       	mov	r3, r1
   11c08:	2c 0e       	add	r2, r28
   11c0a:	3d 1e       	adc	r3, r29
   11c0c:	81 01       	movw	r16, r2
   11c0e:	cc 24       	eor	r12, r12
   11c10:	dd 24       	eor	r13, r13
   11c12:	76 01       	movw	r14, r12
   11c14:	f8 01       	movw	r30, r16
   11c16:	81 91       	ld	r24, Z+
   11c18:	91 91       	ld	r25, Z+
   11c1a:	8f 01       	movw	r16, r30
   11c1c:	00 97       	sbiw	r24, 0x00	; 0
   11c1e:	a9 f0       	breq	.+42     	; 0x11c4a <sd_open+0xbc>
   11c20:	fa e0       	ldi	r31, 0x0A	; 10
   11c22:	cf 16       	cp	r12, r31
   11c24:	d1 04       	cpc	r13, r1
   11c26:	e1 04       	cpc	r14, r1
   11c28:	f1 04       	cpc	r15, r1
   11c2a:	79 f0       	breq	.+30     	; 0x11c4a <sd_open+0xbc>
   11c2c:	08 94       	sec
   11c2e:	c1 1c       	adc	r12, r1
   11c30:	d1 1c       	adc	r13, r1
   11c32:	e1 1c       	adc	r14, r1
   11c34:	f1 1c       	adc	r15, r1
   11c36:	80 e0       	ldi	r24, 0x00	; 0
   11c38:	90 e0       	ldi	r25, 0x00	; 0
   11c3a:	6a ec       	ldi	r22, 0xCA	; 202
   11c3c:	73 e2       	ldi	r23, 0x23	; 35
   11c3e:	0e 94 a5 b1 	call	0x1634a	; 0x1634a <strtok>
   11c42:	f8 01       	movw	r30, r16
   11c44:	80 83       	st	Z, r24
   11c46:	91 83       	std	Z+1, r25	; 0x01
   11c48:	e5 cf       	rjmp	.-54     	; 0x11c14 <sd_open+0x86>
   11c4a:	88 24       	eor	r8, r8
   11c4c:	99 24       	eor	r9, r9
   11c4e:	54 01       	movw	r10, r8
   11c50:	26 01       	movw	r4, r12
   11c52:	37 01       	movw	r6, r14
   11c54:	08 94       	sec
   11c56:	41 08       	sbc	r4, r1
   11c58:	51 08       	sbc	r5, r1
   11c5a:	61 08       	sbc	r6, r1
   11c5c:	71 08       	sbc	r7, r1
   11c5e:	f8 8d       	ldd	r31, Y+24	; 0x18
   11c60:	0f 2f       	mov	r16, r31
   11c62:	10 e0       	ldi	r17, 0x00	; 0
   11c64:	02 70       	andi	r16, 0x02	; 2
   11c66:	10 70       	andi	r17, 0x00	; 0
   11c68:	20 c0       	rjmp	.+64     	; 0x11caa <sd_open+0x11c>
   11c6a:	f1 01       	movw	r30, r2
   11c6c:	c1 90       	ld	r12, Z+
   11c6e:	d1 90       	ld	r13, Z+
   11c70:	1f 01       	movw	r2, r30
   11c72:	82 e7       	ldi	r24, 0x72	; 114
   11c74:	95 e2       	ldi	r25, 0x25	; 37
   11c76:	b6 01       	movw	r22, r12
   11c78:	40 e0       	ldi	r20, 0x00	; 0
   11c7a:	0e 94 f6 a1 	call	0x143ec	; 0x143ec <_ZN5SdFat5chdirEPKcb>
   11c7e:	88 23       	and	r24, r24
   11c80:	79 f4       	brne	.+30     	; 0x11ca0 <sd_open+0x112>
   11c82:	01 15       	cp	r16, r1
   11c84:	11 05       	cpc	r17, r1
   11c86:	61 f0       	breq	.+24     	; 0x11ca0 <sd_open+0x112>
   11c88:	82 e7       	ldi	r24, 0x72	; 114
   11c8a:	95 e2       	ldi	r25, 0x25	; 37
   11c8c:	b6 01       	movw	r22, r12
   11c8e:	41 e0       	ldi	r20, 0x01	; 1
   11c90:	0e 94 43 a2 	call	0x14486	; 0x14486 <_ZN5SdFat5mkdirEPKcb>
   11c94:	82 e7       	ldi	r24, 0x72	; 114
   11c96:	95 e2       	ldi	r25, 0x25	; 37
   11c98:	b6 01       	movw	r22, r12
   11c9a:	40 e0       	ldi	r20, 0x00	; 0
   11c9c:	0e 94 f6 a1 	call	0x143ec	; 0x143ec <_ZN5SdFat5chdirEPKcb>
   11ca0:	08 94       	sec
   11ca2:	81 1c       	adc	r8, r1
   11ca4:	91 1c       	adc	r9, r1
   11ca6:	a1 1c       	adc	r10, r1
   11ca8:	b1 1c       	adc	r11, r1
   11caa:	84 14       	cp	r8, r4
   11cac:	95 04       	cpc	r9, r5
   11cae:	a6 04       	cpc	r10, r6
   11cb0:	b7 04       	cpc	r11, r7
   11cb2:	dc f2       	brlt	.-74     	; 0x11c6a <sd_open+0xdc>
   11cb4:	8a 81       	ldd	r24, Y+2	; 0x02
   11cb6:	9b 81       	ldd	r25, Y+3	; 0x03
   11cb8:	f2 01       	movw	r30, r4
   11cba:	ee 0f       	add	r30, r30
   11cbc:	ff 1f       	adc	r31, r31
   11cbe:	ec 0f       	add	r30, r28
   11cc0:	fd 1f       	adc	r31, r29
   11cc2:	64 81       	ldd	r22, Z+4	; 0x04
   11cc4:	75 81       	ldd	r23, Z+5	; 0x05
   11cc6:	04 96       	adiw	r24, 0x04	; 4
   11cc8:	48 8d       	ldd	r20, Y+24	; 0x18
   11cca:	0e 94 53 9e 	call	0x13ca6	; 0x13ca6 <_ZN10SdBaseFile4openEPKch>
   11cce:	08 2f       	mov	r16, r24
   11cd0:	82 e7       	ldi	r24, 0x72	; 114
   11cd2:	95 e2       	ldi	r25, 0x25	; 37
   11cd4:	60 eb       	ldi	r22, 0xB0	; 176
   11cd6:	75 e2       	ldi	r23, 0x25	; 37
   11cd8:	40 e0       	ldi	r20, 0x00	; 0
   11cda:	0e 94 f6 a1 	call	0x143ec	; 0x143ec <_ZN5SdFat5chdirEPKcb>
   11cde:	89 81       	ldd	r24, Y+1	; 0x01
   11ce0:	8f bf       	out	0x3f, r24	; 63
   11ce2:	00 23       	and	r16, r16
   11ce4:	49 f0       	breq	.+18     	; 0x11cf8 <sd_open+0x16a>
   11ce6:	85 e9       	ldi	r24, 0x95	; 149
   11ce8:	95 e2       	ldi	r25, 0x25	; 37
   11cea:	60 eb       	ldi	r22, 0xB0	; 176
   11cec:	75 e2       	ldi	r23, 0x25	; 37
   11cee:	0e 94 10 95 	call	0x12a20	; 0x12a20 <_ZN10SdBaseFile11getFilenameEPc>
   11cf2:	8a 81       	ldd	r24, Y+2	; 0x02
   11cf4:	9b 81       	ldd	r25, Y+3	; 0x03
   11cf6:	09 c0       	rjmp	.+18     	; 0x11d0a <sd_open+0x17c>
   11cf8:	ce 01       	movw	r24, r28
   11cfa:	02 96       	adiw	r24, 0x02	; 2
   11cfc:	0e 94 75 b4 	call	0x168ea	; 0x168ea <arb_free>
   11d00:	02 c0       	rjmp	.+4      	; 0x11d06 <sd_open+0x178>
   11d02:	89 81       	ldd	r24, Y+1	; 0x01
   11d04:	8f bf       	out	0x3f, r24	; 63
   11d06:	80 e0       	ldi	r24, 0x00	; 0
   11d08:	90 e0       	ldi	r25, 0x00	; 0
   11d0a:	68 96       	adiw	r28, 0x18	; 24
   11d0c:	cd bf       	out	0x3d, r28	; 61
   11d0e:	de bf       	out	0x3e, r29	; 62
   11d10:	df 91       	pop	r29
   11d12:	cf 91       	pop	r28
   11d14:	1f 91       	pop	r17
   11d16:	0f 91       	pop	r16
   11d18:	ff 90       	pop	r15
   11d1a:	ef 90       	pop	r14
   11d1c:	df 90       	pop	r13
   11d1e:	cf 90       	pop	r12
   11d20:	bf 90       	pop	r11
   11d22:	af 90       	pop	r10
   11d24:	9f 90       	pop	r9
   11d26:	8f 90       	pop	r8
   11d28:	7f 90       	pop	r7
   11d2a:	6f 90       	pop	r6
   11d2c:	5f 90       	pop	r5
   11d2e:	4f 90       	pop	r4
   11d30:	3f 90       	pop	r3
   11d32:	2f 90       	pop	r2
   11d34:	08 95       	ret

00011d36 <sd_close>:
   11d36:	1f 93       	push	r17
   11d38:	cf 93       	push	r28
   11d3a:	df 93       	push	r29
   11d3c:	0f 92       	push	r0
   11d3e:	0f 92       	push	r0
   11d40:	cd b7       	in	r28, 0x3d	; 61
   11d42:	de b7       	in	r29, 0x3e	; 62
   11d44:	89 83       	std	Y+1, r24	; 0x01
   11d46:	9a 83       	std	Y+2, r25	; 0x02
   11d48:	04 96       	adiw	r24, 0x04	; 4
   11d4a:	0e 94 f2 99 	call	0x133e4	; 0x133e4 <_ZN10SdBaseFile5closeEv>
   11d4e:	18 2f       	mov	r17, r24
   11d50:	88 23       	and	r24, r24
   11d52:	21 f0       	breq	.+8      	; 0x11d5c <sd_close+0x26>
   11d54:	ce 01       	movw	r24, r28
   11d56:	01 96       	adiw	r24, 0x01	; 1
   11d58:	0e 94 75 b4 	call	0x168ea	; 0x168ea <arb_free>
   11d5c:	81 2f       	mov	r24, r17
   11d5e:	0f 90       	pop	r0
   11d60:	0f 90       	pop	r0
   11d62:	df 91       	pop	r29
   11d64:	cf 91       	pop	r28
   11d66:	1f 91       	pop	r17
   11d68:	08 95       	ret

00011d6a <sd_ls>:
   11d6a:	82 e7       	ldi	r24, 0x72	; 114
   11d6c:	95 e2       	ldi	r25, 0x25	; 37
   11d6e:	67 e0       	ldi	r22, 0x07	; 7
   11d70:	0e 94 38 a2 	call	0x14470	; 0x14470 <_ZN5SdFat2lsEh>
   11d74:	08 95       	ret

00011d76 <sd_chdir>:
   11d76:	bc 01       	movw	r22, r24
   11d78:	82 e7       	ldi	r24, 0x72	; 114
   11d7a:	95 e2       	ldi	r25, 0x25	; 37
   11d7c:	40 e0       	ldi	r20, 0x00	; 0
   11d7e:	0e 94 f6 a1 	call	0x143ec	; 0x143ec <_ZN5SdFat5chdirEPKcb>
   11d82:	08 95       	ret

00011d84 <sd_mkdir>:
   11d84:	cf 93       	push	r28
   11d86:	df 93       	push	r29
   11d88:	ec 01       	movw	r28, r24
   11d8a:	61 e0       	ldi	r22, 0x01	; 1
   11d8c:	88 81       	ld	r24, Y
   11d8e:	88 23       	and	r24, r24
   11d90:	09 f4       	brne	.+2      	; 0x11d94 <sd_mkdir+0x10>
   11d92:	60 e0       	ldi	r22, 0x00	; 0
   11d94:	82 e7       	ldi	r24, 0x72	; 114
   11d96:	95 e2       	ldi	r25, 0x25	; 37
   11d98:	0e 94 a3 a1 	call	0x14346	; 0x14346 <_ZN5SdFat5chdirEb>
   11d9c:	88 23       	and	r24, r24
   11d9e:	39 f4       	brne	.+14     	; 0x11dae <sd_mkdir+0x2a>
   11da0:	82 e7       	ldi	r24, 0x72	; 114
   11da2:	95 e2       	ldi	r25, 0x25	; 37
   11da4:	be 01       	movw	r22, r28
   11da6:	41 e0       	ldi	r20, 0x01	; 1
   11da8:	0e 94 43 a2 	call	0x14486	; 0x14486 <_ZN5SdFat5mkdirEPKcb>
   11dac:	01 c0       	rjmp	.+2      	; 0x11db0 <sd_mkdir+0x2c>
   11dae:	80 e0       	ldi	r24, 0x00	; 0
   11db0:	df 91       	pop	r29
   11db2:	cf 91       	pop	r28
   11db4:	08 95       	ret

00011db6 <sd_rmdir>:
   11db6:	bc 01       	movw	r22, r24
   11db8:	82 e7       	ldi	r24, 0x72	; 114
   11dba:	95 e2       	ldi	r25, 0x25	; 37
   11dbc:	0e 94 60 a2 	call	0x144c0	; 0x144c0 <_ZN5SdFat5rmdirEPKc>
   11dc0:	08 95       	ret

00011dc2 <sd_remove>:
   11dc2:	bc 01       	movw	r22, r24
   11dc4:	82 e7       	ldi	r24, 0x72	; 114
   11dc6:	95 e2       	ldi	r25, 0x25	; 37
   11dc8:	0e 94 5c a2 	call	0x144b8	; 0x144b8 <_ZN5SdFat6removeEPKc>
   11dcc:	08 95       	ret

00011dce <sd_rmDashR>:
   11dce:	85 e9       	ldi	r24, 0x95	; 149
   11dd0:	95 e2       	ldi	r25, 0x25	; 37
   11dd2:	0e 94 c2 9b 	call	0x13784	; 0x13784 <_ZN10SdBaseFile8rmRfStarEv>
   11dd6:	08 95       	ret

00011dd8 <sd_write>:
   11dd8:	0f 93       	push	r16
   11dda:	1f 93       	push	r17
   11ddc:	cf 93       	push	r28
   11dde:	df 93       	push	r29
   11de0:	0f 92       	push	r0
   11de2:	0f 92       	push	r0
   11de4:	cd b7       	in	r28, 0x3d	; 61
   11de6:	de b7       	in	r29, 0x3e	; 62
   11de8:	89 83       	std	Y+1, r24	; 0x01
   11dea:	9a 83       	std	Y+2, r25	; 0x02
   11dec:	cb 01       	movw	r24, r22
   11dee:	ba 01       	movw	r22, r20
   11df0:	a9 01       	movw	r20, r18
   11df2:	0e 94 96 a2 	call	0x1452c	; 0x1452c <_ZN6SdFile5writeEPKvj>
   11df6:	8c 01       	movw	r16, r24
   11df8:	22 27       	eor	r18, r18
   11dfa:	17 fd       	sbrc	r17, 7
   11dfc:	20 95       	com	r18
   11dfe:	32 2f       	mov	r19, r18
   11e00:	b8 01       	movw	r22, r16
   11e02:	c9 01       	movw	r24, r18
   11e04:	0f 90       	pop	r0
   11e06:	0f 90       	pop	r0
   11e08:	df 91       	pop	r29
   11e0a:	cf 91       	pop	r28
   11e0c:	1f 91       	pop	r17
   11e0e:	0f 91       	pop	r16
   11e10:	08 95       	ret

00011e12 <sd_read>:
   11e12:	0f 93       	push	r16
   11e14:	1f 93       	push	r17
   11e16:	cf 93       	push	r28
   11e18:	df 93       	push	r29
   11e1a:	0f 92       	push	r0
   11e1c:	0f 92       	push	r0
   11e1e:	cd b7       	in	r28, 0x3d	; 61
   11e20:	de b7       	in	r29, 0x3e	; 62
   11e22:	89 83       	std	Y+1, r24	; 0x01
   11e24:	9a 83       	std	Y+2, r25	; 0x02
   11e26:	cb 01       	movw	r24, r22
   11e28:	ba 01       	movw	r22, r20
   11e2a:	a9 01       	movw	r20, r18
   11e2c:	04 96       	adiw	r24, 0x04	; 4
   11e2e:	0e 94 d0 95 	call	0x12ba0	; 0x12ba0 <_ZN10SdBaseFile4readEPvj>
   11e32:	8c 01       	movw	r16, r24
   11e34:	22 27       	eor	r18, r18
   11e36:	17 fd       	sbrc	r17, 7
   11e38:	20 95       	com	r18
   11e3a:	32 2f       	mov	r19, r18
   11e3c:	b8 01       	movw	r22, r16
   11e3e:	c9 01       	movw	r24, r18
   11e40:	0f 90       	pop	r0
   11e42:	0f 90       	pop	r0
   11e44:	df 91       	pop	r29
   11e46:	cf 91       	pop	r28
   11e48:	1f 91       	pop	r17
   11e4a:	0f 91       	pop	r16
   11e4c:	08 95       	ret

00011e4e <sd_fileSize>:
   11e4e:	fc 01       	movw	r30, r24
   11e50:	67 89       	ldd	r22, Z+23	; 0x17
   11e52:	70 8d       	ldd	r23, Z+24	; 0x18
   11e54:	81 8d       	ldd	r24, Z+25	; 0x19
   11e56:	92 8d       	ldd	r25, Z+26	; 0x1a
   11e58:	08 95       	ret

00011e5a <sd_rewind>:
   11e5a:	04 96       	adiw	r24, 0x04	; 4
   11e5c:	40 e0       	ldi	r20, 0x00	; 0
   11e5e:	50 e0       	ldi	r21, 0x00	; 0
   11e60:	ba 01       	movw	r22, r20
   11e62:	0e 94 58 98 	call	0x130b0	; 0x130b0 <_ZN10SdBaseFile7seekSetEm>
   11e66:	08 95       	ret

00011e68 <sd_truncate>:
   11e68:	04 96       	adiw	r24, 0x04	; 4
   11e6a:	0e 94 fb 99 	call	0x133f6	; 0x133f6 <_ZN10SdBaseFile8truncateEm>
   11e6e:	08 95       	ret

00011e70 <_GLOBAL__sub_I_sd_begin>:
   11e70:	89 e1       	ldi	r24, 0x19	; 25
   11e72:	80 93 73 25 	sts	0x2573, r24
   11e76:	10 92 76 25 	sts	0x2576, r1
   11e7a:	10 92 8e 25 	sts	0x258E, r1
   11e7e:	10 92 95 25 	sts	0x2595, r1
   11e82:	10 92 98 25 	sts	0x2598, r1
   11e86:	08 95       	ret

00011e88 <_ZL18blockTransCompletePaj>:
   11e88:	81 e0       	ldi	r24, 0x01	; 1
   11e8a:	80 93 bf 25 	sts	0x25BF, r24
   11e8e:	08 95       	ret

00011e90 <_ZL9CRC_CCITTPKhj>:
   11e90:	fc 01       	movw	r30, r24
   11e92:	40 e0       	ldi	r20, 0x00	; 0
   11e94:	50 e0       	ldi	r21, 0x00	; 0
   11e96:	80 e0       	ldi	r24, 0x00	; 0
   11e98:	90 e0       	ldi	r25, 0x00	; 0
   11e9a:	25 c0       	rjmp	.+74     	; 0x11ee6 <_ZL9CRC_CCITTPKhj+0x56>
   11e9c:	29 2f       	mov	r18, r25
   11e9e:	30 e0       	ldi	r19, 0x00	; 0
   11ea0:	98 2f       	mov	r25, r24
   11ea2:	88 27       	eor	r24, r24
   11ea4:	28 2b       	or	r18, r24
   11ea6:	39 2b       	or	r19, r25
   11ea8:	81 91       	ld	r24, Z+
   11eaa:	90 e0       	ldi	r25, 0x00	; 0
   11eac:	28 27       	eor	r18, r24
   11eae:	39 27       	eor	r19, r25
   11eb0:	82 2f       	mov	r24, r18
   11eb2:	90 e0       	ldi	r25, 0x00	; 0
   11eb4:	b4 e0       	ldi	r27, 0x04	; 4
   11eb6:	95 95       	asr	r25
   11eb8:	87 95       	ror	r24
   11eba:	ba 95       	dec	r27
   11ebc:	e1 f7       	brne	.-8      	; 0x11eb6 <_ZL9CRC_CCITTPKhj+0x26>
   11ebe:	82 27       	eor	r24, r18
   11ec0:	93 27       	eor	r25, r19
   11ec2:	9c 01       	movw	r18, r24
   11ec4:	32 2f       	mov	r19, r18
   11ec6:	22 27       	eor	r18, r18
   11ec8:	32 95       	swap	r19
   11eca:	30 7f       	andi	r19, 0xF0	; 240
   11ecc:	28 27       	eor	r18, r24
   11ece:	39 27       	eor	r19, r25
   11ed0:	c9 01       	movw	r24, r18
   11ed2:	90 70       	andi	r25, 0x00	; 0
   11ed4:	b5 e0       	ldi	r27, 0x05	; 5
   11ed6:	88 0f       	add	r24, r24
   11ed8:	99 1f       	adc	r25, r25
   11eda:	ba 95       	dec	r27
   11edc:	e1 f7       	brne	.-8      	; 0x11ed6 <_ZL9CRC_CCITTPKhj+0x46>
   11ede:	82 27       	eor	r24, r18
   11ee0:	93 27       	eor	r25, r19
   11ee2:	4f 5f       	subi	r20, 0xFF	; 255
   11ee4:	5f 4f       	sbci	r21, 0xFF	; 255
   11ee6:	46 17       	cp	r20, r22
   11ee8:	57 07       	cpc	r21, r23
   11eea:	c1 f6       	brne	.-80     	; 0x11e9c <_ZL9CRC_CCITTPKhj+0xc>
   11eec:	08 95       	ret

00011eee <_ZL7spiSendh>:
   11eee:	68 2f       	mov	r22, r24
   11ef0:	20 91 bd 25 	lds	r18, 0x25BD
   11ef4:	30 91 be 25 	lds	r19, 0x25BE
   11ef8:	c9 01       	movw	r24, r18
   11efa:	0e 94 c7 31 	call	0x638e	; 0x638e <hal_spiWriteByte>
   11efe:	08 95       	ret

00011f00 <_ZL6spiRecv>:
   11f00:	cf 93       	push	r28
   11f02:	df 93       	push	r29
   11f04:	0f 92       	push	r0
   11f06:	cd b7       	in	r28, 0x3d	; 61
   11f08:	de b7       	in	r29, 0x3e	; 62
   11f0a:	80 91 bd 25 	lds	r24, 0x25BD
   11f0e:	90 91 be 25 	lds	r25, 0x25BE
   11f12:	be 01       	movw	r22, r28
   11f14:	6f 5f       	subi	r22, 0xFF	; 255
   11f16:	7f 4f       	sbci	r23, 0xFF	; 255
   11f18:	0e 94 76 31 	call	0x62ec	; 0x62ec <hal_spiReadByte>
   11f1c:	89 81       	ldd	r24, Y+1	; 0x01
   11f1e:	0f 90       	pop	r0
   11f20:	df 91       	pop	r29
   11f22:	cf 91       	pop	r28
   11f24:	08 95       	ret

00011f26 <millis>:
   11f26:	0e 94 31 80 	call	0x10062	; 0x10062 <arb_sysMsecNow>
   11f2a:	95 2f       	mov	r25, r21
   11f2c:	b9 01       	movw	r22, r18
   11f2e:	84 2f       	mov	r24, r20
   11f30:	08 95       	ret

00011f32 <_Z11millisDeltamm>:
   11f32:	2f 92       	push	r2
   11f34:	3f 92       	push	r3
   11f36:	4f 92       	push	r4
   11f38:	5f 92       	push	r5
   11f3a:	6f 92       	push	r6
   11f3c:	7f 92       	push	r7
   11f3e:	8f 92       	push	r8
   11f40:	9f 92       	push	r9
   11f42:	af 92       	push	r10
   11f44:	bf 92       	push	r11
   11f46:	cf 92       	push	r12
   11f48:	df 92       	push	r13
   11f4a:	ef 92       	push	r14
   11f4c:	ff 92       	push	r15
   11f4e:	0f 93       	push	r16
   11f50:	1f 93       	push	r17
   11f52:	cf 93       	push	r28
   11f54:	df 93       	push	r29
   11f56:	dc 01       	movw	r26, r24
   11f58:	cb 01       	movw	r24, r22
   11f5a:	19 01       	movw	r2, r18
   11f5c:	2a 01       	movw	r4, r20
   11f5e:	9c 01       	movw	r18, r24
   11f60:	ad 01       	movw	r20, r26
   11f62:	60 e0       	ldi	r22, 0x00	; 0
   11f64:	70 e0       	ldi	r23, 0x00	; 0
   11f66:	80 e0       	ldi	r24, 0x00	; 0
   11f68:	90 e0       	ldi	r25, 0x00	; 0
   11f6a:	51 01       	movw	r10, r2
   11f6c:	62 01       	movw	r12, r4
   11f6e:	ee 24       	eor	r14, r14
   11f70:	ff 24       	eor	r15, r15
   11f72:	00 e0       	ldi	r16, 0x00	; 0
   11f74:	10 e0       	ldi	r17, 0x00	; 0
   11f76:	0e 94 42 80 	call	0x10084	; 0x10084 <arb_sysMsecDelta>
   11f7a:	95 2f       	mov	r25, r21
   11f7c:	b9 01       	movw	r22, r18
   11f7e:	84 2f       	mov	r24, r20
   11f80:	df 91       	pop	r29
   11f82:	cf 91       	pop	r28
   11f84:	1f 91       	pop	r17
   11f86:	0f 91       	pop	r16
   11f88:	ff 90       	pop	r15
   11f8a:	ef 90       	pop	r14
   11f8c:	df 90       	pop	r13
   11f8e:	cf 90       	pop	r12
   11f90:	bf 90       	pop	r11
   11f92:	af 90       	pop	r10
   11f94:	9f 90       	pop	r9
   11f96:	8f 90       	pop	r8
   11f98:	7f 90       	pop	r7
   11f9a:	6f 90       	pop	r6
   11f9c:	5f 90       	pop	r5
   11f9e:	4f 90       	pop	r4
   11fa0:	3f 90       	pop	r3
   11fa2:	2f 90       	pop	r2
   11fa4:	08 95       	ret

00011fa6 <_ZN7Sd2Card14chipSelectHighEv>:
   11fa6:	80 91 bd 25 	lds	r24, 0x25BD
   11faa:	90 91 be 25 	lds	r25, 0x25BE
   11fae:	61 e0       	ldi	r22, 0x01	; 1
   11fb0:	0e 94 29 30 	call	0x6052	; 0x6052 <hal_spiSetChipSelect>
   11fb4:	8f ef       	ldi	r24, 0xFF	; 255
   11fb6:	0e 94 77 8f 	call	0x11eee	; 0x11eee <_ZL7spiSendh>
   11fba:	08 95       	ret

00011fbc <_ZN7Sd2Card13chipSelectLowEv>:
   11fbc:	80 91 bd 25 	lds	r24, 0x25BD
   11fc0:	90 91 be 25 	lds	r25, 0x25BE
   11fc4:	60 e0       	ldi	r22, 0x00	; 0
   11fc6:	0e 94 29 30 	call	0x6052	; 0x6052 <hal_spiSetChipSelect>
   11fca:	08 95       	ret

00011fcc <_ZN7Sd2Card8readDataEPhj>:
   11fcc:	6f 92       	push	r6
   11fce:	7f 92       	push	r7
   11fd0:	8f 92       	push	r8
   11fd2:	9f 92       	push	r9
   11fd4:	af 92       	push	r10
   11fd6:	bf 92       	push	r11
   11fd8:	cf 92       	push	r12
   11fda:	df 92       	push	r13
   11fdc:	ef 92       	push	r14
   11fde:	ff 92       	push	r15
   11fe0:	0f 93       	push	r16
   11fe2:	1f 93       	push	r17
   11fe4:	cf 93       	push	r28
   11fe6:	df 93       	push	r29
   11fe8:	ec 01       	movw	r28, r24
   11fea:	8b 01       	movw	r16, r22
   11fec:	3a 01       	movw	r6, r20
   11fee:	0e 94 93 8f 	call	0x11f26	; 0x11f26 <millis>
   11ff2:	6b 01       	movw	r12, r22
   11ff4:	7c 01       	movw	r14, r24
   11ff6:	12 c0       	rjmp	.+36     	; 0x1201c <_ZN7Sd2Card8readDataEPhj+0x50>
   11ff8:	0e 94 93 8f 	call	0x11f26	; 0x11f26 <millis>
   11ffc:	a7 01       	movw	r20, r14
   11ffe:	96 01       	movw	r18, r12
   12000:	0e 94 99 8f 	call	0x11f32	; 0x11f32 <_Z11millisDeltamm>
   12004:	dc 01       	movw	r26, r24
   12006:	cb 01       	movw	r24, r22
   12008:	8d 32       	cpi	r24, 0x2D	; 45
   1200a:	21 e0       	ldi	r18, 0x01	; 1
   1200c:	92 07       	cpc	r25, r18
   1200e:	20 e0       	ldi	r18, 0x00	; 0
   12010:	a2 07       	cpc	r26, r18
   12012:	20 e0       	ldi	r18, 0x00	; 0
   12014:	b2 07       	cpc	r27, r18
   12016:	10 f0       	brcs	.+4      	; 0x1201c <_ZN7Sd2Card8readDataEPhj+0x50>
   12018:	81 e1       	ldi	r24, 0x11	; 17
   1201a:	57 c0       	rjmp	.+174    	; 0x120ca <_ZN7Sd2Card8readDataEPhj+0xfe>
   1201c:	0e 94 80 8f 	call	0x11f00	; 0x11f00 <_ZL6spiRecv>
   12020:	8b 83       	std	Y+3, r24	; 0x03
   12022:	8f 3f       	cpi	r24, 0xFF	; 255
   12024:	49 f3       	breq	.-46     	; 0x11ff8 <_ZN7Sd2Card8readDataEPhj+0x2c>
   12026:	8e 3f       	cpi	r24, 0xFE	; 254
   12028:	11 f0       	breq	.+4      	; 0x1202e <_ZN7Sd2Card8readDataEPhj+0x62>
   1202a:	8f e0       	ldi	r24, 0x0F	; 15
   1202c:	4e c0       	rjmp	.+156    	; 0x120ca <_ZN7Sd2Card8readDataEPhj+0xfe>
   1202e:	0e 94 f0 80 	call	0x101e0	; 0x101e0 <arb_sysTimerEnabled>
   12032:	88 23       	and	r24, r24
   12034:	99 f0       	breq	.+38     	; 0x1205c <_ZN7Sd2Card8readDataEPhj+0x90>
   12036:	0f b6       	in	r0, 0x3f	; 63
   12038:	07 fe       	sbrs	r0, 7
   1203a:	10 c0       	rjmp	.+32     	; 0x1205c <_ZN7Sd2Card8readDataEPhj+0x90>
   1203c:	5f c0       	rjmp	.+190    	; 0x120fc <_ZN7Sd2Card8readDataEPhj+0x130>
   1203e:	80 91 bd 25 	lds	r24, 0x25BD
   12042:	90 91 be 25 	lds	r25, 0x25BE
   12046:	b8 01       	movw	r22, r16
   12048:	68 0d       	add	r22, r8
   1204a:	79 1d       	adc	r23, r9
   1204c:	0e 94 76 31 	call	0x62ec	; 0x62ec <hal_spiReadByte>
   12050:	08 94       	sec
   12052:	81 1c       	adc	r8, r1
   12054:	91 1c       	adc	r9, r1
   12056:	a1 1c       	adc	r10, r1
   12058:	b1 1c       	adc	r11, r1
   1205a:	06 c0       	rjmp	.+12     	; 0x12068 <_ZN7Sd2Card8readDataEPhj+0x9c>
   1205c:	88 24       	eor	r8, r8
   1205e:	99 24       	eor	r9, r9
   12060:	54 01       	movw	r10, r8
   12062:	63 01       	movw	r12, r6
   12064:	ee 24       	eor	r14, r14
   12066:	ff 24       	eor	r15, r15
   12068:	8c 14       	cp	r8, r12
   1206a:	9d 04       	cpc	r9, r13
   1206c:	ae 04       	cpc	r10, r14
   1206e:	bf 04       	cpc	r11, r15
   12070:	30 f3       	brcs	.-52     	; 0x1203e <_ZN7Sd2Card8readDataEPhj+0x72>
   12072:	16 c0       	rjmp	.+44     	; 0x120a0 <_ZN7Sd2Card8readDataEPhj+0xd4>
   12074:	0e 94 93 8f 	call	0x11f26	; 0x11f26 <millis>
   12078:	a7 01       	movw	r20, r14
   1207a:	96 01       	movw	r18, r12
   1207c:	0e 94 99 8f 	call	0x11f32	; 0x11f32 <_Z11millisDeltamm>
   12080:	dc 01       	movw	r26, r24
   12082:	cb 01       	movw	r24, r22
   12084:	8d 3d       	cpi	r24, 0xDD	; 221
   12086:	25 e0       	ldi	r18, 0x05	; 5
   12088:	92 07       	cpc	r25, r18
   1208a:	20 e0       	ldi	r18, 0x00	; 0
   1208c:	a2 07       	cpc	r26, r18
   1208e:	20 e0       	ldi	r18, 0x00	; 0
   12090:	b2 07       	cpc	r27, r18
   12092:	20 f4       	brcc	.+8      	; 0x1209c <_ZN7Sd2Card8readDataEPhj+0xd0>
   12094:	80 91 bf 25 	lds	r24, 0x25BF
   12098:	88 23       	and	r24, r24
   1209a:	61 f3       	breq	.-40     	; 0x12074 <_ZN7Sd2Card8readDataEPhj+0xa8>
   1209c:	10 92 bf 25 	sts	0x25BF, r1
   120a0:	1b 82       	std	Y+3, r1	; 0x03
   120a2:	0e 94 80 8f 	call	0x11f00	; 0x11f00 <_ZL6spiRecv>
   120a6:	88 2e       	mov	r8, r24
   120a8:	0e 94 80 8f 	call	0x11f00	; 0x11f00 <_ZL6spiRecv>
   120ac:	c8 2e       	mov	r12, r24
   120ae:	c8 01       	movw	r24, r16
   120b0:	b3 01       	movw	r22, r6
   120b2:	0e 94 48 8f 	call	0x11e90	; 0x11e90 <_ZL9CRC_CCITTPKhj>
   120b6:	58 2d       	mov	r21, r8
   120b8:	40 e0       	ldi	r20, 0x00	; 0
   120ba:	2c 2d       	mov	r18, r12
   120bc:	30 e0       	ldi	r19, 0x00	; 0
   120be:	24 2b       	or	r18, r20
   120c0:	35 2b       	or	r19, r21
   120c2:	28 17       	cp	r18, r24
   120c4:	39 07       	cpc	r19, r25
   120c6:	39 f0       	breq	.+14     	; 0x120d6 <_ZN7Sd2Card8readDataEPhj+0x10a>
   120c8:	8b e1       	ldi	r24, 0x1B	; 27
   120ca:	89 83       	std	Y+1, r24	; 0x01
   120cc:	ce 01       	movw	r24, r28
   120ce:	0e 94 d3 8f 	call	0x11fa6	; 0x11fa6 <_ZN7Sd2Card14chipSelectHighEv>
   120d2:	80 e0       	ldi	r24, 0x00	; 0
   120d4:	04 c0       	rjmp	.+8      	; 0x120de <_ZN7Sd2Card8readDataEPhj+0x112>
   120d6:	ce 01       	movw	r24, r28
   120d8:	0e 94 d3 8f 	call	0x11fa6	; 0x11fa6 <_ZN7Sd2Card14chipSelectHighEv>
   120dc:	81 e0       	ldi	r24, 0x01	; 1
   120de:	df 91       	pop	r29
   120e0:	cf 91       	pop	r28
   120e2:	1f 91       	pop	r17
   120e4:	0f 91       	pop	r16
   120e6:	ff 90       	pop	r15
   120e8:	ef 90       	pop	r14
   120ea:	df 90       	pop	r13
   120ec:	cf 90       	pop	r12
   120ee:	bf 90       	pop	r11
   120f0:	af 90       	pop	r10
   120f2:	9f 90       	pop	r9
   120f4:	8f 90       	pop	r8
   120f6:	7f 90       	pop	r7
   120f8:	6f 90       	pop	r6
   120fa:	08 95       	ret
   120fc:	80 91 bd 25 	lds	r24, 0x25BD
   12100:	90 91 be 25 	lds	r25, 0x25BE
   12104:	60 e0       	ldi	r22, 0x00	; 0
   12106:	a8 01       	movw	r20, r16
   12108:	93 01       	movw	r18, r6
   1210a:	0e 94 99 33 	call	0x6732	; 0x6732 <hal_spiReadBlock>
   1210e:	0e 94 93 8f 	call	0x11f26	; 0x11f26 <millis>
   12112:	6b 01       	movw	r12, r22
   12114:	7c 01       	movw	r14, r24
   12116:	be cf       	rjmp	.-132    	; 0x12094 <_ZN7Sd2Card8readDataEPhj+0xc8>

00012118 <_ZN7Sd2Card8readDataEPh>:
   12118:	0f 93       	push	r16
   1211a:	1f 93       	push	r17
   1211c:	cf 93       	push	r28
   1211e:	df 93       	push	r29
   12120:	ec 01       	movw	r28, r24
   12122:	8b 01       	movw	r16, r22
   12124:	0e 94 de 8f 	call	0x11fbc	; 0x11fbc <_ZN7Sd2Card13chipSelectLowEv>
   12128:	ce 01       	movw	r24, r28
   1212a:	b8 01       	movw	r22, r16
   1212c:	40 e0       	ldi	r20, 0x00	; 0
   1212e:	52 e0       	ldi	r21, 0x02	; 2
   12130:	0e 94 e6 8f 	call	0x11fcc	; 0x11fcc <_ZN7Sd2Card8readDataEPhj>
   12134:	df 91       	pop	r29
   12136:	cf 91       	pop	r28
   12138:	1f 91       	pop	r17
   1213a:	0f 91       	pop	r16
   1213c:	08 95       	ret

0001213e <_ZN7Sd2Card11waitNotBusyEj>:
   1213e:	8f 92       	push	r8
   12140:	9f 92       	push	r9
   12142:	af 92       	push	r10
   12144:	bf 92       	push	r11
   12146:	cf 92       	push	r12
   12148:	df 92       	push	r13
   1214a:	ef 92       	push	r14
   1214c:	ff 92       	push	r15
   1214e:	6b 01       	movw	r12, r22
   12150:	0e 94 93 8f 	call	0x11f26	; 0x11f26 <millis>
   12154:	4b 01       	movw	r8, r22
   12156:	5c 01       	movw	r10, r24
   12158:	ee 24       	eor	r14, r14
   1215a:	ff 24       	eor	r15, r15
   1215c:	0d c0       	rjmp	.+26     	; 0x12178 <_ZN7Sd2Card11waitNotBusyEj+0x3a>
   1215e:	0e 94 93 8f 	call	0x11f26	; 0x11f26 <millis>
   12162:	a5 01       	movw	r20, r10
   12164:	94 01       	movw	r18, r8
   12166:	0e 94 99 8f 	call	0x11f32	; 0x11f32 <_Z11millisDeltamm>
   1216a:	dc 01       	movw	r26, r24
   1216c:	cb 01       	movw	r24, r22
   1216e:	8c 15       	cp	r24, r12
   12170:	9d 05       	cpc	r25, r13
   12172:	ae 05       	cpc	r26, r14
   12174:	bf 05       	cpc	r27, r15
   12176:	30 f4       	brcc	.+12     	; 0x12184 <_ZN7Sd2Card11waitNotBusyEj+0x46>
   12178:	0e 94 80 8f 	call	0x11f00	; 0x11f00 <_ZL6spiRecv>
   1217c:	8f 3f       	cpi	r24, 0xFF	; 255
   1217e:	79 f7       	brne	.-34     	; 0x1215e <_ZN7Sd2Card11waitNotBusyEj+0x20>
   12180:	81 e0       	ldi	r24, 0x01	; 1
   12182:	01 c0       	rjmp	.+2      	; 0x12186 <_ZN7Sd2Card11waitNotBusyEj+0x48>
   12184:	80 e0       	ldi	r24, 0x00	; 0
   12186:	ff 90       	pop	r15
   12188:	ef 90       	pop	r14
   1218a:	df 90       	pop	r13
   1218c:	cf 90       	pop	r12
   1218e:	bf 90       	pop	r11
   12190:	af 90       	pop	r10
   12192:	9f 90       	pop	r9
   12194:	8f 90       	pop	r8
   12196:	08 95       	ret

00012198 <_ZN7Sd2Card11cardCommandEhm>:
   12198:	df 92       	push	r13
   1219a:	ef 92       	push	r14
   1219c:	ff 92       	push	r15
   1219e:	0f 93       	push	r16
   121a0:	1f 93       	push	r17
   121a2:	cf 93       	push	r28
   121a4:	df 93       	push	r29
   121a6:	cd b7       	in	r28, 0x3d	; 61
   121a8:	de b7       	in	r29, 0x3e	; 62
   121aa:	2b 97       	sbiw	r28, 0x0b	; 11
   121ac:	cd bf       	out	0x3d, r28	; 61
   121ae:	de bf       	out	0x3e, r29	; 62
   121b0:	7c 01       	movw	r14, r24
   121b2:	d6 2e       	mov	r13, r22
   121b4:	2f 83       	std	Y+7, r18	; 0x07
   121b6:	38 87       	std	Y+8, r19	; 0x08
   121b8:	49 87       	std	Y+9, r20	; 0x09
   121ba:	5a 87       	std	Y+10, r21	; 0x0a
   121bc:	0e 94 de 8f 	call	0x11fbc	; 0x11fbc <_ZN7Sd2Card13chipSelectLowEv>
   121c0:	c7 01       	movw	r24, r14
   121c2:	6c e2       	ldi	r22, 0x2C	; 44
   121c4:	71 e0       	ldi	r23, 0x01	; 1
   121c6:	0e 94 9f 90 	call	0x1213e	; 0x1213e <_ZN7Sd2Card11waitNotBusyEj>
   121ca:	fe 01       	movw	r30, r28
   121cc:	31 96       	adiw	r30, 0x01	; 1
   121ce:	86 e0       	ldi	r24, 0x06	; 6
   121d0:	df 01       	movw	r26, r30
   121d2:	1d 92       	st	X+, r1
   121d4:	8a 95       	dec	r24
   121d6:	e9 f7       	brne	.-6      	; 0x121d2 <_ZN7Sd2Card11cardCommandEhm+0x3a>
   121d8:	8d 2d       	mov	r24, r13
   121da:	80 64       	ori	r24, 0x40	; 64
   121dc:	89 83       	std	Y+1, r24	; 0x01
   121de:	8a 85       	ldd	r24, Y+10	; 0x0a
   121e0:	8a 83       	std	Y+2, r24	; 0x02
   121e2:	89 85       	ldd	r24, Y+9	; 0x09
   121e4:	8b 83       	std	Y+3, r24	; 0x03
   121e6:	88 85       	ldd	r24, Y+8	; 0x08
   121e8:	8c 83       	std	Y+4, r24	; 0x04
   121ea:	8f 81       	ldd	r24, Y+7	; 0x07
   121ec:	8d 83       	std	Y+5, r24	; 0x05
   121ee:	40 e0       	ldi	r20, 0x00	; 0
   121f0:	50 e0       	ldi	r21, 0x00	; 0
   121f2:	a9 e0       	ldi	r26, 0x09	; 9
   121f4:	71 91       	ld	r23, Z+
   121f6:	68 e0       	ldi	r22, 0x08	; 8
   121f8:	44 0f       	add	r20, r20
   121fa:	84 2f       	mov	r24, r20
   121fc:	90 e0       	ldi	r25, 0x00	; 0
   121fe:	27 2f       	mov	r18, r23
   12200:	30 e0       	ldi	r19, 0x00	; 0
   12202:	82 27       	eor	r24, r18
   12204:	93 27       	eor	r25, r19
   12206:	87 fd       	sbrc	r24, 7
   12208:	4a 27       	eor	r20, r26
   1220a:	77 0f       	add	r23, r23
   1220c:	61 50       	subi	r22, 0x01	; 1
   1220e:	a1 f7       	brne	.-24     	; 0x121f8 <_ZN7Sd2Card11cardCommandEhm+0x60>
   12210:	5f 5f       	subi	r21, 0xFF	; 255
   12212:	55 30       	cpi	r21, 0x05	; 5
   12214:	79 f7       	brne	.-34     	; 0x121f4 <_ZN7Sd2Card11cardCommandEhm+0x5c>
   12216:	44 0f       	add	r20, r20
   12218:	41 60       	ori	r20, 0x01	; 1
   1221a:	4e 83       	std	Y+6, r20	; 0x06
   1221c:	8e 01       	movw	r16, r28
   1221e:	0f 5f       	subi	r16, 0xFF	; 255
   12220:	1f 4f       	sbci	r17, 0xFF	; 255
   12222:	90 e0       	ldi	r25, 0x00	; 0
   12224:	f8 01       	movw	r30, r16
   12226:	81 91       	ld	r24, Z+
   12228:	8f 01       	movw	r16, r30
   1222a:	9b 87       	std	Y+11, r25	; 0x0b
   1222c:	0e 94 77 8f 	call	0x11eee	; 0x11eee <_ZL7spiSendh>
   12230:	9b 85       	ldd	r25, Y+11	; 0x0b
   12232:	9f 5f       	subi	r25, 0xFF	; 255
   12234:	96 30       	cpi	r25, 0x06	; 6
   12236:	b1 f7       	brne	.-20     	; 0x12224 <_ZN7Sd2Card11cardCommandEhm+0x8c>
   12238:	fc e0       	ldi	r31, 0x0C	; 12
   1223a:	df 16       	cp	r13, r31
   1223c:	11 f4       	brne	.+4      	; 0x12242 <_ZN7Sd2Card11cardCommandEhm+0xaa>
   1223e:	0e 94 80 8f 	call	0x11f00	; 0x11f00 <_ZL6spiRecv>
   12242:	00 e0       	ldi	r16, 0x00	; 0
   12244:	0e 94 80 8f 	call	0x11f00	; 0x11f00 <_ZL6spiRecv>
   12248:	d7 01       	movw	r26, r14
   1224a:	13 96       	adiw	r26, 0x03	; 3
   1224c:	8c 93       	st	X, r24
   1224e:	13 97       	sbiw	r26, 0x03	; 3
   12250:	87 ff       	sbrs	r24, 7
   12252:	04 c0       	rjmp	.+8      	; 0x1225c <_ZN7Sd2Card11cardCommandEhm+0xc4>
   12254:	0f 3f       	cpi	r16, 0xFF	; 255
   12256:	11 f0       	breq	.+4      	; 0x1225c <_ZN7Sd2Card11cardCommandEhm+0xc4>
   12258:	0f 5f       	subi	r16, 0xFF	; 255
   1225a:	f4 cf       	rjmp	.-24     	; 0x12244 <_ZN7Sd2Card11cardCommandEhm+0xac>
   1225c:	2b 96       	adiw	r28, 0x0b	; 11
   1225e:	cd bf       	out	0x3d, r28	; 61
   12260:	de bf       	out	0x3e, r29	; 62
   12262:	df 91       	pop	r29
   12264:	cf 91       	pop	r28
   12266:	1f 91       	pop	r17
   12268:	0f 91       	pop	r16
   1226a:	ff 90       	pop	r15
   1226c:	ef 90       	pop	r14
   1226e:	df 90       	pop	r13
   12270:	08 95       	ret

00012272 <_ZN7Sd2Card8readStopEv>:
   12272:	cf 93       	push	r28
   12274:	df 93       	push	r29
   12276:	ec 01       	movw	r28, r24
   12278:	0e 94 de 8f 	call	0x11fbc	; 0x11fbc <_ZN7Sd2Card13chipSelectLowEv>
   1227c:	ce 01       	movw	r24, r28
   1227e:	6c e0       	ldi	r22, 0x0C	; 12
   12280:	20 e0       	ldi	r18, 0x00	; 0
   12282:	30 e0       	ldi	r19, 0x00	; 0
   12284:	a9 01       	movw	r20, r18
   12286:	0e 94 cc 90 	call	0x12198	; 0x12198 <_ZN7Sd2Card11cardCommandEhm>
   1228a:	88 23       	and	r24, r24
   1228c:	39 f0       	breq	.+14     	; 0x1229c <_ZN7Sd2Card8readStopEv+0x2a>
   1228e:	83 e0       	ldi	r24, 0x03	; 3
   12290:	89 83       	std	Y+1, r24	; 0x01
   12292:	ce 01       	movw	r24, r28
   12294:	0e 94 d3 8f 	call	0x11fa6	; 0x11fa6 <_ZN7Sd2Card14chipSelectHighEv>
   12298:	80 e0       	ldi	r24, 0x00	; 0
   1229a:	04 c0       	rjmp	.+8      	; 0x122a4 <_ZN7Sd2Card8readStopEv+0x32>
   1229c:	ce 01       	movw	r24, r28
   1229e:	0e 94 d3 8f 	call	0x11fa6	; 0x11fa6 <_ZN7Sd2Card14chipSelectHighEv>
   122a2:	81 e0       	ldi	r24, 0x01	; 1
   122a4:	df 91       	pop	r29
   122a6:	cf 91       	pop	r28
   122a8:	08 95       	ret

000122aa <_ZN7Sd2Card9readStartEm>:
   122aa:	cf 93       	push	r28
   122ac:	df 93       	push	r29
   122ae:	ec 01       	movw	r28, r24
   122b0:	9a 01       	movw	r18, r20
   122b2:	ab 01       	movw	r20, r22
   122b4:	8c 81       	ldd	r24, Y+4	; 0x04
   122b6:	83 30       	cpi	r24, 0x03	; 3
   122b8:	39 f0       	breq	.+14     	; 0x122c8 <_ZN7Sd2Card9readStartEm+0x1e>
   122ba:	89 e0       	ldi	r24, 0x09	; 9
   122bc:	22 0f       	add	r18, r18
   122be:	33 1f       	adc	r19, r19
   122c0:	44 1f       	adc	r20, r20
   122c2:	55 1f       	adc	r21, r21
   122c4:	8a 95       	dec	r24
   122c6:	d1 f7       	brne	.-12     	; 0x122bc <_ZN7Sd2Card9readStartEm+0x12>
   122c8:	ce 01       	movw	r24, r28
   122ca:	62 e1       	ldi	r22, 0x12	; 18
   122cc:	0e 94 cc 90 	call	0x12198	; 0x12198 <_ZN7Sd2Card11cardCommandEhm>
   122d0:	88 23       	and	r24, r24
   122d2:	39 f0       	breq	.+14     	; 0x122e2 <_ZN7Sd2Card9readStartEm+0x38>
   122d4:	85 e0       	ldi	r24, 0x05	; 5
   122d6:	89 83       	std	Y+1, r24	; 0x01
   122d8:	ce 01       	movw	r24, r28
   122da:	0e 94 d3 8f 	call	0x11fa6	; 0x11fa6 <_ZN7Sd2Card14chipSelectHighEv>
   122de:	80 e0       	ldi	r24, 0x00	; 0
   122e0:	04 c0       	rjmp	.+8      	; 0x122ea <_ZN7Sd2Card9readStartEm+0x40>
   122e2:	ce 01       	movw	r24, r28
   122e4:	0e 94 d3 8f 	call	0x11fa6	; 0x11fa6 <_ZN7Sd2Card14chipSelectHighEv>
   122e8:	81 e0       	ldi	r24, 0x01	; 1
   122ea:	df 91       	pop	r29
   122ec:	cf 91       	pop	r28
   122ee:	08 95       	ret

000122f0 <_ZN7Sd2Card9readBlockEmPh>:
   122f0:	cf 92       	push	r12
   122f2:	df 92       	push	r13
   122f4:	ef 92       	push	r14
   122f6:	ff 92       	push	r15
   122f8:	0f 93       	push	r16
   122fa:	1f 93       	push	r17
   122fc:	cf 93       	push	r28
   122fe:	df 93       	push	r29
   12300:	ec 01       	movw	r28, r24
   12302:	6a 01       	movw	r12, r20
   12304:	7b 01       	movw	r14, r22
   12306:	89 01       	movw	r16, r18
   12308:	8c 81       	ldd	r24, Y+4	; 0x04
   1230a:	83 30       	cpi	r24, 0x03	; 3
   1230c:	39 f0       	breq	.+14     	; 0x1231c <_ZN7Sd2Card9readBlockEmPh+0x2c>
   1230e:	e9 e0       	ldi	r30, 0x09	; 9
   12310:	cc 0c       	add	r12, r12
   12312:	dd 1c       	adc	r13, r13
   12314:	ee 1c       	adc	r14, r14
   12316:	ff 1c       	adc	r15, r15
   12318:	ea 95       	dec	r30
   1231a:	d1 f7       	brne	.-12     	; 0x12310 <_ZN7Sd2Card9readBlockEmPh+0x20>
   1231c:	ce 01       	movw	r24, r28
   1231e:	61 e1       	ldi	r22, 0x11	; 17
   12320:	a7 01       	movw	r20, r14
   12322:	96 01       	movw	r18, r12
   12324:	0e 94 cc 90 	call	0x12198	; 0x12198 <_ZN7Sd2Card11cardCommandEhm>
   12328:	88 23       	and	r24, r24
   1232a:	39 f0       	breq	.+14     	; 0x1233a <_ZN7Sd2Card9readBlockEmPh+0x4a>
   1232c:	84 e0       	ldi	r24, 0x04	; 4
   1232e:	89 83       	std	Y+1, r24	; 0x01
   12330:	ce 01       	movw	r24, r28
   12332:	0e 94 d3 8f 	call	0x11fa6	; 0x11fa6 <_ZN7Sd2Card14chipSelectHighEv>
   12336:	80 e0       	ldi	r24, 0x00	; 0
   12338:	06 c0       	rjmp	.+12     	; 0x12346 <_ZN7Sd2Card9readBlockEmPh+0x56>
   1233a:	ce 01       	movw	r24, r28
   1233c:	b8 01       	movw	r22, r16
   1233e:	40 e0       	ldi	r20, 0x00	; 0
   12340:	52 e0       	ldi	r21, 0x02	; 2
   12342:	0e 94 e6 8f 	call	0x11fcc	; 0x11fcc <_ZN7Sd2Card8readDataEPhj>
   12346:	df 91       	pop	r29
   12348:	cf 91       	pop	r28
   1234a:	1f 91       	pop	r17
   1234c:	0f 91       	pop	r16
   1234e:	ff 90       	pop	r15
   12350:	ef 90       	pop	r14
   12352:	df 90       	pop	r13
   12354:	cf 90       	pop	r12
   12356:	08 95       	ret

00012358 <_ZN7Sd2Card4initEi>:
   12358:	8f 92       	push	r8
   1235a:	9f 92       	push	r9
   1235c:	af 92       	push	r10
   1235e:	bf 92       	push	r11
   12360:	cf 92       	push	r12
   12362:	df 92       	push	r13
   12364:	ef 92       	push	r14
   12366:	ff 92       	push	r15
   12368:	0f 93       	push	r16
   1236a:	1f 93       	push	r17
   1236c:	cf 93       	push	r28
   1236e:	df 93       	push	r29
   12370:	0f 92       	push	r0
   12372:	0f 92       	push	r0
   12374:	cd b7       	in	r28, 0x3d	; 61
   12376:	de b7       	in	r29, 0x3e	; 62
   12378:	8c 01       	movw	r16, r24
   1237a:	69 83       	std	Y+1, r22	; 0x01
   1237c:	7a 83       	std	Y+2, r23	; 0x02
   1237e:	fc 01       	movw	r30, r24
   12380:	14 82       	std	Z+4, r1	; 0x04
   12382:	11 82       	std	Z+1, r1	; 0x01
   12384:	0e 94 93 8f 	call	0x11f26	; 0x11f26 <millis>
   12388:	89 81       	ldd	r24, Y+1	; 0x01
   1238a:	9a 81       	ldd	r25, Y+2	; 0x02
   1238c:	80 93 bd 25 	sts	0x25BD, r24
   12390:	90 93 be 25 	sts	0x25BE, r25
   12394:	10 92 bf 25 	sts	0x25BF, r1
   12398:	80 91 bd 25 	lds	r24, 0x25BD
   1239c:	90 91 be 25 	lds	r25, 0x25BE
   123a0:	64 e4       	ldi	r22, 0x44	; 68
   123a2:	7f e8       	ldi	r23, 0x8F	; 143
   123a4:	0e 94 f5 2f 	call	0x5fea	; 0x5fea <hal_spiConfCallBack>
   123a8:	c8 01       	movw	r24, r16
   123aa:	0e 94 d3 8f 	call	0x11fa6	; 0x11fa6 <_ZN7Sd2Card14chipSelectHighEv>
   123ae:	ba e0       	ldi	r27, 0x0A	; 10
   123b0:	cb 2e       	mov	r12, r27
   123b2:	8f ef       	ldi	r24, 0xFF	; 255
   123b4:	0e 94 77 8f 	call	0x11eee	; 0x11eee <_ZL7spiSendh>
   123b8:	ca 94       	dec	r12
   123ba:	d9 f7       	brne	.-10     	; 0x123b2 <_ZN7Sd2Card4initEi+0x5a>
   123bc:	0e 94 93 8f 	call	0x11f26	; 0x11f26 <millis>
   123c0:	6b 01       	movw	r12, r22
   123c2:	7c 01       	movw	r14, r24
   123c4:	12 c0       	rjmp	.+36     	; 0x123ea <_ZN7Sd2Card4initEi+0x92>
   123c6:	0e 94 93 8f 	call	0x11f26	; 0x11f26 <millis>
   123ca:	a7 01       	movw	r20, r14
   123cc:	96 01       	movw	r18, r12
   123ce:	0e 94 99 8f 	call	0x11f32	; 0x11f32 <_Z11millisDeltamm>
   123d2:	dc 01       	movw	r26, r24
   123d4:	cb 01       	movw	r24, r22
   123d6:	81 3d       	cpi	r24, 0xD1	; 209
   123d8:	f7 e0       	ldi	r31, 0x07	; 7
   123da:	9f 07       	cpc	r25, r31
   123dc:	f0 e0       	ldi	r31, 0x00	; 0
   123de:	af 07       	cpc	r26, r31
   123e0:	f0 e0       	ldi	r31, 0x00	; 0
   123e2:	bf 07       	cpc	r27, r31
   123e4:	10 f0       	brcs	.+4      	; 0x123ea <_ZN7Sd2Card4initEi+0x92>
   123e6:	81 e0       	ldi	r24, 0x01	; 1
   123e8:	86 c0       	rjmp	.+268    	; 0x124f6 <_ZN7Sd2Card4initEi+0x19e>
   123ea:	c8 01       	movw	r24, r16
   123ec:	60 e0       	ldi	r22, 0x00	; 0
   123ee:	20 e0       	ldi	r18, 0x00	; 0
   123f0:	30 e0       	ldi	r19, 0x00	; 0
   123f2:	a9 01       	movw	r20, r18
   123f4:	0e 94 cc 90 	call	0x12198	; 0x12198 <_ZN7Sd2Card11cardCommandEhm>
   123f8:	81 30       	cpi	r24, 0x01	; 1
   123fa:	29 f7       	brne	.-54     	; 0x123c6 <_ZN7Sd2Card4initEi+0x6e>
   123fc:	c8 01       	movw	r24, r16
   123fe:	6b e3       	ldi	r22, 0x3B	; 59
   12400:	21 e0       	ldi	r18, 0x01	; 1
   12402:	30 e0       	ldi	r19, 0x00	; 0
   12404:	40 e0       	ldi	r20, 0x00	; 0
   12406:	50 e0       	ldi	r21, 0x00	; 0
   12408:	0e 94 cc 90 	call	0x12198	; 0x12198 <_ZN7Sd2Card11cardCommandEhm>
   1240c:	81 30       	cpi	r24, 0x01	; 1
   1240e:	11 f0       	breq	.+4      	; 0x12414 <_ZN7Sd2Card4initEi+0xbc>
   12410:	8a e1       	ldi	r24, 0x1A	; 26
   12412:	71 c0       	rjmp	.+226    	; 0x124f6 <_ZN7Sd2Card4initEi+0x19e>
   12414:	0e 94 93 8f 	call	0x11f26	; 0x11f26 <millis>
   12418:	6b 01       	movw	r12, r22
   1241a:	7c 01       	movw	r14, r24
   1241c:	c8 01       	movw	r24, r16
   1241e:	68 e0       	ldi	r22, 0x08	; 8
   12420:	2a ea       	ldi	r18, 0xAA	; 170
   12422:	31 e0       	ldi	r19, 0x01	; 1
   12424:	40 e0       	ldi	r20, 0x00	; 0
   12426:	50 e0       	ldi	r21, 0x00	; 0
   12428:	0e 94 cc 90 	call	0x12198	; 0x12198 <_ZN7Sd2Card11cardCommandEhm>
   1242c:	85 30       	cpi	r24, 0x05	; 5
   1242e:	19 f4       	brne	.+6      	; 0x12436 <_ZN7Sd2Card4initEi+0xde>
   12430:	81 e0       	ldi	r24, 0x01	; 1
   12432:	f8 01       	movw	r30, r16
   12434:	0b c0       	rjmp	.+22     	; 0x1244c <_ZN7Sd2Card4initEi+0xf4>
   12436:	a4 e0       	ldi	r26, 0x04	; 4
   12438:	8a 2e       	mov	r8, r26
   1243a:	0e 94 80 8f 	call	0x11f00	; 0x11f00 <_ZL6spiRecv>
   1243e:	f8 01       	movw	r30, r16
   12440:	83 83       	std	Z+3, r24	; 0x03
   12442:	8a 94       	dec	r8
   12444:	d1 f7       	brne	.-12     	; 0x1243a <_ZN7Sd2Card4initEi+0xe2>
   12446:	8a 3a       	cpi	r24, 0xAA	; 170
   12448:	39 f4       	brne	.+14     	; 0x12458 <_ZN7Sd2Card4initEi+0x100>
   1244a:	82 e0       	ldi	r24, 0x02	; 2
   1244c:	84 83       	std	Z+4, r24	; 0x04
   1244e:	f8 01       	movw	r30, r16
   12450:	84 81       	ldd	r24, Z+4	; 0x04
   12452:	82 30       	cpi	r24, 0x02	; 2
   12454:	c9 f4       	brne	.+50     	; 0x12488 <_ZN7Sd2Card4initEi+0x130>
   12456:	12 c0       	rjmp	.+36     	; 0x1247c <_ZN7Sd2Card4initEi+0x124>
   12458:	0e 94 93 8f 	call	0x11f26	; 0x11f26 <millis>
   1245c:	a7 01       	movw	r20, r14
   1245e:	96 01       	movw	r18, r12
   12460:	0e 94 99 8f 	call	0x11f32	; 0x11f32 <_Z11millisDeltamm>
   12464:	dc 01       	movw	r26, r24
   12466:	cb 01       	movw	r24, r22
   12468:	81 3d       	cpi	r24, 0xD1	; 209
   1246a:	f7 e0       	ldi	r31, 0x07	; 7
   1246c:	9f 07       	cpc	r25, r31
   1246e:	f0 e0       	ldi	r31, 0x00	; 0
   12470:	af 07       	cpc	r26, r31
   12472:	f0 e0       	ldi	r31, 0x00	; 0
   12474:	bf 07       	cpc	r27, r31
   12476:	90 f2       	brcs	.-92     	; 0x1241c <_ZN7Sd2Card4initEi+0xc4>
   12478:	82 e0       	ldi	r24, 0x02	; 2
   1247a:	3d c0       	rjmp	.+122    	; 0x124f6 <_ZN7Sd2Card4initEi+0x19e>
   1247c:	c1 2c       	mov	r12, r1
   1247e:	d1 2c       	mov	r13, r1
   12480:	e1 2c       	mov	r14, r1
   12482:	f0 e4       	ldi	r31, 0x40	; 64
   12484:	ff 2e       	mov	r15, r31
   12486:	03 c0       	rjmp	.+6      	; 0x1248e <_ZN7Sd2Card4initEi+0x136>
   12488:	cc 24       	eor	r12, r12
   1248a:	dd 24       	eor	r13, r13
   1248c:	76 01       	movw	r14, r12
   1248e:	0e 94 93 8f 	call	0x11f26	; 0x11f26 <millis>
   12492:	4b 01       	movw	r8, r22
   12494:	5c 01       	movw	r10, r24
   12496:	12 c0       	rjmp	.+36     	; 0x124bc <_ZN7Sd2Card4initEi+0x164>
   12498:	0e 94 93 8f 	call	0x11f26	; 0x11f26 <millis>
   1249c:	a5 01       	movw	r20, r10
   1249e:	94 01       	movw	r18, r8
   124a0:	0e 94 99 8f 	call	0x11f32	; 0x11f32 <_Z11millisDeltamm>
   124a4:	dc 01       	movw	r26, r24
   124a6:	cb 01       	movw	r24, r22
   124a8:	81 3d       	cpi	r24, 0xD1	; 209
   124aa:	f7 e0       	ldi	r31, 0x07	; 7
   124ac:	9f 07       	cpc	r25, r31
   124ae:	f0 e0       	ldi	r31, 0x00	; 0
   124b0:	af 07       	cpc	r26, r31
   124b2:	f0 e0       	ldi	r31, 0x00	; 0
   124b4:	bf 07       	cpc	r27, r31
   124b6:	10 f0       	brcs	.+4      	; 0x124bc <_ZN7Sd2Card4initEi+0x164>
   124b8:	8a e0       	ldi	r24, 0x0A	; 10
   124ba:	1d c0       	rjmp	.+58     	; 0x124f6 <_ZN7Sd2Card4initEi+0x19e>
   124bc:	c8 01       	movw	r24, r16
   124be:	67 e3       	ldi	r22, 0x37	; 55
   124c0:	20 e0       	ldi	r18, 0x00	; 0
   124c2:	30 e0       	ldi	r19, 0x00	; 0
   124c4:	a9 01       	movw	r20, r18
   124c6:	0e 94 cc 90 	call	0x12198	; 0x12198 <_ZN7Sd2Card11cardCommandEhm>
   124ca:	c8 01       	movw	r24, r16
   124cc:	69 e2       	ldi	r22, 0x29	; 41
   124ce:	a7 01       	movw	r20, r14
   124d0:	96 01       	movw	r18, r12
   124d2:	0e 94 cc 90 	call	0x12198	; 0x12198 <_ZN7Sd2Card11cardCommandEhm>
   124d6:	88 23       	and	r24, r24
   124d8:	f9 f6       	brne	.-66     	; 0x12498 <_ZN7Sd2Card4initEi+0x140>
   124da:	f8 01       	movw	r30, r16
   124dc:	84 81       	ldd	r24, Z+4	; 0x04
   124de:	82 30       	cpi	r24, 0x02	; 2
   124e0:	f9 f4       	brne	.+62     	; 0x12520 <_ZN7Sd2Card4initEi+0x1c8>
   124e2:	c8 01       	movw	r24, r16
   124e4:	6a e3       	ldi	r22, 0x3A	; 58
   124e6:	20 e0       	ldi	r18, 0x00	; 0
   124e8:	30 e0       	ldi	r19, 0x00	; 0
   124ea:	a9 01       	movw	r20, r18
   124ec:	0e 94 cc 90 	call	0x12198	; 0x12198 <_ZN7Sd2Card11cardCommandEhm>
   124f0:	88 23       	and	r24, r24
   124f2:	41 f0       	breq	.+16     	; 0x12504 <_ZN7Sd2Card4initEi+0x1ac>
   124f4:	88 e0       	ldi	r24, 0x08	; 8
   124f6:	f8 01       	movw	r30, r16
   124f8:	81 83       	std	Z+1, r24	; 0x01
   124fa:	c8 01       	movw	r24, r16
   124fc:	0e 94 d3 8f 	call	0x11fa6	; 0x11fa6 <_ZN7Sd2Card14chipSelectHighEv>
   12500:	80 e0       	ldi	r24, 0x00	; 0
   12502:	1f c0       	rjmp	.+62     	; 0x12542 <_ZN7Sd2Card4initEi+0x1ea>
   12504:	0e 94 80 8f 	call	0x11f00	; 0x11f00 <_ZL6spiRecv>
   12508:	80 7c       	andi	r24, 0xC0	; 192
   1250a:	80 3c       	cpi	r24, 0xC0	; 192
   1250c:	19 f4       	brne	.+6      	; 0x12514 <_ZN7Sd2Card4initEi+0x1bc>
   1250e:	83 e0       	ldi	r24, 0x03	; 3
   12510:	f8 01       	movw	r30, r16
   12512:	84 83       	std	Z+4, r24	; 0x04
   12514:	0e 94 80 8f 	call	0x11f00	; 0x11f00 <_ZL6spiRecv>
   12518:	0e 94 80 8f 	call	0x11f00	; 0x11f00 <_ZL6spiRecv>
   1251c:	0e 94 80 8f 	call	0x11f00	; 0x11f00 <_ZL6spiRecv>
   12520:	c8 01       	movw	r24, r16
   12522:	0e 94 d3 8f 	call	0x11fa6	; 0x11fa6 <_ZN7Sd2Card14chipSelectHighEv>
   12526:	80 91 bd 25 	lds	r24, 0x25BD
   1252a:	90 91 be 25 	lds	r25, 0x25BE
   1252e:	40 e0       	ldi	r20, 0x00	; 0
   12530:	52 e1       	ldi	r21, 0x12	; 18
   12532:	6a e7       	ldi	r22, 0x7A	; 122
   12534:	70 e0       	ldi	r23, 0x00	; 0
   12536:	0e 94 16 32 	call	0x642c	; 0x642c <hal_spiSetBaudRate>
   1253a:	80 95       	com	r24
   1253c:	88 1f       	adc	r24, r24
   1253e:	88 27       	eor	r24, r24
   12540:	88 1f       	adc	r24, r24
   12542:	0f 90       	pop	r0
   12544:	0f 90       	pop	r0
   12546:	df 91       	pop	r29
   12548:	cf 91       	pop	r28
   1254a:	1f 91       	pop	r17
   1254c:	0f 91       	pop	r16
   1254e:	ff 90       	pop	r15
   12550:	ef 90       	pop	r14
   12552:	df 90       	pop	r13
   12554:	cf 90       	pop	r12
   12556:	bf 90       	pop	r11
   12558:	af 90       	pop	r10
   1255a:	9f 90       	pop	r9
   1255c:	8f 90       	pop	r8
   1255e:	08 95       	ret

00012560 <_ZN7Sd2Card9writeDataEhPKh>:
   12560:	af 92       	push	r10
   12562:	bf 92       	push	r11
   12564:	cf 92       	push	r12
   12566:	df 92       	push	r13
   12568:	ef 92       	push	r14
   1256a:	ff 92       	push	r15
   1256c:	0f 93       	push	r16
   1256e:	1f 93       	push	r17
   12570:	cf 93       	push	r28
   12572:	df 93       	push	r29
   12574:	0f 92       	push	r0
   12576:	0f 92       	push	r0
   12578:	cd b7       	in	r28, 0x3d	; 61
   1257a:	de b7       	in	r29, 0x3e	; 62
   1257c:	8c 01       	movw	r16, r24
   1257e:	e6 2e       	mov	r14, r22
   12580:	ca 01       	movw	r24, r20
   12582:	60 e0       	ldi	r22, 0x00	; 0
   12584:	72 e0       	ldi	r23, 0x02	; 2
   12586:	49 83       	std	Y+1, r20	; 0x01
   12588:	5a 83       	std	Y+2, r21	; 0x02
   1258a:	0e 94 48 8f 	call	0x11e90	; 0x11e90 <_ZL9CRC_CCITTPKhj>
   1258e:	5c 01       	movw	r10, r24
   12590:	8e 2d       	mov	r24, r14
   12592:	0e 94 77 8f 	call	0x11eee	; 0x11eee <_ZL7spiSendh>
   12596:	0e 94 f0 80 	call	0x101e0	; 0x101e0 <arb_sysTimerEnabled>
   1259a:	49 81       	ldd	r20, Y+1	; 0x01
   1259c:	5a 81       	ldd	r21, Y+2	; 0x02
   1259e:	88 23       	and	r24, r24
   125a0:	21 f4       	brne	.+8      	; 0x125aa <_ZN7Sd2Card9writeDataEhPKh+0x4a>
   125a2:	6a 01       	movw	r12, r20
   125a4:	ee 24       	eor	r14, r14
   125a6:	ff 24       	eor	r15, r15
   125a8:	04 c0       	rjmp	.+8      	; 0x125b2 <_ZN7Sd2Card9writeDataEhPKh+0x52>
   125aa:	0f b6       	in	r0, 0x3f	; 63
   125ac:	07 fe       	sbrs	r0, 7
   125ae:	f9 cf       	rjmp	.-14     	; 0x125a2 <_ZN7Sd2Card9writeDataEhPKh+0x42>
   125b0:	4a c0       	rjmp	.+148    	; 0x12646 <_ZN7Sd2Card9writeDataEhPKh+0xe6>
   125b2:	80 91 bd 25 	lds	r24, 0x25BD
   125b6:	90 91 be 25 	lds	r25, 0x25BE
   125ba:	f6 01       	movw	r30, r12
   125bc:	61 91       	ld	r22, Z+
   125be:	6f 01       	movw	r12, r30
   125c0:	0e 94 c7 31 	call	0x638e	; 0x638e <hal_spiWriteByte>
   125c4:	08 94       	sec
   125c6:	e1 1c       	adc	r14, r1
   125c8:	f1 1c       	adc	r15, r1
   125ca:	f0 e0       	ldi	r31, 0x00	; 0
   125cc:	ef 16       	cp	r14, r31
   125ce:	f2 e0       	ldi	r31, 0x02	; 2
   125d0:	ff 06       	cpc	r15, r31
   125d2:	79 f7       	brne	.-34     	; 0x125b2 <_ZN7Sd2Card9writeDataEhPKh+0x52>
   125d4:	16 c0       	rjmp	.+44     	; 0x12602 <_ZN7Sd2Card9writeDataEhPKh+0xa2>
   125d6:	0e 94 93 8f 	call	0x11f26	; 0x11f26 <millis>
   125da:	a7 01       	movw	r20, r14
   125dc:	96 01       	movw	r18, r12
   125de:	0e 94 99 8f 	call	0x11f32	; 0x11f32 <_Z11millisDeltamm>
   125e2:	dc 01       	movw	r26, r24
   125e4:	cb 01       	movw	r24, r22
   125e6:	89 3b       	cpi	r24, 0xB9	; 185
   125e8:	2b e0       	ldi	r18, 0x0B	; 11
   125ea:	92 07       	cpc	r25, r18
   125ec:	20 e0       	ldi	r18, 0x00	; 0
   125ee:	a2 07       	cpc	r26, r18
   125f0:	20 e0       	ldi	r18, 0x00	; 0
   125f2:	b2 07       	cpc	r27, r18
   125f4:	20 f4       	brcc	.+8      	; 0x125fe <_ZN7Sd2Card9writeDataEhPKh+0x9e>
   125f6:	80 91 bf 25 	lds	r24, 0x25BF
   125fa:	88 23       	and	r24, r24
   125fc:	61 f3       	breq	.-40     	; 0x125d6 <_ZN7Sd2Card9writeDataEhPKh+0x76>
   125fe:	10 92 bf 25 	sts	0x25BF, r1
   12602:	8b 2d       	mov	r24, r11
   12604:	0e 94 77 8f 	call	0x11eee	; 0x11eee <_ZL7spiSendh>
   12608:	8a 2d       	mov	r24, r10
   1260a:	0e 94 77 8f 	call	0x11eee	; 0x11eee <_ZL7spiSendh>
   1260e:	0e 94 80 8f 	call	0x11f00	; 0x11f00 <_ZL6spiRecv>
   12612:	f8 01       	movw	r30, r16
   12614:	83 83       	std	Z+3, r24	; 0x03
   12616:	8f 71       	andi	r24, 0x1F	; 31
   12618:	85 30       	cpi	r24, 0x05	; 5
   1261a:	39 f0       	breq	.+14     	; 0x1262a <_ZN7Sd2Card9writeDataEhPKh+0xca>
   1261c:	83 e1       	ldi	r24, 0x13	; 19
   1261e:	81 83       	std	Z+1, r24	; 0x01
   12620:	c8 01       	movw	r24, r16
   12622:	0e 94 d3 8f 	call	0x11fa6	; 0x11fa6 <_ZN7Sd2Card14chipSelectHighEv>
   12626:	80 e0       	ldi	r24, 0x00	; 0
   12628:	01 c0       	rjmp	.+2      	; 0x1262c <_ZN7Sd2Card9writeDataEhPKh+0xcc>
   1262a:	81 e0       	ldi	r24, 0x01	; 1
   1262c:	0f 90       	pop	r0
   1262e:	0f 90       	pop	r0
   12630:	df 91       	pop	r29
   12632:	cf 91       	pop	r28
   12634:	1f 91       	pop	r17
   12636:	0f 91       	pop	r16
   12638:	ff 90       	pop	r15
   1263a:	ef 90       	pop	r14
   1263c:	df 90       	pop	r13
   1263e:	cf 90       	pop	r12
   12640:	bf 90       	pop	r11
   12642:	af 90       	pop	r10
   12644:	08 95       	ret
   12646:	80 91 bd 25 	lds	r24, 0x25BD
   1264a:	90 91 be 25 	lds	r25, 0x25BE
   1264e:	60 e0       	ldi	r22, 0x00	; 0
   12650:	20 e0       	ldi	r18, 0x00	; 0
   12652:	32 e0       	ldi	r19, 0x02	; 2
   12654:	0e 94 2e 35 	call	0x6a5c	; 0x6a5c <hal_spiWriteBlock>
   12658:	0e 94 93 8f 	call	0x11f26	; 0x11f26 <millis>
   1265c:	6b 01       	movw	r12, r22
   1265e:	7c 01       	movw	r14, r24
   12660:	ca cf       	rjmp	.-108    	; 0x125f6 <_ZN7Sd2Card9writeDataEhPKh+0x96>

00012662 <_ZN7Sd2Card9writeDataEPKh>:
   12662:	0f 93       	push	r16
   12664:	1f 93       	push	r17
   12666:	cf 93       	push	r28
   12668:	df 93       	push	r29
   1266a:	ec 01       	movw	r28, r24
   1266c:	8b 01       	movw	r16, r22
   1266e:	0e 94 de 8f 	call	0x11fbc	; 0x11fbc <_ZN7Sd2Card13chipSelectLowEv>
   12672:	ce 01       	movw	r24, r28
   12674:	68 e5       	ldi	r22, 0x58	; 88
   12676:	72 e0       	ldi	r23, 0x02	; 2
   12678:	0e 94 9f 90 	call	0x1213e	; 0x1213e <_ZN7Sd2Card11waitNotBusyEj>
   1267c:	88 23       	and	r24, r24
   1267e:	61 f0       	breq	.+24     	; 0x12698 <_ZN7Sd2Card9writeDataEPKh+0x36>
   12680:	ce 01       	movw	r24, r28
   12682:	6c ef       	ldi	r22, 0xFC	; 252
   12684:	a8 01       	movw	r20, r16
   12686:	0e 94 b0 92 	call	0x12560	; 0x12560 <_ZN7Sd2Card9writeDataEhPKh>
   1268a:	88 23       	and	r24, r24
   1268c:	29 f0       	breq	.+10     	; 0x12698 <_ZN7Sd2Card9writeDataEPKh+0x36>
   1268e:	ce 01       	movw	r24, r28
   12690:	0e 94 d3 8f 	call	0x11fa6	; 0x11fa6 <_ZN7Sd2Card14chipSelectHighEv>
   12694:	81 e0       	ldi	r24, 0x01	; 1
   12696:	06 c0       	rjmp	.+12     	; 0x126a4 <_ZN7Sd2Card9writeDataEPKh+0x42>
   12698:	85 e1       	ldi	r24, 0x15	; 21
   1269a:	89 83       	std	Y+1, r24	; 0x01
   1269c:	ce 01       	movw	r24, r28
   1269e:	0e 94 d3 8f 	call	0x11fa6	; 0x11fa6 <_ZN7Sd2Card14chipSelectHighEv>
   126a2:	80 e0       	ldi	r24, 0x00	; 0
   126a4:	df 91       	pop	r29
   126a6:	cf 91       	pop	r28
   126a8:	1f 91       	pop	r17
   126aa:	0f 91       	pop	r16
   126ac:	08 95       	ret

000126ae <_ZN7Sd2Card10writeBlockEmPKh>:
   126ae:	cf 92       	push	r12
   126b0:	df 92       	push	r13
   126b2:	ef 92       	push	r14
   126b4:	ff 92       	push	r15
   126b6:	0f 93       	push	r16
   126b8:	1f 93       	push	r17
   126ba:	cf 93       	push	r28
   126bc:	df 93       	push	r29
   126be:	ec 01       	movw	r28, r24
   126c0:	6a 01       	movw	r12, r20
   126c2:	7b 01       	movw	r14, r22
   126c4:	89 01       	movw	r16, r18
   126c6:	8c 81       	ldd	r24, Y+4	; 0x04
   126c8:	83 30       	cpi	r24, 0x03	; 3
   126ca:	39 f0       	breq	.+14     	; 0x126da <_ZN7Sd2Card10writeBlockEmPKh+0x2c>
   126cc:	89 e0       	ldi	r24, 0x09	; 9
   126ce:	cc 0c       	add	r12, r12
   126d0:	dd 1c       	adc	r13, r13
   126d2:	ee 1c       	adc	r14, r14
   126d4:	ff 1c       	adc	r15, r15
   126d6:	8a 95       	dec	r24
   126d8:	d1 f7       	brne	.-12     	; 0x126ce <_ZN7Sd2Card10writeBlockEmPKh+0x20>
   126da:	ce 01       	movw	r24, r28
   126dc:	68 e1       	ldi	r22, 0x18	; 24
   126de:	a7 01       	movw	r20, r14
   126e0:	96 01       	movw	r18, r12
   126e2:	0e 94 cc 90 	call	0x12198	; 0x12198 <_ZN7Sd2Card11cardCommandEhm>
   126e6:	88 23       	and	r24, r24
   126e8:	11 f0       	breq	.+4      	; 0x126ee <_ZN7Sd2Card10writeBlockEmPKh+0x40>
   126ea:	86 e0       	ldi	r24, 0x06	; 6
   126ec:	1e c0       	rjmp	.+60     	; 0x1272a <_ZN7Sd2Card10writeBlockEmPKh+0x7c>
   126ee:	ce 01       	movw	r24, r28
   126f0:	6e ef       	ldi	r22, 0xFE	; 254
   126f2:	a8 01       	movw	r20, r16
   126f4:	0e 94 b0 92 	call	0x12560	; 0x12560 <_ZN7Sd2Card9writeDataEhPKh>
   126f8:	88 23       	and	r24, r24
   126fa:	c1 f0       	breq	.+48     	; 0x1272c <_ZN7Sd2Card10writeBlockEmPKh+0x7e>
   126fc:	ce 01       	movw	r24, r28
   126fe:	68 e5       	ldi	r22, 0x58	; 88
   12700:	72 e0       	ldi	r23, 0x02	; 2
   12702:	0e 94 9f 90 	call	0x1213e	; 0x1213e <_ZN7Sd2Card11waitNotBusyEj>
   12706:	88 23       	and	r24, r24
   12708:	11 f4       	brne	.+4      	; 0x1270e <_ZN7Sd2Card10writeBlockEmPKh+0x60>
   1270a:	87 e1       	ldi	r24, 0x17	; 23
   1270c:	0e c0       	rjmp	.+28     	; 0x1272a <_ZN7Sd2Card10writeBlockEmPKh+0x7c>
   1270e:	ce 01       	movw	r24, r28
   12710:	6d e0       	ldi	r22, 0x0D	; 13
   12712:	20 e0       	ldi	r18, 0x00	; 0
   12714:	30 e0       	ldi	r19, 0x00	; 0
   12716:	a9 01       	movw	r20, r18
   12718:	0e 94 cc 90 	call	0x12198	; 0x12198 <_ZN7Sd2Card11cardCommandEhm>
   1271c:	88 23       	and	r24, r24
   1271e:	21 f4       	brne	.+8      	; 0x12728 <_ZN7Sd2Card10writeBlockEmPKh+0x7a>
   12720:	0e 94 80 8f 	call	0x11f00	; 0x11f00 <_ZL6spiRecv>
   12724:	88 23       	and	r24, r24
   12726:	79 f0       	breq	.+30     	; 0x12746 <_ZN7Sd2Card10writeBlockEmPKh+0x98>
   12728:	86 e1       	ldi	r24, 0x16	; 22
   1272a:	89 83       	std	Y+1, r24	; 0x01
   1272c:	ce 01       	movw	r24, r28
   1272e:	0e 94 d3 8f 	call	0x11fa6	; 0x11fa6 <_ZN7Sd2Card14chipSelectHighEv>
   12732:	80 e0       	ldi	r24, 0x00	; 0
   12734:	df 91       	pop	r29
   12736:	cf 91       	pop	r28
   12738:	1f 91       	pop	r17
   1273a:	0f 91       	pop	r16
   1273c:	ff 90       	pop	r15
   1273e:	ef 90       	pop	r14
   12740:	df 90       	pop	r13
   12742:	cf 90       	pop	r12
   12744:	08 95       	ret
   12746:	ce 01       	movw	r24, r28
   12748:	0e 94 d3 8f 	call	0x11fa6	; 0x11fa6 <_ZN7Sd2Card14chipSelectHighEv>
   1274c:	81 e0       	ldi	r24, 0x01	; 1
   1274e:	f2 cf       	rjmp	.-28     	; 0x12734 <_ZN7Sd2Card10writeBlockEmPKh+0x86>

00012750 <_ZN7Sd2Card10writeStartEmm>:
   12750:	8f 92       	push	r8
   12752:	9f 92       	push	r9
   12754:	af 92       	push	r10
   12756:	bf 92       	push	r11
   12758:	cf 92       	push	r12
   1275a:	df 92       	push	r13
   1275c:	ef 92       	push	r14
   1275e:	ff 92       	push	r15
   12760:	0f 93       	push	r16
   12762:	1f 93       	push	r17
   12764:	cf 93       	push	r28
   12766:	df 93       	push	r29
   12768:	ec 01       	movw	r28, r24
   1276a:	6a 01       	movw	r12, r20
   1276c:	7b 01       	movw	r14, r22
   1276e:	48 01       	movw	r8, r16
   12770:	59 01       	movw	r10, r18
   12772:	67 e3       	ldi	r22, 0x37	; 55
   12774:	20 e0       	ldi	r18, 0x00	; 0
   12776:	30 e0       	ldi	r19, 0x00	; 0
   12778:	a9 01       	movw	r20, r18
   1277a:	0e 94 cc 90 	call	0x12198	; 0x12198 <_ZN7Sd2Card11cardCommandEhm>
   1277e:	ce 01       	movw	r24, r28
   12780:	67 e1       	ldi	r22, 0x17	; 23
   12782:	a5 01       	movw	r20, r10
   12784:	94 01       	movw	r18, r8
   12786:	0e 94 cc 90 	call	0x12198	; 0x12198 <_ZN7Sd2Card11cardCommandEhm>
   1278a:	88 23       	and	r24, r24
   1278c:	11 f0       	breq	.+4      	; 0x12792 <_ZN7Sd2Card10writeStartEmm+0x42>
   1278e:	89 e0       	ldi	r24, 0x09	; 9
   12790:	13 c0       	rjmp	.+38     	; 0x127b8 <_ZN7Sd2Card10writeStartEmm+0x68>
   12792:	8c 81       	ldd	r24, Y+4	; 0x04
   12794:	83 30       	cpi	r24, 0x03	; 3
   12796:	39 f0       	breq	.+14     	; 0x127a6 <_ZN7Sd2Card10writeStartEmm+0x56>
   12798:	99 e0       	ldi	r25, 0x09	; 9
   1279a:	cc 0c       	add	r12, r12
   1279c:	dd 1c       	adc	r13, r13
   1279e:	ee 1c       	adc	r14, r14
   127a0:	ff 1c       	adc	r15, r15
   127a2:	9a 95       	dec	r25
   127a4:	d1 f7       	brne	.-12     	; 0x1279a <_ZN7Sd2Card10writeStartEmm+0x4a>
   127a6:	ce 01       	movw	r24, r28
   127a8:	69 e1       	ldi	r22, 0x19	; 25
   127aa:	a7 01       	movw	r20, r14
   127ac:	96 01       	movw	r18, r12
   127ae:	0e 94 cc 90 	call	0x12198	; 0x12198 <_ZN7Sd2Card11cardCommandEhm>
   127b2:	88 23       	and	r24, r24
   127b4:	39 f0       	breq	.+14     	; 0x127c4 <_ZN7Sd2Card10writeStartEmm+0x74>
   127b6:	87 e0       	ldi	r24, 0x07	; 7
   127b8:	89 83       	std	Y+1, r24	; 0x01
   127ba:	ce 01       	movw	r24, r28
   127bc:	0e 94 d3 8f 	call	0x11fa6	; 0x11fa6 <_ZN7Sd2Card14chipSelectHighEv>
   127c0:	80 e0       	ldi	r24, 0x00	; 0
   127c2:	04 c0       	rjmp	.+8      	; 0x127cc <_ZN7Sd2Card10writeStartEmm+0x7c>
   127c4:	ce 01       	movw	r24, r28
   127c6:	0e 94 d3 8f 	call	0x11fa6	; 0x11fa6 <_ZN7Sd2Card14chipSelectHighEv>
   127ca:	81 e0       	ldi	r24, 0x01	; 1
   127cc:	df 91       	pop	r29
   127ce:	cf 91       	pop	r28
   127d0:	1f 91       	pop	r17
   127d2:	0f 91       	pop	r16
   127d4:	ff 90       	pop	r15
   127d6:	ef 90       	pop	r14
   127d8:	df 90       	pop	r13
   127da:	cf 90       	pop	r12
   127dc:	bf 90       	pop	r11
   127de:	af 90       	pop	r10
   127e0:	9f 90       	pop	r9
   127e2:	8f 90       	pop	r8
   127e4:	08 95       	ret

000127e6 <_ZN7Sd2Card9writeStopEv>:
   127e6:	cf 93       	push	r28
   127e8:	df 93       	push	r29
   127ea:	ec 01       	movw	r28, r24
   127ec:	0e 94 de 8f 	call	0x11fbc	; 0x11fbc <_ZN7Sd2Card13chipSelectLowEv>
   127f0:	ce 01       	movw	r24, r28
   127f2:	68 e5       	ldi	r22, 0x58	; 88
   127f4:	72 e0       	ldi	r23, 0x02	; 2
   127f6:	0e 94 9f 90 	call	0x1213e	; 0x1213e <_ZN7Sd2Card11waitNotBusyEj>
   127fa:	88 23       	and	r24, r24
   127fc:	79 f0       	breq	.+30     	; 0x1281c <_ZN7Sd2Card9writeStopEv+0x36>
   127fe:	8d ef       	ldi	r24, 0xFD	; 253
   12800:	0e 94 77 8f 	call	0x11eee	; 0x11eee <_ZL7spiSendh>
   12804:	ce 01       	movw	r24, r28
   12806:	68 e5       	ldi	r22, 0x58	; 88
   12808:	72 e0       	ldi	r23, 0x02	; 2
   1280a:	0e 94 9f 90 	call	0x1213e	; 0x1213e <_ZN7Sd2Card11waitNotBusyEj>
   1280e:	88 23       	and	r24, r24
   12810:	29 f0       	breq	.+10     	; 0x1281c <_ZN7Sd2Card9writeStopEv+0x36>
   12812:	ce 01       	movw	r24, r28
   12814:	0e 94 d3 8f 	call	0x11fa6	; 0x11fa6 <_ZN7Sd2Card14chipSelectHighEv>
   12818:	81 e0       	ldi	r24, 0x01	; 1
   1281a:	06 c0       	rjmp	.+12     	; 0x12828 <_ZN7Sd2Card9writeStopEv+0x42>
   1281c:	82 e1       	ldi	r24, 0x12	; 18
   1281e:	89 83       	std	Y+1, r24	; 0x01
   12820:	ce 01       	movw	r24, r28
   12822:	0e 94 d3 8f 	call	0x11fa6	; 0x11fa6 <_ZN7Sd2Card14chipSelectHighEv>
   12826:	80 e0       	ldi	r24, 0x00	; 0
   12828:	df 91       	pop	r29
   1282a:	cf 91       	pop	r28
   1282c:	08 95       	ret

0001282e <_ZL7print2uP5Printh>:
   1282e:	1f 93       	push	r17
   12830:	cf 93       	push	r28
   12832:	df 93       	push	r29
   12834:	ec 01       	movw	r28, r24
   12836:	16 2f       	mov	r17, r22
   12838:	6a 30       	cpi	r22, 0x0A	; 10
   1283a:	38 f4       	brcc	.+14     	; 0x1284a <_ZL7print2uP5Printh+0x1c>
   1283c:	e8 81       	ld	r30, Y
   1283e:	f9 81       	ldd	r31, Y+1	; 0x01
   12840:	01 90       	ld	r0, Z+
   12842:	f0 81       	ld	r31, Z
   12844:	e0 2d       	mov	r30, r0
   12846:	60 e3       	ldi	r22, 0x30	; 48
   12848:	19 95       	eicall
   1284a:	ce 01       	movw	r24, r28
   1284c:	61 2f       	mov	r22, r17
   1284e:	4a e0       	ldi	r20, 0x0A	; 10
   12850:	50 e0       	ldi	r21, 0x00	; 0
   12852:	0e 94 01 a8 	call	0x15002	; 0x15002 <_ZN5Print5printEhi>
   12856:	df 91       	pop	r29
   12858:	cf 91       	pop	r28
   1285a:	1f 91       	pop	r17
   1285c:	08 95       	ret

0001285e <_ZN10SdBaseFile10addClusterEv>:
   1285e:	cf 93       	push	r28
   12860:	df 93       	push	r29
   12862:	ec 01       	movw	r28, r24
   12864:	9c 01       	movw	r18, r24
   12866:	29 5f       	subi	r18, 0xF9	; 249
   12868:	3f 4f       	sbci	r19, 0xFF	; 255
   1286a:	8d 81       	ldd	r24, Y+5	; 0x05
   1286c:	9e 81       	ldd	r25, Y+6	; 0x06
   1286e:	41 e0       	ldi	r20, 0x01	; 1
   12870:	50 e0       	ldi	r21, 0x00	; 0
   12872:	60 e0       	ldi	r22, 0x00	; 0
   12874:	70 e0       	ldi	r23, 0x00	; 0
   12876:	0e 94 54 a4 	call	0x148a8	; 0x148a8 <_ZN8SdVolume15allocContiguousEmPm>
   1287a:	88 23       	and	r24, r24
   1287c:	a1 f0       	breq	.+40     	; 0x128a6 <_ZN10SdBaseFile10addClusterEv+0x48>
   1287e:	8f 89       	ldd	r24, Y+23	; 0x17
   12880:	98 8d       	ldd	r25, Y+24	; 0x18
   12882:	a9 8d       	ldd	r26, Y+25	; 0x19
   12884:	ba 8d       	ldd	r27, Y+26	; 0x1a
   12886:	00 97       	sbiw	r24, 0x00	; 0
   12888:	a1 05       	cpc	r26, r1
   1288a:	b1 05       	cpc	r27, r1
   1288c:	71 f4       	brne	.+28     	; 0x128aa <_ZN10SdBaseFile10addClusterEv+0x4c>
   1288e:	8f 81       	ldd	r24, Y+7	; 0x07
   12890:	98 85       	ldd	r25, Y+8	; 0x08
   12892:	a9 85       	ldd	r26, Y+9	; 0x09
   12894:	ba 85       	ldd	r27, Y+10	; 0x0a
   12896:	8f 8b       	std	Y+23, r24	; 0x17
   12898:	98 8f       	std	Y+24, r25	; 0x18
   1289a:	a9 8f       	std	Y+25, r26	; 0x19
   1289c:	ba 8f       	std	Y+26, r27	; 0x1a
   1289e:	89 81       	ldd	r24, Y+1	; 0x01
   128a0:	80 68       	ori	r24, 0x80	; 128
   128a2:	89 83       	std	Y+1, r24	; 0x01
   128a4:	02 c0       	rjmp	.+4      	; 0x128aa <_ZN10SdBaseFile10addClusterEv+0x4c>
   128a6:	80 e0       	ldi	r24, 0x00	; 0
   128a8:	01 c0       	rjmp	.+2      	; 0x128ac <_ZN10SdBaseFile10addClusterEv+0x4e>
   128aa:	81 e0       	ldi	r24, 0x01	; 1
   128ac:	df 91       	pop	r29
   128ae:	cf 91       	pop	r28
   128b0:	08 95       	ret

000128b2 <_ZN10SdBaseFile13addDirClusterEv>:
   128b2:	8f 92       	push	r8
   128b4:	9f 92       	push	r9
   128b6:	af 92       	push	r10
   128b8:	bf 92       	push	r11
   128ba:	ef 92       	push	r14
   128bc:	ff 92       	push	r15
   128be:	0f 93       	push	r16
   128c0:	1f 93       	push	r17
   128c2:	cf 93       	push	r28
   128c4:	8c 01       	movw	r16, r24
   128c6:	fc 01       	movw	r30, r24
   128c8:	83 89       	ldd	r24, Z+19	; 0x13
   128ca:	94 89       	ldd	r25, Z+20	; 0x14
   128cc:	a5 89       	ldd	r26, Z+21	; 0x15
   128ce:	b6 89       	ldd	r27, Z+22	; 0x16
   128d0:	80 3e       	cpi	r24, 0xE0	; 224
   128d2:	ff ef       	ldi	r31, 0xFF	; 255
   128d4:	9f 07       	cpc	r25, r31
   128d6:	ff e1       	ldi	r31, 0x1F	; 31
   128d8:	af 07       	cpc	r26, r31
   128da:	f0 e0       	ldi	r31, 0x00	; 0
   128dc:	bf 07       	cpc	r27, r31
   128de:	08 f0       	brcs	.+2      	; 0x128e2 <_ZN10SdBaseFile13addDirClusterEv+0x30>
   128e0:	57 c0       	rjmp	.+174    	; 0x12990 <_ZN10SdBaseFile13addDirClusterEv+0xde>
   128e2:	c8 01       	movw	r24, r16
   128e4:	0e 94 2f 94 	call	0x1285e	; 0x1285e <_ZN10SdBaseFile10addClusterEv>
   128e8:	88 23       	and	r24, r24
   128ea:	09 f4       	brne	.+2      	; 0x128ee <_ZN10SdBaseFile13addDirClusterEv+0x3c>
   128ec:	51 c0       	rjmp	.+162    	; 0x12990 <_ZN10SdBaseFile13addDirClusterEv+0xde>
   128ee:	d8 01       	movw	r26, r16
   128f0:	17 96       	adiw	r26, 0x07	; 7
   128f2:	4d 91       	ld	r20, X+
   128f4:	5d 91       	ld	r21, X+
   128f6:	6d 91       	ld	r22, X+
   128f8:	7c 91       	ld	r23, X
   128fa:	1a 97       	sbiw	r26, 0x0a	; 10
   128fc:	15 96       	adiw	r26, 0x05	; 5
   128fe:	8d 91       	ld	r24, X+
   12900:	9c 91       	ld	r25, X
   12902:	16 97       	sbiw	r26, 0x06	; 6
   12904:	0e 94 38 a3 	call	0x14670	; 0x14670 <_ZNK8SdVolume17clusterStartBlockEm>
   12908:	4b 01       	movw	r8, r22
   1290a:	5c 01       	movw	r10, r24
   1290c:	45 e0       	ldi	r20, 0x05	; 5
   1290e:	0e 94 e1 a2 	call	0x145c2	; 0x145c2 <_ZN8SdVolume10cacheFetchEmh>
   12912:	7c 01       	movw	r14, r24
   12914:	00 97       	sbiw	r24, 0x00	; 0
   12916:	f1 f1       	breq	.+124    	; 0x12994 <_ZN10SdBaseFile13addDirClusterEv+0xe2>
   12918:	80 e0       	ldi	r24, 0x00	; 0
   1291a:	92 e0       	ldi	r25, 0x02	; 2
   1291c:	f7 01       	movw	r30, r14
   1291e:	9c 01       	movw	r18, r24
   12920:	11 92       	st	Z+, r1
   12922:	21 50       	subi	r18, 0x01	; 1
   12924:	30 40       	sbci	r19, 0x00	; 0
   12926:	e1 f7       	brne	.-8      	; 0x12920 <_ZN10SdBaseFile13addDirClusterEv+0x6e>
   12928:	c1 e0       	ldi	r28, 0x01	; 1
   1292a:	10 c0       	rjmp	.+32     	; 0x1294c <_ZN10SdBaseFile13addDirClusterEv+0x9a>
   1292c:	b5 01       	movw	r22, r10
   1292e:	a4 01       	movw	r20, r8
   12930:	4c 0f       	add	r20, r28
   12932:	51 1d       	adc	r21, r1
   12934:	61 1d       	adc	r22, r1
   12936:	71 1d       	adc	r23, r1
   12938:	80 91 c4 25 	lds	r24, 0x25C4
   1293c:	90 91 c5 25 	lds	r25, 0x25C5
   12940:	97 01       	movw	r18, r14
   12942:	0e 94 57 93 	call	0x126ae	; 0x126ae <_ZN7Sd2Card10writeBlockEmPKh>
   12946:	88 23       	and	r24, r24
   12948:	19 f1       	breq	.+70     	; 0x12990 <_ZN10SdBaseFile13addDirClusterEv+0xde>
   1294a:	cf 5f       	subi	r28, 0xFF	; 255
   1294c:	d8 01       	movw	r26, r16
   1294e:	15 96       	adiw	r26, 0x05	; 5
   12950:	ed 91       	ld	r30, X+
   12952:	fc 91       	ld	r31, X
   12954:	16 97       	sbiw	r26, 0x06	; 6
   12956:	44 81       	ldd	r20, Z+4	; 0x04
   12958:	c4 17       	cp	r28, r20
   1295a:	40 f3       	brcs	.-48     	; 0x1292c <_ZN10SdBaseFile13addDirClusterEv+0x7a>
   1295c:	50 e0       	ldi	r21, 0x00	; 0
   1295e:	60 e0       	ldi	r22, 0x00	; 0
   12960:	70 e0       	ldi	r23, 0x00	; 0
   12962:	89 e0       	ldi	r24, 0x09	; 9
   12964:	44 0f       	add	r20, r20
   12966:	55 1f       	adc	r21, r21
   12968:	66 1f       	adc	r22, r22
   1296a:	77 1f       	adc	r23, r23
   1296c:	8a 95       	dec	r24
   1296e:	d1 f7       	brne	.-12     	; 0x12964 <_ZN10SdBaseFile13addDirClusterEv+0xb2>
   12970:	53 96       	adiw	r26, 0x13	; 19
   12972:	8d 91       	ld	r24, X+
   12974:	9d 91       	ld	r25, X+
   12976:	0d 90       	ld	r0, X+
   12978:	bc 91       	ld	r27, X
   1297a:	a0 2d       	mov	r26, r0
   1297c:	84 0f       	add	r24, r20
   1297e:	95 1f       	adc	r25, r21
   12980:	a6 1f       	adc	r26, r22
   12982:	b7 1f       	adc	r27, r23
   12984:	f8 01       	movw	r30, r16
   12986:	83 8b       	std	Z+19, r24	; 0x13
   12988:	94 8b       	std	Z+20, r25	; 0x14
   1298a:	a5 8b       	std	Z+21, r26	; 0x15
   1298c:	b6 8b       	std	Z+22, r27	; 0x16
   1298e:	02 c0       	rjmp	.+4      	; 0x12994 <_ZN10SdBaseFile13addDirClusterEv+0xe2>
   12990:	ee 24       	eor	r14, r14
   12992:	ff 24       	eor	r15, r15
   12994:	c7 01       	movw	r24, r14
   12996:	cf 91       	pop	r28
   12998:	1f 91       	pop	r17
   1299a:	0f 91       	pop	r16
   1299c:	ff 90       	pop	r15
   1299e:	ef 90       	pop	r14
   129a0:	bf 90       	pop	r11
   129a2:	af 90       	pop	r10
   129a4:	9f 90       	pop	r9
   129a6:	8f 90       	pop	r8
   129a8:	08 95       	ret

000129aa <_ZN10SdBaseFile13cacheDirEntryEh>:
   129aa:	cf 93       	push	r28
   129ac:	df 93       	push	r29
   129ae:	ec 01       	movw	r28, r24
   129b0:	46 2f       	mov	r20, r22
   129b2:	8f 85       	ldd	r24, Y+15	; 0x0f
   129b4:	98 89       	ldd	r25, Y+16	; 0x10
   129b6:	a9 89       	ldd	r26, Y+17	; 0x11
   129b8:	ba 89       	ldd	r27, Y+18	; 0x12
   129ba:	bc 01       	movw	r22, r24
   129bc:	cd 01       	movw	r24, r26
   129be:	0e 94 e1 a2 	call	0x145c2	; 0x145c2 <_ZN8SdVolume10cacheFetchEmh>
   129c2:	00 97       	sbiw	r24, 0x00	; 0
   129c4:	51 f0       	breq	.+20     	; 0x129da <_ZN10SdBaseFile13cacheDirEntryEh+0x30>
   129c6:	2c 81       	ldd	r18, Y+4	; 0x04
   129c8:	30 e0       	ldi	r19, 0x00	; 0
   129ca:	45 e0       	ldi	r20, 0x05	; 5
   129cc:	22 0f       	add	r18, r18
   129ce:	33 1f       	adc	r19, r19
   129d0:	4a 95       	dec	r20
   129d2:	e1 f7       	brne	.-8      	; 0x129cc <_ZN10SdBaseFile13cacheDirEntryEh+0x22>
   129d4:	28 0f       	add	r18, r24
   129d6:	39 1f       	adc	r19, r25
   129d8:	02 c0       	rjmp	.+4      	; 0x129de <_ZN10SdBaseFile13cacheDirEntryEh+0x34>
   129da:	20 e0       	ldi	r18, 0x00	; 0
   129dc:	30 e0       	ldi	r19, 0x00	; 0
   129de:	c9 01       	movw	r24, r18
   129e0:	df 91       	pop	r29
   129e2:	cf 91       	pop	r28
   129e4:	08 95       	ret

000129e6 <_ZN10SdBaseFile7dirNameERK14directoryEntryPc>:
   129e6:	fc 01       	movw	r30, r24
   129e8:	90 e0       	ldi	r25, 0x00	; 0
   129ea:	80 e0       	ldi	r24, 0x00	; 0
   129ec:	2e e2       	ldi	r18, 0x2E	; 46
   129ee:	30 81       	ld	r19, Z
   129f0:	30 32       	cpi	r19, 0x20	; 32
   129f2:	69 f0       	breq	.+26     	; 0x12a0e <_ZN10SdBaseFile7dirNameERK14directoryEntryPc+0x28>
   129f4:	98 30       	cpi	r25, 0x08	; 8
   129f6:	29 f4       	brne	.+10     	; 0x12a02 <_ZN10SdBaseFile7dirNameERK14directoryEntryPc+0x1c>
   129f8:	db 01       	movw	r26, r22
   129fa:	a8 0f       	add	r26, r24
   129fc:	b1 1d       	adc	r27, r1
   129fe:	2c 93       	st	X, r18
   12a00:	8f 5f       	subi	r24, 0xFF	; 255
   12a02:	30 81       	ld	r19, Z
   12a04:	db 01       	movw	r26, r22
   12a06:	a8 0f       	add	r26, r24
   12a08:	b1 1d       	adc	r27, r1
   12a0a:	3c 93       	st	X, r19
   12a0c:	8f 5f       	subi	r24, 0xFF	; 255
   12a0e:	9f 5f       	subi	r25, 0xFF	; 255
   12a10:	31 96       	adiw	r30, 0x01	; 1
   12a12:	9b 30       	cpi	r25, 0x0B	; 11
   12a14:	61 f7       	brne	.-40     	; 0x129ee <_ZN10SdBaseFile7dirNameERK14directoryEntryPc+0x8>
   12a16:	68 0f       	add	r22, r24
   12a18:	71 1d       	adc	r23, r1
   12a1a:	fb 01       	movw	r30, r22
   12a1c:	10 82       	st	Z, r1
   12a1e:	08 95       	ret

00012a20 <_ZN10SdBaseFile11getFilenameEPc>:
   12a20:	cf 93       	push	r28
   12a22:	df 93       	push	r29
   12a24:	eb 01       	movw	r28, r22
   12a26:	fc 01       	movw	r30, r24
   12a28:	23 81       	ldd	r18, Z+3	; 0x03
   12a2a:	22 23       	and	r18, r18
   12a2c:	89 f0       	breq	.+34     	; 0x12a50 <_ZN10SdBaseFile11getFilenameEPc+0x30>
   12a2e:	22 50       	subi	r18, 0x02	; 2
   12a30:	22 30       	cpi	r18, 0x02	; 2
   12a32:	20 f4       	brcc	.+8      	; 0x12a3c <_ZN10SdBaseFile11getFilenameEPc+0x1c>
   12a34:	8f e2       	ldi	r24, 0x2F	; 47
   12a36:	88 83       	st	Y, r24
   12a38:	19 82       	std	Y+1, r1	; 0x01
   12a3a:	08 c0       	rjmp	.+16     	; 0x12a4c <_ZN10SdBaseFile11getFilenameEPc+0x2c>
   12a3c:	60 e0       	ldi	r22, 0x00	; 0
   12a3e:	0e 94 d5 94 	call	0x129aa	; 0x129aa <_ZN10SdBaseFile13cacheDirEntryEh>
   12a42:	00 97       	sbiw	r24, 0x00	; 0
   12a44:	29 f0       	breq	.+10     	; 0x12a50 <_ZN10SdBaseFile11getFilenameEPc+0x30>
   12a46:	be 01       	movw	r22, r28
   12a48:	0e 94 f3 94 	call	0x129e6	; 0x129e6 <_ZN10SdBaseFile7dirNameERK14directoryEntryPc>
   12a4c:	81 e0       	ldi	r24, 0x01	; 1
   12a4e:	01 c0       	rjmp	.+2      	; 0x12a52 <_ZN10SdBaseFile11getFilenameEPc+0x32>
   12a50:	80 e0       	ldi	r24, 0x00	; 0
   12a52:	df 91       	pop	r29
   12a54:	cf 91       	pop	r28
   12a56:	08 95       	ret

00012a58 <_ZN10SdBaseFile10make83NameEPKcPhPS1_>:
   12a58:	cf 93       	push	r28
   12a5a:	df 93       	push	r29
   12a5c:	ea 01       	movw	r28, r20
   12a5e:	fb 01       	movw	r30, r22
   12a60:	2b e0       	ldi	r18, 0x0B	; 11
   12a62:	30 e2       	ldi	r19, 0x20	; 32
   12a64:	31 93       	st	Z+, r19
   12a66:	21 50       	subi	r18, 0x01	; 1
   12a68:	e9 f7       	brne	.-6      	; 0x12a64 <_ZN10SdBaseFile10make83NameEPKcPhPS1_+0xc>
   12a6a:	dc 01       	movw	r26, r24
   12a6c:	30 e0       	ldi	r19, 0x00	; 0
   12a6e:	47 e0       	ldi	r20, 0x07	; 7
   12a70:	1c c0       	rjmp	.+56     	; 0x12aaa <_ZN10SdBaseFile10make83NameEPKcPhPS1_+0x52>
   12a72:	4a 30       	cpi	r20, 0x0A	; 10
   12a74:	69 f1       	breq	.+90     	; 0x12ad0 <_ZN10SdBaseFile10make83NameEPKcPhPS1_+0x78>
   12a76:	38 e0       	ldi	r19, 0x08	; 8
   12a78:	4a e0       	ldi	r20, 0x0A	; 10
   12a7a:	17 c0       	rjmp	.+46     	; 0x12aaa <_ZN10SdBaseFile10make83NameEPKcPhPS1_+0x52>
   12a7c:	e2 17       	cp	r30, r18
   12a7e:	41 f1       	breq	.+80     	; 0x12ad0 <_ZN10SdBaseFile10make83NameEPKcPhPS1_+0x78>
   12a80:	fc 01       	movw	r30, r24
   12a82:	01 96       	adiw	r24, 0x01	; 1
   12a84:	e4 91       	lpm	r30, Z
   12a86:	ee 23       	and	r30, r30
   12a88:	c9 f7       	brne	.-14     	; 0x12a7c <_ZN10SdBaseFile10make83NameEPKcPhPS1_+0x24>
   12a8a:	43 17       	cp	r20, r19
   12a8c:	08 f1       	brcs	.+66     	; 0x12ad0 <_ZN10SdBaseFile10make83NameEPKcPhPS1_+0x78>
   12a8e:	21 32       	cpi	r18, 0x21	; 33
   12a90:	f8 f0       	brcs	.+62     	; 0x12ad0 <_ZN10SdBaseFile10make83NameEPKcPhPS1_+0x78>
   12a92:	2f 37       	cpi	r18, 0x7F	; 127
   12a94:	e8 f4       	brcc	.+58     	; 0x12ad0 <_ZN10SdBaseFile10make83NameEPKcPhPS1_+0x78>
   12a96:	fb 01       	movw	r30, r22
   12a98:	e3 0f       	add	r30, r19
   12a9a:	f1 1d       	adc	r31, r1
   12a9c:	82 2f       	mov	r24, r18
   12a9e:	81 56       	subi	r24, 0x61	; 97
   12aa0:	8a 31       	cpi	r24, 0x1A	; 26
   12aa2:	08 f4       	brcc	.+2      	; 0x12aa6 <_ZN10SdBaseFile10make83NameEPKcPhPS1_+0x4e>
   12aa4:	20 52       	subi	r18, 0x20	; 32
   12aa6:	20 83       	st	Z, r18
   12aa8:	3f 5f       	subi	r19, 0xFF	; 255
   12aaa:	9a 2f       	mov	r25, r26
   12aac:	8b 2f       	mov	r24, r27
   12aae:	2d 91       	ld	r18, X+
   12ab0:	22 23       	and	r18, r18
   12ab2:	39 f0       	breq	.+14     	; 0x12ac2 <_ZN10SdBaseFile10make83NameEPKcPhPS1_+0x6a>
   12ab4:	2f 32       	cpi	r18, 0x2F	; 47
   12ab6:	29 f0       	breq	.+10     	; 0x12ac2 <_ZN10SdBaseFile10make83NameEPKcPhPS1_+0x6a>
   12ab8:	2e 32       	cpi	r18, 0x2E	; 46
   12aba:	d9 f2       	breq	.-74     	; 0x12a72 <_ZN10SdBaseFile10make83NameEPKcPhPS1_+0x1a>
   12abc:	8f e3       	ldi	r24, 0x3F	; 63
   12abe:	9d e0       	ldi	r25, 0x0D	; 13
   12ac0:	df cf       	rjmp	.-66     	; 0x12a80 <_ZN10SdBaseFile10make83NameEPKcPhPS1_+0x28>
   12ac2:	98 83       	st	Y, r25
   12ac4:	89 83       	std	Y+1, r24	; 0x01
   12ac6:	81 e0       	ldi	r24, 0x01	; 1
   12ac8:	fb 01       	movw	r30, r22
   12aca:	90 81       	ld	r25, Z
   12acc:	90 32       	cpi	r25, 0x20	; 32
   12ace:	09 f4       	brne	.+2      	; 0x12ad2 <_ZN10SdBaseFile10make83NameEPKcPhPS1_+0x7a>
   12ad0:	80 e0       	ldi	r24, 0x00	; 0
   12ad2:	df 91       	pop	r29
   12ad4:	cf 91       	pop	r28
   12ad6:	08 95       	ret

00012ad8 <_ZN10SdBaseFile12printFatDateEP5Printj>:
   12ad8:	0f 93       	push	r16
   12ada:	1f 93       	push	r17
   12adc:	cf 93       	push	r28
   12ade:	df 93       	push	r29
   12ae0:	ec 01       	movw	r28, r24
   12ae2:	8b 01       	movw	r16, r22
   12ae4:	67 2f       	mov	r22, r23
   12ae6:	77 27       	eor	r23, r23
   12ae8:	66 95       	lsr	r22
   12aea:	64 54       	subi	r22, 0x44	; 68
   12aec:	78 4f       	sbci	r23, 0xF8	; 248
   12aee:	4a e0       	ldi	r20, 0x0A	; 10
   12af0:	50 e0       	ldi	r21, 0x00	; 0
   12af2:	0e 94 fa a7 	call	0x14ff4	; 0x14ff4 <_ZN5Print5printEji>
   12af6:	e8 81       	ld	r30, Y
   12af8:	f9 81       	ldd	r31, Y+1	; 0x01
   12afa:	01 90       	ld	r0, Z+
   12afc:	f0 81       	ld	r31, Z
   12afe:	e0 2d       	mov	r30, r0
   12b00:	ce 01       	movw	r24, r28
   12b02:	6d e2       	ldi	r22, 0x2D	; 45
   12b04:	19 95       	eicall
   12b06:	b8 01       	movw	r22, r16
   12b08:	a5 e0       	ldi	r26, 0x05	; 5
   12b0a:	76 95       	lsr	r23
   12b0c:	67 95       	ror	r22
   12b0e:	aa 95       	dec	r26
   12b10:	e1 f7       	brne	.-8      	; 0x12b0a <_ZN10SdBaseFile12printFatDateEP5Printj+0x32>
   12b12:	6f 70       	andi	r22, 0x0F	; 15
   12b14:	ce 01       	movw	r24, r28
   12b16:	0e 94 17 94 	call	0x1282e	; 0x1282e <_ZL7print2uP5Printh>
   12b1a:	e8 81       	ld	r30, Y
   12b1c:	f9 81       	ldd	r31, Y+1	; 0x01
   12b1e:	01 90       	ld	r0, Z+
   12b20:	f0 81       	ld	r31, Z
   12b22:	e0 2d       	mov	r30, r0
   12b24:	ce 01       	movw	r24, r28
   12b26:	6d e2       	ldi	r22, 0x2D	; 45
   12b28:	19 95       	eicall
   12b2a:	60 2f       	mov	r22, r16
   12b2c:	6f 71       	andi	r22, 0x1F	; 31
   12b2e:	ce 01       	movw	r24, r28
   12b30:	0e 94 17 94 	call	0x1282e	; 0x1282e <_ZL7print2uP5Printh>
   12b34:	df 91       	pop	r29
   12b36:	cf 91       	pop	r28
   12b38:	1f 91       	pop	r17
   12b3a:	0f 91       	pop	r16
   12b3c:	08 95       	ret

00012b3e <_ZN10SdBaseFile12printFatTimeEP5Printj>:
   12b3e:	0f 93       	push	r16
   12b40:	1f 93       	push	r17
   12b42:	cf 93       	push	r28
   12b44:	df 93       	push	r29
   12b46:	ec 01       	movw	r28, r24
   12b48:	8b 01       	movw	r16, r22
   12b4a:	61 2f       	mov	r22, r17
   12b4c:	66 95       	lsr	r22
   12b4e:	66 95       	lsr	r22
   12b50:	66 95       	lsr	r22
   12b52:	0e 94 17 94 	call	0x1282e	; 0x1282e <_ZL7print2uP5Printh>
   12b56:	e8 81       	ld	r30, Y
   12b58:	f9 81       	ldd	r31, Y+1	; 0x01
   12b5a:	01 90       	ld	r0, Z+
   12b5c:	f0 81       	ld	r31, Z
   12b5e:	e0 2d       	mov	r30, r0
   12b60:	ce 01       	movw	r24, r28
   12b62:	6a e3       	ldi	r22, 0x3A	; 58
   12b64:	19 95       	eicall
   12b66:	b8 01       	movw	r22, r16
   12b68:	b5 e0       	ldi	r27, 0x05	; 5
   12b6a:	76 95       	lsr	r23
   12b6c:	67 95       	ror	r22
   12b6e:	ba 95       	dec	r27
   12b70:	e1 f7       	brne	.-8      	; 0x12b6a <_ZN10SdBaseFile12printFatTimeEP5Printj+0x2c>
   12b72:	6f 73       	andi	r22, 0x3F	; 63
   12b74:	ce 01       	movw	r24, r28
   12b76:	0e 94 17 94 	call	0x1282e	; 0x1282e <_ZL7print2uP5Printh>
   12b7a:	e8 81       	ld	r30, Y
   12b7c:	f9 81       	ldd	r31, Y+1	; 0x01
   12b7e:	01 90       	ld	r0, Z+
   12b80:	f0 81       	ld	r31, Z
   12b82:	e0 2d       	mov	r30, r0
   12b84:	ce 01       	movw	r24, r28
   12b86:	6a e3       	ldi	r22, 0x3A	; 58
   12b88:	19 95       	eicall
   12b8a:	60 2f       	mov	r22, r16
   12b8c:	6f 71       	andi	r22, 0x1F	; 31
   12b8e:	66 0f       	add	r22, r22
   12b90:	ce 01       	movw	r24, r28
   12b92:	0e 94 17 94 	call	0x1282e	; 0x1282e <_ZL7print2uP5Printh>
   12b96:	df 91       	pop	r29
   12b98:	cf 91       	pop	r28
   12b9a:	1f 91       	pop	r17
   12b9c:	0f 91       	pop	r16
   12b9e:	08 95       	ret

00012ba0 <_ZN10SdBaseFile4readEPvj>:
   12ba0:	2f 92       	push	r2
   12ba2:	3f 92       	push	r3
   12ba4:	4f 92       	push	r4
   12ba6:	5f 92       	push	r5
   12ba8:	6f 92       	push	r6
   12baa:	7f 92       	push	r7
   12bac:	8f 92       	push	r8
   12bae:	9f 92       	push	r9
   12bb0:	af 92       	push	r10
   12bb2:	bf 92       	push	r11
   12bb4:	cf 92       	push	r12
   12bb6:	df 92       	push	r13
   12bb8:	ef 92       	push	r14
   12bba:	ff 92       	push	r15
   12bbc:	0f 93       	push	r16
   12bbe:	1f 93       	push	r17
   12bc0:	cf 93       	push	r28
   12bc2:	df 93       	push	r29
   12bc4:	00 d0       	rcall	.+0      	; 0x12bc6 <_ZN10SdBaseFile4readEPvj+0x26>
   12bc6:	0f 92       	push	r0
   12bc8:	cd b7       	in	r28, 0x3d	; 61
   12bca:	de b7       	in	r29, 0x3e	; 62
   12bcc:	5c 01       	movw	r10, r24
   12bce:	6b 83       	std	Y+3, r22	; 0x03
   12bd0:	79 83       	std	Y+1, r23	; 0x01
   12bd2:	1a 01       	movw	r2, r20
   12bd4:	dc 01       	movw	r26, r24
   12bd6:	13 96       	adiw	r26, 0x03	; 3
   12bd8:	8c 91       	ld	r24, X
   12bda:	13 97       	sbiw	r26, 0x03	; 3
   12bdc:	88 23       	and	r24, r24
   12bde:	09 f4       	brne	.+2      	; 0x12be2 <_ZN10SdBaseFile4readEPvj+0x42>
   12be0:	0e c1       	rjmp	.+540    	; 0x12dfe <_ZN10SdBaseFile4readEPvj+0x25e>
   12be2:	11 96       	adiw	r26, 0x01	; 1
   12be4:	8c 91       	ld	r24, X
   12be6:	11 97       	sbiw	r26, 0x01	; 1
   12be8:	80 ff       	sbrs	r24, 0
   12bea:	09 c1       	rjmp	.+530    	; 0x12dfe <_ZN10SdBaseFile4readEPvj+0x25e>
   12bec:	20 c1       	rjmp	.+576    	; 0x12e2e <_ZN10SdBaseFile4readEPvj+0x28e>
   12bee:	1c 01       	movw	r2, r24
   12bf0:	24 1a       	sub	r2, r20
   12bf2:	35 0a       	sbc	r3, r21
   12bf4:	41 01       	movw	r8, r2
   12bf6:	4b 80       	ldd	r4, Y+3	; 0x03
   12bf8:	59 80       	ldd	r5, Y+1	; 0x01
   12bfa:	f5 01       	movw	r30, r10
   12bfc:	37 96       	adiw	r30, 0x07	; 7
   12bfe:	e9 83       	std	Y+1, r30	; 0x01
   12c00:	fa 83       	std	Y+2, r31	; 0x02
   12c02:	f7 c0       	rjmp	.+494    	; 0x12df2 <_ZN10SdBaseFile4readEPvj+0x252>
   12c04:	f5 01       	movw	r30, r10
   12c06:	83 85       	ldd	r24, Z+11	; 0x0b
   12c08:	94 85       	ldd	r25, Z+12	; 0x0c
   12c0a:	a5 85       	ldd	r26, Z+13	; 0x0d
   12c0c:	b6 85       	ldd	r27, Z+14	; 0x0e
   12c0e:	9c 01       	movw	r18, r24
   12c10:	31 70       	andi	r19, 0x01	; 1
   12c12:	2b 83       	std	Y+3, r18	; 0x03
   12c14:	3c 83       	std	Y+4, r19	; 0x04
   12c16:	c5 80       	ldd	r12, Z+5	; 0x05
   12c18:	d6 80       	ldd	r13, Z+6	; 0x06
   12c1a:	ac 01       	movw	r20, r24
   12c1c:	bd 01       	movw	r22, r26
   12c1e:	09 e0       	ldi	r16, 0x09	; 9
   12c20:	76 95       	lsr	r23
   12c22:	67 95       	ror	r22
   12c24:	57 95       	ror	r21
   12c26:	47 95       	ror	r20
   12c28:	0a 95       	dec	r16
   12c2a:	d1 f7       	brne	.-12     	; 0x12c20 <_ZN10SdBaseFile4readEPvj+0x80>
   12c2c:	f6 01       	movw	r30, r12
   12c2e:	04 81       	ldd	r16, Z+4	; 0x04
   12c30:	01 50       	subi	r16, 0x01	; 1
   12c32:	04 23       	and	r16, r20
   12c34:	f5 01       	movw	r30, r10
   12c36:	23 81       	ldd	r18, Z+3	; 0x03
   12c38:	22 30       	cpi	r18, 0x02	; 2
   12c3a:	61 f4       	brne	.+24     	; 0x12c54 <_ZN10SdBaseFile4readEPvj+0xb4>
   12c3c:	d6 01       	movw	r26, r12
   12c3e:	5a 96       	adiw	r26, 0x1a	; 26
   12c40:	cd 90       	ld	r12, X+
   12c42:	dd 90       	ld	r13, X+
   12c44:	ed 90       	ld	r14, X+
   12c46:	fc 90       	ld	r15, X
   12c48:	5d 97       	sbiw	r26, 0x1d	; 29
   12c4a:	c4 0e       	add	r12, r20
   12c4c:	d5 1e       	adc	r13, r21
   12c4e:	e6 1e       	adc	r14, r22
   12c50:	f7 1e       	adc	r15, r23
   12c52:	32 c0       	rjmp	.+100    	; 0x12cb8 <_ZN10SdBaseFile4readEPvj+0x118>
   12c54:	eb 81       	ldd	r30, Y+3	; 0x03
   12c56:	fc 81       	ldd	r31, Y+4	; 0x04
   12c58:	30 97       	sbiw	r30, 0x00	; 0
   12c5a:	f9 f4       	brne	.+62     	; 0x12c9a <_ZN10SdBaseFile4readEPvj+0xfa>
   12c5c:	00 23       	and	r16, r16
   12c5e:	e9 f4       	brne	.+58     	; 0x12c9a <_ZN10SdBaseFile4readEPvj+0xfa>
   12c60:	00 97       	sbiw	r24, 0x00	; 0
   12c62:	a1 05       	cpc	r26, r1
   12c64:	b1 05       	cpc	r27, r1
   12c66:	51 f4       	brne	.+20     	; 0x12c7c <_ZN10SdBaseFile4readEPvj+0xdc>
   12c68:	f5 01       	movw	r30, r10
   12c6a:	87 89       	ldd	r24, Z+23	; 0x17
   12c6c:	90 8d       	ldd	r25, Z+24	; 0x18
   12c6e:	a1 8d       	ldd	r26, Z+25	; 0x19
   12c70:	b2 8d       	ldd	r27, Z+26	; 0x1a
   12c72:	87 83       	std	Z+7, r24	; 0x07
   12c74:	90 87       	std	Z+8, r25	; 0x08
   12c76:	a1 87       	std	Z+9, r26	; 0x09
   12c78:	b2 87       	std	Z+10, r27	; 0x0a
   12c7a:	0f c0       	rjmp	.+30     	; 0x12c9a <_ZN10SdBaseFile4readEPvj+0xfa>
   12c7c:	d5 01       	movw	r26, r10
   12c7e:	17 96       	adiw	r26, 0x07	; 7
   12c80:	4d 91       	ld	r20, X+
   12c82:	5d 91       	ld	r21, X+
   12c84:	6d 91       	ld	r22, X+
   12c86:	7c 91       	ld	r23, X
   12c88:	1a 97       	sbiw	r26, 0x0a	; 10
   12c8a:	c6 01       	movw	r24, r12
   12c8c:	29 81       	ldd	r18, Y+1	; 0x01
   12c8e:	3a 81       	ldd	r19, Y+2	; 0x02
   12c90:	0e 94 5b a3 	call	0x146b6	; 0x146b6 <_ZN8SdVolume6fatGetEmPm>
   12c94:	88 23       	and	r24, r24
   12c96:	09 f4       	brne	.+2      	; 0x12c9a <_ZN10SdBaseFile4readEPvj+0xfa>
   12c98:	b2 c0       	rjmp	.+356    	; 0x12dfe <_ZN10SdBaseFile4readEPvj+0x25e>
   12c9a:	f5 01       	movw	r30, r10
   12c9c:	47 81       	ldd	r20, Z+7	; 0x07
   12c9e:	50 85       	ldd	r21, Z+8	; 0x08
   12ca0:	61 85       	ldd	r22, Z+9	; 0x09
   12ca2:	72 85       	ldd	r23, Z+10	; 0x0a
   12ca4:	85 81       	ldd	r24, Z+5	; 0x05
   12ca6:	96 81       	ldd	r25, Z+6	; 0x06
   12ca8:	0e 94 38 a3 	call	0x14670	; 0x14670 <_ZNK8SdVolume17clusterStartBlockEm>
   12cac:	6b 01       	movw	r12, r22
   12cae:	7c 01       	movw	r14, r24
   12cb0:	c0 0e       	add	r12, r16
   12cb2:	d1 1c       	adc	r13, r1
   12cb4:	e1 1c       	adc	r14, r1
   12cb6:	f1 1c       	adc	r15, r1
   12cb8:	2b 81       	ldd	r18, Y+3	; 0x03
   12cba:	3c 81       	ldd	r19, Y+4	; 0x04
   12cbc:	21 15       	cp	r18, r1
   12cbe:	31 05       	cpc	r19, r1
   12cc0:	99 f4       	brne	.+38     	; 0x12ce8 <_ZN10SdBaseFile4readEPvj+0x148>
   12cc2:	30 e0       	ldi	r19, 0x00	; 0
   12cc4:	83 16       	cp	r8, r19
   12cc6:	32 e0       	ldi	r19, 0x02	; 2
   12cc8:	93 06       	cpc	r9, r19
   12cca:	70 f0       	brcs	.+28     	; 0x12ce8 <_ZN10SdBaseFile4readEPvj+0x148>
   12ccc:	80 91 cb 25 	lds	r24, 0x25CB
   12cd0:	90 91 cc 25 	lds	r25, 0x25CC
   12cd4:	a0 91 cd 25 	lds	r26, 0x25CD
   12cd8:	b0 91 ce 25 	lds	r27, 0x25CE
   12cdc:	c8 16       	cp	r12, r24
   12cde:	d9 06       	cpc	r13, r25
   12ce0:	ea 06       	cpc	r14, r26
   12ce2:	fb 06       	cpc	r15, r27
   12ce4:	09 f0       	breq	.+2      	; 0x12ce8 <_ZN10SdBaseFile4readEPvj+0x148>
   12ce6:	bc c0       	rjmp	.+376    	; 0x12e60 <_ZN10SdBaseFile4readEPvj+0x2c0>
   12ce8:	c7 01       	movw	r24, r14
   12cea:	b6 01       	movw	r22, r12
   12cec:	40 e0       	ldi	r20, 0x00	; 0
   12cee:	0e 94 e1 a2 	call	0x145c2	; 0x145c2 <_ZN8SdVolume10cacheFetchEmh>
   12cf2:	bc 01       	movw	r22, r24
   12cf4:	00 97       	sbiw	r24, 0x00	; 0
   12cf6:	09 f4       	brne	.+2      	; 0x12cfa <_ZN10SdBaseFile4readEPvj+0x15a>
   12cf8:	82 c0       	rjmp	.+260    	; 0x12dfe <_ZN10SdBaseFile4readEPvj+0x25e>
   12cfa:	80 e0       	ldi	r24, 0x00	; 0
   12cfc:	92 e0       	ldi	r25, 0x02	; 2
   12cfe:	ab 81       	ldd	r26, Y+3	; 0x03
   12d00:	bc 81       	ldd	r27, Y+4	; 0x04
   12d02:	8a 1b       	sub	r24, r26
   12d04:	9b 0b       	sbc	r25, r27
   12d06:	34 01       	movw	r6, r8
   12d08:	88 15       	cp	r24, r8
   12d0a:	99 05       	cpc	r25, r9
   12d0c:	08 f4       	brcc	.+2      	; 0x12d10 <_ZN10SdBaseFile4readEPvj+0x170>
   12d0e:	3c 01       	movw	r6, r24
   12d10:	eb 81       	ldd	r30, Y+3	; 0x03
   12d12:	fc 81       	ldd	r31, Y+4	; 0x04
   12d14:	6e 0f       	add	r22, r30
   12d16:	7f 1f       	adc	r23, r31
   12d18:	c2 01       	movw	r24, r4
   12d1a:	a3 01       	movw	r20, r6
   12d1c:	0e 94 b7 b1 	call	0x1636e	; 0x1636e <memcpy>
   12d20:	54 c0       	rjmp	.+168    	; 0x12dca <_ZN10SdBaseFile4readEPvj+0x22a>
   12d22:	80 91 c4 25 	lds	r24, 0x25C4
   12d26:	90 91 c5 25 	lds	r25, 0x25C5
   12d2a:	b7 01       	movw	r22, r14
   12d2c:	a6 01       	movw	r20, r12
   12d2e:	92 01       	movw	r18, r4
   12d30:	0e 94 78 91 	call	0x122f0	; 0x122f0 <_ZN7Sd2Card9readBlockEmPh>
   12d34:	88 23       	and	r24, r24
   12d36:	09 f4       	brne	.+2      	; 0x12d3a <_ZN10SdBaseFile4readEPvj+0x19a>
   12d38:	62 c0       	rjmp	.+196    	; 0x12dfe <_ZN10SdBaseFile4readEPvj+0x25e>
   12d3a:	61 2c       	mov	r6, r1
   12d3c:	12 e0       	ldi	r17, 0x02	; 2
   12d3e:	71 2e       	mov	r7, r17
   12d40:	44 c0       	rjmp	.+136    	; 0x12dca <_ZN10SdBaseFile4readEPvj+0x22a>
   12d42:	19 2d       	mov	r17, r9
   12d44:	16 95       	lsr	r17
   12d46:	f5 01       	movw	r30, r10
   12d48:	23 81       	ldd	r18, Z+3	; 0x03
   12d4a:	22 30       	cpi	r18, 0x02	; 2
   12d4c:	41 f0       	breq	.+16     	; 0x12d5e <_ZN10SdBaseFile4readEPvj+0x1be>
   12d4e:	25 81       	ldd	r18, Z+5	; 0x05
   12d50:	36 81       	ldd	r19, Z+6	; 0x06
   12d52:	f9 01       	movw	r30, r18
   12d54:	24 81       	ldd	r18, Z+4	; 0x04
   12d56:	20 1b       	sub	r18, r16
   12d58:	21 17       	cp	r18, r17
   12d5a:	08 f4       	brcc	.+2      	; 0x12d5e <_ZN10SdBaseFile4readEPvj+0x1be>
   12d5c:	12 2f       	mov	r17, r18
   12d5e:	c8 16       	cp	r12, r24
   12d60:	d9 06       	cpc	r13, r25
   12d62:	ea 06       	cpc	r14, r26
   12d64:	fb 06       	cpc	r15, r27
   12d66:	68 f0       	brcs	.+26     	; 0x12d82 <_ZN10SdBaseFile4readEPvj+0x1e2>
   12d68:	81 0f       	add	r24, r17
   12d6a:	91 1d       	adc	r25, r1
   12d6c:	a1 1d       	adc	r26, r1
   12d6e:	b1 1d       	adc	r27, r1
   12d70:	c8 16       	cp	r12, r24
   12d72:	d9 06       	cpc	r13, r25
   12d74:	ea 06       	cpc	r14, r26
   12d76:	fb 06       	cpc	r15, r27
   12d78:	20 f4       	brcc	.+8      	; 0x12d82 <_ZN10SdBaseFile4readEPvj+0x1e2>
   12d7a:	0e 94 9a a2 	call	0x14534	; 0x14534 <_ZN8SdVolume9cacheSyncEv>
   12d7e:	88 23       	and	r24, r24
   12d80:	f1 f1       	breq	.+124    	; 0x12dfe <_ZN10SdBaseFile4readEPvj+0x25e>
   12d82:	80 91 c4 25 	lds	r24, 0x25C4
   12d86:	90 91 c5 25 	lds	r25, 0x25C5
   12d8a:	b7 01       	movw	r22, r14
   12d8c:	a6 01       	movw	r20, r12
   12d8e:	0e 94 55 91 	call	0x122aa	; 0x122aa <_ZN7Sd2Card9readStartEm>
   12d92:	88 23       	and	r24, r24
   12d94:	a1 f1       	breq	.+104    	; 0x12dfe <_ZN10SdBaseFile4readEPvj+0x25e>
   12d96:	62 01       	movw	r12, r4
   12d98:	00 e0       	ldi	r16, 0x00	; 0
   12d9a:	0a c0       	rjmp	.+20     	; 0x12db0 <_ZN10SdBaseFile4readEPvj+0x210>
   12d9c:	b6 01       	movw	r22, r12
   12d9e:	0e 94 8c 90 	call	0x12118	; 0x12118 <_ZN7Sd2Card8readDataEPh>
   12da2:	20 e0       	ldi	r18, 0x00	; 0
   12da4:	32 e0       	ldi	r19, 0x02	; 2
   12da6:	c2 0e       	add	r12, r18
   12da8:	d3 1e       	adc	r13, r19
   12daa:	88 23       	and	r24, r24
   12dac:	41 f1       	breq	.+80     	; 0x12dfe <_ZN10SdBaseFile4readEPvj+0x25e>
   12dae:	0f 5f       	subi	r16, 0xFF	; 255
   12db0:	80 91 c4 25 	lds	r24, 0x25C4
   12db4:	90 91 c5 25 	lds	r25, 0x25C5
   12db8:	01 17       	cp	r16, r17
   12dba:	81 f7       	brne	.-32     	; 0x12d9c <_ZN10SdBaseFile4readEPvj+0x1fc>
   12dbc:	0e 94 39 91 	call	0x12272	; 0x12272 <_ZN7Sd2Card8readStopEv>
   12dc0:	88 23       	and	r24, r24
   12dc2:	e9 f0       	breq	.+58     	; 0x12dfe <_ZN10SdBaseFile4readEPvj+0x25e>
   12dc4:	70 2e       	mov	r7, r16
   12dc6:	77 0c       	add	r7, r7
   12dc8:	66 24       	eor	r6, r6
   12dca:	46 0c       	add	r4, r6
   12dcc:	57 1c       	adc	r5, r7
   12dce:	a3 01       	movw	r20, r6
   12dd0:	60 e0       	ldi	r22, 0x00	; 0
   12dd2:	70 e0       	ldi	r23, 0x00	; 0
   12dd4:	f5 01       	movw	r30, r10
   12dd6:	83 85       	ldd	r24, Z+11	; 0x0b
   12dd8:	94 85       	ldd	r25, Z+12	; 0x0c
   12dda:	a5 85       	ldd	r26, Z+13	; 0x0d
   12ddc:	b6 85       	ldd	r27, Z+14	; 0x0e
   12dde:	84 0f       	add	r24, r20
   12de0:	95 1f       	adc	r25, r21
   12de2:	a6 1f       	adc	r26, r22
   12de4:	b7 1f       	adc	r27, r23
   12de6:	83 87       	std	Z+11, r24	; 0x0b
   12de8:	94 87       	std	Z+12, r25	; 0x0c
   12dea:	a5 87       	std	Z+13, r26	; 0x0d
   12dec:	b6 87       	std	Z+14, r27	; 0x0e
   12dee:	86 18       	sub	r8, r6
   12df0:	97 08       	sbc	r9, r7
   12df2:	81 14       	cp	r8, r1
   12df4:	91 04       	cpc	r9, r1
   12df6:	09 f0       	breq	.+2      	; 0x12dfa <_ZN10SdBaseFile4readEPvj+0x25a>
   12df8:	05 cf       	rjmp	.-502    	; 0x12c04 <_ZN10SdBaseFile4readEPvj+0x64>
   12dfa:	c1 01       	movw	r24, r2
   12dfc:	02 c0       	rjmp	.+4      	; 0x12e02 <_ZN10SdBaseFile4readEPvj+0x262>
   12dfe:	8f ef       	ldi	r24, 0xFF	; 255
   12e00:	9f ef       	ldi	r25, 0xFF	; 255
   12e02:	24 96       	adiw	r28, 0x04	; 4
   12e04:	cd bf       	out	0x3d, r28	; 61
   12e06:	de bf       	out	0x3e, r29	; 62
   12e08:	df 91       	pop	r29
   12e0a:	cf 91       	pop	r28
   12e0c:	1f 91       	pop	r17
   12e0e:	0f 91       	pop	r16
   12e10:	ff 90       	pop	r15
   12e12:	ef 90       	pop	r14
   12e14:	df 90       	pop	r13
   12e16:	cf 90       	pop	r12
   12e18:	bf 90       	pop	r11
   12e1a:	af 90       	pop	r10
   12e1c:	9f 90       	pop	r9
   12e1e:	8f 90       	pop	r8
   12e20:	7f 90       	pop	r7
   12e22:	6f 90       	pop	r6
   12e24:	5f 90       	pop	r5
   12e26:	4f 90       	pop	r4
   12e28:	3f 90       	pop	r3
   12e2a:	2f 90       	pop	r2
   12e2c:	08 95       	ret
   12e2e:	f5 01       	movw	r30, r10
   12e30:	83 89       	ldd	r24, Z+19	; 0x13
   12e32:	94 89       	ldd	r25, Z+20	; 0x14
   12e34:	a5 89       	ldd	r26, Z+21	; 0x15
   12e36:	b6 89       	ldd	r27, Z+22	; 0x16
   12e38:	43 85       	ldd	r20, Z+11	; 0x0b
   12e3a:	54 85       	ldd	r21, Z+12	; 0x0c
   12e3c:	65 85       	ldd	r22, Z+13	; 0x0d
   12e3e:	76 85       	ldd	r23, Z+14	; 0x0e
   12e40:	81 01       	movw	r16, r2
   12e42:	20 e0       	ldi	r18, 0x00	; 0
   12e44:	30 e0       	ldi	r19, 0x00	; 0
   12e46:	6c 01       	movw	r12, r24
   12e48:	7d 01       	movw	r14, r26
   12e4a:	c4 1a       	sub	r12, r20
   12e4c:	d5 0a       	sbc	r13, r21
   12e4e:	e6 0a       	sbc	r14, r22
   12e50:	f7 0a       	sbc	r15, r23
   12e52:	0c 15       	cp	r16, r12
   12e54:	1d 05       	cpc	r17, r13
   12e56:	2e 05       	cpc	r18, r14
   12e58:	3f 05       	cpc	r19, r15
   12e5a:	08 f0       	brcs	.+2      	; 0x12e5e <_ZN10SdBaseFile4readEPvj+0x2be>
   12e5c:	c8 ce       	rjmp	.-624    	; 0x12bee <_ZN10SdBaseFile4readEPvj+0x4e>
   12e5e:	ca ce       	rjmp	.-620    	; 0x12bf4 <_ZN10SdBaseFile4readEPvj+0x54>
   12e60:	f0 e0       	ldi	r31, 0x00	; 0
   12e62:	8f 16       	cp	r8, r31
   12e64:	f4 e0       	ldi	r31, 0x04	; 4
   12e66:	9f 06       	cpc	r9, r31
   12e68:	08 f0       	brcs	.+2      	; 0x12e6c <_ZN10SdBaseFile4readEPvj+0x2cc>
   12e6a:	6b cf       	rjmp	.-298    	; 0x12d42 <_ZN10SdBaseFile4readEPvj+0x1a2>
   12e6c:	5a cf       	rjmp	.-332    	; 0x12d22 <_ZN10SdBaseFile4readEPvj+0x182>

00012e6e <_ZN10SdBaseFile4readEv>:
   12e6e:	cf 93       	push	r28
   12e70:	df 93       	push	r29
   12e72:	0f 92       	push	r0
   12e74:	cd b7       	in	r28, 0x3d	; 61
   12e76:	de b7       	in	r29, 0x3e	; 62
   12e78:	be 01       	movw	r22, r28
   12e7a:	6f 5f       	subi	r22, 0xFF	; 255
   12e7c:	7f 4f       	sbci	r23, 0xFF	; 255
   12e7e:	41 e0       	ldi	r20, 0x01	; 1
   12e80:	50 e0       	ldi	r21, 0x00	; 0
   12e82:	0e 94 d0 95 	call	0x12ba0	; 0x12ba0 <_ZN10SdBaseFile4readEPvj>
   12e86:	81 30       	cpi	r24, 0x01	; 1
   12e88:	91 05       	cpc	r25, r1
   12e8a:	19 f4       	brne	.+6      	; 0x12e92 <_ZN10SdBaseFile4readEv+0x24>
   12e8c:	89 81       	ldd	r24, Y+1	; 0x01
   12e8e:	90 e0       	ldi	r25, 0x00	; 0
   12e90:	02 c0       	rjmp	.+4      	; 0x12e96 <_ZN10SdBaseFile4readEv+0x28>
   12e92:	8f ef       	ldi	r24, 0xFF	; 255
   12e94:	9f ef       	ldi	r25, 0xFF	; 255
   12e96:	0f 90       	pop	r0
   12e98:	df 91       	pop	r29
   12e9a:	cf 91       	pop	r28
   12e9c:	08 95       	ret

00012e9e <_ZN10SdBaseFile11lsPrintNextEP5Printhh>:
   12e9e:	bf 92       	push	r11
   12ea0:	cf 92       	push	r12
   12ea2:	df 92       	push	r13
   12ea4:	ef 92       	push	r14
   12ea6:	ff 92       	push	r15
   12ea8:	0f 93       	push	r16
   12eaa:	1f 93       	push	r17
   12eac:	cf 93       	push	r28
   12eae:	df 93       	push	r29
   12eb0:	cd b7       	in	r28, 0x3d	; 61
   12eb2:	de b7       	in	r29, 0x3e	; 62
   12eb4:	a0 97       	sbiw	r28, 0x20	; 32
   12eb6:	cd bf       	out	0x3d, r28	; 61
   12eb8:	de bf       	out	0x3e, r29	; 62
   12eba:	8c 01       	movw	r16, r24
   12ebc:	7b 01       	movw	r14, r22
   12ebe:	b4 2e       	mov	r11, r20
   12ec0:	c2 2e       	mov	r12, r18
   12ec2:	c8 01       	movw	r24, r16
   12ec4:	be 01       	movw	r22, r28
   12ec6:	6f 5f       	subi	r22, 0xFF	; 255
   12ec8:	7f 4f       	sbci	r23, 0xFF	; 255
   12eca:	40 e2       	ldi	r20, 0x20	; 32
   12ecc:	50 e0       	ldi	r21, 0x00	; 0
   12ece:	0e 94 d0 95 	call	0x12ba0	; 0x12ba0 <_ZN10SdBaseFile4readEPvj>
   12ed2:	80 32       	cpi	r24, 0x20	; 32
   12ed4:	91 05       	cpc	r25, r1
   12ed6:	09 f0       	breq	.+2      	; 0x12eda <_ZN10SdBaseFile11lsPrintNextEP5Printhh+0x3c>
   12ed8:	a1 c0       	rjmp	.+322    	; 0x1301c <_ZN10SdBaseFile11lsPrintNextEP5Printhh+0x17e>
   12eda:	89 81       	ldd	r24, Y+1	; 0x01
   12edc:	88 23       	and	r24, r24
   12ede:	09 f4       	brne	.+2      	; 0x12ee2 <_ZN10SdBaseFile11lsPrintNextEP5Printhh+0x44>
   12ee0:	9d c0       	rjmp	.+314    	; 0x1301c <_ZN10SdBaseFile11lsPrintNextEP5Printhh+0x17e>
   12ee2:	85 3e       	cpi	r24, 0xE5	; 229
   12ee4:	71 f3       	breq	.-36     	; 0x12ec2 <_ZN10SdBaseFile11lsPrintNextEP5Printhh+0x24>
   12ee6:	8e 32       	cpi	r24, 0x2E	; 46
   12ee8:	61 f3       	breq	.-40     	; 0x12ec2 <_ZN10SdBaseFile11lsPrintNextEP5Printhh+0x24>
   12eea:	8c 85       	ldd	r24, Y+12	; 0x0c
   12eec:	83 ff       	sbrs	r24, 3
   12eee:	0c c0       	rjmp	.+24     	; 0x12f08 <_ZN10SdBaseFile11lsPrintNextEP5Printhh+0x6a>
   12ef0:	e8 cf       	rjmp	.-48     	; 0x12ec2 <_ZN10SdBaseFile11lsPrintNextEP5Printhh+0x24>
   12ef2:	d7 01       	movw	r26, r14
   12ef4:	ed 91       	ld	r30, X+
   12ef6:	fc 91       	ld	r31, X
   12ef8:	01 90       	ld	r0, Z+
   12efa:	f0 81       	ld	r31, Z
   12efc:	e0 2d       	mov	r30, r0
   12efe:	c7 01       	movw	r24, r14
   12f00:	60 e2       	ldi	r22, 0x20	; 32
   12f02:	19 95       	eicall
   12f04:	1f 5f       	subi	r17, 0xFF	; 255
   12f06:	01 c0       	rjmp	.+2      	; 0x12f0a <_ZN10SdBaseFile11lsPrintNextEP5Printhh+0x6c>
   12f08:	10 e0       	ldi	r17, 0x00	; 0
   12f0a:	1c 15       	cp	r17, r12
   12f0c:	91 f7       	brne	.-28     	; 0x12ef2 <_ZN10SdBaseFile11lsPrintNextEP5Printhh+0x54>
   12f0e:	6e 01       	movw	r12, r28
   12f10:	08 94       	sec
   12f12:	c1 1c       	adc	r12, r1
   12f14:	d1 1c       	adc	r13, r1
   12f16:	00 e0       	ldi	r16, 0x00	; 0
   12f18:	10 e0       	ldi	r17, 0x00	; 0
   12f1a:	f6 01       	movw	r30, r12
   12f1c:	80 81       	ld	r24, Z
   12f1e:	80 32       	cpi	r24, 0x20	; 32
   12f20:	b9 f0       	breq	.+46     	; 0x12f50 <_ZN10SdBaseFile11lsPrintNextEP5Printhh+0xb2>
   12f22:	08 30       	cpi	r16, 0x08	; 8
   12f24:	51 f4       	brne	.+20     	; 0x12f3a <_ZN10SdBaseFile11lsPrintNextEP5Printhh+0x9c>
   12f26:	d7 01       	movw	r26, r14
   12f28:	ed 91       	ld	r30, X+
   12f2a:	fc 91       	ld	r31, X
   12f2c:	01 90       	ld	r0, Z+
   12f2e:	f0 81       	ld	r31, Z
   12f30:	e0 2d       	mov	r30, r0
   12f32:	c7 01       	movw	r24, r14
   12f34:	6e e2       	ldi	r22, 0x2E	; 46
   12f36:	19 95       	eicall
   12f38:	1f 5f       	subi	r17, 0xFF	; 255
   12f3a:	d7 01       	movw	r26, r14
   12f3c:	ed 91       	ld	r30, X+
   12f3e:	fc 91       	ld	r31, X
   12f40:	01 90       	ld	r0, Z+
   12f42:	f0 81       	ld	r31, Z
   12f44:	e0 2d       	mov	r30, r0
   12f46:	c7 01       	movw	r24, r14
   12f48:	d6 01       	movw	r26, r12
   12f4a:	6c 91       	ld	r22, X
   12f4c:	19 95       	eicall
   12f4e:	1f 5f       	subi	r17, 0xFF	; 255
   12f50:	0f 5f       	subi	r16, 0xFF	; 255
   12f52:	08 94       	sec
   12f54:	c1 1c       	adc	r12, r1
   12f56:	d1 1c       	adc	r13, r1
   12f58:	0b 30       	cpi	r16, 0x0B	; 11
   12f5a:	f9 f6       	brne	.-66     	; 0x12f1a <_ZN10SdBaseFile11lsPrintNextEP5Printhh+0x7c>
   12f5c:	8c 85       	ldd	r24, Y+12	; 0x0c
   12f5e:	88 71       	andi	r24, 0x18	; 24
   12f60:	80 31       	cpi	r24, 0x10	; 16
   12f62:	51 f4       	brne	.+20     	; 0x12f78 <_ZN10SdBaseFile11lsPrintNextEP5Printhh+0xda>
   12f64:	d7 01       	movw	r26, r14
   12f66:	ed 91       	ld	r30, X+
   12f68:	fc 91       	ld	r31, X
   12f6a:	01 90       	ld	r0, Z+
   12f6c:	f0 81       	ld	r31, Z
   12f6e:	e0 2d       	mov	r30, r0
   12f70:	c7 01       	movw	r24, r14
   12f72:	6f e2       	ldi	r22, 0x2F	; 47
   12f74:	19 95       	eicall
   12f76:	1f 5f       	subi	r17, 0xFF	; 255
   12f78:	cb 2c       	mov	r12, r11
   12f7a:	dd 24       	eor	r13, r13
   12f7c:	c6 01       	movw	r24, r12
   12f7e:	83 70       	andi	r24, 0x03	; 3
   12f80:	90 70       	andi	r25, 0x00	; 0
   12f82:	00 97       	sbiw	r24, 0x00	; 0
   12f84:	69 f0       	breq	.+26     	; 0x12fa0 <_ZN10SdBaseFile11lsPrintNextEP5Printhh+0x102>
   12f86:	0a c0       	rjmp	.+20     	; 0x12f9c <_ZN10SdBaseFile11lsPrintNextEP5Printhh+0xfe>
   12f88:	d7 01       	movw	r26, r14
   12f8a:	ed 91       	ld	r30, X+
   12f8c:	fc 91       	ld	r31, X
   12f8e:	01 90       	ld	r0, Z+
   12f90:	f0 81       	ld	r31, Z
   12f92:	e0 2d       	mov	r30, r0
   12f94:	c7 01       	movw	r24, r14
   12f96:	60 e2       	ldi	r22, 0x20	; 32
   12f98:	19 95       	eicall
   12f9a:	1f 5f       	subi	r17, 0xFF	; 255
   12f9c:	1e 30       	cpi	r17, 0x0E	; 14
   12f9e:	a0 f3       	brcs	.-24     	; 0x12f88 <_ZN10SdBaseFile11lsPrintNextEP5Printhh+0xea>
   12fa0:	c0 fe       	sbrs	r12, 0
   12fa2:	1c c0       	rjmp	.+56     	; 0x12fdc <_ZN10SdBaseFile11lsPrintNextEP5Printhh+0x13e>
   12fa4:	d7 01       	movw	r26, r14
   12fa6:	ed 91       	ld	r30, X+
   12fa8:	fc 91       	ld	r31, X
   12faa:	01 90       	ld	r0, Z+
   12fac:	f0 81       	ld	r31, Z
   12fae:	e0 2d       	mov	r30, r0
   12fb0:	c7 01       	movw	r24, r14
   12fb2:	60 e2       	ldi	r22, 0x20	; 32
   12fb4:	19 95       	eicall
   12fb6:	69 8d       	ldd	r22, Y+25	; 0x19
   12fb8:	7a 8d       	ldd	r23, Y+26	; 0x1a
   12fba:	c7 01       	movw	r24, r14
   12fbc:	0e 94 6c 95 	call	0x12ad8	; 0x12ad8 <_ZN10SdBaseFile12printFatDateEP5Printj>
   12fc0:	d7 01       	movw	r26, r14
   12fc2:	ed 91       	ld	r30, X+
   12fc4:	fc 91       	ld	r31, X
   12fc6:	01 90       	ld	r0, Z+
   12fc8:	f0 81       	ld	r31, Z
   12fca:	e0 2d       	mov	r30, r0
   12fcc:	c7 01       	movw	r24, r14
   12fce:	60 e2       	ldi	r22, 0x20	; 32
   12fd0:	19 95       	eicall
   12fd2:	6f 89       	ldd	r22, Y+23	; 0x17
   12fd4:	78 8d       	ldd	r23, Y+24	; 0x18
   12fd6:	c7 01       	movw	r24, r14
   12fd8:	0e 94 9f 95 	call	0x12b3e	; 0x12b3e <_ZN10SdBaseFile12printFatTimeEP5Printj>
   12fdc:	8c 85       	ldd	r24, Y+12	; 0x0c
   12fde:	88 71       	andi	r24, 0x18	; 24
   12fe0:	80 31       	cpi	r24, 0x10	; 16
   12fe2:	a1 f0       	breq	.+40     	; 0x1300c <_ZN10SdBaseFile11lsPrintNextEP5Printhh+0x16e>
   12fe4:	c1 fe       	sbrs	r12, 1
   12fe6:	12 c0       	rjmp	.+36     	; 0x1300c <_ZN10SdBaseFile11lsPrintNextEP5Printhh+0x16e>
   12fe8:	d7 01       	movw	r26, r14
   12fea:	ed 91       	ld	r30, X+
   12fec:	fc 91       	ld	r31, X
   12fee:	01 90       	ld	r0, Z+
   12ff0:	f0 81       	ld	r31, Z
   12ff2:	e0 2d       	mov	r30, r0
   12ff4:	c7 01       	movw	r24, r14
   12ff6:	60 e2       	ldi	r22, 0x20	; 32
   12ff8:	19 95       	eicall
   12ffa:	4d 8d       	ldd	r20, Y+29	; 0x1d
   12ffc:	5e 8d       	ldd	r21, Y+30	; 0x1e
   12ffe:	6f 8d       	ldd	r22, Y+31	; 0x1f
   13000:	78 a1       	lds	r23, 0x48
   13002:	c7 01       	movw	r24, r14
   13004:	2a e0       	ldi	r18, 0x0A	; 10
   13006:	30 e0       	ldi	r19, 0x00	; 0
   13008:	0e 94 eb a7 	call	0x14fd6	; 0x14fd6 <_ZN5Print5printEmi>
   1300c:	c7 01       	movw	r24, r14
   1300e:	0e 94 7b a7 	call	0x14ef6	; 0x14ef6 <_ZN5Print7printlnEv>
   13012:	8c 85       	ldd	r24, Y+12	; 0x0c
   13014:	88 71       	andi	r24, 0x18	; 24
   13016:	21 f4       	brne	.+8      	; 0x13020 <_ZN10SdBaseFile11lsPrintNextEP5Printhh+0x182>
   13018:	81 e0       	ldi	r24, 0x01	; 1
   1301a:	03 c0       	rjmp	.+6      	; 0x13022 <_ZN10SdBaseFile11lsPrintNextEP5Printhh+0x184>
   1301c:	80 e0       	ldi	r24, 0x00	; 0
   1301e:	01 c0       	rjmp	.+2      	; 0x13022 <_ZN10SdBaseFile11lsPrintNextEP5Printhh+0x184>
   13020:	82 e0       	ldi	r24, 0x02	; 2
   13022:	a0 96       	adiw	r28, 0x20	; 32
   13024:	cd bf       	out	0x3d, r28	; 61
   13026:	de bf       	out	0x3e, r29	; 62
   13028:	df 91       	pop	r29
   1302a:	cf 91       	pop	r28
   1302c:	1f 91       	pop	r17
   1302e:	0f 91       	pop	r16
   13030:	ff 90       	pop	r15
   13032:	ef 90       	pop	r14
   13034:	df 90       	pop	r13
   13036:	cf 90       	pop	r12
   13038:	bf 90       	pop	r11
   1303a:	08 95       	ret

0001303c <_ZN10SdBaseFile12readDirCacheEv>:
   1303c:	cf 92       	push	r12
   1303e:	df 92       	push	r13
   13040:	ef 92       	push	r14
   13042:	ff 92       	push	r15
   13044:	cf 93       	push	r28
   13046:	df 93       	push	r29
   13048:	ec 01       	movw	r28, r24
   1304a:	8b 81       	ldd	r24, Y+3	; 0x03
   1304c:	82 30       	cpi	r24, 0x02	; 2
   1304e:	38 f1       	brcs	.+78     	; 0x1309e <_ZN10SdBaseFile12readDirCacheEv+0x62>
   13050:	cb 84       	ldd	r12, Y+11	; 0x0b
   13052:	dc 84       	ldd	r13, Y+12	; 0x0c
   13054:	ed 84       	ldd	r14, Y+13	; 0x0d
   13056:	fe 84       	ldd	r15, Y+14	; 0x0e
   13058:	ce 01       	movw	r24, r28
   1305a:	0e 94 37 97 	call	0x12e6e	; 0x12e6e <_ZN10SdBaseFile4readEv>
   1305e:	97 fd       	sbrc	r25, 7
   13060:	1e c0       	rjmp	.+60     	; 0x1309e <_ZN10SdBaseFile12readDirCacheEv+0x62>
   13062:	8b 85       	ldd	r24, Y+11	; 0x0b
   13064:	9c 85       	ldd	r25, Y+12	; 0x0c
   13066:	ad 85       	ldd	r26, Y+13	; 0x0d
   13068:	be 85       	ldd	r27, Y+14	; 0x0e
   1306a:	4f 96       	adiw	r24, 0x1f	; 31
   1306c:	a1 1d       	adc	r26, r1
   1306e:	b1 1d       	adc	r27, r1
   13070:	8b 87       	std	Y+11, r24	; 0x0b
   13072:	9c 87       	std	Y+12, r25	; 0x0c
   13074:	ad 87       	std	Y+13, r26	; 0x0d
   13076:	be 87       	std	Y+14, r27	; 0x0e
   13078:	d7 01       	movw	r26, r14
   1307a:	c6 01       	movw	r24, r12
   1307c:	25 e0       	ldi	r18, 0x05	; 5
   1307e:	b6 95       	lsr	r27
   13080:	a7 95       	ror	r26
   13082:	97 95       	ror	r25
   13084:	87 95       	ror	r24
   13086:	2a 95       	dec	r18
   13088:	d1 f7       	brne	.-12     	; 0x1307e <_ZN10SdBaseFile12readDirCacheEv+0x42>
   1308a:	8f 70       	andi	r24, 0x0F	; 15
   1308c:	90 e0       	ldi	r25, 0x00	; 0
   1308e:	35 e0       	ldi	r19, 0x05	; 5
   13090:	88 0f       	add	r24, r24
   13092:	99 1f       	adc	r25, r25
   13094:	3a 95       	dec	r19
   13096:	e1 f7       	brne	.-8      	; 0x13090 <_ZN10SdBaseFile12readDirCacheEv+0x54>
   13098:	81 53       	subi	r24, 0x31	; 49
   1309a:	9a 4d       	sbci	r25, 0xDA	; 218
   1309c:	02 c0       	rjmp	.+4      	; 0x130a2 <_ZN10SdBaseFile12readDirCacheEv+0x66>
   1309e:	80 e0       	ldi	r24, 0x00	; 0
   130a0:	90 e0       	ldi	r25, 0x00	; 0
   130a2:	df 91       	pop	r29
   130a4:	cf 91       	pop	r28
   130a6:	ff 90       	pop	r15
   130a8:	ef 90       	pop	r14
   130aa:	df 90       	pop	r13
   130ac:	cf 90       	pop	r12
   130ae:	08 95       	ret

000130b0 <_ZN10SdBaseFile7seekSetEm>:
   130b0:	8f 92       	push	r8
   130b2:	9f 92       	push	r9
   130b4:	af 92       	push	r10
   130b6:	bf 92       	push	r11
   130b8:	cf 92       	push	r12
   130ba:	df 92       	push	r13
   130bc:	ef 92       	push	r14
   130be:	ff 92       	push	r15
   130c0:	0f 93       	push	r16
   130c2:	1f 93       	push	r17
   130c4:	cf 93       	push	r28
   130c6:	df 93       	push	r29
   130c8:	ec 01       	movw	r28, r24
   130ca:	4a 01       	movw	r8, r20
   130cc:	5b 01       	movw	r10, r22
   130ce:	2b 81       	ldd	r18, Y+3	; 0x03
   130d0:	22 23       	and	r18, r18
   130d2:	09 f4       	brne	.+2      	; 0x130d6 <_ZN10SdBaseFile7seekSetEm+0x26>
   130d4:	75 c0       	rjmp	.+234    	; 0x131c0 <_ZN10SdBaseFile7seekSetEm+0x110>
   130d6:	8b 89       	ldd	r24, Y+19	; 0x13
   130d8:	9c 89       	ldd	r25, Y+20	; 0x14
   130da:	ad 89       	ldd	r26, Y+21	; 0x15
   130dc:	be 89       	ldd	r27, Y+22	; 0x16
   130de:	84 17       	cp	r24, r20
   130e0:	95 07       	cpc	r25, r21
   130e2:	a6 07       	cpc	r26, r22
   130e4:	b7 07       	cpc	r27, r23
   130e6:	08 f4       	brcc	.+2      	; 0x130ea <_ZN10SdBaseFile7seekSetEm+0x3a>
   130e8:	6b c0       	rjmp	.+214    	; 0x131c0 <_ZN10SdBaseFile7seekSetEm+0x110>
   130ea:	78 c0       	rjmp	.+240    	; 0x131dc <_ZN10SdBaseFile7seekSetEm+0x12c>
   130ec:	81 14       	cp	r8, r1
   130ee:	91 04       	cpc	r9, r1
   130f0:	a1 04       	cpc	r10, r1
   130f2:	b1 04       	cpc	r11, r1
   130f4:	49 f4       	brne	.+18     	; 0x13108 <_ZN10SdBaseFile7seekSetEm+0x58>
   130f6:	1f 82       	std	Y+7, r1	; 0x07
   130f8:	18 86       	std	Y+8, r1	; 0x08
   130fa:	19 86       	std	Y+9, r1	; 0x09
   130fc:	1a 86       	std	Y+10, r1	; 0x0a
   130fe:	1b 86       	std	Y+11, r1	; 0x0b
   13100:	1c 86       	std	Y+12, r1	; 0x0c
   13102:	1d 86       	std	Y+13, r1	; 0x0d
   13104:	1e 86       	std	Y+14, r1	; 0x0e
   13106:	5a c0       	rjmp	.+180    	; 0x131bc <_ZN10SdBaseFile7seekSetEm+0x10c>
   13108:	4b 85       	ldd	r20, Y+11	; 0x0b
   1310a:	5c 85       	ldd	r21, Y+12	; 0x0c
   1310c:	6d 85       	ldd	r22, Y+13	; 0x0d
   1310e:	7e 85       	ldd	r23, Y+14	; 0x0e
   13110:	ed 81       	ldd	r30, Y+5	; 0x05
   13112:	fe 81       	ldd	r31, Y+6	; 0x06
   13114:	25 85       	ldd	r18, Z+13	; 0x0d
   13116:	30 e0       	ldi	r19, 0x00	; 0
   13118:	27 5f       	subi	r18, 0xF7	; 247
   1311a:	3f 4f       	sbci	r19, 0xFF	; 255
   1311c:	db 01       	movw	r26, r22
   1311e:	ca 01       	movw	r24, r20
   13120:	01 97       	sbiw	r24, 0x01	; 1
   13122:	a1 09       	sbc	r26, r1
   13124:	b1 09       	sbc	r27, r1
   13126:	02 2e       	mov	r0, r18
   13128:	04 c0       	rjmp	.+8      	; 0x13132 <_ZN10SdBaseFile7seekSetEm+0x82>
   1312a:	b6 95       	lsr	r27
   1312c:	a7 95       	ror	r26
   1312e:	97 95       	ror	r25
   13130:	87 95       	ror	r24
   13132:	0a 94       	dec	r0
   13134:	d2 f7       	brpl	.-12     	; 0x1312a <_ZN10SdBaseFile7seekSetEm+0x7a>
   13136:	75 01       	movw	r14, r10
   13138:	64 01       	movw	r12, r8
   1313a:	08 94       	sec
   1313c:	c1 08       	sbc	r12, r1
   1313e:	d1 08       	sbc	r13, r1
   13140:	e1 08       	sbc	r14, r1
   13142:	f1 08       	sbc	r15, r1
   13144:	04 c0       	rjmp	.+8      	; 0x1314e <_ZN10SdBaseFile7seekSetEm+0x9e>
   13146:	f6 94       	lsr	r15
   13148:	e7 94       	ror	r14
   1314a:	d7 94       	ror	r13
   1314c:	c7 94       	ror	r12
   1314e:	2a 95       	dec	r18
   13150:	d2 f7       	brpl	.-12     	; 0x13146 <_ZN10SdBaseFile7seekSetEm+0x96>
   13152:	c8 16       	cp	r12, r24
   13154:	d9 06       	cpc	r13, r25
   13156:	ea 06       	cpc	r14, r26
   13158:	fb 06       	cpc	r15, r27
   1315a:	28 f0       	brcs	.+10     	; 0x13166 <_ZN10SdBaseFile7seekSetEm+0xb6>
   1315c:	41 15       	cp	r20, r1
   1315e:	51 05       	cpc	r21, r1
   13160:	61 05       	cpc	r22, r1
   13162:	71 05       	cpc	r23, r1
   13164:	49 f4       	brne	.+18     	; 0x13178 <_ZN10SdBaseFile7seekSetEm+0xc8>
   13166:	8f 89       	ldd	r24, Y+23	; 0x17
   13168:	98 8d       	ldd	r25, Y+24	; 0x18
   1316a:	a9 8d       	ldd	r26, Y+25	; 0x19
   1316c:	ba 8d       	ldd	r27, Y+26	; 0x1a
   1316e:	8f 83       	std	Y+7, r24	; 0x07
   13170:	98 87       	std	Y+8, r25	; 0x08
   13172:	a9 87       	std	Y+9, r26	; 0x09
   13174:	ba 87       	std	Y+10, r27	; 0x0a
   13176:	16 c0       	rjmp	.+44     	; 0x131a4 <_ZN10SdBaseFile7seekSetEm+0xf4>
   13178:	c8 1a       	sub	r12, r24
   1317a:	d9 0a       	sbc	r13, r25
   1317c:	ea 0a       	sbc	r14, r26
   1317e:	fb 0a       	sbc	r15, r27
   13180:	11 c0       	rjmp	.+34     	; 0x131a4 <_ZN10SdBaseFile7seekSetEm+0xf4>
   13182:	4f 81       	ldd	r20, Y+7	; 0x07
   13184:	58 85       	ldd	r21, Y+8	; 0x08
   13186:	69 85       	ldd	r22, Y+9	; 0x09
   13188:	7a 85       	ldd	r23, Y+10	; 0x0a
   1318a:	8d 81       	ldd	r24, Y+5	; 0x05
   1318c:	9e 81       	ldd	r25, Y+6	; 0x06
   1318e:	98 01       	movw	r18, r16
   13190:	0e 94 5b a3 	call	0x146b6	; 0x146b6 <_ZN8SdVolume6fatGetEmPm>
   13194:	08 94       	sec
   13196:	c1 08       	sbc	r12, r1
   13198:	d1 08       	sbc	r13, r1
   1319a:	e1 08       	sbc	r14, r1
   1319c:	f1 08       	sbc	r15, r1
   1319e:	88 23       	and	r24, r24
   131a0:	21 f4       	brne	.+8      	; 0x131aa <_ZN10SdBaseFile7seekSetEm+0xfa>
   131a2:	0e c0       	rjmp	.+28     	; 0x131c0 <_ZN10SdBaseFile7seekSetEm+0x110>
   131a4:	8e 01       	movw	r16, r28
   131a6:	09 5f       	subi	r16, 0xF9	; 249
   131a8:	1f 4f       	sbci	r17, 0xFF	; 255
   131aa:	c1 14       	cp	r12, r1
   131ac:	d1 04       	cpc	r13, r1
   131ae:	e1 04       	cpc	r14, r1
   131b0:	f1 04       	cpc	r15, r1
   131b2:	39 f7       	brne	.-50     	; 0x13182 <_ZN10SdBaseFile7seekSetEm+0xd2>
   131b4:	8b 86       	std	Y+11, r8	; 0x0b
   131b6:	9c 86       	std	Y+12, r9	; 0x0c
   131b8:	ad 86       	std	Y+13, r10	; 0x0d
   131ba:	be 86       	std	Y+14, r11	; 0x0e
   131bc:	81 e0       	ldi	r24, 0x01	; 1
   131be:	01 c0       	rjmp	.+2      	; 0x131c2 <_ZN10SdBaseFile7seekSetEm+0x112>
   131c0:	80 e0       	ldi	r24, 0x00	; 0
   131c2:	df 91       	pop	r29
   131c4:	cf 91       	pop	r28
   131c6:	1f 91       	pop	r17
   131c8:	0f 91       	pop	r16
   131ca:	ff 90       	pop	r15
   131cc:	ef 90       	pop	r14
   131ce:	df 90       	pop	r13
   131d0:	cf 90       	pop	r12
   131d2:	bf 90       	pop	r11
   131d4:	af 90       	pop	r10
   131d6:	9f 90       	pop	r9
   131d8:	8f 90       	pop	r8
   131da:	08 95       	ret
   131dc:	22 30       	cpi	r18, 0x02	; 2
   131de:	09 f0       	breq	.+2      	; 0x131e2 <_ZN10SdBaseFile7seekSetEm+0x132>
   131e0:	85 cf       	rjmp	.-246    	; 0x130ec <_ZN10SdBaseFile7seekSetEm+0x3c>
   131e2:	e8 cf       	rjmp	.-48     	; 0x131b4 <_ZN10SdBaseFile7seekSetEm+0x104>

000131e4 <_ZN10SdBaseFile6rewindEv>:
   131e4:	40 e0       	ldi	r20, 0x00	; 0
   131e6:	50 e0       	ldi	r21, 0x00	; 0
   131e8:	ba 01       	movw	r22, r20
   131ea:	0e 94 58 98 	call	0x130b0	; 0x130b0 <_ZN10SdBaseFile7seekSetEm>
   131ee:	08 95       	ret

000131f0 <_ZN10SdBaseFile10setDirSizeEv>:
   131f0:	ef 92       	push	r14
   131f2:	ff 92       	push	r15
   131f4:	0f 93       	push	r16
   131f6:	1f 93       	push	r17
   131f8:	cf 93       	push	r28
   131fa:	df 93       	push	r29
   131fc:	00 d0       	rcall	.+0      	; 0x131fe <_ZN10SdBaseFile10setDirSizeEv+0xe>
   131fe:	0f 92       	push	r0
   13200:	cd b7       	in	r28, 0x3d	; 61
   13202:	de b7       	in	r29, 0x3e	; 62
   13204:	7c 01       	movw	r14, r24
   13206:	fc 01       	movw	r30, r24
   13208:	87 89       	ldd	r24, Z+23	; 0x17
   1320a:	90 8d       	ldd	r25, Z+24	; 0x18
   1320c:	a1 8d       	ldd	r26, Z+25	; 0x19
   1320e:	b2 8d       	ldd	r27, Z+26	; 0x1a
   13210:	89 83       	std	Y+1, r24	; 0x01
   13212:	9a 83       	std	Y+2, r25	; 0x02
   13214:	ab 83       	std	Y+3, r26	; 0x03
   13216:	bc 83       	std	Y+4, r27	; 0x04
   13218:	00 e0       	ldi	r16, 0x00	; 0
   1321a:	10 e0       	ldi	r17, 0x00	; 0
   1321c:	49 81       	ldd	r20, Y+1	; 0x01
   1321e:	5a 81       	ldd	r21, Y+2	; 0x02
   13220:	6b 81       	ldd	r22, Y+3	; 0x03
   13222:	7c 81       	ldd	r23, Y+4	; 0x04
   13224:	d7 01       	movw	r26, r14
   13226:	15 96       	adiw	r26, 0x05	; 5
   13228:	8d 91       	ld	r24, X+
   1322a:	9c 91       	ld	r25, X
   1322c:	16 97       	sbiw	r26, 0x06	; 6
   1322e:	9e 01       	movw	r18, r28
   13230:	2f 5f       	subi	r18, 0xFF	; 255
   13232:	3f 4f       	sbci	r19, 0xFF	; 255
   13234:	0e 94 5b a3 	call	0x146b6	; 0x146b6 <_ZN8SdVolume6fatGetEmPm>
   13238:	88 23       	and	r24, r24
   1323a:	b1 f1       	breq	.+108    	; 0x132a8 <_ZN10SdBaseFile10setDirSizeEv+0xb8>
   1323c:	d7 01       	movw	r26, r14
   1323e:	15 96       	adiw	r26, 0x05	; 5
   13240:	ed 91       	ld	r30, X+
   13242:	fc 91       	ld	r31, X
   13244:	16 97       	sbiw	r26, 0x06	; 6
   13246:	84 81       	ldd	r24, Z+4	; 0x04
   13248:	08 0f       	add	r16, r24
   1324a:	11 1d       	adc	r17, r1
   1324c:	b0 e1       	ldi	r27, 0x10	; 16
   1324e:	00 30       	cpi	r16, 0x00	; 0
   13250:	1b 07       	cpc	r17, r27
   13252:	50 f5       	brcc	.+84     	; 0x132a8 <_ZN10SdBaseFile10setDirSizeEv+0xb8>
   13254:	89 81       	ldd	r24, Y+1	; 0x01
   13256:	9a 81       	ldd	r25, Y+2	; 0x02
   13258:	ab 81       	ldd	r26, Y+3	; 0x03
   1325a:	bc 81       	ldd	r27, Y+4	; 0x04
   1325c:	27 89       	ldd	r18, Z+23	; 0x17
   1325e:	20 31       	cpi	r18, 0x10	; 16
   13260:	49 f4       	brne	.+18     	; 0x13274 <_ZN10SdBaseFile10setDirSizeEv+0x84>
   13262:	88 3f       	cpi	r24, 0xF8	; 248
   13264:	ef ef       	ldi	r30, 0xFF	; 255
   13266:	9e 07       	cpc	r25, r30
   13268:	e0 e0       	ldi	r30, 0x00	; 0
   1326a:	ae 07       	cpc	r26, r30
   1326c:	e0 e0       	ldi	r30, 0x00	; 0
   1326e:	be 07       	cpc	r27, r30
   13270:	48 f4       	brcc	.+18     	; 0x13284 <_ZN10SdBaseFile10setDirSizeEv+0x94>
   13272:	d4 cf       	rjmp	.-88     	; 0x1321c <_ZN10SdBaseFile10setDirSizeEv+0x2c>
   13274:	88 3f       	cpi	r24, 0xF8	; 248
   13276:	ff ef       	ldi	r31, 0xFF	; 255
   13278:	9f 07       	cpc	r25, r31
   1327a:	ff ef       	ldi	r31, 0xFF	; 255
   1327c:	af 07       	cpc	r26, r31
   1327e:	ff e0       	ldi	r31, 0x0F	; 15
   13280:	bf 07       	cpc	r27, r31
   13282:	60 f2       	brcs	.-104    	; 0x1321c <_ZN10SdBaseFile10setDirSizeEv+0x2c>
   13284:	20 e0       	ldi	r18, 0x00	; 0
   13286:	30 e0       	ldi	r19, 0x00	; 0
   13288:	49 e0       	ldi	r20, 0x09	; 9
   1328a:	00 0f       	add	r16, r16
   1328c:	11 1f       	adc	r17, r17
   1328e:	22 1f       	adc	r18, r18
   13290:	33 1f       	adc	r19, r19
   13292:	4a 95       	dec	r20
   13294:	d1 f7       	brne	.-12     	; 0x1328a <_ZN10SdBaseFile10setDirSizeEv+0x9a>
   13296:	d7 01       	movw	r26, r14
   13298:	53 96       	adiw	r26, 0x13	; 19
   1329a:	0d 93       	st	X+, r16
   1329c:	1d 93       	st	X+, r17
   1329e:	2d 93       	st	X+, r18
   132a0:	3c 93       	st	X, r19
   132a2:	56 97       	sbiw	r26, 0x16	; 22
   132a4:	81 e0       	ldi	r24, 0x01	; 1
   132a6:	01 c0       	rjmp	.+2      	; 0x132aa <_ZN10SdBaseFile10setDirSizeEv+0xba>
   132a8:	80 e0       	ldi	r24, 0x00	; 0
   132aa:	24 96       	adiw	r28, 0x04	; 4
   132ac:	cd bf       	out	0x3d, r28	; 61
   132ae:	de bf       	out	0x3e, r29	; 62
   132b0:	df 91       	pop	r29
   132b2:	cf 91       	pop	r28
   132b4:	1f 91       	pop	r17
   132b6:	0f 91       	pop	r16
   132b8:	ff 90       	pop	r15
   132ba:	ef 90       	pop	r14
   132bc:	08 95       	ret

000132be <_ZN10SdBaseFile8openRootEP8SdVolume>:
   132be:	cf 93       	push	r28
   132c0:	df 93       	push	r29
   132c2:	ec 01       	movw	r28, r24
   132c4:	fb 01       	movw	r30, r22
   132c6:	8b 81       	ldd	r24, Y+3	; 0x03
   132c8:	88 23       	and	r24, r24
   132ca:	d1 f5       	brne	.+116    	; 0x13340 <_ZN10SdBaseFile8openRootEP8SdVolume+0x82>
   132cc:	6d 83       	std	Y+5, r22	; 0x05
   132ce:	7e 83       	std	Y+6, r23	; 0x06
   132d0:	87 89       	ldd	r24, Z+23	; 0x17
   132d2:	80 31       	cpi	r24, 0x10	; 16
   132d4:	c9 f5       	brne	.+114    	; 0x13348 <_ZN10SdBaseFile8openRootEP8SdVolume+0x8a>
   132d6:	82 e0       	ldi	r24, 0x02	; 2
   132d8:	8b 83       	std	Y+3, r24	; 0x03
   132da:	1f 8a       	std	Y+23, r1	; 0x17
   132dc:	18 8e       	std	Y+24, r1	; 0x18
   132de:	19 8e       	std	Y+25, r1	; 0x19
   132e0:	1a 8e       	std	Y+26, r1	; 0x1a
   132e2:	80 8d       	ldd	r24, Z+24	; 0x18
   132e4:	91 8d       	ldd	r25, Z+25	; 0x19
   132e6:	a0 e0       	ldi	r26, 0x00	; 0
   132e8:	b0 e0       	ldi	r27, 0x00	; 0
   132ea:	55 e0       	ldi	r21, 0x05	; 5
   132ec:	88 0f       	add	r24, r24
   132ee:	99 1f       	adc	r25, r25
   132f0:	aa 1f       	adc	r26, r26
   132f2:	bb 1f       	adc	r27, r27
   132f4:	5a 95       	dec	r21
   132f6:	d1 f7       	brne	.-12     	; 0x132ec <_ZN10SdBaseFile8openRootEP8SdVolume+0x2e>
   132f8:	8b 8b       	std	Y+19, r24	; 0x13
   132fa:	9c 8b       	std	Y+20, r25	; 0x14
   132fc:	ad 8b       	std	Y+21, r26	; 0x15
   132fe:	be 8b       	std	Y+22, r27	; 0x16
   13300:	0f c0       	rjmp	.+30     	; 0x13320 <_ZN10SdBaseFile8openRootEP8SdVolume+0x62>
   13302:	83 e0       	ldi	r24, 0x03	; 3
   13304:	8b 83       	std	Y+3, r24	; 0x03
   13306:	82 8d       	ldd	r24, Z+26	; 0x1a
   13308:	93 8d       	ldd	r25, Z+27	; 0x1b
   1330a:	a4 8d       	ldd	r26, Z+28	; 0x1c
   1330c:	b5 8d       	ldd	r27, Z+29	; 0x1d
   1330e:	8f 8b       	std	Y+23, r24	; 0x17
   13310:	98 8f       	std	Y+24, r25	; 0x18
   13312:	a9 8f       	std	Y+25, r26	; 0x19
   13314:	ba 8f       	std	Y+26, r27	; 0x1a
   13316:	ce 01       	movw	r24, r28
   13318:	0e 94 f8 98 	call	0x131f0	; 0x131f0 <_ZN10SdBaseFile10setDirSizeEv>
   1331c:	88 23       	and	r24, r24
   1331e:	81 f0       	breq	.+32     	; 0x13340 <_ZN10SdBaseFile8openRootEP8SdVolume+0x82>
   13320:	81 e0       	ldi	r24, 0x01	; 1
   13322:	89 83       	std	Y+1, r24	; 0x01
   13324:	1f 82       	std	Y+7, r1	; 0x07
   13326:	18 86       	std	Y+8, r1	; 0x08
   13328:	19 86       	std	Y+9, r1	; 0x09
   1332a:	1a 86       	std	Y+10, r1	; 0x0a
   1332c:	1b 86       	std	Y+11, r1	; 0x0b
   1332e:	1c 86       	std	Y+12, r1	; 0x0c
   13330:	1d 86       	std	Y+13, r1	; 0x0d
   13332:	1e 86       	std	Y+14, r1	; 0x0e
   13334:	1f 86       	std	Y+15, r1	; 0x0f
   13336:	18 8a       	std	Y+16, r1	; 0x10
   13338:	19 8a       	std	Y+17, r1	; 0x11
   1333a:	1a 8a       	std	Y+18, r1	; 0x12
   1333c:	1c 82       	std	Y+4, r1	; 0x04
   1333e:	01 c0       	rjmp	.+2      	; 0x13342 <_ZN10SdBaseFile8openRootEP8SdVolume+0x84>
   13340:	80 e0       	ldi	r24, 0x00	; 0
   13342:	df 91       	pop	r29
   13344:	cf 91       	pop	r28
   13346:	08 95       	ret
   13348:	80 32       	cpi	r24, 0x20	; 32
   1334a:	d1 f7       	brne	.-12     	; 0x13340 <_ZN10SdBaseFile8openRootEP8SdVolume+0x82>
   1334c:	da cf       	rjmp	.-76     	; 0x13302 <_ZN10SdBaseFile8openRootEP8SdVolume+0x44>

0001334e <_ZN10SdBaseFile4syncEv>:
   1334e:	0f 93       	push	r16
   13350:	1f 93       	push	r17
   13352:	cf 93       	push	r28
   13354:	df 93       	push	r29
   13356:	8c 01       	movw	r16, r24
   13358:	fc 01       	movw	r30, r24
   1335a:	83 81       	ldd	r24, Z+3	; 0x03
   1335c:	88 23       	and	r24, r24
   1335e:	c9 f1       	breq	.+114    	; 0x133d2 <_ZN10SdBaseFile4syncEv+0x84>
   13360:	81 81       	ldd	r24, Z+1	; 0x01
   13362:	87 ff       	sbrs	r24, 7
   13364:	33 c0       	rjmp	.+102    	; 0x133cc <_ZN10SdBaseFile4syncEv+0x7e>
   13366:	c8 01       	movw	r24, r16
   13368:	61 e0       	ldi	r22, 0x01	; 1
   1336a:	0e 94 d5 94 	call	0x129aa	; 0x129aa <_ZN10SdBaseFile13cacheDirEntryEh>
   1336e:	ec 01       	movw	r28, r24
   13370:	00 97       	sbiw	r24, 0x00	; 0
   13372:	79 f1       	breq	.+94     	; 0x133d2 <_ZN10SdBaseFile4syncEv+0x84>
   13374:	88 81       	ld	r24, Y
   13376:	85 3e       	cpi	r24, 0xE5	; 229
   13378:	61 f1       	breq	.+88     	; 0x133d2 <_ZN10SdBaseFile4syncEv+0x84>
   1337a:	f8 01       	movw	r30, r16
   1337c:	83 81       	ldd	r24, Z+3	; 0x03
   1337e:	82 30       	cpi	r24, 0x02	; 2
   13380:	40 f4       	brcc	.+16     	; 0x13392 <_ZN10SdBaseFile4syncEv+0x44>
   13382:	83 89       	ldd	r24, Z+19	; 0x13
   13384:	94 89       	ldd	r25, Z+20	; 0x14
   13386:	a5 89       	ldd	r26, Z+21	; 0x15
   13388:	b6 89       	ldd	r27, Z+22	; 0x16
   1338a:	8c 8f       	std	Y+28, r24	; 0x1c
   1338c:	9d 8f       	std	Y+29, r25	; 0x1d
   1338e:	ae 8f       	std	Y+30, r26	; 0x1e
   13390:	bf 8f       	std	Y+31, r27	; 0x1f
   13392:	f8 01       	movw	r30, r16
   13394:	87 89       	ldd	r24, Z+23	; 0x17
   13396:	90 8d       	ldd	r25, Z+24	; 0x18
   13398:	a1 8d       	ldd	r26, Z+25	; 0x19
   1339a:	b2 8d       	ldd	r27, Z+26	; 0x1a
   1339c:	8a 8f       	std	Y+26, r24	; 0x1a
   1339e:	9b 8f       	std	Y+27, r25	; 0x1b
   133a0:	ac 8b       	std	Y+20, r26	; 0x14
   133a2:	bd 8b       	std	Y+21, r27	; 0x15
   133a4:	e0 91 c0 25 	lds	r30, 0x25C0
   133a8:	f0 91 c1 25 	lds	r31, 0x25C1
   133ac:	30 97       	sbiw	r30, 0x00	; 0
   133ae:	51 f0       	breq	.+20     	; 0x133c4 <_ZN10SdBaseFile4syncEv+0x76>
   133b0:	be 01       	movw	r22, r28
   133b2:	6a 5e       	subi	r22, 0xEA	; 234
   133b4:	7f 4f       	sbci	r23, 0xFF	; 255
   133b6:	ce 01       	movw	r24, r28
   133b8:	48 96       	adiw	r24, 0x18	; 24
   133ba:	19 95       	eicall
   133bc:	88 8d       	ldd	r24, Y+24	; 0x18
   133be:	99 8d       	ldd	r25, Y+25	; 0x19
   133c0:	8a 8b       	std	Y+18, r24	; 0x12
   133c2:	9b 8b       	std	Y+19, r25	; 0x13
   133c4:	f8 01       	movw	r30, r16
   133c6:	81 81       	ldd	r24, Z+1	; 0x01
   133c8:	8f 77       	andi	r24, 0x7F	; 127
   133ca:	81 83       	std	Z+1, r24	; 0x01
   133cc:	0e 94 9a a2 	call	0x14534	; 0x14534 <_ZN8SdVolume9cacheSyncEv>
   133d0:	04 c0       	rjmp	.+8      	; 0x133da <_ZN10SdBaseFile4syncEv+0x8c>
   133d2:	81 e0       	ldi	r24, 0x01	; 1
   133d4:	f8 01       	movw	r30, r16
   133d6:	80 83       	st	Z, r24
   133d8:	80 e0       	ldi	r24, 0x00	; 0
   133da:	df 91       	pop	r29
   133dc:	cf 91       	pop	r28
   133de:	1f 91       	pop	r17
   133e0:	0f 91       	pop	r16
   133e2:	08 95       	ret

000133e4 <_ZN10SdBaseFile5closeEv>:
   133e4:	cf 93       	push	r28
   133e6:	df 93       	push	r29
   133e8:	ec 01       	movw	r28, r24
   133ea:	0e 94 a7 99 	call	0x1334e	; 0x1334e <_ZN10SdBaseFile4syncEv>
   133ee:	1b 82       	std	Y+3, r1	; 0x03
   133f0:	df 91       	pop	r29
   133f2:	cf 91       	pop	r28
   133f4:	08 95       	ret

000133f6 <_ZN10SdBaseFile8truncateEm>:
   133f6:	4f 92       	push	r4
   133f8:	5f 92       	push	r5
   133fa:	6f 92       	push	r6
   133fc:	7f 92       	push	r7
   133fe:	8f 92       	push	r8
   13400:	9f 92       	push	r9
   13402:	af 92       	push	r10
   13404:	bf 92       	push	r11
   13406:	ef 92       	push	r14
   13408:	ff 92       	push	r15
   1340a:	0f 93       	push	r16
   1340c:	1f 93       	push	r17
   1340e:	cf 93       	push	r28
   13410:	df 93       	push	r29
   13412:	00 d0       	rcall	.+0      	; 0x13414 <_ZN10SdBaseFile8truncateEm+0x1e>
   13414:	0f 92       	push	r0
   13416:	cd b7       	in	r28, 0x3d	; 61
   13418:	de b7       	in	r29, 0x3e	; 62
   1341a:	7c 01       	movw	r14, r24
   1341c:	4a 01       	movw	r8, r20
   1341e:	5b 01       	movw	r10, r22
   13420:	fc 01       	movw	r30, r24
   13422:	83 81       	ldd	r24, Z+3	; 0x03
   13424:	81 30       	cpi	r24, 0x01	; 1
   13426:	09 f0       	breq	.+2      	; 0x1342a <_ZN10SdBaseFile8truncateEm+0x34>
   13428:	85 c0       	rjmp	.+266    	; 0x13534 <_ZN10SdBaseFile8truncateEm+0x13e>
   1342a:	81 81       	ldd	r24, Z+1	; 0x01
   1342c:	81 ff       	sbrs	r24, 1
   1342e:	82 c0       	rjmp	.+260    	; 0x13534 <_ZN10SdBaseFile8truncateEm+0x13e>
   13430:	94 c0       	rjmp	.+296    	; 0x1355a <_ZN10SdBaseFile8truncateEm+0x164>
   13432:	00 97       	sbiw	r24, 0x00	; 0
   13434:	a1 05       	cpc	r26, r1
   13436:	b1 05       	cpc	r27, r1
   13438:	09 f4       	brne	.+2      	; 0x1343c <_ZN10SdBaseFile8truncateEm+0x46>
   1343a:	7a c0       	rjmp	.+244    	; 0x13530 <_ZN10SdBaseFile8truncateEm+0x13a>
   1343c:	f7 01       	movw	r30, r14
   1343e:	43 84       	ldd	r4, Z+11	; 0x0b
   13440:	54 84       	ldd	r5, Z+12	; 0x0c
   13442:	65 84       	ldd	r6, Z+13	; 0x0d
   13444:	76 84       	ldd	r7, Z+14	; 0x0e
   13446:	c7 01       	movw	r24, r14
   13448:	b5 01       	movw	r22, r10
   1344a:	a4 01       	movw	r20, r8
   1344c:	0e 94 58 98 	call	0x130b0	; 0x130b0 <_ZN10SdBaseFile7seekSetEm>
   13450:	88 23       	and	r24, r24
   13452:	09 f4       	brne	.+2      	; 0x13456 <_ZN10SdBaseFile8truncateEm+0x60>
   13454:	6f c0       	rjmp	.+222    	; 0x13534 <_ZN10SdBaseFile8truncateEm+0x13e>
   13456:	f7 01       	movw	r30, r14
   13458:	85 81       	ldd	r24, Z+5	; 0x05
   1345a:	96 81       	ldd	r25, Z+6	; 0x06
   1345c:	81 14       	cp	r8, r1
   1345e:	91 04       	cpc	r9, r1
   13460:	a1 04       	cpc	r10, r1
   13462:	b1 04       	cpc	r11, r1
   13464:	79 f4       	brne	.+30     	; 0x13484 <_ZN10SdBaseFile8truncateEm+0x8e>
   13466:	47 89       	ldd	r20, Z+23	; 0x17
   13468:	50 8d       	ldd	r21, Z+24	; 0x18
   1346a:	61 8d       	ldd	r22, Z+25	; 0x19
   1346c:	72 8d       	ldd	r23, Z+26	; 0x1a
   1346e:	0e 94 5f a5 	call	0x14abe	; 0x14abe <_ZN8SdVolume9freeChainEm>
   13472:	88 23       	and	r24, r24
   13474:	09 f4       	brne	.+2      	; 0x13478 <_ZN10SdBaseFile8truncateEm+0x82>
   13476:	5e c0       	rjmp	.+188    	; 0x13534 <_ZN10SdBaseFile8truncateEm+0x13e>
   13478:	f7 01       	movw	r30, r14
   1347a:	17 8a       	std	Z+23, r1	; 0x17
   1347c:	10 8e       	std	Z+24, r1	; 0x18
   1347e:	11 8e       	std	Z+25, r1	; 0x19
   13480:	12 8e       	std	Z+26, r1	; 0x1a
   13482:	3c c0       	rjmp	.+120    	; 0x134fc <_ZN10SdBaseFile8truncateEm+0x106>
   13484:	f7 01       	movw	r30, r14
   13486:	47 81       	ldd	r20, Z+7	; 0x07
   13488:	50 85       	ldd	r21, Z+8	; 0x08
   1348a:	61 85       	ldd	r22, Z+9	; 0x09
   1348c:	72 85       	ldd	r23, Z+10	; 0x0a
   1348e:	9e 01       	movw	r18, r28
   13490:	2f 5f       	subi	r18, 0xFF	; 255
   13492:	3f 4f       	sbci	r19, 0xFF	; 255
   13494:	0e 94 5b a3 	call	0x146b6	; 0x146b6 <_ZN8SdVolume6fatGetEmPm>
   13498:	88 23       	and	r24, r24
   1349a:	09 f4       	brne	.+2      	; 0x1349e <_ZN10SdBaseFile8truncateEm+0xa8>
   1349c:	4b c0       	rjmp	.+150    	; 0x13534 <_ZN10SdBaseFile8truncateEm+0x13e>
   1349e:	f7 01       	movw	r30, r14
   134a0:	85 81       	ldd	r24, Z+5	; 0x05
   134a2:	96 81       	ldd	r25, Z+6	; 0x06
   134a4:	49 81       	ldd	r20, Y+1	; 0x01
   134a6:	5a 81       	ldd	r21, Y+2	; 0x02
   134a8:	6b 81       	ldd	r22, Y+3	; 0x03
   134aa:	7c 81       	ldd	r23, Y+4	; 0x04
   134ac:	fc 01       	movw	r30, r24
   134ae:	27 89       	ldd	r18, Z+23	; 0x17
   134b0:	20 31       	cpi	r18, 0x10	; 16
   134b2:	49 f4       	brne	.+18     	; 0x134c6 <_ZN10SdBaseFile8truncateEm+0xd0>
   134b4:	48 3f       	cpi	r20, 0xF8	; 248
   134b6:	ff ef       	ldi	r31, 0xFF	; 255
   134b8:	5f 07       	cpc	r21, r31
   134ba:	f0 e0       	ldi	r31, 0x00	; 0
   134bc:	6f 07       	cpc	r22, r31
   134be:	f0 e0       	ldi	r31, 0x00	; 0
   134c0:	7f 07       	cpc	r23, r31
   134c2:	e0 f4       	brcc	.+56     	; 0x134fc <_ZN10SdBaseFile8truncateEm+0x106>
   134c4:	08 c0       	rjmp	.+16     	; 0x134d6 <_ZN10SdBaseFile8truncateEm+0xe0>
   134c6:	48 3f       	cpi	r20, 0xF8	; 248
   134c8:	2f ef       	ldi	r18, 0xFF	; 255
   134ca:	52 07       	cpc	r21, r18
   134cc:	2f ef       	ldi	r18, 0xFF	; 255
   134ce:	62 07       	cpc	r22, r18
   134d0:	2f e0       	ldi	r18, 0x0F	; 15
   134d2:	72 07       	cpc	r23, r18
   134d4:	98 f4       	brcc	.+38     	; 0x134fc <_ZN10SdBaseFile8truncateEm+0x106>
   134d6:	0e 94 5f a5 	call	0x14abe	; 0x14abe <_ZN8SdVolume9freeChainEm>
   134da:	88 23       	and	r24, r24
   134dc:	59 f1       	breq	.+86     	; 0x13534 <_ZN10SdBaseFile8truncateEm+0x13e>
   134de:	f7 01       	movw	r30, r14
   134e0:	47 81       	ldd	r20, Z+7	; 0x07
   134e2:	50 85       	ldd	r21, Z+8	; 0x08
   134e4:	61 85       	ldd	r22, Z+9	; 0x09
   134e6:	72 85       	ldd	r23, Z+10	; 0x0a
   134e8:	85 81       	ldd	r24, Z+5	; 0x05
   134ea:	96 81       	ldd	r25, Z+6	; 0x06
   134ec:	0f ef       	ldi	r16, 0xFF	; 255
   134ee:	1f ef       	ldi	r17, 0xFF	; 255
   134f0:	2f ef       	ldi	r18, 0xFF	; 255
   134f2:	3f e0       	ldi	r19, 0x0F	; 15
   134f4:	0e 94 d7 a3 	call	0x147ae	; 0x147ae <_ZN8SdVolume6fatPutEmm>
   134f8:	88 23       	and	r24, r24
   134fa:	e1 f0       	breq	.+56     	; 0x13534 <_ZN10SdBaseFile8truncateEm+0x13e>
   134fc:	f7 01       	movw	r30, r14
   134fe:	83 8a       	std	Z+19, r8	; 0x13
   13500:	94 8a       	std	Z+20, r9	; 0x14
   13502:	a5 8a       	std	Z+21, r10	; 0x15
   13504:	b6 8a       	std	Z+22, r11	; 0x16
   13506:	81 81       	ldd	r24, Z+1	; 0x01
   13508:	80 68       	ori	r24, 0x80	; 128
   1350a:	81 83       	std	Z+1, r24	; 0x01
   1350c:	c7 01       	movw	r24, r14
   1350e:	0e 94 a7 99 	call	0x1334e	; 0x1334e <_ZN10SdBaseFile4syncEv>
   13512:	88 23       	and	r24, r24
   13514:	79 f0       	breq	.+30     	; 0x13534 <_ZN10SdBaseFile8truncateEm+0x13e>
   13516:	b5 01       	movw	r22, r10
   13518:	a4 01       	movw	r20, r8
   1351a:	48 14       	cp	r4, r8
   1351c:	59 04       	cpc	r5, r9
   1351e:	6a 04       	cpc	r6, r10
   13520:	7b 04       	cpc	r7, r11
   13522:	10 f4       	brcc	.+4      	; 0x13528 <_ZN10SdBaseFile8truncateEm+0x132>
   13524:	b3 01       	movw	r22, r6
   13526:	a2 01       	movw	r20, r4
   13528:	c7 01       	movw	r24, r14
   1352a:	0e 94 58 98 	call	0x130b0	; 0x130b0 <_ZN10SdBaseFile7seekSetEm>
   1352e:	03 c0       	rjmp	.+6      	; 0x13536 <_ZN10SdBaseFile8truncateEm+0x140>
   13530:	81 e0       	ldi	r24, 0x01	; 1
   13532:	01 c0       	rjmp	.+2      	; 0x13536 <_ZN10SdBaseFile8truncateEm+0x140>
   13534:	80 e0       	ldi	r24, 0x00	; 0
   13536:	24 96       	adiw	r28, 0x04	; 4
   13538:	cd bf       	out	0x3d, r28	; 61
   1353a:	de bf       	out	0x3e, r29	; 62
   1353c:	df 91       	pop	r29
   1353e:	cf 91       	pop	r28
   13540:	1f 91       	pop	r17
   13542:	0f 91       	pop	r16
   13544:	ff 90       	pop	r15
   13546:	ef 90       	pop	r14
   13548:	bf 90       	pop	r11
   1354a:	af 90       	pop	r10
   1354c:	9f 90       	pop	r9
   1354e:	8f 90       	pop	r8
   13550:	7f 90       	pop	r7
   13552:	6f 90       	pop	r6
   13554:	5f 90       	pop	r5
   13556:	4f 90       	pop	r4
   13558:	08 95       	ret
   1355a:	f7 01       	movw	r30, r14
   1355c:	83 89       	ldd	r24, Z+19	; 0x13
   1355e:	94 89       	ldd	r25, Z+20	; 0x14
   13560:	a5 89       	ldd	r26, Z+21	; 0x15
   13562:	b6 89       	ldd	r27, Z+22	; 0x16
   13564:	84 17       	cp	r24, r20
   13566:	95 07       	cpc	r25, r21
   13568:	a6 07       	cpc	r26, r22
   1356a:	b7 07       	cpc	r27, r23
   1356c:	08 f0       	brcs	.+2      	; 0x13570 <_ZN10SdBaseFile8truncateEm+0x17a>
   1356e:	61 cf       	rjmp	.-318    	; 0x13432 <_ZN10SdBaseFile8truncateEm+0x3c>
   13570:	e1 cf       	rjmp	.-62     	; 0x13534 <_ZN10SdBaseFile8truncateEm+0x13e>

00013572 <_ZN10SdBaseFile6removeEv>:
   13572:	cf 93       	push	r28
   13574:	df 93       	push	r29
   13576:	ec 01       	movw	r28, r24
   13578:	40 e0       	ldi	r20, 0x00	; 0
   1357a:	50 e0       	ldi	r21, 0x00	; 0
   1357c:	ba 01       	movw	r22, r20
   1357e:	0e 94 fb 99 	call	0x133f6	; 0x133f6 <_ZN10SdBaseFile8truncateEm>
   13582:	88 23       	and	r24, r24
   13584:	69 f0       	breq	.+26     	; 0x135a0 <_ZN10SdBaseFile6removeEv+0x2e>
   13586:	ce 01       	movw	r24, r28
   13588:	61 e0       	ldi	r22, 0x01	; 1
   1358a:	0e 94 d5 94 	call	0x129aa	; 0x129aa <_ZN10SdBaseFile13cacheDirEntryEh>
   1358e:	00 97       	sbiw	r24, 0x00	; 0
   13590:	39 f0       	breq	.+14     	; 0x135a0 <_ZN10SdBaseFile6removeEv+0x2e>
   13592:	25 ee       	ldi	r18, 0xE5	; 229
   13594:	fc 01       	movw	r30, r24
   13596:	20 83       	st	Z, r18
   13598:	1b 82       	std	Y+3, r1	; 0x03
   1359a:	0e 94 9a a2 	call	0x14534	; 0x14534 <_ZN8SdVolume9cacheSyncEv>
   1359e:	01 c0       	rjmp	.+2      	; 0x135a2 <_ZN10SdBaseFile6removeEv+0x30>
   135a0:	80 e0       	ldi	r24, 0x00	; 0
   135a2:	df 91       	pop	r29
   135a4:	cf 91       	pop	r28
   135a6:	08 95       	ret

000135a8 <_ZN10SdBaseFile5rmdirEv>:
   135a8:	cf 93       	push	r28
   135aa:	df 93       	push	r29
   135ac:	ec 01       	movw	r28, r24
   135ae:	8b 81       	ldd	r24, Y+3	; 0x03
   135b0:	84 30       	cpi	r24, 0x04	; 4
   135b2:	51 f5       	brne	.+84     	; 0x13608 <_ZN10SdBaseFile5rmdirEv+0x60>
   135b4:	ce 01       	movw	r24, r28
   135b6:	0e 94 f2 98 	call	0x131e4	; 0x131e4 <_ZN10SdBaseFile6rewindEv>
   135ba:	10 c0       	rjmp	.+32     	; 0x135dc <_ZN10SdBaseFile5rmdirEv+0x34>
   135bc:	ce 01       	movw	r24, r28
   135be:	0e 94 1e 98 	call	0x1303c	; 0x1303c <_ZN10SdBaseFile12readDirCacheEv>
   135c2:	fc 01       	movw	r30, r24
   135c4:	00 97       	sbiw	r24, 0x00	; 0
   135c6:	01 f1       	breq	.+64     	; 0x13608 <_ZN10SdBaseFile5rmdirEv+0x60>
   135c8:	80 81       	ld	r24, Z
   135ca:	88 23       	and	r24, r24
   135cc:	a1 f0       	breq	.+40     	; 0x135f6 <_ZN10SdBaseFile5rmdirEv+0x4e>
   135ce:	85 3e       	cpi	r24, 0xE5	; 229
   135d0:	29 f0       	breq	.+10     	; 0x135dc <_ZN10SdBaseFile5rmdirEv+0x34>
   135d2:	8e 32       	cpi	r24, 0x2E	; 46
   135d4:	19 f0       	breq	.+6      	; 0x135dc <_ZN10SdBaseFile5rmdirEv+0x34>
   135d6:	83 85       	ldd	r24, Z+11	; 0x0b
   135d8:	83 ff       	sbrs	r24, 3
   135da:	16 c0       	rjmp	.+44     	; 0x13608 <_ZN10SdBaseFile5rmdirEv+0x60>
   135dc:	4b 85       	ldd	r20, Y+11	; 0x0b
   135de:	5c 85       	ldd	r21, Y+12	; 0x0c
   135e0:	6d 85       	ldd	r22, Y+13	; 0x0d
   135e2:	7e 85       	ldd	r23, Y+14	; 0x0e
   135e4:	8b 89       	ldd	r24, Y+19	; 0x13
   135e6:	9c 89       	ldd	r25, Y+20	; 0x14
   135e8:	ad 89       	ldd	r26, Y+21	; 0x15
   135ea:	be 89       	ldd	r27, Y+22	; 0x16
   135ec:	48 17       	cp	r20, r24
   135ee:	59 07       	cpc	r21, r25
   135f0:	6a 07       	cpc	r22, r26
   135f2:	7b 07       	cpc	r23, r27
   135f4:	18 f3       	brcs	.-58     	; 0x135bc <_ZN10SdBaseFile5rmdirEv+0x14>
   135f6:	81 e0       	ldi	r24, 0x01	; 1
   135f8:	8b 83       	std	Y+3, r24	; 0x03
   135fa:	89 81       	ldd	r24, Y+1	; 0x01
   135fc:	82 60       	ori	r24, 0x02	; 2
   135fe:	89 83       	std	Y+1, r24	; 0x01
   13600:	ce 01       	movw	r24, r28
   13602:	0e 94 b9 9a 	call	0x13572	; 0x13572 <_ZN10SdBaseFile6removeEv>
   13606:	01 c0       	rjmp	.+2      	; 0x1360a <_ZN10SdBaseFile5rmdirEv+0x62>
   13608:	80 e0       	ldi	r24, 0x00	; 0
   1360a:	df 91       	pop	r29
   1360c:	cf 91       	pop	r28
   1360e:	08 95       	ret

00013610 <_ZN10SdBaseFile15openCachedEntryEhh>:
   13610:	1f 93       	push	r17
   13612:	cf 93       	push	r28
   13614:	df 93       	push	r29
   13616:	ec 01       	movw	r28, r24
   13618:	14 2f       	mov	r17, r20
   1361a:	e6 2f       	mov	r30, r22
   1361c:	f0 e0       	ldi	r31, 0x00	; 0
   1361e:	35 e0       	ldi	r19, 0x05	; 5
   13620:	ee 0f       	add	r30, r30
   13622:	ff 1f       	adc	r31, r31
   13624:	3a 95       	dec	r19
   13626:	e1 f7       	brne	.-8      	; 0x13620 <_ZN10SdBaseFile15openCachedEntryEhh+0x10>
   13628:	e1 53       	subi	r30, 0x31	; 49
   1362a:	fa 4d       	sbci	r31, 0xDA	; 218
   1362c:	83 85       	ldd	r24, Z+11	; 0x0b
   1362e:	81 71       	andi	r24, 0x11	; 17
   13630:	21 f0       	breq	.+8      	; 0x1363a <_ZN10SdBaseFile15openCachedEntryEhh+0x2a>
   13632:	84 2f       	mov	r24, r20
   13634:	82 71       	andi	r24, 0x12	; 18
   13636:	09 f0       	breq	.+2      	; 0x1363a <_ZN10SdBaseFile15openCachedEntryEhh+0x2a>
   13638:	58 c0       	rjmp	.+176    	; 0x136ea <_ZN10SdBaseFile15openCachedEntryEhh+0xda>
   1363a:	80 91 cb 25 	lds	r24, 0x25CB
   1363e:	90 91 cc 25 	lds	r25, 0x25CC
   13642:	a0 91 cd 25 	lds	r26, 0x25CD
   13646:	b0 91 ce 25 	lds	r27, 0x25CE
   1364a:	8f 87       	std	Y+15, r24	; 0x0f
   1364c:	98 8b       	std	Y+16, r25	; 0x10
   1364e:	a9 8b       	std	Y+17, r26	; 0x11
   13650:	ba 8b       	std	Y+18, r27	; 0x12
   13652:	6c 83       	std	Y+4, r22	; 0x04
   13654:	44 89       	ldd	r20, Z+20	; 0x14
   13656:	55 89       	ldd	r21, Z+21	; 0x15
   13658:	60 e0       	ldi	r22, 0x00	; 0
   1365a:	70 e0       	ldi	r23, 0x00	; 0
   1365c:	ba 01       	movw	r22, r20
   1365e:	55 27       	eor	r21, r21
   13660:	44 27       	eor	r20, r20
   13662:	82 8d       	ldd	r24, Z+26	; 0x1a
   13664:	93 8d       	ldd	r25, Z+27	; 0x1b
   13666:	a0 e0       	ldi	r26, 0x00	; 0
   13668:	b0 e0       	ldi	r27, 0x00	; 0
   1366a:	48 2b       	or	r20, r24
   1366c:	59 2b       	or	r21, r25
   1366e:	6a 2b       	or	r22, r26
   13670:	7b 2b       	or	r23, r27
   13672:	4f 8b       	std	Y+23, r20	; 0x17
   13674:	58 8f       	std	Y+24, r21	; 0x18
   13676:	69 8f       	std	Y+25, r22	; 0x19
   13678:	7a 8f       	std	Y+26, r23	; 0x1a
   1367a:	83 85       	ldd	r24, Z+11	; 0x0b
   1367c:	90 e0       	ldi	r25, 0x00	; 0
   1367e:	88 71       	andi	r24, 0x18	; 24
   13680:	90 70       	andi	r25, 0x00	; 0
   13682:	00 97       	sbiw	r24, 0x00	; 0
   13684:	51 f4       	brne	.+20     	; 0x1369a <_ZN10SdBaseFile15openCachedEntryEhh+0x8a>
   13686:	84 8d       	ldd	r24, Z+28	; 0x1c
   13688:	95 8d       	ldd	r25, Z+29	; 0x1d
   1368a:	a6 8d       	ldd	r26, Z+30	; 0x1e
   1368c:	b7 8d       	ldd	r27, Z+31	; 0x1f
   1368e:	8b 8b       	std	Y+19, r24	; 0x13
   13690:	9c 8b       	std	Y+20, r25	; 0x14
   13692:	ad 8b       	std	Y+21, r26	; 0x15
   13694:	be 8b       	std	Y+22, r27	; 0x16
   13696:	81 e0       	ldi	r24, 0x01	; 1
   13698:	09 c0       	rjmp	.+18     	; 0x136ac <_ZN10SdBaseFile15openCachedEntryEhh+0x9c>
   1369a:	80 31       	cpi	r24, 0x10	; 16
   1369c:	91 05       	cpc	r25, r1
   1369e:	29 f5       	brne	.+74     	; 0x136ea <_ZN10SdBaseFile15openCachedEntryEhh+0xda>
   136a0:	ce 01       	movw	r24, r28
   136a2:	0e 94 f8 98 	call	0x131f0	; 0x131f0 <_ZN10SdBaseFile10setDirSizeEv>
   136a6:	88 23       	and	r24, r24
   136a8:	01 f1       	breq	.+64     	; 0x136ea <_ZN10SdBaseFile15openCachedEntryEhh+0xda>
   136aa:	84 e0       	ldi	r24, 0x04	; 4
   136ac:	8b 83       	std	Y+3, r24	; 0x03
   136ae:	81 2f       	mov	r24, r17
   136b0:	8f 70       	andi	r24, 0x0F	; 15
   136b2:	89 83       	std	Y+1, r24	; 0x01
   136b4:	1f 82       	std	Y+7, r1	; 0x07
   136b6:	18 86       	std	Y+8, r1	; 0x08
   136b8:	19 86       	std	Y+9, r1	; 0x09
   136ba:	1a 86       	std	Y+10, r1	; 0x0a
   136bc:	1b 86       	std	Y+11, r1	; 0x0b
   136be:	1c 86       	std	Y+12, r1	; 0x0c
   136c0:	1d 86       	std	Y+13, r1	; 0x0d
   136c2:	1e 86       	std	Y+14, r1	; 0x0e
   136c4:	14 ff       	sbrs	r17, 4
   136c6:	17 c0       	rjmp	.+46     	; 0x136f6 <_ZN10SdBaseFile15openCachedEntryEhh+0xe6>
   136c8:	ce 01       	movw	r24, r28
   136ca:	40 e0       	ldi	r20, 0x00	; 0
   136cc:	50 e0       	ldi	r21, 0x00	; 0
   136ce:	ba 01       	movw	r22, r20
   136d0:	0e 94 fb 99 	call	0x133f6	; 0x133f6 <_ZN10SdBaseFile8truncateEm>
   136d4:	88 23       	and	r24, r24
   136d6:	49 f0       	breq	.+18     	; 0x136ea <_ZN10SdBaseFile15openCachedEntryEhh+0xda>
   136d8:	0e c0       	rjmp	.+28     	; 0x136f6 <_ZN10SdBaseFile15openCachedEntryEhh+0xe6>
   136da:	4b 89       	ldd	r20, Y+19	; 0x13
   136dc:	5c 89       	ldd	r21, Y+20	; 0x14
   136de:	6d 89       	ldd	r22, Y+21	; 0x15
   136e0:	7e 89       	ldd	r23, Y+22	; 0x16
   136e2:	ce 01       	movw	r24, r28
   136e4:	0e 94 58 98 	call	0x130b0	; 0x130b0 <_ZN10SdBaseFile7seekSetEm>
   136e8:	02 c0       	rjmp	.+4      	; 0x136ee <_ZN10SdBaseFile15openCachedEntryEhh+0xde>
   136ea:	1b 82       	std	Y+3, r1	; 0x03
   136ec:	80 e0       	ldi	r24, 0x00	; 0
   136ee:	df 91       	pop	r29
   136f0:	cf 91       	pop	r28
   136f2:	1f 91       	pop	r17
   136f4:	08 95       	ret
   136f6:	15 fd       	sbrc	r17, 5
   136f8:	f0 cf       	rjmp	.-32     	; 0x136da <_ZN10SdBaseFile15openCachedEntryEhh+0xca>
   136fa:	81 e0       	ldi	r24, 0x01	; 1
   136fc:	f8 cf       	rjmp	.-16     	; 0x136ee <_ZN10SdBaseFile15openCachedEntryEhh+0xde>

000136fe <_ZN10SdBaseFile4openEPS_jh>:
   136fe:	cf 92       	push	r12
   13700:	df 92       	push	r13
   13702:	ff 92       	push	r15
   13704:	0f 93       	push	r16
   13706:	1f 93       	push	r17
   13708:	cf 93       	push	r28
   1370a:	df 93       	push	r29
   1370c:	8c 01       	movw	r16, r24
   1370e:	eb 01       	movw	r28, r22
   13710:	6a 01       	movw	r12, r20
   13712:	f2 2e       	mov	r15, r18
   13714:	8d 81       	ldd	r24, Y+5	; 0x05
   13716:	9e 81       	ldd	r25, Y+6	; 0x06
   13718:	f8 01       	movw	r30, r16
   1371a:	85 83       	std	Z+5, r24	; 0x05
   1371c:	96 83       	std	Z+6, r25	; 0x06
   1371e:	83 81       	ldd	r24, Z+3	; 0x03
   13720:	88 23       	and	r24, r24
   13722:	21 f5       	brne	.+72     	; 0x1376c <_ZN10SdBaseFile4openEPS_jh+0x6e>
   13724:	20 97       	sbiw	r28, 0x00	; 0
   13726:	59 f5       	brne	.+86     	; 0x1377e <_ZN10SdBaseFile4openEPS_jh+0x80>
   13728:	21 c0       	rjmp	.+66     	; 0x1376c <_ZN10SdBaseFile4openEPS_jh+0x6e>
   1372a:	a6 01       	movw	r20, r12
   1372c:	65 e0       	ldi	r22, 0x05	; 5
   1372e:	44 0f       	add	r20, r20
   13730:	55 1f       	adc	r21, r21
   13732:	6a 95       	dec	r22
   13734:	e1 f7       	brne	.-8      	; 0x1372e <_ZN10SdBaseFile4openEPS_jh+0x30>
   13736:	60 e0       	ldi	r22, 0x00	; 0
   13738:	70 e0       	ldi	r23, 0x00	; 0
   1373a:	ce 01       	movw	r24, r28
   1373c:	0e 94 58 98 	call	0x130b0	; 0x130b0 <_ZN10SdBaseFile7seekSetEm>
   13740:	88 23       	and	r24, r24
   13742:	a1 f0       	breq	.+40     	; 0x1376c <_ZN10SdBaseFile4openEPS_jh+0x6e>
   13744:	ce 01       	movw	r24, r28
   13746:	0e 94 1e 98 	call	0x1303c	; 0x1303c <_ZN10SdBaseFile12readDirCacheEv>
   1374a:	00 97       	sbiw	r24, 0x00	; 0
   1374c:	79 f0       	breq	.+30     	; 0x1376c <_ZN10SdBaseFile4openEPS_jh+0x6e>
   1374e:	fc 01       	movw	r30, r24
   13750:	80 81       	ld	r24, Z
   13752:	88 23       	and	r24, r24
   13754:	59 f0       	breq	.+22     	; 0x1376c <_ZN10SdBaseFile4openEPS_jh+0x6e>
   13756:	85 3e       	cpi	r24, 0xE5	; 229
   13758:	49 f0       	breq	.+18     	; 0x1376c <_ZN10SdBaseFile4openEPS_jh+0x6e>
   1375a:	8e 32       	cpi	r24, 0x2E	; 46
   1375c:	39 f0       	breq	.+14     	; 0x1376c <_ZN10SdBaseFile4openEPS_jh+0x6e>
   1375e:	6c 2d       	mov	r22, r12
   13760:	6f 70       	andi	r22, 0x0F	; 15
   13762:	c8 01       	movw	r24, r16
   13764:	4f 2d       	mov	r20, r15
   13766:	0e 94 08 9b 	call	0x13610	; 0x13610 <_ZN10SdBaseFile15openCachedEntryEhh>
   1376a:	01 c0       	rjmp	.+2      	; 0x1376e <_ZN10SdBaseFile4openEPS_jh+0x70>
   1376c:	80 e0       	ldi	r24, 0x00	; 0
   1376e:	df 91       	pop	r29
   13770:	cf 91       	pop	r28
   13772:	1f 91       	pop	r17
   13774:	0f 91       	pop	r16
   13776:	ff 90       	pop	r15
   13778:	df 90       	pop	r13
   1377a:	cf 90       	pop	r12
   1377c:	08 95       	ret
   1377e:	27 ff       	sbrs	r18, 7
   13780:	d4 cf       	rjmp	.-88     	; 0x1372a <_ZN10SdBaseFile4openEPS_jh+0x2c>
   13782:	f4 cf       	rjmp	.-24     	; 0x1376c <_ZN10SdBaseFile4openEPS_jh+0x6e>

00013784 <_ZN10SdBaseFile8rmRfStarEv>:
   13784:	8f 92       	push	r8
   13786:	9f 92       	push	r9
   13788:	af 92       	push	r10
   1378a:	bf 92       	push	r11
   1378c:	ef 92       	push	r14
   1378e:	ff 92       	push	r15
   13790:	0f 93       	push	r16
   13792:	1f 93       	push	r17
   13794:	cf 93       	push	r28
   13796:	df 93       	push	r29
   13798:	cd b7       	in	r28, 0x3d	; 61
   1379a:	de b7       	in	r29, 0x3e	; 62
   1379c:	6b 97       	sbiw	r28, 0x1b	; 27
   1379e:	cd bf       	out	0x3d, r28	; 61
   137a0:	de bf       	out	0x3e, r29	; 62
   137a2:	7c 01       	movw	r14, r24
   137a4:	19 82       	std	Y+1, r1	; 0x01
   137a6:	1c 82       	std	Y+4, r1	; 0x04
   137a8:	0e 94 f2 98 	call	0x131e4	; 0x131e4 <_ZN10SdBaseFile6rewindEv>
   137ac:	55 c0       	rjmp	.+170    	; 0x13858 <_ZN10SdBaseFile8rmRfStarEv+0xd4>
   137ae:	c7 01       	movw	r24, r14
   137b0:	0e 94 1e 98 	call	0x1303c	; 0x1303c <_ZN10SdBaseFile12readDirCacheEv>
   137b4:	fc 01       	movw	r30, r24
   137b6:	00 97       	sbiw	r24, 0x00	; 0
   137b8:	09 f4       	brne	.+2      	; 0x137bc <_ZN10SdBaseFile8rmRfStarEv+0x38>
   137ba:	66 c0       	rjmp	.+204    	; 0x13888 <_ZN10SdBaseFile8rmRfStarEv+0x104>
   137bc:	80 81       	ld	r24, Z
   137be:	88 23       	and	r24, r24
   137c0:	09 f4       	brne	.+2      	; 0x137c4 <_ZN10SdBaseFile8rmRfStarEv+0x40>
   137c2:	59 c0       	rjmp	.+178    	; 0x13876 <_ZN10SdBaseFile8rmRfStarEv+0xf2>
   137c4:	85 3e       	cpi	r24, 0xE5	; 229
   137c6:	09 f4       	brne	.+2      	; 0x137ca <_ZN10SdBaseFile8rmRfStarEv+0x46>
   137c8:	47 c0       	rjmp	.+142    	; 0x13858 <_ZN10SdBaseFile8rmRfStarEv+0xd4>
   137ca:	8e 32       	cpi	r24, 0x2E	; 46
   137cc:	09 f4       	brne	.+2      	; 0x137d0 <_ZN10SdBaseFile8rmRfStarEv+0x4c>
   137ce:	44 c0       	rjmp	.+136    	; 0x13858 <_ZN10SdBaseFile8rmRfStarEv+0xd4>
   137d0:	83 85       	ldd	r24, Z+11	; 0x0b
   137d2:	83 fd       	sbrc	r24, 3
   137d4:	41 c0       	rjmp	.+130    	; 0x13858 <_ZN10SdBaseFile8rmRfStarEv+0xd4>
   137d6:	95 01       	movw	r18, r10
   137d8:	84 01       	movw	r16, r8
   137da:	f5 e0       	ldi	r31, 0x05	; 5
   137dc:	36 95       	lsr	r19
   137de:	27 95       	ror	r18
   137e0:	17 95       	ror	r17
   137e2:	07 95       	ror	r16
   137e4:	fa 95       	dec	r31
   137e6:	d1 f7       	brne	.-12     	; 0x137dc <_ZN10SdBaseFile8rmRfStarEv+0x58>
   137e8:	48 01       	movw	r8, r16
   137ea:	ce 01       	movw	r24, r28
   137ec:	01 96       	adiw	r24, 0x01	; 1
   137ee:	b7 01       	movw	r22, r14
   137f0:	a8 01       	movw	r20, r16
   137f2:	21 e0       	ldi	r18, 0x01	; 1
   137f4:	0e 94 7f 9b 	call	0x136fe	; 0x136fe <_ZN10SdBaseFile4openEPS_jh>
   137f8:	88 23       	and	r24, r24
   137fa:	09 f4       	brne	.+2      	; 0x137fe <_ZN10SdBaseFile8rmRfStarEv+0x7a>
   137fc:	45 c0       	rjmp	.+138    	; 0x13888 <_ZN10SdBaseFile8rmRfStarEv+0x104>
   137fe:	8c 81       	ldd	r24, Y+4	; 0x04
   13800:	84 30       	cpi	r24, 0x04	; 4
   13802:	29 f4       	brne	.+10     	; 0x1380e <_ZN10SdBaseFile8rmRfStarEv+0x8a>
   13804:	ce 01       	movw	r24, r28
   13806:	01 96       	adiw	r24, 0x01	; 1
   13808:	0e 94 c2 9b 	call	0x13784	; 0x13784 <_ZN10SdBaseFile8rmRfStarEv>
   1380c:	07 c0       	rjmp	.+14     	; 0x1381c <_ZN10SdBaseFile8rmRfStarEv+0x98>
   1380e:	8a 81       	ldd	r24, Y+2	; 0x02
   13810:	82 60       	ori	r24, 0x02	; 2
   13812:	8a 83       	std	Y+2, r24	; 0x02
   13814:	ce 01       	movw	r24, r28
   13816:	01 96       	adiw	r24, 0x01	; 1
   13818:	0e 94 b9 9a 	call	0x13572	; 0x13572 <_ZN10SdBaseFile6removeEv>
   1381c:	88 23       	and	r24, r24
   1381e:	a1 f1       	breq	.+104    	; 0x13888 <_ZN10SdBaseFile8rmRfStarEv+0x104>
   13820:	08 94       	sec
   13822:	81 1c       	adc	r8, r1
   13824:	91 1c       	adc	r9, r1
   13826:	a4 01       	movw	r20, r8
   13828:	60 e0       	ldi	r22, 0x00	; 0
   1382a:	70 e0       	ldi	r23, 0x00	; 0
   1382c:	e5 e0       	ldi	r30, 0x05	; 5
   1382e:	44 0f       	add	r20, r20
   13830:	55 1f       	adc	r21, r21
   13832:	66 1f       	adc	r22, r22
   13834:	77 1f       	adc	r23, r23
   13836:	ea 95       	dec	r30
   13838:	d1 f7       	brne	.-12     	; 0x1382e <_ZN10SdBaseFile8rmRfStarEv+0xaa>
   1383a:	f7 01       	movw	r30, r14
   1383c:	83 85       	ldd	r24, Z+11	; 0x0b
   1383e:	94 85       	ldd	r25, Z+12	; 0x0c
   13840:	a5 85       	ldd	r26, Z+13	; 0x0d
   13842:	b6 85       	ldd	r27, Z+14	; 0x0e
   13844:	84 17       	cp	r24, r20
   13846:	95 07       	cpc	r25, r21
   13848:	a6 07       	cpc	r26, r22
   1384a:	b7 07       	cpc	r27, r23
   1384c:	29 f0       	breq	.+10     	; 0x13858 <_ZN10SdBaseFile8rmRfStarEv+0xd4>
   1384e:	c7 01       	movw	r24, r14
   13850:	0e 94 58 98 	call	0x130b0	; 0x130b0 <_ZN10SdBaseFile7seekSetEm>
   13854:	88 23       	and	r24, r24
   13856:	c1 f0       	breq	.+48     	; 0x13888 <_ZN10SdBaseFile8rmRfStarEv+0x104>
   13858:	f7 01       	movw	r30, r14
   1385a:	83 84       	ldd	r8, Z+11	; 0x0b
   1385c:	94 84       	ldd	r9, Z+12	; 0x0c
   1385e:	a5 84       	ldd	r10, Z+13	; 0x0d
   13860:	b6 84       	ldd	r11, Z+14	; 0x0e
   13862:	83 89       	ldd	r24, Z+19	; 0x13
   13864:	94 89       	ldd	r25, Z+20	; 0x14
   13866:	a5 89       	ldd	r26, Z+21	; 0x15
   13868:	b6 89       	ldd	r27, Z+22	; 0x16
   1386a:	88 16       	cp	r8, r24
   1386c:	99 06       	cpc	r9, r25
   1386e:	aa 06       	cpc	r10, r26
   13870:	bb 06       	cpc	r11, r27
   13872:	08 f4       	brcc	.+2      	; 0x13876 <_ZN10SdBaseFile8rmRfStarEv+0xf2>
   13874:	9c cf       	rjmp	.-200    	; 0x137ae <_ZN10SdBaseFile8rmRfStarEv+0x2a>
   13876:	f7 01       	movw	r30, r14
   13878:	83 81       	ldd	r24, Z+3	; 0x03
   1387a:	82 50       	subi	r24, 0x02	; 2
   1387c:	82 30       	cpi	r24, 0x02	; 2
   1387e:	30 f0       	brcs	.+12     	; 0x1388c <_ZN10SdBaseFile8rmRfStarEv+0x108>
   13880:	c7 01       	movw	r24, r14
   13882:	0e 94 d4 9a 	call	0x135a8	; 0x135a8 <_ZN10SdBaseFile5rmdirEv>
   13886:	03 c0       	rjmp	.+6      	; 0x1388e <_ZN10SdBaseFile8rmRfStarEv+0x10a>
   13888:	80 e0       	ldi	r24, 0x00	; 0
   1388a:	01 c0       	rjmp	.+2      	; 0x1388e <_ZN10SdBaseFile8rmRfStarEv+0x10a>
   1388c:	81 e0       	ldi	r24, 0x01	; 1
   1388e:	6b 96       	adiw	r28, 0x1b	; 27
   13890:	cd bf       	out	0x3d, r28	; 61
   13892:	de bf       	out	0x3e, r29	; 62
   13894:	df 91       	pop	r29
   13896:	cf 91       	pop	r28
   13898:	1f 91       	pop	r17
   1389a:	0f 91       	pop	r16
   1389c:	ff 90       	pop	r15
   1389e:	ef 90       	pop	r14
   138a0:	bf 90       	pop	r11
   138a2:	af 90       	pop	r10
   138a4:	9f 90       	pop	r9
   138a6:	8f 90       	pop	r8
   138a8:	08 95       	ret

000138aa <_ZN10SdBaseFile2lsEP5Printhh>:
   138aa:	7f 92       	push	r7
   138ac:	8f 92       	push	r8
   138ae:	9f 92       	push	r9
   138b0:	af 92       	push	r10
   138b2:	bf 92       	push	r11
   138b4:	cf 92       	push	r12
   138b6:	df 92       	push	r13
   138b8:	ef 92       	push	r14
   138ba:	ff 92       	push	r15
   138bc:	0f 93       	push	r16
   138be:	1f 93       	push	r17
   138c0:	cf 93       	push	r28
   138c2:	df 93       	push	r29
   138c4:	cd b7       	in	r28, 0x3d	; 61
   138c6:	de b7       	in	r29, 0x3e	; 62
   138c8:	6b 97       	sbiw	r28, 0x1b	; 27
   138ca:	cd bf       	out	0x3d, r28	; 61
   138cc:	de bf       	out	0x3e, r29	; 62
   138ce:	7c 01       	movw	r14, r24
   138d0:	4b 01       	movw	r8, r22
   138d2:	d4 2e       	mov	r13, r20
   138d4:	c2 2e       	mov	r12, r18
   138d6:	0e 94 f2 98 	call	0x131e4	; 0x131e4 <_ZN10SdBaseFile6rewindEv>
   138da:	ad 2c       	mov	r10, r13
   138dc:	bb 24       	eor	r11, r11
   138de:	84 e0       	ldi	r24, 0x04	; 4
   138e0:	a8 22       	and	r10, r24
   138e2:	bb 24       	eor	r11, r11
   138e4:	12 e0       	ldi	r17, 0x02	; 2
   138e6:	71 2e       	mov	r7, r17
   138e8:	7c 0c       	add	r7, r12
   138ea:	30 c0       	rjmp	.+96     	; 0x1394c <_ZN10SdBaseFile2lsEP5Printhh+0xa2>
   138ec:	82 30       	cpi	r24, 0x02	; 2
   138ee:	74 f1       	brlt	.+92     	; 0x1394c <_ZN10SdBaseFile2lsEP5Printhh+0xa2>
   138f0:	a1 14       	cp	r10, r1
   138f2:	b1 04       	cpc	r11, r1
   138f4:	59 f1       	breq	.+86     	; 0x1394c <_ZN10SdBaseFile2lsEP5Printhh+0xa2>
   138f6:	f7 01       	movw	r30, r14
   138f8:	03 85       	ldd	r16, Z+11	; 0x0b
   138fa:	14 85       	ldd	r17, Z+12	; 0x0c
   138fc:	25 85       	ldd	r18, Z+13	; 0x0d
   138fe:	36 85       	ldd	r19, Z+14	; 0x0e
   13900:	b5 e0       	ldi	r27, 0x05	; 5
   13902:	36 95       	lsr	r19
   13904:	27 95       	ror	r18
   13906:	17 95       	ror	r17
   13908:	07 95       	ror	r16
   1390a:	ba 95       	dec	r27
   1390c:	d1 f7       	brne	.-12     	; 0x13902 <_ZN10SdBaseFile2lsEP5Printhh+0x58>
   1390e:	19 82       	std	Y+1, r1	; 0x01
   13910:	1c 82       	std	Y+4, r1	; 0x04
   13912:	a8 01       	movw	r20, r16
   13914:	41 50       	subi	r20, 0x01	; 1
   13916:	50 40       	sbci	r21, 0x00	; 0
   13918:	ce 01       	movw	r24, r28
   1391a:	01 96       	adiw	r24, 0x01	; 1
   1391c:	b7 01       	movw	r22, r14
   1391e:	21 e0       	ldi	r18, 0x01	; 1
   13920:	0e 94 7f 9b 	call	0x136fe	; 0x136fe <_ZN10SdBaseFile4openEPS_jh>
   13924:	88 23       	and	r24, r24
   13926:	39 f0       	breq	.+14     	; 0x13936 <_ZN10SdBaseFile2lsEP5Printhh+0x8c>
   13928:	ce 01       	movw	r24, r28
   1392a:	01 96       	adiw	r24, 0x01	; 1
   1392c:	b4 01       	movw	r22, r8
   1392e:	4d 2d       	mov	r20, r13
   13930:	27 2d       	mov	r18, r7
   13932:	0e 94 55 9c 	call	0x138aa	; 0x138aa <_ZN10SdBaseFile2lsEP5Printhh>
   13936:	a8 01       	movw	r20, r16
   13938:	a5 e0       	ldi	r26, 0x05	; 5
   1393a:	44 0f       	add	r20, r20
   1393c:	55 1f       	adc	r21, r21
   1393e:	aa 95       	dec	r26
   13940:	e1 f7       	brne	.-8      	; 0x1393a <_ZN10SdBaseFile2lsEP5Printhh+0x90>
   13942:	60 e0       	ldi	r22, 0x00	; 0
   13944:	70 e0       	ldi	r23, 0x00	; 0
   13946:	c7 01       	movw	r24, r14
   13948:	0e 94 58 98 	call	0x130b0	; 0x130b0 <_ZN10SdBaseFile7seekSetEm>
   1394c:	c7 01       	movw	r24, r14
   1394e:	b4 01       	movw	r22, r8
   13950:	4d 2d       	mov	r20, r13
   13952:	2c 2d       	mov	r18, r12
   13954:	0e 94 4f 97 	call	0x12e9e	; 0x12e9e <_ZN10SdBaseFile11lsPrintNextEP5Printhh>
   13958:	88 23       	and	r24, r24
   1395a:	41 f6       	brne	.-112    	; 0x138ec <_ZN10SdBaseFile2lsEP5Printhh+0x42>
   1395c:	6b 96       	adiw	r28, 0x1b	; 27
   1395e:	cd bf       	out	0x3d, r28	; 61
   13960:	de bf       	out	0x3e, r29	; 62
   13962:	df 91       	pop	r29
   13964:	cf 91       	pop	r28
   13966:	1f 91       	pop	r17
   13968:	0f 91       	pop	r16
   1396a:	ff 90       	pop	r15
   1396c:	ef 90       	pop	r14
   1396e:	df 90       	pop	r13
   13970:	cf 90       	pop	r12
   13972:	bf 90       	pop	r11
   13974:	af 90       	pop	r10
   13976:	9f 90       	pop	r9
   13978:	8f 90       	pop	r8
   1397a:	7f 90       	pop	r7
   1397c:	08 95       	ret

0001397e <_ZN10SdBaseFile4openEPS_PKhh>:
   1397e:	7f 92       	push	r7
   13980:	8f 92       	push	r8
   13982:	9f 92       	push	r9
   13984:	af 92       	push	r10
   13986:	bf 92       	push	r11
   13988:	cf 92       	push	r12
   1398a:	df 92       	push	r13
   1398c:	ef 92       	push	r14
   1398e:	ff 92       	push	r15
   13990:	0f 93       	push	r16
   13992:	1f 93       	push	r17
   13994:	cf 93       	push	r28
   13996:	df 93       	push	r29
   13998:	5c 01       	movw	r10, r24
   1399a:	eb 01       	movw	r28, r22
   1399c:	94 2e       	mov	r9, r20
   1399e:	85 2e       	mov	r8, r21
   139a0:	72 2e       	mov	r7, r18
   139a2:	8d 81       	ldd	r24, Y+5	; 0x05
   139a4:	9e 81       	ldd	r25, Y+6	; 0x06
   139a6:	f5 01       	movw	r30, r10
   139a8:	85 83       	std	Z+5, r24	; 0x05
   139aa:	96 83       	std	Z+6, r25	; 0x06
   139ac:	cb 01       	movw	r24, r22
   139ae:	0e 94 f2 98 	call	0x131e4	; 0x131e4 <_ZN10SdBaseFile6rewindEv>
   139b2:	10 e0       	ldi	r17, 0x00	; 0
   139b4:	37 c0       	rjmp	.+110    	; 0x13a24 <_ZN10SdBaseFile4openEPS_PKhh+0xa6>
   139b6:	ce 01       	movw	r24, r28
   139b8:	0e 94 1e 98 	call	0x1303c	; 0x1303c <_ZN10SdBaseFile12readDirCacheEv>
   139bc:	bc 01       	movw	r22, r24
   139be:	00 97       	sbiw	r24, 0x00	; 0
   139c0:	09 f4       	brne	.+2      	; 0x139c4 <_ZN10SdBaseFile4openEPS_PKhh+0x46>
   139c2:	8e c0       	rjmp	.+284    	; 0x13ae0 <_ZN10SdBaseFile4openEPS_PKhh+0x162>
   139c4:	d7 01       	movw	r26, r14
   139c6:	c6 01       	movw	r24, r12
   139c8:	45 e0       	ldi	r20, 0x05	; 5
   139ca:	b6 95       	lsr	r27
   139cc:	a7 95       	ror	r26
   139ce:	97 95       	ror	r25
   139d0:	87 95       	ror	r24
   139d2:	4a 95       	dec	r20
   139d4:	d1 f7       	brne	.-12     	; 0x139ca <_ZN10SdBaseFile4openEPS_PKhh+0x4c>
   139d6:	08 2f       	mov	r16, r24
   139d8:	0f 70       	andi	r16, 0x0F	; 15
   139da:	fb 01       	movw	r30, r22
   139dc:	80 81       	ld	r24, Z
   139de:	88 23       	and	r24, r24
   139e0:	11 f0       	breq	.+4      	; 0x139e6 <_ZN10SdBaseFile4openEPS_PKhh+0x68>
   139e2:	85 3e       	cpi	r24, 0xE5	; 229
   139e4:	b1 f4       	brne	.+44     	; 0x13a12 <_ZN10SdBaseFile4openEPS_PKhh+0x94>
   139e6:	11 23       	and	r17, r17
   139e8:	79 f4       	brne	.+30     	; 0x13a08 <_ZN10SdBaseFile4openEPS_PKhh+0x8a>
   139ea:	80 91 cb 25 	lds	r24, 0x25CB
   139ee:	90 91 cc 25 	lds	r25, 0x25CC
   139f2:	a0 91 cd 25 	lds	r26, 0x25CD
   139f6:	b0 91 ce 25 	lds	r27, 0x25CE
   139fa:	f5 01       	movw	r30, r10
   139fc:	87 87       	std	Z+15, r24	; 0x0f
   139fe:	90 8b       	std	Z+16, r25	; 0x10
   13a00:	a1 8b       	std	Z+17, r26	; 0x11
   13a02:	b2 8b       	std	Z+18, r27	; 0x12
   13a04:	04 83       	std	Z+4, r16	; 0x04
   13a06:	11 e0       	ldi	r17, 0x01	; 1
   13a08:	fb 01       	movw	r30, r22
   13a0a:	80 81       	ld	r24, Z
   13a0c:	88 23       	and	r24, r24
   13a0e:	51 f4       	brne	.+20     	; 0x13a24 <_ZN10SdBaseFile4openEPS_PKhh+0xa6>
   13a10:	17 c0       	rjmp	.+46     	; 0x13a40 <_ZN10SdBaseFile4openEPS_PKhh+0xc2>
   13a12:	89 2d       	mov	r24, r9
   13a14:	98 2d       	mov	r25, r8
   13a16:	4b e0       	ldi	r20, 0x0B	; 11
   13a18:	50 e0       	ldi	r21, 0x00	; 0
   13a1a:	0e 94 aa b1 	call	0x16354	; 0x16354 <memcmp>
   13a1e:	00 97       	sbiw	r24, 0x00	; 0
   13a20:	09 f4       	brne	.+2      	; 0x13a24 <_ZN10SdBaseFile4openEPS_PKhh+0xa6>
   13a22:	6d c0       	rjmp	.+218    	; 0x13afe <_ZN10SdBaseFile4openEPS_PKhh+0x180>
   13a24:	cb 84       	ldd	r12, Y+11	; 0x0b
   13a26:	dc 84       	ldd	r13, Y+12	; 0x0c
   13a28:	ed 84       	ldd	r14, Y+13	; 0x0d
   13a2a:	fe 84       	ldd	r15, Y+14	; 0x0e
   13a2c:	8b 89       	ldd	r24, Y+19	; 0x13
   13a2e:	9c 89       	ldd	r25, Y+20	; 0x14
   13a30:	ad 89       	ldd	r26, Y+21	; 0x15
   13a32:	be 89       	ldd	r27, Y+22	; 0x16
   13a34:	c8 16       	cp	r12, r24
   13a36:	d9 06       	cpc	r13, r25
   13a38:	ea 06       	cpc	r14, r26
   13a3a:	fb 06       	cpc	r15, r27
   13a3c:	08 f4       	brcc	.+2      	; 0x13a40 <_ZN10SdBaseFile4openEPS_PKhh+0xc2>
   13a3e:	bb cf       	rjmp	.-138    	; 0x139b6 <_ZN10SdBaseFile4openEPS_PKhh+0x38>
   13a40:	76 fe       	sbrs	r7, 6
   13a42:	4e c0       	rjmp	.+156    	; 0x13ae0 <_ZN10SdBaseFile4openEPS_PKhh+0x162>
   13a44:	71 fe       	sbrs	r7, 1
   13a46:	4c c0       	rjmp	.+152    	; 0x13ae0 <_ZN10SdBaseFile4openEPS_PKhh+0x162>
   13a48:	11 23       	and	r17, r17
   13a4a:	51 f0       	breq	.+20     	; 0x13a60 <_ZN10SdBaseFile4openEPS_PKhh+0xe2>
   13a4c:	f5 01       	movw	r30, r10
   13a4e:	04 81       	ldd	r16, Z+4	; 0x04
   13a50:	c5 01       	movw	r24, r10
   13a52:	61 e0       	ldi	r22, 0x01	; 1
   13a54:	0e 94 d5 94 	call	0x129aa	; 0x129aa <_ZN10SdBaseFile13cacheDirEntryEh>
   13a58:	ec 01       	movw	r28, r24
   13a5a:	00 97       	sbiw	r24, 0x00	; 0
   13a5c:	59 f4       	brne	.+22     	; 0x13a74 <_ZN10SdBaseFile4openEPS_PKhh+0xf6>
   13a5e:	40 c0       	rjmp	.+128    	; 0x13ae0 <_ZN10SdBaseFile4openEPS_PKhh+0x162>
   13a60:	8b 81       	ldd	r24, Y+3	; 0x03
   13a62:	82 30       	cpi	r24, 0x02	; 2
   13a64:	e9 f1       	breq	.+122    	; 0x13ae0 <_ZN10SdBaseFile4openEPS_PKhh+0x162>
   13a66:	ce 01       	movw	r24, r28
   13a68:	0e 94 59 94 	call	0x128b2	; 0x128b2 <_ZN10SdBaseFile13addDirClusterEv>
   13a6c:	00 97       	sbiw	r24, 0x00	; 0
   13a6e:	c1 f1       	breq	.+112    	; 0x13ae0 <_ZN10SdBaseFile4openEPS_PKhh+0x162>
   13a70:	ec 01       	movw	r28, r24
   13a72:	00 e0       	ldi	r16, 0x00	; 0
   13a74:	80 e2       	ldi	r24, 0x20	; 32
   13a76:	fe 01       	movw	r30, r28
   13a78:	11 92       	st	Z+, r1
   13a7a:	8a 95       	dec	r24
   13a7c:	e9 f7       	brne	.-6      	; 0x13a78 <_ZN10SdBaseFile4openEPS_PKhh+0xfa>
   13a7e:	fe 01       	movw	r30, r28
   13a80:	a9 2d       	mov	r26, r9
   13a82:	b8 2d       	mov	r27, r8
   13a84:	8b e0       	ldi	r24, 0x0B	; 11
   13a86:	0d 90       	ld	r0, X+
   13a88:	01 92       	st	Z+, r0
   13a8a:	81 50       	subi	r24, 0x01	; 1
   13a8c:	e1 f7       	brne	.-8      	; 0x13a86 <_ZN10SdBaseFile4openEPS_PKhh+0x108>
   13a8e:	e0 91 c0 25 	lds	r30, 0x25C0
   13a92:	f0 91 c1 25 	lds	r31, 0x25C1
   13a96:	30 97       	sbiw	r30, 0x00	; 0
   13a98:	39 f0       	breq	.+14     	; 0x13aa8 <_ZN10SdBaseFile4openEPS_PKhh+0x12a>
   13a9a:	be 01       	movw	r22, r28
   13a9c:	62 5f       	subi	r22, 0xF2	; 242
   13a9e:	7f 4f       	sbci	r23, 0xFF	; 255
   13aa0:	ce 01       	movw	r24, r28
   13aa2:	40 96       	adiw	r24, 0x10	; 16
   13aa4:	19 95       	eicall
   13aa6:	08 c0       	rjmp	.+16     	; 0x13ab8 <_ZN10SdBaseFile4openEPS_PKhh+0x13a>
   13aa8:	81 e2       	ldi	r24, 0x21	; 33
   13aaa:	98 e2       	ldi	r25, 0x28	; 40
   13aac:	88 8b       	std	Y+16, r24	; 0x10
   13aae:	99 8b       	std	Y+17, r25	; 0x11
   13ab0:	80 e0       	ldi	r24, 0x00	; 0
   13ab2:	98 e0       	ldi	r25, 0x08	; 8
   13ab4:	8e 87       	std	Y+14, r24	; 0x0e
   13ab6:	9f 87       	std	Y+15, r25	; 0x0f
   13ab8:	88 89       	ldd	r24, Y+16	; 0x10
   13aba:	99 89       	ldd	r25, Y+17	; 0x11
   13abc:	8a 8b       	std	Y+18, r24	; 0x12
   13abe:	9b 8b       	std	Y+19, r25	; 0x13
   13ac0:	88 8f       	std	Y+24, r24	; 0x18
   13ac2:	99 8f       	std	Y+25, r25	; 0x19
   13ac4:	8e 85       	ldd	r24, Y+14	; 0x0e
   13ac6:	9f 85       	ldd	r25, Y+15	; 0x0f
   13ac8:	8e 8b       	std	Y+22, r24	; 0x16
   13aca:	9f 8b       	std	Y+23, r25	; 0x17
   13acc:	0e 94 9a a2 	call	0x14534	; 0x14534 <_ZN8SdVolume9cacheSyncEv>
   13ad0:	88 23       	and	r24, r24
   13ad2:	31 f0       	breq	.+12     	; 0x13ae0 <_ZN10SdBaseFile4openEPS_PKhh+0x162>
   13ad4:	c5 01       	movw	r24, r10
   13ad6:	60 2f       	mov	r22, r16
   13ad8:	47 2d       	mov	r20, r7
   13ada:	0e 94 08 9b 	call	0x13610	; 0x13610 <_ZN10SdBaseFile15openCachedEntryEhh>
   13ade:	01 c0       	rjmp	.+2      	; 0x13ae2 <_ZN10SdBaseFile4openEPS_PKhh+0x164>
   13ae0:	80 e0       	ldi	r24, 0x00	; 0
   13ae2:	df 91       	pop	r29
   13ae4:	cf 91       	pop	r28
   13ae6:	1f 91       	pop	r17
   13ae8:	0f 91       	pop	r16
   13aea:	ff 90       	pop	r15
   13aec:	ef 90       	pop	r14
   13aee:	df 90       	pop	r13
   13af0:	cf 90       	pop	r12
   13af2:	bf 90       	pop	r11
   13af4:	af 90       	pop	r10
   13af6:	9f 90       	pop	r9
   13af8:	8f 90       	pop	r8
   13afa:	7f 90       	pop	r7
   13afc:	08 95       	ret
   13afe:	77 fe       	sbrs	r7, 7
   13b00:	e9 cf       	rjmp	.-46     	; 0x13ad4 <_ZN10SdBaseFile4openEPS_PKhh+0x156>
   13b02:	ee cf       	rjmp	.-36     	; 0x13ae0 <_ZN10SdBaseFile4openEPS_PKhh+0x162>

00013b04 <_ZN10SdBaseFile4openEPS_PKch>:
   13b04:	5f 92       	push	r5
   13b06:	6f 92       	push	r6
   13b08:	7f 92       	push	r7
   13b0a:	8f 92       	push	r8
   13b0c:	9f 92       	push	r9
   13b0e:	af 92       	push	r10
   13b10:	bf 92       	push	r11
   13b12:	cf 92       	push	r12
   13b14:	df 92       	push	r13
   13b16:	ef 92       	push	r14
   13b18:	ff 92       	push	r15
   13b1a:	0f 93       	push	r16
   13b1c:	1f 93       	push	r17
   13b1e:	cf 93       	push	r28
   13b20:	df 93       	push	r29
   13b22:	cd b7       	in	r28, 0x3d	; 61
   13b24:	de b7       	in	r29, 0x3e	; 62
   13b26:	c3 54       	subi	r28, 0x43	; 67
   13b28:	d0 40       	sbci	r29, 0x00	; 0
   13b2a:	cd bf       	out	0x3d, r28	; 61
   13b2c:	de bf       	out	0x3e, r29	; 62
   13b2e:	4c 01       	movw	r8, r24
   13b30:	6b 01       	movw	r12, r22
   13b32:	24 96       	adiw	r28, 0x04	; 4
   13b34:	4e af       	sts	0x7e, r20
   13b36:	5f af       	sts	0x7f, r21
   13b38:	24 97       	sbiw	r28, 0x04	; 4
   13b3a:	52 2e       	mov	r5, r18
   13b3c:	1f a2       	lds	r17, 0x9f
   13b3e:	1a a6       	lds	r17, 0xba
   13b40:	1c 86       	std	Y+12, r1	; 0x0c
   13b42:	1f 86       	std	Y+15, r1	; 0x0f
   13b44:	61 15       	cp	r22, r1
   13b46:	71 05       	cpc	r23, r1
   13b48:	09 f4       	brne	.+2      	; 0x13b4c <_ZN10SdBaseFile4openEPS_PKch+0x48>
   13b4a:	79 c0       	rjmp	.+242    	; 0x13c3e <_ZN10SdBaseFile4openEPS_PKch+0x13a>
   13b4c:	fc 01       	movw	r30, r24
   13b4e:	83 81       	ldd	r24, Z+3	; 0x03
   13b50:	88 23       	and	r24, r24
   13b52:	09 f0       	breq	.+2      	; 0x13b56 <_ZN10SdBaseFile4openEPS_PKch+0x52>
   13b54:	74 c0       	rjmp	.+232    	; 0x13c3e <_ZN10SdBaseFile4openEPS_PKch+0x13a>
   13b56:	fa 01       	movw	r30, r20
   13b58:	80 81       	ld	r24, Z
   13b5a:	8f 32       	cpi	r24, 0x2F	; 47
   13b5c:	91 f4       	brne	.+36     	; 0x13b82 <_ZN10SdBaseFile4openEPS_PKch+0x7e>
   13b5e:	05 c0       	rjmp	.+10     	; 0x13b6a <_ZN10SdBaseFile4openEPS_PKch+0x66>
   13b60:	31 96       	adiw	r30, 0x01	; 1
   13b62:	24 96       	adiw	r28, 0x04	; 4
   13b64:	ee af       	sts	0x7e, r30
   13b66:	ff af       	sts	0x7f, r31
   13b68:	24 97       	sbiw	r28, 0x04	; 4
   13b6a:	24 96       	adiw	r28, 0x04	; 4
   13b6c:	ee ad       	sts	0x6e, r30
   13b6e:	ff ad       	sts	0x6f, r31
   13b70:	24 97       	sbiw	r28, 0x04	; 4
   13b72:	80 81       	ld	r24, Z
   13b74:	8f 32       	cpi	r24, 0x2F	; 47
   13b76:	a1 f3       	breq	.-24     	; 0x13b60 <_ZN10SdBaseFile4openEPS_PKch+0x5c>
   13b78:	f6 01       	movw	r30, r12
   13b7a:	83 81       	ldd	r24, Z+3	; 0x03
   13b7c:	82 50       	subi	r24, 0x02	; 2
   13b7e:	82 30       	cpi	r24, 0x02	; 2
   13b80:	50 f4       	brcc	.+20     	; 0x13b96 <_ZN10SdBaseFile4openEPS_PKch+0x92>
   13b82:	86 01       	movw	r16, r12
   13b84:	67 e2       	ldi	r22, 0x27	; 39
   13b86:	e6 2e       	mov	r14, r22
   13b88:	f1 2c       	mov	r15, r1
   13b8a:	ec 0e       	add	r14, r28
   13b8c:	fd 1e       	adc	r15, r29
   13b8e:	37 01       	movw	r6, r14
   13b90:	be 2c       	mov	r11, r14
   13b92:	af 2c       	mov	r10, r15
   13b94:	11 c0       	rjmp	.+34     	; 0x13bb8 <_ZN10SdBaseFile4openEPS_PKch+0xb4>
   13b96:	f6 01       	movw	r30, r12
   13b98:	65 81       	ldd	r22, Z+5	; 0x05
   13b9a:	76 81       	ldd	r23, Z+6	; 0x06
   13b9c:	ce 01       	movw	r24, r28
   13b9e:	0c 96       	adiw	r24, 0x0c	; 12
   13ba0:	0e 94 5f 99 	call	0x132be	; 0x132be <_ZN10SdBaseFile8openRootEP8SdVolume>
   13ba4:	88 23       	and	r24, r24
   13ba6:	09 f4       	brne	.+2      	; 0x13baa <_ZN10SdBaseFile4openEPS_PKch+0xa6>
   13ba8:	4a c0       	rjmp	.+148    	; 0x13c3e <_ZN10SdBaseFile4openEPS_PKch+0x13a>
   13baa:	8e 01       	movw	r16, r28
   13bac:	04 5f       	subi	r16, 0xF4	; 244
   13bae:	1f 4f       	sbci	r17, 0xFF	; 255
   13bb0:	e9 cf       	rjmp	.-46     	; 0x13b84 <_ZN10SdBaseFile4openEPS_PKch+0x80>
   13bb2:	87 01       	movw	r16, r14
   13bb4:	eb 2c       	mov	r14, r11
   13bb6:	fa 2c       	mov	r15, r10
   13bb8:	24 96       	adiw	r28, 0x04	; 4
   13bba:	8e ad       	sts	0x6e, r24
   13bbc:	9f ad       	sts	0x6f, r25
   13bbe:	24 97       	sbiw	r28, 0x04	; 4
   13bc0:	be 01       	movw	r22, r28
   13bc2:	6f 5f       	subi	r22, 0xFF	; 255
   13bc4:	7f 4f       	sbci	r23, 0xFF	; 255
   13bc6:	ae 01       	movw	r20, r28
   13bc8:	4e 5b       	subi	r20, 0xBE	; 190
   13bca:	5f 4f       	sbci	r21, 0xFF	; 255
   13bcc:	0e 94 2c 95 	call	0x12a58	; 0x12a58 <_ZN10SdBaseFile10make83NameEPKcPhPS1_>
   13bd0:	88 23       	and	r24, r24
   13bd2:	31 f4       	brne	.+12     	; 0x13be0 <_ZN10SdBaseFile4openEPS_PKch+0xdc>
   13bd4:	34 c0       	rjmp	.+104    	; 0x13c3e <_ZN10SdBaseFile4openEPS_PKch+0x13a>
   13bd6:	31 96       	adiw	r30, 0x01	; 1
   13bd8:	24 96       	adiw	r28, 0x04	; 4
   13bda:	ee af       	sts	0x7e, r30
   13bdc:	ff af       	sts	0x7f, r31
   13bde:	24 97       	sbiw	r28, 0x04	; 4
   13be0:	24 96       	adiw	r28, 0x04	; 4
   13be2:	ee ad       	sts	0x6e, r30
   13be4:	ff ad       	sts	0x6f, r31
   13be6:	24 97       	sbiw	r28, 0x04	; 4
   13be8:	80 81       	ld	r24, Z
   13bea:	8f 32       	cpi	r24, 0x2F	; 47
   13bec:	a1 f3       	breq	.-24     	; 0x13bd6 <_ZN10SdBaseFile4openEPS_PKch+0xd2>
   13bee:	88 23       	and	r24, r24
   13bf0:	e9 f0       	breq	.+58     	; 0x13c2c <_ZN10SdBaseFile4openEPS_PKch+0x128>
   13bf2:	c7 01       	movw	r24, r14
   13bf4:	b8 01       	movw	r22, r16
   13bf6:	ae 01       	movw	r20, r28
   13bf8:	4f 5f       	subi	r20, 0xFF	; 255
   13bfa:	5f 4f       	sbci	r21, 0xFF	; 255
   13bfc:	21 e0       	ldi	r18, 0x01	; 1
   13bfe:	0e 94 bf 9c 	call	0x1397e	; 0x1397e <_ZN10SdBaseFile4openEPS_PKhh>
   13c02:	88 23       	and	r24, r24
   13c04:	e1 f0       	breq	.+56     	; 0x13c3e <_ZN10SdBaseFile4openEPS_PKch+0x13a>
   13c06:	0c 15       	cp	r16, r12
   13c08:	1d 05       	cpc	r17, r13
   13c0a:	29 f0       	breq	.+10     	; 0x13c16 <_ZN10SdBaseFile4openEPS_PKch+0x112>
   13c0c:	c8 01       	movw	r24, r16
   13c0e:	0e 94 a7 99 	call	0x1334e	; 0x1334e <_ZN10SdBaseFile4syncEv>
   13c12:	f8 01       	movw	r30, r16
   13c14:	13 82       	std	Z+3, r1	; 0x03
   13c16:	e6 14       	cp	r14, r6
   13c18:	f7 04       	cpc	r15, r7
   13c1a:	59 f6       	brne	.-106    	; 0x13bb2 <_ZN10SdBaseFile4openEPS_PKch+0xae>
   13c1c:	5c e0       	ldi	r21, 0x0C	; 12
   13c1e:	e5 2e       	mov	r14, r21
   13c20:	f1 2c       	mov	r15, r1
   13c22:	ec 0e       	add	r14, r28
   13c24:	fd 1e       	adc	r15, r29
   13c26:	0b 2d       	mov	r16, r11
   13c28:	1a 2d       	mov	r17, r10
   13c2a:	c6 cf       	rjmp	.-116    	; 0x13bb8 <_ZN10SdBaseFile4openEPS_PKch+0xb4>
   13c2c:	c4 01       	movw	r24, r8
   13c2e:	b8 01       	movw	r22, r16
   13c30:	ae 01       	movw	r20, r28
   13c32:	4f 5f       	subi	r20, 0xFF	; 255
   13c34:	5f 4f       	sbci	r21, 0xFF	; 255
   13c36:	25 2d       	mov	r18, r5
   13c38:	0e 94 bf 9c 	call	0x1397e	; 0x1397e <_ZN10SdBaseFile4openEPS_PKhh>
   13c3c:	01 c0       	rjmp	.+2      	; 0x13c40 <_ZN10SdBaseFile4openEPS_PKch+0x13c>
   13c3e:	80 e0       	ldi	r24, 0x00	; 0
   13c40:	cd 5b       	subi	r28, 0xBD	; 189
   13c42:	df 4f       	sbci	r29, 0xFF	; 255
   13c44:	cd bf       	out	0x3d, r28	; 61
   13c46:	de bf       	out	0x3e, r29	; 62
   13c48:	df 91       	pop	r29
   13c4a:	cf 91       	pop	r28
   13c4c:	1f 91       	pop	r17
   13c4e:	0f 91       	pop	r16
   13c50:	ff 90       	pop	r15
   13c52:	ef 90       	pop	r14
   13c54:	df 90       	pop	r13
   13c56:	cf 90       	pop	r12
   13c58:	bf 90       	pop	r11
   13c5a:	af 90       	pop	r10
   13c5c:	9f 90       	pop	r9
   13c5e:	8f 90       	pop	r8
   13c60:	7f 90       	pop	r7
   13c62:	6f 90       	pop	r6
   13c64:	5f 90       	pop	r5
   13c66:	08 95       	ret

00013c68 <_ZN10SdBaseFile6removeEPS_PKc>:
   13c68:	cf 93       	push	r28
   13c6a:	df 93       	push	r29
   13c6c:	cd b7       	in	r28, 0x3d	; 61
   13c6e:	de b7       	in	r29, 0x3e	; 62
   13c70:	6b 97       	sbiw	r28, 0x1b	; 27
   13c72:	cd bf       	out	0x3d, r28	; 61
   13c74:	de bf       	out	0x3e, r29	; 62
   13c76:	9c 01       	movw	r18, r24
   13c78:	ab 01       	movw	r20, r22
   13c7a:	19 82       	std	Y+1, r1	; 0x01
   13c7c:	1c 82       	std	Y+4, r1	; 0x04
   13c7e:	ce 01       	movw	r24, r28
   13c80:	01 96       	adiw	r24, 0x01	; 1
   13c82:	b9 01       	movw	r22, r18
   13c84:	22 e0       	ldi	r18, 0x02	; 2
   13c86:	0e 94 82 9d 	call	0x13b04	; 0x13b04 <_ZN10SdBaseFile4openEPS_PKch>
   13c8a:	88 23       	and	r24, r24
   13c8c:	29 f0       	breq	.+10     	; 0x13c98 <_ZN10SdBaseFile6removeEPS_PKc+0x30>
   13c8e:	ce 01       	movw	r24, r28
   13c90:	01 96       	adiw	r24, 0x01	; 1
   13c92:	0e 94 b9 9a 	call	0x13572	; 0x13572 <_ZN10SdBaseFile6removeEv>
   13c96:	01 c0       	rjmp	.+2      	; 0x13c9a <_ZN10SdBaseFile6removeEPS_PKc+0x32>
   13c98:	80 e0       	ldi	r24, 0x00	; 0
   13c9a:	6b 96       	adiw	r28, 0x1b	; 27
   13c9c:	cd bf       	out	0x3d, r28	; 61
   13c9e:	de bf       	out	0x3e, r29	; 62
   13ca0:	df 91       	pop	r29
   13ca2:	cf 91       	pop	r28
   13ca4:	08 95       	ret

00013ca6 <_ZN10SdBaseFile4openEPKch>:
   13ca6:	fb 01       	movw	r30, r22
   13ca8:	24 2f       	mov	r18, r20
   13caa:	60 91 c2 25 	lds	r22, 0x25C2
   13cae:	70 91 c3 25 	lds	r23, 0x25C3
   13cb2:	af 01       	movw	r20, r30
   13cb4:	0e 94 82 9d 	call	0x13b04	; 0x13b04 <_ZN10SdBaseFile4openEPS_PKch>
   13cb8:	08 95       	ret

00013cba <_ZN10SdBaseFile5mkdirEPS_PKh>:
   13cba:	af 92       	push	r10
   13cbc:	bf 92       	push	r11
   13cbe:	cf 92       	push	r12
   13cc0:	df 92       	push	r13
   13cc2:	ef 92       	push	r14
   13cc4:	ff 92       	push	r15
   13cc6:	0f 93       	push	r16
   13cc8:	1f 93       	push	r17
   13cca:	cf 93       	push	r28
   13ccc:	df 93       	push	r29
   13cce:	cd b7       	in	r28, 0x3d	; 61
   13cd0:	de b7       	in	r29, 0x3e	; 62
   13cd2:	a0 97       	sbiw	r28, 0x20	; 32
   13cd4:	cd bf       	out	0x3d, r28	; 61
   13cd6:	de bf       	out	0x3e, r29	; 62
   13cd8:	8c 01       	movw	r16, r24
   13cda:	7b 01       	movw	r14, r22
   13cdc:	fb 01       	movw	r30, r22
   13cde:	83 81       	ldd	r24, Z+3	; 0x03
   13ce0:	82 30       	cpi	r24, 0x02	; 2
   13ce2:	08 f4       	brcc	.+2      	; 0x13ce6 <_ZN10SdBaseFile5mkdirEPS_PKh+0x2c>
   13ce4:	7f c0       	rjmp	.+254    	; 0x13de4 <_ZN10SdBaseFile5mkdirEPS_PKh+0x12a>
   13ce6:	c8 01       	movw	r24, r16
   13ce8:	23 ec       	ldi	r18, 0xC3	; 195
   13cea:	0e 94 bf 9c 	call	0x1397e	; 0x1397e <_ZN10SdBaseFile4openEPS_PKhh>
   13cee:	88 23       	and	r24, r24
   13cf0:	09 f4       	brne	.+2      	; 0x13cf4 <_ZN10SdBaseFile5mkdirEPS_PKh+0x3a>
   13cf2:	78 c0       	rjmp	.+240    	; 0x13de4 <_ZN10SdBaseFile5mkdirEPS_PKh+0x12a>
   13cf4:	81 e0       	ldi	r24, 0x01	; 1
   13cf6:	f8 01       	movw	r30, r16
   13cf8:	81 83       	std	Z+1, r24	; 0x01
   13cfa:	84 e0       	ldi	r24, 0x04	; 4
   13cfc:	83 83       	std	Z+3, r24	; 0x03
   13cfe:	c8 01       	movw	r24, r16
   13d00:	0e 94 59 94 	call	0x128b2	; 0x128b2 <_ZN10SdBaseFile13addDirClusterEv>
   13d04:	00 97       	sbiw	r24, 0x00	; 0
   13d06:	09 f4       	brne	.+2      	; 0x13d0a <_ZN10SdBaseFile5mkdirEPS_PKh+0x50>
   13d08:	6d c0       	rjmp	.+218    	; 0x13de4 <_ZN10SdBaseFile5mkdirEPS_PKh+0x12a>
   13d0a:	c8 01       	movw	r24, r16
   13d0c:	0e 94 a7 99 	call	0x1334e	; 0x1334e <_ZN10SdBaseFile4syncEv>
   13d10:	88 23       	and	r24, r24
   13d12:	09 f4       	brne	.+2      	; 0x13d16 <_ZN10SdBaseFile5mkdirEPS_PKh+0x5c>
   13d14:	67 c0       	rjmp	.+206    	; 0x13de4 <_ZN10SdBaseFile5mkdirEPS_PKh+0x12a>
   13d16:	c8 01       	movw	r24, r16
   13d18:	61 e0       	ldi	r22, 0x01	; 1
   13d1a:	0e 94 d5 94 	call	0x129aa	; 0x129aa <_ZN10SdBaseFile13cacheDirEntryEh>
   13d1e:	dc 01       	movw	r26, r24
   13d20:	00 97       	sbiw	r24, 0x00	; 0
   13d22:	09 f4       	brne	.+2      	; 0x13d26 <_ZN10SdBaseFile5mkdirEPS_PKh+0x6c>
   13d24:	5f c0       	rjmp	.+190    	; 0x13de4 <_ZN10SdBaseFile5mkdirEPS_PKh+0x12a>
   13d26:	80 e1       	ldi	r24, 0x10	; 16
   13d28:	1b 96       	adiw	r26, 0x0b	; 11
   13d2a:	8c 93       	st	X, r24
   13d2c:	1b 97       	sbiw	r26, 0x0b	; 11
   13d2e:	ae 01       	movw	r20, r28
   13d30:	4f 5f       	subi	r20, 0xFF	; 255
   13d32:	5f 4f       	sbci	r21, 0xFF	; 255
   13d34:	cd 01       	movw	r24, r26
   13d36:	20 e2       	ldi	r18, 0x20	; 32
   13d38:	fc 01       	movw	r30, r24
   13d3a:	01 90       	ld	r0, Z+
   13d3c:	cf 01       	movw	r24, r30
   13d3e:	fa 01       	movw	r30, r20
   13d40:	01 92       	st	Z+, r0
   13d42:	af 01       	movw	r20, r30
   13d44:	21 50       	subi	r18, 0x01	; 1
   13d46:	c1 f7       	brne	.-16     	; 0x13d38 <_ZN10SdBaseFile5mkdirEPS_PKh+0x7e>
   13d48:	54 96       	adiw	r26, 0x14	; 20
   13d4a:	ad 90       	ld	r10, X+
   13d4c:	bc 90       	ld	r11, X
   13d4e:	55 97       	sbiw	r26, 0x15	; 21
   13d50:	5a 96       	adiw	r26, 0x1a	; 26
   13d52:	cd 90       	ld	r12, X+
   13d54:	dc 90       	ld	r13, X
   13d56:	5b 97       	sbiw	r26, 0x1b	; 27
   13d58:	8e e2       	ldi	r24, 0x2E	; 46
   13d5a:	89 83       	std	Y+1, r24	; 0x01
   13d5c:	fe 01       	movw	r30, r28
   13d5e:	32 96       	adiw	r30, 0x02	; 2
   13d60:	8a e0       	ldi	r24, 0x0A	; 10
   13d62:	90 e2       	ldi	r25, 0x20	; 32
   13d64:	91 93       	st	Z+, r25
   13d66:	81 50       	subi	r24, 0x01	; 1
   13d68:	e9 f7       	brne	.-6      	; 0x13d64 <_ZN10SdBaseFile5mkdirEPS_PKh+0xaa>
   13d6a:	f8 01       	movw	r30, r16
   13d6c:	47 89       	ldd	r20, Z+23	; 0x17
   13d6e:	50 8d       	ldd	r21, Z+24	; 0x18
   13d70:	61 8d       	ldd	r22, Z+25	; 0x19
   13d72:	72 8d       	ldd	r23, Z+26	; 0x1a
   13d74:	85 81       	ldd	r24, Z+5	; 0x05
   13d76:	96 81       	ldd	r25, Z+6	; 0x06
   13d78:	0e 94 38 a3 	call	0x14670	; 0x14670 <_ZNK8SdVolume17clusterStartBlockEm>
   13d7c:	41 e0       	ldi	r20, 0x01	; 1
   13d7e:	0e 94 e1 a2 	call	0x145c2	; 0x145c2 <_ZN8SdVolume10cacheFetchEmh>
   13d82:	00 97       	sbiw	r24, 0x00	; 0
   13d84:	79 f1       	breq	.+94     	; 0x13de4 <_ZN10SdBaseFile5mkdirEPS_PKh+0x12a>
   13d86:	dc 01       	movw	r26, r24
   13d88:	fe 01       	movw	r30, r28
   13d8a:	31 96       	adiw	r30, 0x01	; 1
   13d8c:	20 e2       	ldi	r18, 0x20	; 32
   13d8e:	01 90       	ld	r0, Z+
   13d90:	0d 92       	st	X+, r0
   13d92:	21 50       	subi	r18, 0x01	; 1
   13d94:	e1 f7       	brne	.-8      	; 0x13d8e <_ZN10SdBaseFile5mkdirEPS_PKh+0xd4>
   13d96:	fc 01       	movw	r30, r24
   13d98:	a4 8a       	std	Z+20, r10	; 0x14
   13d9a:	b5 8a       	std	Z+21, r11	; 0x15
   13d9c:	c2 8e       	std	Z+26, r12	; 0x1a
   13d9e:	d3 8e       	std	Z+27, r13	; 0x1b
   13da0:	2e e2       	ldi	r18, 0x2E	; 46
   13da2:	2a 83       	std	Y+2, r18	; 0x02
   13da4:	f7 01       	movw	r30, r14
   13da6:	23 81       	ldd	r18, Z+3	; 0x03
   13da8:	22 50       	subi	r18, 0x02	; 2
   13daa:	22 30       	cpi	r18, 0x02	; 2
   13dac:	30 f0       	brcs	.+12     	; 0x13dba <_ZN10SdBaseFile5mkdirEPS_PKh+0x100>
   13dae:	07 89       	ldd	r16, Z+23	; 0x17
   13db0:	10 8d       	ldd	r17, Z+24	; 0x18
   13db2:	21 8d       	ldd	r18, Z+25	; 0x19
   13db4:	32 8d       	ldd	r19, Z+26	; 0x1a
   13db6:	a8 01       	movw	r20, r16
   13db8:	04 c0       	rjmp	.+8      	; 0x13dc2 <_ZN10SdBaseFile5mkdirEPS_PKh+0x108>
   13dba:	40 e0       	ldi	r20, 0x00	; 0
   13dbc:	50 e0       	ldi	r21, 0x00	; 0
   13dbe:	20 e0       	ldi	r18, 0x00	; 0
   13dc0:	30 e0       	ldi	r19, 0x00	; 0
   13dc2:	fc 01       	movw	r30, r24
   13dc4:	b0 96       	adiw	r30, 0x20	; 32
   13dc6:	de 01       	movw	r26, r28
   13dc8:	11 96       	adiw	r26, 0x01	; 1
   13dca:	60 e2       	ldi	r22, 0x20	; 32
   13dcc:	0d 90       	ld	r0, X+
   13dce:	01 92       	st	Z+, r0
   13dd0:	61 50       	subi	r22, 0x01	; 1
   13dd2:	e1 f7       	brne	.-8      	; 0x13dcc <_ZN10SdBaseFile5mkdirEPS_PKh+0x112>
   13dd4:	fc 01       	movw	r30, r24
   13dd6:	24 ab       	sts	0x54, r18
   13dd8:	35 ab       	sts	0x55, r19
   13dda:	42 af       	sts	0x72, r20
   13ddc:	53 af       	sts	0x73, r21
   13dde:	0e 94 9a a2 	call	0x14534	; 0x14534 <_ZN8SdVolume9cacheSyncEv>
   13de2:	01 c0       	rjmp	.+2      	; 0x13de6 <_ZN10SdBaseFile5mkdirEPS_PKh+0x12c>
   13de4:	80 e0       	ldi	r24, 0x00	; 0
   13de6:	a0 96       	adiw	r28, 0x20	; 32
   13de8:	cd bf       	out	0x3d, r28	; 61
   13dea:	de bf       	out	0x3e, r29	; 62
   13dec:	df 91       	pop	r29
   13dee:	cf 91       	pop	r28
   13df0:	1f 91       	pop	r17
   13df2:	0f 91       	pop	r16
   13df4:	ff 90       	pop	r15
   13df6:	ef 90       	pop	r14
   13df8:	df 90       	pop	r13
   13dfa:	cf 90       	pop	r12
   13dfc:	bf 90       	pop	r11
   13dfe:	af 90       	pop	r10
   13e00:	08 95       	ret

00013e02 <_ZN10SdBaseFile5mkdirEPS_PKcb>:
   13e02:	5f 92       	push	r5
   13e04:	6f 92       	push	r6
   13e06:	7f 92       	push	r7
   13e08:	8f 92       	push	r8
   13e0a:	9f 92       	push	r9
   13e0c:	af 92       	push	r10
   13e0e:	bf 92       	push	r11
   13e10:	cf 92       	push	r12
   13e12:	df 92       	push	r13
   13e14:	ef 92       	push	r14
   13e16:	ff 92       	push	r15
   13e18:	0f 93       	push	r16
   13e1a:	1f 93       	push	r17
   13e1c:	cf 93       	push	r28
   13e1e:	df 93       	push	r29
   13e20:	cd b7       	in	r28, 0x3d	; 61
   13e22:	de b7       	in	r29, 0x3e	; 62
   13e24:	c3 54       	subi	r28, 0x43	; 67
   13e26:	d0 40       	sbci	r29, 0x00	; 0
   13e28:	cd bf       	out	0x3d, r28	; 61
   13e2a:	de bf       	out	0x3e, r29	; 62
   13e2c:	4c 01       	movw	r8, r24
   13e2e:	6b 01       	movw	r12, r22
   13e30:	24 96       	adiw	r28, 0x04	; 4
   13e32:	4e af       	sts	0x7e, r20
   13e34:	5f af       	sts	0x7f, r21
   13e36:	24 97       	sbiw	r28, 0x04	; 4
   13e38:	52 2e       	mov	r5, r18
   13e3a:	1f a2       	lds	r17, 0x9f
   13e3c:	1a a6       	lds	r17, 0xba
   13e3e:	1c 86       	std	Y+12, r1	; 0x0c
   13e40:	1f 86       	std	Y+15, r1	; 0x0f
   13e42:	61 15       	cp	r22, r1
   13e44:	71 05       	cpc	r23, r1
   13e46:	09 f4       	brne	.+2      	; 0x13e4a <_ZN10SdBaseFile5mkdirEPS_PKcb+0x48>
   13e48:	80 c0       	rjmp	.+256    	; 0x13f4a <_ZN10SdBaseFile5mkdirEPS_PKcb+0x148>
   13e4a:	fc 01       	movw	r30, r24
   13e4c:	83 81       	ldd	r24, Z+3	; 0x03
   13e4e:	88 23       	and	r24, r24
   13e50:	09 f0       	breq	.+2      	; 0x13e54 <_ZN10SdBaseFile5mkdirEPS_PKcb+0x52>
   13e52:	7b c0       	rjmp	.+246    	; 0x13f4a <_ZN10SdBaseFile5mkdirEPS_PKcb+0x148>
   13e54:	8f c0       	rjmp	.+286    	; 0x13f74 <_ZN10SdBaseFile5mkdirEPS_PKcb+0x172>
   13e56:	31 96       	adiw	r30, 0x01	; 1
   13e58:	24 96       	adiw	r28, 0x04	; 4
   13e5a:	ee af       	sts	0x7e, r30
   13e5c:	ff af       	sts	0x7f, r31
   13e5e:	24 97       	sbiw	r28, 0x04	; 4
   13e60:	24 96       	adiw	r28, 0x04	; 4
   13e62:	ee ad       	sts	0x6e, r30
   13e64:	ff ad       	sts	0x6f, r31
   13e66:	24 97       	sbiw	r28, 0x04	; 4
   13e68:	80 81       	ld	r24, Z
   13e6a:	8f 32       	cpi	r24, 0x2F	; 47
   13e6c:	a1 f3       	breq	.-24     	; 0x13e56 <_ZN10SdBaseFile5mkdirEPS_PKcb+0x54>
   13e6e:	f6 01       	movw	r30, r12
   13e70:	83 81       	ldd	r24, Z+3	; 0x03
   13e72:	82 50       	subi	r24, 0x02	; 2
   13e74:	82 30       	cpi	r24, 0x02	; 2
   13e76:	50 f4       	brcc	.+20     	; 0x13e8c <_ZN10SdBaseFile5mkdirEPS_PKcb+0x8a>
   13e78:	86 01       	movw	r16, r12
   13e7a:	e7 e2       	ldi	r30, 0x27	; 39
   13e7c:	ee 2e       	mov	r14, r30
   13e7e:	f1 2c       	mov	r15, r1
   13e80:	ec 0e       	add	r14, r28
   13e82:	fd 1e       	adc	r15, r29
   13e84:	37 01       	movw	r6, r14
   13e86:	be 2c       	mov	r11, r14
   13e88:	af 2c       	mov	r10, r15
   13e8a:	11 c0       	rjmp	.+34     	; 0x13eae <_ZN10SdBaseFile5mkdirEPS_PKcb+0xac>
   13e8c:	f6 01       	movw	r30, r12
   13e8e:	65 81       	ldd	r22, Z+5	; 0x05
   13e90:	76 81       	ldd	r23, Z+6	; 0x06
   13e92:	ce 01       	movw	r24, r28
   13e94:	0c 96       	adiw	r24, 0x0c	; 12
   13e96:	0e 94 5f 99 	call	0x132be	; 0x132be <_ZN10SdBaseFile8openRootEP8SdVolume>
   13e9a:	88 23       	and	r24, r24
   13e9c:	09 f4       	brne	.+2      	; 0x13ea0 <_ZN10SdBaseFile5mkdirEPS_PKcb+0x9e>
   13e9e:	55 c0       	rjmp	.+170    	; 0x13f4a <_ZN10SdBaseFile5mkdirEPS_PKcb+0x148>
   13ea0:	8e 01       	movw	r16, r28
   13ea2:	04 5f       	subi	r16, 0xF4	; 244
   13ea4:	1f 4f       	sbci	r17, 0xFF	; 255
   13ea6:	e9 cf       	rjmp	.-46     	; 0x13e7a <_ZN10SdBaseFile5mkdirEPS_PKcb+0x78>
   13ea8:	87 01       	movw	r16, r14
   13eaa:	eb 2c       	mov	r14, r11
   13eac:	fa 2c       	mov	r15, r10
   13eae:	24 96       	adiw	r28, 0x04	; 4
   13eb0:	8e ad       	sts	0x6e, r24
   13eb2:	9f ad       	sts	0x6f, r25
   13eb4:	24 97       	sbiw	r28, 0x04	; 4
   13eb6:	be 01       	movw	r22, r28
   13eb8:	6f 5f       	subi	r22, 0xFF	; 255
   13eba:	7f 4f       	sbci	r23, 0xFF	; 255
   13ebc:	ae 01       	movw	r20, r28
   13ebe:	4e 5b       	subi	r20, 0xBE	; 190
   13ec0:	5f 4f       	sbci	r21, 0xFF	; 255
   13ec2:	0e 94 2c 95 	call	0x12a58	; 0x12a58 <_ZN10SdBaseFile10make83NameEPKcPhPS1_>
   13ec6:	88 23       	and	r24, r24
   13ec8:	31 f4       	brne	.+12     	; 0x13ed6 <_ZN10SdBaseFile5mkdirEPS_PKcb+0xd4>
   13eca:	3f c0       	rjmp	.+126    	; 0x13f4a <_ZN10SdBaseFile5mkdirEPS_PKcb+0x148>
   13ecc:	31 96       	adiw	r30, 0x01	; 1
   13ece:	24 96       	adiw	r28, 0x04	; 4
   13ed0:	ee af       	sts	0x7e, r30
   13ed2:	ff af       	sts	0x7f, r31
   13ed4:	24 97       	sbiw	r28, 0x04	; 4
   13ed6:	24 96       	adiw	r28, 0x04	; 4
   13ed8:	ee ad       	sts	0x6e, r30
   13eda:	ff ad       	sts	0x6f, r31
   13edc:	24 97       	sbiw	r28, 0x04	; 4
   13ede:	80 81       	ld	r24, Z
   13ee0:	8f 32       	cpi	r24, 0x2F	; 47
   13ee2:	a1 f3       	breq	.-24     	; 0x13ecc <_ZN10SdBaseFile5mkdirEPS_PKcb+0xca>
   13ee4:	88 23       	and	r24, r24
   13ee6:	49 f1       	breq	.+82     	; 0x13f3a <_ZN10SdBaseFile5mkdirEPS_PKcb+0x138>
   13ee8:	c7 01       	movw	r24, r14
   13eea:	b8 01       	movw	r22, r16
   13eec:	ae 01       	movw	r20, r28
   13eee:	4f 5f       	subi	r20, 0xFF	; 255
   13ef0:	5f 4f       	sbci	r21, 0xFF	; 255
   13ef2:	21 e0       	ldi	r18, 0x01	; 1
   13ef4:	0e 94 bf 9c 	call	0x1397e	; 0x1397e <_ZN10SdBaseFile4openEPS_PKhh>
   13ef8:	88 23       	and	r24, r24
   13efa:	59 f4       	brne	.+22     	; 0x13f12 <_ZN10SdBaseFile5mkdirEPS_PKcb+0x110>
   13efc:	55 20       	and	r5, r5
   13efe:	29 f1       	breq	.+74     	; 0x13f4a <_ZN10SdBaseFile5mkdirEPS_PKcb+0x148>
   13f00:	c7 01       	movw	r24, r14
   13f02:	b8 01       	movw	r22, r16
   13f04:	ae 01       	movw	r20, r28
   13f06:	4f 5f       	subi	r20, 0xFF	; 255
   13f08:	5f 4f       	sbci	r21, 0xFF	; 255
   13f0a:	0e 94 5d 9e 	call	0x13cba	; 0x13cba <_ZN10SdBaseFile5mkdirEPS_PKh>
   13f0e:	88 23       	and	r24, r24
   13f10:	e1 f0       	breq	.+56     	; 0x13f4a <_ZN10SdBaseFile5mkdirEPS_PKcb+0x148>
   13f12:	0c 15       	cp	r16, r12
   13f14:	1d 05       	cpc	r17, r13
   13f16:	29 f0       	breq	.+10     	; 0x13f22 <_ZN10SdBaseFile5mkdirEPS_PKcb+0x120>
   13f18:	c8 01       	movw	r24, r16
   13f1a:	0e 94 a7 99 	call	0x1334e	; 0x1334e <_ZN10SdBaseFile4syncEv>
   13f1e:	f8 01       	movw	r30, r16
   13f20:	13 82       	std	Z+3, r1	; 0x03
   13f22:	e6 14       	cp	r14, r6
   13f24:	f7 04       	cpc	r15, r7
   13f26:	09 f0       	breq	.+2      	; 0x13f2a <_ZN10SdBaseFile5mkdirEPS_PKcb+0x128>
   13f28:	bf cf       	rjmp	.-130    	; 0x13ea8 <_ZN10SdBaseFile5mkdirEPS_PKcb+0xa6>
   13f2a:	7c e0       	ldi	r23, 0x0C	; 12
   13f2c:	e7 2e       	mov	r14, r23
   13f2e:	f1 2c       	mov	r15, r1
   13f30:	ec 0e       	add	r14, r28
   13f32:	fd 1e       	adc	r15, r29
   13f34:	0b 2d       	mov	r16, r11
   13f36:	1a 2d       	mov	r17, r10
   13f38:	ba cf       	rjmp	.-140    	; 0x13eae <_ZN10SdBaseFile5mkdirEPS_PKcb+0xac>
   13f3a:	c4 01       	movw	r24, r8
   13f3c:	b8 01       	movw	r22, r16
   13f3e:	ae 01       	movw	r20, r28
   13f40:	4f 5f       	subi	r20, 0xFF	; 255
   13f42:	5f 4f       	sbci	r21, 0xFF	; 255
   13f44:	0e 94 5d 9e 	call	0x13cba	; 0x13cba <_ZN10SdBaseFile5mkdirEPS_PKh>
   13f48:	01 c0       	rjmp	.+2      	; 0x13f4c <_ZN10SdBaseFile5mkdirEPS_PKcb+0x14a>
   13f4a:	80 e0       	ldi	r24, 0x00	; 0
   13f4c:	cd 5b       	subi	r28, 0xBD	; 189
   13f4e:	df 4f       	sbci	r29, 0xFF	; 255
   13f50:	cd bf       	out	0x3d, r28	; 61
   13f52:	de bf       	out	0x3e, r29	; 62
   13f54:	df 91       	pop	r29
   13f56:	cf 91       	pop	r28
   13f58:	1f 91       	pop	r17
   13f5a:	0f 91       	pop	r16
   13f5c:	ff 90       	pop	r15
   13f5e:	ef 90       	pop	r14
   13f60:	df 90       	pop	r13
   13f62:	cf 90       	pop	r12
   13f64:	bf 90       	pop	r11
   13f66:	af 90       	pop	r10
   13f68:	9f 90       	pop	r9
   13f6a:	8f 90       	pop	r8
   13f6c:	7f 90       	pop	r7
   13f6e:	6f 90       	pop	r6
   13f70:	5f 90       	pop	r5
   13f72:	08 95       	ret
   13f74:	24 96       	adiw	r28, 0x04	; 4
   13f76:	ee ad       	sts	0x6e, r30
   13f78:	ff ad       	sts	0x6f, r31
   13f7a:	24 97       	sbiw	r28, 0x04	; 4
   13f7c:	80 81       	ld	r24, Z
   13f7e:	8f 32       	cpi	r24, 0x2F	; 47
   13f80:	09 f0       	breq	.+2      	; 0x13f84 <_ZN10SdBaseFile5mkdirEPS_PKcb+0x182>
   13f82:	7a cf       	rjmp	.-268    	; 0x13e78 <_ZN10SdBaseFile5mkdirEPS_PKcb+0x76>
   13f84:	6d cf       	rjmp	.-294    	; 0x13e60 <_ZN10SdBaseFile5mkdirEPS_PKcb+0x5e>

00013f86 <_ZN10SdBaseFile5writeEPKvj>:
   13f86:	2f 92       	push	r2
   13f88:	3f 92       	push	r3
   13f8a:	4f 92       	push	r4
   13f8c:	5f 92       	push	r5
   13f8e:	6f 92       	push	r6
   13f90:	7f 92       	push	r7
   13f92:	8f 92       	push	r8
   13f94:	9f 92       	push	r9
   13f96:	af 92       	push	r10
   13f98:	bf 92       	push	r11
   13f9a:	df 92       	push	r13
   13f9c:	ef 92       	push	r14
   13f9e:	ff 92       	push	r15
   13fa0:	0f 93       	push	r16
   13fa2:	1f 93       	push	r17
   13fa4:	cf 93       	push	r28
   13fa6:	df 93       	push	r29
   13fa8:	cd b7       	in	r28, 0x3d	; 61
   13faa:	de b7       	in	r29, 0x3e	; 62
   13fac:	2a 97       	sbiw	r28, 0x0a	; 10
   13fae:	cd bf       	out	0x3d, r28	; 61
   13fb0:	de bf       	out	0x3e, r29	; 62
   13fb2:	7c 01       	movw	r14, r24
   13fb4:	d6 2e       	mov	r13, r22
   13fb6:	07 2f       	mov	r16, r23
   13fb8:	49 87       	std	Y+9, r20	; 0x09
   13fba:	5a 87       	std	Y+10, r21	; 0x0a
   13fbc:	dc 01       	movw	r26, r24
   13fbe:	13 96       	adiw	r26, 0x03	; 3
   13fc0:	8c 91       	ld	r24, X
   13fc2:	13 97       	sbiw	r26, 0x03	; 3
   13fc4:	81 30       	cpi	r24, 0x01	; 1
   13fc6:	09 f0       	breq	.+2      	; 0x13fca <_ZN10SdBaseFile5writeEPKvj+0x44>
   13fc8:	a1 c1       	rjmp	.+834    	; 0x1430c <_ZN10SdBaseFile5writeEPKvj+0x386>
   13fca:	11 96       	adiw	r26, 0x01	; 1
   13fcc:	8c 91       	ld	r24, X
   13fce:	11 97       	sbiw	r26, 0x01	; 1
   13fd0:	81 ff       	sbrs	r24, 1
   13fd2:	9c c1       	rjmp	.+824    	; 0x1430c <_ZN10SdBaseFile5writeEPKvj+0x386>
   13fd4:	b5 c1       	rjmp	.+874    	; 0x14340 <_ZN10SdBaseFile5writeEPKvj+0x3ba>
   13fd6:	f7 01       	movw	r30, r14
   13fd8:	43 89       	ldd	r20, Z+19	; 0x13
   13fda:	54 89       	ldd	r21, Z+20	; 0x14
   13fdc:	65 89       	ldd	r22, Z+21	; 0x15
   13fde:	76 89       	ldd	r23, Z+22	; 0x16
   13fe0:	83 85       	ldd	r24, Z+11	; 0x0b
   13fe2:	94 85       	ldd	r25, Z+12	; 0x0c
   13fe4:	a5 85       	ldd	r26, Z+13	; 0x0d
   13fe6:	b6 85       	ldd	r27, Z+14	; 0x0e
   13fe8:	84 17       	cp	r24, r20
   13fea:	95 07       	cpc	r25, r21
   13fec:	a6 07       	cpc	r26, r22
   13fee:	b7 07       	cpc	r27, r23
   13ff0:	31 f0       	breq	.+12     	; 0x13ffe <_ZN10SdBaseFile5writeEPKvj+0x78>
   13ff2:	c7 01       	movw	r24, r14
   13ff4:	0e 94 58 98 	call	0x130b0	; 0x130b0 <_ZN10SdBaseFile7seekSetEm>
   13ff8:	88 23       	and	r24, r24
   13ffa:	09 f4       	brne	.+2      	; 0x13ffe <_ZN10SdBaseFile5writeEPKvj+0x78>
   13ffc:	87 c1       	rjmp	.+782    	; 0x1430c <_ZN10SdBaseFile5writeEPKvj+0x386>
   13ffe:	29 85       	ldd	r18, Y+9	; 0x09
   14000:	3a 85       	ldd	r19, Y+10	; 0x0a
   14002:	2f 83       	std	Y+7, r18	; 0x07
   14004:	38 87       	std	Y+8, r19	; 0x08
   14006:	dd 82       	std	Y+5, r13	; 0x05
   14008:	0e 83       	std	Y+6, r16	; 0x06
   1400a:	4a c1       	rjmp	.+660    	; 0x142a0 <_ZN10SdBaseFile5writeEPKvj+0x31a>
   1400c:	f7 01       	movw	r30, r14
   1400e:	25 81       	ldd	r18, Z+5	; 0x05
   14010:	36 81       	ldd	r19, Z+6	; 0x06
   14012:	f9 01       	movw	r30, r18
   14014:	04 81       	ldd	r16, Z+4	; 0x04
   14016:	01 50       	subi	r16, 0x01	; 1
   14018:	ac 01       	movw	r20, r24
   1401a:	bd 01       	movw	r22, r26
   1401c:	19 e0       	ldi	r17, 0x09	; 9
   1401e:	76 95       	lsr	r23
   14020:	67 95       	ror	r22
   14022:	57 95       	ror	r21
   14024:	47 95       	ror	r20
   14026:	1a 95       	dec	r17
   14028:	d1 f7       	brne	.-12     	; 0x1401e <_ZN10SdBaseFile5writeEPKvj+0x98>
   1402a:	04 23       	and	r16, r20
   1402c:	4f ef       	ldi	r20, 0xFF	; 255
   1402e:	44 2e       	mov	r4, r20
   14030:	41 e0       	ldi	r20, 0x01	; 1
   14032:	54 2e       	mov	r5, r20
   14034:	48 22       	and	r4, r24
   14036:	59 22       	and	r5, r25
   14038:	00 23       	and	r16, r16
   1403a:	09 f0       	breq	.+2      	; 0x1403e <_ZN10SdBaseFile5writeEPKvj+0xb8>
   1403c:	4a c0       	rjmp	.+148    	; 0x140d2 <_ZN10SdBaseFile5writeEPKvj+0x14c>
   1403e:	41 14       	cp	r4, r1
   14040:	51 04       	cpc	r5, r1
   14042:	09 f0       	breq	.+2      	; 0x14046 <_ZN10SdBaseFile5writeEPKvj+0xc0>
   14044:	46 c0       	rjmp	.+140    	; 0x140d2 <_ZN10SdBaseFile5writeEPKvj+0x14c>
   14046:	d7 01       	movw	r26, r14
   14048:	17 96       	adiw	r26, 0x07	; 7
   1404a:	4d 91       	ld	r20, X+
   1404c:	5d 91       	ld	r21, X+
   1404e:	6d 91       	ld	r22, X+
   14050:	7c 91       	ld	r23, X
   14052:	1a 97       	sbiw	r26, 0x0a	; 10
   14054:	41 15       	cp	r20, r1
   14056:	51 05       	cpc	r21, r1
   14058:	61 05       	cpc	r22, r1
   1405a:	71 05       	cpc	r23, r1
   1405c:	31 f1       	breq	.+76     	; 0x140aa <_ZN10SdBaseFile5writeEPKvj+0x124>
   1405e:	c9 01       	movw	r24, r18
   14060:	9e 01       	movw	r18, r28
   14062:	2f 5f       	subi	r18, 0xFF	; 255
   14064:	3f 4f       	sbci	r19, 0xFF	; 255
   14066:	0e 94 5b a3 	call	0x146b6	; 0x146b6 <_ZN8SdVolume6fatGetEmPm>
   1406a:	88 23       	and	r24, r24
   1406c:	09 f4       	brne	.+2      	; 0x14070 <_ZN10SdBaseFile5writeEPKvj+0xea>
   1406e:	4e c1       	rjmp	.+668    	; 0x1430c <_ZN10SdBaseFile5writeEPKvj+0x386>
   14070:	89 81       	ldd	r24, Y+1	; 0x01
   14072:	9a 81       	ldd	r25, Y+2	; 0x02
   14074:	ab 81       	ldd	r26, Y+3	; 0x03
   14076:	bc 81       	ldd	r27, Y+4	; 0x04
   14078:	f7 01       	movw	r30, r14
   1407a:	25 81       	ldd	r18, Z+5	; 0x05
   1407c:	36 81       	ldd	r19, Z+6	; 0x06
   1407e:	f9 01       	movw	r30, r18
   14080:	27 89       	ldd	r18, Z+23	; 0x17
   14082:	20 31       	cpi	r18, 0x10	; 16
   14084:	49 f4       	brne	.+18     	; 0x14098 <_ZN10SdBaseFile5writeEPKvj+0x112>
   14086:	88 3f       	cpi	r24, 0xF8	; 248
   14088:	ff ef       	ldi	r31, 0xFF	; 255
   1408a:	9f 07       	cpc	r25, r31
   1408c:	f0 e0       	ldi	r31, 0x00	; 0
   1408e:	af 07       	cpc	r26, r31
   14090:	f0 e0       	ldi	r31, 0x00	; 0
   14092:	bf 07       	cpc	r27, r31
   14094:	98 f4       	brcc	.+38     	; 0x140bc <_ZN10SdBaseFile5writeEPKvj+0x136>
   14096:	18 c0       	rjmp	.+48     	; 0x140c8 <_ZN10SdBaseFile5writeEPKvj+0x142>
   14098:	88 3f       	cpi	r24, 0xF8	; 248
   1409a:	2f ef       	ldi	r18, 0xFF	; 255
   1409c:	92 07       	cpc	r25, r18
   1409e:	2f ef       	ldi	r18, 0xFF	; 255
   140a0:	a2 07       	cpc	r26, r18
   140a2:	2f e0       	ldi	r18, 0x0F	; 15
   140a4:	b2 07       	cpc	r27, r18
   140a6:	80 f0       	brcs	.+32     	; 0x140c8 <_ZN10SdBaseFile5writeEPKvj+0x142>
   140a8:	09 c0       	rjmp	.+18     	; 0x140bc <_ZN10SdBaseFile5writeEPKvj+0x136>
   140aa:	f7 01       	movw	r30, r14
   140ac:	87 89       	ldd	r24, Z+23	; 0x17
   140ae:	90 8d       	ldd	r25, Z+24	; 0x18
   140b0:	a1 8d       	ldd	r26, Z+25	; 0x19
   140b2:	b2 8d       	ldd	r27, Z+26	; 0x1a
   140b4:	00 97       	sbiw	r24, 0x00	; 0
   140b6:	a1 05       	cpc	r26, r1
   140b8:	b1 05       	cpc	r27, r1
   140ba:	31 f4       	brne	.+12     	; 0x140c8 <_ZN10SdBaseFile5writeEPKvj+0x142>
   140bc:	c7 01       	movw	r24, r14
   140be:	0e 94 2f 94 	call	0x1285e	; 0x1285e <_ZN10SdBaseFile10addClusterEv>
   140c2:	88 23       	and	r24, r24
   140c4:	31 f4       	brne	.+12     	; 0x140d2 <_ZN10SdBaseFile5writeEPKvj+0x14c>
   140c6:	22 c1       	rjmp	.+580    	; 0x1430c <_ZN10SdBaseFile5writeEPKvj+0x386>
   140c8:	f7 01       	movw	r30, r14
   140ca:	87 83       	std	Z+7, r24	; 0x07
   140cc:	90 87       	std	Z+8, r25	; 0x08
   140ce:	a1 87       	std	Z+9, r26	; 0x09
   140d0:	b2 87       	std	Z+10, r27	; 0x0a
   140d2:	d7 01       	movw	r26, r14
   140d4:	17 96       	adiw	r26, 0x07	; 7
   140d6:	4d 91       	ld	r20, X+
   140d8:	5d 91       	ld	r21, X+
   140da:	6d 91       	ld	r22, X+
   140dc:	7c 91       	ld	r23, X
   140de:	1a 97       	sbiw	r26, 0x0a	; 10
   140e0:	15 96       	adiw	r26, 0x05	; 5
   140e2:	8d 91       	ld	r24, X+
   140e4:	9c 91       	ld	r25, X
   140e6:	16 97       	sbiw	r26, 0x06	; 6
   140e8:	0e 94 38 a3 	call	0x14670	; 0x14670 <_ZNK8SdVolume17clusterStartBlockEm>
   140ec:	4b 01       	movw	r8, r22
   140ee:	5c 01       	movw	r10, r24
   140f0:	80 0e       	add	r8, r16
   140f2:	91 1c       	adc	r9, r1
   140f4:	a1 1c       	adc	r10, r1
   140f6:	b1 1c       	adc	r11, r1
   140f8:	41 14       	cp	r4, r1
   140fa:	51 04       	cpc	r5, r1
   140fc:	a1 f4       	brne	.+40     	; 0x14126 <_ZN10SdBaseFile5writeEPKvj+0x1a0>
   140fe:	ef 81       	ldd	r30, Y+7	; 0x07
   14100:	f8 85       	ldd	r31, Y+8	; 0x08
   14102:	22 e0       	ldi	r18, 0x02	; 2
   14104:	e0 30       	cpi	r30, 0x00	; 0
   14106:	f2 07       	cpc	r31, r18
   14108:	c8 f5       	brcc	.+114    	; 0x1417c <_ZN10SdBaseFile5writeEPKvj+0x1f6>
   1410a:	f7 01       	movw	r30, r14
   1410c:	83 85       	ldd	r24, Z+11	; 0x0b
   1410e:	94 85       	ldd	r25, Z+12	; 0x0c
   14110:	a5 85       	ldd	r26, Z+13	; 0x0d
   14112:	b6 85       	ldd	r27, Z+14	; 0x0e
   14114:	43 89       	ldd	r20, Z+19	; 0x13
   14116:	54 89       	ldd	r21, Z+20	; 0x14
   14118:	65 89       	ldd	r22, Z+21	; 0x15
   1411a:	76 89       	ldd	r23, Z+22	; 0x16
   1411c:	84 17       	cp	r24, r20
   1411e:	95 07       	cpc	r25, r21
   14120:	a6 07       	cpc	r26, r22
   14122:	b7 07       	cpc	r27, r23
   14124:	10 f4       	brcc	.+4      	; 0x1412a <_ZN10SdBaseFile5writeEPKvj+0x1a4>
   14126:	41 e0       	ldi	r20, 0x01	; 1
   14128:	01 c0       	rjmp	.+2      	; 0x1412c <_ZN10SdBaseFile5writeEPKvj+0x1a6>
   1412a:	45 e0       	ldi	r20, 0x05	; 5
   1412c:	c5 01       	movw	r24, r10
   1412e:	b4 01       	movw	r22, r8
   14130:	0e 94 e1 a2 	call	0x145c2	; 0x145c2 <_ZN8SdVolume10cacheFetchEmh>
   14134:	9c 01       	movw	r18, r24
   14136:	00 97       	sbiw	r24, 0x00	; 0
   14138:	09 f4       	brne	.+2      	; 0x1413c <_ZN10SdBaseFile5writeEPKvj+0x1b6>
   1413a:	e8 c0       	rjmp	.+464    	; 0x1430c <_ZN10SdBaseFile5writeEPKvj+0x386>
   1413c:	80 e0       	ldi	r24, 0x00	; 0
   1413e:	92 e0       	ldi	r25, 0x02	; 2
   14140:	84 19       	sub	r24, r4
   14142:	95 09       	sbc	r25, r5
   14144:	2f 80       	ldd	r2, Y+7	; 0x07
   14146:	38 84       	ldd	r3, Y+8	; 0x08
   14148:	82 15       	cp	r24, r2
   1414a:	93 05       	cpc	r25, r3
   1414c:	08 f4       	brcc	.+2      	; 0x14150 <_ZN10SdBaseFile5writeEPKvj+0x1ca>
   1414e:	1c 01       	movw	r2, r24
   14150:	c9 01       	movw	r24, r18
   14152:	84 0d       	add	r24, r4
   14154:	95 1d       	adc	r25, r5
   14156:	6d 81       	ldd	r22, Y+5	; 0x05
   14158:	7e 81       	ldd	r23, Y+6	; 0x06
   1415a:	a1 01       	movw	r20, r2
   1415c:	0e 94 b7 b1 	call	0x1636e	; 0x1636e <memcpy>
   14160:	c1 01       	movw	r24, r2
   14162:	84 0d       	add	r24, r4
   14164:	95 1d       	adc	r25, r5
   14166:	f2 e0       	ldi	r31, 0x02	; 2
   14168:	80 30       	cpi	r24, 0x00	; 0
   1416a:	9f 07       	cpc	r25, r31
   1416c:	09 f0       	breq	.+2      	; 0x14170 <_ZN10SdBaseFile5writeEPKvj+0x1ea>
   1416e:	7c c0       	rjmp	.+248    	; 0x14268 <_ZN10SdBaseFile5writeEPKvj+0x2e2>
   14170:	0e 94 27 a3 	call	0x1464e	; 0x1464e <_ZN8SdVolume14cacheWriteDataEv>
   14174:	88 23       	and	r24, r24
   14176:	09 f0       	breq	.+2      	; 0x1417a <_ZN10SdBaseFile5writeEPKvj+0x1f4>
   14178:	77 c0       	rjmp	.+238    	; 0x14268 <_ZN10SdBaseFile5writeEPKvj+0x2e2>
   1417a:	c8 c0       	rjmp	.+400    	; 0x1430c <_ZN10SdBaseFile5writeEPKvj+0x386>
   1417c:	2f 81       	ldd	r18, Y+7	; 0x07
   1417e:	38 85       	ldd	r19, Y+8	; 0x08
   14180:	44 e0       	ldi	r20, 0x04	; 4
   14182:	20 30       	cpi	r18, 0x00	; 0
   14184:	34 07       	cpc	r19, r20
   14186:	00 f5       	brcc	.+64     	; 0x141c8 <_ZN10SdBaseFile5writeEPKvj+0x242>
   14188:	80 91 cb 25 	lds	r24, 0x25CB
   1418c:	90 91 cc 25 	lds	r25, 0x25CC
   14190:	a0 91 cd 25 	lds	r26, 0x25CD
   14194:	b0 91 ce 25 	lds	r27, 0x25CE
   14198:	88 15       	cp	r24, r8
   1419a:	99 05       	cpc	r25, r9
   1419c:	aa 05       	cpc	r26, r10
   1419e:	bb 05       	cpc	r27, r11
   141a0:	11 f4       	brne	.+4      	; 0x141a6 <_ZN10SdBaseFile5writeEPKvj+0x220>
   141a2:	0e 94 2a a3 	call	0x14654	; 0x14654 <_ZN8SdVolume15cacheInvalidateEv>
   141a6:	80 91 c4 25 	lds	r24, 0x25C4
   141aa:	90 91 c5 25 	lds	r25, 0x25C5
   141ae:	b5 01       	movw	r22, r10
   141b0:	a4 01       	movw	r20, r8
   141b2:	2d 81       	ldd	r18, Y+5	; 0x05
   141b4:	3e 81       	ldd	r19, Y+6	; 0x06
   141b6:	0e 94 57 93 	call	0x126ae	; 0x126ae <_ZN7Sd2Card10writeBlockEmPKh>
   141ba:	88 23       	and	r24, r24
   141bc:	09 f4       	brne	.+2      	; 0x141c0 <_ZN10SdBaseFile5writeEPKvj+0x23a>
   141be:	a6 c0       	rjmp	.+332    	; 0x1430c <_ZN10SdBaseFile5writeEPKvj+0x386>
   141c0:	21 2c       	mov	r2, r1
   141c2:	f2 e0       	ldi	r31, 0x02	; 2
   141c4:	3f 2e       	mov	r3, r31
   141c6:	50 c0       	rjmp	.+160    	; 0x14268 <_ZN10SdBaseFile5writeEPKvj+0x2e2>
   141c8:	d7 01       	movw	r26, r14
   141ca:	15 96       	adiw	r26, 0x05	; 5
   141cc:	ed 91       	ld	r30, X+
   141ce:	fc 91       	ld	r31, X
   141d0:	16 97       	sbiw	r26, 0x06	; 6
   141d2:	84 81       	ldd	r24, Z+4	; 0x04
   141d4:	80 1b       	sub	r24, r16
   141d6:	d8 84       	ldd	r13, Y+8	; 0x08
   141d8:	d6 94       	lsr	r13
   141da:	8d 15       	cp	r24, r13
   141dc:	08 f4       	brcc	.+2      	; 0x141e0 <_ZN10SdBaseFile5writeEPKvj+0x25a>
   141de:	d8 2e       	mov	r13, r24
   141e0:	0d 2d       	mov	r16, r13
   141e2:	10 e0       	ldi	r17, 0x00	; 0
   141e4:	20 e0       	ldi	r18, 0x00	; 0
   141e6:	30 e0       	ldi	r19, 0x00	; 0
   141e8:	80 91 c4 25 	lds	r24, 0x25C4
   141ec:	90 91 c5 25 	lds	r25, 0x25C5
   141f0:	b5 01       	movw	r22, r10
   141f2:	a4 01       	movw	r20, r8
   141f4:	0e 94 a8 93 	call	0x12750	; 0x12750 <_ZN7Sd2Card10writeStartEmm>
   141f8:	88 23       	and	r24, r24
   141fa:	09 f4       	brne	.+2      	; 0x141fe <_ZN10SdBaseFile5writeEPKvj+0x278>
   141fc:	87 c0       	rjmp	.+270    	; 0x1430c <_ZN10SdBaseFile5writeEPKvj+0x386>
   141fe:	0d 81       	ldd	r16, Y+5	; 0x05
   14200:	1e 81       	ldd	r17, Y+6	; 0x06
   14202:	24 01       	movw	r4, r8
   14204:	35 01       	movw	r6, r10
   14206:	20 c0       	rjmp	.+64     	; 0x14248 <_ZN10SdBaseFile5writeEPKvj+0x2c2>
   14208:	80 91 cb 25 	lds	r24, 0x25CB
   1420c:	90 91 cc 25 	lds	r25, 0x25CC
   14210:	a0 91 cd 25 	lds	r26, 0x25CD
   14214:	b0 91 ce 25 	lds	r27, 0x25CE
   14218:	48 16       	cp	r4, r24
   1421a:	59 06       	cpc	r5, r25
   1421c:	6a 06       	cpc	r6, r26
   1421e:	7b 06       	cpc	r7, r27
   14220:	11 f4       	brne	.+4      	; 0x14226 <_ZN10SdBaseFile5writeEPKvj+0x2a0>
   14222:	0e 94 2a a3 	call	0x14654	; 0x14654 <_ZN8SdVolume15cacheInvalidateEv>
   14226:	80 91 c4 25 	lds	r24, 0x25C4
   1422a:	90 91 c5 25 	lds	r25, 0x25C5
   1422e:	b8 01       	movw	r22, r16
   14230:	0e 94 31 93 	call	0x12662	; 0x12662 <_ZN7Sd2Card9writeDataEPKh>
   14234:	00 50       	subi	r16, 0x00	; 0
   14236:	1e 4f       	sbci	r17, 0xFE	; 254
   14238:	08 94       	sec
   1423a:	41 1c       	adc	r4, r1
   1423c:	51 1c       	adc	r5, r1
   1423e:	61 1c       	adc	r6, r1
   14240:	71 1c       	adc	r7, r1
   14242:	88 23       	and	r24, r24
   14244:	09 f4       	brne	.+2      	; 0x14248 <_ZN10SdBaseFile5writeEPKvj+0x2c2>
   14246:	62 c0       	rjmp	.+196    	; 0x1430c <_ZN10SdBaseFile5writeEPKvj+0x386>
   14248:	84 2d       	mov	r24, r4
   1424a:	88 19       	sub	r24, r8
   1424c:	8d 15       	cp	r24, r13
   1424e:	e0 f2       	brcs	.-72     	; 0x14208 <_ZN10SdBaseFile5writeEPKvj+0x282>
   14250:	80 91 c4 25 	lds	r24, 0x25C4
   14254:	90 91 c5 25 	lds	r25, 0x25C5
   14258:	0e 94 f3 93 	call	0x127e6	; 0x127e6 <_ZN7Sd2Card9writeStopEv>
   1425c:	88 23       	and	r24, r24
   1425e:	09 f4       	brne	.+2      	; 0x14262 <_ZN10SdBaseFile5writeEPKvj+0x2dc>
   14260:	55 c0       	rjmp	.+170    	; 0x1430c <_ZN10SdBaseFile5writeEPKvj+0x386>
   14262:	3d 2c       	mov	r3, r13
   14264:	33 0c       	add	r3, r3
   14266:	22 24       	eor	r2, r2
   14268:	a1 01       	movw	r20, r2
   1426a:	60 e0       	ldi	r22, 0x00	; 0
   1426c:	70 e0       	ldi	r23, 0x00	; 0
   1426e:	f7 01       	movw	r30, r14
   14270:	83 85       	ldd	r24, Z+11	; 0x0b
   14272:	94 85       	ldd	r25, Z+12	; 0x0c
   14274:	a5 85       	ldd	r26, Z+13	; 0x0d
   14276:	b6 85       	ldd	r27, Z+14	; 0x0e
   14278:	84 0f       	add	r24, r20
   1427a:	95 1f       	adc	r25, r21
   1427c:	a6 1f       	adc	r26, r22
   1427e:	b7 1f       	adc	r27, r23
   14280:	83 87       	std	Z+11, r24	; 0x0b
   14282:	94 87       	std	Z+12, r25	; 0x0c
   14284:	a5 87       	std	Z+13, r26	; 0x0d
   14286:	b6 87       	std	Z+14, r27	; 0x0e
   14288:	2d 81       	ldd	r18, Y+5	; 0x05
   1428a:	3e 81       	ldd	r19, Y+6	; 0x06
   1428c:	22 0d       	add	r18, r2
   1428e:	33 1d       	adc	r19, r3
   14290:	2d 83       	std	Y+5, r18	; 0x05
   14292:	3e 83       	std	Y+6, r19	; 0x06
   14294:	4f 81       	ldd	r20, Y+7	; 0x07
   14296:	58 85       	ldd	r21, Y+8	; 0x08
   14298:	42 19       	sub	r20, r2
   1429a:	53 09       	sbc	r21, r3
   1429c:	4f 83       	std	Y+7, r20	; 0x07
   1429e:	58 87       	std	Y+8, r21	; 0x08
   142a0:	f7 01       	movw	r30, r14
   142a2:	83 85       	ldd	r24, Z+11	; 0x0b
   142a4:	94 85       	ldd	r25, Z+12	; 0x0c
   142a6:	a5 85       	ldd	r26, Z+13	; 0x0d
   142a8:	b6 85       	ldd	r27, Z+14	; 0x0e
   142aa:	2f 81       	ldd	r18, Y+7	; 0x07
   142ac:	38 85       	ldd	r19, Y+8	; 0x08
   142ae:	21 15       	cp	r18, r1
   142b0:	31 05       	cpc	r19, r1
   142b2:	09 f0       	breq	.+2      	; 0x142b6 <_ZN10SdBaseFile5writeEPKvj+0x330>
   142b4:	ab ce       	rjmp	.-682    	; 0x1400c <_ZN10SdBaseFile5writeEPKvj+0x86>
   142b6:	43 89       	ldd	r20, Z+19	; 0x13
   142b8:	54 89       	ldd	r21, Z+20	; 0x14
   142ba:	65 89       	ldd	r22, Z+21	; 0x15
   142bc:	76 89       	ldd	r23, Z+22	; 0x16
   142be:	48 17       	cp	r20, r24
   142c0:	59 07       	cpc	r21, r25
   142c2:	6a 07       	cpc	r22, r26
   142c4:	7b 07       	cpc	r23, r27
   142c6:	40 f4       	brcc	.+16     	; 0x142d8 <_ZN10SdBaseFile5writeEPKvj+0x352>
   142c8:	83 8b       	std	Z+19, r24	; 0x13
   142ca:	94 8b       	std	Z+20, r25	; 0x14
   142cc:	a5 8b       	std	Z+21, r26	; 0x15
   142ce:	b6 8b       	std	Z+22, r27	; 0x16
   142d0:	81 81       	ldd	r24, Z+1	; 0x01
   142d2:	80 68       	ori	r24, 0x80	; 128
   142d4:	81 83       	std	Z+1, r24	; 0x01
   142d6:	0e c0       	rjmp	.+28     	; 0x142f4 <_ZN10SdBaseFile5writeEPKvj+0x36e>
   142d8:	80 91 c0 25 	lds	r24, 0x25C0
   142dc:	90 91 c1 25 	lds	r25, 0x25C1
   142e0:	00 97       	sbiw	r24, 0x00	; 0
   142e2:	41 f0       	breq	.+16     	; 0x142f4 <_ZN10SdBaseFile5writeEPKvj+0x36e>
   142e4:	29 85       	ldd	r18, Y+9	; 0x09
   142e6:	3a 85       	ldd	r19, Y+10	; 0x0a
   142e8:	21 15       	cp	r18, r1
   142ea:	31 05       	cpc	r19, r1
   142ec:	19 f0       	breq	.+6      	; 0x142f4 <_ZN10SdBaseFile5writeEPKvj+0x36e>
   142ee:	81 81       	ldd	r24, Z+1	; 0x01
   142f0:	80 68       	ori	r24, 0x80	; 128
   142f2:	81 83       	std	Z+1, r24	; 0x01
   142f4:	f7 01       	movw	r30, r14
   142f6:	81 81       	ldd	r24, Z+1	; 0x01
   142f8:	83 ff       	sbrs	r24, 3
   142fa:	05 c0       	rjmp	.+10     	; 0x14306 <_ZN10SdBaseFile5writeEPKvj+0x380>
   142fc:	c7 01       	movw	r24, r14
   142fe:	0e 94 a7 99 	call	0x1334e	; 0x1334e <_ZN10SdBaseFile4syncEv>
   14302:	88 23       	and	r24, r24
   14304:	19 f0       	breq	.+6      	; 0x1430c <_ZN10SdBaseFile5writeEPKvj+0x386>
   14306:	89 85       	ldd	r24, Y+9	; 0x09
   14308:	9a 85       	ldd	r25, Y+10	; 0x0a
   1430a:	05 c0       	rjmp	.+10     	; 0x14316 <_ZN10SdBaseFile5writeEPKvj+0x390>
   1430c:	81 e0       	ldi	r24, 0x01	; 1
   1430e:	d7 01       	movw	r26, r14
   14310:	8c 93       	st	X, r24
   14312:	8f ef       	ldi	r24, 0xFF	; 255
   14314:	9f ef       	ldi	r25, 0xFF	; 255
   14316:	2a 96       	adiw	r28, 0x0a	; 10
   14318:	cd bf       	out	0x3d, r28	; 61
   1431a:	de bf       	out	0x3e, r29	; 62
   1431c:	df 91       	pop	r29
   1431e:	cf 91       	pop	r28
   14320:	1f 91       	pop	r17
   14322:	0f 91       	pop	r16
   14324:	ff 90       	pop	r15
   14326:	ef 90       	pop	r14
   14328:	df 90       	pop	r13
   1432a:	bf 90       	pop	r11
   1432c:	af 90       	pop	r10
   1432e:	9f 90       	pop	r9
   14330:	8f 90       	pop	r8
   14332:	7f 90       	pop	r7
   14334:	6f 90       	pop	r6
   14336:	5f 90       	pop	r5
   14338:	4f 90       	pop	r4
   1433a:	3f 90       	pop	r3
   1433c:	2f 90       	pop	r2
   1433e:	08 95       	ret
   14340:	82 fd       	sbrc	r24, 2
   14342:	49 ce       	rjmp	.-878    	; 0x13fd6 <_ZN10SdBaseFile5writeEPKvj+0x50>
   14344:	5c ce       	rjmp	.-840    	; 0x13ffe <_ZN10SdBaseFile5writeEPKvj+0x78>

00014346 <_ZN5SdFat5chdirEb>:
   14346:	0f 93       	push	r16
   14348:	1f 93       	push	r17
   1434a:	cf 93       	push	r28
   1434c:	df 93       	push	r29
   1434e:	ec 01       	movw	r28, r24
   14350:	66 23       	and	r22, r22
   14352:	29 f0       	breq	.+10     	; 0x1435e <_ZN5SdFat5chdirEb+0x18>
   14354:	83 96       	adiw	r24, 0x23	; 35
   14356:	80 93 c2 25 	sts	0x25C2, r24
   1435a:	90 93 c3 25 	sts	0x25C3, r25
   1435e:	8e a1       	lds	r24, 0x4e
   14360:	8e 01       	movw	r16, r28
   14362:	0d 5d       	subi	r16, 0xDD	; 221
   14364:	1f 4f       	sbci	r17, 0xFF	; 255
   14366:	88 23       	and	r24, r24
   14368:	19 f0       	breq	.+6      	; 0x14370 <_ZN5SdFat5chdirEb+0x2a>
   1436a:	c8 01       	movw	r24, r16
   1436c:	0e 94 f2 99 	call	0x133e4	; 0x133e4 <_ZN10SdBaseFile5closeEv>
   14370:	be 01       	movw	r22, r28
   14372:	6b 5f       	subi	r22, 0xFB	; 251
   14374:	7f 4f       	sbci	r23, 0xFF	; 255
   14376:	c8 01       	movw	r24, r16
   14378:	0e 94 5f 99 	call	0x132be	; 0x132be <_ZN10SdBaseFile8openRootEP8SdVolume>
   1437c:	df 91       	pop	r29
   1437e:	cf 91       	pop	r28
   14380:	1f 91       	pop	r17
   14382:	0f 91       	pop	r16
   14384:	08 95       	ret

00014386 <_ZN5SdFat5beginEi>:
   14386:	ef 92       	push	r14
   14388:	ff 92       	push	r15
   1438a:	0f 93       	push	r16
   1438c:	1f 93       	push	r17
   1438e:	cf 93       	push	r28
   14390:	df 93       	push	r29
   14392:	0f 92       	push	r0
   14394:	0f 92       	push	r0
   14396:	cd b7       	in	r28, 0x3d	; 61
   14398:	de b7       	in	r29, 0x3e	; 62
   1439a:	7c 01       	movw	r14, r24
   1439c:	69 83       	std	Y+1, r22	; 0x01
   1439e:	7a 83       	std	Y+2, r23	; 0x02
   143a0:	69 81       	ldd	r22, Y+1	; 0x01
   143a2:	7a 81       	ldd	r23, Y+2	; 0x02
   143a4:	0e 94 ac 91 	call	0x12358	; 0x12358 <_ZN7Sd2Card4initEi>
   143a8:	88 23       	and	r24, r24
   143aa:	b1 f0       	breq	.+44     	; 0x143d8 <_ZN5SdFat5beginEi+0x52>
   143ac:	87 01       	movw	r16, r14
   143ae:	0b 5f       	subi	r16, 0xFB	; 251
   143b0:	1f 4f       	sbci	r17, 0xFF	; 255
   143b2:	c8 01       	movw	r24, r16
   143b4:	b7 01       	movw	r22, r14
   143b6:	41 e0       	ldi	r20, 0x01	; 1
   143b8:	0e 94 b9 a5 	call	0x14b72	; 0x14b72 <_ZN8SdVolume4initEP7Sd2Cardh>
   143bc:	88 23       	and	r24, r24
   143be:	39 f4       	brne	.+14     	; 0x143ce <_ZN5SdFat5beginEi+0x48>
   143c0:	c8 01       	movw	r24, r16
   143c2:	b7 01       	movw	r22, r14
   143c4:	40 e0       	ldi	r20, 0x00	; 0
   143c6:	0e 94 b9 a5 	call	0x14b72	; 0x14b72 <_ZN8SdVolume4initEP7Sd2Cardh>
   143ca:	88 23       	and	r24, r24
   143cc:	29 f0       	breq	.+10     	; 0x143d8 <_ZN5SdFat5beginEi+0x52>
   143ce:	c7 01       	movw	r24, r14
   143d0:	61 e0       	ldi	r22, 0x01	; 1
   143d2:	0e 94 a3 a1 	call	0x14346	; 0x14346 <_ZN5SdFat5chdirEb>
   143d6:	01 c0       	rjmp	.+2      	; 0x143da <_ZN5SdFat5beginEi+0x54>
   143d8:	80 e0       	ldi	r24, 0x00	; 0
   143da:	0f 90       	pop	r0
   143dc:	0f 90       	pop	r0
   143de:	df 91       	pop	r29
   143e0:	cf 91       	pop	r28
   143e2:	1f 91       	pop	r17
   143e4:	0f 91       	pop	r16
   143e6:	ff 90       	pop	r15
   143e8:	ef 90       	pop	r14
   143ea:	08 95       	ret

000143ec <_ZN5SdFat5chdirEPKcb>:
   143ec:	ff 92       	push	r15
   143ee:	0f 93       	push	r16
   143f0:	1f 93       	push	r17
   143f2:	cf 93       	push	r28
   143f4:	df 93       	push	r29
   143f6:	cd b7       	in	r28, 0x3d	; 61
   143f8:	de b7       	in	r29, 0x3e	; 62
   143fa:	6b 97       	sbiw	r28, 0x1b	; 27
   143fc:	cd bf       	out	0x3d, r28	; 61
   143fe:	de bf       	out	0x3e, r29	; 62
   14400:	fb 01       	movw	r30, r22
   14402:	f4 2e       	mov	r15, r20
   14404:	19 82       	std	Y+1, r1	; 0x01
   14406:	1c 82       	std	Y+4, r1	; 0x04
   14408:	20 81       	ld	r18, Z
   1440a:	2f 32       	cpi	r18, 0x2F	; 47
   1440c:	39 f4       	brne	.+14     	; 0x1441c <_ZN5SdFat5chdirEPKcb+0x30>
   1440e:	21 81       	ldd	r18, Z+1	; 0x01
   14410:	22 23       	and	r18, r18
   14412:	21 f4       	brne	.+8      	; 0x1441c <_ZN5SdFat5chdirEPKcb+0x30>
   14414:	64 2f       	mov	r22, r20
   14416:	0e 94 a3 a1 	call	0x14346	; 0x14346 <_ZN5SdFat5chdirEb>
   1441a:	21 c0       	rjmp	.+66     	; 0x1445e <_ZN5SdFat5chdirEPKcb+0x72>
   1441c:	8c 01       	movw	r16, r24
   1441e:	0d 5d       	subi	r16, 0xDD	; 221
   14420:	1f 4f       	sbci	r17, 0xFF	; 255
   14422:	ce 01       	movw	r24, r28
   14424:	01 96       	adiw	r24, 0x01	; 1
   14426:	b8 01       	movw	r22, r16
   14428:	af 01       	movw	r20, r30
   1442a:	21 e0       	ldi	r18, 0x01	; 1
   1442c:	0e 94 82 9d 	call	0x13b04	; 0x13b04 <_ZN10SdBaseFile4openEPS_PKch>
   14430:	88 23       	and	r24, r24
   14432:	91 f0       	breq	.+36     	; 0x14458 <_ZN5SdFat5chdirEPKcb+0x6c>
   14434:	8c 81       	ldd	r24, Y+4	; 0x04
   14436:	82 30       	cpi	r24, 0x02	; 2
   14438:	78 f0       	brcs	.+30     	; 0x14458 <_ZN5SdFat5chdirEPKcb+0x6c>
   1443a:	d8 01       	movw	r26, r16
   1443c:	fe 01       	movw	r30, r28
   1443e:	31 96       	adiw	r30, 0x01	; 1
   14440:	8b e1       	ldi	r24, 0x1B	; 27
   14442:	01 90       	ld	r0, Z+
   14444:	0d 92       	st	X+, r0
   14446:	81 50       	subi	r24, 0x01	; 1
   14448:	e1 f7       	brne	.-8      	; 0x14442 <_ZN5SdFat5chdirEPKcb+0x56>
   1444a:	ff 20       	and	r15, r15
   1444c:	39 f0       	breq	.+14     	; 0x1445c <_ZN5SdFat5chdirEPKcb+0x70>
   1444e:	00 93 c2 25 	sts	0x25C2, r16
   14452:	10 93 c3 25 	sts	0x25C3, r17
   14456:	02 c0       	rjmp	.+4      	; 0x1445c <_ZN5SdFat5chdirEPKcb+0x70>
   14458:	80 e0       	ldi	r24, 0x00	; 0
   1445a:	01 c0       	rjmp	.+2      	; 0x1445e <_ZN5SdFat5chdirEPKcb+0x72>
   1445c:	81 e0       	ldi	r24, 0x01	; 1
   1445e:	6b 96       	adiw	r28, 0x1b	; 27
   14460:	cd bf       	out	0x3d, r28	; 61
   14462:	de bf       	out	0x3e, r29	; 62
   14464:	df 91       	pop	r29
   14466:	cf 91       	pop	r28
   14468:	1f 91       	pop	r17
   1446a:	0f 91       	pop	r16
   1446c:	ff 90       	pop	r15
   1446e:	08 95       	ret

00014470 <_ZN5SdFat2lsEh>:
   14470:	46 2f       	mov	r20, r22
   14472:	20 91 cc 23 	lds	r18, 0x23CC
   14476:	30 91 cd 23 	lds	r19, 0x23CD
   1447a:	83 96       	adiw	r24, 0x23	; 35
   1447c:	b9 01       	movw	r22, r18
   1447e:	20 e0       	ldi	r18, 0x00	; 0
   14480:	0e 94 55 9c 	call	0x138aa	; 0x138aa <_ZN10SdBaseFile2lsEP5Printhh>
   14484:	08 95       	ret

00014486 <_ZN5SdFat5mkdirEPKcb>:
   14486:	cf 93       	push	r28
   14488:	df 93       	push	r29
   1448a:	cd b7       	in	r28, 0x3d	; 61
   1448c:	de b7       	in	r29, 0x3e	; 62
   1448e:	6b 97       	sbiw	r28, 0x1b	; 27
   14490:	cd bf       	out	0x3d, r28	; 61
   14492:	de bf       	out	0x3e, r29	; 62
   14494:	fb 01       	movw	r30, r22
   14496:	24 2f       	mov	r18, r20
   14498:	19 82       	std	Y+1, r1	; 0x01
   1449a:	1c 82       	std	Y+4, r1	; 0x04
   1449c:	bc 01       	movw	r22, r24
   1449e:	6d 5d       	subi	r22, 0xDD	; 221
   144a0:	7f 4f       	sbci	r23, 0xFF	; 255
   144a2:	ce 01       	movw	r24, r28
   144a4:	01 96       	adiw	r24, 0x01	; 1
   144a6:	af 01       	movw	r20, r30
   144a8:	0e 94 01 9f 	call	0x13e02	; 0x13e02 <_ZN10SdBaseFile5mkdirEPS_PKcb>
   144ac:	6b 96       	adiw	r28, 0x1b	; 27
   144ae:	cd bf       	out	0x3d, r28	; 61
   144b0:	de bf       	out	0x3e, r29	; 62
   144b2:	df 91       	pop	r29
   144b4:	cf 91       	pop	r28
   144b6:	08 95       	ret

000144b8 <_ZN5SdFat6removeEPKc>:
   144b8:	83 96       	adiw	r24, 0x23	; 35
   144ba:	0e 94 34 9e 	call	0x13c68	; 0x13c68 <_ZN10SdBaseFile6removeEPS_PKc>
   144be:	08 95       	ret

000144c0 <_ZN5SdFat5rmdirEPKc>:
   144c0:	cf 93       	push	r28
   144c2:	df 93       	push	r29
   144c4:	cd b7       	in	r28, 0x3d	; 61
   144c6:	de b7       	in	r29, 0x3e	; 62
   144c8:	6b 97       	sbiw	r28, 0x1b	; 27
   144ca:	cd bf       	out	0x3d, r28	; 61
   144cc:	de bf       	out	0x3e, r29	; 62
   144ce:	19 82       	std	Y+1, r1	; 0x01
   144d0:	1c 82       	std	Y+4, r1	; 0x04
   144d2:	ce 01       	movw	r24, r28
   144d4:	01 96       	adiw	r24, 0x01	; 1
   144d6:	41 e0       	ldi	r20, 0x01	; 1
   144d8:	0e 94 53 9e 	call	0x13ca6	; 0x13ca6 <_ZN10SdBaseFile4openEPKch>
   144dc:	88 23       	and	r24, r24
   144de:	29 f0       	breq	.+10     	; 0x144ea <_ZN5SdFat5rmdirEPKc+0x2a>
   144e0:	ce 01       	movw	r24, r28
   144e2:	01 96       	adiw	r24, 0x01	; 1
   144e4:	0e 94 d4 9a 	call	0x135a8	; 0x135a8 <_ZN10SdBaseFile5rmdirEv>
   144e8:	01 c0       	rjmp	.+2      	; 0x144ec <_ZN5SdFat5rmdirEPKc+0x2c>
   144ea:	80 e0       	ldi	r24, 0x00	; 0
   144ec:	6b 96       	adiw	r28, 0x1b	; 27
   144ee:	cd bf       	out	0x3d, r28	; 61
   144f0:	de bf       	out	0x3e, r29	; 62
   144f2:	df 91       	pop	r29
   144f4:	cf 91       	pop	r28
   144f6:	08 95       	ret

000144f8 <_ZN6SdFile5writeEh>:
   144f8:	cf 93       	push	r28
   144fa:	df 93       	push	r29
   144fc:	0f 92       	push	r0
   144fe:	cd b7       	in	r28, 0x3d	; 61
   14500:	de b7       	in	r29, 0x3e	; 62
   14502:	69 83       	std	Y+1, r22	; 0x01
   14504:	04 96       	adiw	r24, 0x04	; 4
   14506:	be 01       	movw	r22, r28
   14508:	6f 5f       	subi	r22, 0xFF	; 255
   1450a:	7f 4f       	sbci	r23, 0xFF	; 255
   1450c:	41 e0       	ldi	r20, 0x01	; 1
   1450e:	50 e0       	ldi	r21, 0x00	; 0
   14510:	0e 94 c3 9f 	call	0x13f86	; 0x13f86 <_ZN10SdBaseFile5writeEPKvj>
   14514:	21 e0       	ldi	r18, 0x01	; 1
   14516:	30 e0       	ldi	r19, 0x00	; 0
   14518:	81 30       	cpi	r24, 0x01	; 1
   1451a:	91 05       	cpc	r25, r1
   1451c:	11 f0       	breq	.+4      	; 0x14522 <_ZN6SdFile5writeEh+0x2a>
   1451e:	20 e0       	ldi	r18, 0x00	; 0
   14520:	30 e0       	ldi	r19, 0x00	; 0
   14522:	c9 01       	movw	r24, r18
   14524:	0f 90       	pop	r0
   14526:	df 91       	pop	r29
   14528:	cf 91       	pop	r28
   1452a:	08 95       	ret

0001452c <_ZN6SdFile5writeEPKvj>:
   1452c:	04 96       	adiw	r24, 0x04	; 4
   1452e:	0e 94 c3 9f 	call	0x13f86	; 0x13f86 <_ZN10SdBaseFile5writeEPKvj>
   14532:	08 95       	ret

00014534 <_ZN8SdVolume9cacheSyncEv>:
   14534:	80 91 ca 25 	lds	r24, 0x25CA
   14538:	80 ff       	sbrs	r24, 0
   1453a:	3d c0       	rjmp	.+122    	; 0x145b6 <_ZN8SdVolume9cacheSyncEv+0x82>
   1453c:	40 91 cb 25 	lds	r20, 0x25CB
   14540:	50 91 cc 25 	lds	r21, 0x25CC
   14544:	60 91 cd 25 	lds	r22, 0x25CD
   14548:	70 91 ce 25 	lds	r23, 0x25CE
   1454c:	80 91 c4 25 	lds	r24, 0x25C4
   14550:	90 91 c5 25 	lds	r25, 0x25C5
   14554:	2f ec       	ldi	r18, 0xCF	; 207
   14556:	35 e2       	ldi	r19, 0x25	; 37
   14558:	0e 94 57 93 	call	0x126ae	; 0x126ae <_ZN7Sd2Card10writeBlockEmPKh>
   1455c:	88 23       	and	r24, r24
   1455e:	69 f1       	breq	.+90     	; 0x145ba <_ZN8SdVolume9cacheSyncEv+0x86>
   14560:	80 91 ca 25 	lds	r24, 0x25CA
   14564:	81 ff       	sbrs	r24, 1
   14566:	22 c0       	rjmp	.+68     	; 0x145ac <_ZN8SdVolume9cacheSyncEv+0x78>
   14568:	80 91 c6 25 	lds	r24, 0x25C6
   1456c:	90 91 c7 25 	lds	r25, 0x25C7
   14570:	a0 91 c8 25 	lds	r26, 0x25C8
   14574:	b0 91 c9 25 	lds	r27, 0x25C9
   14578:	00 97       	sbiw	r24, 0x00	; 0
   1457a:	a1 05       	cpc	r26, r1
   1457c:	b1 05       	cpc	r27, r1
   1457e:	b1 f0       	breq	.+44     	; 0x145ac <_ZN8SdVolume9cacheSyncEv+0x78>
   14580:	40 91 cb 25 	lds	r20, 0x25CB
   14584:	50 91 cc 25 	lds	r21, 0x25CC
   14588:	60 91 cd 25 	lds	r22, 0x25CD
   1458c:	70 91 ce 25 	lds	r23, 0x25CE
   14590:	48 0f       	add	r20, r24
   14592:	59 1f       	adc	r21, r25
   14594:	6a 1f       	adc	r22, r26
   14596:	7b 1f       	adc	r23, r27
   14598:	80 91 c4 25 	lds	r24, 0x25C4
   1459c:	90 91 c5 25 	lds	r25, 0x25C5
   145a0:	2f ec       	ldi	r18, 0xCF	; 207
   145a2:	35 e2       	ldi	r19, 0x25	; 37
   145a4:	0e 94 57 93 	call	0x126ae	; 0x126ae <_ZN7Sd2Card10writeBlockEmPKh>
   145a8:	88 23       	and	r24, r24
   145aa:	49 f0       	breq	.+18     	; 0x145be <_ZN8SdVolume9cacheSyncEv+0x8a>
   145ac:	80 91 ca 25 	lds	r24, 0x25CA
   145b0:	8e 7f       	andi	r24, 0xFE	; 254
   145b2:	80 93 ca 25 	sts	0x25CA, r24
   145b6:	81 e0       	ldi	r24, 0x01	; 1
   145b8:	08 95       	ret
   145ba:	80 e0       	ldi	r24, 0x00	; 0
   145bc:	08 95       	ret
   145be:	80 e0       	ldi	r24, 0x00	; 0
   145c0:	08 95       	ret

000145c2 <_ZN8SdVolume10cacheFetchEmh>:
   145c2:	cf 92       	push	r12
   145c4:	df 92       	push	r13
   145c6:	ef 92       	push	r14
   145c8:	ff 92       	push	r15
   145ca:	cf 93       	push	r28
   145cc:	6b 01       	movw	r12, r22
   145ce:	7c 01       	movw	r14, r24
   145d0:	c4 2f       	mov	r28, r20
   145d2:	80 91 cb 25 	lds	r24, 0x25CB
   145d6:	90 91 cc 25 	lds	r25, 0x25CC
   145da:	a0 91 cd 25 	lds	r26, 0x25CD
   145de:	b0 91 ce 25 	lds	r27, 0x25CE
   145e2:	8c 15       	cp	r24, r12
   145e4:	9d 05       	cpc	r25, r13
   145e6:	ae 05       	cpc	r26, r14
   145e8:	bf 05       	cpc	r27, r15
   145ea:	e1 f0       	breq	.+56     	; 0x14624 <_ZN8SdVolume10cacheFetchEmh+0x62>
   145ec:	0e 94 9a a2 	call	0x14534	; 0x14534 <_ZN8SdVolume9cacheSyncEv>
   145f0:	88 23       	and	r24, r24
   145f2:	09 f1       	breq	.+66     	; 0x14636 <_ZN8SdVolume10cacheFetchEmh+0x74>
   145f4:	c2 fd       	sbrc	r28, 2
   145f6:	0c c0       	rjmp	.+24     	; 0x14610 <_ZN8SdVolume10cacheFetchEmh+0x4e>
   145f8:	80 91 c4 25 	lds	r24, 0x25C4
   145fc:	90 91 c5 25 	lds	r25, 0x25C5
   14600:	b7 01       	movw	r22, r14
   14602:	a6 01       	movw	r20, r12
   14604:	2f ec       	ldi	r18, 0xCF	; 207
   14606:	35 e2       	ldi	r19, 0x25	; 37
   14608:	0e 94 78 91 	call	0x122f0	; 0x122f0 <_ZN7Sd2Card9readBlockEmPh>
   1460c:	88 23       	and	r24, r24
   1460e:	99 f0       	breq	.+38     	; 0x14636 <_ZN8SdVolume10cacheFetchEmh+0x74>
   14610:	10 92 ca 25 	sts	0x25CA, r1
   14614:	c0 92 cb 25 	sts	0x25CB, r12
   14618:	d0 92 cc 25 	sts	0x25CC, r13
   1461c:	e0 92 cd 25 	sts	0x25CD, r14
   14620:	f0 92 ce 25 	sts	0x25CE, r15
   14624:	c3 70       	andi	r28, 0x03	; 3
   14626:	80 91 ca 25 	lds	r24, 0x25CA
   1462a:	8c 2b       	or	r24, r28
   1462c:	80 93 ca 25 	sts	0x25CA, r24
   14630:	8f ec       	ldi	r24, 0xCF	; 207
   14632:	95 e2       	ldi	r25, 0x25	; 37
   14634:	02 c0       	rjmp	.+4      	; 0x1463a <_ZN8SdVolume10cacheFetchEmh+0x78>
   14636:	80 e0       	ldi	r24, 0x00	; 0
   14638:	90 e0       	ldi	r25, 0x00	; 0
   1463a:	cf 91       	pop	r28
   1463c:	ff 90       	pop	r15
   1463e:	ef 90       	pop	r14
   14640:	df 90       	pop	r13
   14642:	cf 90       	pop	r12
   14644:	08 95       	ret

00014646 <_ZN8SdVolume13cacheFetchFatEmh>:
   14646:	42 60       	ori	r20, 0x02	; 2
   14648:	0e 94 e1 a2 	call	0x145c2	; 0x145c2 <_ZN8SdVolume10cacheFetchEmh>
   1464c:	08 95       	ret

0001464e <_ZN8SdVolume14cacheWriteDataEv>:
   1464e:	0e 94 9a a2 	call	0x14534	; 0x14534 <_ZN8SdVolume9cacheSyncEv>
   14652:	08 95       	ret

00014654 <_ZN8SdVolume15cacheInvalidateEv>:
   14654:	8f ef       	ldi	r24, 0xFF	; 255
   14656:	9f ef       	ldi	r25, 0xFF	; 255
   14658:	dc 01       	movw	r26, r24
   1465a:	80 93 cb 25 	sts	0x25CB, r24
   1465e:	90 93 cc 25 	sts	0x25CC, r25
   14662:	a0 93 cd 25 	sts	0x25CD, r26
   14666:	b0 93 ce 25 	sts	0x25CE, r27
   1466a:	10 92 ca 25 	sts	0x25CA, r1
   1466e:	08 95       	ret

00014670 <_ZNK8SdVolume17clusterStartBlockEm>:
   14670:	0f 93       	push	r16
   14672:	1f 93       	push	r17
   14674:	cf 93       	push	r28
   14676:	df 93       	push	r29
   14678:	ec 01       	movw	r28, r24
   1467a:	db 01       	movw	r26, r22
   1467c:	ca 01       	movw	r24, r20
   1467e:	02 97       	sbiw	r24, 0x02	; 2
   14680:	a1 09       	sbc	r26, r1
   14682:	b1 09       	sbc	r27, r1
   14684:	2c 81       	ldd	r18, Y+4	; 0x04
   14686:	30 e0       	ldi	r19, 0x00	; 0
   14688:	40 e0       	ldi	r20, 0x00	; 0
   1468a:	50 e0       	ldi	r21, 0x00	; 0
   1468c:	bc 01       	movw	r22, r24
   1468e:	cd 01       	movw	r24, r26
   14690:	0e 94 cd b4 	call	0x1699a	; 0x1699a <__mulsi3>
   14694:	8b 01       	movw	r16, r22
   14696:	9c 01       	movw	r18, r24
   14698:	8e 85       	ldd	r24, Y+14	; 0x0e
   1469a:	9f 85       	ldd	r25, Y+15	; 0x0f
   1469c:	a8 89       	ldd	r26, Y+16	; 0x10
   1469e:	b9 89       	ldd	r27, Y+17	; 0x11
   146a0:	08 0f       	add	r16, r24
   146a2:	19 1f       	adc	r17, r25
   146a4:	2a 1f       	adc	r18, r26
   146a6:	3b 1f       	adc	r19, r27
   146a8:	b8 01       	movw	r22, r16
   146aa:	c9 01       	movw	r24, r18
   146ac:	df 91       	pop	r29
   146ae:	cf 91       	pop	r28
   146b0:	1f 91       	pop	r17
   146b2:	0f 91       	pop	r16
   146b4:	08 95       	ret

000146b6 <_ZN8SdVolume6fatGetEmPm>:
   146b6:	cf 92       	push	r12
   146b8:	df 92       	push	r13
   146ba:	ef 92       	push	r14
   146bc:	ff 92       	push	r15
   146be:	0f 93       	push	r16
   146c0:	1f 93       	push	r17
   146c2:	cf 93       	push	r28
   146c4:	df 93       	push	r29
   146c6:	ec 01       	movw	r28, r24
   146c8:	6a 01       	movw	r12, r20
   146ca:	7b 01       	movw	r14, r22
   146cc:	89 01       	movw	r16, r18
   146ce:	42 30       	cpi	r20, 0x02	; 2
   146d0:	51 05       	cpc	r21, r1
   146d2:	61 05       	cpc	r22, r1
   146d4:	71 05       	cpc	r23, r1
   146d6:	08 f4       	brcc	.+2      	; 0x146da <_ZN8SdVolume6fatGetEmPm+0x24>
   146d8:	60 c0       	rjmp	.+192    	; 0x1479a <_ZN8SdVolume6fatGetEmPm+0xe4>
   146da:	89 85       	ldd	r24, Y+9	; 0x09
   146dc:	9a 85       	ldd	r25, Y+10	; 0x0a
   146de:	ab 85       	ldd	r26, Y+11	; 0x0b
   146e0:	bc 85       	ldd	r27, Y+12	; 0x0c
   146e2:	01 96       	adiw	r24, 0x01	; 1
   146e4:	a1 1d       	adc	r26, r1
   146e6:	b1 1d       	adc	r27, r1
   146e8:	84 17       	cp	r24, r20
   146ea:	95 07       	cpc	r25, r21
   146ec:	a6 07       	cpc	r26, r22
   146ee:	b7 07       	cpc	r27, r23
   146f0:	08 f4       	brcc	.+2      	; 0x146f4 <_ZN8SdVolume6fatGetEmPm+0x3e>
   146f2:	53 c0       	rjmp	.+166    	; 0x1479a <_ZN8SdVolume6fatGetEmPm+0xe4>
   146f4:	8f 89       	ldd	r24, Y+23	; 0x17
   146f6:	80 31       	cpi	r24, 0x10	; 16
   146f8:	29 f4       	brne	.+10     	; 0x14704 <_ZN8SdVolume6fatGetEmPm+0x4e>
   146fa:	bb 27       	eor	r27, r27
   146fc:	a7 2f       	mov	r26, r23
   146fe:	96 2f       	mov	r25, r22
   14700:	85 2f       	mov	r24, r21
   14702:	0c c0       	rjmp	.+24     	; 0x1471c <_ZN8SdVolume6fatGetEmPm+0x66>
   14704:	80 32       	cpi	r24, 0x20	; 32
   14706:	09 f0       	breq	.+2      	; 0x1470a <_ZN8SdVolume6fatGetEmPm+0x54>
   14708:	48 c0       	rjmp	.+144    	; 0x1479a <_ZN8SdVolume6fatGetEmPm+0xe4>
   1470a:	db 01       	movw	r26, r22
   1470c:	ca 01       	movw	r24, r20
   1470e:	e7 e0       	ldi	r30, 0x07	; 7
   14710:	b6 95       	lsr	r27
   14712:	a7 95       	ror	r26
   14714:	97 95       	ror	r25
   14716:	87 95       	ror	r24
   14718:	ea 95       	dec	r30
   1471a:	d1 f7       	brne	.-12     	; 0x14710 <_ZN8SdVolume6fatGetEmPm+0x5a>
   1471c:	4b 89       	ldd	r20, Y+19	; 0x13
   1471e:	5c 89       	ldd	r21, Y+20	; 0x14
   14720:	6d 89       	ldd	r22, Y+21	; 0x15
   14722:	7e 89       	ldd	r23, Y+22	; 0x16
   14724:	84 0f       	add	r24, r20
   14726:	95 1f       	adc	r25, r21
   14728:	a6 1f       	adc	r26, r22
   1472a:	b7 1f       	adc	r27, r23
   1472c:	bc 01       	movw	r22, r24
   1472e:	cd 01       	movw	r24, r26
   14730:	40 e0       	ldi	r20, 0x00	; 0
   14732:	0e 94 23 a3 	call	0x14646	; 0x14646 <_ZN8SdVolume13cacheFetchFatEmh>
   14736:	00 97       	sbiw	r24, 0x00	; 0
   14738:	81 f1       	breq	.+96     	; 0x1479a <_ZN8SdVolume6fatGetEmPm+0xe4>
   1473a:	2f 89       	ldd	r18, Y+23	; 0x17
   1473c:	20 31       	cpi	r18, 0x10	; 16
   1473e:	91 f4       	brne	.+36     	; 0x14764 <_ZN8SdVolume6fatGetEmPm+0xae>
   14740:	2f ef       	ldi	r18, 0xFF	; 255
   14742:	30 e0       	ldi	r19, 0x00	; 0
   14744:	40 e0       	ldi	r20, 0x00	; 0
   14746:	50 e0       	ldi	r21, 0x00	; 0
   14748:	c2 22       	and	r12, r18
   1474a:	d3 22       	and	r13, r19
   1474c:	e4 22       	and	r14, r20
   1474e:	f5 22       	and	r15, r21
   14750:	cc 0c       	add	r12, r12
   14752:	dd 1c       	adc	r13, r13
   14754:	c8 0e       	add	r12, r24
   14756:	d9 1e       	adc	r13, r25
   14758:	f6 01       	movw	r30, r12
   1475a:	80 81       	ld	r24, Z
   1475c:	91 81       	ldd	r25, Z+1	; 0x01
   1475e:	a0 e0       	ldi	r26, 0x00	; 0
   14760:	b0 e0       	ldi	r27, 0x00	; 0
   14762:	14 c0       	rjmp	.+40     	; 0x1478c <_ZN8SdVolume6fatGetEmPm+0xd6>
   14764:	2f e7       	ldi	r18, 0x7F	; 127
   14766:	30 e0       	ldi	r19, 0x00	; 0
   14768:	40 e0       	ldi	r20, 0x00	; 0
   1476a:	50 e0       	ldi	r21, 0x00	; 0
   1476c:	c2 22       	and	r12, r18
   1476e:	d3 22       	and	r13, r19
   14770:	e4 22       	and	r14, r20
   14772:	f5 22       	and	r15, r21
   14774:	cc 0c       	add	r12, r12
   14776:	dd 1c       	adc	r13, r13
   14778:	cc 0c       	add	r12, r12
   1477a:	dd 1c       	adc	r13, r13
   1477c:	c8 0e       	add	r12, r24
   1477e:	d9 1e       	adc	r13, r25
   14780:	f6 01       	movw	r30, r12
   14782:	80 81       	ld	r24, Z
   14784:	91 81       	ldd	r25, Z+1	; 0x01
   14786:	a2 81       	ldd	r26, Z+2	; 0x02
   14788:	b3 81       	ldd	r27, Z+3	; 0x03
   1478a:	bf 70       	andi	r27, 0x0F	; 15
   1478c:	f8 01       	movw	r30, r16
   1478e:	80 83       	st	Z, r24
   14790:	91 83       	std	Z+1, r25	; 0x01
   14792:	a2 83       	std	Z+2, r26	; 0x02
   14794:	b3 83       	std	Z+3, r27	; 0x03
   14796:	81 e0       	ldi	r24, 0x01	; 1
   14798:	01 c0       	rjmp	.+2      	; 0x1479c <_ZN8SdVolume6fatGetEmPm+0xe6>
   1479a:	80 e0       	ldi	r24, 0x00	; 0
   1479c:	df 91       	pop	r29
   1479e:	cf 91       	pop	r28
   147a0:	1f 91       	pop	r17
   147a2:	0f 91       	pop	r16
   147a4:	ff 90       	pop	r15
   147a6:	ef 90       	pop	r14
   147a8:	df 90       	pop	r13
   147aa:	cf 90       	pop	r12
   147ac:	08 95       	ret

000147ae <_ZN8SdVolume6fatPutEmm>:
   147ae:	8f 92       	push	r8
   147b0:	9f 92       	push	r9
   147b2:	af 92       	push	r10
   147b4:	bf 92       	push	r11
   147b6:	cf 92       	push	r12
   147b8:	df 92       	push	r13
   147ba:	ef 92       	push	r14
   147bc:	ff 92       	push	r15
   147be:	0f 93       	push	r16
   147c0:	1f 93       	push	r17
   147c2:	cf 93       	push	r28
   147c4:	df 93       	push	r29
   147c6:	ec 01       	movw	r28, r24
   147c8:	6a 01       	movw	r12, r20
   147ca:	7b 01       	movw	r14, r22
   147cc:	48 01       	movw	r8, r16
   147ce:	59 01       	movw	r10, r18
   147d0:	42 30       	cpi	r20, 0x02	; 2
   147d2:	51 05       	cpc	r21, r1
   147d4:	61 05       	cpc	r22, r1
   147d6:	71 05       	cpc	r23, r1
   147d8:	08 f4       	brcc	.+2      	; 0x147dc <_ZN8SdVolume6fatPutEmm+0x2e>
   147da:	58 c0       	rjmp	.+176    	; 0x1488c <_ZN8SdVolume6fatPutEmm+0xde>
   147dc:	89 85       	ldd	r24, Y+9	; 0x09
   147de:	9a 85       	ldd	r25, Y+10	; 0x0a
   147e0:	ab 85       	ldd	r26, Y+11	; 0x0b
   147e2:	bc 85       	ldd	r27, Y+12	; 0x0c
   147e4:	01 96       	adiw	r24, 0x01	; 1
   147e6:	a1 1d       	adc	r26, r1
   147e8:	b1 1d       	adc	r27, r1
   147ea:	84 17       	cp	r24, r20
   147ec:	95 07       	cpc	r25, r21
   147ee:	a6 07       	cpc	r26, r22
   147f0:	b7 07       	cpc	r27, r23
   147f2:	08 f4       	brcc	.+2      	; 0x147f6 <_ZN8SdVolume6fatPutEmm+0x48>
   147f4:	4b c0       	rjmp	.+150    	; 0x1488c <_ZN8SdVolume6fatPutEmm+0xde>
   147f6:	8f 89       	ldd	r24, Y+23	; 0x17
   147f8:	80 31       	cpi	r24, 0x10	; 16
   147fa:	29 f4       	brne	.+10     	; 0x14806 <_ZN8SdVolume6fatPutEmm+0x58>
   147fc:	bb 27       	eor	r27, r27
   147fe:	a7 2f       	mov	r26, r23
   14800:	96 2f       	mov	r25, r22
   14802:	85 2f       	mov	r24, r21
   14804:	0c c0       	rjmp	.+24     	; 0x1481e <_ZN8SdVolume6fatPutEmm+0x70>
   14806:	80 32       	cpi	r24, 0x20	; 32
   14808:	09 f0       	breq	.+2      	; 0x1480c <_ZN8SdVolume6fatPutEmm+0x5e>
   1480a:	40 c0       	rjmp	.+128    	; 0x1488c <_ZN8SdVolume6fatPutEmm+0xde>
   1480c:	db 01       	movw	r26, r22
   1480e:	ca 01       	movw	r24, r20
   14810:	17 e0       	ldi	r17, 0x07	; 7
   14812:	b6 95       	lsr	r27
   14814:	a7 95       	ror	r26
   14816:	97 95       	ror	r25
   14818:	87 95       	ror	r24
   1481a:	1a 95       	dec	r17
   1481c:	d1 f7       	brne	.-12     	; 0x14812 <_ZN8SdVolume6fatPutEmm+0x64>
   1481e:	4b 89       	ldd	r20, Y+19	; 0x13
   14820:	5c 89       	ldd	r21, Y+20	; 0x14
   14822:	6d 89       	ldd	r22, Y+21	; 0x15
   14824:	7e 89       	ldd	r23, Y+22	; 0x16
   14826:	84 0f       	add	r24, r20
   14828:	95 1f       	adc	r25, r21
   1482a:	a6 1f       	adc	r26, r22
   1482c:	b7 1f       	adc	r27, r23
   1482e:	bc 01       	movw	r22, r24
   14830:	cd 01       	movw	r24, r26
   14832:	41 e0       	ldi	r20, 0x01	; 1
   14834:	0e 94 23 a3 	call	0x14646	; 0x14646 <_ZN8SdVolume13cacheFetchFatEmh>
   14838:	00 97       	sbiw	r24, 0x00	; 0
   1483a:	41 f1       	breq	.+80     	; 0x1488c <_ZN8SdVolume6fatPutEmm+0xde>
   1483c:	2f 89       	ldd	r18, Y+23	; 0x17
   1483e:	20 31       	cpi	r18, 0x10	; 16
   14840:	81 f4       	brne	.+32     	; 0x14862 <_ZN8SdVolume6fatPutEmm+0xb4>
   14842:	2f ef       	ldi	r18, 0xFF	; 255
   14844:	30 e0       	ldi	r19, 0x00	; 0
   14846:	40 e0       	ldi	r20, 0x00	; 0
   14848:	50 e0       	ldi	r21, 0x00	; 0
   1484a:	c2 22       	and	r12, r18
   1484c:	d3 22       	and	r13, r19
   1484e:	e4 22       	and	r14, r20
   14850:	f5 22       	and	r15, r21
   14852:	f6 01       	movw	r30, r12
   14854:	ee 0f       	add	r30, r30
   14856:	ff 1f       	adc	r31, r31
   14858:	e8 0f       	add	r30, r24
   1485a:	f9 1f       	adc	r31, r25
   1485c:	80 82       	st	Z, r8
   1485e:	91 82       	std	Z+1, r9	; 0x01
   14860:	13 c0       	rjmp	.+38     	; 0x14888 <_ZN8SdVolume6fatPutEmm+0xda>
   14862:	2f e7       	ldi	r18, 0x7F	; 127
   14864:	30 e0       	ldi	r19, 0x00	; 0
   14866:	40 e0       	ldi	r20, 0x00	; 0
   14868:	50 e0       	ldi	r21, 0x00	; 0
   1486a:	c2 22       	and	r12, r18
   1486c:	d3 22       	and	r13, r19
   1486e:	e4 22       	and	r14, r20
   14870:	f5 22       	and	r15, r21
   14872:	f6 01       	movw	r30, r12
   14874:	ee 0f       	add	r30, r30
   14876:	ff 1f       	adc	r31, r31
   14878:	ee 0f       	add	r30, r30
   1487a:	ff 1f       	adc	r31, r31
   1487c:	e8 0f       	add	r30, r24
   1487e:	f9 1f       	adc	r31, r25
   14880:	80 82       	st	Z, r8
   14882:	91 82       	std	Z+1, r9	; 0x01
   14884:	a2 82       	std	Z+2, r10	; 0x02
   14886:	b3 82       	std	Z+3, r11	; 0x03
   14888:	81 e0       	ldi	r24, 0x01	; 1
   1488a:	01 c0       	rjmp	.+2      	; 0x1488e <_ZN8SdVolume6fatPutEmm+0xe0>
   1488c:	80 e0       	ldi	r24, 0x00	; 0
   1488e:	df 91       	pop	r29
   14890:	cf 91       	pop	r28
   14892:	1f 91       	pop	r17
   14894:	0f 91       	pop	r16
   14896:	ff 90       	pop	r15
   14898:	ef 90       	pop	r14
   1489a:	df 90       	pop	r13
   1489c:	cf 90       	pop	r12
   1489e:	bf 90       	pop	r11
   148a0:	af 90       	pop	r10
   148a2:	9f 90       	pop	r9
   148a4:	8f 90       	pop	r8
   148a6:	08 95       	ret

000148a8 <_ZN8SdVolume15allocContiguousEmPm>:
   148a8:	2f 92       	push	r2
   148aa:	3f 92       	push	r3
   148ac:	4f 92       	push	r4
   148ae:	5f 92       	push	r5
   148b0:	6f 92       	push	r6
   148b2:	7f 92       	push	r7
   148b4:	8f 92       	push	r8
   148b6:	9f 92       	push	r9
   148b8:	af 92       	push	r10
   148ba:	bf 92       	push	r11
   148bc:	cf 92       	push	r12
   148be:	df 92       	push	r13
   148c0:	ef 92       	push	r14
   148c2:	ff 92       	push	r15
   148c4:	0f 93       	push	r16
   148c6:	1f 93       	push	r17
   148c8:	cf 93       	push	r28
   148ca:	df 93       	push	r29
   148cc:	cd b7       	in	r28, 0x3d	; 61
   148ce:	de b7       	in	r29, 0x3e	; 62
   148d0:	2f 97       	sbiw	r28, 0x0f	; 15
   148d2:	cd bf       	out	0x3d, r28	; 61
   148d4:	de bf       	out	0x3e, r29	; 62
   148d6:	1c 01       	movw	r2, r24
   148d8:	4c 87       	std	Y+12, r20	; 0x0c
   148da:	5d 87       	std	Y+13, r21	; 0x0d
   148dc:	6e 87       	std	Y+14, r22	; 0x0e
   148de:	7f 87       	std	Y+15, r23	; 0x0f
   148e0:	2a 87       	std	Y+10, r18	; 0x0a
   148e2:	3b 87       	std	Y+11, r19	; 0x0b
   148e4:	dc 01       	movw	r26, r24
   148e6:	19 96       	adiw	r26, 0x09	; 9
   148e8:	2d 91       	ld	r18, X+
   148ea:	3d 91       	ld	r19, X+
   148ec:	4d 91       	ld	r20, X+
   148ee:	5c 91       	ld	r21, X
   148f0:	1c 97       	sbiw	r26, 0x0c	; 12
   148f2:	2f 5f       	subi	r18, 0xFF	; 255
   148f4:	3f 4f       	sbci	r19, 0xFF	; 255
   148f6:	4f 4f       	sbci	r20, 0xFF	; 255
   148f8:	5f 4f       	sbci	r21, 0xFF	; 255
   148fa:	2e 83       	std	Y+6, r18	; 0x06
   148fc:	3f 83       	std	Y+7, r19	; 0x07
   148fe:	48 87       	std	Y+8, r20	; 0x08
   14900:	59 87       	std	Y+9, r21	; 0x09
   14902:	ea 85       	ldd	r30, Y+10	; 0x0a
   14904:	fb 85       	ldd	r31, Y+11	; 0x0b
   14906:	40 80       	ld	r4, Z
   14908:	51 80       	ldd	r5, Z+1	; 0x01
   1490a:	62 80       	ldd	r6, Z+2	; 0x02
   1490c:	73 80       	ldd	r7, Z+3	; 0x03
   1490e:	41 14       	cp	r4, r1
   14910:	51 04       	cpc	r5, r1
   14912:	61 04       	cpc	r6, r1
   14914:	71 04       	cpc	r7, r1
   14916:	31 f0       	breq	.+12     	; 0x14924 <_ZN8SdVolume15allocContiguousEmPm+0x7c>
   14918:	08 94       	sec
   1491a:	41 1c       	adc	r4, r1
   1491c:	51 1c       	adc	r5, r1
   1491e:	61 1c       	adc	r6, r1
   14920:	71 1c       	adc	r7, r1
   14922:	10 c0       	rjmp	.+32     	; 0x14944 <_ZN8SdVolume15allocContiguousEmPm+0x9c>
   14924:	dc 01       	movw	r26, r24
   14926:	4d 90       	ld	r4, X+
   14928:	5d 90       	ld	r5, X+
   1492a:	6d 90       	ld	r6, X+
   1492c:	7c 90       	ld	r7, X
   1492e:	b1 e0       	ldi	r27, 0x01	; 1
   14930:	bd 83       	std	Y+5, r27	; 0x05
   14932:	2c 85       	ldd	r18, Y+12	; 0x0c
   14934:	3d 85       	ldd	r19, Y+13	; 0x0d
   14936:	4e 85       	ldd	r20, Y+14	; 0x0e
   14938:	5f 85       	ldd	r21, Y+15	; 0x0f
   1493a:	21 30       	cpi	r18, 0x01	; 1
   1493c:	31 05       	cpc	r19, r1
   1493e:	41 05       	cpc	r20, r1
   14940:	51 05       	cpc	r21, r1
   14942:	09 f0       	breq	.+2      	; 0x14946 <_ZN8SdVolume15allocContiguousEmPm+0x9e>
   14944:	1d 82       	std	Y+5, r1	; 0x05
   14946:	53 01       	movw	r10, r6
   14948:	42 01       	movw	r8, r4
   1494a:	cc 24       	eor	r12, r12
   1494c:	dd 24       	eor	r13, r13
   1494e:	76 01       	movw	r14, r12
   14950:	f1 01       	movw	r30, r2
   14952:	81 85       	ldd	r24, Z+9	; 0x09
   14954:	92 85       	ldd	r25, Z+10	; 0x0a
   14956:	a3 85       	ldd	r26, Z+11	; 0x0b
   14958:	b4 85       	ldd	r27, Z+12	; 0x0c
   1495a:	c8 16       	cp	r12, r24
   1495c:	d9 06       	cpc	r13, r25
   1495e:	ea 06       	cpc	r14, r26
   14960:	fb 06       	cpc	r15, r27
   14962:	08 f0       	brcs	.+2      	; 0x14966 <_ZN8SdVolume15allocContiguousEmPm+0xbe>
   14964:	93 c0       	rjmp	.+294    	; 0x14a8c <_ZN8SdVolume15allocContiguousEmPm+0x1e4>
   14966:	2e 81       	ldd	r18, Y+6	; 0x06
   14968:	3f 81       	ldd	r19, Y+7	; 0x07
   1496a:	48 85       	ldd	r20, Y+8	; 0x08
   1496c:	59 85       	ldd	r21, Y+9	; 0x09
   1496e:	28 15       	cp	r18, r8
   14970:	39 05       	cpc	r19, r9
   14972:	4a 05       	cpc	r20, r10
   14974:	5b 05       	cpc	r21, r11
   14976:	50 f4       	brcc	.+20     	; 0x1498c <_ZN8SdVolume15allocContiguousEmPm+0xe4>
   14978:	82 e0       	ldi	r24, 0x02	; 2
   1497a:	88 2e       	mov	r8, r24
   1497c:	91 2c       	mov	r9, r1
   1497e:	a1 2c       	mov	r10, r1
   14980:	b1 2c       	mov	r11, r1
   14982:	92 e0       	ldi	r25, 0x02	; 2
   14984:	49 2e       	mov	r4, r25
   14986:	51 2c       	mov	r5, r1
   14988:	61 2c       	mov	r6, r1
   1498a:	71 2c       	mov	r7, r1
   1498c:	c1 01       	movw	r24, r2
   1498e:	b5 01       	movw	r22, r10
   14990:	a4 01       	movw	r20, r8
   14992:	9e 01       	movw	r18, r28
   14994:	2f 5f       	subi	r18, 0xFF	; 255
   14996:	3f 4f       	sbci	r19, 0xFF	; 255
   14998:	0e 94 5b a3 	call	0x146b6	; 0x146b6 <_ZN8SdVolume6fatGetEmPm>
   1499c:	88 23       	and	r24, r24
   1499e:	09 f4       	brne	.+2      	; 0x149a2 <_ZN8SdVolume15allocContiguousEmPm+0xfa>
   149a0:	75 c0       	rjmp	.+234    	; 0x14a8c <_ZN8SdVolume15allocContiguousEmPm+0x1e4>
   149a2:	49 81       	ldd	r20, Y+1	; 0x01
   149a4:	5a 81       	ldd	r21, Y+2	; 0x02
   149a6:	6b 81       	ldd	r22, Y+3	; 0x03
   149a8:	7c 81       	ldd	r23, Y+4	; 0x04
   149aa:	d5 01       	movw	r26, r10
   149ac:	c4 01       	movw	r24, r8
   149ae:	01 96       	adiw	r24, 0x01	; 1
   149b0:	a1 1d       	adc	r26, r1
   149b2:	b1 1d       	adc	r27, r1
   149b4:	41 15       	cp	r20, r1
   149b6:	51 05       	cpc	r21, r1
   149b8:	61 05       	cpc	r22, r1
   149ba:	71 05       	cpc	r23, r1
   149bc:	19 f0       	breq	.+6      	; 0x149c4 <_ZN8SdVolume15allocContiguousEmPm+0x11c>
   149be:	2c 01       	movw	r4, r24
   149c0:	3d 01       	movw	r6, r26
   149c2:	0d c0       	rjmp	.+26     	; 0x149de <_ZN8SdVolume15allocContiguousEmPm+0x136>
   149c4:	84 19       	sub	r24, r4
   149c6:	95 09       	sbc	r25, r5
   149c8:	a6 09       	sbc	r26, r6
   149ca:	b7 09       	sbc	r27, r7
   149cc:	2c 85       	ldd	r18, Y+12	; 0x0c
   149ce:	3d 85       	ldd	r19, Y+13	; 0x0d
   149d0:	4e 85       	ldd	r20, Y+14	; 0x0e
   149d2:	5f 85       	ldd	r21, Y+15	; 0x0f
   149d4:	82 17       	cp	r24, r18
   149d6:	93 07       	cpc	r25, r19
   149d8:	a4 07       	cpc	r26, r20
   149da:	b5 07       	cpc	r27, r21
   149dc:	59 f0       	breq	.+22     	; 0x149f4 <_ZN8SdVolume15allocContiguousEmPm+0x14c>
   149de:	08 94       	sec
   149e0:	c1 1c       	adc	r12, r1
   149e2:	d1 1c       	adc	r13, r1
   149e4:	e1 1c       	adc	r14, r1
   149e6:	f1 1c       	adc	r15, r1
   149e8:	08 94       	sec
   149ea:	81 1c       	adc	r8, r1
   149ec:	91 1c       	adc	r9, r1
   149ee:	a1 1c       	adc	r10, r1
   149f0:	b1 1c       	adc	r11, r1
   149f2:	ae cf       	rjmp	.-164    	; 0x14950 <_ZN8SdVolume15allocContiguousEmPm+0xa8>
   149f4:	c1 01       	movw	r24, r2
   149f6:	a4 01       	movw	r20, r8
   149f8:	b5 01       	movw	r22, r10
   149fa:	0f ef       	ldi	r16, 0xFF	; 255
   149fc:	1f ef       	ldi	r17, 0xFF	; 255
   149fe:	2f ef       	ldi	r18, 0xFF	; 255
   14a00:	3f e0       	ldi	r19, 0x0F	; 15
   14a02:	0e 94 d7 a3 	call	0x147ae	; 0x147ae <_ZN8SdVolume6fatPutEmm>
   14a06:	88 23       	and	r24, r24
   14a08:	91 f4       	brne	.+36     	; 0x14a2e <_ZN8SdVolume15allocContiguousEmPm+0x186>
   14a0a:	40 c0       	rjmp	.+128    	; 0x14a8c <_ZN8SdVolume15allocContiguousEmPm+0x1e4>
   14a0c:	68 01       	movw	r12, r16
   14a0e:	79 01       	movw	r14, r18
   14a10:	08 94       	sec
   14a12:	c1 08       	sbc	r12, r1
   14a14:	d1 08       	sbc	r13, r1
   14a16:	e1 08       	sbc	r14, r1
   14a18:	f1 08       	sbc	r15, r1
   14a1a:	c1 01       	movw	r24, r2
   14a1c:	b7 01       	movw	r22, r14
   14a1e:	a6 01       	movw	r20, r12
   14a20:	0e 94 d7 a3 	call	0x147ae	; 0x147ae <_ZN8SdVolume6fatPutEmm>
   14a24:	88 23       	and	r24, r24
   14a26:	91 f1       	breq	.+100    	; 0x14a8c <_ZN8SdVolume15allocContiguousEmPm+0x1e4>
   14a28:	97 01       	movw	r18, r14
   14a2a:	86 01       	movw	r16, r12
   14a2c:	02 c0       	rjmp	.+4      	; 0x14a32 <_ZN8SdVolume15allocContiguousEmPm+0x18a>
   14a2e:	95 01       	movw	r18, r10
   14a30:	84 01       	movw	r16, r8
   14a32:	40 16       	cp	r4, r16
   14a34:	51 06       	cpc	r5, r17
   14a36:	62 06       	cpc	r6, r18
   14a38:	73 06       	cpc	r7, r19
   14a3a:	40 f3       	brcs	.-48     	; 0x14a0c <_ZN8SdVolume15allocContiguousEmPm+0x164>
   14a3c:	aa 85       	ldd	r26, Y+10	; 0x0a
   14a3e:	bb 85       	ldd	r27, Y+11	; 0x0b
   14a40:	4d 91       	ld	r20, X+
   14a42:	5d 91       	ld	r21, X+
   14a44:	6d 91       	ld	r22, X+
   14a46:	7c 91       	ld	r23, X
   14a48:	13 97       	sbiw	r26, 0x03	; 3
   14a4a:	41 15       	cp	r20, r1
   14a4c:	51 05       	cpc	r21, r1
   14a4e:	61 05       	cpc	r22, r1
   14a50:	71 05       	cpc	r23, r1
   14a52:	39 f0       	breq	.+14     	; 0x14a62 <_ZN8SdVolume15allocContiguousEmPm+0x1ba>
   14a54:	c1 01       	movw	r24, r2
   14a56:	93 01       	movw	r18, r6
   14a58:	82 01       	movw	r16, r4
   14a5a:	0e 94 d7 a3 	call	0x147ae	; 0x147ae <_ZN8SdVolume6fatPutEmm>
   14a5e:	88 23       	and	r24, r24
   14a60:	a9 f0       	breq	.+42     	; 0x14a8c <_ZN8SdVolume15allocContiguousEmPm+0x1e4>
   14a62:	ea 85       	ldd	r30, Y+10	; 0x0a
   14a64:	fb 85       	ldd	r31, Y+11	; 0x0b
   14a66:	40 82       	st	Z, r4
   14a68:	51 82       	std	Z+1, r5	; 0x01
   14a6a:	62 82       	std	Z+2, r6	; 0x02
   14a6c:	73 82       	std	Z+3, r7	; 0x03
   14a6e:	fd 81       	ldd	r31, Y+5	; 0x05
   14a70:	ff 23       	and	r31, r31
   14a72:	71 f0       	breq	.+28     	; 0x14a90 <_ZN8SdVolume15allocContiguousEmPm+0x1e8>
   14a74:	08 94       	sec
   14a76:	41 1c       	adc	r4, r1
   14a78:	51 1c       	adc	r5, r1
   14a7a:	61 1c       	adc	r6, r1
   14a7c:	71 1c       	adc	r7, r1
   14a7e:	d1 01       	movw	r26, r2
   14a80:	4d 92       	st	X+, r4
   14a82:	5d 92       	st	X+, r5
   14a84:	6d 92       	st	X+, r6
   14a86:	7c 92       	st	X, r7
   14a88:	13 97       	sbiw	r26, 0x03	; 3
   14a8a:	02 c0       	rjmp	.+4      	; 0x14a90 <_ZN8SdVolume15allocContiguousEmPm+0x1e8>
   14a8c:	80 e0       	ldi	r24, 0x00	; 0
   14a8e:	01 c0       	rjmp	.+2      	; 0x14a92 <_ZN8SdVolume15allocContiguousEmPm+0x1ea>
   14a90:	81 e0       	ldi	r24, 0x01	; 1
   14a92:	2f 96       	adiw	r28, 0x0f	; 15
   14a94:	cd bf       	out	0x3d, r28	; 61
   14a96:	de bf       	out	0x3e, r29	; 62
   14a98:	df 91       	pop	r29
   14a9a:	cf 91       	pop	r28
   14a9c:	1f 91       	pop	r17
   14a9e:	0f 91       	pop	r16
   14aa0:	ff 90       	pop	r15
   14aa2:	ef 90       	pop	r14
   14aa4:	df 90       	pop	r13
   14aa6:	cf 90       	pop	r12
   14aa8:	bf 90       	pop	r11
   14aaa:	af 90       	pop	r10
   14aac:	9f 90       	pop	r9
   14aae:	8f 90       	pop	r8
   14ab0:	7f 90       	pop	r7
   14ab2:	6f 90       	pop	r6
   14ab4:	5f 90       	pop	r5
   14ab6:	4f 90       	pop	r4
   14ab8:	3f 90       	pop	r3
   14aba:	2f 90       	pop	r2
   14abc:	08 95       	ret

00014abe <_ZN8SdVolume9freeChainEm>:
   14abe:	af 92       	push	r10
   14ac0:	bf 92       	push	r11
   14ac2:	cf 92       	push	r12
   14ac4:	df 92       	push	r13
   14ac6:	ef 92       	push	r14
   14ac8:	ff 92       	push	r15
   14aca:	0f 93       	push	r16
   14acc:	1f 93       	push	r17
   14ace:	cf 93       	push	r28
   14ad0:	df 93       	push	r29
   14ad2:	00 d0       	rcall	.+0      	; 0x14ad4 <_ZN8SdVolume9freeChainEm+0x16>
   14ad4:	0f 92       	push	r0
   14ad6:	cd b7       	in	r28, 0x3d	; 61
   14ad8:	de b7       	in	r29, 0x3e	; 62
   14ada:	5c 01       	movw	r10, r24
   14adc:	6a 01       	movw	r12, r20
   14ade:	7b 01       	movw	r14, r22
   14ae0:	82 e0       	ldi	r24, 0x02	; 2
   14ae2:	90 e0       	ldi	r25, 0x00	; 0
   14ae4:	a0 e0       	ldi	r26, 0x00	; 0
   14ae6:	b0 e0       	ldi	r27, 0x00	; 0
   14ae8:	f5 01       	movw	r30, r10
   14aea:	80 83       	st	Z, r24
   14aec:	91 83       	std	Z+1, r25	; 0x01
   14aee:	a2 83       	std	Z+2, r26	; 0x02
   14af0:	b3 83       	std	Z+3, r27	; 0x03
   14af2:	c5 01       	movw	r24, r10
   14af4:	b7 01       	movw	r22, r14
   14af6:	a6 01       	movw	r20, r12
   14af8:	9e 01       	movw	r18, r28
   14afa:	2f 5f       	subi	r18, 0xFF	; 255
   14afc:	3f 4f       	sbci	r19, 0xFF	; 255
   14afe:	0e 94 5b a3 	call	0x146b6	; 0x146b6 <_ZN8SdVolume6fatGetEmPm>
   14b02:	88 23       	and	r24, r24
   14b04:	39 f1       	breq	.+78     	; 0x14b54 <_ZN8SdVolume9freeChainEm+0x96>
   14b06:	c5 01       	movw	r24, r10
   14b08:	b7 01       	movw	r22, r14
   14b0a:	a6 01       	movw	r20, r12
   14b0c:	00 e0       	ldi	r16, 0x00	; 0
   14b0e:	10 e0       	ldi	r17, 0x00	; 0
   14b10:	98 01       	movw	r18, r16
   14b12:	0e 94 d7 a3 	call	0x147ae	; 0x147ae <_ZN8SdVolume6fatPutEmm>
   14b16:	88 23       	and	r24, r24
   14b18:	e9 f0       	breq	.+58     	; 0x14b54 <_ZN8SdVolume9freeChainEm+0x96>
   14b1a:	c9 80       	ldd	r12, Y+1	; 0x01
   14b1c:	da 80       	ldd	r13, Y+2	; 0x02
   14b1e:	eb 80       	ldd	r14, Y+3	; 0x03
   14b20:	fc 80       	ldd	r15, Y+4	; 0x04
   14b22:	f5 01       	movw	r30, r10
   14b24:	87 89       	ldd	r24, Z+23	; 0x17
   14b26:	80 31       	cpi	r24, 0x10	; 16
   14b28:	51 f4       	brne	.+20     	; 0x14b3e <_ZN8SdVolume9freeChainEm+0x80>
   14b2a:	f8 ef       	ldi	r31, 0xF8	; 248
   14b2c:	cf 16       	cp	r12, r31
   14b2e:	ff ef       	ldi	r31, 0xFF	; 255
   14b30:	df 06       	cpc	r13, r31
   14b32:	f0 e0       	ldi	r31, 0x00	; 0
   14b34:	ef 06       	cpc	r14, r31
   14b36:	f0 e0       	ldi	r31, 0x00	; 0
   14b38:	ff 06       	cpc	r15, r31
   14b3a:	50 f4       	brcc	.+20     	; 0x14b50 <_ZN8SdVolume9freeChainEm+0x92>
   14b3c:	da cf       	rjmp	.-76     	; 0x14af2 <_ZN8SdVolume9freeChainEm+0x34>
   14b3e:	88 ef       	ldi	r24, 0xF8	; 248
   14b40:	c8 16       	cp	r12, r24
   14b42:	8f ef       	ldi	r24, 0xFF	; 255
   14b44:	d8 06       	cpc	r13, r24
   14b46:	8f ef       	ldi	r24, 0xFF	; 255
   14b48:	e8 06       	cpc	r14, r24
   14b4a:	8f e0       	ldi	r24, 0x0F	; 15
   14b4c:	f8 06       	cpc	r15, r24
   14b4e:	88 f2       	brcs	.-94     	; 0x14af2 <_ZN8SdVolume9freeChainEm+0x34>
   14b50:	81 e0       	ldi	r24, 0x01	; 1
   14b52:	01 c0       	rjmp	.+2      	; 0x14b56 <_ZN8SdVolume9freeChainEm+0x98>
   14b54:	80 e0       	ldi	r24, 0x00	; 0
   14b56:	24 96       	adiw	r28, 0x04	; 4
   14b58:	cd bf       	out	0x3d, r28	; 61
   14b5a:	de bf       	out	0x3e, r29	; 62
   14b5c:	df 91       	pop	r29
   14b5e:	cf 91       	pop	r28
   14b60:	1f 91       	pop	r17
   14b62:	0f 91       	pop	r16
   14b64:	ff 90       	pop	r15
   14b66:	ef 90       	pop	r14
   14b68:	df 90       	pop	r13
   14b6a:	cf 90       	pop	r12
   14b6c:	bf 90       	pop	r11
   14b6e:	af 90       	pop	r10
   14b70:	08 95       	ret

00014b72 <_ZN8SdVolume4initEP7Sd2Cardh>:
   14b72:	3f 92       	push	r3
   14b74:	4f 92       	push	r4
   14b76:	5f 92       	push	r5
   14b78:	6f 92       	push	r6
   14b7a:	7f 92       	push	r7
   14b7c:	8f 92       	push	r8
   14b7e:	9f 92       	push	r9
   14b80:	af 92       	push	r10
   14b82:	bf 92       	push	r11
   14b84:	cf 92       	push	r12
   14b86:	df 92       	push	r13
   14b88:	ef 92       	push	r14
   14b8a:	ff 92       	push	r15
   14b8c:	0f 93       	push	r16
   14b8e:	1f 93       	push	r17
   14b90:	cf 93       	push	r28
   14b92:	df 93       	push	r29
   14b94:	00 d0       	rcall	.+0      	; 0x14b96 <_ZN8SdVolume4initEP7Sd2Cardh+0x24>
   14b96:	0f 92       	push	r0
   14b98:	cd b7       	in	r28, 0x3d	; 61
   14b9a:	de b7       	in	r29, 0x3e	; 62
   14b9c:	8b 83       	std	Y+3, r24	; 0x03
   14b9e:	9c 83       	std	Y+4, r25	; 0x04
   14ba0:	04 2f       	mov	r16, r20
   14ba2:	60 93 c4 25 	sts	0x25C4, r22
   14ba6:	70 93 c5 25 	sts	0x25C5, r23
   14baa:	fc 01       	movw	r30, r24
   14bac:	17 8a       	std	Z+23, r1	; 0x17
   14bae:	82 e0       	ldi	r24, 0x02	; 2
   14bb0:	90 e0       	ldi	r25, 0x00	; 0
   14bb2:	a0 e0       	ldi	r26, 0x00	; 0
   14bb4:	b0 e0       	ldi	r27, 0x00	; 0
   14bb6:	80 83       	st	Z, r24
   14bb8:	91 83       	std	Z+1, r25	; 0x01
   14bba:	a2 83       	std	Z+2, r26	; 0x02
   14bbc:	b3 83       	std	Z+3, r27	; 0x03
   14bbe:	10 92 ca 25 	sts	0x25CA, r1
   14bc2:	8f ef       	ldi	r24, 0xFF	; 255
   14bc4:	9f ef       	ldi	r25, 0xFF	; 255
   14bc6:	dc 01       	movw	r26, r24
   14bc8:	80 93 cb 25 	sts	0x25CB, r24
   14bcc:	90 93 cc 25 	sts	0x25CC, r25
   14bd0:	a0 93 cd 25 	sts	0x25CD, r26
   14bd4:	b0 93 ce 25 	sts	0x25CE, r27
   14bd8:	10 92 c6 25 	sts	0x25C6, r1
   14bdc:	10 92 c7 25 	sts	0x25C7, r1
   14be0:	10 92 c8 25 	sts	0x25C8, r1
   14be4:	10 92 c9 25 	sts	0x25C9, r1
   14be8:	44 23       	and	r20, r20
   14bea:	91 f1       	breq	.+100    	; 0x14c50 <_ZN8SdVolume4initEP7Sd2Cardh+0xde>
   14bec:	45 30       	cpi	r20, 0x05	; 5
   14bee:	08 f0       	brcs	.+2      	; 0x14bf2 <_ZN8SdVolume4initEP7Sd2Cardh+0x80>
   14bf0:	25 c1       	rjmp	.+586    	; 0x14e3c <_ZN8SdVolume4initEP7Sd2Cardh+0x2ca>
   14bf2:	60 e0       	ldi	r22, 0x00	; 0
   14bf4:	70 e0       	ldi	r23, 0x00	; 0
   14bf6:	cb 01       	movw	r24, r22
   14bf8:	40 e0       	ldi	r20, 0x00	; 0
   14bfa:	0e 94 e1 a2 	call	0x145c2	; 0x145c2 <_ZN8SdVolume10cacheFetchEmh>
   14bfe:	00 97       	sbiw	r24, 0x00	; 0
   14c00:	09 f4       	brne	.+2      	; 0x14c04 <_ZN8SdVolume4initEP7Sd2Cardh+0x92>
   14c02:	1c c1       	rjmp	.+568    	; 0x14e3c <_ZN8SdVolume4initEP7Sd2Cardh+0x2ca>
   14c04:	e0 2f       	mov	r30, r16
   14c06:	f0 e0       	ldi	r31, 0x00	; 0
   14c08:	24 e0       	ldi	r18, 0x04	; 4
   14c0a:	ee 0f       	add	r30, r30
   14c0c:	ff 1f       	adc	r31, r31
   14c0e:	2a 95       	dec	r18
   14c10:	e1 f7       	brne	.-8      	; 0x14c0a <_ZN8SdVolume4initEP7Sd2Cardh+0x98>
   14c12:	e2 55       	subi	r30, 0x52	; 82
   14c14:	fe 4f       	sbci	r31, 0xFE	; 254
   14c16:	e8 0f       	add	r30, r24
   14c18:	f9 1f       	adc	r31, r25
   14c1a:	80 81       	ld	r24, Z
   14c1c:	90 e0       	ldi	r25, 0x00	; 0
   14c1e:	8f 77       	andi	r24, 0x7F	; 127
   14c20:	90 70       	andi	r25, 0x00	; 0
   14c22:	00 97       	sbiw	r24, 0x00	; 0
   14c24:	09 f0       	breq	.+2      	; 0x14c28 <_ZN8SdVolume4initEP7Sd2Cardh+0xb6>
   14c26:	0a c1       	rjmp	.+532    	; 0x14e3c <_ZN8SdVolume4initEP7Sd2Cardh+0x2ca>
   14c28:	84 85       	ldd	r24, Z+12	; 0x0c
   14c2a:	95 85       	ldd	r25, Z+13	; 0x0d
   14c2c:	a6 85       	ldd	r26, Z+14	; 0x0e
   14c2e:	b7 85       	ldd	r27, Z+15	; 0x0f
   14c30:	84 36       	cpi	r24, 0x64	; 100
   14c32:	91 05       	cpc	r25, r1
   14c34:	a1 05       	cpc	r26, r1
   14c36:	b1 05       	cpc	r27, r1
   14c38:	08 f4       	brcc	.+2      	; 0x14c3c <_ZN8SdVolume4initEP7Sd2Cardh+0xca>
   14c3a:	00 c1       	rjmp	.+512    	; 0x14e3c <_ZN8SdVolume4initEP7Sd2Cardh+0x2ca>
   14c3c:	40 84       	ldd	r4, Z+8	; 0x08
   14c3e:	51 84       	ldd	r5, Z+9	; 0x09
   14c40:	62 84       	ldd	r6, Z+10	; 0x0a
   14c42:	73 84       	ldd	r7, Z+11	; 0x0b
   14c44:	41 14       	cp	r4, r1
   14c46:	51 04       	cpc	r5, r1
   14c48:	61 04       	cpc	r6, r1
   14c4a:	71 04       	cpc	r7, r1
   14c4c:	21 f4       	brne	.+8      	; 0x14c56 <_ZN8SdVolume4initEP7Sd2Cardh+0xe4>
   14c4e:	f6 c0       	rjmp	.+492    	; 0x14e3c <_ZN8SdVolume4initEP7Sd2Cardh+0x2ca>
   14c50:	44 24       	eor	r4, r4
   14c52:	55 24       	eor	r5, r5
   14c54:	32 01       	movw	r6, r4
   14c56:	c3 01       	movw	r24, r6
   14c58:	b2 01       	movw	r22, r4
   14c5a:	40 e0       	ldi	r20, 0x00	; 0
   14c5c:	0e 94 e1 a2 	call	0x145c2	; 0x145c2 <_ZN8SdVolume10cacheFetchEmh>
   14c60:	8c 01       	movw	r16, r24
   14c62:	00 97       	sbiw	r24, 0x00	; 0
   14c64:	09 f4       	brne	.+2      	; 0x14c68 <_ZN8SdVolume4initEP7Sd2Cardh+0xf6>
   14c66:	ea c0       	rjmp	.+468    	; 0x14e3c <_ZN8SdVolume4initEP7Sd2Cardh+0x2ca>
   14c68:	fc 01       	movw	r30, r24
   14c6a:	83 85       	ldd	r24, Z+11	; 0x0b
   14c6c:	94 85       	ldd	r25, Z+12	; 0x0c
   14c6e:	f2 e0       	ldi	r31, 0x02	; 2
   14c70:	80 30       	cpi	r24, 0x00	; 0
   14c72:	9f 07       	cpc	r25, r31
   14c74:	09 f0       	breq	.+2      	; 0x14c78 <_ZN8SdVolume4initEP7Sd2Cardh+0x106>
   14c76:	e2 c0       	rjmp	.+452    	; 0x14e3c <_ZN8SdVolume4initEP7Sd2Cardh+0x2ca>
   14c78:	f8 01       	movw	r30, r16
   14c7a:	20 89       	ldd	r18, Z+16	; 0x10
   14c7c:	22 23       	and	r18, r18
   14c7e:	09 f4       	brne	.+2      	; 0x14c82 <_ZN8SdVolume4initEP7Sd2Cardh+0x110>
   14c80:	dd c0       	rjmp	.+442    	; 0x14e3c <_ZN8SdVolume4initEP7Sd2Cardh+0x2ca>
   14c82:	86 85       	ldd	r24, Z+14	; 0x0e
   14c84:	97 85       	ldd	r25, Z+15	; 0x0f
   14c86:	00 97       	sbiw	r24, 0x00	; 0
   14c88:	09 f4       	brne	.+2      	; 0x14c8c <_ZN8SdVolume4initEP7Sd2Cardh+0x11a>
   14c8a:	d8 c0       	rjmp	.+432    	; 0x14e3c <_ZN8SdVolume4initEP7Sd2Cardh+0x2ca>
   14c8c:	85 85       	ldd	r24, Z+13	; 0x0d
   14c8e:	88 23       	and	r24, r24
   14c90:	09 f4       	brne	.+2      	; 0x14c94 <_ZN8SdVolume4initEP7Sd2Cardh+0x122>
   14c92:	d4 c0       	rjmp	.+424    	; 0x14e3c <_ZN8SdVolume4initEP7Sd2Cardh+0x2ca>
   14c94:	eb 81       	ldd	r30, Y+3	; 0x03
   14c96:	fc 81       	ldd	r31, Y+4	; 0x04
   14c98:	22 8b       	std	Z+18, r18	; 0x12
   14c9a:	f8 01       	movw	r30, r16
   14c9c:	25 85       	ldd	r18, Z+13	; 0x0d
   14c9e:	eb 81       	ldd	r30, Y+3	; 0x03
   14ca0:	fc 81       	ldd	r31, Y+4	; 0x04
   14ca2:	24 83       	std	Z+4, r18	; 0x04
   14ca4:	15 86       	std	Z+13, r1	; 0x0d
   14ca6:	30 e0       	ldi	r19, 0x00	; 0
   14ca8:	41 e0       	ldi	r20, 0x01	; 1
   14caa:	50 e0       	ldi	r21, 0x00	; 0
   14cac:	09 c0       	rjmp	.+18     	; 0x14cc0 <_ZN8SdVolume4initEP7Sd2Cardh+0x14e>
   14cae:	83 2d       	mov	r24, r3
   14cb0:	8f 5f       	subi	r24, 0xFF	; 255
   14cb2:	eb 81       	ldd	r30, Y+3	; 0x03
   14cb4:	fc 81       	ldd	r31, Y+4	; 0x04
   14cb6:	85 87       	std	Z+13, r24	; 0x0d
   14cb8:	f7 e0       	ldi	r31, 0x07	; 7
   14cba:	f3 15       	cp	r31, r3
   14cbc:	08 f4       	brcc	.+2      	; 0x14cc0 <_ZN8SdVolume4initEP7Sd2Cardh+0x14e>
   14cbe:	be c0       	rjmp	.+380    	; 0x14e3c <_ZN8SdVolume4initEP7Sd2Cardh+0x2ca>
   14cc0:	eb 81       	ldd	r30, Y+3	; 0x03
   14cc2:	fc 81       	ldd	r31, Y+4	; 0x04
   14cc4:	35 84       	ldd	r3, Z+13	; 0x0d
   14cc6:	ca 01       	movw	r24, r20
   14cc8:	03 2c       	mov	r0, r3
   14cca:	02 c0       	rjmp	.+4      	; 0x14cd0 <_ZN8SdVolume4initEP7Sd2Cardh+0x15e>
   14ccc:	88 0f       	add	r24, r24
   14cce:	99 1f       	adc	r25, r25
   14cd0:	0a 94       	dec	r0
   14cd2:	e2 f7       	brpl	.-8      	; 0x14ccc <_ZN8SdVolume4initEP7Sd2Cardh+0x15a>
   14cd4:	28 17       	cp	r18, r24
   14cd6:	39 07       	cpc	r19, r25
   14cd8:	51 f7       	brne	.-44     	; 0x14cae <_ZN8SdVolume4initEP7Sd2Cardh+0x13c>
   14cda:	f8 01       	movw	r30, r16
   14cdc:	c6 88       	ldd	r12, Z+22	; 0x16
   14cde:	d7 88       	ldd	r13, Z+23	; 0x17
   14ce0:	c1 14       	cp	r12, r1
   14ce2:	d1 04       	cpc	r13, r1
   14ce4:	19 f0       	breq	.+6      	; 0x14cec <_ZN8SdVolume4initEP7Sd2Cardh+0x17a>
   14ce6:	ee 24       	eor	r14, r14
   14ce8:	ff 24       	eor	r15, r15
   14cea:	05 c0       	rjmp	.+10     	; 0x14cf6 <_ZN8SdVolume4initEP7Sd2Cardh+0x184>
   14cec:	f8 01       	movw	r30, r16
   14cee:	c4 a0       	lds	r28, 0x84
   14cf0:	d5 a0       	lds	r29, 0x85
   14cf2:	e6 a0       	lds	r30, 0x86
   14cf4:	f7 a0       	lds	r31, 0x87
   14cf6:	eb 81       	ldd	r30, Y+3	; 0x03
   14cf8:	fc 81       	ldd	r31, Y+4	; 0x04
   14cfa:	c5 82       	std	Z+5, r12	; 0x05
   14cfc:	d6 82       	std	Z+6, r13	; 0x06
   14cfe:	e7 82       	std	Z+7, r14	; 0x07
   14d00:	f0 86       	std	Z+8, r15	; 0x08
   14d02:	c0 92 c6 25 	sts	0x25C6, r12
   14d06:	d0 92 c7 25 	sts	0x25C7, r13
   14d0a:	e0 92 c8 25 	sts	0x25C8, r14
   14d0e:	f0 92 c9 25 	sts	0x25C9, r15
   14d12:	f8 01       	movw	r30, r16
   14d14:	86 85       	ldd	r24, Z+14	; 0x0e
   14d16:	97 85       	ldd	r25, Z+15	; 0x0f
   14d18:	4c 01       	movw	r8, r24
   14d1a:	aa 24       	eor	r10, r10
   14d1c:	bb 24       	eor	r11, r11
   14d1e:	84 0c       	add	r8, r4
   14d20:	95 1c       	adc	r9, r5
   14d22:	a6 1c       	adc	r10, r6
   14d24:	b7 1c       	adc	r11, r7
   14d26:	eb 81       	ldd	r30, Y+3	; 0x03
   14d28:	fc 81       	ldd	r31, Y+4	; 0x04
   14d2a:	83 8a       	std	Z+19, r8	; 0x13
   14d2c:	94 8a       	std	Z+20, r9	; 0x14
   14d2e:	a5 8a       	std	Z+21, r10	; 0x15
   14d30:	b6 8a       	std	Z+22, r11	; 0x16
   14d32:	f8 01       	movw	r30, r16
   14d34:	01 88       	ldd	r0, Z+17	; 0x11
   14d36:	f2 89       	ldd	r31, Z+18	; 0x12
   14d38:	e0 2d       	mov	r30, r0
   14d3a:	e9 83       	std	Y+1, r30	; 0x01
   14d3c:	fa 83       	std	Y+2, r31	; 0x02
   14d3e:	cf 01       	movw	r24, r30
   14d40:	eb 81       	ldd	r30, Y+3	; 0x03
   14d42:	fc 81       	ldd	r31, Y+4	; 0x04
   14d44:	80 8f       	std	Z+24, r24	; 0x18
   14d46:	91 8f       	std	Z+25, r25	; 0x19
   14d48:	f8 01       	movw	r30, r16
   14d4a:	20 89       	ldd	r18, Z+16	; 0x10
   14d4c:	30 e0       	ldi	r19, 0x00	; 0
   14d4e:	40 e0       	ldi	r20, 0x00	; 0
   14d50:	50 e0       	ldi	r21, 0x00	; 0
   14d52:	c7 01       	movw	r24, r14
   14d54:	b6 01       	movw	r22, r12
   14d56:	0e 94 cd b4 	call	0x1699a	; 0x1699a <__mulsi3>
   14d5a:	dc 01       	movw	r26, r24
   14d5c:	cb 01       	movw	r24, r22
   14d5e:	88 0d       	add	r24, r8
   14d60:	99 1d       	adc	r25, r9
   14d62:	aa 1d       	adc	r26, r10
   14d64:	bb 1d       	adc	r27, r11
   14d66:	eb 81       	ldd	r30, Y+3	; 0x03
   14d68:	fc 81       	ldd	r31, Y+4	; 0x04
   14d6a:	82 8f       	std	Z+26, r24	; 0x1a
   14d6c:	93 8f       	std	Z+27, r25	; 0x1b
   14d6e:	a4 8f       	std	Z+28, r26	; 0x1c
   14d70:	b5 8f       	std	Z+29, r27	; 0x1d
   14d72:	49 81       	ldd	r20, Y+1	; 0x01
   14d74:	5a 81       	ldd	r21, Y+2	; 0x02
   14d76:	68 94       	set
   14d78:	14 f8       	bld	r1, 4
   14d7a:	44 0f       	add	r20, r20
   14d7c:	55 1f       	adc	r21, r21
   14d7e:	16 94       	lsr	r1
   14d80:	e1 f7       	brne	.-8      	; 0x14d7a <_ZN8SdVolume4initEP7Sd2Cardh+0x208>
   14d82:	41 50       	subi	r20, 0x01	; 1
   14d84:	5e 4f       	sbci	r21, 0xFE	; 254
   14d86:	45 2f       	mov	r20, r21
   14d88:	55 27       	eor	r21, r21
   14d8a:	46 95       	lsr	r20
   14d8c:	60 e0       	ldi	r22, 0x00	; 0
   14d8e:	70 e0       	ldi	r23, 0x00	; 0
   14d90:	48 0f       	add	r20, r24
   14d92:	59 1f       	adc	r21, r25
   14d94:	6a 1f       	adc	r22, r26
   14d96:	7b 1f       	adc	r23, r27
   14d98:	46 87       	std	Z+14, r20	; 0x0e
   14d9a:	57 87       	std	Z+15, r21	; 0x0f
   14d9c:	60 8b       	std	Z+16, r22	; 0x10
   14d9e:	71 8b       	std	Z+17, r23	; 0x11
   14da0:	f8 01       	movw	r30, r16
   14da2:	83 89       	ldd	r24, Z+19	; 0x13
   14da4:	94 89       	ldd	r25, Z+20	; 0x14
   14da6:	00 97       	sbiw	r24, 0x00	; 0
   14da8:	19 f0       	breq	.+6      	; 0x14db0 <_ZN8SdVolume4initEP7Sd2Cardh+0x23e>
   14daa:	a0 e0       	ldi	r26, 0x00	; 0
   14dac:	b0 e0       	ldi	r27, 0x00	; 0
   14dae:	05 c0       	rjmp	.+10     	; 0x14dba <_ZN8SdVolume4initEP7Sd2Cardh+0x248>
   14db0:	f8 01       	movw	r30, r16
   14db2:	80 a1       	lds	r24, 0x40
   14db4:	91 a1       	lds	r25, 0x41
   14db6:	a2 a1       	lds	r26, 0x42
   14db8:	b3 a1       	lds	r27, 0x43
   14dba:	73 01       	movw	r14, r6
   14dbc:	62 01       	movw	r12, r4
   14dbe:	c4 1a       	sub	r12, r20
   14dc0:	d5 0a       	sbc	r13, r21
   14dc2:	e6 0a       	sbc	r14, r22
   14dc4:	f7 0a       	sbc	r15, r23
   14dc6:	b7 01       	movw	r22, r14
   14dc8:	a6 01       	movw	r20, r12
   14dca:	48 0f       	add	r20, r24
   14dcc:	59 1f       	adc	r21, r25
   14dce:	6a 1f       	adc	r22, r26
   14dd0:	7b 1f       	adc	r23, r27
   14dd2:	04 c0       	rjmp	.+8      	; 0x14ddc <_ZN8SdVolume4initEP7Sd2Cardh+0x26a>
   14dd4:	76 95       	lsr	r23
   14dd6:	67 95       	ror	r22
   14dd8:	57 95       	ror	r21
   14dda:	47 95       	ror	r20
   14ddc:	3a 94       	dec	r3
   14dde:	d2 f7       	brpl	.-12     	; 0x14dd4 <_ZN8SdVolume4initEP7Sd2Cardh+0x262>
   14de0:	eb 81       	ldd	r30, Y+3	; 0x03
   14de2:	fc 81       	ldd	r31, Y+4	; 0x04
   14de4:	41 87       	std	Z+9, r20	; 0x09
   14de6:	52 87       	std	Z+10, r21	; 0x0a
   14de8:	63 87       	std	Z+11, r22	; 0x0b
   14dea:	74 87       	std	Z+12, r23	; 0x0c
   14dec:	45 3f       	cpi	r20, 0xF5	; 245
   14dee:	ff e0       	ldi	r31, 0x0F	; 15
   14df0:	5f 07       	cpc	r21, r31
   14df2:	f0 e0       	ldi	r31, 0x00	; 0
   14df4:	6f 07       	cpc	r22, r31
   14df6:	f0 e0       	ldi	r31, 0x00	; 0
   14df8:	7f 07       	cpc	r23, r31
   14dfa:	28 f4       	brcc	.+10     	; 0x14e06 <_ZN8SdVolume4initEP7Sd2Cardh+0x294>
   14dfc:	8c e0       	ldi	r24, 0x0C	; 12
   14dfe:	eb 81       	ldd	r30, Y+3	; 0x03
   14e00:	fc 81       	ldd	r31, Y+4	; 0x04
   14e02:	87 8b       	std	Z+23, r24	; 0x17
   14e04:	1b c0       	rjmp	.+54     	; 0x14e3c <_ZN8SdVolume4initEP7Sd2Cardh+0x2ca>
   14e06:	45 3f       	cpi	r20, 0xF5	; 245
   14e08:	ff ef       	ldi	r31, 0xFF	; 255
   14e0a:	5f 07       	cpc	r21, r31
   14e0c:	f0 e0       	ldi	r31, 0x00	; 0
   14e0e:	6f 07       	cpc	r22, r31
   14e10:	f0 e0       	ldi	r31, 0x00	; 0
   14e12:	7f 07       	cpc	r23, r31
   14e14:	20 f4       	brcc	.+8      	; 0x14e1e <_ZN8SdVolume4initEP7Sd2Cardh+0x2ac>
   14e16:	80 e1       	ldi	r24, 0x10	; 16
   14e18:	eb 81       	ldd	r30, Y+3	; 0x03
   14e1a:	fc 81       	ldd	r31, Y+4	; 0x04
   14e1c:	0c c0       	rjmp	.+24     	; 0x14e36 <_ZN8SdVolume4initEP7Sd2Cardh+0x2c4>
   14e1e:	f8 01       	movw	r30, r16
   14e20:	84 a5       	lds	r24, 0x64
   14e22:	95 a5       	lds	r25, 0x65
   14e24:	a6 a5       	lds	r26, 0x66
   14e26:	b7 a5       	lds	r27, 0x67
   14e28:	eb 81       	ldd	r30, Y+3	; 0x03
   14e2a:	fc 81       	ldd	r31, Y+4	; 0x04
   14e2c:	82 8f       	std	Z+26, r24	; 0x1a
   14e2e:	93 8f       	std	Z+27, r25	; 0x1b
   14e30:	a4 8f       	std	Z+28, r26	; 0x1c
   14e32:	b5 8f       	std	Z+29, r27	; 0x1d
   14e34:	80 e2       	ldi	r24, 0x20	; 32
   14e36:	87 8b       	std	Z+23, r24	; 0x17
   14e38:	81 e0       	ldi	r24, 0x01	; 1
   14e3a:	01 c0       	rjmp	.+2      	; 0x14e3e <_ZN8SdVolume4initEP7Sd2Cardh+0x2cc>
   14e3c:	80 e0       	ldi	r24, 0x00	; 0
   14e3e:	24 96       	adiw	r28, 0x04	; 4
   14e40:	cd bf       	out	0x3d, r28	; 61
   14e42:	de bf       	out	0x3e, r29	; 62
   14e44:	df 91       	pop	r29
   14e46:	cf 91       	pop	r28
   14e48:	1f 91       	pop	r17
   14e4a:	0f 91       	pop	r16
   14e4c:	ff 90       	pop	r15
   14e4e:	ef 90       	pop	r14
   14e50:	df 90       	pop	r13
   14e52:	cf 90       	pop	r12
   14e54:	bf 90       	pop	r11
   14e56:	af 90       	pop	r10
   14e58:	9f 90       	pop	r9
   14e5a:	8f 90       	pop	r8
   14e5c:	7f 90       	pop	r7
   14e5e:	6f 90       	pop	r6
   14e60:	5f 90       	pop	r5
   14e62:	4f 90       	pop	r4
   14e64:	3f 90       	pop	r3
   14e66:	08 95       	ret

00014e68 <_ZN5Print5writeEPKhj>:
   14e68:	cf 92       	push	r12
   14e6a:	df 92       	push	r13
   14e6c:	ef 92       	push	r14
   14e6e:	ff 92       	push	r15
   14e70:	0f 93       	push	r16
   14e72:	1f 93       	push	r17
   14e74:	cf 93       	push	r28
   14e76:	df 93       	push	r29
   14e78:	6c 01       	movw	r12, r24
   14e7a:	7b 01       	movw	r14, r22
   14e7c:	ea 01       	movw	r28, r20
   14e7e:	00 e0       	ldi	r16, 0x00	; 0
   14e80:	10 e0       	ldi	r17, 0x00	; 0
   14e82:	0e c0       	rjmp	.+28     	; 0x14ea0 <_ZN5Print5writeEPKhj+0x38>
   14e84:	d7 01       	movw	r26, r14
   14e86:	6d 91       	ld	r22, X+
   14e88:	7d 01       	movw	r14, r26
   14e8a:	d6 01       	movw	r26, r12
   14e8c:	ed 91       	ld	r30, X+
   14e8e:	fc 91       	ld	r31, X
   14e90:	01 90       	ld	r0, Z+
   14e92:	f0 81       	ld	r31, Z
   14e94:	e0 2d       	mov	r30, r0
   14e96:	c6 01       	movw	r24, r12
   14e98:	19 95       	eicall
   14e9a:	08 0f       	add	r16, r24
   14e9c:	19 1f       	adc	r17, r25
   14e9e:	21 97       	sbiw	r28, 0x01	; 1
   14ea0:	20 97       	sbiw	r28, 0x00	; 0
   14ea2:	81 f7       	brne	.-32     	; 0x14e84 <_ZN5Print5writeEPKhj+0x1c>
   14ea4:	c8 01       	movw	r24, r16
   14ea6:	df 91       	pop	r29
   14ea8:	cf 91       	pop	r28
   14eaa:	1f 91       	pop	r17
   14eac:	0f 91       	pop	r16
   14eae:	ff 90       	pop	r15
   14eb0:	ef 90       	pop	r14
   14eb2:	df 90       	pop	r13
   14eb4:	cf 90       	pop	r12
   14eb6:	08 95       	ret

00014eb8 <_ZN5Print5writeEPKc>:
   14eb8:	61 15       	cp	r22, r1
   14eba:	71 05       	cpc	r23, r1
   14ebc:	89 f0       	breq	.+34     	; 0x14ee0 <_ZN5Print5writeEPKc+0x28>
   14ebe:	db 01       	movw	r26, r22
   14ec0:	0d 90       	ld	r0, X+
   14ec2:	00 20       	and	r0, r0
   14ec4:	e9 f7       	brne	.-6      	; 0x14ec0 <_ZN5Print5writeEPKc+0x8>
   14ec6:	ad 01       	movw	r20, r26
   14ec8:	41 50       	subi	r20, 0x01	; 1
   14eca:	50 40       	sbci	r21, 0x00	; 0
   14ecc:	46 1b       	sub	r20, r22
   14ece:	57 0b       	sbc	r21, r23
   14ed0:	dc 01       	movw	r26, r24
   14ed2:	ed 91       	ld	r30, X+
   14ed4:	fc 91       	ld	r31, X
   14ed6:	02 80       	ldd	r0, Z+2	; 0x02
   14ed8:	f3 81       	ldd	r31, Z+3	; 0x03
   14eda:	e0 2d       	mov	r30, r0
   14edc:	19 95       	eicall
   14ede:	08 95       	ret
   14ee0:	80 e0       	ldi	r24, 0x00	; 0
   14ee2:	90 e0       	ldi	r25, 0x00	; 0
   14ee4:	08 95       	ret

00014ee6 <_ZN5Print5printEc>:
   14ee6:	dc 01       	movw	r26, r24
   14ee8:	ed 91       	ld	r30, X+
   14eea:	fc 91       	ld	r31, X
   14eec:	01 90       	ld	r0, Z+
   14eee:	f0 81       	ld	r31, Z
   14ef0:	e0 2d       	mov	r30, r0
   14ef2:	19 95       	eicall
   14ef4:	08 95       	ret

00014ef6 <_ZN5Print7printlnEv>:
   14ef6:	0f 93       	push	r16
   14ef8:	1f 93       	push	r17
   14efa:	cf 93       	push	r28
   14efc:	df 93       	push	r29
   14efe:	8c 01       	movw	r16, r24
   14f00:	6d e0       	ldi	r22, 0x0D	; 13
   14f02:	0e 94 73 a7 	call	0x14ee6	; 0x14ee6 <_ZN5Print5printEc>
   14f06:	ec 01       	movw	r28, r24
   14f08:	c8 01       	movw	r24, r16
   14f0a:	6a e0       	ldi	r22, 0x0A	; 10
   14f0c:	0e 94 73 a7 	call	0x14ee6	; 0x14ee6 <_ZN5Print5printEc>
   14f10:	8c 0f       	add	r24, r28
   14f12:	9d 1f       	adc	r25, r29
   14f14:	df 91       	pop	r29
   14f16:	cf 91       	pop	r28
   14f18:	1f 91       	pop	r17
   14f1a:	0f 91       	pop	r16
   14f1c:	08 95       	ret

00014f1e <_ZN5Print11printNumberEmh>:
   14f1e:	4f 92       	push	r4
   14f20:	5f 92       	push	r5
   14f22:	6f 92       	push	r6
   14f24:	7f 92       	push	r7
   14f26:	af 92       	push	r10
   14f28:	bf 92       	push	r11
   14f2a:	cf 92       	push	r12
   14f2c:	df 92       	push	r13
   14f2e:	ef 92       	push	r14
   14f30:	ff 92       	push	r15
   14f32:	0f 93       	push	r16
   14f34:	1f 93       	push	r17
   14f36:	cf 93       	push	r28
   14f38:	df 93       	push	r29
   14f3a:	cd b7       	in	r28, 0x3d	; 61
   14f3c:	de b7       	in	r29, 0x3e	; 62
   14f3e:	a1 97       	sbiw	r28, 0x21	; 33
   14f40:	cd bf       	out	0x3d, r28	; 61
   14f42:	de bf       	out	0x3e, r29	; 62
   14f44:	5c 01       	movw	r10, r24
   14f46:	e4 2e       	mov	r14, r20
   14f48:	cb 01       	movw	r24, r22
   14f4a:	f2 2e       	mov	r15, r18
   14f4c:	19 a2       	lds	r17, 0x99
   14f4e:	21 e0       	ldi	r18, 0x01	; 1
   14f50:	2f 15       	cp	r18, r15
   14f52:	10 f0       	brcs	.+4      	; 0x14f58 <_ZN5Print11printNumberEmh+0x3a>
   14f54:	3a e0       	ldi	r19, 0x0A	; 10
   14f56:	f3 2e       	mov	r15, r19
   14f58:	21 e2       	ldi	r18, 0x21	; 33
   14f5a:	c2 2e       	mov	r12, r18
   14f5c:	d1 2c       	mov	r13, r1
   14f5e:	cc 0e       	add	r12, r28
   14f60:	dd 1e       	adc	r13, r29
   14f62:	4f 2c       	mov	r4, r15
   14f64:	55 24       	eor	r5, r5
   14f66:	66 24       	eor	r6, r6
   14f68:	77 24       	eor	r7, r7
   14f6a:	03 c0       	rjmp	.+6      	; 0x14f72 <_ZN5Print11printNumberEmh+0x54>
   14f6c:	e0 2e       	mov	r14, r16
   14f6e:	51 2f       	mov	r21, r17
   14f70:	c9 01       	movw	r24, r18
   14f72:	6e 2d       	mov	r22, r14
   14f74:	75 2f       	mov	r23, r21
   14f76:	a3 01       	movw	r20, r6
   14f78:	92 01       	movw	r18, r4
   14f7a:	0e 94 ec b4 	call	0x169d8	; 0x169d8 <__udivmodsi4>
   14f7e:	89 01       	movw	r16, r18
   14f80:	9a 01       	movw	r18, r20
   14f82:	f0 9e       	mul	r15, r16
   14f84:	80 2d       	mov	r24, r0
   14f86:	11 24       	eor	r1, r1
   14f88:	e8 1a       	sub	r14, r24
   14f8a:	8e 2d       	mov	r24, r14
   14f8c:	08 94       	sec
   14f8e:	c1 08       	sbc	r12, r1
   14f90:	d1 08       	sbc	r13, r1
   14f92:	8a 30       	cpi	r24, 0x0A	; 10
   14f94:	10 f4       	brcc	.+4      	; 0x14f9a <_ZN5Print11printNumberEmh+0x7c>
   14f96:	80 5d       	subi	r24, 0xD0	; 208
   14f98:	01 c0       	rjmp	.+2      	; 0x14f9c <_ZN5Print11printNumberEmh+0x7e>
   14f9a:	89 5c       	subi	r24, 0xC9	; 201
   14f9c:	f6 01       	movw	r30, r12
   14f9e:	80 83       	st	Z, r24
   14fa0:	01 15       	cp	r16, r1
   14fa2:	11 05       	cpc	r17, r1
   14fa4:	21 05       	cpc	r18, r1
   14fa6:	31 05       	cpc	r19, r1
   14fa8:	09 f7       	brne	.-62     	; 0x14f6c <_ZN5Print11printNumberEmh+0x4e>
   14faa:	c5 01       	movw	r24, r10
   14fac:	b6 01       	movw	r22, r12
   14fae:	0e 94 5c a7 	call	0x14eb8	; 0x14eb8 <_ZN5Print5writeEPKc>
   14fb2:	a1 96       	adiw	r28, 0x21	; 33
   14fb4:	cd bf       	out	0x3d, r28	; 61
   14fb6:	de bf       	out	0x3e, r29	; 62
   14fb8:	df 91       	pop	r29
   14fba:	cf 91       	pop	r28
   14fbc:	1f 91       	pop	r17
   14fbe:	0f 91       	pop	r16
   14fc0:	ff 90       	pop	r15
   14fc2:	ef 90       	pop	r14
   14fc4:	df 90       	pop	r13
   14fc6:	cf 90       	pop	r12
   14fc8:	bf 90       	pop	r11
   14fca:	af 90       	pop	r10
   14fcc:	7f 90       	pop	r7
   14fce:	6f 90       	pop	r6
   14fd0:	5f 90       	pop	r5
   14fd2:	4f 90       	pop	r4
   14fd4:	08 95       	ret

00014fd6 <_ZN5Print5printEmi>:
   14fd6:	21 15       	cp	r18, r1
   14fd8:	31 05       	cpc	r19, r1
   14fda:	49 f4       	brne	.+18     	; 0x14fee <_ZN5Print5printEmi+0x18>
   14fdc:	dc 01       	movw	r26, r24
   14fde:	ed 91       	ld	r30, X+
   14fe0:	fc 91       	ld	r31, X
   14fe2:	01 90       	ld	r0, Z+
   14fe4:	f0 81       	ld	r31, Z
   14fe6:	e0 2d       	mov	r30, r0
   14fe8:	64 2f       	mov	r22, r20
   14fea:	19 95       	eicall
   14fec:	08 95       	ret
   14fee:	0e 94 8f a7 	call	0x14f1e	; 0x14f1e <_ZN5Print11printNumberEmh>
   14ff2:	08 95       	ret

00014ff4 <_ZN5Print5printEji>:
   14ff4:	9a 01       	movw	r18, r20
   14ff6:	ab 01       	movw	r20, r22
   14ff8:	60 e0       	ldi	r22, 0x00	; 0
   14ffa:	70 e0       	ldi	r23, 0x00	; 0
   14ffc:	0e 94 eb a7 	call	0x14fd6	; 0x14fd6 <_ZN5Print5printEmi>
   15000:	08 95       	ret

00015002 <_ZN5Print5printEhi>:
   15002:	9a 01       	movw	r18, r20
   15004:	46 2f       	mov	r20, r22
   15006:	50 e0       	ldi	r21, 0x00	; 0
   15008:	60 e0       	ldi	r22, 0x00	; 0
   1500a:	70 e0       	ldi	r23, 0x00	; 0
   1500c:	0e 94 eb a7 	call	0x14fd6	; 0x14fd6 <_ZN5Print5printEmi>
   15010:	08 95       	ret

00015012 <_ZN13MinimumSerial5writeEh>:
   15012:	86 2f       	mov	r24, r22
   15014:	0e 94 07 71 	call	0xe20e	; 0xe20e <arb_sysPrintChar>
   15018:	81 e0       	ldi	r24, 0x01	; 1
   1501a:	90 e0       	ldi	r25, 0x00	; 0
   1501c:	08 95       	ret

0001501e <_GLOBAL__sub_I__ZN13MinimumSerial5beginEm>:
   1501e:	10 92 d1 27 	sts	0x27D1, r1
   15022:	10 92 d2 27 	sts	0x27D2, r1
   15026:	81 ef       	ldi	r24, 0xF1	; 241
   15028:	93 e2       	ldi	r25, 0x23	; 35
   1502a:	80 93 cf 27 	sts	0x27CF, r24
   1502e:	90 93 d0 27 	sts	0x27D0, r25
   15032:	08 95       	ret

00015034 <__cxa_pure_virtual>:
   15034:	08 95       	ret

00015036 <vfprintf>:
   15036:	2f 92       	push	r2
   15038:	3f 92       	push	r3
   1503a:	4f 92       	push	r4
   1503c:	5f 92       	push	r5
   1503e:	6f 92       	push	r6
   15040:	7f 92       	push	r7
   15042:	8f 92       	push	r8
   15044:	9f 92       	push	r9
   15046:	af 92       	push	r10
   15048:	bf 92       	push	r11
   1504a:	cf 92       	push	r12
   1504c:	df 92       	push	r13
   1504e:	ef 92       	push	r14
   15050:	ff 92       	push	r15
   15052:	0f 93       	push	r16
   15054:	1f 93       	push	r17
   15056:	cf 93       	push	r28
   15058:	df 93       	push	r29
   1505a:	cd b7       	in	r28, 0x3d	; 61
   1505c:	de b7       	in	r29, 0x3e	; 62
   1505e:	65 97       	sbiw	r28, 0x15	; 21
   15060:	cd bf       	out	0x3d, r28	; 61
   15062:	de bf       	out	0x3e, r29	; 62
   15064:	4c 01       	movw	r8, r24
   15066:	6e 87       	std	Y+14, r22	; 0x0e
   15068:	7f 87       	std	Y+15, r23	; 0x0f
   1506a:	fc 01       	movw	r30, r24
   1506c:	16 82       	std	Z+6, r1	; 0x06
   1506e:	17 82       	std	Z+7, r1	; 0x07
   15070:	83 81       	ldd	r24, Z+3	; 0x03
   15072:	81 fd       	sbrc	r24, 1
   15074:	04 c0       	rjmp	.+8      	; 0x1507e <vfprintf+0x48>
   15076:	76 c3       	rjmp	.+1772   	; 0x15764 <vfprintf+0x72e>
   15078:	4c 85       	ldd	r20, Y+12	; 0x0c
   1507a:	5d 85       	ldd	r21, Y+13	; 0x0d
   1507c:	04 c0       	rjmp	.+8      	; 0x15086 <vfprintf+0x50>
   1507e:	1e 01       	movw	r2, r28
   15080:	08 94       	sec
   15082:	21 1c       	adc	r2, r1
   15084:	31 1c       	adc	r3, r1
   15086:	f4 01       	movw	r30, r8
   15088:	93 81       	ldd	r25, Z+3	; 0x03
   1508a:	ee 85       	ldd	r30, Y+14	; 0x0e
   1508c:	ff 85       	ldd	r31, Y+15	; 0x0f
   1508e:	93 fd       	sbrc	r25, 3
   15090:	85 91       	lpm	r24, Z+
   15092:	93 ff       	sbrs	r25, 3
   15094:	81 91       	ld	r24, Z+
   15096:	ee 87       	std	Y+14, r30	; 0x0e
   15098:	ff 87       	std	Y+15, r31	; 0x0f
   1509a:	88 23       	and	r24, r24
   1509c:	09 f4       	brne	.+2      	; 0x150a0 <vfprintf+0x6a>
   1509e:	5e c3       	rjmp	.+1724   	; 0x1575c <vfprintf+0x726>
   150a0:	85 32       	cpi	r24, 0x25	; 37
   150a2:	41 f4       	brne	.+16     	; 0x150b4 <vfprintf+0x7e>
   150a4:	93 fd       	sbrc	r25, 3
   150a6:	85 91       	lpm	r24, Z+
   150a8:	93 ff       	sbrs	r25, 3
   150aa:	81 91       	ld	r24, Z+
   150ac:	ee 87       	std	Y+14, r30	; 0x0e
   150ae:	ff 87       	std	Y+15, r31	; 0x0f
   150b0:	85 32       	cpi	r24, 0x25	; 37
   150b2:	59 f4       	brne	.+22     	; 0x150ca <vfprintf+0x94>
   150b4:	90 e0       	ldi	r25, 0x00	; 0
   150b6:	b4 01       	movw	r22, r8
   150b8:	4c 8b       	std	Y+20, r20	; 0x14
   150ba:	5d 8b       	std	Y+21, r21	; 0x15
   150bc:	0e 94 3e b2 	call	0x1647c	; 0x1647c <fputc>
   150c0:	4c 89       	ldd	r20, Y+20	; 0x14
   150c2:	5d 89       	ldd	r21, Y+21	; 0x15
   150c4:	4c 87       	std	Y+12, r20	; 0x0c
   150c6:	5d 87       	std	Y+13, r21	; 0x0d
   150c8:	d7 cf       	rjmp	.-82     	; 0x15078 <vfprintf+0x42>
   150ca:	ff 24       	eor	r15, r15
   150cc:	dd 24       	eor	r13, r13
   150ce:	10 e0       	ldi	r17, 0x00	; 0
   150d0:	10 32       	cpi	r17, 0x20	; 32
   150d2:	b0 f4       	brcc	.+44     	; 0x15100 <vfprintf+0xca>
   150d4:	8b 32       	cpi	r24, 0x2B	; 43
   150d6:	69 f0       	breq	.+26     	; 0x150f2 <vfprintf+0xbc>
   150d8:	8c 32       	cpi	r24, 0x2C	; 44
   150da:	28 f4       	brcc	.+10     	; 0x150e6 <vfprintf+0xb0>
   150dc:	80 32       	cpi	r24, 0x20	; 32
   150de:	51 f0       	breq	.+20     	; 0x150f4 <vfprintf+0xbe>
   150e0:	83 32       	cpi	r24, 0x23	; 35
   150e2:	71 f4       	brne	.+28     	; 0x15100 <vfprintf+0xca>
   150e4:	0b c0       	rjmp	.+22     	; 0x150fc <vfprintf+0xc6>
   150e6:	8d 32       	cpi	r24, 0x2D	; 45
   150e8:	39 f0       	breq	.+14     	; 0x150f8 <vfprintf+0xc2>
   150ea:	80 33       	cpi	r24, 0x30	; 48
   150ec:	49 f4       	brne	.+18     	; 0x15100 <vfprintf+0xca>
   150ee:	11 60       	ori	r17, 0x01	; 1
   150f0:	2c c0       	rjmp	.+88     	; 0x1514a <vfprintf+0x114>
   150f2:	12 60       	ori	r17, 0x02	; 2
   150f4:	14 60       	ori	r17, 0x04	; 4
   150f6:	29 c0       	rjmp	.+82     	; 0x1514a <vfprintf+0x114>
   150f8:	18 60       	ori	r17, 0x08	; 8
   150fa:	27 c0       	rjmp	.+78     	; 0x1514a <vfprintf+0x114>
   150fc:	10 61       	ori	r17, 0x10	; 16
   150fe:	25 c0       	rjmp	.+74     	; 0x1514a <vfprintf+0x114>
   15100:	17 fd       	sbrc	r17, 7
   15102:	2e c0       	rjmp	.+92     	; 0x15160 <vfprintf+0x12a>
   15104:	28 2f       	mov	r18, r24
   15106:	20 53       	subi	r18, 0x30	; 48
   15108:	2a 30       	cpi	r18, 0x0A	; 10
   1510a:	98 f4       	brcc	.+38     	; 0x15132 <vfprintf+0xfc>
   1510c:	16 ff       	sbrs	r17, 6
   1510e:	08 c0       	rjmp	.+16     	; 0x15120 <vfprintf+0xea>
   15110:	8f 2d       	mov	r24, r15
   15112:	88 0f       	add	r24, r24
   15114:	f8 2e       	mov	r15, r24
   15116:	ff 0c       	add	r15, r15
   15118:	ff 0c       	add	r15, r15
   1511a:	f8 0e       	add	r15, r24
   1511c:	f2 0e       	add	r15, r18
   1511e:	15 c0       	rjmp	.+42     	; 0x1514a <vfprintf+0x114>
   15120:	8d 2d       	mov	r24, r13
   15122:	88 0f       	add	r24, r24
   15124:	d8 2e       	mov	r13, r24
   15126:	dd 0c       	add	r13, r13
   15128:	dd 0c       	add	r13, r13
   1512a:	d8 0e       	add	r13, r24
   1512c:	d2 0e       	add	r13, r18
   1512e:	10 62       	ori	r17, 0x20	; 32
   15130:	0c c0       	rjmp	.+24     	; 0x1514a <vfprintf+0x114>
   15132:	8e 32       	cpi	r24, 0x2E	; 46
   15134:	21 f4       	brne	.+8      	; 0x1513e <vfprintf+0x108>
   15136:	16 fd       	sbrc	r17, 6
   15138:	11 c3       	rjmp	.+1570   	; 0x1575c <vfprintf+0x726>
   1513a:	10 64       	ori	r17, 0x40	; 64
   1513c:	06 c0       	rjmp	.+12     	; 0x1514a <vfprintf+0x114>
   1513e:	8c 36       	cpi	r24, 0x6C	; 108
   15140:	11 f4       	brne	.+4      	; 0x15146 <vfprintf+0x110>
   15142:	10 68       	ori	r17, 0x80	; 128
   15144:	02 c0       	rjmp	.+4      	; 0x1514a <vfprintf+0x114>
   15146:	88 36       	cpi	r24, 0x68	; 104
   15148:	59 f4       	brne	.+22     	; 0x15160 <vfprintf+0x12a>
   1514a:	ee 85       	ldd	r30, Y+14	; 0x0e
   1514c:	ff 85       	ldd	r31, Y+15	; 0x0f
   1514e:	93 fd       	sbrc	r25, 3
   15150:	85 91       	lpm	r24, Z+
   15152:	93 ff       	sbrs	r25, 3
   15154:	81 91       	ld	r24, Z+
   15156:	ee 87       	std	Y+14, r30	; 0x0e
   15158:	ff 87       	std	Y+15, r31	; 0x0f
   1515a:	88 23       	and	r24, r24
   1515c:	09 f0       	breq	.+2      	; 0x15160 <vfprintf+0x12a>
   1515e:	b8 cf       	rjmp	.-144    	; 0x150d0 <vfprintf+0x9a>
   15160:	98 2f       	mov	r25, r24
   15162:	95 54       	subi	r25, 0x45	; 69
   15164:	93 30       	cpi	r25, 0x03	; 3
   15166:	18 f4       	brcc	.+6      	; 0x1516e <vfprintf+0x138>
   15168:	10 61       	ori	r17, 0x10	; 16
   1516a:	80 5e       	subi	r24, 0xE0	; 224
   1516c:	06 c0       	rjmp	.+12     	; 0x1517a <vfprintf+0x144>
   1516e:	98 2f       	mov	r25, r24
   15170:	95 56       	subi	r25, 0x65	; 101
   15172:	93 30       	cpi	r25, 0x03	; 3
   15174:	08 f0       	brcs	.+2      	; 0x15178 <vfprintf+0x142>
   15176:	a2 c1       	rjmp	.+836    	; 0x154bc <vfprintf+0x486>
   15178:	1f 7e       	andi	r17, 0xEF	; 239
   1517a:	16 fd       	sbrc	r17, 6
   1517c:	02 c0       	rjmp	.+4      	; 0x15182 <vfprintf+0x14c>
   1517e:	e6 e0       	ldi	r30, 0x06	; 6
   15180:	fe 2e       	mov	r15, r30
   15182:	1f 73       	andi	r17, 0x3F	; 63
   15184:	85 36       	cpi	r24, 0x65	; 101
   15186:	11 f4       	brne	.+4      	; 0x1518c <vfprintf+0x156>
   15188:	10 64       	ori	r17, 0x40	; 64
   1518a:	06 c0       	rjmp	.+12     	; 0x15198 <vfprintf+0x162>
   1518c:	86 36       	cpi	r24, 0x66	; 102
   1518e:	11 f4       	brne	.+4      	; 0x15194 <vfprintf+0x15e>
   15190:	10 68       	ori	r17, 0x80	; 128
   15192:	02 c0       	rjmp	.+4      	; 0x15198 <vfprintf+0x162>
   15194:	f1 10       	cpse	r15, r1
   15196:	fa 94       	dec	r15
   15198:	17 ff       	sbrs	r17, 7
   1519a:	07 c0       	rjmp	.+14     	; 0x151aa <vfprintf+0x174>
   1519c:	fb e3       	ldi	r31, 0x3B	; 59
   1519e:	ff 15       	cp	r31, r15
   151a0:	48 f0       	brcs	.+18     	; 0x151b4 <vfprintf+0x17e>
   151a2:	ef 2c       	mov	r14, r15
   151a4:	e3 94       	inc	r14
   151a6:	27 e0       	ldi	r18, 0x07	; 7
   151a8:	0d c0       	rjmp	.+26     	; 0x151c4 <vfprintf+0x18e>
   151aa:	27 e0       	ldi	r18, 0x07	; 7
   151ac:	2f 15       	cp	r18, r15
   151ae:	30 f0       	brcs	.+12     	; 0x151bc <vfprintf+0x186>
   151b0:	2f 2d       	mov	r18, r15
   151b2:	07 c0       	rjmp	.+14     	; 0x151c2 <vfprintf+0x18c>
   151b4:	27 e0       	ldi	r18, 0x07	; 7
   151b6:	7c e3       	ldi	r23, 0x3C	; 60
   151b8:	e7 2e       	mov	r14, r23
   151ba:	04 c0       	rjmp	.+8      	; 0x151c4 <vfprintf+0x18e>
   151bc:	27 e0       	ldi	r18, 0x07	; 7
   151be:	67 e0       	ldi	r22, 0x07	; 7
   151c0:	f6 2e       	mov	r15, r22
   151c2:	ee 24       	eor	r14, r14
   151c4:	ca 01       	movw	r24, r20
   151c6:	04 96       	adiw	r24, 0x04	; 4
   151c8:	8c 87       	std	Y+12, r24	; 0x0c
   151ca:	9d 87       	std	Y+13, r25	; 0x0d
   151cc:	fa 01       	movw	r30, r20
   151ce:	60 81       	ld	r22, Z
   151d0:	71 81       	ldd	r23, Z+1	; 0x01
   151d2:	82 81       	ldd	r24, Z+2	; 0x02
   151d4:	93 81       	ldd	r25, Z+3	; 0x03
   151d6:	a1 01       	movw	r20, r2
   151d8:	0e 2d       	mov	r16, r14
   151da:	0e 94 af b0 	call	0x1615e	; 0x1615e <__ftoa_engine>
   151de:	5c 01       	movw	r10, r24
   151e0:	c9 80       	ldd	r12, Y+1	; 0x01
   151e2:	2c 2d       	mov	r18, r12
   151e4:	30 e0       	ldi	r19, 0x00	; 0
   151e6:	28 8b       	std	Y+16, r18	; 0x10
   151e8:	39 8b       	std	Y+17, r19	; 0x11
   151ea:	c0 fe       	sbrs	r12, 0
   151ec:	03 c0       	rjmp	.+6      	; 0x151f4 <vfprintf+0x1be>
   151ee:	38 89       	ldd	r19, Y+16	; 0x10
   151f0:	33 ff       	sbrs	r19, 3
   151f2:	06 c0       	rjmp	.+12     	; 0x15200 <vfprintf+0x1ca>
   151f4:	11 fd       	sbrc	r17, 1
   151f6:	06 c0       	rjmp	.+12     	; 0x15204 <vfprintf+0x1ce>
   151f8:	12 ff       	sbrs	r17, 2
   151fa:	06 c0       	rjmp	.+12     	; 0x15208 <vfprintf+0x1d2>
   151fc:	00 e2       	ldi	r16, 0x20	; 32
   151fe:	05 c0       	rjmp	.+10     	; 0x1520a <vfprintf+0x1d4>
   15200:	0d e2       	ldi	r16, 0x2D	; 45
   15202:	03 c0       	rjmp	.+6      	; 0x1520a <vfprintf+0x1d4>
   15204:	0b e2       	ldi	r16, 0x2B	; 43
   15206:	01 c0       	rjmp	.+2      	; 0x1520a <vfprintf+0x1d4>
   15208:	00 e0       	ldi	r16, 0x00	; 0
   1520a:	88 89       	ldd	r24, Y+16	; 0x10
   1520c:	99 89       	ldd	r25, Y+17	; 0x11
   1520e:	8c 70       	andi	r24, 0x0C	; 12
   15210:	90 70       	andi	r25, 0x00	; 0
   15212:	00 97       	sbiw	r24, 0x00	; 0
   15214:	09 f4       	brne	.+2      	; 0x15218 <vfprintf+0x1e2>
   15216:	3c c0       	rjmp	.+120    	; 0x15290 <vfprintf+0x25a>
   15218:	00 23       	and	r16, r16
   1521a:	11 f0       	breq	.+4      	; 0x15220 <vfprintf+0x1ea>
   1521c:	84 e0       	ldi	r24, 0x04	; 4
   1521e:	01 c0       	rjmp	.+2      	; 0x15222 <vfprintf+0x1ec>
   15220:	83 e0       	ldi	r24, 0x03	; 3
   15222:	8d 15       	cp	r24, r13
   15224:	58 f4       	brcc	.+22     	; 0x1523c <vfprintf+0x206>
   15226:	d8 1a       	sub	r13, r24
   15228:	13 fd       	sbrc	r17, 3
   1522a:	09 c0       	rjmp	.+18     	; 0x1523e <vfprintf+0x208>
   1522c:	80 e2       	ldi	r24, 0x20	; 32
   1522e:	90 e0       	ldi	r25, 0x00	; 0
   15230:	b4 01       	movw	r22, r8
   15232:	0e 94 3e b2 	call	0x1647c	; 0x1647c <fputc>
   15236:	da 94       	dec	r13
   15238:	c9 f7       	brne	.-14     	; 0x1522c <vfprintf+0x1f6>
   1523a:	01 c0       	rjmp	.+2      	; 0x1523e <vfprintf+0x208>
   1523c:	dd 24       	eor	r13, r13
   1523e:	00 23       	and	r16, r16
   15240:	29 f0       	breq	.+10     	; 0x1524c <vfprintf+0x216>
   15242:	80 2f       	mov	r24, r16
   15244:	90 e0       	ldi	r25, 0x00	; 0
   15246:	b4 01       	movw	r22, r8
   15248:	0e 94 3e b2 	call	0x1647c	; 0x1647c <fputc>
   1524c:	88 89       	ldd	r24, Y+16	; 0x10
   1524e:	83 fd       	sbrc	r24, 3
   15250:	05 c0       	rjmp	.+10     	; 0x1525c <vfprintf+0x226>
   15252:	33 e5       	ldi	r19, 0x53	; 83
   15254:	e3 2e       	mov	r14, r19
   15256:	3d e0       	ldi	r19, 0x0D	; 13
   15258:	f3 2e       	mov	r15, r19
   1525a:	11 c0       	rjmp	.+34     	; 0x1527e <vfprintf+0x248>
   1525c:	2f e4       	ldi	r18, 0x4F	; 79
   1525e:	e2 2e       	mov	r14, r18
   15260:	2d e0       	ldi	r18, 0x0D	; 13
   15262:	f2 2e       	mov	r15, r18
   15264:	0c c0       	rjmp	.+24     	; 0x1527e <vfprintf+0x248>
   15266:	01 15       	cp	r16, r1
   15268:	11 05       	cpc	r17, r1
   1526a:	09 f0       	breq	.+2      	; 0x1526e <vfprintf+0x238>
   1526c:	80 52       	subi	r24, 0x20	; 32
   1526e:	90 e0       	ldi	r25, 0x00	; 0
   15270:	b4 01       	movw	r22, r8
   15272:	0e 94 3e b2 	call	0x1647c	; 0x1647c <fputc>
   15276:	08 94       	sec
   15278:	e1 1c       	adc	r14, r1
   1527a:	f1 1c       	adc	r15, r1
   1527c:	04 c0       	rjmp	.+8      	; 0x15286 <vfprintf+0x250>
   1527e:	01 2f       	mov	r16, r17
   15280:	10 e0       	ldi	r17, 0x00	; 0
   15282:	00 71       	andi	r16, 0x10	; 16
   15284:	10 70       	andi	r17, 0x00	; 0
   15286:	f7 01       	movw	r30, r14
   15288:	84 91       	lpm	r24, Z
   1528a:	88 23       	and	r24, r24
   1528c:	61 f7       	brne	.-40     	; 0x15266 <vfprintf+0x230>
   1528e:	63 c2       	rjmp	.+1222   	; 0x15756 <vfprintf+0x720>
   15290:	17 ff       	sbrs	r17, 7
   15292:	0e c0       	rjmp	.+28     	; 0x152b0 <vfprintf+0x27a>
   15294:	ea 0c       	add	r14, r10
   15296:	f8 89       	ldd	r31, Y+16	; 0x10
   15298:	f4 ff       	sbrs	r31, 4
   1529a:	04 c0       	rjmp	.+8      	; 0x152a4 <vfprintf+0x26e>
   1529c:	8a 81       	ldd	r24, Y+2	; 0x02
   1529e:	81 33       	cpi	r24, 0x31	; 49
   152a0:	09 f4       	brne	.+2      	; 0x152a4 <vfprintf+0x26e>
   152a2:	ea 94       	dec	r14
   152a4:	1e 14       	cp	r1, r14
   152a6:	4c f5       	brge	.+82     	; 0x152fa <vfprintf+0x2c4>
   152a8:	28 e0       	ldi	r18, 0x08	; 8
   152aa:	2e 15       	cp	r18, r14
   152ac:	48 f1       	brcs	.+82     	; 0x15300 <vfprintf+0x2ca>
   152ae:	2c c0       	rjmp	.+88     	; 0x15308 <vfprintf+0x2d2>
   152b0:	16 fd       	sbrc	r17, 6
   152b2:	2a c0       	rjmp	.+84     	; 0x15308 <vfprintf+0x2d2>
   152b4:	8f 2d       	mov	r24, r15
   152b6:	90 e0       	ldi	r25, 0x00	; 0
   152b8:	8a 15       	cp	r24, r10
   152ba:	9b 05       	cpc	r25, r11
   152bc:	44 f0       	brlt	.+16     	; 0x152ce <vfprintf+0x298>
   152be:	3c ef       	ldi	r19, 0xFC	; 252
   152c0:	a3 16       	cp	r10, r19
   152c2:	3f ef       	ldi	r19, 0xFF	; 255
   152c4:	b3 06       	cpc	r11, r19
   152c6:	1c f0       	brlt	.+6      	; 0x152ce <vfprintf+0x298>
   152c8:	10 68       	ori	r17, 0x80	; 128
   152ca:	01 c0       	rjmp	.+2      	; 0x152ce <vfprintf+0x298>
   152cc:	fa 94       	dec	r15
   152ce:	ff 20       	and	r15, r15
   152d0:	49 f0       	breq	.+18     	; 0x152e4 <vfprintf+0x2ae>
   152d2:	e2 e0       	ldi	r30, 0x02	; 2
   152d4:	f0 e0       	ldi	r31, 0x00	; 0
   152d6:	ec 0f       	add	r30, r28
   152d8:	fd 1f       	adc	r31, r29
   152da:	ef 0d       	add	r30, r15
   152dc:	f1 1d       	adc	r31, r1
   152de:	80 81       	ld	r24, Z
   152e0:	80 33       	cpi	r24, 0x30	; 48
   152e2:	a1 f3       	breq	.-24     	; 0x152cc <vfprintf+0x296>
   152e4:	17 ff       	sbrs	r17, 7
   152e6:	10 c0       	rjmp	.+32     	; 0x15308 <vfprintf+0x2d2>
   152e8:	ef 2c       	mov	r14, r15
   152ea:	e3 94       	inc	r14
   152ec:	8f 2d       	mov	r24, r15
   152ee:	90 e0       	ldi	r25, 0x00	; 0
   152f0:	a8 16       	cp	r10, r24
   152f2:	b9 06       	cpc	r11, r25
   152f4:	44 f4       	brge	.+16     	; 0x15306 <vfprintf+0x2d0>
   152f6:	fa 18       	sub	r15, r10
   152f8:	07 c0       	rjmp	.+14     	; 0x15308 <vfprintf+0x2d2>
   152fa:	ee 24       	eor	r14, r14
   152fc:	e3 94       	inc	r14
   152fe:	04 c0       	rjmp	.+8      	; 0x15308 <vfprintf+0x2d2>
   15300:	98 e0       	ldi	r25, 0x08	; 8
   15302:	e9 2e       	mov	r14, r25
   15304:	01 c0       	rjmp	.+2      	; 0x15308 <vfprintf+0x2d2>
   15306:	ff 24       	eor	r15, r15
   15308:	17 ff       	sbrs	r17, 7
   1530a:	07 c0       	rjmp	.+14     	; 0x1531a <vfprintf+0x2e4>
   1530c:	1a 14       	cp	r1, r10
   1530e:	1b 04       	cpc	r1, r11
   15310:	3c f4       	brge	.+14     	; 0x15320 <vfprintf+0x2ea>
   15312:	95 01       	movw	r18, r10
   15314:	2f 5f       	subi	r18, 0xFF	; 255
   15316:	3f 4f       	sbci	r19, 0xFF	; 255
   15318:	05 c0       	rjmp	.+10     	; 0x15324 <vfprintf+0x2ee>
   1531a:	25 e0       	ldi	r18, 0x05	; 5
   1531c:	30 e0       	ldi	r19, 0x00	; 0
   1531e:	02 c0       	rjmp	.+4      	; 0x15324 <vfprintf+0x2ee>
   15320:	21 e0       	ldi	r18, 0x01	; 1
   15322:	30 e0       	ldi	r19, 0x00	; 0
   15324:	00 23       	and	r16, r16
   15326:	11 f0       	breq	.+4      	; 0x1532c <vfprintf+0x2f6>
   15328:	2f 5f       	subi	r18, 0xFF	; 255
   1532a:	3f 4f       	sbci	r19, 0xFF	; 255
   1532c:	ff 20       	and	r15, r15
   1532e:	29 f0       	breq	.+10     	; 0x1533a <vfprintf+0x304>
   15330:	8f 2d       	mov	r24, r15
   15332:	90 e0       	ldi	r25, 0x00	; 0
   15334:	01 96       	adiw	r24, 0x01	; 1
   15336:	28 0f       	add	r18, r24
   15338:	39 1f       	adc	r19, r25
   1533a:	8d 2d       	mov	r24, r13
   1533c:	90 e0       	ldi	r25, 0x00	; 0
   1533e:	28 17       	cp	r18, r24
   15340:	39 07       	cpc	r19, r25
   15342:	14 f4       	brge	.+4      	; 0x15348 <vfprintf+0x312>
   15344:	d2 1a       	sub	r13, r18
   15346:	01 c0       	rjmp	.+2      	; 0x1534a <vfprintf+0x314>
   15348:	dd 24       	eor	r13, r13
   1534a:	61 2e       	mov	r6, r17
   1534c:	77 24       	eor	r7, r7
   1534e:	c3 01       	movw	r24, r6
   15350:	89 70       	andi	r24, 0x09	; 9
   15352:	90 70       	andi	r25, 0x00	; 0
   15354:	00 97       	sbiw	r24, 0x00	; 0
   15356:	49 f4       	brne	.+18     	; 0x1536a <vfprintf+0x334>
   15358:	06 c0       	rjmp	.+12     	; 0x15366 <vfprintf+0x330>
   1535a:	80 e2       	ldi	r24, 0x20	; 32
   1535c:	90 e0       	ldi	r25, 0x00	; 0
   1535e:	b4 01       	movw	r22, r8
   15360:	0e 94 3e b2 	call	0x1647c	; 0x1647c <fputc>
   15364:	da 94       	dec	r13
   15366:	dd 20       	and	r13, r13
   15368:	c1 f7       	brne	.-16     	; 0x1535a <vfprintf+0x324>
   1536a:	00 23       	and	r16, r16
   1536c:	29 f0       	breq	.+10     	; 0x15378 <vfprintf+0x342>
   1536e:	80 2f       	mov	r24, r16
   15370:	90 e0       	ldi	r25, 0x00	; 0
   15372:	b4 01       	movw	r22, r8
   15374:	0e 94 3e b2 	call	0x1647c	; 0x1647c <fputc>
   15378:	63 fc       	sbrc	r6, 3
   1537a:	09 c0       	rjmp	.+18     	; 0x1538e <vfprintf+0x358>
   1537c:	06 c0       	rjmp	.+12     	; 0x1538a <vfprintf+0x354>
   1537e:	80 e3       	ldi	r24, 0x30	; 48
   15380:	90 e0       	ldi	r25, 0x00	; 0
   15382:	b4 01       	movw	r22, r8
   15384:	0e 94 3e b2 	call	0x1647c	; 0x1647c <fputc>
   15388:	da 94       	dec	r13
   1538a:	dd 20       	and	r13, r13
   1538c:	c1 f7       	brne	.-16     	; 0x1537e <vfprintf+0x348>
   1538e:	17 ff       	sbrs	r17, 7
   15390:	48 c0       	rjmp	.+144    	; 0x15422 <vfprintf+0x3ec>
   15392:	85 01       	movw	r16, r10
   15394:	b7 fe       	sbrs	r11, 7
   15396:	02 c0       	rjmp	.+4      	; 0x1539c <vfprintf+0x366>
   15398:	00 e0       	ldi	r16, 0x00	; 0
   1539a:	10 e0       	ldi	r17, 0x00	; 0
   1539c:	66 24       	eor	r6, r6
   1539e:	77 24       	eor	r7, r7
   153a0:	95 01       	movw	r18, r10
   153a2:	2e 19       	sub	r18, r14
   153a4:	31 09       	sbc	r19, r1
   153a6:	2a 8b       	std	Y+18, r18	; 0x12
   153a8:	3b 8b       	std	Y+19, r19	; 0x13
   153aa:	25 01       	movw	r4, r10
   153ac:	40 1a       	sub	r4, r16
   153ae:	51 0a       	sbc	r5, r17
   153b0:	42 0c       	add	r4, r2
   153b2:	53 1c       	adc	r5, r3
   153b4:	6f 2d       	mov	r22, r15
   153b6:	70 e0       	ldi	r23, 0x00	; 0
   153b8:	ee 24       	eor	r14, r14
   153ba:	ff 24       	eor	r15, r15
   153bc:	e6 1a       	sub	r14, r22
   153be:	f7 0a       	sbc	r15, r23
   153c0:	3f ef       	ldi	r19, 0xFF	; 255
   153c2:	0f 3f       	cpi	r16, 0xFF	; 255
   153c4:	13 07       	cpc	r17, r19
   153c6:	29 f4       	brne	.+10     	; 0x153d2 <vfprintf+0x39c>
   153c8:	8e e2       	ldi	r24, 0x2E	; 46
   153ca:	90 e0       	ldi	r25, 0x00	; 0
   153cc:	b4 01       	movw	r22, r8
   153ce:	0e 94 3e b2 	call	0x1647c	; 0x1647c <fputc>
   153d2:	a0 16       	cp	r10, r16
   153d4:	b1 06       	cpc	r11, r17
   153d6:	54 f0       	brlt	.+20     	; 0x153ec <vfprintf+0x3b6>
   153d8:	2a 89       	ldd	r18, Y+18	; 0x12
   153da:	3b 89       	ldd	r19, Y+19	; 0x13
   153dc:	20 17       	cp	r18, r16
   153de:	31 07       	cpc	r19, r17
   153e0:	2c f4       	brge	.+10     	; 0x153ec <vfprintf+0x3b6>
   153e2:	f2 01       	movw	r30, r4
   153e4:	e6 0d       	add	r30, r6
   153e6:	f7 1d       	adc	r31, r7
   153e8:	81 81       	ldd	r24, Z+1	; 0x01
   153ea:	01 c0       	rjmp	.+2      	; 0x153ee <vfprintf+0x3b8>
   153ec:	80 e3       	ldi	r24, 0x30	; 48
   153ee:	01 50       	subi	r16, 0x01	; 1
   153f0:	10 40       	sbci	r17, 0x00	; 0
   153f2:	08 94       	sec
   153f4:	61 1c       	adc	r6, r1
   153f6:	71 1c       	adc	r7, r1
   153f8:	0e 15       	cp	r16, r14
   153fa:	1f 05       	cpc	r17, r15
   153fc:	2c f0       	brlt	.+10     	; 0x15408 <vfprintf+0x3d2>
   153fe:	90 e0       	ldi	r25, 0x00	; 0
   15400:	b4 01       	movw	r22, r8
   15402:	0e 94 3e b2 	call	0x1647c	; 0x1647c <fputc>
   15406:	dc cf       	rjmp	.-72     	; 0x153c0 <vfprintf+0x38a>
   15408:	0a 15       	cp	r16, r10
   1540a:	1b 05       	cpc	r17, r11
   1540c:	41 f4       	brne	.+16     	; 0x1541e <vfprintf+0x3e8>
   1540e:	9a 81       	ldd	r25, Y+2	; 0x02
   15410:	96 33       	cpi	r25, 0x36	; 54
   15412:	20 f4       	brcc	.+8      	; 0x1541c <vfprintf+0x3e6>
   15414:	95 33       	cpi	r25, 0x35	; 53
   15416:	19 f4       	brne	.+6      	; 0x1541e <vfprintf+0x3e8>
   15418:	38 89       	ldd	r19, Y+16	; 0x10
   1541a:	34 ff       	sbrs	r19, 4
   1541c:	81 e3       	ldi	r24, 0x31	; 49
   1541e:	90 e0       	ldi	r25, 0x00	; 0
   15420:	49 c0       	rjmp	.+146    	; 0x154b4 <vfprintf+0x47e>
   15422:	8a 81       	ldd	r24, Y+2	; 0x02
   15424:	81 33       	cpi	r24, 0x31	; 49
   15426:	11 f0       	breq	.+4      	; 0x1542c <vfprintf+0x3f6>
   15428:	9f ee       	ldi	r25, 0xEF	; 239
   1542a:	c9 22       	and	r12, r25
   1542c:	90 e0       	ldi	r25, 0x00	; 0
   1542e:	b4 01       	movw	r22, r8
   15430:	0e 94 3e b2 	call	0x1647c	; 0x1647c <fputc>
   15434:	ff 20       	and	r15, r15
   15436:	89 f0       	breq	.+34     	; 0x1545a <vfprintf+0x424>
   15438:	8e e2       	ldi	r24, 0x2E	; 46
   1543a:	90 e0       	ldi	r25, 0x00	; 0
   1543c:	b4 01       	movw	r22, r8
   1543e:	0e 94 3e b2 	call	0x1647c	; 0x1647c <fputc>
   15442:	12 e0       	ldi	r17, 0x02	; 2
   15444:	f1 01       	movw	r30, r2
   15446:	e1 0f       	add	r30, r17
   15448:	f1 1d       	adc	r31, r1
   1544a:	1f 5f       	subi	r17, 0xFF	; 255
   1544c:	80 81       	ld	r24, Z
   1544e:	90 e0       	ldi	r25, 0x00	; 0
   15450:	b4 01       	movw	r22, r8
   15452:	0e 94 3e b2 	call	0x1647c	; 0x1647c <fputc>
   15456:	fa 94       	dec	r15
   15458:	a9 f7       	brne	.-22     	; 0x15444 <vfprintf+0x40e>
   1545a:	64 fe       	sbrs	r6, 4
   1545c:	03 c0       	rjmp	.+6      	; 0x15464 <vfprintf+0x42e>
   1545e:	85 e4       	ldi	r24, 0x45	; 69
   15460:	90 e0       	ldi	r25, 0x00	; 0
   15462:	02 c0       	rjmp	.+4      	; 0x15468 <vfprintf+0x432>
   15464:	85 e6       	ldi	r24, 0x65	; 101
   15466:	90 e0       	ldi	r25, 0x00	; 0
   15468:	b4 01       	movw	r22, r8
   1546a:	0e 94 3e b2 	call	0x1647c	; 0x1647c <fputc>
   1546e:	b7 fc       	sbrc	r11, 7
   15470:	05 c0       	rjmp	.+10     	; 0x1547c <vfprintf+0x446>
   15472:	a1 14       	cp	r10, r1
   15474:	b1 04       	cpc	r11, r1
   15476:	41 f4       	brne	.+16     	; 0x15488 <vfprintf+0x452>
   15478:	c4 fe       	sbrs	r12, 4
   1547a:	06 c0       	rjmp	.+12     	; 0x15488 <vfprintf+0x452>
   1547c:	b0 94       	com	r11
   1547e:	a1 94       	neg	r10
   15480:	b1 08       	sbc	r11, r1
   15482:	b3 94       	inc	r11
   15484:	8d e2       	ldi	r24, 0x2D	; 45
   15486:	01 c0       	rjmp	.+2      	; 0x1548a <vfprintf+0x454>
   15488:	8b e2       	ldi	r24, 0x2B	; 43
   1548a:	90 e0       	ldi	r25, 0x00	; 0
   1548c:	b4 01       	movw	r22, r8
   1548e:	0e 94 3e b2 	call	0x1647c	; 0x1647c <fputc>
   15492:	80 e3       	ldi	r24, 0x30	; 48
   15494:	05 c0       	rjmp	.+10     	; 0x154a0 <vfprintf+0x46a>
   15496:	8f 5f       	subi	r24, 0xFF	; 255
   15498:	e6 ef       	ldi	r30, 0xF6	; 246
   1549a:	ff ef       	ldi	r31, 0xFF	; 255
   1549c:	ae 0e       	add	r10, r30
   1549e:	bf 1e       	adc	r11, r31
   154a0:	fa e0       	ldi	r31, 0x0A	; 10
   154a2:	af 16       	cp	r10, r31
   154a4:	b1 04       	cpc	r11, r1
   154a6:	bc f7       	brge	.-18     	; 0x15496 <vfprintf+0x460>
   154a8:	90 e0       	ldi	r25, 0x00	; 0
   154aa:	b4 01       	movw	r22, r8
   154ac:	0e 94 3e b2 	call	0x1647c	; 0x1647c <fputc>
   154b0:	c5 01       	movw	r24, r10
   154b2:	c0 96       	adiw	r24, 0x30	; 48
   154b4:	b4 01       	movw	r22, r8
   154b6:	0e 94 3e b2 	call	0x1647c	; 0x1647c <fputc>
   154ba:	4d c1       	rjmp	.+666    	; 0x15756 <vfprintf+0x720>
   154bc:	83 36       	cpi	r24, 0x63	; 99
   154be:	31 f0       	breq	.+12     	; 0x154cc <vfprintf+0x496>
   154c0:	83 37       	cpi	r24, 0x73	; 115
   154c2:	89 f0       	breq	.+34     	; 0x154e6 <vfprintf+0x4b0>
   154c4:	83 35       	cpi	r24, 0x53	; 83
   154c6:	09 f0       	breq	.+2      	; 0x154ca <vfprintf+0x494>
   154c8:	59 c0       	rjmp	.+178    	; 0x1557c <vfprintf+0x546>
   154ca:	22 c0       	rjmp	.+68     	; 0x15510 <vfprintf+0x4da>
   154cc:	9a 01       	movw	r18, r20
   154ce:	2e 5f       	subi	r18, 0xFE	; 254
   154d0:	3f 4f       	sbci	r19, 0xFF	; 255
   154d2:	2c 87       	std	Y+12, r18	; 0x0c
   154d4:	3d 87       	std	Y+13, r19	; 0x0d
   154d6:	fa 01       	movw	r30, r20
   154d8:	80 81       	ld	r24, Z
   154da:	89 83       	std	Y+1, r24	; 0x01
   154dc:	81 e0       	ldi	r24, 0x01	; 1
   154de:	e8 2e       	mov	r14, r24
   154e0:	f1 2c       	mov	r15, r1
   154e2:	51 01       	movw	r10, r2
   154e4:	13 c0       	rjmp	.+38     	; 0x1550c <vfprintf+0x4d6>
   154e6:	9a 01       	movw	r18, r20
   154e8:	2e 5f       	subi	r18, 0xFE	; 254
   154ea:	3f 4f       	sbci	r19, 0xFF	; 255
   154ec:	2c 87       	std	Y+12, r18	; 0x0c
   154ee:	3d 87       	std	Y+13, r19	; 0x0d
   154f0:	fa 01       	movw	r30, r20
   154f2:	a0 80       	ld	r10, Z
   154f4:	b1 80       	ldd	r11, Z+1	; 0x01
   154f6:	16 ff       	sbrs	r17, 6
   154f8:	03 c0       	rjmp	.+6      	; 0x15500 <vfprintf+0x4ca>
   154fa:	6f 2d       	mov	r22, r15
   154fc:	70 e0       	ldi	r23, 0x00	; 0
   154fe:	02 c0       	rjmp	.+4      	; 0x15504 <vfprintf+0x4ce>
   15500:	6f ef       	ldi	r22, 0xFF	; 255
   15502:	7f ef       	ldi	r23, 0xFF	; 255
   15504:	c5 01       	movw	r24, r10
   15506:	0e 94 04 b2 	call	0x16408	; 0x16408 <strnlen>
   1550a:	7c 01       	movw	r14, r24
   1550c:	1f 77       	andi	r17, 0x7F	; 127
   1550e:	14 c0       	rjmp	.+40     	; 0x15538 <vfprintf+0x502>
   15510:	9a 01       	movw	r18, r20
   15512:	2e 5f       	subi	r18, 0xFE	; 254
   15514:	3f 4f       	sbci	r19, 0xFF	; 255
   15516:	2c 87       	std	Y+12, r18	; 0x0c
   15518:	3d 87       	std	Y+13, r19	; 0x0d
   1551a:	fa 01       	movw	r30, r20
   1551c:	a0 80       	ld	r10, Z
   1551e:	b1 80       	ldd	r11, Z+1	; 0x01
   15520:	16 ff       	sbrs	r17, 6
   15522:	03 c0       	rjmp	.+6      	; 0x1552a <vfprintf+0x4f4>
   15524:	6f 2d       	mov	r22, r15
   15526:	70 e0       	ldi	r23, 0x00	; 0
   15528:	02 c0       	rjmp	.+4      	; 0x1552e <vfprintf+0x4f8>
   1552a:	6f ef       	ldi	r22, 0xFF	; 255
   1552c:	7f ef       	ldi	r23, 0xFF	; 255
   1552e:	c5 01       	movw	r24, r10
   15530:	0e 94 9a b1 	call	0x16334	; 0x16334 <strnlen_P>
   15534:	7c 01       	movw	r14, r24
   15536:	10 68       	ori	r17, 0x80	; 128
   15538:	13 fd       	sbrc	r17, 3
   1553a:	1c c0       	rjmp	.+56     	; 0x15574 <vfprintf+0x53e>
   1553c:	06 c0       	rjmp	.+12     	; 0x1554a <vfprintf+0x514>
   1553e:	80 e2       	ldi	r24, 0x20	; 32
   15540:	90 e0       	ldi	r25, 0x00	; 0
   15542:	b4 01       	movw	r22, r8
   15544:	0e 94 3e b2 	call	0x1647c	; 0x1647c <fputc>
   15548:	da 94       	dec	r13
   1554a:	8d 2d       	mov	r24, r13
   1554c:	90 e0       	ldi	r25, 0x00	; 0
   1554e:	e8 16       	cp	r14, r24
   15550:	f9 06       	cpc	r15, r25
   15552:	a8 f3       	brcs	.-22     	; 0x1553e <vfprintf+0x508>
   15554:	0f c0       	rjmp	.+30     	; 0x15574 <vfprintf+0x53e>
   15556:	f5 01       	movw	r30, r10
   15558:	17 fd       	sbrc	r17, 7
   1555a:	85 91       	lpm	r24, Z+
   1555c:	17 ff       	sbrs	r17, 7
   1555e:	81 91       	ld	r24, Z+
   15560:	5f 01       	movw	r10, r30
   15562:	90 e0       	ldi	r25, 0x00	; 0
   15564:	b4 01       	movw	r22, r8
   15566:	0e 94 3e b2 	call	0x1647c	; 0x1647c <fputc>
   1556a:	d1 10       	cpse	r13, r1
   1556c:	da 94       	dec	r13
   1556e:	08 94       	sec
   15570:	e1 08       	sbc	r14, r1
   15572:	f1 08       	sbc	r15, r1
   15574:	e1 14       	cp	r14, r1
   15576:	f1 04       	cpc	r15, r1
   15578:	71 f7       	brne	.-36     	; 0x15556 <vfprintf+0x520>
   1557a:	ed c0       	rjmp	.+474    	; 0x15756 <vfprintf+0x720>
   1557c:	84 36       	cpi	r24, 0x64	; 100
   1557e:	11 f0       	breq	.+4      	; 0x15584 <vfprintf+0x54e>
   15580:	89 36       	cpi	r24, 0x69	; 105
   15582:	71 f5       	brne	.+92     	; 0x155e0 <vfprintf+0x5aa>
   15584:	9a 01       	movw	r18, r20
   15586:	17 ff       	sbrs	r17, 7
   15588:	0a c0       	rjmp	.+20     	; 0x1559e <vfprintf+0x568>
   1558a:	2c 5f       	subi	r18, 0xFC	; 252
   1558c:	3f 4f       	sbci	r19, 0xFF	; 255
   1558e:	2c 87       	std	Y+12, r18	; 0x0c
   15590:	3d 87       	std	Y+13, r19	; 0x0d
   15592:	fa 01       	movw	r30, r20
   15594:	80 81       	ld	r24, Z
   15596:	91 81       	ldd	r25, Z+1	; 0x01
   15598:	a2 81       	ldd	r26, Z+2	; 0x02
   1559a:	b3 81       	ldd	r27, Z+3	; 0x03
   1559c:	0b c0       	rjmp	.+22     	; 0x155b4 <vfprintf+0x57e>
   1559e:	2e 5f       	subi	r18, 0xFE	; 254
   155a0:	3f 4f       	sbci	r19, 0xFF	; 255
   155a2:	2c 87       	std	Y+12, r18	; 0x0c
   155a4:	3d 87       	std	Y+13, r19	; 0x0d
   155a6:	fa 01       	movw	r30, r20
   155a8:	80 81       	ld	r24, Z
   155aa:	91 81       	ldd	r25, Z+1	; 0x01
   155ac:	aa 27       	eor	r26, r26
   155ae:	97 fd       	sbrc	r25, 7
   155b0:	a0 95       	com	r26
   155b2:	ba 2f       	mov	r27, r26
   155b4:	01 2f       	mov	r16, r17
   155b6:	0f 76       	andi	r16, 0x6F	; 111
   155b8:	b7 ff       	sbrs	r27, 7
   155ba:	08 c0       	rjmp	.+16     	; 0x155cc <vfprintf+0x596>
   155bc:	b0 95       	com	r27
   155be:	a0 95       	com	r26
   155c0:	90 95       	com	r25
   155c2:	81 95       	neg	r24
   155c4:	9f 4f       	sbci	r25, 0xFF	; 255
   155c6:	af 4f       	sbci	r26, 0xFF	; 255
   155c8:	bf 4f       	sbci	r27, 0xFF	; 255
   155ca:	00 68       	ori	r16, 0x80	; 128
   155cc:	bc 01       	movw	r22, r24
   155ce:	cd 01       	movw	r24, r26
   155d0:	a1 01       	movw	r20, r2
   155d2:	2a e0       	ldi	r18, 0x0A	; 10
   155d4:	30 e0       	ldi	r19, 0x00	; 0
   155d6:	0e 94 bc b2 	call	0x16578	; 0x16578 <__ultoa_invert>
   155da:	e8 2e       	mov	r14, r24
   155dc:	e2 18       	sub	r14, r2
   155de:	41 c0       	rjmp	.+130    	; 0x15662 <vfprintf+0x62c>
   155e0:	85 37       	cpi	r24, 0x75	; 117
   155e2:	21 f4       	brne	.+8      	; 0x155ec <vfprintf+0x5b6>
   155e4:	1f 7e       	andi	r17, 0xEF	; 239
   155e6:	2a e0       	ldi	r18, 0x0A	; 10
   155e8:	30 e0       	ldi	r19, 0x00	; 0
   155ea:	20 c0       	rjmp	.+64     	; 0x1562c <vfprintf+0x5f6>
   155ec:	19 7f       	andi	r17, 0xF9	; 249
   155ee:	8f 36       	cpi	r24, 0x6F	; 111
   155f0:	a9 f0       	breq	.+42     	; 0x1561c <vfprintf+0x5e6>
   155f2:	80 37       	cpi	r24, 0x70	; 112
   155f4:	20 f4       	brcc	.+8      	; 0x155fe <vfprintf+0x5c8>
   155f6:	88 35       	cpi	r24, 0x58	; 88
   155f8:	09 f0       	breq	.+2      	; 0x155fc <vfprintf+0x5c6>
   155fa:	b0 c0       	rjmp	.+352    	; 0x1575c <vfprintf+0x726>
   155fc:	0b c0       	rjmp	.+22     	; 0x15614 <vfprintf+0x5de>
   155fe:	80 37       	cpi	r24, 0x70	; 112
   15600:	21 f0       	breq	.+8      	; 0x1560a <vfprintf+0x5d4>
   15602:	88 37       	cpi	r24, 0x78	; 120
   15604:	09 f0       	breq	.+2      	; 0x15608 <vfprintf+0x5d2>
   15606:	aa c0       	rjmp	.+340    	; 0x1575c <vfprintf+0x726>
   15608:	01 c0       	rjmp	.+2      	; 0x1560c <vfprintf+0x5d6>
   1560a:	10 61       	ori	r17, 0x10	; 16
   1560c:	14 ff       	sbrs	r17, 4
   1560e:	09 c0       	rjmp	.+18     	; 0x15622 <vfprintf+0x5ec>
   15610:	14 60       	ori	r17, 0x04	; 4
   15612:	07 c0       	rjmp	.+14     	; 0x15622 <vfprintf+0x5ec>
   15614:	14 ff       	sbrs	r17, 4
   15616:	08 c0       	rjmp	.+16     	; 0x15628 <vfprintf+0x5f2>
   15618:	16 60       	ori	r17, 0x06	; 6
   1561a:	06 c0       	rjmp	.+12     	; 0x15628 <vfprintf+0x5f2>
   1561c:	28 e0       	ldi	r18, 0x08	; 8
   1561e:	30 e0       	ldi	r19, 0x00	; 0
   15620:	05 c0       	rjmp	.+10     	; 0x1562c <vfprintf+0x5f6>
   15622:	20 e1       	ldi	r18, 0x10	; 16
   15624:	30 e0       	ldi	r19, 0x00	; 0
   15626:	02 c0       	rjmp	.+4      	; 0x1562c <vfprintf+0x5f6>
   15628:	20 e1       	ldi	r18, 0x10	; 16
   1562a:	32 e0       	ldi	r19, 0x02	; 2
   1562c:	ca 01       	movw	r24, r20
   1562e:	17 ff       	sbrs	r17, 7
   15630:	09 c0       	rjmp	.+18     	; 0x15644 <vfprintf+0x60e>
   15632:	04 96       	adiw	r24, 0x04	; 4
   15634:	8c 87       	std	Y+12, r24	; 0x0c
   15636:	9d 87       	std	Y+13, r25	; 0x0d
   15638:	fa 01       	movw	r30, r20
   1563a:	60 81       	ld	r22, Z
   1563c:	71 81       	ldd	r23, Z+1	; 0x01
   1563e:	82 81       	ldd	r24, Z+2	; 0x02
   15640:	93 81       	ldd	r25, Z+3	; 0x03
   15642:	08 c0       	rjmp	.+16     	; 0x15654 <vfprintf+0x61e>
   15644:	02 96       	adiw	r24, 0x02	; 2
   15646:	8c 87       	std	Y+12, r24	; 0x0c
   15648:	9d 87       	std	Y+13, r25	; 0x0d
   1564a:	fa 01       	movw	r30, r20
   1564c:	60 81       	ld	r22, Z
   1564e:	71 81       	ldd	r23, Z+1	; 0x01
   15650:	80 e0       	ldi	r24, 0x00	; 0
   15652:	90 e0       	ldi	r25, 0x00	; 0
   15654:	a1 01       	movw	r20, r2
   15656:	0e 94 bc b2 	call	0x16578	; 0x16578 <__ultoa_invert>
   1565a:	e8 2e       	mov	r14, r24
   1565c:	e2 18       	sub	r14, r2
   1565e:	01 2f       	mov	r16, r17
   15660:	0f 77       	andi	r16, 0x7F	; 127
   15662:	06 ff       	sbrs	r16, 6
   15664:	09 c0       	rjmp	.+18     	; 0x15678 <vfprintf+0x642>
   15666:	0e 7f       	andi	r16, 0xFE	; 254
   15668:	ef 14       	cp	r14, r15
   1566a:	30 f4       	brcc	.+12     	; 0x15678 <vfprintf+0x642>
   1566c:	04 ff       	sbrs	r16, 4
   1566e:	06 c0       	rjmp	.+12     	; 0x1567c <vfprintf+0x646>
   15670:	02 fd       	sbrc	r16, 2
   15672:	04 c0       	rjmp	.+8      	; 0x1567c <vfprintf+0x646>
   15674:	0f 7e       	andi	r16, 0xEF	; 239
   15676:	02 c0       	rjmp	.+4      	; 0x1567c <vfprintf+0x646>
   15678:	1e 2d       	mov	r17, r14
   1567a:	01 c0       	rjmp	.+2      	; 0x1567e <vfprintf+0x648>
   1567c:	1f 2d       	mov	r17, r15
   1567e:	80 2f       	mov	r24, r16
   15680:	90 e0       	ldi	r25, 0x00	; 0
   15682:	04 ff       	sbrs	r16, 4
   15684:	0c c0       	rjmp	.+24     	; 0x1569e <vfprintf+0x668>
   15686:	fe 01       	movw	r30, r28
   15688:	ee 0d       	add	r30, r14
   1568a:	f1 1d       	adc	r31, r1
   1568c:	20 81       	ld	r18, Z
   1568e:	20 33       	cpi	r18, 0x30	; 48
   15690:	11 f4       	brne	.+4      	; 0x15696 <vfprintf+0x660>
   15692:	09 7e       	andi	r16, 0xE9	; 233
   15694:	09 c0       	rjmp	.+18     	; 0x156a8 <vfprintf+0x672>
   15696:	02 ff       	sbrs	r16, 2
   15698:	06 c0       	rjmp	.+12     	; 0x156a6 <vfprintf+0x670>
   1569a:	1e 5f       	subi	r17, 0xFE	; 254
   1569c:	05 c0       	rjmp	.+10     	; 0x156a8 <vfprintf+0x672>
   1569e:	86 78       	andi	r24, 0x86	; 134
   156a0:	90 70       	andi	r25, 0x00	; 0
   156a2:	00 97       	sbiw	r24, 0x00	; 0
   156a4:	09 f0       	breq	.+2      	; 0x156a8 <vfprintf+0x672>
   156a6:	1f 5f       	subi	r17, 0xFF	; 255
   156a8:	a0 2e       	mov	r10, r16
   156aa:	bb 24       	eor	r11, r11
   156ac:	03 fd       	sbrc	r16, 3
   156ae:	12 c0       	rjmp	.+36     	; 0x156d4 <vfprintf+0x69e>
   156b0:	00 ff       	sbrs	r16, 0
   156b2:	0d c0       	rjmp	.+26     	; 0x156ce <vfprintf+0x698>
   156b4:	fe 2c       	mov	r15, r14
   156b6:	1d 15       	cp	r17, r13
   156b8:	50 f4       	brcc	.+20     	; 0x156ce <vfprintf+0x698>
   156ba:	fd 0c       	add	r15, r13
   156bc:	f1 1a       	sub	r15, r17
   156be:	1d 2d       	mov	r17, r13
   156c0:	06 c0       	rjmp	.+12     	; 0x156ce <vfprintf+0x698>
   156c2:	80 e2       	ldi	r24, 0x20	; 32
   156c4:	90 e0       	ldi	r25, 0x00	; 0
   156c6:	b4 01       	movw	r22, r8
   156c8:	0e 94 3e b2 	call	0x1647c	; 0x1647c <fputc>
   156cc:	1f 5f       	subi	r17, 0xFF	; 255
   156ce:	1d 15       	cp	r17, r13
   156d0:	c0 f3       	brcs	.-16     	; 0x156c2 <vfprintf+0x68c>
   156d2:	04 c0       	rjmp	.+8      	; 0x156dc <vfprintf+0x6a6>
   156d4:	1d 15       	cp	r17, r13
   156d6:	10 f4       	brcc	.+4      	; 0x156dc <vfprintf+0x6a6>
   156d8:	d1 1a       	sub	r13, r17
   156da:	01 c0       	rjmp	.+2      	; 0x156de <vfprintf+0x6a8>
   156dc:	dd 24       	eor	r13, r13
   156de:	a4 fe       	sbrs	r10, 4
   156e0:	0f c0       	rjmp	.+30     	; 0x15700 <vfprintf+0x6ca>
   156e2:	80 e3       	ldi	r24, 0x30	; 48
   156e4:	90 e0       	ldi	r25, 0x00	; 0
   156e6:	b4 01       	movw	r22, r8
   156e8:	0e 94 3e b2 	call	0x1647c	; 0x1647c <fputc>
   156ec:	a2 fe       	sbrs	r10, 2
   156ee:	1f c0       	rjmp	.+62     	; 0x1572e <vfprintf+0x6f8>
   156f0:	a1 fe       	sbrs	r10, 1
   156f2:	03 c0       	rjmp	.+6      	; 0x156fa <vfprintf+0x6c4>
   156f4:	88 e5       	ldi	r24, 0x58	; 88
   156f6:	90 e0       	ldi	r25, 0x00	; 0
   156f8:	10 c0       	rjmp	.+32     	; 0x1571a <vfprintf+0x6e4>
   156fa:	88 e7       	ldi	r24, 0x78	; 120
   156fc:	90 e0       	ldi	r25, 0x00	; 0
   156fe:	0d c0       	rjmp	.+26     	; 0x1571a <vfprintf+0x6e4>
   15700:	c5 01       	movw	r24, r10
   15702:	86 78       	andi	r24, 0x86	; 134
   15704:	90 70       	andi	r25, 0x00	; 0
   15706:	00 97       	sbiw	r24, 0x00	; 0
   15708:	91 f0       	breq	.+36     	; 0x1572e <vfprintf+0x6f8>
   1570a:	a1 fc       	sbrc	r10, 1
   1570c:	02 c0       	rjmp	.+4      	; 0x15712 <vfprintf+0x6dc>
   1570e:	80 e2       	ldi	r24, 0x20	; 32
   15710:	01 c0       	rjmp	.+2      	; 0x15714 <vfprintf+0x6de>
   15712:	8b e2       	ldi	r24, 0x2B	; 43
   15714:	07 fd       	sbrc	r16, 7
   15716:	8d e2       	ldi	r24, 0x2D	; 45
   15718:	90 e0       	ldi	r25, 0x00	; 0
   1571a:	b4 01       	movw	r22, r8
   1571c:	0e 94 3e b2 	call	0x1647c	; 0x1647c <fputc>
   15720:	06 c0       	rjmp	.+12     	; 0x1572e <vfprintf+0x6f8>
   15722:	80 e3       	ldi	r24, 0x30	; 48
   15724:	90 e0       	ldi	r25, 0x00	; 0
   15726:	b4 01       	movw	r22, r8
   15728:	0e 94 3e b2 	call	0x1647c	; 0x1647c <fputc>
   1572c:	fa 94       	dec	r15
   1572e:	ef 14       	cp	r14, r15
   15730:	c0 f3       	brcs	.-16     	; 0x15722 <vfprintf+0x6ec>
   15732:	ea 94       	dec	r14
   15734:	f1 01       	movw	r30, r2
   15736:	ee 0d       	add	r30, r14
   15738:	f1 1d       	adc	r31, r1
   1573a:	80 81       	ld	r24, Z
   1573c:	90 e0       	ldi	r25, 0x00	; 0
   1573e:	b4 01       	movw	r22, r8
   15740:	0e 94 3e b2 	call	0x1647c	; 0x1647c <fputc>
   15744:	ee 20       	and	r14, r14
   15746:	a9 f7       	brne	.-22     	; 0x15732 <vfprintf+0x6fc>
   15748:	06 c0       	rjmp	.+12     	; 0x15756 <vfprintf+0x720>
   1574a:	80 e2       	ldi	r24, 0x20	; 32
   1574c:	90 e0       	ldi	r25, 0x00	; 0
   1574e:	b4 01       	movw	r22, r8
   15750:	0e 94 3e b2 	call	0x1647c	; 0x1647c <fputc>
   15754:	da 94       	dec	r13
   15756:	dd 20       	and	r13, r13
   15758:	c1 f7       	brne	.-16     	; 0x1574a <vfprintf+0x714>
   1575a:	8e cc       	rjmp	.-1764   	; 0x15078 <vfprintf+0x42>
   1575c:	f4 01       	movw	r30, r8
   1575e:	86 81       	ldd	r24, Z+6	; 0x06
   15760:	97 81       	ldd	r25, Z+7	; 0x07
   15762:	02 c0       	rjmp	.+4      	; 0x15768 <vfprintf+0x732>
   15764:	8f ef       	ldi	r24, 0xFF	; 255
   15766:	9f ef       	ldi	r25, 0xFF	; 255
   15768:	65 96       	adiw	r28, 0x15	; 21
   1576a:	cd bf       	out	0x3d, r28	; 61
   1576c:	de bf       	out	0x3e, r29	; 62
   1576e:	df 91       	pop	r29
   15770:	cf 91       	pop	r28
   15772:	1f 91       	pop	r17
   15774:	0f 91       	pop	r16
   15776:	ff 90       	pop	r15
   15778:	ef 90       	pop	r14
   1577a:	df 90       	pop	r13
   1577c:	cf 90       	pop	r12
   1577e:	bf 90       	pop	r11
   15780:	af 90       	pop	r10
   15782:	9f 90       	pop	r9
   15784:	8f 90       	pop	r8
   15786:	7f 90       	pop	r7
   15788:	6f 90       	pop	r6
   1578a:	5f 90       	pop	r5
   1578c:	4f 90       	pop	r4
   1578e:	3f 90       	pop	r3
   15790:	2f 90       	pop	r2
   15792:	08 95       	ret

00015794 <__subsf3>:
   15794:	50 58       	subi	r21, 0x80	; 128

00015796 <__addsf3>:
   15796:	bb 27       	eor	r27, r27
   15798:	aa 27       	eor	r26, r26
   1579a:	0e d0       	rcall	.+28     	; 0x157b8 <__addsf3x>
   1579c:	af c2       	rjmp	.+1374   	; 0x15cfc <__fp_round>
   1579e:	78 d2       	rcall	.+1264   	; 0x15c90 <__fp_pscA>
   157a0:	30 f0       	brcs	.+12     	; 0x157ae <__addsf3+0x18>
   157a2:	7d d2       	rcall	.+1274   	; 0x15c9e <__fp_pscB>
   157a4:	20 f0       	brcs	.+8      	; 0x157ae <__addsf3+0x18>
   157a6:	31 f4       	brne	.+12     	; 0x157b4 <__addsf3+0x1e>
   157a8:	9f 3f       	cpi	r25, 0xFF	; 255
   157aa:	11 f4       	brne	.+4      	; 0x157b0 <__addsf3+0x1a>
   157ac:	1e f4       	brtc	.+6      	; 0x157b4 <__addsf3+0x1e>
   157ae:	38 c2       	rjmp	.+1136   	; 0x15c20 <__fp_nan>
   157b0:	0e f4       	brtc	.+2      	; 0x157b4 <__addsf3+0x1e>
   157b2:	e0 95       	com	r30
   157b4:	e7 fb       	bst	r30, 7
   157b6:	2e c2       	rjmp	.+1116   	; 0x15c14 <__fp_inf>

000157b8 <__addsf3x>:
   157b8:	e9 2f       	mov	r30, r25
   157ba:	c2 d2       	rcall	.+1412   	; 0x15d40 <__fp_split3>
   157bc:	80 f3       	brcs	.-32     	; 0x1579e <__addsf3+0x8>
   157be:	ba 17       	cp	r27, r26
   157c0:	62 07       	cpc	r22, r18
   157c2:	73 07       	cpc	r23, r19
   157c4:	84 07       	cpc	r24, r20
   157c6:	95 07       	cpc	r25, r21
   157c8:	18 f0       	brcs	.+6      	; 0x157d0 <__addsf3x+0x18>
   157ca:	71 f4       	brne	.+28     	; 0x157e8 <__addsf3x+0x30>
   157cc:	9e f5       	brtc	.+102    	; 0x15834 <__addsf3x+0x7c>
   157ce:	da c2       	rjmp	.+1460   	; 0x15d84 <__fp_zero>
   157d0:	0e f4       	brtc	.+2      	; 0x157d4 <__addsf3x+0x1c>
   157d2:	e0 95       	com	r30
   157d4:	0b 2e       	mov	r0, r27
   157d6:	ba 2f       	mov	r27, r26
   157d8:	a0 2d       	mov	r26, r0
   157da:	0b 01       	movw	r0, r22
   157dc:	b9 01       	movw	r22, r18
   157de:	90 01       	movw	r18, r0
   157e0:	0c 01       	movw	r0, r24
   157e2:	ca 01       	movw	r24, r20
   157e4:	a0 01       	movw	r20, r0
   157e6:	11 24       	eor	r1, r1
   157e8:	ff 27       	eor	r31, r31
   157ea:	59 1b       	sub	r21, r25
   157ec:	99 f0       	breq	.+38     	; 0x15814 <__addsf3x+0x5c>
   157ee:	59 3f       	cpi	r21, 0xF9	; 249
   157f0:	50 f4       	brcc	.+20     	; 0x15806 <__addsf3x+0x4e>
   157f2:	50 3e       	cpi	r21, 0xE0	; 224
   157f4:	68 f1       	brcs	.+90     	; 0x15850 <__addsf3x+0x98>
   157f6:	1a 16       	cp	r1, r26
   157f8:	f0 40       	sbci	r31, 0x00	; 0
   157fa:	a2 2f       	mov	r26, r18
   157fc:	23 2f       	mov	r18, r19
   157fe:	34 2f       	mov	r19, r20
   15800:	44 27       	eor	r20, r20
   15802:	58 5f       	subi	r21, 0xF8	; 248
   15804:	f3 cf       	rjmp	.-26     	; 0x157ec <__addsf3x+0x34>
   15806:	46 95       	lsr	r20
   15808:	37 95       	ror	r19
   1580a:	27 95       	ror	r18
   1580c:	a7 95       	ror	r26
   1580e:	f0 40       	sbci	r31, 0x00	; 0
   15810:	53 95       	inc	r21
   15812:	c9 f7       	brne	.-14     	; 0x15806 <__addsf3x+0x4e>
   15814:	7e f4       	brtc	.+30     	; 0x15834 <__addsf3x+0x7c>
   15816:	1f 16       	cp	r1, r31
   15818:	ba 0b       	sbc	r27, r26
   1581a:	62 0b       	sbc	r22, r18
   1581c:	73 0b       	sbc	r23, r19
   1581e:	84 0b       	sbc	r24, r20
   15820:	ba f0       	brmi	.+46     	; 0x15850 <__addsf3x+0x98>
   15822:	91 50       	subi	r25, 0x01	; 1
   15824:	a1 f0       	breq	.+40     	; 0x1584e <__addsf3x+0x96>
   15826:	ff 0f       	add	r31, r31
   15828:	bb 1f       	adc	r27, r27
   1582a:	66 1f       	adc	r22, r22
   1582c:	77 1f       	adc	r23, r23
   1582e:	88 1f       	adc	r24, r24
   15830:	c2 f7       	brpl	.-16     	; 0x15822 <__addsf3x+0x6a>
   15832:	0e c0       	rjmp	.+28     	; 0x15850 <__addsf3x+0x98>
   15834:	ba 0f       	add	r27, r26
   15836:	62 1f       	adc	r22, r18
   15838:	73 1f       	adc	r23, r19
   1583a:	84 1f       	adc	r24, r20
   1583c:	48 f4       	brcc	.+18     	; 0x15850 <__addsf3x+0x98>
   1583e:	87 95       	ror	r24
   15840:	77 95       	ror	r23
   15842:	67 95       	ror	r22
   15844:	b7 95       	ror	r27
   15846:	f7 95       	ror	r31
   15848:	9e 3f       	cpi	r25, 0xFE	; 254
   1584a:	08 f0       	brcs	.+2      	; 0x1584e <__addsf3x+0x96>
   1584c:	b3 cf       	rjmp	.-154    	; 0x157b4 <__addsf3+0x1e>
   1584e:	93 95       	inc	r25
   15850:	88 0f       	add	r24, r24
   15852:	08 f0       	brcs	.+2      	; 0x15856 <__addsf3x+0x9e>
   15854:	99 27       	eor	r25, r25
   15856:	ee 0f       	add	r30, r30
   15858:	97 95       	ror	r25
   1585a:	87 95       	ror	r24
   1585c:	08 95       	ret
   1585e:	18 d2       	rcall	.+1072   	; 0x15c90 <__fp_pscA>
   15860:	58 f0       	brcs	.+22     	; 0x15878 <__addsf3x+0xc0>
   15862:	80 e8       	ldi	r24, 0x80	; 128
   15864:	91 e0       	ldi	r25, 0x01	; 1
   15866:	09 f4       	brne	.+2      	; 0x1586a <__addsf3x+0xb2>
   15868:	9e ef       	ldi	r25, 0xFE	; 254
   1586a:	19 d2       	rcall	.+1074   	; 0x15c9e <__fp_pscB>
   1586c:	28 f0       	brcs	.+10     	; 0x15878 <__addsf3x+0xc0>
   1586e:	40 e8       	ldi	r20, 0x80	; 128
   15870:	51 e0       	ldi	r21, 0x01	; 1
   15872:	59 f4       	brne	.+22     	; 0x1588a <atan2+0xe>
   15874:	5e ef       	ldi	r21, 0xFE	; 254
   15876:	09 c0       	rjmp	.+18     	; 0x1588a <atan2+0xe>
   15878:	d3 c1       	rjmp	.+934    	; 0x15c20 <__fp_nan>
   1587a:	84 c2       	rjmp	.+1288   	; 0x15d84 <__fp_zero>

0001587c <atan2>:
   1587c:	e9 2f       	mov	r30, r25
   1587e:	e0 78       	andi	r30, 0x80	; 128
   15880:	5f d2       	rcall	.+1214   	; 0x15d40 <__fp_split3>
   15882:	68 f3       	brcs	.-38     	; 0x1585e <__addsf3x+0xa6>
   15884:	09 2e       	mov	r0, r25
   15886:	05 2a       	or	r0, r21
   15888:	c1 f3       	breq	.-16     	; 0x1587a <__addsf3x+0xc2>
   1588a:	26 17       	cp	r18, r22
   1588c:	37 07       	cpc	r19, r23
   1588e:	48 07       	cpc	r20, r24
   15890:	59 07       	cpc	r21, r25
   15892:	38 f0       	brcs	.+14     	; 0x158a2 <atan2+0x26>
   15894:	0e 2e       	mov	r0, r30
   15896:	07 f8       	bld	r0, 7
   15898:	e0 25       	eor	r30, r0
   1589a:	69 f0       	breq	.+26     	; 0x158b6 <atan2+0x3a>
   1589c:	e0 25       	eor	r30, r0
   1589e:	e0 64       	ori	r30, 0x40	; 64
   158a0:	0a c0       	rjmp	.+20     	; 0x158b6 <atan2+0x3a>
   158a2:	ef 63       	ori	r30, 0x3F	; 63
   158a4:	07 f8       	bld	r0, 7
   158a6:	00 94       	com	r0
   158a8:	07 fa       	bst	r0, 7
   158aa:	db 01       	movw	r26, r22
   158ac:	b9 01       	movw	r22, r18
   158ae:	9d 01       	movw	r18, r26
   158b0:	dc 01       	movw	r26, r24
   158b2:	ca 01       	movw	r24, r20
   158b4:	ad 01       	movw	r20, r26
   158b6:	ef 93       	push	r30
   158b8:	4a d0       	rcall	.+148    	; 0x1594e <__divsf3_pse>
   158ba:	20 d2       	rcall	.+1088   	; 0x15cfc <__fp_round>
   158bc:	0a d0       	rcall	.+20     	; 0x158d2 <atan>
   158be:	5f 91       	pop	r21
   158c0:	55 23       	and	r21, r21
   158c2:	31 f0       	breq	.+12     	; 0x158d0 <atan2+0x54>
   158c4:	2b ed       	ldi	r18, 0xDB	; 219
   158c6:	3f e0       	ldi	r19, 0x0F	; 15
   158c8:	49 e4       	ldi	r20, 0x49	; 73
   158ca:	50 fd       	sbrc	r21, 0
   158cc:	49 ec       	ldi	r20, 0xC9	; 201
   158ce:	63 cf       	rjmp	.-314    	; 0x15796 <__addsf3>
   158d0:	08 95       	ret

000158d2 <atan>:
   158d2:	df 93       	push	r29
   158d4:	dd 27       	eor	r29, r29
   158d6:	b9 2f       	mov	r27, r25
   158d8:	bf 77       	andi	r27, 0x7F	; 127
   158da:	40 e8       	ldi	r20, 0x80	; 128
   158dc:	5f e3       	ldi	r21, 0x3F	; 63
   158de:	16 16       	cp	r1, r22
   158e0:	17 06       	cpc	r1, r23
   158e2:	48 07       	cpc	r20, r24
   158e4:	5b 07       	cpc	r21, r27
   158e6:	10 f4       	brcc	.+4      	; 0x158ec <atan+0x1a>
   158e8:	d9 2f       	mov	r29, r25
   158ea:	57 d2       	rcall	.+1198   	; 0x15d9a <inverse>
   158ec:	9f 93       	push	r25
   158ee:	8f 93       	push	r24
   158f0:	7f 93       	push	r23
   158f2:	6f 93       	push	r22
   158f4:	c2 d2       	rcall	.+1412   	; 0x15e7a <square>
   158f6:	e0 e2       	ldi	r30, 0x20	; 32
   158f8:	f2 e0       	ldi	r31, 0x02	; 2
   158fa:	a5 d1       	rcall	.+842    	; 0x15c46 <__fp_powser>
   158fc:	ff d1       	rcall	.+1022   	; 0x15cfc <__fp_round>
   158fe:	2f 91       	pop	r18
   15900:	3f 91       	pop	r19
   15902:	4f 91       	pop	r20
   15904:	5f 91       	pop	r21
   15906:	5c d2       	rcall	.+1208   	; 0x15dc0 <__mulsf3x>
   15908:	dd 23       	and	r29, r29
   1590a:	49 f0       	breq	.+18     	; 0x1591e <atan+0x4c>
   1590c:	90 58       	subi	r25, 0x80	; 128
   1590e:	a2 ea       	ldi	r26, 0xA2	; 162
   15910:	2a ed       	ldi	r18, 0xDA	; 218
   15912:	3f e0       	ldi	r19, 0x0F	; 15
   15914:	49 ec       	ldi	r20, 0xC9	; 201
   15916:	5f e3       	ldi	r21, 0x3F	; 63
   15918:	d0 78       	andi	r29, 0x80	; 128
   1591a:	5d 27       	eor	r21, r29
   1591c:	4d df       	rcall	.-358    	; 0x157b8 <__addsf3x>
   1591e:	df 91       	pop	r29
   15920:	ed c1       	rjmp	.+986    	; 0x15cfc <__fp_round>

00015922 <__cmpsf2>:
   15922:	54 d1       	rcall	.+680    	; 0x15bcc <__fp_cmp>
   15924:	08 f4       	brcc	.+2      	; 0x15928 <__cmpsf2+0x6>
   15926:	81 e0       	ldi	r24, 0x01	; 1
   15928:	08 95       	ret

0001592a <cos>:
   1592a:	c1 d1       	rcall	.+898    	; 0x15cae <__fp_rempio2>
   1592c:	e3 95       	inc	r30
   1592e:	f7 c1       	rjmp	.+1006   	; 0x15d1e <__fp_sinus>

00015930 <__divsf3>:
   15930:	0c d0       	rcall	.+24     	; 0x1594a <__divsf3x>
   15932:	e4 c1       	rjmp	.+968    	; 0x15cfc <__fp_round>
   15934:	b4 d1       	rcall	.+872    	; 0x15c9e <__fp_pscB>
   15936:	40 f0       	brcs	.+16     	; 0x15948 <__divsf3+0x18>
   15938:	ab d1       	rcall	.+854    	; 0x15c90 <__fp_pscA>
   1593a:	30 f0       	brcs	.+12     	; 0x15948 <__divsf3+0x18>
   1593c:	21 f4       	brne	.+8      	; 0x15946 <__divsf3+0x16>
   1593e:	5f 3f       	cpi	r21, 0xFF	; 255
   15940:	19 f0       	breq	.+6      	; 0x15948 <__divsf3+0x18>
   15942:	68 c1       	rjmp	.+720    	; 0x15c14 <__fp_inf>
   15944:	51 11       	cpse	r21, r1
   15946:	1f c2       	rjmp	.+1086   	; 0x15d86 <__fp_szero>
   15948:	6b c1       	rjmp	.+726    	; 0x15c20 <__fp_nan>

0001594a <__divsf3x>:
   1594a:	fa d1       	rcall	.+1012   	; 0x15d40 <__fp_split3>
   1594c:	98 f3       	brcs	.-26     	; 0x15934 <__divsf3+0x4>

0001594e <__divsf3_pse>:
   1594e:	99 23       	and	r25, r25
   15950:	c9 f3       	breq	.-14     	; 0x15944 <__divsf3+0x14>
   15952:	55 23       	and	r21, r21
   15954:	b1 f3       	breq	.-20     	; 0x15942 <__divsf3+0x12>
   15956:	95 1b       	sub	r25, r21
   15958:	55 0b       	sbc	r21, r21
   1595a:	bb 27       	eor	r27, r27
   1595c:	aa 27       	eor	r26, r26
   1595e:	62 17       	cp	r22, r18
   15960:	73 07       	cpc	r23, r19
   15962:	84 07       	cpc	r24, r20
   15964:	38 f0       	brcs	.+14     	; 0x15974 <__divsf3_pse+0x26>
   15966:	9f 5f       	subi	r25, 0xFF	; 255
   15968:	5f 4f       	sbci	r21, 0xFF	; 255
   1596a:	22 0f       	add	r18, r18
   1596c:	33 1f       	adc	r19, r19
   1596e:	44 1f       	adc	r20, r20
   15970:	aa 1f       	adc	r26, r26
   15972:	a9 f3       	breq	.-22     	; 0x1595e <__divsf3_pse+0x10>
   15974:	33 d0       	rcall	.+102    	; 0x159dc <__divsf3_pse+0x8e>
   15976:	0e 2e       	mov	r0, r30
   15978:	3a f0       	brmi	.+14     	; 0x15988 <__divsf3_pse+0x3a>
   1597a:	e0 e8       	ldi	r30, 0x80	; 128
   1597c:	30 d0       	rcall	.+96     	; 0x159de <__divsf3_pse+0x90>
   1597e:	91 50       	subi	r25, 0x01	; 1
   15980:	50 40       	sbci	r21, 0x00	; 0
   15982:	e6 95       	lsr	r30
   15984:	00 1c       	adc	r0, r0
   15986:	ca f7       	brpl	.-14     	; 0x1597a <__divsf3_pse+0x2c>
   15988:	29 d0       	rcall	.+82     	; 0x159dc <__divsf3_pse+0x8e>
   1598a:	fe 2f       	mov	r31, r30
   1598c:	27 d0       	rcall	.+78     	; 0x159dc <__divsf3_pse+0x8e>
   1598e:	66 0f       	add	r22, r22
   15990:	77 1f       	adc	r23, r23
   15992:	88 1f       	adc	r24, r24
   15994:	bb 1f       	adc	r27, r27
   15996:	26 17       	cp	r18, r22
   15998:	37 07       	cpc	r19, r23
   1599a:	48 07       	cpc	r20, r24
   1599c:	ab 07       	cpc	r26, r27
   1599e:	b0 e8       	ldi	r27, 0x80	; 128
   159a0:	09 f0       	breq	.+2      	; 0x159a4 <__divsf3_pse+0x56>
   159a2:	bb 0b       	sbc	r27, r27
   159a4:	80 2d       	mov	r24, r0
   159a6:	bf 01       	movw	r22, r30
   159a8:	ff 27       	eor	r31, r31
   159aa:	93 58       	subi	r25, 0x83	; 131
   159ac:	5f 4f       	sbci	r21, 0xFF	; 255
   159ae:	2a f0       	brmi	.+10     	; 0x159ba <__divsf3_pse+0x6c>
   159b0:	9e 3f       	cpi	r25, 0xFE	; 254
   159b2:	51 05       	cpc	r21, r1
   159b4:	68 f0       	brcs	.+26     	; 0x159d0 <__divsf3_pse+0x82>
   159b6:	2e c1       	rjmp	.+604    	; 0x15c14 <__fp_inf>
   159b8:	e6 c1       	rjmp	.+972    	; 0x15d86 <__fp_szero>
   159ba:	5f 3f       	cpi	r21, 0xFF	; 255
   159bc:	ec f3       	brlt	.-6      	; 0x159b8 <__divsf3_pse+0x6a>
   159be:	98 3e       	cpi	r25, 0xE8	; 232
   159c0:	dc f3       	brlt	.-10     	; 0x159b8 <__divsf3_pse+0x6a>
   159c2:	86 95       	lsr	r24
   159c4:	77 95       	ror	r23
   159c6:	67 95       	ror	r22
   159c8:	b7 95       	ror	r27
   159ca:	f7 95       	ror	r31
   159cc:	9f 5f       	subi	r25, 0xFF	; 255
   159ce:	c9 f7       	brne	.-14     	; 0x159c2 <__divsf3_pse+0x74>
   159d0:	88 0f       	add	r24, r24
   159d2:	91 1d       	adc	r25, r1
   159d4:	96 95       	lsr	r25
   159d6:	87 95       	ror	r24
   159d8:	97 f9       	bld	r25, 7
   159da:	08 95       	ret
   159dc:	e1 e0       	ldi	r30, 0x01	; 1
   159de:	66 0f       	add	r22, r22
   159e0:	77 1f       	adc	r23, r23
   159e2:	88 1f       	adc	r24, r24
   159e4:	bb 1f       	adc	r27, r27
   159e6:	62 17       	cp	r22, r18
   159e8:	73 07       	cpc	r23, r19
   159ea:	84 07       	cpc	r24, r20
   159ec:	ba 07       	cpc	r27, r26
   159ee:	20 f0       	brcs	.+8      	; 0x159f8 <__divsf3_pse+0xaa>
   159f0:	62 1b       	sub	r22, r18
   159f2:	73 0b       	sbc	r23, r19
   159f4:	84 0b       	sbc	r24, r20
   159f6:	ba 0b       	sbc	r27, r26
   159f8:	ee 1f       	adc	r30, r30
   159fa:	88 f7       	brcc	.-30     	; 0x159de <__divsf3_pse+0x90>
   159fc:	e0 95       	com	r30
   159fe:	08 95       	ret

00015a00 <__fixsfdi>:
   15a00:	be e3       	ldi	r27, 0x3E	; 62
   15a02:	04 d0       	rcall	.+8      	; 0x15a0c <__fixunssfdi+0x2>
   15a04:	08 f4       	brcc	.+2      	; 0x15a08 <__fixsfdi+0x8>
   15a06:	90 e8       	ldi	r25, 0x80	; 128
   15a08:	08 95       	ret

00015a0a <__fixunssfdi>:
   15a0a:	bf e3       	ldi	r27, 0x3F	; 63
   15a0c:	22 27       	eor	r18, r18
   15a0e:	33 27       	eor	r19, r19
   15a10:	a9 01       	movw	r20, r18
   15a12:	9e d1       	rcall	.+828    	; 0x15d50 <__fp_splitA>
   15a14:	58 f1       	brcs	.+86     	; 0x15a6c <__fixunssfdi+0x62>
   15a16:	9f 57       	subi	r25, 0x7F	; 127
   15a18:	40 f1       	brcs	.+80     	; 0x15a6a <__fixunssfdi+0x60>
   15a1a:	b9 17       	cp	r27, r25
   15a1c:	38 f1       	brcs	.+78     	; 0x15a6c <__fixunssfdi+0x62>
   15a1e:	bf e3       	ldi	r27, 0x3F	; 63
   15a20:	b9 1b       	sub	r27, r25
   15a22:	99 27       	eor	r25, r25
   15a24:	b8 50       	subi	r27, 0x08	; 8
   15a26:	3a f4       	brpl	.+14     	; 0x15a36 <__fixunssfdi+0x2c>
   15a28:	66 0f       	add	r22, r22
   15a2a:	77 1f       	adc	r23, r23
   15a2c:	88 1f       	adc	r24, r24
   15a2e:	99 1f       	adc	r25, r25
   15a30:	b3 95       	inc	r27
   15a32:	d2 f3       	brmi	.-12     	; 0x15a28 <__fixunssfdi+0x1e>
   15a34:	16 c0       	rjmp	.+44     	; 0x15a62 <__fixunssfdi+0x58>
   15a36:	b8 50       	subi	r27, 0x08	; 8
   15a38:	4a f0       	brmi	.+18     	; 0x15a4c <__fixunssfdi+0x42>
   15a3a:	23 2f       	mov	r18, r19
   15a3c:	34 2f       	mov	r19, r20
   15a3e:	45 2f       	mov	r20, r21
   15a40:	56 2f       	mov	r21, r22
   15a42:	67 2f       	mov	r22, r23
   15a44:	78 2f       	mov	r23, r24
   15a46:	88 27       	eor	r24, r24
   15a48:	b8 50       	subi	r27, 0x08	; 8
   15a4a:	ba f7       	brpl	.-18     	; 0x15a3a <__fixunssfdi+0x30>
   15a4c:	b8 5f       	subi	r27, 0xF8	; 248
   15a4e:	49 f0       	breq	.+18     	; 0x15a62 <__fixunssfdi+0x58>
   15a50:	86 95       	lsr	r24
   15a52:	77 95       	ror	r23
   15a54:	67 95       	ror	r22
   15a56:	57 95       	ror	r21
   15a58:	47 95       	ror	r20
   15a5a:	37 95       	ror	r19
   15a5c:	27 95       	ror	r18
   15a5e:	ba 95       	dec	r27
   15a60:	b9 f7       	brne	.-18     	; 0x15a50 <__fixunssfdi+0x46>
   15a62:	0e f4       	brtc	.+2      	; 0x15a66 <__fixunssfdi+0x5c>
   15a64:	e0 d0       	rcall	.+448    	; 0x15c26 <__fp_negdi>
   15a66:	88 94       	clc
   15a68:	08 95       	ret
   15a6a:	88 94       	clc
   15a6c:	60 e0       	ldi	r22, 0x00	; 0
   15a6e:	70 e0       	ldi	r23, 0x00	; 0
   15a70:	cb 01       	movw	r24, r22
   15a72:	08 95       	ret

00015a74 <__fixsfsi>:
   15a74:	04 d0       	rcall	.+8      	; 0x15a7e <__fixunssfsi>
   15a76:	68 94       	set
   15a78:	b1 11       	cpse	r27, r1
   15a7a:	85 c1       	rjmp	.+778    	; 0x15d86 <__fp_szero>
   15a7c:	08 95       	ret

00015a7e <__fixunssfsi>:
   15a7e:	68 d1       	rcall	.+720    	; 0x15d50 <__fp_splitA>
   15a80:	88 f0       	brcs	.+34     	; 0x15aa4 <__fixunssfsi+0x26>
   15a82:	9f 57       	subi	r25, 0x7F	; 127
   15a84:	90 f0       	brcs	.+36     	; 0x15aaa <__fixunssfsi+0x2c>
   15a86:	b9 2f       	mov	r27, r25
   15a88:	99 27       	eor	r25, r25
   15a8a:	b7 51       	subi	r27, 0x17	; 23
   15a8c:	a0 f0       	brcs	.+40     	; 0x15ab6 <__fixunssfsi+0x38>
   15a8e:	d1 f0       	breq	.+52     	; 0x15ac4 <__fixunssfsi+0x46>
   15a90:	66 0f       	add	r22, r22
   15a92:	77 1f       	adc	r23, r23
   15a94:	88 1f       	adc	r24, r24
   15a96:	99 1f       	adc	r25, r25
   15a98:	1a f0       	brmi	.+6      	; 0x15aa0 <__fixunssfsi+0x22>
   15a9a:	ba 95       	dec	r27
   15a9c:	c9 f7       	brne	.-14     	; 0x15a90 <__fixunssfsi+0x12>
   15a9e:	12 c0       	rjmp	.+36     	; 0x15ac4 <__fixunssfsi+0x46>
   15aa0:	b1 30       	cpi	r27, 0x01	; 1
   15aa2:	81 f0       	breq	.+32     	; 0x15ac4 <__fixunssfsi+0x46>
   15aa4:	6f d1       	rcall	.+734    	; 0x15d84 <__fp_zero>
   15aa6:	b1 e0       	ldi	r27, 0x01	; 1
   15aa8:	08 95       	ret
   15aaa:	6c c1       	rjmp	.+728    	; 0x15d84 <__fp_zero>
   15aac:	67 2f       	mov	r22, r23
   15aae:	78 2f       	mov	r23, r24
   15ab0:	88 27       	eor	r24, r24
   15ab2:	b8 5f       	subi	r27, 0xF8	; 248
   15ab4:	39 f0       	breq	.+14     	; 0x15ac4 <__fixunssfsi+0x46>
   15ab6:	b9 3f       	cpi	r27, 0xF9	; 249
   15ab8:	cc f3       	brlt	.-14     	; 0x15aac <__fixunssfsi+0x2e>
   15aba:	86 95       	lsr	r24
   15abc:	77 95       	ror	r23
   15abe:	67 95       	ror	r22
   15ac0:	b3 95       	inc	r27
   15ac2:	d9 f7       	brne	.-10     	; 0x15aba <__fixunssfsi+0x3c>
   15ac4:	3e f4       	brtc	.+14     	; 0x15ad4 <__fixunssfsi+0x56>
   15ac6:	90 95       	com	r25
   15ac8:	80 95       	com	r24
   15aca:	70 95       	com	r23
   15acc:	61 95       	neg	r22
   15ace:	7f 4f       	sbci	r23, 0xFF	; 255
   15ad0:	8f 4f       	sbci	r24, 0xFF	; 255
   15ad2:	9f 4f       	sbci	r25, 0xFF	; 255
   15ad4:	08 95       	ret

00015ad6 <__floatunsisf>:
   15ad6:	e8 94       	clt
   15ad8:	09 c0       	rjmp	.+18     	; 0x15aec <__floatsisf+0x12>

00015ada <__floatsisf>:
   15ada:	97 fb       	bst	r25, 7
   15adc:	3e f4       	brtc	.+14     	; 0x15aec <__floatsisf+0x12>
   15ade:	90 95       	com	r25
   15ae0:	80 95       	com	r24
   15ae2:	70 95       	com	r23
   15ae4:	61 95       	neg	r22
   15ae6:	7f 4f       	sbci	r23, 0xFF	; 255
   15ae8:	8f 4f       	sbci	r24, 0xFF	; 255
   15aea:	9f 4f       	sbci	r25, 0xFF	; 255
   15aec:	99 23       	and	r25, r25
   15aee:	a9 f0       	breq	.+42     	; 0x15b1a <__floatsisf+0x40>
   15af0:	f9 2f       	mov	r31, r25
   15af2:	96 e9       	ldi	r25, 0x96	; 150
   15af4:	bb 27       	eor	r27, r27
   15af6:	93 95       	inc	r25
   15af8:	f6 95       	lsr	r31
   15afa:	87 95       	ror	r24
   15afc:	77 95       	ror	r23
   15afe:	67 95       	ror	r22
   15b00:	b7 95       	ror	r27
   15b02:	f1 11       	cpse	r31, r1
   15b04:	f8 cf       	rjmp	.-16     	; 0x15af6 <__floatsisf+0x1c>
   15b06:	fa f4       	brpl	.+62     	; 0x15b46 <__floatsisf+0x6c>
   15b08:	bb 0f       	add	r27, r27
   15b0a:	11 f4       	brne	.+4      	; 0x15b10 <__floatsisf+0x36>
   15b0c:	60 ff       	sbrs	r22, 0
   15b0e:	1b c0       	rjmp	.+54     	; 0x15b46 <__floatsisf+0x6c>
   15b10:	6f 5f       	subi	r22, 0xFF	; 255
   15b12:	7f 4f       	sbci	r23, 0xFF	; 255
   15b14:	8f 4f       	sbci	r24, 0xFF	; 255
   15b16:	9f 4f       	sbci	r25, 0xFF	; 255
   15b18:	16 c0       	rjmp	.+44     	; 0x15b46 <__floatsisf+0x6c>
   15b1a:	88 23       	and	r24, r24
   15b1c:	11 f0       	breq	.+4      	; 0x15b22 <__floatsisf+0x48>
   15b1e:	96 e9       	ldi	r25, 0x96	; 150
   15b20:	11 c0       	rjmp	.+34     	; 0x15b44 <__floatsisf+0x6a>
   15b22:	77 23       	and	r23, r23
   15b24:	21 f0       	breq	.+8      	; 0x15b2e <__floatsisf+0x54>
   15b26:	9e e8       	ldi	r25, 0x8E	; 142
   15b28:	87 2f       	mov	r24, r23
   15b2a:	76 2f       	mov	r23, r22
   15b2c:	05 c0       	rjmp	.+10     	; 0x15b38 <__floatsisf+0x5e>
   15b2e:	66 23       	and	r22, r22
   15b30:	71 f0       	breq	.+28     	; 0x15b4e <__floatsisf+0x74>
   15b32:	96 e8       	ldi	r25, 0x86	; 134
   15b34:	86 2f       	mov	r24, r22
   15b36:	70 e0       	ldi	r23, 0x00	; 0
   15b38:	60 e0       	ldi	r22, 0x00	; 0
   15b3a:	2a f0       	brmi	.+10     	; 0x15b46 <__floatsisf+0x6c>
   15b3c:	9a 95       	dec	r25
   15b3e:	66 0f       	add	r22, r22
   15b40:	77 1f       	adc	r23, r23
   15b42:	88 1f       	adc	r24, r24
   15b44:	da f7       	brpl	.-10     	; 0x15b3c <__floatsisf+0x62>
   15b46:	88 0f       	add	r24, r24
   15b48:	96 95       	lsr	r25
   15b4a:	87 95       	ror	r24
   15b4c:	97 f9       	bld	r25, 7
   15b4e:	08 95       	ret

00015b50 <__floatundisf>:
   15b50:	e8 94       	clt

00015b52 <__fp_di2sf>:
   15b52:	f9 2f       	mov	r31, r25
   15b54:	96 eb       	ldi	r25, 0xB6	; 182
   15b56:	ff 23       	and	r31, r31
   15b58:	81 f0       	breq	.+32     	; 0x15b7a <__fp_di2sf+0x28>
   15b5a:	12 16       	cp	r1, r18
   15b5c:	13 06       	cpc	r1, r19
   15b5e:	14 06       	cpc	r1, r20
   15b60:	44 0b       	sbc	r20, r20
   15b62:	93 95       	inc	r25
   15b64:	f6 95       	lsr	r31
   15b66:	87 95       	ror	r24
   15b68:	77 95       	ror	r23
   15b6a:	67 95       	ror	r22
   15b6c:	57 95       	ror	r21
   15b6e:	40 40       	sbci	r20, 0x00	; 0
   15b70:	ff 23       	and	r31, r31
   15b72:	b9 f7       	brne	.-18     	; 0x15b62 <__fp_di2sf+0x10>
   15b74:	1b c0       	rjmp	.+54     	; 0x15bac <__fp_di2sf+0x5a>
   15b76:	99 27       	eor	r25, r25
   15b78:	08 95       	ret
   15b7a:	88 23       	and	r24, r24
   15b7c:	51 f4       	brne	.+20     	; 0x15b92 <__fp_di2sf+0x40>
   15b7e:	98 50       	subi	r25, 0x08	; 8
   15b80:	d2 f7       	brpl	.-12     	; 0x15b76 <__fp_di2sf+0x24>
   15b82:	87 2b       	or	r24, r23
   15b84:	76 2f       	mov	r23, r22
   15b86:	65 2f       	mov	r22, r21
   15b88:	54 2f       	mov	r21, r20
   15b8a:	43 2f       	mov	r20, r19
   15b8c:	32 2f       	mov	r19, r18
   15b8e:	20 e0       	ldi	r18, 0x00	; 0
   15b90:	b1 f3       	breq	.-20     	; 0x15b7e <__fp_di2sf+0x2c>
   15b92:	12 16       	cp	r1, r18
   15b94:	13 06       	cpc	r1, r19
   15b96:	14 06       	cpc	r1, r20
   15b98:	44 0b       	sbc	r20, r20
   15b9a:	88 23       	and	r24, r24
   15b9c:	3a f0       	brmi	.+14     	; 0x15bac <__fp_di2sf+0x5a>
   15b9e:	9a 95       	dec	r25
   15ba0:	44 0f       	add	r20, r20
   15ba2:	55 1f       	adc	r21, r21
   15ba4:	66 1f       	adc	r22, r22
   15ba6:	77 1f       	adc	r23, r23
   15ba8:	88 1f       	adc	r24, r24
   15baa:	ca f7       	brpl	.-14     	; 0x15b9e <__fp_di2sf+0x4c>
   15bac:	55 23       	and	r21, r21
   15bae:	4a f4       	brpl	.+18     	; 0x15bc2 <__fp_di2sf+0x70>
   15bb0:	44 0f       	add	r20, r20
   15bb2:	55 1f       	adc	r21, r21
   15bb4:	11 f4       	brne	.+4      	; 0x15bba <__fp_di2sf+0x68>
   15bb6:	60 ff       	sbrs	r22, 0
   15bb8:	04 c0       	rjmp	.+8      	; 0x15bc2 <__fp_di2sf+0x70>
   15bba:	6f 5f       	subi	r22, 0xFF	; 255
   15bbc:	7f 4f       	sbci	r23, 0xFF	; 255
   15bbe:	8f 4f       	sbci	r24, 0xFF	; 255
   15bc0:	9f 4f       	sbci	r25, 0xFF	; 255
   15bc2:	88 0f       	add	r24, r24
   15bc4:	96 95       	lsr	r25
   15bc6:	87 95       	ror	r24
   15bc8:	97 f9       	bld	r25, 7
   15bca:	08 95       	ret

00015bcc <__fp_cmp>:
   15bcc:	99 0f       	add	r25, r25
   15bce:	00 08       	sbc	r0, r0
   15bd0:	55 0f       	add	r21, r21
   15bd2:	aa 0b       	sbc	r26, r26
   15bd4:	e0 e8       	ldi	r30, 0x80	; 128
   15bd6:	fe ef       	ldi	r31, 0xFE	; 254
   15bd8:	16 16       	cp	r1, r22
   15bda:	17 06       	cpc	r1, r23
   15bdc:	e8 07       	cpc	r30, r24
   15bde:	f9 07       	cpc	r31, r25
   15be0:	c0 f0       	brcs	.+48     	; 0x15c12 <__fp_cmp+0x46>
   15be2:	12 16       	cp	r1, r18
   15be4:	13 06       	cpc	r1, r19
   15be6:	e4 07       	cpc	r30, r20
   15be8:	f5 07       	cpc	r31, r21
   15bea:	98 f0       	brcs	.+38     	; 0x15c12 <__fp_cmp+0x46>
   15bec:	62 1b       	sub	r22, r18
   15bee:	73 0b       	sbc	r23, r19
   15bf0:	84 0b       	sbc	r24, r20
   15bf2:	95 0b       	sbc	r25, r21
   15bf4:	39 f4       	brne	.+14     	; 0x15c04 <__fp_cmp+0x38>
   15bf6:	0a 26       	eor	r0, r26
   15bf8:	61 f0       	breq	.+24     	; 0x15c12 <__fp_cmp+0x46>
   15bfa:	23 2b       	or	r18, r19
   15bfc:	24 2b       	or	r18, r20
   15bfe:	25 2b       	or	r18, r21
   15c00:	21 f4       	brne	.+8      	; 0x15c0a <__fp_cmp+0x3e>
   15c02:	08 95       	ret
   15c04:	0a 26       	eor	r0, r26
   15c06:	09 f4       	brne	.+2      	; 0x15c0a <__fp_cmp+0x3e>
   15c08:	a1 40       	sbci	r26, 0x01	; 1
   15c0a:	a6 95       	lsr	r26
   15c0c:	8f ef       	ldi	r24, 0xFF	; 255
   15c0e:	81 1d       	adc	r24, r1
   15c10:	81 1d       	adc	r24, r1
   15c12:	08 95       	ret

00015c14 <__fp_inf>:
   15c14:	97 f9       	bld	r25, 7
   15c16:	9f 67       	ori	r25, 0x7F	; 127
   15c18:	80 e8       	ldi	r24, 0x80	; 128
   15c1a:	70 e0       	ldi	r23, 0x00	; 0
   15c1c:	60 e0       	ldi	r22, 0x00	; 0
   15c1e:	08 95       	ret

00015c20 <__fp_nan>:
   15c20:	9f ef       	ldi	r25, 0xFF	; 255
   15c22:	80 ec       	ldi	r24, 0xC0	; 192
   15c24:	08 95       	ret

00015c26 <__fp_negdi>:
   15c26:	90 95       	com	r25
   15c28:	80 95       	com	r24
   15c2a:	70 95       	com	r23
   15c2c:	60 95       	com	r22
   15c2e:	50 95       	com	r21
   15c30:	40 95       	com	r20
   15c32:	30 95       	com	r19
   15c34:	21 95       	neg	r18
   15c36:	3f 4f       	sbci	r19, 0xFF	; 255
   15c38:	4f 4f       	sbci	r20, 0xFF	; 255
   15c3a:	5f 4f       	sbci	r21, 0xFF	; 255
   15c3c:	6f 4f       	sbci	r22, 0xFF	; 255
   15c3e:	7f 4f       	sbci	r23, 0xFF	; 255
   15c40:	8f 4f       	sbci	r24, 0xFF	; 255
   15c42:	9f 4f       	sbci	r25, 0xFF	; 255
   15c44:	08 95       	ret

00015c46 <__fp_powser>:
   15c46:	df 93       	push	r29
   15c48:	cf 93       	push	r28
   15c4a:	1f 93       	push	r17
   15c4c:	0f 93       	push	r16
   15c4e:	ff 92       	push	r15
   15c50:	ef 92       	push	r14
   15c52:	df 92       	push	r13
   15c54:	7b 01       	movw	r14, r22
   15c56:	8c 01       	movw	r16, r24
   15c58:	68 94       	set
   15c5a:	05 c0       	rjmp	.+10     	; 0x15c66 <__fp_powser+0x20>
   15c5c:	da 2e       	mov	r13, r26
   15c5e:	ef 01       	movw	r28, r30
   15c60:	af d0       	rcall	.+350    	; 0x15dc0 <__mulsf3x>
   15c62:	fe 01       	movw	r30, r28
   15c64:	e8 94       	clt
   15c66:	a5 91       	lpm	r26, Z+
   15c68:	25 91       	lpm	r18, Z+
   15c6a:	35 91       	lpm	r19, Z+
   15c6c:	45 91       	lpm	r20, Z+
   15c6e:	55 91       	lpm	r21, Z+
   15c70:	ae f3       	brts	.-22     	; 0x15c5c <__fp_powser+0x16>
   15c72:	ef 01       	movw	r28, r30
   15c74:	a1 dd       	rcall	.-1214   	; 0x157b8 <__addsf3x>
   15c76:	fe 01       	movw	r30, r28
   15c78:	97 01       	movw	r18, r14
   15c7a:	a8 01       	movw	r20, r16
   15c7c:	da 94       	dec	r13
   15c7e:	79 f7       	brne	.-34     	; 0x15c5e <__fp_powser+0x18>
   15c80:	df 90       	pop	r13
   15c82:	ef 90       	pop	r14
   15c84:	ff 90       	pop	r15
   15c86:	0f 91       	pop	r16
   15c88:	1f 91       	pop	r17
   15c8a:	cf 91       	pop	r28
   15c8c:	df 91       	pop	r29
   15c8e:	08 95       	ret

00015c90 <__fp_pscA>:
   15c90:	00 24       	eor	r0, r0
   15c92:	0a 94       	dec	r0
   15c94:	16 16       	cp	r1, r22
   15c96:	17 06       	cpc	r1, r23
   15c98:	18 06       	cpc	r1, r24
   15c9a:	09 06       	cpc	r0, r25
   15c9c:	08 95       	ret

00015c9e <__fp_pscB>:
   15c9e:	00 24       	eor	r0, r0
   15ca0:	0a 94       	dec	r0
   15ca2:	12 16       	cp	r1, r18
   15ca4:	13 06       	cpc	r1, r19
   15ca6:	14 06       	cpc	r1, r20
   15ca8:	05 06       	cpc	r0, r21
   15caa:	08 95       	ret
   15cac:	b9 cf       	rjmp	.-142    	; 0x15c20 <__fp_nan>

00015cae <__fp_rempio2>:
   15cae:	50 d0       	rcall	.+160    	; 0x15d50 <__fp_splitA>
   15cb0:	e8 f3       	brcs	.-6      	; 0x15cac <__fp_pscB+0xe>
   15cb2:	e8 94       	clt
   15cb4:	e0 e0       	ldi	r30, 0x00	; 0
   15cb6:	bb 27       	eor	r27, r27
   15cb8:	9f 57       	subi	r25, 0x7F	; 127
   15cba:	f0 f0       	brcs	.+60     	; 0x15cf8 <__fp_rempio2+0x4a>
   15cbc:	2a ed       	ldi	r18, 0xDA	; 218
   15cbe:	3f e0       	ldi	r19, 0x0F	; 15
   15cc0:	49 ec       	ldi	r20, 0xC9	; 201
   15cc2:	06 c0       	rjmp	.+12     	; 0x15cd0 <__fp_rempio2+0x22>
   15cc4:	ee 0f       	add	r30, r30
   15cc6:	bb 0f       	add	r27, r27
   15cc8:	66 1f       	adc	r22, r22
   15cca:	77 1f       	adc	r23, r23
   15ccc:	88 1f       	adc	r24, r24
   15cce:	28 f0       	brcs	.+10     	; 0x15cda <__fp_rempio2+0x2c>
   15cd0:	b2 3a       	cpi	r27, 0xA2	; 162
   15cd2:	62 07       	cpc	r22, r18
   15cd4:	73 07       	cpc	r23, r19
   15cd6:	84 07       	cpc	r24, r20
   15cd8:	28 f0       	brcs	.+10     	; 0x15ce4 <__fp_rempio2+0x36>
   15cda:	b2 5a       	subi	r27, 0xA2	; 162
   15cdc:	62 0b       	sbc	r22, r18
   15cde:	73 0b       	sbc	r23, r19
   15ce0:	84 0b       	sbc	r24, r20
   15ce2:	e3 95       	inc	r30
   15ce4:	9a 95       	dec	r25
   15ce6:	72 f7       	brpl	.-36     	; 0x15cc4 <__fp_rempio2+0x16>
   15ce8:	80 38       	cpi	r24, 0x80	; 128
   15cea:	30 f4       	brcc	.+12     	; 0x15cf8 <__fp_rempio2+0x4a>
   15cec:	9a 95       	dec	r25
   15cee:	bb 0f       	add	r27, r27
   15cf0:	66 1f       	adc	r22, r22
   15cf2:	77 1f       	adc	r23, r23
   15cf4:	88 1f       	adc	r24, r24
   15cf6:	d2 f7       	brpl	.-12     	; 0x15cec <__fp_rempio2+0x3e>
   15cf8:	90 48       	sbci	r25, 0x80	; 128
   15cfa:	c4 c0       	rjmp	.+392    	; 0x15e84 <__fp_mpack_finite>

00015cfc <__fp_round>:
   15cfc:	09 2e       	mov	r0, r25
   15cfe:	03 94       	inc	r0
   15d00:	00 0c       	add	r0, r0
   15d02:	11 f4       	brne	.+4      	; 0x15d08 <__fp_round+0xc>
   15d04:	88 23       	and	r24, r24
   15d06:	52 f0       	brmi	.+20     	; 0x15d1c <__fp_round+0x20>
   15d08:	bb 0f       	add	r27, r27
   15d0a:	40 f4       	brcc	.+16     	; 0x15d1c <__fp_round+0x20>
   15d0c:	bf 2b       	or	r27, r31
   15d0e:	11 f4       	brne	.+4      	; 0x15d14 <__fp_round+0x18>
   15d10:	60 ff       	sbrs	r22, 0
   15d12:	04 c0       	rjmp	.+8      	; 0x15d1c <__fp_round+0x20>
   15d14:	6f 5f       	subi	r22, 0xFF	; 255
   15d16:	7f 4f       	sbci	r23, 0xFF	; 255
   15d18:	8f 4f       	sbci	r24, 0xFF	; 255
   15d1a:	9f 4f       	sbci	r25, 0xFF	; 255
   15d1c:	08 95       	ret

00015d1e <__fp_sinus>:
   15d1e:	ef 93       	push	r30
   15d20:	e0 ff       	sbrs	r30, 0
   15d22:	06 c0       	rjmp	.+12     	; 0x15d30 <__fp_sinus+0x12>
   15d24:	a2 ea       	ldi	r26, 0xA2	; 162
   15d26:	2a ed       	ldi	r18, 0xDA	; 218
   15d28:	3f e0       	ldi	r19, 0x0F	; 15
   15d2a:	49 ec       	ldi	r20, 0xC9	; 201
   15d2c:	5f eb       	ldi	r21, 0xBF	; 191
   15d2e:	44 dd       	rcall	.-1400   	; 0x157b8 <__addsf3x>
   15d30:	e5 df       	rcall	.-54     	; 0x15cfc <__fp_round>
   15d32:	0f 90       	pop	r0
   15d34:	03 94       	inc	r0
   15d36:	01 fc       	sbrc	r0, 1
   15d38:	90 58       	subi	r25, 0x80	; 128
   15d3a:	ed e4       	ldi	r30, 0x4D	; 77
   15d3c:	f2 e0       	ldi	r31, 0x02	; 2
   15d3e:	ae c0       	rjmp	.+348    	; 0x15e9c <__fp_powsodd>

00015d40 <__fp_split3>:
   15d40:	57 fd       	sbrc	r21, 7
   15d42:	90 58       	subi	r25, 0x80	; 128
   15d44:	44 0f       	add	r20, r20
   15d46:	55 1f       	adc	r21, r21
   15d48:	59 f0       	breq	.+22     	; 0x15d60 <__fp_splitA+0x10>
   15d4a:	5f 3f       	cpi	r21, 0xFF	; 255
   15d4c:	71 f0       	breq	.+28     	; 0x15d6a <__fp_splitA+0x1a>
   15d4e:	47 95       	ror	r20

00015d50 <__fp_splitA>:
   15d50:	88 0f       	add	r24, r24
   15d52:	97 fb       	bst	r25, 7
   15d54:	99 1f       	adc	r25, r25
   15d56:	61 f0       	breq	.+24     	; 0x15d70 <__fp_splitA+0x20>
   15d58:	9f 3f       	cpi	r25, 0xFF	; 255
   15d5a:	79 f0       	breq	.+30     	; 0x15d7a <__fp_splitA+0x2a>
   15d5c:	87 95       	ror	r24
   15d5e:	08 95       	ret
   15d60:	12 16       	cp	r1, r18
   15d62:	13 06       	cpc	r1, r19
   15d64:	14 06       	cpc	r1, r20
   15d66:	55 1f       	adc	r21, r21
   15d68:	f2 cf       	rjmp	.-28     	; 0x15d4e <__fp_split3+0xe>
   15d6a:	46 95       	lsr	r20
   15d6c:	f1 df       	rcall	.-30     	; 0x15d50 <__fp_splitA>
   15d6e:	08 c0       	rjmp	.+16     	; 0x15d80 <__fp_splitA+0x30>
   15d70:	16 16       	cp	r1, r22
   15d72:	17 06       	cpc	r1, r23
   15d74:	18 06       	cpc	r1, r24
   15d76:	99 1f       	adc	r25, r25
   15d78:	f1 cf       	rjmp	.-30     	; 0x15d5c <__fp_splitA+0xc>
   15d7a:	86 95       	lsr	r24
   15d7c:	71 05       	cpc	r23, r1
   15d7e:	61 05       	cpc	r22, r1
   15d80:	08 94       	sec
   15d82:	08 95       	ret

00015d84 <__fp_zero>:
   15d84:	e8 94       	clt

00015d86 <__fp_szero>:
   15d86:	bb 27       	eor	r27, r27
   15d88:	66 27       	eor	r22, r22
   15d8a:	77 27       	eor	r23, r23
   15d8c:	cb 01       	movw	r24, r22
   15d8e:	97 f9       	bld	r25, 7
   15d90:	08 95       	ret

00015d92 <__gesf2>:
   15d92:	1c df       	rcall	.-456    	; 0x15bcc <__fp_cmp>
   15d94:	08 f4       	brcc	.+2      	; 0x15d98 <__gesf2+0x6>
   15d96:	8f ef       	ldi	r24, 0xFF	; 255
   15d98:	08 95       	ret

00015d9a <inverse>:
   15d9a:	9b 01       	movw	r18, r22
   15d9c:	ac 01       	movw	r20, r24
   15d9e:	60 e0       	ldi	r22, 0x00	; 0
   15da0:	70 e0       	ldi	r23, 0x00	; 0
   15da2:	80 e8       	ldi	r24, 0x80	; 128
   15da4:	9f e3       	ldi	r25, 0x3F	; 63
   15da6:	c4 cd       	rjmp	.-1144   	; 0x15930 <__divsf3>

00015da8 <__mulsf3>:
   15da8:	0b d0       	rcall	.+22     	; 0x15dc0 <__mulsf3x>
   15daa:	a8 cf       	rjmp	.-176    	; 0x15cfc <__fp_round>
   15dac:	71 df       	rcall	.-286    	; 0x15c90 <__fp_pscA>
   15dae:	28 f0       	brcs	.+10     	; 0x15dba <__mulsf3+0x12>
   15db0:	76 df       	rcall	.-276    	; 0x15c9e <__fp_pscB>
   15db2:	18 f0       	brcs	.+6      	; 0x15dba <__mulsf3+0x12>
   15db4:	95 23       	and	r25, r21
   15db6:	09 f0       	breq	.+2      	; 0x15dba <__mulsf3+0x12>
   15db8:	2d cf       	rjmp	.-422    	; 0x15c14 <__fp_inf>
   15dba:	32 cf       	rjmp	.-412    	; 0x15c20 <__fp_nan>
   15dbc:	11 24       	eor	r1, r1
   15dbe:	e3 cf       	rjmp	.-58     	; 0x15d86 <__fp_szero>

00015dc0 <__mulsf3x>:
   15dc0:	bf df       	rcall	.-130    	; 0x15d40 <__fp_split3>
   15dc2:	a0 f3       	brcs	.-24     	; 0x15dac <__mulsf3+0x4>

00015dc4 <__mulsf3_pse>:
   15dc4:	95 9f       	mul	r25, r21
   15dc6:	d1 f3       	breq	.-12     	; 0x15dbc <__mulsf3+0x14>
   15dc8:	95 0f       	add	r25, r21
   15dca:	50 e0       	ldi	r21, 0x00	; 0
   15dcc:	55 1f       	adc	r21, r21
   15dce:	62 9f       	mul	r22, r18
   15dd0:	f0 01       	movw	r30, r0
   15dd2:	72 9f       	mul	r23, r18
   15dd4:	bb 27       	eor	r27, r27
   15dd6:	f0 0d       	add	r31, r0
   15dd8:	b1 1d       	adc	r27, r1
   15dda:	63 9f       	mul	r22, r19
   15ddc:	aa 27       	eor	r26, r26
   15dde:	f0 0d       	add	r31, r0
   15de0:	b1 1d       	adc	r27, r1
   15de2:	aa 1f       	adc	r26, r26
   15de4:	64 9f       	mul	r22, r20
   15de6:	66 27       	eor	r22, r22
   15de8:	b0 0d       	add	r27, r0
   15dea:	a1 1d       	adc	r26, r1
   15dec:	66 1f       	adc	r22, r22
   15dee:	82 9f       	mul	r24, r18
   15df0:	22 27       	eor	r18, r18
   15df2:	b0 0d       	add	r27, r0
   15df4:	a1 1d       	adc	r26, r1
   15df6:	62 1f       	adc	r22, r18
   15df8:	73 9f       	mul	r23, r19
   15dfa:	b0 0d       	add	r27, r0
   15dfc:	a1 1d       	adc	r26, r1
   15dfe:	62 1f       	adc	r22, r18
   15e00:	83 9f       	mul	r24, r19
   15e02:	a0 0d       	add	r26, r0
   15e04:	61 1d       	adc	r22, r1
   15e06:	22 1f       	adc	r18, r18
   15e08:	74 9f       	mul	r23, r20
   15e0a:	33 27       	eor	r19, r19
   15e0c:	a0 0d       	add	r26, r0
   15e0e:	61 1d       	adc	r22, r1
   15e10:	23 1f       	adc	r18, r19
   15e12:	84 9f       	mul	r24, r20
   15e14:	60 0d       	add	r22, r0
   15e16:	21 1d       	adc	r18, r1
   15e18:	82 2f       	mov	r24, r18
   15e1a:	76 2f       	mov	r23, r22
   15e1c:	6a 2f       	mov	r22, r26
   15e1e:	11 24       	eor	r1, r1
   15e20:	9f 57       	subi	r25, 0x7F	; 127
   15e22:	50 40       	sbci	r21, 0x00	; 0
   15e24:	8a f0       	brmi	.+34     	; 0x15e48 <__mulsf3_pse+0x84>
   15e26:	e1 f0       	breq	.+56     	; 0x15e60 <__mulsf3_pse+0x9c>
   15e28:	88 23       	and	r24, r24
   15e2a:	4a f0       	brmi	.+18     	; 0x15e3e <__mulsf3_pse+0x7a>
   15e2c:	ee 0f       	add	r30, r30
   15e2e:	ff 1f       	adc	r31, r31
   15e30:	bb 1f       	adc	r27, r27
   15e32:	66 1f       	adc	r22, r22
   15e34:	77 1f       	adc	r23, r23
   15e36:	88 1f       	adc	r24, r24
   15e38:	91 50       	subi	r25, 0x01	; 1
   15e3a:	50 40       	sbci	r21, 0x00	; 0
   15e3c:	a9 f7       	brne	.-22     	; 0x15e28 <__mulsf3_pse+0x64>
   15e3e:	9e 3f       	cpi	r25, 0xFE	; 254
   15e40:	51 05       	cpc	r21, r1
   15e42:	70 f0       	brcs	.+28     	; 0x15e60 <__mulsf3_pse+0x9c>
   15e44:	e7 ce       	rjmp	.-562    	; 0x15c14 <__fp_inf>
   15e46:	9f cf       	rjmp	.-194    	; 0x15d86 <__fp_szero>
   15e48:	5f 3f       	cpi	r21, 0xFF	; 255
   15e4a:	ec f3       	brlt	.-6      	; 0x15e46 <__mulsf3_pse+0x82>
   15e4c:	98 3e       	cpi	r25, 0xE8	; 232
   15e4e:	dc f3       	brlt	.-10     	; 0x15e46 <__mulsf3_pse+0x82>
   15e50:	86 95       	lsr	r24
   15e52:	77 95       	ror	r23
   15e54:	67 95       	ror	r22
   15e56:	b7 95       	ror	r27
   15e58:	f7 95       	ror	r31
   15e5a:	e7 95       	ror	r30
   15e5c:	9f 5f       	subi	r25, 0xFF	; 255
   15e5e:	c1 f7       	brne	.-16     	; 0x15e50 <__mulsf3_pse+0x8c>
   15e60:	fe 2b       	or	r31, r30
   15e62:	88 0f       	add	r24, r24
   15e64:	91 1d       	adc	r25, r1
   15e66:	96 95       	lsr	r25
   15e68:	87 95       	ror	r24
   15e6a:	97 f9       	bld	r25, 7
   15e6c:	08 95       	ret

00015e6e <sin>:
   15e6e:	9f 93       	push	r25
   15e70:	1e df       	rcall	.-452    	; 0x15cae <__fp_rempio2>
   15e72:	0f 90       	pop	r0
   15e74:	07 fc       	sbrc	r0, 7
   15e76:	ee 5f       	subi	r30, 0xFE	; 254
   15e78:	52 cf       	rjmp	.-348    	; 0x15d1e <__fp_sinus>

00015e7a <square>:
   15e7a:	9b 01       	movw	r18, r22
   15e7c:	ac 01       	movw	r20, r24
   15e7e:	94 cf       	rjmp	.-216    	; 0x15da8 <__mulsf3>

00015e80 <__fp_mpack>:
   15e80:	9f 3f       	cpi	r25, 0xFF	; 255
   15e82:	31 f0       	breq	.+12     	; 0x15e90 <__fp_mpack_finite+0xc>

00015e84 <__fp_mpack_finite>:
   15e84:	91 50       	subi	r25, 0x01	; 1
   15e86:	20 f4       	brcc	.+8      	; 0x15e90 <__fp_mpack_finite+0xc>
   15e88:	87 95       	ror	r24
   15e8a:	77 95       	ror	r23
   15e8c:	67 95       	ror	r22
   15e8e:	b7 95       	ror	r27
   15e90:	88 0f       	add	r24, r24
   15e92:	91 1d       	adc	r25, r1
   15e94:	96 95       	lsr	r25
   15e96:	87 95       	ror	r24
   15e98:	97 f9       	bld	r25, 7
   15e9a:	08 95       	ret

00015e9c <__fp_powsodd>:
   15e9c:	9f 93       	push	r25
   15e9e:	8f 93       	push	r24
   15ea0:	7f 93       	push	r23
   15ea2:	6f 93       	push	r22
   15ea4:	ff 93       	push	r31
   15ea6:	ef 93       	push	r30
   15ea8:	9b 01       	movw	r18, r22
   15eaa:	ac 01       	movw	r20, r24
   15eac:	7d df       	rcall	.-262    	; 0x15da8 <__mulsf3>
   15eae:	ef 91       	pop	r30
   15eb0:	ff 91       	pop	r31
   15eb2:	c9 de       	rcall	.-622    	; 0x15c46 <__fp_powser>
   15eb4:	2f 91       	pop	r18
   15eb6:	3f 91       	pop	r19
   15eb8:	4f 91       	pop	r20
   15eba:	5f 91       	pop	r21
   15ebc:	75 cf       	rjmp	.-278    	; 0x15da8 <__mulsf3>

00015ebe <malloc>:
   15ebe:	cf 93       	push	r28
   15ec0:	df 93       	push	r29
   15ec2:	ac 01       	movw	r20, r24
   15ec4:	82 30       	cpi	r24, 0x02	; 2
   15ec6:	91 05       	cpc	r25, r1
   15ec8:	10 f4       	brcc	.+4      	; 0x15ece <malloc+0x10>
   15eca:	42 e0       	ldi	r20, 0x02	; 2
   15ecc:	50 e0       	ldi	r21, 0x00	; 0
   15ece:	e0 91 ec 27 	lds	r30, 0x27EC
   15ed2:	f0 91 ed 27 	lds	r31, 0x27ED
   15ed6:	20 e0       	ldi	r18, 0x00	; 0
   15ed8:	30 e0       	ldi	r19, 0x00	; 0
   15eda:	a0 e0       	ldi	r26, 0x00	; 0
   15edc:	b0 e0       	ldi	r27, 0x00	; 0
   15ede:	24 c0       	rjmp	.+72     	; 0x15f28 <malloc+0x6a>
   15ee0:	80 81       	ld	r24, Z
   15ee2:	91 81       	ldd	r25, Z+1	; 0x01
   15ee4:	84 17       	cp	r24, r20
   15ee6:	95 07       	cpc	r25, r21
   15ee8:	d0 f0       	brcs	.+52     	; 0x15f1e <malloc+0x60>
   15eea:	84 17       	cp	r24, r20
   15eec:	95 07       	cpc	r25, r21
   15eee:	71 f4       	brne	.+28     	; 0x15f0c <malloc+0x4e>
   15ef0:	82 81       	ldd	r24, Z+2	; 0x02
   15ef2:	93 81       	ldd	r25, Z+3	; 0x03
   15ef4:	10 97       	sbiw	r26, 0x00	; 0
   15ef6:	29 f0       	breq	.+10     	; 0x15f02 <malloc+0x44>
   15ef8:	12 96       	adiw	r26, 0x02	; 2
   15efa:	8d 93       	st	X+, r24
   15efc:	9c 93       	st	X, r25
   15efe:	13 97       	sbiw	r26, 0x03	; 3
   15f00:	2c c0       	rjmp	.+88     	; 0x15f5a <malloc+0x9c>
   15f02:	80 93 ec 27 	sts	0x27EC, r24
   15f06:	90 93 ed 27 	sts	0x27ED, r25
   15f0a:	27 c0       	rjmp	.+78     	; 0x15f5a <malloc+0x9c>
   15f0c:	21 15       	cp	r18, r1
   15f0e:	31 05       	cpc	r19, r1
   15f10:	19 f0       	breq	.+6      	; 0x15f18 <malloc+0x5a>
   15f12:	82 17       	cp	r24, r18
   15f14:	93 07       	cpc	r25, r19
   15f16:	18 f4       	brcc	.+6      	; 0x15f1e <malloc+0x60>
   15f18:	9c 01       	movw	r18, r24
   15f1a:	bd 01       	movw	r22, r26
   15f1c:	ef 01       	movw	r28, r30
   15f1e:	92 81       	ldd	r25, Z+2	; 0x02
   15f20:	83 81       	ldd	r24, Z+3	; 0x03
   15f22:	df 01       	movw	r26, r30
   15f24:	e9 2f       	mov	r30, r25
   15f26:	f8 2f       	mov	r31, r24
   15f28:	30 97       	sbiw	r30, 0x00	; 0
   15f2a:	d1 f6       	brne	.-76     	; 0x15ee0 <malloc+0x22>
   15f2c:	21 15       	cp	r18, r1
   15f2e:	31 05       	cpc	r19, r1
   15f30:	f9 f0       	breq	.+62     	; 0x15f70 <malloc+0xb2>
   15f32:	c9 01       	movw	r24, r18
   15f34:	84 1b       	sub	r24, r20
   15f36:	95 0b       	sbc	r25, r21
   15f38:	84 30       	cpi	r24, 0x04	; 4
   15f3a:	91 05       	cpc	r25, r1
   15f3c:	80 f4       	brcc	.+32     	; 0x15f5e <malloc+0xa0>
   15f3e:	8a 81       	ldd	r24, Y+2	; 0x02
   15f40:	9b 81       	ldd	r25, Y+3	; 0x03
   15f42:	61 15       	cp	r22, r1
   15f44:	71 05       	cpc	r23, r1
   15f46:	21 f0       	breq	.+8      	; 0x15f50 <malloc+0x92>
   15f48:	fb 01       	movw	r30, r22
   15f4a:	82 83       	std	Z+2, r24	; 0x02
   15f4c:	93 83       	std	Z+3, r25	; 0x03
   15f4e:	04 c0       	rjmp	.+8      	; 0x15f58 <malloc+0x9a>
   15f50:	80 93 ec 27 	sts	0x27EC, r24
   15f54:	90 93 ed 27 	sts	0x27ED, r25
   15f58:	fe 01       	movw	r30, r28
   15f5a:	32 96       	adiw	r30, 0x02	; 2
   15f5c:	42 c0       	rjmp	.+132    	; 0x15fe2 <malloc+0x124>
   15f5e:	fe 01       	movw	r30, r28
   15f60:	e8 0f       	add	r30, r24
   15f62:	f9 1f       	adc	r31, r25
   15f64:	41 93       	st	Z+, r20
   15f66:	51 93       	st	Z+, r21
   15f68:	02 97       	sbiw	r24, 0x02	; 2
   15f6a:	88 83       	st	Y, r24
   15f6c:	99 83       	std	Y+1, r25	; 0x01
   15f6e:	39 c0       	rjmp	.+114    	; 0x15fe2 <malloc+0x124>
   15f70:	80 91 ea 27 	lds	r24, 0x27EA
   15f74:	90 91 eb 27 	lds	r25, 0x27EB
   15f78:	00 97       	sbiw	r24, 0x00	; 0
   15f7a:	41 f4       	brne	.+16     	; 0x15f8c <malloc+0xce>
   15f7c:	80 91 f7 23 	lds	r24, 0x23F7
   15f80:	90 91 f8 23 	lds	r25, 0x23F8
   15f84:	80 93 ea 27 	sts	0x27EA, r24
   15f88:	90 93 eb 27 	sts	0x27EB, r25
   15f8c:	20 91 f5 23 	lds	r18, 0x23F5
   15f90:	30 91 f6 23 	lds	r19, 0x23F6
   15f94:	21 15       	cp	r18, r1
   15f96:	31 05       	cpc	r19, r1
   15f98:	41 f4       	brne	.+16     	; 0x15faa <malloc+0xec>
   15f9a:	2d b7       	in	r18, 0x3d	; 61
   15f9c:	3e b7       	in	r19, 0x3e	; 62
   15f9e:	80 91 f9 23 	lds	r24, 0x23F9
   15fa2:	90 91 fa 23 	lds	r25, 0x23FA
   15fa6:	28 1b       	sub	r18, r24
   15fa8:	39 0b       	sbc	r19, r25
   15faa:	e0 91 ea 27 	lds	r30, 0x27EA
   15fae:	f0 91 eb 27 	lds	r31, 0x27EB
   15fb2:	e2 17       	cp	r30, r18
   15fb4:	f3 07       	cpc	r31, r19
   15fb6:	98 f4       	brcc	.+38     	; 0x15fde <malloc+0x120>
   15fb8:	2e 1b       	sub	r18, r30
   15fba:	3f 0b       	sbc	r19, r31
   15fbc:	24 17       	cp	r18, r20
   15fbe:	35 07       	cpc	r19, r21
   15fc0:	70 f0       	brcs	.+28     	; 0x15fde <malloc+0x120>
   15fc2:	ca 01       	movw	r24, r20
   15fc4:	02 96       	adiw	r24, 0x02	; 2
   15fc6:	28 17       	cp	r18, r24
   15fc8:	39 07       	cpc	r19, r25
   15fca:	48 f0       	brcs	.+18     	; 0x15fde <malloc+0x120>
   15fcc:	8e 0f       	add	r24, r30
   15fce:	9f 1f       	adc	r25, r31
   15fd0:	80 93 ea 27 	sts	0x27EA, r24
   15fd4:	90 93 eb 27 	sts	0x27EB, r25
   15fd8:	41 93       	st	Z+, r20
   15fda:	51 93       	st	Z+, r21
   15fdc:	02 c0       	rjmp	.+4      	; 0x15fe2 <malloc+0x124>
   15fde:	e0 e0       	ldi	r30, 0x00	; 0
   15fe0:	f0 e0       	ldi	r31, 0x00	; 0
   15fe2:	cf 01       	movw	r24, r30
   15fe4:	df 91       	pop	r29
   15fe6:	cf 91       	pop	r28
   15fe8:	08 95       	ret

00015fea <free>:
   15fea:	0f 93       	push	r16
   15fec:	1f 93       	push	r17
   15fee:	cf 93       	push	r28
   15ff0:	df 93       	push	r29
   15ff2:	9c 01       	movw	r18, r24
   15ff4:	00 97       	sbiw	r24, 0x00	; 0
   15ff6:	09 f4       	brne	.+2      	; 0x15ffa <free+0x10>
   15ff8:	8c c0       	rjmp	.+280    	; 0x16112 <free+0x128>
   15ffa:	dc 01       	movw	r26, r24
   15ffc:	12 97       	sbiw	r26, 0x02	; 2
   15ffe:	12 96       	adiw	r26, 0x02	; 2
   16000:	1d 92       	st	X+, r1
   16002:	1c 92       	st	X, r1
   16004:	13 97       	sbiw	r26, 0x03	; 3
   16006:	60 91 ec 27 	lds	r22, 0x27EC
   1600a:	70 91 ed 27 	lds	r23, 0x27ED
   1600e:	61 15       	cp	r22, r1
   16010:	71 05       	cpc	r23, r1
   16012:	89 f4       	brne	.+34     	; 0x16036 <free+0x4c>
   16014:	8d 91       	ld	r24, X+
   16016:	9c 91       	ld	r25, X
   16018:	11 97       	sbiw	r26, 0x01	; 1
   1601a:	82 0f       	add	r24, r18
   1601c:	93 1f       	adc	r25, r19
   1601e:	20 91 ea 27 	lds	r18, 0x27EA
   16022:	30 91 eb 27 	lds	r19, 0x27EB
   16026:	28 17       	cp	r18, r24
   16028:	39 07       	cpc	r19, r25
   1602a:	69 f5       	brne	.+90     	; 0x16086 <free+0x9c>
   1602c:	a0 93 ea 27 	sts	0x27EA, r26
   16030:	b0 93 eb 27 	sts	0x27EB, r27
   16034:	6e c0       	rjmp	.+220    	; 0x16112 <free+0x128>
   16036:	fb 01       	movw	r30, r22
   16038:	40 e0       	ldi	r20, 0x00	; 0
   1603a:	50 e0       	ldi	r21, 0x00	; 0
   1603c:	01 c0       	rjmp	.+2      	; 0x16040 <free+0x56>
   1603e:	fc 01       	movw	r30, r24
   16040:	ea 17       	cp	r30, r26
   16042:	fb 07       	cpc	r31, r27
   16044:	30 f4       	brcc	.+12     	; 0x16052 <free+0x68>
   16046:	82 81       	ldd	r24, Z+2	; 0x02
   16048:	93 81       	ldd	r25, Z+3	; 0x03
   1604a:	af 01       	movw	r20, r30
   1604c:	00 97       	sbiw	r24, 0x00	; 0
   1604e:	b9 f7       	brne	.-18     	; 0x1603e <free+0x54>
   16050:	1f c0       	rjmp	.+62     	; 0x16090 <free+0xa6>
   16052:	e9 01       	movw	r28, r18
   16054:	22 97       	sbiw	r28, 0x02	; 2
   16056:	ea 83       	std	Y+2, r30	; 0x02
   16058:	fb 83       	std	Y+3, r31	; 0x03
   1605a:	08 81       	ld	r16, Y
   1605c:	19 81       	ldd	r17, Y+1	; 0x01
   1605e:	c9 01       	movw	r24, r18
   16060:	80 0f       	add	r24, r16
   16062:	91 1f       	adc	r25, r17
   16064:	8e 17       	cp	r24, r30
   16066:	9f 07       	cpc	r25, r31
   16068:	59 f4       	brne	.+22     	; 0x16080 <free+0x96>
   1606a:	80 81       	ld	r24, Z
   1606c:	91 81       	ldd	r25, Z+1	; 0x01
   1606e:	80 0f       	add	r24, r16
   16070:	91 1f       	adc	r25, r17
   16072:	02 96       	adiw	r24, 0x02	; 2
   16074:	88 83       	st	Y, r24
   16076:	99 83       	std	Y+1, r25	; 0x01
   16078:	82 81       	ldd	r24, Z+2	; 0x02
   1607a:	93 81       	ldd	r25, Z+3	; 0x03
   1607c:	8a 83       	std	Y+2, r24	; 0x02
   1607e:	9b 83       	std	Y+3, r25	; 0x03
   16080:	41 15       	cp	r20, r1
   16082:	51 05       	cpc	r21, r1
   16084:	29 f4       	brne	.+10     	; 0x16090 <free+0xa6>
   16086:	a0 93 ec 27 	sts	0x27EC, r26
   1608a:	b0 93 ed 27 	sts	0x27ED, r27
   1608e:	41 c0       	rjmp	.+130    	; 0x16112 <free+0x128>
   16090:	fa 01       	movw	r30, r20
   16092:	a2 83       	std	Z+2, r26	; 0x02
   16094:	b3 83       	std	Z+3, r27	; 0x03
   16096:	c1 91       	ld	r28, Z+
   16098:	d1 91       	ld	r29, Z+
   1609a:	ec 0f       	add	r30, r28
   1609c:	fd 1f       	adc	r31, r29
   1609e:	ae 17       	cp	r26, r30
   160a0:	bf 07       	cpc	r27, r31
   160a2:	81 f4       	brne	.+32     	; 0x160c4 <free+0xda>
   160a4:	f9 01       	movw	r30, r18
   160a6:	92 91       	ld	r25, -Z
   160a8:	82 91       	ld	r24, -Z
   160aa:	8c 0f       	add	r24, r28
   160ac:	9d 1f       	adc	r25, r29
   160ae:	02 96       	adiw	r24, 0x02	; 2
   160b0:	da 01       	movw	r26, r20
   160b2:	8d 93       	st	X+, r24
   160b4:	9c 93       	st	X, r25
   160b6:	11 97       	sbiw	r26, 0x01	; 1
   160b8:	82 81       	ldd	r24, Z+2	; 0x02
   160ba:	93 81       	ldd	r25, Z+3	; 0x03
   160bc:	12 96       	adiw	r26, 0x02	; 2
   160be:	8d 93       	st	X+, r24
   160c0:	9c 93       	st	X, r25
   160c2:	13 97       	sbiw	r26, 0x03	; 3
   160c4:	e0 e0       	ldi	r30, 0x00	; 0
   160c6:	f0 e0       	ldi	r31, 0x00	; 0
   160c8:	02 c0       	rjmp	.+4      	; 0x160ce <free+0xe4>
   160ca:	fb 01       	movw	r30, r22
   160cc:	bc 01       	movw	r22, r24
   160ce:	db 01       	movw	r26, r22
   160d0:	12 96       	adiw	r26, 0x02	; 2
   160d2:	8d 91       	ld	r24, X+
   160d4:	9c 91       	ld	r25, X
   160d6:	13 97       	sbiw	r26, 0x03	; 3
   160d8:	00 97       	sbiw	r24, 0x00	; 0
   160da:	b9 f7       	brne	.-18     	; 0x160ca <free+0xe0>
   160dc:	cb 01       	movw	r24, r22
   160de:	02 96       	adiw	r24, 0x02	; 2
   160e0:	2d 91       	ld	r18, X+
   160e2:	3c 91       	ld	r19, X
   160e4:	11 97       	sbiw	r26, 0x01	; 1
   160e6:	82 0f       	add	r24, r18
   160e8:	93 1f       	adc	r25, r19
   160ea:	20 91 ea 27 	lds	r18, 0x27EA
   160ee:	30 91 eb 27 	lds	r19, 0x27EB
   160f2:	28 17       	cp	r18, r24
   160f4:	39 07       	cpc	r19, r25
   160f6:	69 f4       	brne	.+26     	; 0x16112 <free+0x128>
   160f8:	30 97       	sbiw	r30, 0x00	; 0
   160fa:	29 f4       	brne	.+10     	; 0x16106 <free+0x11c>
   160fc:	10 92 ec 27 	sts	0x27EC, r1
   16100:	10 92 ed 27 	sts	0x27ED, r1
   16104:	02 c0       	rjmp	.+4      	; 0x1610a <free+0x120>
   16106:	12 82       	std	Z+2, r1	; 0x02
   16108:	13 82       	std	Z+3, r1	; 0x03
   1610a:	60 93 ea 27 	sts	0x27EA, r22
   1610e:	70 93 eb 27 	sts	0x27EB, r23
   16112:	df 91       	pop	r29
   16114:	cf 91       	pop	r28
   16116:	1f 91       	pop	r17
   16118:	0f 91       	pop	r16
   1611a:	08 95       	ret

0001611c <atoi>:
   1611c:	fc 01       	movw	r30, r24
   1611e:	88 27       	eor	r24, r24
   16120:	99 27       	eor	r25, r25
   16122:	e8 94       	clt
   16124:	21 91       	ld	r18, Z+
   16126:	20 32       	cpi	r18, 0x20	; 32
   16128:	e9 f3       	breq	.-6      	; 0x16124 <atoi+0x8>
   1612a:	29 30       	cpi	r18, 0x09	; 9
   1612c:	10 f0       	brcs	.+4      	; 0x16132 <atoi+0x16>
   1612e:	2e 30       	cpi	r18, 0x0E	; 14
   16130:	c8 f3       	brcs	.-14     	; 0x16124 <atoi+0x8>
   16132:	2b 32       	cpi	r18, 0x2B	; 43
   16134:	41 f0       	breq	.+16     	; 0x16146 <atoi+0x2a>
   16136:	2d 32       	cpi	r18, 0x2D	; 45
   16138:	39 f4       	brne	.+14     	; 0x16148 <atoi+0x2c>
   1613a:	68 94       	set
   1613c:	04 c0       	rjmp	.+8      	; 0x16146 <atoi+0x2a>
   1613e:	0e 94 36 b2 	call	0x1646c	; 0x1646c <__mulhi_const_10>
   16142:	82 0f       	add	r24, r18
   16144:	91 1d       	adc	r25, r1
   16146:	21 91       	ld	r18, Z+
   16148:	20 53       	subi	r18, 0x30	; 48
   1614a:	2a 30       	cpi	r18, 0x0A	; 10
   1614c:	c0 f3       	brcs	.-16     	; 0x1613e <atoi+0x22>
   1614e:	1e f4       	brtc	.+6      	; 0x16156 <atoi+0x3a>
   16150:	90 95       	com	r25
   16152:	81 95       	neg	r24
   16154:	9f 4f       	sbci	r25, 0xFF	; 255
   16156:	08 95       	ret

00016158 <exit>:
   16158:	f8 94       	cli
   1615a:	0c 94 2d b5 	jmp	0x16a5a	; 0x16a5a <_exit>

0001615e <__ftoa_engine>:
   1615e:	28 30       	cpi	r18, 0x08	; 8
   16160:	08 f0       	brcs	.+2      	; 0x16164 <__ftoa_engine+0x6>
   16162:	27 e0       	ldi	r18, 0x07	; 7
   16164:	33 27       	eor	r19, r19
   16166:	da 01       	movw	r26, r20
   16168:	99 0f       	add	r25, r25
   1616a:	31 1d       	adc	r19, r1
   1616c:	87 fd       	sbrc	r24, 7
   1616e:	91 60       	ori	r25, 0x01	; 1
   16170:	00 96       	adiw	r24, 0x00	; 0
   16172:	61 05       	cpc	r22, r1
   16174:	71 05       	cpc	r23, r1
   16176:	39 f4       	brne	.+14     	; 0x16186 <__ftoa_engine+0x28>
   16178:	32 60       	ori	r19, 0x02	; 2
   1617a:	2e 5f       	subi	r18, 0xFE	; 254
   1617c:	3d 93       	st	X+, r19
   1617e:	30 e3       	ldi	r19, 0x30	; 48
   16180:	2a 95       	dec	r18
   16182:	e1 f7       	brne	.-8      	; 0x1617c <__ftoa_engine+0x1e>
   16184:	08 95       	ret
   16186:	9f 3f       	cpi	r25, 0xFF	; 255
   16188:	30 f0       	brcs	.+12     	; 0x16196 <__ftoa_engine+0x38>
   1618a:	80 38       	cpi	r24, 0x80	; 128
   1618c:	71 05       	cpc	r23, r1
   1618e:	61 05       	cpc	r22, r1
   16190:	09 f0       	breq	.+2      	; 0x16194 <__ftoa_engine+0x36>
   16192:	3c 5f       	subi	r19, 0xFC	; 252
   16194:	3c 5f       	subi	r19, 0xFC	; 252
   16196:	3d 93       	st	X+, r19
   16198:	91 30       	cpi	r25, 0x01	; 1
   1619a:	08 f0       	brcs	.+2      	; 0x1619e <__ftoa_engine+0x40>
   1619c:	80 68       	ori	r24, 0x80	; 128
   1619e:	91 1d       	adc	r25, r1
   161a0:	df 93       	push	r29
   161a2:	cf 93       	push	r28
   161a4:	1f 93       	push	r17
   161a6:	0f 93       	push	r16
   161a8:	ff 92       	push	r15
   161aa:	ef 92       	push	r14
   161ac:	19 2f       	mov	r17, r25
   161ae:	98 7f       	andi	r25, 0xF8	; 248
   161b0:	96 95       	lsr	r25
   161b2:	e9 2f       	mov	r30, r25
   161b4:	96 95       	lsr	r25
   161b6:	96 95       	lsr	r25
   161b8:	e9 0f       	add	r30, r25
   161ba:	ff 27       	eor	r31, r31
   161bc:	ef 54       	subi	r30, 0x4F	; 79
   161be:	f2 4f       	sbci	r31, 0xF2	; 242
   161c0:	99 27       	eor	r25, r25
   161c2:	33 27       	eor	r19, r19
   161c4:	ee 24       	eor	r14, r14
   161c6:	ff 24       	eor	r15, r15
   161c8:	a7 01       	movw	r20, r14
   161ca:	e7 01       	movw	r28, r14
   161cc:	05 90       	lpm	r0, Z+
   161ce:	08 94       	sec
   161d0:	07 94       	ror	r0
   161d2:	28 f4       	brcc	.+10     	; 0x161de <__ftoa_engine+0x80>
   161d4:	36 0f       	add	r19, r22
   161d6:	e7 1e       	adc	r14, r23
   161d8:	f8 1e       	adc	r15, r24
   161da:	49 1f       	adc	r20, r25
   161dc:	51 1d       	adc	r21, r1
   161de:	66 0f       	add	r22, r22
   161e0:	77 1f       	adc	r23, r23
   161e2:	88 1f       	adc	r24, r24
   161e4:	99 1f       	adc	r25, r25
   161e6:	06 94       	lsr	r0
   161e8:	a1 f7       	brne	.-24     	; 0x161d2 <__ftoa_engine+0x74>
   161ea:	05 90       	lpm	r0, Z+
   161ec:	07 94       	ror	r0
   161ee:	28 f4       	brcc	.+10     	; 0x161fa <__ftoa_engine+0x9c>
   161f0:	e7 0e       	add	r14, r23
   161f2:	f8 1e       	adc	r15, r24
   161f4:	49 1f       	adc	r20, r25
   161f6:	56 1f       	adc	r21, r22
   161f8:	c1 1d       	adc	r28, r1
   161fa:	77 0f       	add	r23, r23
   161fc:	88 1f       	adc	r24, r24
   161fe:	99 1f       	adc	r25, r25
   16200:	66 1f       	adc	r22, r22
   16202:	06 94       	lsr	r0
   16204:	a1 f7       	brne	.-24     	; 0x161ee <__ftoa_engine+0x90>
   16206:	05 90       	lpm	r0, Z+
   16208:	07 94       	ror	r0
   1620a:	28 f4       	brcc	.+10     	; 0x16216 <__ftoa_engine+0xb8>
   1620c:	f8 0e       	add	r15, r24
   1620e:	49 1f       	adc	r20, r25
   16210:	56 1f       	adc	r21, r22
   16212:	c7 1f       	adc	r28, r23
   16214:	d1 1d       	adc	r29, r1
   16216:	88 0f       	add	r24, r24
   16218:	99 1f       	adc	r25, r25
   1621a:	66 1f       	adc	r22, r22
   1621c:	77 1f       	adc	r23, r23
   1621e:	06 94       	lsr	r0
   16220:	a1 f7       	brne	.-24     	; 0x1620a <__ftoa_engine+0xac>
   16222:	05 90       	lpm	r0, Z+
   16224:	07 94       	ror	r0
   16226:	20 f4       	brcc	.+8      	; 0x16230 <__ftoa_engine+0xd2>
   16228:	49 0f       	add	r20, r25
   1622a:	56 1f       	adc	r21, r22
   1622c:	c7 1f       	adc	r28, r23
   1622e:	d8 1f       	adc	r29, r24
   16230:	99 0f       	add	r25, r25
   16232:	66 1f       	adc	r22, r22
   16234:	77 1f       	adc	r23, r23
   16236:	88 1f       	adc	r24, r24
   16238:	06 94       	lsr	r0
   1623a:	a9 f7       	brne	.-22     	; 0x16226 <__ftoa_engine+0xc8>
   1623c:	84 91       	lpm	r24, Z
   1623e:	10 95       	com	r17
   16240:	17 70       	andi	r17, 0x07	; 7
   16242:	41 f0       	breq	.+16     	; 0x16254 <__ftoa_engine+0xf6>
   16244:	d6 95       	lsr	r29
   16246:	c7 95       	ror	r28
   16248:	57 95       	ror	r21
   1624a:	47 95       	ror	r20
   1624c:	f7 94       	ror	r15
   1624e:	e7 94       	ror	r14
   16250:	1a 95       	dec	r17
   16252:	c1 f7       	brne	.-16     	; 0x16244 <__ftoa_engine+0xe6>
   16254:	e7 e5       	ldi	r30, 0x57	; 87
   16256:	fd e0       	ldi	r31, 0x0D	; 13
   16258:	68 94       	set
   1625a:	15 90       	lpm	r1, Z+
   1625c:	15 91       	lpm	r17, Z+
   1625e:	35 91       	lpm	r19, Z+
   16260:	65 91       	lpm	r22, Z+
   16262:	95 91       	lpm	r25, Z+
   16264:	05 90       	lpm	r0, Z+
   16266:	7f e2       	ldi	r23, 0x2F	; 47
   16268:	73 95       	inc	r23
   1626a:	e1 18       	sub	r14, r1
   1626c:	f1 0a       	sbc	r15, r17
   1626e:	43 0b       	sbc	r20, r19
   16270:	56 0b       	sbc	r21, r22
   16272:	c9 0b       	sbc	r28, r25
   16274:	d0 09       	sbc	r29, r0
   16276:	c0 f7       	brcc	.-16     	; 0x16268 <__ftoa_engine+0x10a>
   16278:	e1 0c       	add	r14, r1
   1627a:	f1 1e       	adc	r15, r17
   1627c:	43 1f       	adc	r20, r19
   1627e:	56 1f       	adc	r21, r22
   16280:	c9 1f       	adc	r28, r25
   16282:	d0 1d       	adc	r29, r0
   16284:	7e f4       	brtc	.+30     	; 0x162a4 <__ftoa_engine+0x146>
   16286:	70 33       	cpi	r23, 0x30	; 48
   16288:	11 f4       	brne	.+4      	; 0x1628e <__ftoa_engine+0x130>
   1628a:	8a 95       	dec	r24
   1628c:	e6 cf       	rjmp	.-52     	; 0x1625a <__ftoa_engine+0xfc>
   1628e:	e8 94       	clt
   16290:	01 50       	subi	r16, 0x01	; 1
   16292:	30 f0       	brcs	.+12     	; 0x162a0 <__ftoa_engine+0x142>
   16294:	08 0f       	add	r16, r24
   16296:	0a f4       	brpl	.+2      	; 0x1629a <__ftoa_engine+0x13c>
   16298:	00 27       	eor	r16, r16
   1629a:	02 17       	cp	r16, r18
   1629c:	08 f4       	brcc	.+2      	; 0x162a0 <__ftoa_engine+0x142>
   1629e:	20 2f       	mov	r18, r16
   162a0:	23 95       	inc	r18
   162a2:	02 2f       	mov	r16, r18
   162a4:	7a 33       	cpi	r23, 0x3A	; 58
   162a6:	28 f0       	brcs	.+10     	; 0x162b2 <__ftoa_engine+0x154>
   162a8:	79 e3       	ldi	r23, 0x39	; 57
   162aa:	7d 93       	st	X+, r23
   162ac:	2a 95       	dec	r18
   162ae:	e9 f7       	brne	.-6      	; 0x162aa <__ftoa_engine+0x14c>
   162b0:	10 c0       	rjmp	.+32     	; 0x162d2 <__ftoa_engine+0x174>
   162b2:	7d 93       	st	X+, r23
   162b4:	2a 95       	dec	r18
   162b6:	89 f6       	brne	.-94     	; 0x1625a <__ftoa_engine+0xfc>
   162b8:	06 94       	lsr	r0
   162ba:	97 95       	ror	r25
   162bc:	67 95       	ror	r22
   162be:	37 95       	ror	r19
   162c0:	17 95       	ror	r17
   162c2:	17 94       	ror	r1
   162c4:	e1 18       	sub	r14, r1
   162c6:	f1 0a       	sbc	r15, r17
   162c8:	43 0b       	sbc	r20, r19
   162ca:	56 0b       	sbc	r21, r22
   162cc:	c9 0b       	sbc	r28, r25
   162ce:	d0 09       	sbc	r29, r0
   162d0:	98 f0       	brcs	.+38     	; 0x162f8 <__ftoa_engine+0x19a>
   162d2:	23 95       	inc	r18
   162d4:	7e 91       	ld	r23, -X
   162d6:	73 95       	inc	r23
   162d8:	7a 33       	cpi	r23, 0x3A	; 58
   162da:	08 f0       	brcs	.+2      	; 0x162de <__ftoa_engine+0x180>
   162dc:	70 e3       	ldi	r23, 0x30	; 48
   162de:	7c 93       	st	X, r23
   162e0:	20 13       	cpse	r18, r16
   162e2:	b8 f7       	brcc	.-18     	; 0x162d2 <__ftoa_engine+0x174>
   162e4:	7e 91       	ld	r23, -X
   162e6:	70 61       	ori	r23, 0x10	; 16
   162e8:	7d 93       	st	X+, r23
   162ea:	30 f0       	brcs	.+12     	; 0x162f8 <__ftoa_engine+0x19a>
   162ec:	83 95       	inc	r24
   162ee:	71 e3       	ldi	r23, 0x31	; 49
   162f0:	7d 93       	st	X+, r23
   162f2:	70 e3       	ldi	r23, 0x30	; 48
   162f4:	2a 95       	dec	r18
   162f6:	e1 f7       	brne	.-8      	; 0x162f0 <__ftoa_engine+0x192>
   162f8:	11 24       	eor	r1, r1
   162fa:	ef 90       	pop	r14
   162fc:	ff 90       	pop	r15
   162fe:	0f 91       	pop	r16
   16300:	1f 91       	pop	r17
   16302:	cf 91       	pop	r28
   16304:	df 91       	pop	r29
   16306:	99 27       	eor	r25, r25
   16308:	87 fd       	sbrc	r24, 7
   1630a:	90 95       	com	r25
   1630c:	08 95       	ret

0001630e <strcasecmp_P>:
   1630e:	fb 01       	movw	r30, r22
   16310:	dc 01       	movw	r26, r24
   16312:	8d 91       	ld	r24, X+
   16314:	81 34       	cpi	r24, 0x41	; 65
   16316:	1c f0       	brlt	.+6      	; 0x1631e <strcasecmp_P+0x10>
   16318:	8b 35       	cpi	r24, 0x5B	; 91
   1631a:	0c f4       	brge	.+2      	; 0x1631e <strcasecmp_P+0x10>
   1631c:	80 5e       	subi	r24, 0xE0	; 224
   1631e:	65 91       	lpm	r22, Z+
   16320:	61 34       	cpi	r22, 0x41	; 65
   16322:	1c f0       	brlt	.+6      	; 0x1632a <strcasecmp_P+0x1c>
   16324:	6b 35       	cpi	r22, 0x5B	; 91
   16326:	0c f4       	brge	.+2      	; 0x1632a <strcasecmp_P+0x1c>
   16328:	60 5e       	subi	r22, 0xE0	; 224
   1632a:	86 1b       	sub	r24, r22
   1632c:	61 11       	cpse	r22, r1
   1632e:	89 f3       	breq	.-30     	; 0x16312 <strcasecmp_P+0x4>
   16330:	99 0b       	sbc	r25, r25
   16332:	08 95       	ret

00016334 <strnlen_P>:
   16334:	fc 01       	movw	r30, r24
   16336:	05 90       	lpm	r0, Z+
   16338:	61 50       	subi	r22, 0x01	; 1
   1633a:	70 40       	sbci	r23, 0x00	; 0
   1633c:	01 10       	cpse	r0, r1
   1633e:	d8 f7       	brcc	.-10     	; 0x16336 <strnlen_P+0x2>
   16340:	80 95       	com	r24
   16342:	90 95       	com	r25
   16344:	8e 0f       	add	r24, r30
   16346:	9f 1f       	adc	r25, r31
   16348:	08 95       	ret

0001634a <strtok>:
   1634a:	43 ed       	ldi	r20, 0xD3	; 211
   1634c:	57 e2       	ldi	r21, 0x27	; 39
   1634e:	0e 94 0f b2 	call	0x1641e	; 0x1641e <strtok_r>
   16352:	08 95       	ret

00016354 <memcmp>:
   16354:	fb 01       	movw	r30, r22
   16356:	dc 01       	movw	r26, r24
   16358:	04 c0       	rjmp	.+8      	; 0x16362 <memcmp+0xe>
   1635a:	8d 91       	ld	r24, X+
   1635c:	01 90       	ld	r0, Z+
   1635e:	80 19       	sub	r24, r0
   16360:	21 f4       	brne	.+8      	; 0x1636a <memcmp+0x16>
   16362:	41 50       	subi	r20, 0x01	; 1
   16364:	50 40       	sbci	r21, 0x00	; 0
   16366:	c8 f7       	brcc	.-14     	; 0x1635a <memcmp+0x6>
   16368:	88 1b       	sub	r24, r24
   1636a:	99 0b       	sbc	r25, r25
   1636c:	08 95       	ret

0001636e <memcpy>:
   1636e:	fb 01       	movw	r30, r22
   16370:	dc 01       	movw	r26, r24
   16372:	02 c0       	rjmp	.+4      	; 0x16378 <memcpy+0xa>
   16374:	01 90       	ld	r0, Z+
   16376:	0d 92       	st	X+, r0
   16378:	41 50       	subi	r20, 0x01	; 1
   1637a:	50 40       	sbci	r21, 0x00	; 0
   1637c:	d8 f7       	brcc	.-10     	; 0x16374 <memcpy+0x6>
   1637e:	08 95       	ret

00016380 <memset>:
   16380:	dc 01       	movw	r26, r24
   16382:	01 c0       	rjmp	.+2      	; 0x16386 <memset+0x6>
   16384:	6d 93       	st	X+, r22
   16386:	41 50       	subi	r20, 0x01	; 1
   16388:	50 40       	sbci	r21, 0x00	; 0
   1638a:	e0 f7       	brcc	.-8      	; 0x16384 <memset+0x4>
   1638c:	08 95       	ret

0001638e <strcasecmp>:
   1638e:	fb 01       	movw	r30, r22
   16390:	dc 01       	movw	r26, r24
   16392:	8d 91       	ld	r24, X+
   16394:	81 34       	cpi	r24, 0x41	; 65
   16396:	1c f0       	brlt	.+6      	; 0x1639e <strcasecmp+0x10>
   16398:	8b 35       	cpi	r24, 0x5B	; 91
   1639a:	0c f4       	brge	.+2      	; 0x1639e <strcasecmp+0x10>
   1639c:	80 5e       	subi	r24, 0xE0	; 224
   1639e:	61 91       	ld	r22, Z+
   163a0:	61 34       	cpi	r22, 0x41	; 65
   163a2:	1c f0       	brlt	.+6      	; 0x163aa <strcasecmp+0x1c>
   163a4:	6b 35       	cpi	r22, 0x5B	; 91
   163a6:	0c f4       	brge	.+2      	; 0x163aa <strcasecmp+0x1c>
   163a8:	60 5e       	subi	r22, 0xE0	; 224
   163aa:	86 1b       	sub	r24, r22
   163ac:	61 11       	cpse	r22, r1
   163ae:	89 f3       	breq	.-30     	; 0x16392 <strcasecmp+0x4>
   163b0:	99 0b       	sbc	r25, r25
   163b2:	08 95       	ret

000163b4 <strchr>:
   163b4:	fc 01       	movw	r30, r24
   163b6:	81 91       	ld	r24, Z+
   163b8:	86 17       	cp	r24, r22
   163ba:	21 f0       	breq	.+8      	; 0x163c4 <strchr+0x10>
   163bc:	88 23       	and	r24, r24
   163be:	d9 f7       	brne	.-10     	; 0x163b6 <strchr+0x2>
   163c0:	99 27       	eor	r25, r25
   163c2:	08 95       	ret
   163c4:	31 97       	sbiw	r30, 0x01	; 1
   163c6:	cf 01       	movw	r24, r30
   163c8:	08 95       	ret

000163ca <strcmp>:
   163ca:	fb 01       	movw	r30, r22
   163cc:	dc 01       	movw	r26, r24
   163ce:	8d 91       	ld	r24, X+
   163d0:	01 90       	ld	r0, Z+
   163d2:	80 19       	sub	r24, r0
   163d4:	01 10       	cpse	r0, r1
   163d6:	d9 f3       	breq	.-10     	; 0x163ce <strcmp+0x4>
   163d8:	99 0b       	sbc	r25, r25
   163da:	08 95       	ret

000163dc <strcpy>:
   163dc:	fb 01       	movw	r30, r22
   163de:	dc 01       	movw	r26, r24
   163e0:	01 90       	ld	r0, Z+
   163e2:	0d 92       	st	X+, r0
   163e4:	00 20       	and	r0, r0
   163e6:	e1 f7       	brne	.-8      	; 0x163e0 <strcpy+0x4>
   163e8:	08 95       	ret

000163ea <strncpy>:
   163ea:	fb 01       	movw	r30, r22
   163ec:	dc 01       	movw	r26, r24
   163ee:	41 50       	subi	r20, 0x01	; 1
   163f0:	50 40       	sbci	r21, 0x00	; 0
   163f2:	48 f0       	brcs	.+18     	; 0x16406 <strncpy+0x1c>
   163f4:	01 90       	ld	r0, Z+
   163f6:	0d 92       	st	X+, r0
   163f8:	00 20       	and	r0, r0
   163fa:	c9 f7       	brne	.-14     	; 0x163ee <strncpy+0x4>
   163fc:	01 c0       	rjmp	.+2      	; 0x16400 <strncpy+0x16>
   163fe:	1d 92       	st	X+, r1
   16400:	41 50       	subi	r20, 0x01	; 1
   16402:	50 40       	sbci	r21, 0x00	; 0
   16404:	e0 f7       	brcc	.-8      	; 0x163fe <strncpy+0x14>
   16406:	08 95       	ret

00016408 <strnlen>:
   16408:	fc 01       	movw	r30, r24
   1640a:	61 50       	subi	r22, 0x01	; 1
   1640c:	70 40       	sbci	r23, 0x00	; 0
   1640e:	01 90       	ld	r0, Z+
   16410:	01 10       	cpse	r0, r1
   16412:	d8 f7       	brcc	.-10     	; 0x1640a <strnlen+0x2>
   16414:	80 95       	com	r24
   16416:	90 95       	com	r25
   16418:	8e 0f       	add	r24, r30
   1641a:	9f 1f       	adc	r25, r31
   1641c:	08 95       	ret

0001641e <strtok_r>:
   1641e:	fa 01       	movw	r30, r20
   16420:	a1 91       	ld	r26, Z+
   16422:	b0 81       	ld	r27, Z
   16424:	00 97       	sbiw	r24, 0x00	; 0
   16426:	19 f4       	brne	.+6      	; 0x1642e <strtok_r+0x10>
   16428:	10 97       	sbiw	r26, 0x00	; 0
   1642a:	e1 f0       	breq	.+56     	; 0x16464 <strtok_r+0x46>
   1642c:	cd 01       	movw	r24, r26
   1642e:	dc 01       	movw	r26, r24
   16430:	cd 01       	movw	r24, r26
   16432:	0d 90       	ld	r0, X+
   16434:	00 20       	and	r0, r0
   16436:	11 f4       	brne	.+4      	; 0x1643c <strtok_r+0x1e>
   16438:	c0 01       	movw	r24, r0
   1643a:	13 c0       	rjmp	.+38     	; 0x16462 <strtok_r+0x44>
   1643c:	fb 01       	movw	r30, r22
   1643e:	21 91       	ld	r18, Z+
   16440:	22 23       	and	r18, r18
   16442:	19 f0       	breq	.+6      	; 0x1644a <strtok_r+0x2c>
   16444:	20 15       	cp	r18, r0
   16446:	d9 f7       	brne	.-10     	; 0x1643e <strtok_r+0x20>
   16448:	f3 cf       	rjmp	.-26     	; 0x16430 <strtok_r+0x12>
   1644a:	fb 01       	movw	r30, r22
   1644c:	21 91       	ld	r18, Z+
   1644e:	20 15       	cp	r18, r0
   16450:	19 f4       	brne	.+6      	; 0x16458 <strtok_r+0x3a>
   16452:	1e 92       	st	-X, r1
   16454:	11 96       	adiw	r26, 0x01	; 1
   16456:	06 c0       	rjmp	.+12     	; 0x16464 <strtok_r+0x46>
   16458:	22 23       	and	r18, r18
   1645a:	c1 f7       	brne	.-16     	; 0x1644c <strtok_r+0x2e>
   1645c:	0d 90       	ld	r0, X+
   1645e:	00 20       	and	r0, r0
   16460:	a1 f7       	brne	.-24     	; 0x1644a <strtok_r+0x2c>
   16462:	d0 01       	movw	r26, r0
   16464:	fa 01       	movw	r30, r20
   16466:	a1 93       	st	Z+, r26
   16468:	b0 83       	st	Z, r27
   1646a:	08 95       	ret

0001646c <__mulhi_const_10>:
   1646c:	7a e0       	ldi	r23, 0x0A	; 10
   1646e:	97 9f       	mul	r25, r23
   16470:	90 2d       	mov	r25, r0
   16472:	87 9f       	mul	r24, r23
   16474:	80 2d       	mov	r24, r0
   16476:	91 0d       	add	r25, r1
   16478:	11 24       	eor	r1, r1
   1647a:	08 95       	ret

0001647c <fputc>:
   1647c:	0f 93       	push	r16
   1647e:	1f 93       	push	r17
   16480:	cf 93       	push	r28
   16482:	df 93       	push	r29
   16484:	8c 01       	movw	r16, r24
   16486:	eb 01       	movw	r28, r22
   16488:	8b 81       	ldd	r24, Y+3	; 0x03
   1648a:	81 ff       	sbrs	r24, 1
   1648c:	1b c0       	rjmp	.+54     	; 0x164c4 <fputc+0x48>
   1648e:	82 ff       	sbrs	r24, 2
   16490:	0d c0       	rjmp	.+26     	; 0x164ac <fputc+0x30>
   16492:	2e 81       	ldd	r18, Y+6	; 0x06
   16494:	3f 81       	ldd	r19, Y+7	; 0x07
   16496:	8c 81       	ldd	r24, Y+4	; 0x04
   16498:	9d 81       	ldd	r25, Y+5	; 0x05
   1649a:	28 17       	cp	r18, r24
   1649c:	39 07       	cpc	r19, r25
   1649e:	64 f4       	brge	.+24     	; 0x164b8 <fputc+0x3c>
   164a0:	e8 81       	ld	r30, Y
   164a2:	f9 81       	ldd	r31, Y+1	; 0x01
   164a4:	01 93       	st	Z+, r16
   164a6:	e8 83       	st	Y, r30
   164a8:	f9 83       	std	Y+1, r31	; 0x01
   164aa:	06 c0       	rjmp	.+12     	; 0x164b8 <fputc+0x3c>
   164ac:	e8 85       	ldd	r30, Y+8	; 0x08
   164ae:	f9 85       	ldd	r31, Y+9	; 0x09
   164b0:	80 2f       	mov	r24, r16
   164b2:	19 95       	eicall
   164b4:	00 97       	sbiw	r24, 0x00	; 0
   164b6:	31 f4       	brne	.+12     	; 0x164c4 <fputc+0x48>
   164b8:	8e 81       	ldd	r24, Y+6	; 0x06
   164ba:	9f 81       	ldd	r25, Y+7	; 0x07
   164bc:	01 96       	adiw	r24, 0x01	; 1
   164be:	8e 83       	std	Y+6, r24	; 0x06
   164c0:	9f 83       	std	Y+7, r25	; 0x07
   164c2:	02 c0       	rjmp	.+4      	; 0x164c8 <fputc+0x4c>
   164c4:	0f ef       	ldi	r16, 0xFF	; 255
   164c6:	1f ef       	ldi	r17, 0xFF	; 255
   164c8:	c8 01       	movw	r24, r16
   164ca:	df 91       	pop	r29
   164cc:	cf 91       	pop	r28
   164ce:	1f 91       	pop	r17
   164d0:	0f 91       	pop	r16
   164d2:	08 95       	ret

000164d4 <sprintf>:
   164d4:	0f 93       	push	r16
   164d6:	1f 93       	push	r17
   164d8:	cf 93       	push	r28
   164da:	df 93       	push	r29
   164dc:	cd b7       	in	r28, 0x3d	; 61
   164de:	de b7       	in	r29, 0x3e	; 62
   164e0:	2e 97       	sbiw	r28, 0x0e	; 14
   164e2:	cd bf       	out	0x3d, r28	; 61
   164e4:	de bf       	out	0x3e, r29	; 62
   164e6:	0e 89       	ldd	r16, Y+22	; 0x16
   164e8:	1f 89       	ldd	r17, Y+23	; 0x17
   164ea:	86 e0       	ldi	r24, 0x06	; 6
   164ec:	8c 83       	std	Y+4, r24	; 0x04
   164ee:	09 83       	std	Y+1, r16	; 0x01
   164f0:	1a 83       	std	Y+2, r17	; 0x02
   164f2:	8f ef       	ldi	r24, 0xFF	; 255
   164f4:	9f e7       	ldi	r25, 0x7F	; 127
   164f6:	8d 83       	std	Y+5, r24	; 0x05
   164f8:	9e 83       	std	Y+6, r25	; 0x06
   164fa:	ae 01       	movw	r20, r28
   164fc:	46 5e       	subi	r20, 0xE6	; 230
   164fe:	5f 4f       	sbci	r21, 0xFF	; 255
   16500:	ce 01       	movw	r24, r28
   16502:	01 96       	adiw	r24, 0x01	; 1
   16504:	68 8d       	ldd	r22, Y+24	; 0x18
   16506:	79 8d       	ldd	r23, Y+25	; 0x19
   16508:	0e 94 1b a8 	call	0x15036	; 0x15036 <vfprintf>
   1650c:	ef 81       	ldd	r30, Y+7	; 0x07
   1650e:	f8 85       	ldd	r31, Y+8	; 0x08
   16510:	e0 0f       	add	r30, r16
   16512:	f1 1f       	adc	r31, r17
   16514:	10 82       	st	Z, r1
   16516:	2e 96       	adiw	r28, 0x0e	; 14
   16518:	cd bf       	out	0x3d, r28	; 61
   1651a:	de bf       	out	0x3e, r29	; 62
   1651c:	df 91       	pop	r29
   1651e:	cf 91       	pop	r28
   16520:	1f 91       	pop	r17
   16522:	0f 91       	pop	r16
   16524:	08 95       	ret

00016526 <sprintf_P>:
   16526:	0f 93       	push	r16
   16528:	1f 93       	push	r17
   1652a:	cf 93       	push	r28
   1652c:	df 93       	push	r29
   1652e:	cd b7       	in	r28, 0x3d	; 61
   16530:	de b7       	in	r29, 0x3e	; 62
   16532:	2e 97       	sbiw	r28, 0x0e	; 14
   16534:	cd bf       	out	0x3d, r28	; 61
   16536:	de bf       	out	0x3e, r29	; 62
   16538:	0e 89       	ldd	r16, Y+22	; 0x16
   1653a:	1f 89       	ldd	r17, Y+23	; 0x17
   1653c:	8e e0       	ldi	r24, 0x0E	; 14
   1653e:	8c 83       	std	Y+4, r24	; 0x04
   16540:	09 83       	std	Y+1, r16	; 0x01
   16542:	1a 83       	std	Y+2, r17	; 0x02
   16544:	8f ef       	ldi	r24, 0xFF	; 255
   16546:	9f e7       	ldi	r25, 0x7F	; 127
   16548:	8d 83       	std	Y+5, r24	; 0x05
   1654a:	9e 83       	std	Y+6, r25	; 0x06
   1654c:	ae 01       	movw	r20, r28
   1654e:	46 5e       	subi	r20, 0xE6	; 230
   16550:	5f 4f       	sbci	r21, 0xFF	; 255
   16552:	ce 01       	movw	r24, r28
   16554:	01 96       	adiw	r24, 0x01	; 1
   16556:	68 8d       	ldd	r22, Y+24	; 0x18
   16558:	79 8d       	ldd	r23, Y+25	; 0x19
   1655a:	0e 94 1b a8 	call	0x15036	; 0x15036 <vfprintf>
   1655e:	ef 81       	ldd	r30, Y+7	; 0x07
   16560:	f8 85       	ldd	r31, Y+8	; 0x08
   16562:	e0 0f       	add	r30, r16
   16564:	f1 1f       	adc	r31, r17
   16566:	10 82       	st	Z, r1
   16568:	2e 96       	adiw	r28, 0x0e	; 14
   1656a:	cd bf       	out	0x3d, r28	; 61
   1656c:	de bf       	out	0x3e, r29	; 62
   1656e:	df 91       	pop	r29
   16570:	cf 91       	pop	r28
   16572:	1f 91       	pop	r17
   16574:	0f 91       	pop	r16
   16576:	08 95       	ret

00016578 <__ultoa_invert>:
   16578:	fa 01       	movw	r30, r20
   1657a:	aa 27       	eor	r26, r26
   1657c:	28 30       	cpi	r18, 0x08	; 8
   1657e:	51 f1       	breq	.+84     	; 0x165d4 <__ultoa_invert+0x5c>
   16580:	20 31       	cpi	r18, 0x10	; 16
   16582:	81 f1       	breq	.+96     	; 0x165e4 <__ultoa_invert+0x6c>
   16584:	e8 94       	clt
   16586:	6f 93       	push	r22
   16588:	6e 7f       	andi	r22, 0xFE	; 254
   1658a:	6e 5f       	subi	r22, 0xFE	; 254
   1658c:	7f 4f       	sbci	r23, 0xFF	; 255
   1658e:	8f 4f       	sbci	r24, 0xFF	; 255
   16590:	9f 4f       	sbci	r25, 0xFF	; 255
   16592:	af 4f       	sbci	r26, 0xFF	; 255
   16594:	b1 e0       	ldi	r27, 0x01	; 1
   16596:	3e d0       	rcall	.+124    	; 0x16614 <__ultoa_invert+0x9c>
   16598:	b4 e0       	ldi	r27, 0x04	; 4
   1659a:	3c d0       	rcall	.+120    	; 0x16614 <__ultoa_invert+0x9c>
   1659c:	67 0f       	add	r22, r23
   1659e:	78 1f       	adc	r23, r24
   165a0:	89 1f       	adc	r24, r25
   165a2:	9a 1f       	adc	r25, r26
   165a4:	a1 1d       	adc	r26, r1
   165a6:	68 0f       	add	r22, r24
   165a8:	79 1f       	adc	r23, r25
   165aa:	8a 1f       	adc	r24, r26
   165ac:	91 1d       	adc	r25, r1
   165ae:	a1 1d       	adc	r26, r1
   165b0:	6a 0f       	add	r22, r26
   165b2:	71 1d       	adc	r23, r1
   165b4:	81 1d       	adc	r24, r1
   165b6:	91 1d       	adc	r25, r1
   165b8:	a1 1d       	adc	r26, r1
   165ba:	20 d0       	rcall	.+64     	; 0x165fc <__ultoa_invert+0x84>
   165bc:	09 f4       	brne	.+2      	; 0x165c0 <__ultoa_invert+0x48>
   165be:	68 94       	set
   165c0:	3f 91       	pop	r19
   165c2:	2a e0       	ldi	r18, 0x0A	; 10
   165c4:	26 9f       	mul	r18, r22
   165c6:	11 24       	eor	r1, r1
   165c8:	30 19       	sub	r19, r0
   165ca:	30 5d       	subi	r19, 0xD0	; 208
   165cc:	31 93       	st	Z+, r19
   165ce:	de f6       	brtc	.-74     	; 0x16586 <__ultoa_invert+0xe>
   165d0:	cf 01       	movw	r24, r30
   165d2:	08 95       	ret
   165d4:	46 2f       	mov	r20, r22
   165d6:	47 70       	andi	r20, 0x07	; 7
   165d8:	40 5d       	subi	r20, 0xD0	; 208
   165da:	41 93       	st	Z+, r20
   165dc:	b3 e0       	ldi	r27, 0x03	; 3
   165de:	0f d0       	rcall	.+30     	; 0x165fe <__ultoa_invert+0x86>
   165e0:	c9 f7       	brne	.-14     	; 0x165d4 <__ultoa_invert+0x5c>
   165e2:	f6 cf       	rjmp	.-20     	; 0x165d0 <__ultoa_invert+0x58>
   165e4:	46 2f       	mov	r20, r22
   165e6:	4f 70       	andi	r20, 0x0F	; 15
   165e8:	40 5d       	subi	r20, 0xD0	; 208
   165ea:	4a 33       	cpi	r20, 0x3A	; 58
   165ec:	18 f0       	brcs	.+6      	; 0x165f4 <__ultoa_invert+0x7c>
   165ee:	49 5d       	subi	r20, 0xD9	; 217
   165f0:	31 fd       	sbrc	r19, 1
   165f2:	40 52       	subi	r20, 0x20	; 32
   165f4:	41 93       	st	Z+, r20
   165f6:	02 d0       	rcall	.+4      	; 0x165fc <__ultoa_invert+0x84>
   165f8:	a9 f7       	brne	.-22     	; 0x165e4 <__ultoa_invert+0x6c>
   165fa:	ea cf       	rjmp	.-44     	; 0x165d0 <__ultoa_invert+0x58>
   165fc:	b4 e0       	ldi	r27, 0x04	; 4
   165fe:	a6 95       	lsr	r26
   16600:	97 95       	ror	r25
   16602:	87 95       	ror	r24
   16604:	77 95       	ror	r23
   16606:	67 95       	ror	r22
   16608:	ba 95       	dec	r27
   1660a:	c9 f7       	brne	.-14     	; 0x165fe <__ultoa_invert+0x86>
   1660c:	00 97       	sbiw	r24, 0x00	; 0
   1660e:	61 05       	cpc	r22, r1
   16610:	71 05       	cpc	r23, r1
   16612:	08 95       	ret
   16614:	9b 01       	movw	r18, r22
   16616:	ac 01       	movw	r20, r24
   16618:	0a 2e       	mov	r0, r26
   1661a:	06 94       	lsr	r0
   1661c:	57 95       	ror	r21
   1661e:	47 95       	ror	r20
   16620:	37 95       	ror	r19
   16622:	27 95       	ror	r18
   16624:	ba 95       	dec	r27
   16626:	c9 f7       	brne	.-14     	; 0x1661a <__ultoa_invert+0xa2>
   16628:	62 0f       	add	r22, r18
   1662a:	73 1f       	adc	r23, r19
   1662c:	84 1f       	adc	r24, r20
   1662e:	95 1f       	adc	r25, r21
   16630:	a0 1d       	adc	r26, r0
   16632:	08 95       	ret

00016634 <arb_createMemIntsOn>:
   16634:	0f 92       	push	r0
   16636:	0f b6       	in	r0, 0x3f	; 63
   16638:	0f 93       	push	r16
   1663a:	00 2d       	mov	r16, r0
   1663c:	00 68       	ori	r16, 0x80	; 128
   1663e:	00 2e       	mov	r0, r16
   16640:	0f 91       	pop	r16
   16642:	0f 92       	push	r0
   16644:	1f 92       	push	r1
   16646:	11 24       	eor	r1, r1
   16648:	2f 92       	push	r2
   1664a:	3f 92       	push	r3
   1664c:	4f 92       	push	r4
   1664e:	5f 92       	push	r5
   16650:	6f 92       	push	r6
   16652:	7f 92       	push	r7
   16654:	8f 92       	push	r8
   16656:	9f 92       	push	r9
   16658:	af 92       	push	r10
   1665a:	bf 92       	push	r11
   1665c:	cf 92       	push	r12
   1665e:	df 92       	push	r13
   16660:	ef 92       	push	r14
   16662:	ff 92       	push	r15
   16664:	0f 93       	push	r16
   16666:	1f 93       	push	r17
   16668:	2f 93       	push	r18
   1666a:	3f 93       	push	r19
   1666c:	4f 93       	push	r20
   1666e:	5f 93       	push	r21
   16670:	6f 93       	push	r22
   16672:	7f 93       	push	r23
   16674:	8f 93       	push	r24
   16676:	9f 93       	push	r25
   16678:	af 93       	push	r26
   1667a:	bf 93       	push	r27
   1667c:	cf 93       	push	r28
   1667e:	df 93       	push	r29
   16680:	ef 93       	push	r30
   16682:	ff 93       	push	r31
   16684:	e0 91 ab 22 	lds	r30, 0x22AB
   16688:	f0 91 ac 22 	lds	r31, 0x22AC
   1668c:	06 80       	ldd	r0, Z+6	; 0x06
   1668e:	f7 81       	ldd	r31, Z+7	; 0x07
   16690:	e0 2d       	mov	r30, r0
   16692:	01 90       	ld	r0, Z+
   16694:	f0 81       	ld	r31, Z
   16696:	e0 2d       	mov	r30, r0
   16698:	e0 93 e8 27 	sts	0x27E8, r30
   1669c:	f0 93 e9 27 	sts	0x27E9, r31
   166a0:	2d b7       	in	r18, 0x3d	; 61
   166a2:	4e b7       	in	r20, 0x3e	; 62
   166a4:	94 2f       	mov	r25, r20
   166a6:	80 e0       	ldi	r24, 0x00	; 0
   166a8:	30 e0       	ldi	r19, 0x00	; 0
   166aa:	82 2b       	or	r24, r18
   166ac:	93 2b       	or	r25, r19
   166ae:	81 87       	std	Z+9, r24	; 0x09
   166b0:	92 87       	std	Z+10, r25	; 0x0a
   166b2:	8f ef       	ldi	r24, 0xFF	; 255
   166b4:	8d bf       	out	0x3d, r24	; 61
   166b6:	8f e3       	ldi	r24, 0x3F	; 63
   166b8:	8e bf       	out	0x3e, r24	; 62
   166ba:	c0 91 3d 00 	lds	r28, 0x003D
   166be:	d0 91 3e 00 	lds	r29, 0x003E
   166c2:	e0 91 ab 22 	lds	r30, 0x22AB
   166c6:	f0 91 ac 22 	lds	r31, 0x22AC
   166ca:	06 80       	ldd	r0, Z+6	; 0x06
   166cc:	f7 81       	ldd	r31, Z+7	; 0x07
   166ce:	e0 2d       	mov	r30, r0
   166d0:	a0 81       	ld	r26, Z
   166d2:	b1 81       	ldd	r27, Z+1	; 0x01
   166d4:	a0 93 e0 27 	sts	0x27E0, r26
   166d8:	b0 93 e1 27 	sts	0x27E1, r27
   166dc:	1b 96       	adiw	r26, 0x0b	; 11
   166de:	ed 91       	ld	r30, X+
   166e0:	fc 91       	ld	r31, X
   166e2:	1c 97       	sbiw	r26, 0x0c	; 12
   166e4:	80 81       	ld	r24, Z
   166e6:	91 81       	ldd	r25, Z+1	; 0x01
   166e8:	8d 5a       	subi	r24, 0xAD	; 173
   166ea:	9e 4d       	sbci	r25, 0xDE	; 222
   166ec:	21 f0       	breq	.+8      	; 0x166f6 <arb_createMemIntsOn+0xc2>
   166ee:	ab 2b       	or	r26, r27
   166f0:	11 f0       	breq	.+4      	; 0x166f6 <arb_createMemIntsOn+0xc2>
   166f2:	0e 94 38 86 	call	0x10c70	; 0x10c70 <arb_stackOverflow>
   166f6:	80 91 df 27 	lds	r24, 0x27DF
   166fa:	88 23       	and	r24, r24
   166fc:	71 f0       	breq	.+28     	; 0x1671a <arb_createMemIntsOn+0xe6>
   166fe:	00 91 dd 27 	lds	r16, 0x27DD
   16702:	10 91 de 27 	lds	r17, 0x27DE
   16706:	80 91 db 27 	lds	r24, 0x27DB
   1670a:	90 91 dc 27 	lds	r25, 0x27DC
   1670e:	0e 94 5f af 	call	0x15ebe	; 0x15ebe <malloc>
   16712:	f8 01       	movw	r30, r16
   16714:	80 83       	st	Z, r24
   16716:	91 83       	std	Z+1, r25	; 0x01
   16718:	08 c0       	rjmp	.+16     	; 0x1672a <arb_createMemIntsOn+0xf6>
   1671a:	e0 91 dd 27 	lds	r30, 0x27DD
   1671e:	f0 91 de 27 	lds	r31, 0x27DE
   16722:	80 81       	ld	r24, Z
   16724:	91 81       	ldd	r25, Z+1	; 0x01
   16726:	0e 94 f5 af 	call	0x15fea	; 0x15fea <free>
   1672a:	e0 91 ab 22 	lds	r30, 0x22AB
   1672e:	f0 91 ac 22 	lds	r31, 0x22AC
   16732:	06 80       	ldd	r0, Z+6	; 0x06
   16734:	f7 81       	ldd	r31, Z+7	; 0x07
   16736:	e0 2d       	mov	r30, r0
   16738:	01 90       	ld	r0, Z+
   1673a:	f0 81       	ld	r31, Z
   1673c:	e0 2d       	mov	r30, r0
   1673e:	e0 93 e8 27 	sts	0x27E8, r30
   16742:	f0 93 e9 27 	sts	0x27E9, r31
   16746:	81 85       	ldd	r24, Z+9	; 0x09
   16748:	92 85       	ldd	r25, Z+10	; 0x0a
   1674a:	8d bf       	out	0x3d, r24	; 61
   1674c:	9e bf       	out	0x3e, r25	; 62
   1674e:	ff 91       	pop	r31
   16750:	ef 91       	pop	r30
   16752:	df 91       	pop	r29
   16754:	cf 91       	pop	r28
   16756:	bf 91       	pop	r27
   16758:	af 91       	pop	r26
   1675a:	9f 91       	pop	r25
   1675c:	8f 91       	pop	r24
   1675e:	7f 91       	pop	r23
   16760:	6f 91       	pop	r22
   16762:	5f 91       	pop	r21
   16764:	4f 91       	pop	r20
   16766:	3f 91       	pop	r19
   16768:	2f 91       	pop	r18
   1676a:	1f 91       	pop	r17
   1676c:	0f 91       	pop	r16
   1676e:	ff 90       	pop	r15
   16770:	ef 90       	pop	r14
   16772:	df 90       	pop	r13
   16774:	cf 90       	pop	r12
   16776:	bf 90       	pop	r11
   16778:	af 90       	pop	r10
   1677a:	9f 90       	pop	r9
   1677c:	8f 90       	pop	r8
   1677e:	7f 90       	pop	r7
   16780:	6f 90       	pop	r6
   16782:	5f 90       	pop	r5
   16784:	4f 90       	pop	r4
   16786:	3f 90       	pop	r3
   16788:	2f 90       	pop	r2
   1678a:	1f 90       	pop	r1
   1678c:	0f 90       	pop	r0
   1678e:	0f be       	out	0x3f, r0	; 63
   16790:	0f 90       	pop	r0
   16792:	08 95       	ret

00016794 <arb_createMemIntsOff>:
   16794:	0f 92       	push	r0
   16796:	0f b6       	in	r0, 0x3f	; 63
   16798:	0f 92       	push	r0
   1679a:	1f 92       	push	r1
   1679c:	11 24       	eor	r1, r1
   1679e:	2f 92       	push	r2
   167a0:	3f 92       	push	r3
   167a2:	4f 92       	push	r4
   167a4:	5f 92       	push	r5
   167a6:	6f 92       	push	r6
   167a8:	7f 92       	push	r7
   167aa:	8f 92       	push	r8
   167ac:	9f 92       	push	r9
   167ae:	af 92       	push	r10
   167b0:	bf 92       	push	r11
   167b2:	cf 92       	push	r12
   167b4:	df 92       	push	r13
   167b6:	ef 92       	push	r14
   167b8:	ff 92       	push	r15
   167ba:	0f 93       	push	r16
   167bc:	1f 93       	push	r17
   167be:	2f 93       	push	r18
   167c0:	3f 93       	push	r19
   167c2:	4f 93       	push	r20
   167c4:	5f 93       	push	r21
   167c6:	6f 93       	push	r22
   167c8:	7f 93       	push	r23
   167ca:	8f 93       	push	r24
   167cc:	9f 93       	push	r25
   167ce:	af 93       	push	r26
   167d0:	bf 93       	push	r27
   167d2:	cf 93       	push	r28
   167d4:	df 93       	push	r29
   167d6:	ef 93       	push	r30
   167d8:	ff 93       	push	r31
   167da:	e0 91 ab 22 	lds	r30, 0x22AB
   167de:	f0 91 ac 22 	lds	r31, 0x22AC
   167e2:	06 80       	ldd	r0, Z+6	; 0x06
   167e4:	f7 81       	ldd	r31, Z+7	; 0x07
   167e6:	e0 2d       	mov	r30, r0
   167e8:	01 90       	ld	r0, Z+
   167ea:	f0 81       	ld	r31, Z
   167ec:	e0 2d       	mov	r30, r0
   167ee:	e0 93 e8 27 	sts	0x27E8, r30
   167f2:	f0 93 e9 27 	sts	0x27E9, r31
   167f6:	2d b7       	in	r18, 0x3d	; 61
   167f8:	4e b7       	in	r20, 0x3e	; 62
   167fa:	94 2f       	mov	r25, r20
   167fc:	80 e0       	ldi	r24, 0x00	; 0
   167fe:	30 e0       	ldi	r19, 0x00	; 0
   16800:	82 2b       	or	r24, r18
   16802:	93 2b       	or	r25, r19
   16804:	81 87       	std	Z+9, r24	; 0x09
   16806:	92 87       	std	Z+10, r25	; 0x0a
   16808:	8f ef       	ldi	r24, 0xFF	; 255
   1680a:	8d bf       	out	0x3d, r24	; 61
   1680c:	8f e3       	ldi	r24, 0x3F	; 63
   1680e:	8e bf       	out	0x3e, r24	; 62
   16810:	c0 91 3d 00 	lds	r28, 0x003D
   16814:	d0 91 3e 00 	lds	r29, 0x003E
   16818:	e0 91 ab 22 	lds	r30, 0x22AB
   1681c:	f0 91 ac 22 	lds	r31, 0x22AC
   16820:	06 80       	ldd	r0, Z+6	; 0x06
   16822:	f7 81       	ldd	r31, Z+7	; 0x07
   16824:	e0 2d       	mov	r30, r0
   16826:	a0 81       	ld	r26, Z
   16828:	b1 81       	ldd	r27, Z+1	; 0x01
   1682a:	a0 93 e0 27 	sts	0x27E0, r26
   1682e:	b0 93 e1 27 	sts	0x27E1, r27
   16832:	1b 96       	adiw	r26, 0x0b	; 11
   16834:	ed 91       	ld	r30, X+
   16836:	fc 91       	ld	r31, X
   16838:	1c 97       	sbiw	r26, 0x0c	; 12
   1683a:	80 81       	ld	r24, Z
   1683c:	91 81       	ldd	r25, Z+1	; 0x01
   1683e:	8d 5a       	subi	r24, 0xAD	; 173
   16840:	9e 4d       	sbci	r25, 0xDE	; 222
   16842:	21 f0       	breq	.+8      	; 0x1684c <arb_createMemIntsOff+0xb8>
   16844:	ab 2b       	or	r26, r27
   16846:	11 f0       	breq	.+4      	; 0x1684c <arb_createMemIntsOff+0xb8>
   16848:	0e 94 38 86 	call	0x10c70	; 0x10c70 <arb_stackOverflow>
   1684c:	80 91 df 27 	lds	r24, 0x27DF
   16850:	88 23       	and	r24, r24
   16852:	71 f0       	breq	.+28     	; 0x16870 <arb_createMemIntsOff+0xdc>
   16854:	00 91 dd 27 	lds	r16, 0x27DD
   16858:	10 91 de 27 	lds	r17, 0x27DE
   1685c:	80 91 db 27 	lds	r24, 0x27DB
   16860:	90 91 dc 27 	lds	r25, 0x27DC
   16864:	0e 94 5f af 	call	0x15ebe	; 0x15ebe <malloc>
   16868:	f8 01       	movw	r30, r16
   1686a:	80 83       	st	Z, r24
   1686c:	91 83       	std	Z+1, r25	; 0x01
   1686e:	08 c0       	rjmp	.+16     	; 0x16880 <arb_createMemIntsOff+0xec>
   16870:	e0 91 dd 27 	lds	r30, 0x27DD
   16874:	f0 91 de 27 	lds	r31, 0x27DE
   16878:	80 81       	ld	r24, Z
   1687a:	91 81       	ldd	r25, Z+1	; 0x01
   1687c:	0e 94 f5 af 	call	0x15fea	; 0x15fea <free>
   16880:	e0 91 ab 22 	lds	r30, 0x22AB
   16884:	f0 91 ac 22 	lds	r31, 0x22AC
   16888:	06 80       	ldd	r0, Z+6	; 0x06
   1688a:	f7 81       	ldd	r31, Z+7	; 0x07
   1688c:	e0 2d       	mov	r30, r0
   1688e:	01 90       	ld	r0, Z+
   16890:	f0 81       	ld	r31, Z
   16892:	e0 2d       	mov	r30, r0
   16894:	e0 93 e8 27 	sts	0x27E8, r30
   16898:	f0 93 e9 27 	sts	0x27E9, r31
   1689c:	81 85       	ldd	r24, Z+9	; 0x09
   1689e:	92 85       	ldd	r25, Z+10	; 0x0a
   168a0:	8d bf       	out	0x3d, r24	; 61
   168a2:	9e bf       	out	0x3e, r25	; 62
   168a4:	ff 91       	pop	r31
   168a6:	ef 91       	pop	r30
   168a8:	df 91       	pop	r29
   168aa:	cf 91       	pop	r28
   168ac:	bf 91       	pop	r27
   168ae:	af 91       	pop	r26
   168b0:	9f 91       	pop	r25
   168b2:	8f 91       	pop	r24
   168b4:	7f 91       	pop	r23
   168b6:	6f 91       	pop	r22
   168b8:	5f 91       	pop	r21
   168ba:	4f 91       	pop	r20
   168bc:	3f 91       	pop	r19
   168be:	2f 91       	pop	r18
   168c0:	1f 91       	pop	r17
   168c2:	0f 91       	pop	r16
   168c4:	ff 90       	pop	r15
   168c6:	ef 90       	pop	r14
   168c8:	df 90       	pop	r13
   168ca:	cf 90       	pop	r12
   168cc:	bf 90       	pop	r11
   168ce:	af 90       	pop	r10
   168d0:	9f 90       	pop	r9
   168d2:	8f 90       	pop	r8
   168d4:	7f 90       	pop	r7
   168d6:	6f 90       	pop	r6
   168d8:	5f 90       	pop	r5
   168da:	4f 90       	pop	r4
   168dc:	3f 90       	pop	r3
   168de:	2f 90       	pop	r2
   168e0:	1f 90       	pop	r1
   168e2:	0f 90       	pop	r0
   168e4:	0f be       	out	0x3f, r0	; 63
   168e6:	0f 90       	pop	r0
   168e8:	08 95       	ret

000168ea <arb_free>:
   168ea:	cf 93       	push	r28
   168ec:	df 93       	push	r29
   168ee:	ec 01       	movw	r28, r24
   168f0:	0e 94 f0 80 	call	0x101e0	; 0x101e0 <arb_sysTimerEnabled>
   168f4:	88 23       	and	r24, r24
   168f6:	b1 f0       	breq	.+44     	; 0x16924 <arb_free+0x3a>
   168f8:	0f b6       	in	r0, 0x3f	; 63
   168fa:	07 fe       	sbrs	r0, 7
   168fc:	0a c0       	rjmp	.+20     	; 0x16912 <arb_free+0x28>
   168fe:	f8 94       	cli
   16900:	10 92 df 27 	sts	0x27DF, r1
   16904:	c0 93 dd 27 	sts	0x27DD, r28
   16908:	d0 93 de 27 	sts	0x27DE, r29
   1690c:	0e 94 1a b3 	call	0x16634	; 0x16634 <arb_createMemIntsOn>
   16910:	0d c0       	rjmp	.+26     	; 0x1692c <arb_free+0x42>
   16912:	10 92 df 27 	sts	0x27DF, r1
   16916:	c0 93 dd 27 	sts	0x27DD, r28
   1691a:	d0 93 de 27 	sts	0x27DE, r29
   1691e:	0e 94 ca b3 	call	0x16794	; 0x16794 <arb_createMemIntsOff>
   16922:	04 c0       	rjmp	.+8      	; 0x1692c <arb_free+0x42>
   16924:	88 81       	ld	r24, Y
   16926:	99 81       	ldd	r25, Y+1	; 0x01
   16928:	0e 94 f5 af 	call	0x15fea	; 0x15fea <free>
   1692c:	df 91       	pop	r29
   1692e:	cf 91       	pop	r28
   16930:	08 95       	ret

00016932 <arb_malloc>:
   16932:	0f 93       	push	r16
   16934:	1f 93       	push	r17
   16936:	cf 93       	push	r28
   16938:	df 93       	push	r29
   1693a:	8c 01       	movw	r16, r24
   1693c:	eb 01       	movw	r28, r22
   1693e:	0e 94 f0 80 	call	0x101e0	; 0x101e0 <arb_sysTimerEnabled>
   16942:	88 23       	and	r24, r24
   16944:	01 f1       	breq	.+64     	; 0x16986 <arb_malloc+0x54>
   16946:	0f b6       	in	r0, 0x3f	; 63
   16948:	07 fe       	sbrs	r0, 7
   1694a:	0f c0       	rjmp	.+30     	; 0x1696a <arb_malloc+0x38>
   1694c:	f8 94       	cli
   1694e:	81 e0       	ldi	r24, 0x01	; 1
   16950:	80 93 df 27 	sts	0x27DF, r24
   16954:	c0 93 dd 27 	sts	0x27DD, r28
   16958:	d0 93 de 27 	sts	0x27DE, r29
   1695c:	00 93 db 27 	sts	0x27DB, r16
   16960:	10 93 dc 27 	sts	0x27DC, r17
   16964:	0e 94 1a b3 	call	0x16634	; 0x16634 <arb_createMemIntsOn>
   16968:	13 c0       	rjmp	.+38     	; 0x16990 <arb_malloc+0x5e>
   1696a:	81 e0       	ldi	r24, 0x01	; 1
   1696c:	80 93 df 27 	sts	0x27DF, r24
   16970:	c0 93 dd 27 	sts	0x27DD, r28
   16974:	d0 93 de 27 	sts	0x27DE, r29
   16978:	00 93 db 27 	sts	0x27DB, r16
   1697c:	10 93 dc 27 	sts	0x27DC, r17
   16980:	0e 94 ca b3 	call	0x16794	; 0x16794 <arb_createMemIntsOff>
   16984:	05 c0       	rjmp	.+10     	; 0x16990 <arb_malloc+0x5e>
   16986:	c8 01       	movw	r24, r16
   16988:	0e 94 5f af 	call	0x15ebe	; 0x15ebe <malloc>
   1698c:	88 83       	st	Y, r24
   1698e:	99 83       	std	Y+1, r25	; 0x01
   16990:	df 91       	pop	r29
   16992:	cf 91       	pop	r28
   16994:	1f 91       	pop	r17
   16996:	0f 91       	pop	r16
   16998:	08 95       	ret

0001699a <__mulsi3>:
   1699a:	62 9f       	mul	r22, r18
   1699c:	d0 01       	movw	r26, r0
   1699e:	73 9f       	mul	r23, r19
   169a0:	f0 01       	movw	r30, r0
   169a2:	82 9f       	mul	r24, r18
   169a4:	e0 0d       	add	r30, r0
   169a6:	f1 1d       	adc	r31, r1
   169a8:	64 9f       	mul	r22, r20
   169aa:	e0 0d       	add	r30, r0
   169ac:	f1 1d       	adc	r31, r1
   169ae:	92 9f       	mul	r25, r18
   169b0:	f0 0d       	add	r31, r0
   169b2:	83 9f       	mul	r24, r19
   169b4:	f0 0d       	add	r31, r0
   169b6:	74 9f       	mul	r23, r20
   169b8:	f0 0d       	add	r31, r0
   169ba:	65 9f       	mul	r22, r21
   169bc:	f0 0d       	add	r31, r0
   169be:	99 27       	eor	r25, r25
   169c0:	72 9f       	mul	r23, r18
   169c2:	b0 0d       	add	r27, r0
   169c4:	e1 1d       	adc	r30, r1
   169c6:	f9 1f       	adc	r31, r25
   169c8:	63 9f       	mul	r22, r19
   169ca:	b0 0d       	add	r27, r0
   169cc:	e1 1d       	adc	r30, r1
   169ce:	f9 1f       	adc	r31, r25
   169d0:	bd 01       	movw	r22, r26
   169d2:	cf 01       	movw	r24, r30
   169d4:	11 24       	eor	r1, r1
   169d6:	08 95       	ret

000169d8 <__udivmodsi4>:
   169d8:	a1 e2       	ldi	r26, 0x21	; 33
   169da:	1a 2e       	mov	r1, r26
   169dc:	aa 1b       	sub	r26, r26
   169de:	bb 1b       	sub	r27, r27
   169e0:	fd 01       	movw	r30, r26
   169e2:	0d c0       	rjmp	.+26     	; 0x169fe <__udivmodsi4_ep>

000169e4 <__udivmodsi4_loop>:
   169e4:	aa 1f       	adc	r26, r26
   169e6:	bb 1f       	adc	r27, r27
   169e8:	ee 1f       	adc	r30, r30
   169ea:	ff 1f       	adc	r31, r31
   169ec:	a2 17       	cp	r26, r18
   169ee:	b3 07       	cpc	r27, r19
   169f0:	e4 07       	cpc	r30, r20
   169f2:	f5 07       	cpc	r31, r21
   169f4:	20 f0       	brcs	.+8      	; 0x169fe <__udivmodsi4_ep>
   169f6:	a2 1b       	sub	r26, r18
   169f8:	b3 0b       	sbc	r27, r19
   169fa:	e4 0b       	sbc	r30, r20
   169fc:	f5 0b       	sbc	r31, r21

000169fe <__udivmodsi4_ep>:
   169fe:	66 1f       	adc	r22, r22
   16a00:	77 1f       	adc	r23, r23
   16a02:	88 1f       	adc	r24, r24
   16a04:	99 1f       	adc	r25, r25
   16a06:	1a 94       	dec	r1
   16a08:	69 f7       	brne	.-38     	; 0x169e4 <__udivmodsi4_loop>
   16a0a:	60 95       	com	r22
   16a0c:	70 95       	com	r23
   16a0e:	80 95       	com	r24
   16a10:	90 95       	com	r25
   16a12:	9b 01       	movw	r18, r22
   16a14:	ac 01       	movw	r20, r24
   16a16:	bd 01       	movw	r22, r26
   16a18:	cf 01       	movw	r24, r30
   16a1a:	08 95       	ret

00016a1c <__divmodsi4>:
   16a1c:	97 fb       	bst	r25, 7
   16a1e:	09 2e       	mov	r0, r25
   16a20:	05 26       	eor	r0, r21
   16a22:	0e d0       	rcall	.+28     	; 0x16a40 <__divmodsi4_neg1>
   16a24:	57 fd       	sbrc	r21, 7
   16a26:	04 d0       	rcall	.+8      	; 0x16a30 <__divmodsi4_neg2>
   16a28:	d7 df       	rcall	.-82     	; 0x169d8 <__udivmodsi4>
   16a2a:	0a d0       	rcall	.+20     	; 0x16a40 <__divmodsi4_neg1>
   16a2c:	00 1c       	adc	r0, r0
   16a2e:	38 f4       	brcc	.+14     	; 0x16a3e <__divmodsi4_exit>

00016a30 <__divmodsi4_neg2>:
   16a30:	50 95       	com	r21
   16a32:	40 95       	com	r20
   16a34:	30 95       	com	r19
   16a36:	21 95       	neg	r18
   16a38:	3f 4f       	sbci	r19, 0xFF	; 255
   16a3a:	4f 4f       	sbci	r20, 0xFF	; 255
   16a3c:	5f 4f       	sbci	r21, 0xFF	; 255

00016a3e <__divmodsi4_exit>:
   16a3e:	08 95       	ret

00016a40 <__divmodsi4_neg1>:
   16a40:	f6 f7       	brtc	.-4      	; 0x16a3e <__divmodsi4_exit>
   16a42:	90 95       	com	r25
   16a44:	80 95       	com	r24
   16a46:	70 95       	com	r23
   16a48:	61 95       	neg	r22
   16a4a:	7f 4f       	sbci	r23, 0xFF	; 255
   16a4c:	8f 4f       	sbci	r24, 0xFF	; 255
   16a4e:	9f 4f       	sbci	r25, 0xFF	; 255
   16a50:	08 95       	ret

00016a52 <__tablejump_elpm__>:
   16a52:	07 90       	elpm	r0, Z+
   16a54:	f6 91       	elpm	r31, Z
   16a56:	e0 2d       	mov	r30, r0
   16a58:	19 94       	eijmp

00016a5a <_exit>:
   16a5a:	f8 94       	cli

00016a5c <__stop_program>:
   16a5c:	ff cf       	rjmp	.-2      	; 0x16a5c <__stop_program>
