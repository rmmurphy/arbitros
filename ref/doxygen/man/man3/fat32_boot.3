.TH "fat32_boot" 3 "Sun Mar 2 2014" "My Project" \" -*- nroff -*-
.ad l
.nh
.SH NAME
fat32_boot \- 
.PP
Boot sector for a FAT32 volume\&.  

.SH SYNOPSIS
.br
.PP
.PP
\fC#include <SdFatStructs\&.h>\fP
.SS "Data Fields"

.in +1c
.ti -1c
.RI "uint8_t \fBjump\fP [3]"
.br
.ti -1c
.RI "char \fBoemId\fP [8]"
.br
.ti -1c
.RI "uint16_t \fBbytesPerSector\fP"
.br
.ti -1c
.RI "uint8_t \fBsectorsPerCluster\fP"
.br
.ti -1c
.RI "uint16_t \fBreservedSectorCount\fP"
.br
.ti -1c
.RI "uint8_t \fBfatCount\fP"
.br
.ti -1c
.RI "uint16_t \fBrootDirEntryCount\fP"
.br
.ti -1c
.RI "uint16_t \fBtotalSectors16\fP"
.br
.ti -1c
.RI "uint8_t \fBmediaType\fP"
.br
.ti -1c
.RI "uint16_t \fBsectorsPerFat16\fP"
.br
.ti -1c
.RI "uint16_t \fBsectorsPerTrack\fP"
.br
.ti -1c
.RI "uint16_t \fBheadCount\fP"
.br
.ti -1c
.RI "uint32_t \fBhidddenSectors\fP"
.br
.ti -1c
.RI "uint32_t \fBtotalSectors32\fP"
.br
.ti -1c
.RI "uint32_t \fBsectorsPerFat32\fP"
.br
.ti -1c
.RI "uint16_t \fBfat32Flags\fP"
.br
.ti -1c
.RI "uint16_t \fBfat32Version\fP"
.br
.ti -1c
.RI "uint32_t \fBfat32RootCluster\fP"
.br
.ti -1c
.RI "uint16_t \fBfat32FSInfo\fP"
.br
.ti -1c
.RI "uint16_t \fBfat32BackBootBlock\fP"
.br
.ti -1c
.RI "uint8_t \fBfat32Reserved\fP [12]"
.br
.ti -1c
.RI "uint8_t \fBdriveNumber\fP"
.br
.ti -1c
.RI "uint8_t \fBreserved1\fP"
.br
.ti -1c
.RI "uint8_t \fBbootSignature\fP"
.br
.ti -1c
.RI "uint32_t \fBvolumeSerialNumber\fP"
.br
.ti -1c
.RI "char \fBvolumeLabel\fP [11]"
.br
.ti -1c
.RI "char \fBfileSystemType\fP [8]"
.br
.ti -1c
.RI "uint8_t \fBbootCode\fP [420]"
.br
.ti -1c
.RI "uint8_t \fBbootSectorSig0\fP"
.br
.ti -1c
.RI "uint8_t \fBbootSectorSig1\fP"
.br
.in -1c
.SH "Detailed Description"
.PP 
Boot sector for a FAT32 volume\&. 
.SH "Field Documentation"
.PP 
.SS "uint8_t bootCode[420]"
X86 boot code 
.SS "uint8_t bootSectorSig0"
must be 0X55 
.SS "uint8_t bootSectorSig1"
must be 0XAA 
.SS "uint8_t bootSignature"
0X29 if next three fields are valid 
.SS "uint16_t bytesPerSector"
The size of a hardware sector\&. Valid decimal values for this field are 512, 1024, 2048, and 4096\&. For most disks used in the United States, the value of this field is 512\&. 
.SS "uint8_t driveNumber"
Related to the BIOS physical drive number\&. Floppy drives are identified as 0x00 and physical hard disks are identified as 0x80, regardless of the number of physical disk drives\&. Typically, this value is set prior to issuing an INT 13h BIOS call to specify the device to access\&. The value is only relevant if the device is a boot device\&. 
.SS "uint16_t fat32BackBootBlock"
If nonzero, indicates the sector number in the reserved area of the volume of a copy of the boot record\&. Usually 6\&. No value other than 6 is recommended\&. 
.SS "uint16_t fat32Flags"
This field is only defined for FAT32 media and does not exist on FAT12 and FAT16 media\&. Bits 0-3 -- Zero-based number of active FAT\&. Only valid if mirroring is disabled\&. Bits 4-6 -- Reserved\&. Bit 7 -- 0 means the FAT is mirrored at runtime into all FATs\&. -- 1 means only one FAT is active; it is the one referenced in bits 0-3\&. Bits 8-15 -- Reserved\&. 
.SS "uint16_t fat32FSInfo"
Sector number of FSINFO structure in the reserved area of the FAT32 volume\&. Usually 1\&. 
.SS "uint8_t fat32Reserved[12]"
Reserved for future expansion\&. Code that formats FAT32 volumes should always set all of the bytes of this field to 0\&. 
.SS "uint32_t fat32RootCluster"
Cluster number of the first cluster of the root directory for FAT32\&. This usually 2 but not required to be 2\&. 
.SS "uint16_t fat32Version"
FAT32 version\&. High byte is major revision number\&. Low byte is minor revision number\&. Only 0\&.0 define\&. 
.SS "uint8_t fatCount"
The number of copies of the FAT on the volume\&. The value of this field is always 2\&. 
.SS "char fileSystemType[8]"
A text field with a value of FAT32\&. 
.SS "uint16_t headCount"
Number of heads for interrupt 0x13\&. Not used otherwise\&. 
.SS "uint32_t hidddenSectors"
Count of hidden sectors preceding the partition that contains this FAT volume\&. This field is generally only relevant for media visible on interrupt 0x13\&. 
.SS "uint8_t jump[3]"
The first three bytes of the boot sector must be valid, executable x 86-based CPU instructions\&. This includes a jump instruction that skips the next nonexecutable bytes\&. 
.SS "uint8_t mediaType"
This dates back to the old MS-DOS 1\&.x media determination and is no longer usually used for anything\&. 0xF8 is the standard value for fixed (nonremovable) media\&. For removable media, 0xF0 is frequently used\&. Legal values are 0xF0 or 0xF8-0xFF\&. 
.SS "char oemId[8]"
This is typically a string of characters that identifies the operating system that formatted the volume\&. 
.SS "uint8_t reserved1"
used by Windows NT - should be zero for FAT 
.SS "uint16_t reservedSectorCount"
The number of sectors preceding the start of the first FAT, including the boot sector\&. Must not be zero 
.SS "uint16_t rootDirEntryCount"
FAT12/FAT16 only\&. For FAT32 volumes, this field must be set to 0\&. 
.SS "uint8_t sectorsPerCluster"
Number of sectors per allocation unit\&. This value must be a power of 2 that is greater than 0\&. The legal values are 1, 2, 4, 8, 16, 32, 64, and 128\&. 128 should be avoided\&. 
.SS "uint16_t sectorsPerFat16"
On FAT32 volumes this field must be 0, and sectorsPerFat32 contains the FAT size count\&. 
.SS "uint32_t sectorsPerFat32"
Count of sectors occupied by one FAT on FAT32 volumes\&. 
.SS "uint16_t sectorsPerTrack"
Sectors per track for interrupt 0x13\&. Not used otherwise\&. 
.SS "uint16_t totalSectors16"
For FAT32 volumes, this field must be 0\&. 
.SS "uint32_t totalSectors32"
Contains the total number of sectors in the FAT32 volume\&. 
.SS "char volumeLabel[11]"
A field once used to store the volume label\&. The volume label is now stored as a special file in the root directory\&. 
.SS "uint32_t volumeSerialNumber"
A random serial number created when formatting a disk, which helps to distinguish between disks\&. Usually generated by combining date and time\&. 

.SH "Author"
.PP 
Generated automatically by Doxygen for My Project from the source code\&.
