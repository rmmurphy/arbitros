.TH "C:/arbitros/trunk/libraries/sd/SdFat/Sd2Card.h" 3 "Sun Mar 2 2014" "My Project" \" -*- nroff -*-
.ad l
.nh
.SH NAME
C:/arbitros/trunk/libraries/sd/SdFat/Sd2Card.h \- 
.PP
\fBSd2Card\fP class for V2 SD/SDHC cards\&.  

.SH SYNOPSIS
.br
.PP
\fC#include <Arduino\&.h>\fP
.br
\fC#include <SdFatConfig\&.h>\fP
.br
\fC#include <SdInfo\&.h>\fP
.br

.SS "Data Structures"

.in +1c
.ti -1c
.RI "class \fBSd2Card\fP"
.br
.RI "\fIRaw access to SD and SDHC flash memory cards\&. \fP"
.in -1c
.SS "Variables"

.in +1c
.ti -1c
.RI "uint8_t const \fBSPI_FULL_SPEED\fP = 0"
.br
.ti -1c
.RI "uint8_t const \fBSPI_DIV3_SPEED\fP = 1"
.br
.ti -1c
.RI "uint8_t const \fBSPI_HALF_SPEED\fP = 2"
.br
.ti -1c
.RI "uint8_t const \fBSPI_DIV6_SPEED\fP = 3"
.br
.ti -1c
.RI "uint8_t const \fBSPI_QUARTER_SPEED\fP = 4"
.br
.ti -1c
.RI "uint8_t const \fBSPI_EIGHTH_SPEED\fP = 6"
.br
.ti -1c
.RI "uint8_t const \fBSPI_SIXTEENTH_SPEED\fP = 8"
.br
.ti -1c
.RI "const uint8_t \fBMAX_SCK_RATE_ID\fP = 14"
.br
.ti -1c
.RI "uint16_t const \fBSD_INIT_TIMEOUT\fP = 2000"
.br
.ti -1c
.RI "uint16_t const \fBSD_ERASE_TIMEOUT\fP = 10000"
.br
.ti -1c
.RI "uint16_t const \fBSD_READ_TIMEOUT\fP = 300"
.br
.ti -1c
.RI "uint16_t const \fBSD_WRITE_TIMEOUT\fP = 600"
.br
.ti -1c
.RI "uint8_t const \fBSD_CARD_ERROR_CMD0\fP = 0X1"
.br
.ti -1c
.RI "uint8_t const \fBSD_CARD_ERROR_CMD8\fP = 0X2"
.br
.ti -1c
.RI "uint8_t const \fBSD_CARD_ERROR_CMD12\fP = 0X3"
.br
.ti -1c
.RI "uint8_t const \fBSD_CARD_ERROR_CMD17\fP = 0X4"
.br
.ti -1c
.RI "uint8_t const \fBSD_CARD_ERROR_CMD18\fP = 0X5"
.br
.ti -1c
.RI "uint8_t const \fBSD_CARD_ERROR_CMD24\fP = 0X6"
.br
.ti -1c
.RI "uint8_t const \fBSD_CARD_ERROR_CMD25\fP = 0X7"
.br
.ti -1c
.RI "uint8_t const \fBSD_CARD_ERROR_CMD58\fP = 0X8"
.br
.ti -1c
.RI "uint8_t const \fBSD_CARD_ERROR_ACMD23\fP = 0X9"
.br
.ti -1c
.RI "uint8_t const \fBSD_CARD_ERROR_ACMD41\fP = 0XA"
.br
.ti -1c
.RI "uint8_t const \fBSD_CARD_ERROR_BAD_CSD\fP = 0XB"
.br
.ti -1c
.RI "uint8_t const \fBSD_CARD_ERROR_ERASE\fP = 0XC"
.br
.ti -1c
.RI "uint8_t const \fBSD_CARD_ERROR_ERASE_SINGLE_BLOCK\fP = 0XD"
.br
.ti -1c
.RI "uint8_t const \fBSD_CARD_ERROR_ERASE_TIMEOUT\fP = 0XE"
.br
.ti -1c
.RI "uint8_t const \fBSD_CARD_ERROR_READ\fP = 0XF"
.br
.ti -1c
.RI "uint8_t const \fBSD_CARD_ERROR_READ_REG\fP = 0X10"
.br
.ti -1c
.RI "uint8_t const \fBSD_CARD_ERROR_READ_TIMEOUT\fP = 0X11"
.br
.ti -1c
.RI "uint8_t const \fBSD_CARD_ERROR_STOP_TRAN\fP = 0X12"
.br
.ti -1c
.RI "uint8_t const \fBSD_CARD_ERROR_WRITE\fP = 0X13"
.br
.ti -1c
.RI "uint8_t const \fBSD_CARD_ERROR_WRITE_BLOCK_ZERO\fP = 0X14"
.br
.ti -1c
.RI "uint8_t const \fBSD_CARD_ERROR_WRITE_MULTIPLE\fP = 0X15"
.br
.ti -1c
.RI "uint8_t const \fBSD_CARD_ERROR_WRITE_PROGRAMMING\fP = 0X16"
.br
.ti -1c
.RI "uint8_t const \fBSD_CARD_ERROR_WRITE_TIMEOUT\fP = 0X17"
.br
.ti -1c
.RI "uint8_t const \fBSD_CARD_ERROR_SCK_RATE\fP = 0X18"
.br
.ti -1c
.RI "uint8_t const \fBSD_CARD_ERROR_INIT_NOT_CALLED\fP = 0X19"
.br
.ti -1c
.RI "uint8_t const \fBSD_CARD_ERROR_CMD59\fP = 0X1A"
.br
.ti -1c
.RI "uint8_t const \fBSD_CARD_ERROR_READ_CRC\fP = 0X1B"
.br
.ti -1c
.RI "uint8_t const \fBSD_CARD_ERROR_SPI_DMA\fP = 0X1C"
.br
.ti -1c
.RI "uint8_t const \fBSD_CARD_TYPE_SD1\fP = 1"
.br
.ti -1c
.RI "uint8_t const \fBSD_CARD_TYPE_SD2\fP = 2"
.br
.ti -1c
.RI "uint8_t const \fBSD_CARD_TYPE_SDHC\fP = 3"
.br
.ti -1c
.RI "uint8_t const \fBSD_CHIP_SELECT_PIN\fP = SS"
.br
.in -1c
.SH "Detailed Description"
.PP 
\fBSd2Card\fP class for V2 SD/SDHC cards\&. 


.SH "Variable Documentation"
.PP 
.SS "const uint8_t MAX_SCK_RATE_ID = 14"
MAX rate test - see spiInit for a given chip for details 
.SS "uint8_t const SD_CARD_ERROR_ACMD23 = 0X9"
SET_WR_BLK_ERASE_COUNT failed 
.SS "uint8_t const SD_CARD_ERROR_ACMD41 = 0XA"
ACMD41 initialization process timeout 
.SS "uint8_t const SD_CARD_ERROR_BAD_CSD = 0XB"
card returned a bad CSR version field 
.SS "uint8_t const SD_CARD_ERROR_CMD0 = 0X1"
timeout error for command CMD0 (initialize card in SPI mode) 
.SS "uint8_t const SD_CARD_ERROR_CMD12 = 0X3"
card returned an error response for CMD12 (write stop) 
.SS "uint8_t const SD_CARD_ERROR_CMD17 = 0X4"
card returned an error response for CMD17 (read block) 
.SS "uint8_t const SD_CARD_ERROR_CMD18 = 0X5"
card returned an error response for CMD18 (read multiple block) 
.SS "uint8_t const SD_CARD_ERROR_CMD24 = 0X6"
card returned an error response for CMD24 (write block) 
.SS "uint8_t const SD_CARD_ERROR_CMD25 = 0X7"
WRITE_MULTIPLE_BLOCKS command failed 
.SS "uint8_t const SD_CARD_ERROR_CMD58 = 0X8"
card returned an error response for CMD58 (read OCR) 
.SS "uint8_t const SD_CARD_ERROR_CMD59 = 0X1A"
card returned an error for CMD59 (CRC_ON_OFF) 
.SS "uint8_t const SD_CARD_ERROR_CMD8 = 0X2"
CMD8 was not accepted - not a valid SD card 
.SS "uint8_t const SD_CARD_ERROR_ERASE = 0XC"
erase block group command failed 
.SS "uint8_t const SD_CARD_ERROR_ERASE_SINGLE_BLOCK = 0XD"
card not capable of single block erase 
.SS "uint8_t const SD_CARD_ERROR_ERASE_TIMEOUT = 0XE"
Erase sequence timed out 
.SS "uint8_t const SD_CARD_ERROR_INIT_NOT_CALLED = 0X19"
init() not called 
.SS "uint8_t const SD_CARD_ERROR_READ = 0XF"
card returned an error token instead of read data 
.SS "uint8_t const SD_CARD_ERROR_READ_CRC = 0X1B"
invalid read CRC 
.SS "uint8_t const SD_CARD_ERROR_READ_REG = 0X10"
read \fBCID\fP or CSD failed 
.SS "uint8_t const SD_CARD_ERROR_READ_TIMEOUT = 0X11"
timeout while waiting for start of read data 
.SS "uint8_t const SD_CARD_ERROR_SCK_RATE = 0X18"
incorrect rate selected 
.SS "uint8_t const SD_CARD_ERROR_SPI_DMA = 0X1C"
SPI DMA error 
.SS "uint8_t const SD_CARD_ERROR_STOP_TRAN = 0X12"
card did not accept STOP_TRAN_TOKEN 
.SS "uint8_t const SD_CARD_ERROR_WRITE = 0X13"
card returned an error token as a response to a write operation 
.SS "uint8_t const SD_CARD_ERROR_WRITE_BLOCK_ZERO = 0X14"
attempt to write protected block zero 
.SS "uint8_t const SD_CARD_ERROR_WRITE_MULTIPLE = 0X15"
card did not go ready for a multiple block write 
.SS "uint8_t const SD_CARD_ERROR_WRITE_PROGRAMMING = 0X16"
card returned an error to a CMD13 status check after a write 
.SS "uint8_t const SD_CARD_ERROR_WRITE_TIMEOUT = 0X17"
timeout occurred during write programming 
.SS "uint8_t const SD_CARD_TYPE_SD1 = 1"
Standard capacity V1 SD card 
.SS "uint8_t const SD_CARD_TYPE_SD2 = 2"
Standard capacity V2 SD card 
.SS "uint8_t const SD_CARD_TYPE_SDHC = 3"
High Capacity SD card 
.SS "uint8_t const SD_CHIP_SELECT_PIN = SS"
define SOFTWARE_SPI to use bit-bang SPIThe default chip select pin for the SD card is SS\&. 
.SS "uint16_t const SD_ERASE_TIMEOUT = 10000"
erase timeout ms 
.SS "uint16_t const SD_INIT_TIMEOUT = 2000"
init timeout ms 
.SS "uint16_t const SD_READ_TIMEOUT = 300"
read timeout ms 
.SS "uint16_t const SD_WRITE_TIMEOUT = 600"
write time out ms 
.SS "uint8_t const SPI_DIV3_SPEED = 1"
Set SCK rate to F_CPU/3 for Due 
.SS "uint8_t const SPI_DIV6_SPEED = 3"
Set SCK rate to F_CPU/6 for Due 
.SS "uint8_t const SPI_EIGHTH_SPEED = 6"
Set SCK rate to F_CPU/16\&. See \fBSd2Card::setSckRate()\fP\&. 
.SS "uint8_t const SPI_FULL_SPEED = 0"
Set SCK to max rate of F_CPU/2\&. See \fBSd2Card::setSckRate()\fP\&. 
.SS "uint8_t const SPI_HALF_SPEED = 2"
Set SCK rate to F_CPU/4\&. See \fBSd2Card::setSckRate()\fP\&. 
.SS "uint8_t const SPI_QUARTER_SPEED = 4"
Set SCK rate to F_CPU/8\&. See \fBSd2Card::setSckRate()\fP\&. 
.SS "uint8_t const SPI_SIXTEENTH_SPEED = 8"
Set SCK rate to F_CPU/32\&. See \fBSd2Card::setSckRate()\fP\&. 
.SH "Author"
.PP 
Generated automatically by Doxygen for My Project from the source code\&.
